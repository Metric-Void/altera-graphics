
final_project.elf:     file format elf32-littlenios2
final_project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000238

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x00025f74 memsz 0x00025f74 flags r-x
    LOAD off    0x00026f94 vaddr 0x10025f94 paddr 0x10028490 align 2**12
         filesz 0x000024fc memsz 0x000024fc flags rw-
    LOAD off    0x0002998c vaddr 0x1002a98c paddr 0x1002a98c align 2**12
         filesz 0x00000000 memsz 0x000001a4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00024390  10000238  10000238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000019cc  100245c8  100245c8  000255c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000024fc  10025f94  10028490  00026f94  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000001a4  1002a98c  1002a98c  0002998c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00029490  2**0
                  CONTENTS
  7 .sdram        00000000  1002ab30  1002ab30  00029490  2**0
                  CONTENTS
  8 .comment      0000002c  00000000  00000000  00029490  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00002a58  00000000  00000000  000294c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000be835  00000000  00000000  0002bf18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0001d04f  00000000  00000000  000ea74d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00035d88  00000000  00000000  0010779c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00008094  00000000  00000000  0013d524  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0001fefa  00000000  00000000  001455b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00050ab9  00000000  00000000  001654b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  001b5f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 0000a578  00000000  00000000  001b5fd0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  001d1dc4  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  001d1dc7  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  001d1dd3  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  001d1dd4  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  001d1dd5  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  001d1dd9  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  001d1ddd  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  001d1de1  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  001d1dec  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  001d1df7  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000011  00000000  00000000  001d1e02  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000015  00000000  00000000  001d1e13  2**0
                  CONTENTS, READONLY
 30 .jdi          00006d84  00000000  00000000  001d1e28  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000238 l    d  .text	00000000 .text
100245c8 l    d  .rodata	00000000 .rodata
10025f94 l    d  .rwdata	00000000 .rwdata
1002a98c l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
1002ab30 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Lab7/final_project/software/final_project_bsp/obj/HAL/src/crt0.o
10000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 aesop.c
10028418 l     O .rwdata	00000001 CNST_AES_NB
10028419 l     O .rwdata	00000001 CNST_AES_NR
1002841a l     O .rwdata	00000001 CNST_AES_NK
00000000 l    df *ABS*	00000000 core.c
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 logic.c
100265d4 l     O .rwdata	000000e1 GAME_BOARDS
10001dd8 l     F .text	00000030 is_over
10001eb4 l     F .text	0000005c stack_pop
10001f10 l     F .text	00000028 stack_isempty
00000000 l    df *ABS*	00000000 main.c
100266b5 l     O .rwdata	000000e1 GAME_BOARDS
1002a98c l     O .bss	00000002 ctl_reg.3882
1002a98e l     O .bss	00000002 no_device.3883
00000000 l    df *ABS*	00000000 tile_eng_driver.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 updater.cpp
10026796 l     O .rwdata	000000e1 _ZL11GAME_BOARDS
1002841b l     O .rwdata	00000001 _ZStL19piecewise_construct
10005eb4 l     F .text	00000074 _Z41__static_initialization_and_destruction_0ii
10005f28 l     F .text	00000030 _GLOBAL__sub_I_workset
10005f58 l     F .text	00000030 _GLOBAL__sub_D_workset
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 new_handler.cc
1002a990 l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
10008218 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
10008454 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
100084dc l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
100086c4 l     F .text	00000094 _ZL15get_ttype_entryP16lsda_header_infom
10008758 l     F .text	000000a0 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
100087f8 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
10008868 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_alloc.cc
10009138 l     F .text	000000ec _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
1002a9e8 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
10009224 l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
100093f0 l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 tree.cc
10009454 l     F .text	00000064 _ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base
00000000 l    df *ABS*	00000000 functexcept.cc
00000000 l    df *ABS*	00000000 snprintf_lite.cc
00000000 l    df *ABS*	00000000 cow-stdexcept.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
1002a994 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 stdexcept.cc
00000000 l    df *ABS*	00000000 sso_string.cc
00000000 l    df *ABS*	00000000 cow-string-inst.cc
1000e320 l     F .text	0000009c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag.part.22
1000e320 l     F .text	0000009c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25
1000e3c0 l     F .text	00000018 _ZNSs4_Rep10_M_disposeERKSaIcE.part.12
00000000 l    df *ABS*	00000000 string-inst.cc
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
10014064 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
1002a99c l     O .bss	00000004 fc_static
10014178 l     F .text	000000d8 _Unwind_RaiseException_Phase2
10014250 l     F .text	00000024 uw_install_context.isra.4
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 impure.c
10026878 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
10015c48 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
10015e88 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtoul.c
10016444 l     F .text	00000250 _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 vfprintf.c
10018840 l     F .text	000000c0 __sbprintf
10025a6a l     O .rodata	00000010 blanks.5226
10025a5a l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 dtoa.c
10018b1c l     F .text	00000210 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1001a6a4 l     F .text	00000008 __fp_lock
1001a6b8 l     F .text	00000168 __sinit.part.0
1001a820 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
10025d0c l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001cd14 l     F .text	000000f4 __sprint_r.part.0
1001e164 l     F .text	000000c0 __sbprintf
10025e40 l     O .rodata	00000010 blanks.5203
10025e30 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
10021b40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
10021c4c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
10021cac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
10021db8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
10021e98 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10022000 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
100220ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
100222c0 l     F .text	0000003c alt_get_errno
100222fc l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
10022508 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10028480 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
10022778 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
100228ac l     F .text	00000034 alt_dev_reg
100273b8 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
10022b9c l     F .text	00000204 altera_avalon_jtag_uart_irq
10022da0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
100233dc l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1002376c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
10023e0c l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
1002a9cc g     O .bss	00000004 alt_instruction_exception_handler
100110a4  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv
10009354 g     F .text	00000028 __cxa_free_exception
10000f28 g     F .text	00000290 screen_test
1000fe58  w    F .text	0000003c _ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
1000ff24  w    F .text	00000074 _ZNSsC2ERKSsjj
10015ae0 g     F .text	00000018 putchar
1000c9dc g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
1001c384 g     F .text	00000074 _mprec_log10
100081c4 g     F .text	00000014 _ZSt10unexpectedv
10007800  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10010818  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
100048fc g     F .text	000000d4 writeSprite
10009db4 g     F .text	00000034 _ZSt18__throw_bad_typeidv
1001c464 g     F .text	00000074 __any_on
1001b4c0 g     F .text	00000058 _isatty_r
10025d18 g     O .rodata	00000028 __mprec_tinytens
1001274c  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj
1000cf7c g     F .text	00000030 _ZNSt14overflow_errorC1ERKSs
1000ac38 g     F .text	00000010 _ZNSt12__cow_stringC1Ev
100221fc g     F .text	0000007c alt_main
10010820  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
10015af8 g     F .text	000000cc _puts_r
10011fa4  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj
10006fc0  w    F .text	00000030 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
1002aa30 g     O .bss	00000100 alt_irq
1000c604 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
1000bc80 g     F .text	00000008 _ZGTtNKSt13runtime_error4whatEv
10011e30  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj
10028450  w    O .rwdata	00000004 _ZNSs4nposE
1000c098 g     F .text	000000e0 _ZGTtNSt15underflow_errorC2EPKc
1001b538 g     F .text	00000064 _lseek_r
1000ed30  w    F .text	000000e4 _ZNSs6assignEPKcj
1000d958  w    F .text	00000090 _ZNKSs13find_first_ofEPKcjj
10013074  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj
100142f4 g     F .text	00000020 .hidden _Unwind_GetIPInfo
10010480  w    F .text	00000010 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj
10012058  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_
10028490 g       *ABS*	00000000 __flash_rwdata_start
10013d94  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj
10012514  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE
1001a9e8 g     F .text	000000a4 __sflags
1002065c g     F .text	00000080 .hidden __eqdf2
1000b270 g     F .text	000000e0 _ZGTtNSt12domain_errorC1EPKc
1000aa90 g     F .text	00000030 _ZNSt12length_errorC2EPKc
10010830  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj
10008378 g     F .text	00000084 __cxa_rethrow
1001428c g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
1000d48c  w    F .text	00000018 _ZNKSs6rbeginEv
100081f8 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
10007a44  w    F .text	00000054 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_
1000dfb8  w    F .text	000000b0 _ZNKSs7compareEjjPKc
1000fdb0  w    F .text	000000a8 _ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag
1000d3a8  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_
100142e4 g     F .text	00000010 .hidden _Unwind_GetIP
1002ab30 g       *ABS*	00000000 __alt_heap_start
10011694  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE
1000b034 g     F .text	00000004 _Z23_txnal_cow_string_c_strPKv
1000ce44 g     F .text	00000030 _ZNSt12length_errorC1ERKSs
10016130 g     F .text	00000060 _kill_r
1000d2cc  w    F .text	00000030 _ZNKSs15_M_check_lengthEjjPKc
1000e6c4  w    F .text	00000038 _ZNSs5beginEv
1000840c g     F .text	00000010 _ZNSt9bad_allocD2Ev
10015aa0 g     F .text	00000038 printf
1000d4e4  w    F .text	00000010 _ZNKSs5crendEv
10013a34  w    F .text	000000f8 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
1000792c  w    F .text	00000038 _ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000f098  w    F .text	0000000c _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE
1001e810 g     F .text	0000006c _wcrtomb_r
1000b85c g     F .text	0000002c _ZGTtNSt12length_errorD0Ev
1000eefc  w    F .text	0000019c _ZNSs6insertEjPKcj
10015ee8 g     F .text	00000084 _signal_r
1000be5c g     F .text	00000008 _ZGTtNSt11range_errorD2Ev
10025680  w    O .rodata	00000013 _ZTSSt14overflow_error
100064cc  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC2Ev
1000d570  w    F .text	00000014 _ZNKSs4backEv
10016270 g     F .text	0000005c __sseek
1001a9a0 g     F .text	00000010 __sinit
1001e224 g     F .text	00000148 __swbuf_r
10006f8c  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2EPKSt18_Rb_tree_node_base
100113c0  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
100093c4 g     F .text	0000002c __cxa_free_dependent_exception
1000c2f8 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
1001e730 g     F .text	00000070 _setlocale_r
10025318  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
10013570  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_
1001a828 g     F .text	00000068 __sfmoreglue
1000b760 g     F .text	000000f4 _ZGTtNSt12length_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1002229c g     F .text	00000024 __malloc_unlock
1000a7d4 g     F .text	00000070 _ZNSt11logic_errorC1ERKS_
1000c098 g     F .text	000000e0 _ZGTtNSt15underflow_errorC1EPKc
1000c604 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
10007538  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base
1000e068  w    F .text	00000094 _ZNKSs7compareEjjPKcj
100104c0  w    F .text	00000060 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc
1000ab9c g     F .text	00000030 _ZNSt11range_errorC2EPKc
1000809c g     F .text	00000020 _ZSt18uncaught_exceptionv
1001213c  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc
100256b4  w    O .rodata	0000000c _ZTISt15underflow_error
10010854  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
10012e68  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj
1000aac0 g     F .text	00000030 _ZNSt12out_of_rangeC2EPKc
1000e2d0  w    F .text	00000040 _ZNSsC1EjcRKSaIcE
1000e3fc  w    F .text	00000044 _ZNSsD2Ev
10005b5c g     F .text	00000080 UsbGetRetryCnt
10006ff0  w    F .text	000001a0 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_
10007e70  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED2Ev
1000c644 g     F .text	00000020 __cxa_deleted_virtual
10011114  w    F .text	00000100 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
10012eb8  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
1000f918  w    F .text	000000a8 _ZNSspLEc
10012798  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj
1000d010 g     F .text	00000014 _ZNSt12__sso_stringC2EPKcj
1000b234 g     F .text	00000008 _ZGTtNSt11logic_errorD1Ev
10013428  w    F .text	000000b4 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc
100157f0 g     F .text	0000012c memmove
100011b8 g     F .text	00000088 IO_init
100064cc  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000d100 g     F .text	00000018 _ZNSt12__sso_stringD2Ev
1000cfdc g     F .text	00000014 _ZNSt12__sso_stringC1Ev
1000c5d4 g     F .text	00000004 _ZNSt9exceptionD2Ev
1001a98c g     F .text	00000014 _cleanup
10011794  w    F .text	0000013c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
10010434  w    F .text	0000004c _ZNSs7replaceEjjPKc
100046d8 g     F .text	000000c4 writePalette
1001b59c g     F .text	000000a4 _Balloc
1000d8bc  w    F .text	0000000c _ZNKSs5rfindERKSsj
10011e58  w    F .text	00000038 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE
1000d3cc  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_
1001107c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
1000f104  w    F .text	00000040 _ZNSs6insertEjPKc
10025624  w    O .rodata	00000011 _ZTSSt12out_of_range
10007438  w    F .text	0000003c _ZNKSt4lessI9TileGroupEclERKS0_S3_
100254b8  w    O .rodata	0000000c _ZTISt8bad_cast
100074f0  w    F .text	00000048 _ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv
1000eec0  w    F .text	00000038 _ZNSsaSEPKc
10013d0c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_
10006e78  w    F .text	00000024 _ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE
100076c0  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000b078 g     F .text	000000d4 _ZGTtNSt11logic_errorC2EPKc
1000ac48 g     F .text	00000004 _ZNSt12__cow_stringC2ERKSs
100206dc g     F .text	000000f0 .hidden __gtdf2
10025424  w    O .rodata	00000014 _ZTVSt13bad_exception
100240dc g     F .text	00000024 altera_nios2_gen2_irq_init
1000951c g     F .text	00000004 _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
10010f48  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
10005e80 g     F .text	00000034 clearQueue
1000ccc4 g     F .text	00000034 _ZNSt14overflow_errorD0Ev
10007d80  w    F .text	00000060 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv
10011024  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10000000 g     F .entry	0000001c __reset
1001b518 g     F .text	00000008 __localeconv_l
1000b680 g     F .text	000000e0 _ZGTtNSt12length_errorC2EPKc
1000b558 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10028448  w    O .rwdata	00000001 _ZNSs4_Rep11_S_terminalE
1000ccb4 g     F .text	00000010 _ZNSt14overflow_errorD2Ev
10014330 g     F .text	00000008 .hidden _Unwind_GetRegionStart
1000d584  w    F .text	00000088 _ZNKSs4copyEPcjj
1000abfc g     F .text	00000030 _ZNSt15underflow_errorC1EPKc
10000020 g       *ABS*	00000000 __flash_exceptions_start
100122dc  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE
1000cba0 g     F .text	00000010 _ZNSt12out_of_rangeD2Ev
100109b8  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc
100245c8 g     O .rodata	00000100 aes_sbox
10014b34 g     F .text	00000060 _fstat_r
10006d3c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC2ERS6_
1000e3d8  w    F .text	00000024 _ZNSs4_Rep10_M_disposeERKSaIcE
1002a9a0 g     O .bss	00000004 errno
1000ec64  w    F .text	00000018 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc
10000e80 g     F .text	000000a8 transpose
100161e8 g     F .text	00000008 __seofread
10006d70  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_
10006494  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv
1000df44  w    F .text	00000074 _ZNKSs7compareEPKc
1000f9f4  w    F .text	0000005c _ZNSsC1ERKSs
1000b654 g     F .text	0000002c _ZGTtNSt16invalid_argumentD0Ev
10007af0  w    F .text	0000003c _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j
10014504 g     F .text	00000088 .hidden _Unwind_Backtrace
10006d14  w    F .text	00000028 _ZNKSt9_IdentityI9TileGroupEclERKS0_
10011470  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
1002a9b8 g     O .bss	00000004 alt_argv
1000ecb4  w    F .text	0000007c _ZNSs15_M_replace_safeEjjPKcj
10025f94 g     O .rwdata	00000600 gf_mul
10013c04  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jRKS3_
10005c5c g     F .text	00000058 addToSet
10030418 g       *ABS*	00000000 _gp
10022748 g     F .text	00000030 usleep
10013c4c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj
1000c6d8 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
1000ccb4 g     F .text	00000010 _ZNSt14overflow_errorD1Ev
100069cc  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base
10007580  w    F .text	00000050 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_
10012ea8  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj
1000c684 g     F .text	00000038 _ZNSt8bad_castD0Ev
10001f38 g     F .text	0000094c blinkys_move
10021d98 g     F .text	00000020 getpid
1000e110  w    F .text	0000000c _ZNKSs4_Rep12_M_is_leakedEv
10012f90  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj
10008fb8 g     F .text	00000180 __cxa_call_unexpected
10007f38 g     F .text	00000008 __cxa_get_exception_ptr
10013578  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_
10006b60  w    F .text	000001b4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_
10010608  w    F .text	0000003c _ZNSsC2ESt16initializer_listIcERKSaIcE
1000d024 g     F .text	0000007c _ZNSt12__sso_stringC2ERKS_
10027238 g     O .rwdata	00000180 alt_fd_list
1000cb5c g     F .text	00000010 _ZNSt12length_errorD2Ev
10013d20  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
1000aa60 g     F .text	00000030 _ZNSt16invalid_argumentC1EPKc
10006804  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10013a14  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
10005fb0  w    F .text	0000003c _ZNSt15_Rb_tree_headerC2Ev
10025710  w    O .rodata	00000014 _ZTVSt12out_of_range
10015ad8 g     F .text	00000008 _putchar_r
10014418 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
1000d118 g     F .text	00000078 _ZNSt12__sso_stringC1EOS_
100142b4 g     F .text	00000018 .hidden _Unwind_GetCFA
100081d8 g     F .text	00000014 _ZSt13set_terminatePFvvE
1002390c g     F .text	00000090 alt_find_dev
100156f0 g     F .text	00000100 memcpy
1000d44c  w    F .text	00000010 _ZNSsC2Ev
100118d0  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc
1000937c g     F .text	00000048 __cxa_allocate_dependent_exception
10005e24 g     F .text	0000005c hasRemain
10010644  w    F .text	0000003c _ZNSsC1IPKcEET_S2_RKSaIcE
1001a6ac g     F .text	0000000c _cleanup_r
1000c788 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
10021988 g     F .text	000000c8 .hidden __floatsidf
10010d44  w    F .text	00000084 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
10023ebc g     F .text	0000007c alt_io_redirect
100207cc g     F .text	000000f0 .hidden __ltdf2
10025738  w    O .rodata	00000014 _ZTVSt11range_error
1000cbe4 g     F .text	00000064 _ZNSt13runtime_errorD2Ev
100075d0  w    F .text	00000024 _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
1000a238 g     F .text	000000ac _ZSt21__throw_runtime_errorPKc
100245c8 g       *ABS*	00000000 __DTOR_END__
1000d8c8  w    F .text	00000040 _ZNKSs5rfindEPKcj
1000cd3c g     F .text	000000a8 _ZNSt11logic_errorC2ERKSs
1000c7a0 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
100256e8  w    O .rodata	00000014 _ZTVSt16invalid_argument
1000da34  w    F .text	00000010 _ZNKSs13find_first_ofEcj
10010690  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_
10015bc4 g     F .text	00000010 puts
10024190 g     F .text	00000098 alt_exception_cause_generated_bad_addr
1000faf4  w    F .text	00000100 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
1000bc4c g     F .text	00000008 _ZGTtNSt13runtime_errorD1Ev
1000cf4c g     F .text	00000030 _ZNSt11range_errorC2ERKSs
1000d6a0  w    F .text	000000d8 _ZNKSs4findEPKcjj
1000b558 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100108a8  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
1000d190 g     F .text	000000d4 _ZNSt12__sso_stringaSEOS_
1001c2dc g     F .text	000000a8 __ratio
1000faf0  w    F .text	00000004 _ZNSsaSERKSs
1000b23c g     F .text	0000002c _ZGTtNSt11logic_errorD0Ev
10025638  w    O .rodata	0000000c _ZTISt12out_of_range
1001e14c g     F .text	00000018 __vfiprintf_internal
10012d30  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j
10007844  w    F .text	00000058 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi
10012dcc  w    F .text	00000090 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj
100108c0  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj
100100c0  w    F .text	0000003c _ZNSsC2EPKcjRKSaIcE
1000bc4c g     F .text	00000008 _ZGTtNSt13runtime_errorD2Ev
10022f9c g     F .text	0000021c altera_avalon_jtag_uart_read
10014d68 g     F .text	00000010 malloc
10015a70 g     F .text	00000030 _printf_r
1000627c  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED2Ev
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10013fa4 g     F .text	00000064 .hidden __udivsi3
1000ee3c  w    F .text	0000004c _ZNSs6assignERKSsjj
10021df4 g     F .text	000000a4 isatty
100125f4  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj
10015f6c g     F .text	000000bc _raise_r
1000d2fc  w    F .text	00000018 _ZNKSs8_M_limitEjj
10025d68 g     O .rodata	000000c8 __mprec_tens
1000a390 g     F .text	000000ac _ZSt22__throw_overflow_errorPKc
10006380  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv
1000ce74 g     F .text	00000030 _ZNSt12out_of_rangeC2ERKSs
100110f8  w    F .text	0000001c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv
1000d374  w    F .text	00000034 _ZNSs9_M_assignEPcjc
10006a64  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
100065e0  w    F .text	00000024 _ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE
10011aec  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc
10024100 g     F .text	00000090 alt_icache_flush
1000d4f4  w    F .text	0000000c _ZNKSs4sizeEv
10012afc  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv
1002a9ac g     O .bss	00000004 __malloc_top_pad
100051e8 g     F .text	00000268 UsbGetConfigDesc2
10007b2c  w    F .text	0000003c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv
10016190 g     F .text	00000004 _getpid_r
1000a984 g     F .text	000000ac _ZNSt11logic_errorC2EPKc
1000b14c g     F .text	000000e8 _ZGTtNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100166b0 g     F .text	00000018 strtoul
100079a0  w    F .text	00000044 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j
10006efc  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base
1000f6c0  w    F .text	00000038 _ZNSs6appendEPKc
10012af4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
1000bd68 g     F .text	000000f4 _ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001b520 g     F .text	0000000c _localeconv_r
100092cc g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
100080bc g     F .text	0000001c _ZSt19uncaught_exceptionsv
1001b99c g     F .text	00000034 __i2b
1001aea4 g     F .text	000004c4 __sfvwrite_r
10013244  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_
1000c920 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
10016028 g     F .text	000000b8 __sigtramp_r
1000d284  w    F .text	00000008 _ZNKSs9_M_ibeginEv
1000cea4 g     F .text	000000a8 _ZNSt13runtime_errorC2ERKSs
1000da44  w    F .text	0000008c _ZNKSs12find_last_ofEPKcjj
100127c4  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
1000be64 g     F .text	0000002c _ZGTtNSt11range_errorD0Ev
10015e30 g     F .text	00000058 _sbrk_r
1000ffe4  w    F .text	00000074 _ZNSsC2ERKSsjjRKSaIcE
1000fec0  w    F .text	00000064 _ZNSsC1ERKSsjRKSaIcE
1000c5dc g     F .text	0000000c _ZGTtNKSt9exception4whatEv
1000f86c  w    F .text	00000008 _ZNSs6resizeEj
10025584  w    O .rodata	00000020 _ZTVSt9type_info
10007964  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_
100255e0  w    O .rodata	00000015 _ZTSSt16invalid_argument
10009d4c g     F .text	00000034 _ZSt17__throw_bad_allocv
100106a0 g     F .text	000000a4 _ZNSt13random_device7_M_initERKSs
1000b270 g     F .text	000000e0 _ZGTtNSt12domain_errorC2EPKc
1001c684 g     F .text	00000064 _read_r
1000c5dc g     F .text	0000000c _ZNKSt9exception4whatEv
1000f0a4  w    F .text	00000060 _ZNSs6insertEjRKSsjj
100119dc  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc
1000b078 g     F .text	000000d4 _ZGTtNSt11logic_errorC1EPKc
10007764  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC2IS2_S2_Lb1EEEOT_OT0_
10028478 g     O .rwdata	00000004 alt_max_fd
1001e438 g     F .text	000000f8 _fclose_r
10025280  w    O .rodata	0000000c _ZTISt9bad_alloc
1000d278  w    F .text	0000000c _ZNKSs6_M_repEv
1001a67c g     F .text	00000028 fflush
10006524  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002a9a8 g     O .bss	00000004 __malloc_max_sbrked_mem
1000e974  w    F .text	00000050 _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE
10011f58  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
1000b64c g     F .text	00000008 _ZGTtNSt16invalid_argumentD1Ev
1000fa50  w    F .text	000000a0 _ZNSs6assignERKSs
10007b68  w    F .text	0000016c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_
1000aa90 g     F .text	00000030 _ZNSt12length_errorC1EPKc
10002c74 g     F .text	00000088 gbPalette
10011f04  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj
1000b234 g     F .text	00000008 _ZGTtNSt11logic_errorD2Ev
10009ce4 g     F .text	00000034 _ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_
1000d660  w    F .text	00000028 _ZNSs6assignEOSs
1001f414 g     F .text	000009a0 .hidden __adddf3
1002534c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
100061f8  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev
10006188  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC2Ev
1000e3fc  w    F .text	00000044 _ZNSsD1Ev
1001c090 g     F .text	00000104 __b2d
10010a18  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj
1000b03c g     F .text	0000002c _Z20_txnal_cow_string_D1Pv
100069a8  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000ac38 g     F .text	00000010 _ZNSt12__cow_stringC2Ev
1000c674 g     F .text	00000010 _ZNSt8bad_castD1Ev
1001eed4 g     F .text	00000540 .hidden __umoddi3
1000ec7c  w    F .text	00000038 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc
10022128 g     F .text	000000d4 lseek
10012278  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_
10006a64  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
1000e748  w    F .text	00000048 _ZNSs3endEv
1000cfdc g     F .text	00000014 _ZNSt12__sso_stringC2Ev
1000c8b4 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
100256c0  w    O .rodata	00000014 _ZTVSt11logic_error
100083fc g     F .text	00000004 _ZdlPv
1000cb6c g     F .text	00000034 _ZNSt12length_errorD0Ev
10028458 g     O .rwdata	00000004 _global_impure_ptr
1001c6e8 g     F .text	0000062c _realloc_r
1000a648 g     F .text	00000150 _ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv
10006248  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002ab30 g       *ABS*	00000000 __bss_end
10007f2c g     F .text	0000000c _ZSt15get_new_handlerv
10023d28 g     F .text	000000e4 alt_iic_isr_register
10023fd4 g     F .text	00000108 alt_tick
10014274 g     F .text	00000018 .hidden _Unwind_SjLj_Register
10012b0c  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
10013e3c  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_
1000c178 g     F .text	000000f4 _ZGTtNSt15underflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001e93c g     F .text	00000598 .hidden __udivdi3
10011b04  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc
10010828  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj
1002574c  w    O .rodata	00000014 _ZTVSt14overflow_error
1000ac2c g     F .text	0000000c _ZNSt12__sso_stringC2ERKSs
1001e690 g     F .text	00000024 _fputwc_r
10009fec g     F .text	000000ac _ZSt20__throw_length_errorPKc
10009518 g     F .text	00000004 _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
10025d40 g     O .rodata	00000028 __mprec_bigtens
1001b778 g     F .text	00000110 __s2b
1000abcc g     F .text	00000030 _ZNSt14overflow_errorC2EPKc
1001458c g     F .text	00000018 abort
10012b04  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv
10021a50 g     F .text	0000009c .hidden __floatunsidf
1000d29c  w    F .text	00000030 _ZNKSs8_M_checkEjPKc
1000f190  w    F .text	00000024 _ZNSs4_Rep10_M_refcopyEv
1001be20 g     F .text	00000058 __mcmp
10006734  w    F .text	00000024 _ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE
10004c38 g     F .text	00000100 UsbSetAddress
10007fec g     F .text	000000b0 __cxa_end_catch
100069a8  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC2Ev
10012340  w    F .text	0000006c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_
1001a9c0 g     F .text	00000014 __fp_lock_all
1000c274 g     F .text	0000002c _ZGTtNSt15underflow_errorD0Ev
10023cdc g     F .text	0000004c alt_ic_irq_enabled
10011374  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
100065b8  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv
1000c5d8 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
10010608  w    F .text	0000003c _ZNSsC1ESt16initializer_listIcERKSaIcE
10000dc0 g     F .text	000000c0 add_round_key
10023f38 g     F .text	0000009c alt_alarm_stop
1001098c  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc
1000e11c  w    F .text	0000000c _ZNKSs4_Rep12_M_is_sharedEv
1000d264  w    F .text	00000008 _ZNKSs7_M_dataEv
1002a9c0 g     O .bss	00000004 alt_irq_active
10013c4c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jj
10011340  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
100146c4 g     F .text	00000458 _fseeko_r
100081a0 g     F .text	00000014 _ZSt9terminatev
1000a144 g     F .text	000000f4 _ZSt24__throw_out_of_range_fmtPKcz
10012214  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_
1000ccf8 g     F .text	00000010 _ZNSt15underflow_errorD1Ev
10009f40 g     F .text	000000ac _ZSt24__throw_invalid_argumentPKc
1000627c  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev
100000fc g     F .exceptions	000000c8 alt_irq_handler
1000ee88  w    F .text	00000038 _ZNSs6assignEPKc
10027210 g     O .rwdata	00000028 alt_dev_null
1000f9c0  w    F .text	00000034 _ZNSs4_Rep7_M_grabERKSaIcES2_
1001109c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv
1000734c  w    F .text	0000007c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E
1000d568  w    F .text	00000008 _ZNKSs5frontEv
1000bc54 g     F .text	0000002c _ZGTtNSt13runtime_errorD0Ev
1000caac g     F .text	00000028 _ZNSt11logic_errorD0Ev
100100fc  w    F .text	000002ac _ZNSs7replaceEjjPKcj
1000c610 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
10011608  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj
10011eb8  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
1000abfc g     F .text	00000030 _ZNSt15underflow_errorC2EPKc
100073f0  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E
10010e80  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_RKS3_
1000a798 g     F .text	0000003c _Z27_txnal_cow_string_D1_commitPv
10012740  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
1000ac2c g     F .text	0000000c _ZNSt12__sso_stringC1ERKSs
10025518  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
10007cf8  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j
10006248  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev
10023724 g     F .text	00000048 alt_dcache_flush_all
1001b888 g     F .text	00000064 __hi0bits
10010e80  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_
10010a38  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj
10028424  w    O .rwdata	00000008 _ZTISt9exception
100012b4 g     F .text	00000068 IO_read
10021908 g     F .text	00000080 .hidden __fixdfsi
1000d4a4  w    F .text	00000010 _ZNKSs4rendEv
100103a8  w    F .text	00000024 _ZNSs7replaceEjjRKSs
1000c064 g     F .text	00000008 _ZGTtNSt14overflow_errorD1Ev
100108c8  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
10010df0  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EjcRKS3_
100079e4  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E
100133b4  w    F .text	00000074 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
10007e70  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev
1000f260  w    F .text	00000094 _ZNSs7reserveEj
1000b268 g     F .text	00000008 _ZGTtNKSt11logic_error4whatEv
10006524  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev
10007de0  w    F .text	00000068 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_
10028490 g       *ABS*	00000000 __ram_rwdata_end
1001097c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
1000c9d8 g     F .text	00000004 _ZNSt9type_infoD1Ev
1000d024 g     F .text	0000007c _ZNSt12__sso_stringC1ERKS_
10028470 g     O .rwdata	00000008 alt_dev_list
1000c610 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
100255c0  w    O .rodata	00000011 _ZTSSt12domain_error
100227b4 g     F .text	000000f8 write
1000a844 g     F .text	00000068 _ZNSt11logic_erroraSERKS_
1001c4d8 g     F .text	000000cc _putc_r
1000b854 g     F .text	00000008 _ZGTtNSt12length_errorD1Ev
10006b3c  w    F .text	00000024 _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
10007a98  w    F .text	00000030 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
10006420  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv
100075f4  w    F .text	00000024 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
1000e6fc  w    F .text	0000004c _ZNSs4rendEv
10010dc8  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
1000c9ec g     F .text	00000008 _ZNSt9type_infoD0Ev
10013d70  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ESt16initializer_listIcERKS3_
1000cbe4 g     F .text	00000064 _ZNSt13runtime_errorD1Ev
1000b680 g     F .text	000000e0 _ZGTtNSt12length_errorC1EPKc
10012bf0  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj
10025f94 g       *ABS*	00000000 __ram_rodata_end
1000c664 g     F .text	00000004 _ZdlPvj
100110ec  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
10021ce8 g     F .text	000000b0 fstat
10010b1c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj
1000e0fc  w    F .text	00000008 _ZNSs12_Alloc_hiderC2EPcRKSaIcE
10021ed4 g     F .text	0000012c kill
10010808  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj
1000ba90 g     F .text	000000d4 _ZGTtNSt13runtime_errorC1EPKc
1000cde4 g     F .text	00000030 _ZNSt12domain_errorC2ERKSs
100207cc g     F .text	000000f0 .hidden __ledf2
1000cde4 g     F .text	00000030 _ZNSt12domain_errorC1ERKSs
1000cad4 g     F .text	00000010 _ZNSt12domain_errorD1Ev
10010058  w    F .text	0000003c _ZNSsC2IPcEET_S1_RKSaIcE
10006154  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED2Ev
100063b4  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv
10005bdc g     F .text	00000080 UsbPrintMem
1001bbbc g     F .text	00000128 __pow5mult
1000fbf4  w    F .text	000000f0 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_
10005f88  w    F .text	00000028 _ZnwjPv
1000a568 g     F .text	000000e0 _ZN9__gnu_cxx15__concat_size_tEPcjj
1001ce20 g     F .text	0000132c ___vfiprintf_internal_r
1000cd08 g     F .text	00000034 _ZNSt15underflow_errorD0Ev
10014008 g     F .text	0000005c .hidden __umodsi3
1000c9e4 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
1000cc70 g     F .text	00000010 _ZNSt11range_errorD2Ev
10011064  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10007ac8  w    F .text	00000028 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_
1000bc88 g     F .text	000000e0 _ZGTtNSt11range_errorC1EPKc
10008280 g     F .text	00000064 __cxa_init_primary_exception
1000d784  w    F .text	00000040 _ZNKSs4findEPKcj
100081ec g     F .text	0000000c _ZSt13get_terminatev
1001195c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj
1000dcdc  w    F .text	0000000c _ZNKSs16find_last_not_ofERKSsj
1002ab30 g       *ABS*	00000000 end
1000cfac g     F .text	00000030 _ZNSt15underflow_errorC2ERKSs
100072c0  w    F .text	0000008c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E
10010a8c  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_
10014b1c g     F .text	00000018 fseeko
10010058  w    F .text	0000003c _ZNSsC1IPcEET_S1_RKSaIcE
1000d28c  w    F .text	00000010 _ZNKSs7_M_iendEv
10002ad0 g     F .text	0000006c blinkyPalette
100144ec g     F .text	00000018 .hidden _Unwind_DeleteException
10002fbc g     F .text	00000400 drawBoard
100146ac g     F .text	00000018 fseek
10022adc g     F .text	000000c0 altera_avalon_jtag_uart_init
100001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
10010f20  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
1000ac4c g     F .text	0000001c _ZNSt12__cow_stringC1EPKcj
1000cff0 g     F .text	00000020 _ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000db1c  w    F .text	00000010 _ZNKSs12find_last_ofEcj
1000d474  w    F .text	00000008 _ZNKSs5beginEv
1000c7e8 g     F .text	000000cc _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
10007190  w    F .text	00000028 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv
100245ba g       *ABS*	00000000 __CTOR_LIST__
10006758  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC2IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000f1b4  w    F .text	000000ac _ZNSs4_Rep8_M_cloneERKSaIcEj
1002a9f8  w    O .bss	00000010 _ZNSs4_Rep20_S_empty_rep_storageE
10023454 g     F .text	0000007c alt_avalon_timer_sc_init
1000ca40 g     F .text	00000008 _ZNKSt13runtime_error4whatEv
10021aec g     F .text	00000054 .hidden __clzsi2
10025658  w    O .rodata	0000000c _ZTISt13runtime_error
1000c710 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
100231b8 g     F .text	00000224 altera_avalon_jtag_uart_write
10010e08  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_
1001a9b0 g     F .text	00000004 __sfp_lock_acquire
100253ac  w    O .rodata	00000012 _ZTSSt13bad_exception
1001557c g     F .text	000000e8 memchr
100166c8 g     F .text	00002160 ___vfprintf_internal_r
100256fc  w    O .rodata	00000014 _ZTVSt12length_error
10006e9c  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC2IS2_bLb1EEEOT_OT0_
10005550 g     F .text	00000100 UsbClassRequest
1001aba8 g     F .text	000002fc _free_r
1000c668 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
1000de6c  w    F .text	000000d8 _ZNKSs7compareEjjRKSsjj
10007764  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_
10025b7b g     O .rodata	00000180 _ctype_b
10010574  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_
1001e7a0 g     F .text	0000000c __locale_mb_cur_max
1000e29c  w    F .text	00000034 _ZNSsC1ERKSaIcE
1000096c g     F .text	000000ac sub_word32
10012be4  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j
10024300 g     F .text	00000118 __call_exitprocs
10006154  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev
1000e134  w    F .text	00000008 _ZNSs4_Rep15_M_set_sharableEv
1000e860  w    F .text	00000048 _ZNSs4backEv
10000658 g     F .text	000001f0 key_expansion
100130c4  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj
1002844c  w    O .rwdata	00000004 _ZNSs4_Rep11_S_max_sizeE
1000cb18 g     F .text	00000010 _ZNSt16invalid_argumentD2Ev
100063e8  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_
10006038  w    F .text	0000003c _ZN9TileGroupC2E10__tile_col
1000cb5c g     F .text	00000010 _ZNSt12length_errorD1Ev
1000be90 g     F .text	000000e0 _ZGTtNSt14overflow_errorC1EPKc
1000d824  w    F .text	00000098 _ZNKSs5rfindEPKcjj
10028460 g     O .rwdata	00000004 __malloc_sbrk_base
10000238 g     F .text	0000004c _start
100255b4  w    O .rodata	0000000c _ZTISt11logic_error
1000d690  w    F .text	00000008 _ZNKSs4dataEv
1000a7d4 g     F .text	00000070 _ZNSt11logic_errorC2ERKS_
1002a9c4 g     O .bss	00000004 _alt_tick_rate
10013874  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
10006074  w    F .text	00000058 _ZN9TileGroupC2Ess
10009520 g     F .text	00000004 _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base
10000848 g     F .text	000000d8 shift_rows
10013570  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
10025574  w    O .rodata	0000000d _ZTSSt9type_info
1000d4bc  w    F .text	00000010 _ZNKSs4cendEv
1000d518  w    F .text	0000000c _ZNKSs8capacityEv
1000d26c  w    F .text	0000000c _ZNSs7_M_dataEPc
1000cfac g     F .text	00000030 _ZNSt15underflow_errorC1ERKSs
10008400 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
10015be8 g     F .text	00000060 rand
1000c624 g     F .text	00000020 __cxa_pure_virtual
1001bce4 g     F .text	0000013c __lshift
1002528c  w    O .rodata	00000014 _ZTVSt9bad_alloc
1002a9c8 g     O .bss	00000004 _alt_nticks
100160f0 g     F .text	00000014 signal
1000d4cc  w    F .text	00000018 _ZNKSs7crbeginEv
10022544 g     F .text	000000fc read
10022918 g     F .text	00000060 alt_sys_init
1000f9f4  w    F .text	0000005c _ZNSsC2ERKSs
1001096c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc
1000d698  w    F .text	00000008 _ZNKSs13get_allocatorEv
1000c26c g     F .text	00000008 _ZGTtNSt15underflow_errorD2Ev
100254f8  w    O .rodata	0000000c _ZTISt10bad_typeid
10009580 g     F .text	0000005c _ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_
10015a0c g     F .text	00000064 _open_r
1000e7e0  w    F .text	00000048 _ZNSsixEj
1000e2d0  w    F .text	00000040 _ZNSsC2EjcRKSaIcE
10024270 g     F .text	00000090 __register_exitproc
10025270  w    O .rodata	0000000d _ZTSSt9bad_alloc
10004884 g     F .text	00000078 parseSprite
10011318  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv
10002884 g     F .text	00000024 pinkys_move
1000c5e8 g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
10006500  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev
1000be5c g     F .text	00000008 _ZGTtNSt11range_errorD1Ev
1000c3dc g     F .text	0000015c _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
10011334  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
10013034  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj
10010ad4  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_
1001103c  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
1000e9c4  w    F .text	0000005c _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_
1000bb64 g     F .text	000000e8 _ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10006ae4  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
1000bd68 g     F .text	000000f4 _ZGTtNSt11range_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001b9d0 g     F .text	000001ec __multiply
10010f08  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
100116d8  w    F .text	0000005c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_
10022e40 g     F .text	00000068 altera_avalon_jtag_uart_close
100062fc  w    F .text	00000084 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_
10013d70  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_
10013cac  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jjRKS3_
10025f94 g       *ABS*	00000000 __ram_rwdata_start
1000cad4 g     F .text	00000010 _ZNSt12domain_errorD2Ev
10014350 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
100245c8 g       *ABS*	00000000 __ram_rodata_start
1000dd7c  w    F .text	00000054 _ZNKSs7compareERKSs
1002aa08 g     O .bss	00000028 __malloc_current_mallinfo
1001445c g     F .text	00000044 .hidden _Unwind_SjLj_Resume
100132dc  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj
1000e6b0  w    F .text	00000014 _ZNSs7_M_leakEv
1001c194 g     F .text	00000148 __d2b
1002544c  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
1000c9d8 g     F .text	00000004 _ZNSt9type_infoD2Ev
10012f50  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj
10006848  w    F .text	00000038 _ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000c614 g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
1000e490  w    F .text	000001b8 _ZNSs9_M_mutateEjjj
1000c538 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
1000cb18 g     F .text	00000010 _ZNSt16invalid_argumentD1Ev
1000d47c  w    F .text	00000010 _ZNKSs3endEv
10004d38 g     F .text	00000148 UsbGetDeviceDesc1
10010744 g     F .text	000000bc _ZNSt13random_device14_M_init_pretr1ERKSs
10022978 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10016694 g     F .text	00000004 _strtoul_r
100246c8 g     O .rodata	00000100 aes_invsbox
10023aa4 g     F .text	000000a0 alt_get_fd
100235fc g     F .text	00000128 alt_busy_sleep
100061c0  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev
100256a0  w    O .rodata	00000014 _ZTSSt15underflow_error
10028434  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
10006188  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev
10018ac4 g     F .text	00000058 _close_r
10011904  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc
1000ccf8 g     F .text	00000010 _ZNSt15underflow_errorD2Ev
1000abcc g     F .text	00000030 _ZNSt14overflow_errorC1EPKc
1000f734  w    F .text	000000e4 _ZNSs6appendEjc
10013b3c  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
1000f4b0  w    F .text	00000108 _ZNSs6appendERKSsjj
10006604  w    F .text	00000130 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_
1000dad0  w    F .text	0000000c _ZNKSs12find_last_ofERKSsj
10015664 g     F .text	0000008c memcmp
10022a38 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
1002ab30 g       *ABS*	00000000 __alt_stack_base
10022a88 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
1000841c g     F .text	00000038 _ZNSt9bad_allocD0Ev
1001315c  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj
1000c2f8 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
1000ad24 g     F .text	00000044 _ZNSt12__cow_stringD1Ev
1000f2f4  w    F .text	000000f0 _ZNSs13shrink_to_fitEv
1000cc70 g     F .text	00000010 _ZNSt11range_errorD1Ev
10018964 g     F .text	00000160 __swsetup_r
10012734  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
10025664  w    O .rodata	00000010 _ZTSSt11range_error
1000c06c g     F .text	0000002c _ZGTtNSt14overflow_errorD0Ev
100144a0 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
10011a8c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc
1001fdb4 g     F .text	000008a8 .hidden __divdf3
1001a890 g     F .text	000000fc __sfp
1001c3f8 g     F .text	0000006c __copybits
10010f08  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
100255d4  w    O .rodata	0000000c _ZTISt12domain_error
100254ac  w    O .rodata	0000000c _ZTSSt8bad_cast
1000c9dc g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
100131f0  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_
10013b2c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_
10010590  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_
10025694  w    O .rodata	0000000c _ZTISt14overflow_error
10026c9c g     O .rwdata	00000408 __malloc_av_
10006f54  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2ERKSt17_Rb_tree_iteratorIS0_E
1001a9bc g     F .text	00000004 __sinit_lock_release
1000aaf0 g     F .text	000000ac _ZNSt13runtime_errorC2EPKc
1000dce8  w    F .text	00000040 _ZNKSs16find_last_not_ofEPKcj
100208bc g     F .text	0000068c .hidden __muldf3
10016194 g     F .text	00000054 __sread
10000adc g     F .text	00000028 rot_word
10005ad8 g     F .text	00000084 UsbWaitTDListDone
10025410  w    O .rodata	00000014 _ZTVSt9exception
1000c608 g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
1000f818  w    F .text	00000054 _ZNSs6resizeEjc
1002399c g     F .text	00000108 alt_find_file
10010490  w    F .text	00000030 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs
10028454  w    O .rwdata	00000004 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4nposE
10000b04 g     F .text	000002bc mix_columns
10007908  w    F .text	00000024 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv
1000b14c g     F .text	000000e8 _ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100069f4  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base
1000e440  w    F .text	00000050 _ZNSs5clearEv
10002b3c g     F .text	00000068 pinkyPalette
100237a8 g     F .text	000000a4 alt_dev_llist_insert
10022278 g     F .text	00000024 __malloc_lock
10022698 g     F .text	000000b0 sbrk
1000ac48 g     F .text	00000004 _ZNSt12__cow_stringC1ERKSs
10009e94 g     F .text	000000ac _ZSt20__throw_domain_errorPKc
10009de8 g     F .text	000000ac _ZSt19__throw_logic_errorPKc
100109f8  w    F .text	00000020 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc
10025548  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
10006458  w    F .text	0000003c _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_
100082e4 g     F .text	00000094 __cxa_throw
10006548  w    F .text	00000070 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
1001a61c g     F .text	00000060 _fflush_r
10014314 g     F .text	00000010 .hidden _Unwind_SetIP
1001e380 g     F .text	000000b8 _calloc_r
10012690  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
100060cc  w    F .text	00000088 _ZNK9TileGroupltERKS_
1000d0a0 g     F .text	00000060 _ZNSt12__sso_stringaSERKS_
10025618  w    O .rodata	0000000c _ZTISt12length_error
1000e128  w    F .text	0000000c _ZNSs4_Rep13_M_set_leakedEv
1000b888 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC1EPKc
1000a2e4 g     F .text	000000ac _ZSt19__throw_range_errorPKc
1000ce14 g     F .text	00000030 _ZNSt16invalid_argumentC1ERKSs
1000479c g     F .text	000000e8 parseSpriteLine
10014694 g     F .text	00000014 fopen
1002a98c g       *ABS*	00000000 __bss_start
10006a1c  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E
10010800  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
100120a8  w    F .text	00000094 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc
1001591c g     F .text	000000f0 memset
1000d440  w    F .text	0000000c _ZNSs12_S_empty_repEv
100037fc g     F .text	00000db0 main
10025644  w    O .rodata	00000012 _ZTSSt13runtime_error
1000b64c g     F .text	00000008 _ZGTtNSt16invalid_argumentD2Ev
1000ddd0  w    F .text	0000009c _ZNKSs7compareEjjRKSs
1000789c  w    F .text	0000006c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E
1000dbc0  w    F .text	00000040 _ZNKSs17find_first_not_ofEPKcj
1000ac68 g     F .text	0000005c _ZNSt12__cow_stringC1ERKS_
10004630 g     F .text	000000a8 writePaletteHelper
1002a9bc g     O .bss	00000004 alt_envp
1000b068 g     F .text	00000008 _Z26_txnal_logic_error_get_msgPv
1002a9a4 g     O .bss	00000004 __malloc_max_total_mem
10025504  w    O .rodata	00000014 _ZTVSt10bad_typeid
1001392c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_
100229d8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10013d0c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcjRKS3_
10005450 g     F .text	00000100 UsbSetConfig
1001e36c g     F .text	00000014 __swbuf
10015bd4 g     F .text	00000014 srand
1000c61c g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
10009d18 g     F .text	00000034 _ZSt21__throw_bad_exceptionv
1000c5bc g     F .text	0000000c __cxa_get_globals_fast
10013cac  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_
1000d638  w    F .text	00000028 _ZNSsaSEOSs
10012824  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
10010e08  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
1000e1f4  w    F .text	000000a8 _ZNSs12_S_constructEjcRKSaIcE
10012d3c  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj
10006038  w    F .text	0000003c _ZN9TileGroupC1E10__tile_col
100254c4  w    O .rodata	00000014 _ZTVSt8bad_cast
100162cc g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000d334  w    F .text	00000020 _ZNSs7_M_copyEPcPKcj
1000c6bc g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
1001e530 g     F .text	00000010 fclose
1000d778  w    F .text	0000000c _ZNKSs4findERKSsj
10000a18 g     F .text	000000c4 sub_word
10007a14  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base
1000cba0 g     F .text	00000010 _ZNSt12out_of_rangeD1Ev
10018d2c g     F .text	000016c8 _dtoa_r
10014d88 g     F .text	000007f4 _malloc_r
1000b038 g     F .text	00000004 _Z23_txnal_sso_string_c_strPKv
100095dc g     F .text	00000254 _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
10002ba4 g     F .text	00000068 inkyPalette
10010644  w    F .text	0000003c _ZNSsC2IPKcEET_S2_RKSaIcE
1001e90c g     F .text	00000030 __ascii_wctomb
10013b2c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_
1000c5e8 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
1000f6bc  w    F .text	00000004 _ZNSspLESt16initializer_listIcE
1000e29c  w    F .text	00000034 _ZNSsC2ERKSaIcE
1002847c g     O .rwdata	00000004 alt_errno
1001394c  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
10010520  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_
1000acc4 g     F .text	00000060 _ZNSt12__cow_stringaSERKS_
1000cf7c g     F .text	00000030 _ZNSt14overflow_errorC2ERKSs
1000dadc  w    F .text	00000040 _ZNKSs12find_last_ofEPKcj
1000cc80 g     F .text	00000034 _ZNSt11range_errorD0Ev
10016104 g     F .text	0000001c _init_signal
1002553c  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
1001b368 g     F .text	000000a4 _fwalk
10001e08 g     F .text	0000004c recur_free
1001e7c0 g     F .text	0000000c _mbtowc_r
1000c5d8 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
1000b478 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC1EPKc
1001c5a4 g     F .text	000000e0 putc
10013eac g     F .text	00000080 .hidden __divsi3
1001aa8c g     F .text	0000011c _malloc_trim_r
10005d28 g     F .text	000000fc getOne
10005650 g     F .text	00000148 UsbGetHidDesc
100245c4 g       *ABS*	00000000 __CTOR_END__
1000d354  w    F .text	00000020 _ZNSs7_M_moveEPcPKcj
1000f3e4  w    F .text	000000c8 _ZNSs6appendERKSs
1000f874  w    F .text	000000a4 _ZNSs9push_backEc
100162d4 g     F .text	000000d8 strcmp
1000aac0 g     F .text	00000030 _ZNSt12out_of_rangeC1EPKc
1000d414  w    F .text	00000024 _ZNSs13_S_copy_charsEPcPKcS1_
1000d908  w    F .text	00000050 _ZNKSs5rfindEcj
100245c8 g       *ABS*	00000000 __flash_rodata_start
10025438  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
100245c4 g       *ABS*	00000000 __DTOR_LIST__
1000e310  w    F .text	00000010 _ZNSs18_S_construct_aux_2EjcRKSaIcE
1000d100 g     F .text	00000018 _ZNSt12__sso_stringD1Ev
1000cff0 g     F .text	00000020 _ZNSt12__sso_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100105ac  w    F .text	0000005c _ZNSsC1EPKcRKSaIcE
10016698 g     F .text	00000018 strtoul_l
1002065c g     F .text	00000080 .hidden __nedf2
1000c674 g     F .text	00000010 _ZNSt8bad_castD2Ev
1000a91c g     F .text	00000068 _ZNSt13runtime_erroraSERKS_
10004b40 g     F .text	00000044 UsbRead
100121b4  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j
100045ac g     F .text	00000084 drawTile
100110dc  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
1000ce74 g     F .text	00000030 _ZNSt12out_of_rangeC1ERKSs
100228e0 g     F .text	00000038 alt_irq_init
1000fe94  w    F .text	0000002c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
10022640 g     F .text	00000058 alt_release_fd
10012568  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj
1000c308 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
100113ac  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
1000f150  w    F .text	00000040 _ZNSs8pop_backEv
100103cc  w    F .text	00000068 _ZNSs7replaceEjjRKSsjj
10002df4 g     F .text	000001c8 initScreen
10009830 g     F .text	000004b4 _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
10025e60 g     O .rodata	00000100 .hidden __clz_tab
1000ca48 g     F .text	00000064 _ZNSt11logic_errorD2Ev
1000e648  w    F .text	00000068 _ZNSs12_M_leak_hardEv
1002a9b0 g     O .bss	00000004 _PathLocale
10006758  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
100255a4  w    O .rodata	00000010 _ZTSSt11logic_error
1000ca48 g     F .text	00000064 _ZNSt11logic_errorD1Ev
10024228 g     F .text	00000014 atexit
10011534  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_
1000ba5c g     F .text	00000008 _ZGTtNSt12out_of_rangeD1Ev
10025674  w    O .rodata	0000000c _ZTISt11range_error
10011ff0  w    F .text	00000068 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_
1000c064 g     F .text	00000008 _ZGTtNSt14overflow_errorD2Ev
1000cf4c g     F .text	00000030 _ZNSt11range_errorC1ERKSs
10018900 g     F .text	00000064 _write_r
10010ddc  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_
1000c26c g     F .text	00000008 _ZGTtNSt15underflow_errorD1Ev
10006074  w    F .text	00000058 _ZN9TileGroupC1Ess
1000f144  w    F .text	0000000c _ZNSs6insertEjRKSs
100136c0  w    F .text	0000010c _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_
1000b968 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001e7ac g     F .text	00000014 setlocale
1000cbb0 g     F .text	00000034 _ZNSt12out_of_rangeD0Ev
10014348 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
1000b478 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC2EPKc
1000c2a0 g     F .text	00000058 __cxa_call_terminate
10012474  w    F .text	000000a0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_
100134dc  w    F .text	00000094 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj
100067c0  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000c178 g     F .text	000000f4 _ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000ea20  w    F .text	000000a4 _ZNSs14_M_replace_auxEjjjc
1002845c g     O .rwdata	00000004 _impure_ptr
1002842c  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
1002a9b4 g     O .bss	00000004 alt_argc
10007618  w    F .text	000000a8 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000ec00  w    F .text	00000064 _ZNSs7replaceEjjjc
1001a3f4 g     F .text	00000228 __sflush_r
1000ff24  w    F .text	00000074 _ZNSsC1ERKSsjj
100238ac g     F .text	00000060 _do_dtors
1000b760 g     F .text	000000f4 _ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10005cb4 g     F .text	00000074 addPendingPos
100146a8 g     F .text	00000004 _fseek_r
10006f54  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E
10009524 g     F .text	0000005c _ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_
10015c64 g     F .text	000001cc __srefill_r
10007e48  w    F .text	00000028 _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv
1000fce4  w    F .text	000000cc _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
1001150c  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_
1000ff98  w    F .text	0000004c _ZNKSs6substrEjj
1000820c g     F .text	0000000c _ZSt14get_unexpectedv
10000020 g       .exceptions	00000000 alt_irq_entry
1001e7cc g     F .text	00000044 __ascii_mbtowc
1000d524  w    F .text	00000010 _ZNKSs5emptyEv
1001c034 g     F .text	0000005c __ulp
10014338 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
100028cc g     F .text	00000204 clydes_move
10010680  w    F .text	00000010 _ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_
1001a9d4 g     F .text	00000014 __fp_unlock_all
1000aa60 g     F .text	00000030 _ZNSt16invalid_argumentC2EPKc
1001101c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10010810  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
10006ac0  w    F .text	00000024 _ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE
10028468 g     O .rwdata	00000008 alt_fs_list
100253ec  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
10026594 g     O .rwdata	00000040 Rcon
10012e5c  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j
10007cd4  w    F .text	00000024 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
10014324 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
1000cb28 g     F .text	00000034 _ZNSt16invalid_argumentD0Ev
1000aa30 g     F .text	00000030 _ZNSt12domain_errorC2EPKc
10010ab0  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_
100100c0  w    F .text	0000003c _ZNSsC1EPKcjRKSaIcE
100073c8  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv
10006ae4  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
10006f8c  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base
10007f40 g     F .text	000000ac __cxa_begin_catch
10012fa0  w    F .text	00000088 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj
1000eef8  w    F .text	00000004 _ZNSs6assignESt16initializer_listIcE
10005798 g     F .text	00000340 UsbGetReportDesc
1000c7a0 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
100081b4 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
1000ade0 g     F .text	00000118 _ZNKSt3_V214error_category10_M_messageEi
1000d45c  w    F .text	00000018 _ZNSsC2EOSs
10002cfc g     F .text	00000084 textPalette
10025604  w    O .rodata	00000011 _ZTSSt12length_error
10000020 g       *ABS*	00000000 __ram_exceptions_start
1001b52c g     F .text	0000000c localeconv
1000d010 g     F .text	00000014 _ZNSt12__sso_stringC1EPKcj
10009d80 g     F .text	00000034 _ZSt16__throw_bad_castv
10014b94 g     F .text	00000098 __swhatbuf_r
10007d34  w    F .text	0000004c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_
100028a8 g     F .text	00000024 inkys_move
1000c5fc g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
1002843c g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
10025760  w    O .rodata	00000014 _ZTVSt15underflow_error
1000dbb4  w    F .text	0000000c _ZNKSs17find_first_not_ofERKSsj
10005fec  w    F .text	0000004c _ZNSt15_Rb_tree_header8_M_resetEv
10006500  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC2Ev
10023b78 g     F .text	00000050 alt_ic_isr_register
100123ac  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_
1000b350 g     F .text	000000f4 _ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100092fc g     F .text	00000058 __cxa_allocate_exception
1000a8ac g     F .text	00000070 _ZNSt13runtime_errorC2ERKS_
10010df0  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_
1000a8ac g     F .text	00000070 _ZNSt13runtime_errorC1ERKS_
100077c8  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_
10025340  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
1000d534  w    F .text	0000000c _ZNKSsixEj
10007f18 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
1000b070 g     F .text	00000008 _Z28_txnal_runtime_error_get_msgPv
1000eafc  w    F .text	00000048 _ZNSsaSEc
1000ad24 g     F .text	00000044 _ZNSt12__cow_stringD2Ev
10028490 g       *ABS*	00000000 _edata
1000b444 g     F .text	00000008 _ZGTtNSt12domain_errorD1Ev
1000b854 g     F .text	00000008 _ZGTtNSt12length_errorD2Ev
10006f30  w    F .text	00000024 _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
1000dd28  w    F .text	00000054 _ZNKSs16find_last_not_ofEcj
1002ab30 g       *ABS*	00000000 _end
1002841c g     O .rwdata	00000001 _ZSt7nothrow
1000cc48 g     F .text	00000028 _ZNSt13runtime_errorD0Ev
1000131c g     F .text	00000468 init_game
10008994 g     F .text	00000624 __gxx_personality_sj0
1000bc88 g     F .text	000000e0 _ZGTtNSt11range_errorC2EPKc
10004ae4 g     F .text	0000005c UsbWrite
1001e540 g     F .text	00000150 __fputwc
100109e4  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj
10000238 g       *ABS*	00000000 __ram_exceptions_end
100137cc  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag
1000d45c  w    F .text	00000018 _ZNSsC1EOSs
10022ea8 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
1000aef8 g     F .text	0000013c _Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_
1000b350 g     F .text	000000f4 _ZGTtNSt12domain_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100049d0 g     F .text	00000098 writeText
1001108c  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
10002c0c g     F .text	00000068 clydePalette
10011964  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc
1000d4b4  w    F .text	00000008 _ZNKSs6cbeginEv
10013d84  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPKcvEET_S8_RKS3_
1000ad80 g     F .text	00000060 _ZNSt12__cow_stringaSEOS_
1000c5d4 g     F .text	00000004 _ZNSt9exceptionD1Ev
10013a14  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_
10023c50 g     F .text	0000008c alt_ic_irq_disable
100094b8 g     F .text	00000060 _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
100033bc g     F .text	00000440 updateBoard
10010bfc  w    F .text	00000148 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj
10013e2c  w    F .text	00000010 _ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
100161f0 g     F .text	00000080 __swrite
10007ea8 g     F .text	00000070 _Znwj
1000ee14  w    F .text	00000028 _ZNSsaSESt16initializer_listIcE
1001102c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
10028464 g     O .rwdata	00000004 __malloc_trim_threshold
10012c98  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj
10013c04  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_
10010984  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
1002423c g     F .text	00000034 exit
100113a4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
100142cc g     F .text	00000018 .hidden _Unwind_SetGR
1000f4ac  w    F .text	00000004 _ZNSspLERKSs
1001b40c g     F .text	000000b4 _fwalk_reent
1000c340 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
10012c30  w    F .text	00000068 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj
100256d4  w    O .rodata	00000014 _ZTVSt12domain_error
1001be78 g     F .text	000001bc __mdiff
100080d8 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
1000e828  w    F .text	00000038 _ZNSs5frontEv
1001134c  w    F .text	00000028 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
1000b888 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC2EPKc
10013f2c g     F .text	00000078 .hidden __modsi3
10007474  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000d118 g     F .text	00000078 _ZNSt12__sso_stringC2EOS_
1000d540  w    F .text	00000028 _ZNKSs2atEj
1000840c g     F .text	00000010 _ZNSt9bad_allocD1Ev
10011214  w    F .text	00000104 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv
1000d9f4  w    F .text	00000040 _ZNKSs13find_first_ofEPKcj
1000db2c  w    F .text	00000088 _ZNKSs17find_first_not_ofEPKcjj
10010a58  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc
18000000 g       *ABS*	00000000 __alt_data_end
1000a4e8 g     F .text	00000080 _ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_
10000020 g     F .exceptions	00000000 alt_exception
1001a9b4 g     F .text	00000004 __sfp_lock_release
10012410  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_
1000ac4c g     F .text	0000001c _ZNSt12__cow_stringC2EPKcj
10011734  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv
100128dc  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj
100253c0  w    O .rodata	0000000c _ZTISt13bad_exception
10000000 g       *ABS*	00000000 __alt_mem_sdram
10006d3c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_
10001e54 g     F .text	00000060 stack_push
1000be90 g     F .text	000000e0 _ZGTtNSt14overflow_errorC2EPKc
10006e9c  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_
100061c0  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC2Ev
10012d7c  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj
1000ba5c g     F .text	00000008 _ZGTtNSt12out_of_rangeD2Ev
1000ffe4  w    F .text	00000074 _ZNSsC1ERKSsjjRKSaIcE
100071b8  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_
10001240 g     F .text	00000074 IO_write
10025a7a g     O .rodata	00000101 _ctype_
1001319c  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj
1000cae4 g     F .text	00000034 _ZNSt12domain_errorD0Ev
100218b4 g     F .text	00000054 .hidden __unorddf2
1000d688  w    F .text	00000008 _ZNKSs5c_strEv
1001139c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
100061f8  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC2Ev
1000ad68 g     F .text	00000018 _ZNSt12__cow_stringC1EOS_
1000d438  w    F .text	00000008 _ZNSs10_S_compareEjj
1002a9d0 g     O .bss	00000018 workset
100145a4 g     F .text	000000f0 _fopen_r
10021c78 g     F .text	00000034 _exit
10011998  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc
1000e168  w    F .text	0000008c _ZNSs4_Rep9_S_createEjjRKSaIcE
10013d84  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_
100234d0 g     F .text	0000012c alt_alarm_start
1000e13c  w    F .text	00000024 _ZNSs4_Rep26_M_set_length_and_sharableEj
1000a098 g     F .text	000000ac _ZSt20__throw_out_of_rangePKc
1000eba0  w    F .text	00000060 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc
10006efc  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC2EPSt18_Rb_tree_node_base
10013e4c g     F .text	00000060 .hidden __muldi3
10013d20  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
1001429c g     F .text	00000018 .hidden _Unwind_GetGR
1000c5c8 g     F .text	0000000c __cxa_get_globals
10014c2c g     F .text	0000013c __smakebuf_r
10028420 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
100110cc  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv
1000bb64 g     F .text	000000e8 _ZGTtNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000f730  w    F .text	00000004 _ZNSs6appendESt16initializer_listIcE
1000f6f8  w    F .text	00000038 _ZNSspLEPKc
10006880  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_
100163ac g     F .text	00000098 strlen
1000e900  w    F .text	00000074 _ZNSs5eraseEjj
1000a43c g     F .text	000000ac _ZSt23__throw_underflow_errorPKc
10015ed4 g     F .text	00000014 _init_signal_r
10028440  w    O .rwdata	00000008 _ZTISt9type_info
100223b4 g     F .text	00000154 open
1000c620 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
1000e104  w    F .text	0000000c _ZNSs4_Rep12_S_empty_repEv
1000e0fc  w    F .text	00000008 _ZNSs12_Alloc_hiderC1EPcRKSaIcE
10010b24  w    F .text	000000d8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
1000eb44  w    F .text	0000005c _ZNSs6insertEjjc
100206dc g     F .text	000000f0 .hidden __gedf2
1000eac4  w    F .text	00000038 _ZNSs6assignEjc
1000aaf0 g     F .text	000000ac _ZNSt13runtime_errorC1EPKc
1002539c  w    O .rodata	0000000d _ZTSSt9exception
1000bf70 g     F .text	000000f4 _ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10006924  w    F .text	00000084 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv
10025724  w    O .rodata	00000014 _ZTVSt13runtime_error
1000ac68 g     F .text	0000005c _ZNSt12__cow_stringC2ERKS_
100254e8  w    O .rodata	0000000f _ZTSSt10bad_typeid
1000d500  w    F .text	0000000c _ZNKSs6lengthEv
1000b44c g     F .text	0000002c _ZGTtNSt12domain_errorD0Ev
10004a68 g     F .text	0000007c clearScreen
1000d3f0  w    F .text	00000024 _ZNSs13_S_copy_charsEPcS_S_
1000bf70 g     F .text	000000f4 _ZGTtNSt14overflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000ca38 g     F .text	00000008 _ZNKSt11logic_error4whatEv
10011b5c  w    F .text	00000270 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
1000dc50  w    F .text	0000008c _ZNKSs16find_last_not_ofEPKcjj
10010094  w    F .text	0000002c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
1000d7c4  w    F .text	00000060 _ZNKSs4findEcj
1000c5f4 g     F .text	00000008 _ZNSt9exceptionD0Ev
1001ce08 g     F .text	00000018 __sprint_r
10023b44 g     F .text	00000034 alt_icache_flush_all
10012968  w    F .text	0000018c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
1000c6c8 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
1000e8a8  w    F .text	00000058 _ZNSs2atEj
100113d4  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc
10013578  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_
10014340 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
1001053c  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_
10028484 g     O .rwdata	00000004 alt_priority_mask
10011328  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
10013884  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag
10023bc8 g     F .text	00000088 alt_ic_irq_enable
10013580  w    F .text	00000140 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
10018828 g     F .text	00000018 __vfprintf_internal
1000d50c  w    F .text	0000000c _ZNKSs8max_sizeEv
10011dcc  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj
1000ba90 g     F .text	000000d4 _ZGTtNSt13runtime_errorC2EPKc
1000ba64 g     F .text	0000002c _ZGTtNSt12out_of_rangeD0Ev
10013028  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j
1001e900 g     F .text	0000000c _wctomb_r
1000dc00  w    F .text	00000050 _ZNKSs17find_first_not_ofEcj
1000fec0  w    F .text	00000064 _ZNSsC2ERKSsjRKSaIcE
1000c6c8 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
10020f48 g     F .text	0000096c .hidden __subdf3
10011a34  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc
1000e3bc  w    F .text	00000004 _ZNSs4_Rep10_M_destroyERKSaIcE
100105ac  w    F .text	0000005c _ZNSsC2EPKcRKSaIcE
10010af8  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
10012884  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE
1000e160  w    F .text	00000008 _ZNSs4_Rep10_M_refdataEv
1001b8ec g     F .text	000000b0 __lo0bits
10005058 g     F .text	00000190 UsbGetConfigDesc1
1000e790  w    F .text	00000050 _ZNSs6rbeginEv
1000b444 g     F .text	00000008 _ZGTtNSt12domain_errorD2Ev
10011e90  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE
1000a984 g     F .text	000000ac _ZNSt11logic_errorC1EPKc
100128b0  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE
10028488 g     O .rwdata	00000008 alt_alarm_list
1000b968 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1002384c g     F .text	00000060 _do_ctors
1001104c  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10016120 g     F .text	00000010 __sigtramp
10013150  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j
100255f8  w    O .rodata	0000000c _ZTISt16invalid_argument
1000d9e8  w    F .text	0000000c _ZNKSs13find_first_ofERKSsj
1000fe58  w    F .text	0000003c _ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
10004b84 g     F .text	000000b4 UsbSoftReset
1000ab9c g     F .text	00000030 _ZNSt11range_errorC1EPKc
1001e87c g     F .text	00000084 wcrtomb
10010844  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv
1000d314  w    F .text	00000020 _ZNKSs11_M_disjunctEPKc
10012f44  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j
10021b7c g     F .text	000000d0 close
1000d60c  w    F .text	0000002c _ZNSs4swapERSs
1000ad68 g     F .text	00000018 _ZNSt12__cow_stringC2EOS_
100110e4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
10004e80 g     F .text	000001d8 UsbGetDeviceDesc2
100270a4 g     O .rwdata	0000016c __global_locale
10005fb0  w    F .text	0000003c _ZNSt15_Rb_tree_headerC1Ev
10010dc8  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev
10010558  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE
100253cc  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
1000cd3c g     F .text	000000a8 _ZNSt11logic_errorC1ERKSs
10022068 g     F .text	00000084 alt_load
10000920 g     F .text	0000004c sub_byte
1000d44c  w    F .text	00000010 _ZNSsC1Ev
100074b8  w    F .text	00000038 _ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_
1000c9f4 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
1000aa30 g     F .text	00000030 _ZNSt12domain_errorC1EPKc
10010ddc  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_
1001e6b4 g     F .text	0000007c fputwc
100160e0 g     F .text	00000010 raise
1000ce14 g     F .text	00000030 _ZNSt16invalid_argumentC2ERKSs
10014d78 g     F .text	00000010 free
1001a9b8 g     F .text	00000004 __sinit_lock_acquire
10002d80 g     F .text	00000074 wallPalette
1000ce44 g     F .text	00000030 _ZNSt12length_errorC2ERKSs
1001b664 g     F .text	00000114 __multadd
1000c7b0 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
1001b640 g     F .text	00000024 _Bfree
100110b4  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv
10000284 g     F .text	000003d4 aes_encrypt
10013874  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
1001392c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_RKS3_
1000f5b8  w    F .text	00000104 _ZNSs6appendEPKcj
10001784 g     F .text	00000654 tickgame
1000cea4 g     F .text	000000a8 _ZNSt13runtime_errorC1ERKSs



Disassembly of section .entry:

10000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1000000c:	00bffd16 	blt	zero,r2,10000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000010:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000014:	08408e14 	ori	at,at,568
    jmp r1
10000018:	0800683a 	jmp	at
1000001c:	00000000 	call	10000000 <__reset>

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001c40 	call	100001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffc15 	stw	r2,-16(fp)

  return active;
10000118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0ffff17 	ldw	r3,-4(fp)
10000130:	e0bffe17 	ldw	r2,-8(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001126 	beq	r2,zero,10000180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	e0bffd17 	ldw	r2,-12(fp)
10000140:	100690fa 	slli	r3,r2,3
10000144:	008400f4 	movhi	r2,4099
10000148:	1885883a 	add	r2,r3,r2
1000014c:	10ea8c17 	ldw	r3,-21968(r2)
10000150:	e0bffd17 	ldw	r2,-12(fp)
10000154:	100890fa 	slli	r4,r2,3
10000158:	008400f4 	movhi	r2,4099
1000015c:	2085883a 	add	r2,r4,r2
10000160:	10aa8d17 	ldw	r2,-21964(r2)
10000164:	1009883a 	mov	r4,r2
10000168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
1000016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
10000170:	0005313a 	rdctl	r2,ipending
10000174:	e0bffb15 	stw	r2,-20(fp)
  return active;
10000178:	e0bffb17 	ldw	r2,-20(fp)
1000017c:	00000706 	br	1000019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
10000180:	e0bffe17 	ldw	r2,-8(fp)
10000184:	1085883a 	add	r2,r2,r2
10000188:	e0bffe15 	stw	r2,-8(fp)
      i++;
1000018c:	e0bffd17 	ldw	r2,-12(fp)
10000190:	10800044 	addi	r2,r2,1
10000194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
10000198:	003fe406 	br	1000012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
1000019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
100001a0:	e0bfff17 	ldw	r2,-4(fp)
100001a4:	103fde1e 	bne	r2,zero,10000120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001a8:	0001883a 	nop
}
100001ac:	0001883a 	nop
100001b0:	e037883a 	mov	sp,fp
100001b4:	dfc00117 	ldw	ra,4(sp)
100001b8:	df000017 	ldw	fp,0(sp)
100001bc:	dec00204 	addi	sp,sp,8
100001c0:	f800283a 	ret

100001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001c4:	defffb04 	addi	sp,sp,-20
100001c8:	dfc00415 	stw	ra,16(sp)
100001cc:	df000315 	stw	fp,12(sp)
100001d0:	df000304 	addi	fp,sp,12
100001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
100001d8:	000531fa 	rdctl	r2,exception
100001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
100001e0:	e0bfff17 	ldw	r2,-4(fp)
100001e4:	1004d0ba 	srli	r2,r2,2
100001e8:	108007cc 	andi	r2,r2,31
100001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
100001f0:	0005333a 	rdctl	r2,badaddr
100001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f8:	d0a96d17 	ldw	r2,-23116(gp)
100001fc:	10000726 	beq	r2,zero,1000021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
10000200:	d0a96d17 	ldw	r2,-23116(gp)
10000204:	e0ffff17 	ldw	r3,-4(fp)
10000208:	e1bffe17 	ldw	r6,-8(fp)
1000020c:	e17ffd17 	ldw	r5,-12(fp)
10000210:	1809883a 	mov	r4,r3
10000214:	103ee83a 	callr	r2
10000218:	00000206 	br	10000224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
1000021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000220:	0005883a 	mov	r2,zero
}
10000224:	e037883a 	mov	sp,fp
10000228:	dfc00117 	ldw	ra,4(sp)
1000022c:	df000017 	ldw	fp,0(sp)
10000230:	dec00204 	addi	sp,sp,8
10000234:	f800283a 	ret

Disassembly of section .text:

10000238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10000238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
1000023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
10000240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10000244:	00bffd16 	blt	zero,r2,1000023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000248:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
1000024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000250:	068400f4 	movhi	gp,4099
    ori gp, gp, %lo(_gp)
10000254:	d6810614 	ori	gp,gp,1048
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000258:	008400b4 	movhi	r2,4098
    ori r2, r2, %lo(__bss_start)
1000025c:	10aa6314 	ori	r2,r2,43404

    movhi r3, %hi(__bss_end)
10000260:	00c400b4 	movhi	r3,4098
    ori r3, r3, %lo(__bss_end)
10000264:	18eacc14 	ori	r3,r3,43824

    beq r2, r3, 1f
10000268:	10c00326 	beq	r2,r3,10000278 <_start+0x40>

0:
    stw zero, (r2)
1000026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10000274:	10fffd36 	bltu	r2,r3,1000026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000278:	00220680 	call	10022068 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
1000027c:	00221fc0 	call	100221fc <alt_main>

10000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000280:	003fff06 	br	10000280 <alt_after_alt_main>

10000284 <aes_encrypt>:
[0 1]  [1 1] ...
[0 2]  ...
[0 3] ...
*/

void aes_encrypt(uint8_t* data_in, uint32_t* data_out, uint32_t* keyarr) {
10000284:	deffd404 	addi	sp,sp,-176
10000288:	dfc02b15 	stw	ra,172(sp)
1000028c:	df002a15 	stw	fp,168(sp)
10000290:	ddc02915 	stw	r23,164(sp)
10000294:	dd802815 	stw	r22,160(sp)
10000298:	dd402715 	stw	r21,156(sp)
1000029c:	dd002615 	stw	r20,152(sp)
100002a0:	dcc02515 	stw	r19,148(sp)
100002a4:	dc802415 	stw	r18,144(sp)
100002a8:	dc402315 	stw	r17,140(sp)
100002ac:	dc002215 	stw	r16,136(sp)
100002b0:	df002a04 	addi	fp,sp,168
100002b4:	e13fdb15 	stw	r4,-148(fp)
100002b8:	e17fda15 	stw	r5,-152(fp)
100002bc:	e1bfd915 	stw	r6,-156(fp)
100002c0:	d809883a 	mov	r4,sp
100002c4:	202f883a 	mov	r23,r4
	aes_state state; // = malloc(sizeof(uint32_t) * 4); //Flattened.
	aes_state state_in; // = malloc(sizeof(uint32_t) * 4); //Temporary.
	// Generate round keys.
	
	uint32_t key_out[(CNST_AES_NR+1)][CNST_AES_NB];
100002c8:	01000104 	movi	r4,4
100002cc:	21003fcc 	andi	r4,r4,255
100002d0:	213fffc4 	addi	r4,r4,-1
100002d4:	e13ff615 	stw	r4,-40(fp)
100002d8:	01000104 	movi	r4,4
100002dc:	21003fcc 	andi	r4,r4,255
100002e0:	200f883a 	mov	r7,r4
100002e4:	0011883a 	mov	r8,zero
100002e8:	3808d6fa 	srli	r4,r7,27
100002ec:	4006917a 	slli	r3,r8,5
100002f0:	20c6b03a 	or	r3,r4,r3
100002f4:	3804917a 	slli	r2,r7,5
100002f8:	00800104 	movi	r2,4
100002fc:	10803fcc 	andi	r2,r2,255
10000300:	102890ba 	slli	r20,r2,2
10000304:	00800284 	movi	r2,10
10000308:	10803fcc 	andi	r2,r2,255
1000030c:	e0bff515 	stw	r2,-44(fp)
10000310:	00800104 	movi	r2,4
10000314:	10803fcc 	andi	r2,r2,255
10000318:	1013883a 	mov	r9,r2
1000031c:	0015883a 	mov	r10,zero
10000320:	00800284 	movi	r2,10
10000324:	10803fcc 	andi	r2,r2,255
10000328:	10800044 	addi	r2,r2,1
1000032c:	1017883a 	mov	r11,r2
10000330:	0019883a 	mov	r12,zero
10000334:	580d883a 	mov	r6,r11
10000338:	600f883a 	mov	r7,r12
1000033c:	4809883a 	mov	r4,r9
10000340:	500b883a 	mov	r5,r10
10000344:	0013e4c0 	call	10013e4c <__muldi3>
10000348:	1009883a 	mov	r4,r2
1000034c:	180b883a 	mov	r5,r3
10000350:	2005883a 	mov	r2,r4
10000354:	2807883a 	mov	r3,r5
10000358:	1008d6fa 	srli	r4,r2,27
1000035c:	1826917a 	slli	r19,r3,5
10000360:	24e6b03a 	or	r19,r4,r19
10000364:	1024917a 	slli	r18,r2,5
10000368:	00800104 	movi	r2,4
1000036c:	10803fcc 	andi	r2,r2,255
10000370:	102b883a 	mov	r21,r2
10000374:	002d883a 	mov	r22,zero
10000378:	00800284 	movi	r2,10
1000037c:	10803fcc 	andi	r2,r2,255
10000380:	10800044 	addi	r2,r2,1
10000384:	e0bfd715 	stw	r2,-164(fp)
10000388:	e03fd815 	stw	zero,-160(fp)
1000038c:	e1bfd717 	ldw	r6,-164(fp)
10000390:	e1ffd817 	ldw	r7,-160(fp)
10000394:	a809883a 	mov	r4,r21
10000398:	b00b883a 	mov	r5,r22
1000039c:	0013e4c0 	call	10013e4c <__muldi3>
100003a0:	1009883a 	mov	r4,r2
100003a4:	180b883a 	mov	r5,r3
100003a8:	2005883a 	mov	r2,r4
100003ac:	2807883a 	mov	r3,r5
100003b0:	1008d6fa 	srli	r4,r2,27
100003b4:	1822917a 	slli	r17,r3,5
100003b8:	2462b03a 	or	r17,r4,r17
100003bc:	1020917a 	slli	r16,r2,5
100003c0:	00800284 	movi	r2,10
100003c4:	10803fcc 	andi	r2,r2,255
100003c8:	10c00044 	addi	r3,r2,1
100003cc:	00800104 	movi	r2,4
100003d0:	10803fcc 	andi	r2,r2,255
100003d4:	1885383a 	mul	r2,r3,r2
100003d8:	100490ba 	slli	r2,r2,2
100003dc:	108000c4 	addi	r2,r2,3
100003e0:	1004d0ba 	srli	r2,r2,2
100003e4:	100490ba 	slli	r2,r2,2
100003e8:	d8b7c83a 	sub	sp,sp,r2
100003ec:	d8800104 	addi	r2,sp,4
100003f0:	108000c4 	addi	r2,r2,3
100003f4:	1004d0ba 	srli	r2,r2,2
100003f8:	100490ba 	slli	r2,r2,2
100003fc:	e0bff415 	stw	r2,-48(fp)
	key_expansion(&keyarr[0], &key_out[0][0], CNST_AES_NK, CNST_AES_NB, CNST_AES_NR);
10000400:	e0fff417 	ldw	r3,-48(fp)
10000404:	00800104 	movi	r2,4
10000408:	11003fcc 	andi	r4,r2,255
1000040c:	00800104 	movi	r2,4
10000410:	11403fcc 	andi	r5,r2,255
10000414:	00800284 	movi	r2,10
10000418:	10803fcc 	andi	r2,r2,255
1000041c:	d8800015 	stw	r2,0(sp)
10000420:	280f883a 	mov	r7,r5
10000424:	200d883a 	mov	r6,r4
10000428:	180b883a 	mov	r5,r3
1000042c:	e13fd917 	ldw	r4,-156(fp)
10000430:	00006580 	call	10000658 <key_expansion>

	memcpy(state.state8, data_in, sizeof(state));
10000434:	e0ffdb17 	ldw	r3,-148(fp)
10000438:	e0bff004 	addi	r2,fp,-64
1000043c:	1809883a 	mov	r4,r3
10000440:	00c00404 	movi	r3,16
10000444:	180d883a 	mov	r6,r3
10000448:	200b883a 	mov	r5,r4
1000044c:	1009883a 	mov	r4,r2
10000450:	00156f00 	call	100156f0 <memcpy>
	
	add_round_key(state.state32, key_out[0], state_in.state32);
10000454:	e0fff417 	ldw	r3,-48(fp)
10000458:	e13fec04 	addi	r4,fp,-80
1000045c:	e0bff004 	addi	r2,fp,-64
10000460:	200d883a 	mov	r6,r4
10000464:	180b883a 	mov	r5,r3
10000468:	1009883a 	mov	r4,r2
1000046c:	0000dc00 	call	10000dc0 <add_round_key>
	memcpy(&state, &state_in, sizeof(state_in));
10000470:	e0bfec17 	ldw	r2,-80(fp)
10000474:	e0bff015 	stw	r2,-64(fp)
10000478:	e0bfed17 	ldw	r2,-76(fp)
1000047c:	e0bff115 	stw	r2,-60(fp)
10000480:	e0bfee17 	ldw	r2,-72(fp)
10000484:	e0bff215 	stw	r2,-56(fp)
10000488:	e0bfef17 	ldw	r2,-68(fp)
1000048c:	e0bff315 	stw	r2,-52(fp)
	
	aes_state state_in0, state_in1, state_in2, state_in3;
	
	for(uint8_t round = 1; round < CNST_AES_NR; round += 1) {
10000490:	00800044 	movi	r2,1
10000494:	e0bff745 	stb	r2,-35(fp)
10000498:	00003306 	br	10000568 <aes_encrypt+0x2e4>
		// Sub words.
		for (uint8_t k = 0; k < 4; k++) sub_word(&state.state8[k], &state_in0.state8[k]);
1000049c:	e03ff785 	stb	zero,-34(fp)
100004a0:	00000d06 	br	100004d8 <aes_encrypt+0x254>
100004a4:	e0bff783 	ldbu	r2,-34(fp)
100004a8:	e0fff004 	addi	r3,fp,-64
100004ac:	100490ba 	slli	r2,r2,2
100004b0:	1889883a 	add	r4,r3,r2
100004b4:	e0bff783 	ldbu	r2,-34(fp)
100004b8:	e0ffe804 	addi	r3,fp,-96
100004bc:	100490ba 	slli	r2,r2,2
100004c0:	1885883a 	add	r2,r3,r2
100004c4:	100b883a 	mov	r5,r2
100004c8:	0000a180 	call	10000a18 <sub_word>
100004cc:	e0bff783 	ldbu	r2,-34(fp)
100004d0:	10800044 	addi	r2,r2,1
100004d4:	e0bff785 	stb	r2,-34(fp)
100004d8:	e0bff783 	ldbu	r2,-34(fp)
100004dc:	10800130 	cmpltui	r2,r2,4
100004e0:	103ff01e 	bne	r2,zero,100004a4 <aes_encrypt+0x220>
		//memcpy(&state, &state_in, sizeof(state_in));
		
		// Shift Rows.
		shift_rows(state_in0.state8, state_in1.state8);
100004e4:	e0ffe404 	addi	r3,fp,-112
100004e8:	e0bfe804 	addi	r2,fp,-96
100004ec:	180b883a 	mov	r5,r3
100004f0:	1009883a 	mov	r4,r2
100004f4:	00008480 	call	10000848 <shift_rows>
		// memcpy(&state, &state_in, sizeof(state_in));
		
		// Mix Columns.
		mix_columns(state_in1.state8, state_in2.state8);
100004f8:	e0ffe004 	addi	r3,fp,-128
100004fc:	e0bfe404 	addi	r2,fp,-112
10000500:	180b883a 	mov	r5,r3
10000504:	1009883a 	mov	r4,r2
10000508:	0000b040 	call	10000b04 <mix_columns>
		//memcpy(&state, &state_in, sizeof(state_in));
		
		// Add Round Key
		add_round_key(state_in2.state32, key_out[round], state_in3.state32);
1000050c:	a006d0ba 	srli	r3,r20,2
10000510:	e0bff743 	ldbu	r2,-35(fp)
10000514:	1885383a 	mul	r2,r3,r2
10000518:	100490ba 	slli	r2,r2,2
1000051c:	e0fff417 	ldw	r3,-48(fp)
10000520:	1887883a 	add	r3,r3,r2
10000524:	e13fdc04 	addi	r4,fp,-144
10000528:	e0bfe004 	addi	r2,fp,-128
1000052c:	200d883a 	mov	r6,r4
10000530:	180b883a 	mov	r5,r3
10000534:	1009883a 	mov	r4,r2
10000538:	0000dc00 	call	10000dc0 <add_round_key>
		memcpy(&state, &state_in3, sizeof(state_in3));
1000053c:	e0bfdc17 	ldw	r2,-144(fp)
10000540:	e0bff015 	stw	r2,-64(fp)
10000544:	e0bfdd17 	ldw	r2,-140(fp)
10000548:	e0bff115 	stw	r2,-60(fp)
1000054c:	e0bfde17 	ldw	r2,-136(fp)
10000550:	e0bff215 	stw	r2,-56(fp)
10000554:	e0bfdf17 	ldw	r2,-132(fp)
10000558:	e0bff315 	stw	r2,-52(fp)
	for(uint8_t round = 1; round < CNST_AES_NR; round += 1) {
1000055c:	e0bff743 	ldbu	r2,-35(fp)
10000560:	10800044 	addi	r2,r2,1
10000564:	e0bff745 	stb	r2,-35(fp)
10000568:	00800284 	movi	r2,10
1000056c:	e0fff743 	ldbu	r3,-35(fp)
10000570:	10803fcc 	andi	r2,r2,255
10000574:	18bfc936 	bltu	r3,r2,1000049c <aes_encrypt+0x218>
	}
	
	// Sub words.
	for (uint8_t k = 0; k < 4; k++) sub_word(&state.state8[k], &state_in0.state8[k]);
10000578:	e03ff7c5 	stb	zero,-33(fp)
1000057c:	00000d06 	br	100005b4 <aes_encrypt+0x330>
10000580:	e0bff7c3 	ldbu	r2,-33(fp)
10000584:	e0fff004 	addi	r3,fp,-64
10000588:	100490ba 	slli	r2,r2,2
1000058c:	1889883a 	add	r4,r3,r2
10000590:	e0bff7c3 	ldbu	r2,-33(fp)
10000594:	e0ffe804 	addi	r3,fp,-96
10000598:	100490ba 	slli	r2,r2,2
1000059c:	1885883a 	add	r2,r3,r2
100005a0:	100b883a 	mov	r5,r2
100005a4:	0000a180 	call	10000a18 <sub_word>
100005a8:	e0bff7c3 	ldbu	r2,-33(fp)
100005ac:	10800044 	addi	r2,r2,1
100005b0:	e0bff7c5 	stb	r2,-33(fp)
100005b4:	e0bff7c3 	ldbu	r2,-33(fp)
100005b8:	10800130 	cmpltui	r2,r2,4
100005bc:	103ff01e 	bne	r2,zero,10000580 <aes_encrypt+0x2fc>
	//memcpy(&state, &state_in, sizeof(state_in));
	
	// Shift Rows.
	shift_rows(&state_in0.state8, &state_in1.state8);
100005c0:	e0ffe404 	addi	r3,fp,-112
100005c4:	e0bfe804 	addi	r2,fp,-96
100005c8:	180b883a 	mov	r5,r3
100005cc:	1009883a 	mov	r4,r2
100005d0:	00008480 	call	10000848 <shift_rows>
	//memcpy(&state, &state_in, sizeof(state_in));

	// Add Round Key
	add_round_key(&state_in1.state32, &key_out[CNST_AES_NR], &state_in2.state32);
100005d4:	a006d0ba 	srli	r3,r20,2
100005d8:	00800284 	movi	r2,10
100005dc:	10803fcc 	andi	r2,r2,255
100005e0:	1885383a 	mul	r2,r3,r2
100005e4:	100490ba 	slli	r2,r2,2
100005e8:	e0fff417 	ldw	r3,-48(fp)
100005ec:	1887883a 	add	r3,r3,r2
100005f0:	e13fe004 	addi	r4,fp,-128
100005f4:	e0bfe404 	addi	r2,fp,-112
100005f8:	200d883a 	mov	r6,r4
100005fc:	180b883a 	mov	r5,r3
10000600:	1009883a 	mov	r4,r2
10000604:	0000dc00 	call	10000dc0 <add_round_key>
	//memcpy(&state, &state_in, sizeof(state_in));

	// Now everything is ready.
	memcpy(data_out, state_in2.state32, sizeof(state_in2.state32));
10000608:	e0bfe004 	addi	r2,fp,-128
1000060c:	01800404 	movi	r6,16
10000610:	100b883a 	mov	r5,r2
10000614:	e13fda17 	ldw	r4,-152(fp)
10000618:	00156f00 	call	100156f0 <memcpy>
1000061c:	b837883a 	mov	sp,r23
}
10000620:	0001883a 	nop
10000624:	e6fff804 	addi	sp,fp,-32
10000628:	dfc00917 	ldw	ra,36(sp)
1000062c:	df000817 	ldw	fp,32(sp)
10000630:	ddc00717 	ldw	r23,28(sp)
10000634:	dd800617 	ldw	r22,24(sp)
10000638:	dd400517 	ldw	r21,20(sp)
1000063c:	dd000417 	ldw	r20,16(sp)
10000640:	dcc00317 	ldw	r19,12(sp)
10000644:	dc800217 	ldw	r18,8(sp)
10000648:	dc400117 	ldw	r17,4(sp)
1000064c:	dc000017 	ldw	r16,0(sp)
10000650:	dec00a04 	addi	sp,sp,40
10000654:	f800283a 	ret

10000658 <key_expansion>:

// Verified working.
void key_expansion(uint8_t* key_in, uint32_t* key_out, uint8_t Nk, uint8_t Nb, uint8_t Nr) {
10000658:	defff704 	addi	sp,sp,-36
1000065c:	dfc00815 	stw	ra,32(sp)
10000660:	df000715 	stw	fp,28(sp)
10000664:	df000704 	addi	fp,sp,28
10000668:	e13ffd15 	stw	r4,-12(fp)
1000066c:	e17ffc15 	stw	r5,-16(fp)
10000670:	3007883a 	mov	r3,r6
10000674:	3809883a 	mov	r4,r7
10000678:	e0800217 	ldw	r2,8(fp)
1000067c:	e0fffb05 	stb	r3,-20(fp)
10000680:	2007883a 	mov	r3,r4
10000684:	e0fffa05 	stb	r3,-24(fp)
10000688:	e0bff905 	stb	r2,-28(fp)
	uint32_t temp;
	for(uint8_t i=0; i<Nk; i++) {
1000068c:	e03ffec5 	stb	zero,-5(fp)
10000690:	00002b06 	br	10000740 <key_expansion+0xe8>
		key_out[i] = key_in[4*i+3] | (key_in[4*i+2] << 8) | (key_in[4*i+1] << 16) | (key_in[4*i] << 24);
10000694:	e0bffec3 	ldbu	r2,-5(fp)
10000698:	100490ba 	slli	r2,r2,2
1000069c:	108000c4 	addi	r2,r2,3
100006a0:	e0fffd17 	ldw	r3,-12(fp)
100006a4:	1885883a 	add	r2,r3,r2
100006a8:	10800003 	ldbu	r2,0(r2)
100006ac:	10c03fcc 	andi	r3,r2,255
100006b0:	e0bffec3 	ldbu	r2,-5(fp)
100006b4:	100490ba 	slli	r2,r2,2
100006b8:	10800084 	addi	r2,r2,2
100006bc:	e13ffd17 	ldw	r4,-12(fp)
100006c0:	2085883a 	add	r2,r4,r2
100006c4:	10800003 	ldbu	r2,0(r2)
100006c8:	10803fcc 	andi	r2,r2,255
100006cc:	1004923a 	slli	r2,r2,8
100006d0:	1886b03a 	or	r3,r3,r2
100006d4:	e0bffec3 	ldbu	r2,-5(fp)
100006d8:	100490ba 	slli	r2,r2,2
100006dc:	10800044 	addi	r2,r2,1
100006e0:	e13ffd17 	ldw	r4,-12(fp)
100006e4:	2085883a 	add	r2,r4,r2
100006e8:	10800003 	ldbu	r2,0(r2)
100006ec:	10803fcc 	andi	r2,r2,255
100006f0:	1004943a 	slli	r2,r2,16
100006f4:	1886b03a 	or	r3,r3,r2
100006f8:	e0bffec3 	ldbu	r2,-5(fp)
100006fc:	100490ba 	slli	r2,r2,2
10000700:	1009883a 	mov	r4,r2
10000704:	e0bffd17 	ldw	r2,-12(fp)
10000708:	1105883a 	add	r2,r2,r4
1000070c:	10800003 	ldbu	r2,0(r2)
10000710:	10803fcc 	andi	r2,r2,255
10000714:	1004963a 	slli	r2,r2,24
10000718:	1888b03a 	or	r4,r3,r2
1000071c:	e0bffec3 	ldbu	r2,-5(fp)
10000720:	100490ba 	slli	r2,r2,2
10000724:	e0fffc17 	ldw	r3,-16(fp)
10000728:	1885883a 	add	r2,r3,r2
1000072c:	2007883a 	mov	r3,r4
10000730:	10c00015 	stw	r3,0(r2)
	for(uint8_t i=0; i<Nk; i++) {
10000734:	e0bffec3 	ldbu	r2,-5(fp)
10000738:	10800044 	addi	r2,r2,1
1000073c:	e0bffec5 	stb	r2,-5(fp)
10000740:	e0fffec3 	ldbu	r3,-5(fp)
10000744:	e0bffb03 	ldbu	r2,-20(fp)
10000748:	18bfd236 	bltu	r3,r2,10000694 <key_expansion+0x3c>
	}
	uint8_t i = Nk;
1000074c:	e0bffb03 	ldbu	r2,-20(fp)
10000750:	e0bffe85 	stb	r2,-6(fp)
	while(i<Nb*(Nr+1)) {
10000754:	00003006 	br	10000818 <key_expansion+0x1c0>
		temp = key_out[i-1];
10000758:	e0fffe83 	ldbu	r3,-6(fp)
1000075c:	00900034 	movhi	r2,16384
10000760:	10bfffc4 	addi	r2,r2,-1
10000764:	1885883a 	add	r2,r3,r2
10000768:	100490ba 	slli	r2,r2,2
1000076c:	e0fffc17 	ldw	r3,-16(fp)
10000770:	1885883a 	add	r2,r3,r2
10000774:	10800017 	ldw	r2,0(r2)
10000778:	e0bfff15 	stw	r2,-4(fp)
		if(i % Nk == 0) {
1000077c:	e0bffe83 	ldbu	r2,-6(fp)
10000780:	e0fffb03 	ldbu	r3,-20(fp)
10000784:	10c9203a 	divu	r4,r2,r3
10000788:	20c7383a 	mul	r3,r4,r3
1000078c:	10c5c83a 	sub	r2,r2,r3
10000790:	10803fcc 	andi	r2,r2,255
10000794:	10000f1e 	bne	r2,zero,100007d4 <key_expansion+0x17c>
			temp = sub_word32(rot_word(temp)) ^ Rcon[i/Nk];
10000798:	e13fff17 	ldw	r4,-4(fp)
1000079c:	0000adc0 	call	10000adc <rot_word>
100007a0:	1009883a 	mov	r4,r2
100007a4:	000096c0 	call	1000096c <sub_word32>
100007a8:	1009883a 	mov	r4,r2
100007ac:	e0fffe83 	ldbu	r3,-6(fp)
100007b0:	e0bffb03 	ldbu	r2,-20(fp)
100007b4:	1885203a 	divu	r2,r3,r2
100007b8:	10803fcc 	andi	r2,r2,255
100007bc:	100690ba 	slli	r3,r2,2
100007c0:	008400b4 	movhi	r2,4098
100007c4:	1885883a 	add	r2,r3,r2
100007c8:	10996517 	ldw	r2,26004(r2)
100007cc:	2084f03a 	xor	r2,r4,r2
100007d0:	e0bfff15 	stw	r2,-4(fp)
		}
		key_out[i] = key_out[i-Nk] ^ temp;
100007d4:	e0fffe83 	ldbu	r3,-6(fp)
100007d8:	e0bffb03 	ldbu	r2,-20(fp)
100007dc:	1885c83a 	sub	r2,r3,r2
100007e0:	100490ba 	slli	r2,r2,2
100007e4:	e0fffc17 	ldw	r3,-16(fp)
100007e8:	1885883a 	add	r2,r3,r2
100007ec:	11000017 	ldw	r4,0(r2)
100007f0:	e0bffe83 	ldbu	r2,-6(fp)
100007f4:	100490ba 	slli	r2,r2,2
100007f8:	e0fffc17 	ldw	r3,-16(fp)
100007fc:	1885883a 	add	r2,r3,r2
10000800:	e0ffff17 	ldw	r3,-4(fp)
10000804:	20c6f03a 	xor	r3,r4,r3
10000808:	10c00015 	stw	r3,0(r2)
		++i;
1000080c:	e0bffe83 	ldbu	r2,-6(fp)
10000810:	10800044 	addi	r2,r2,1
10000814:	e0bffe85 	stb	r2,-6(fp)
	while(i<Nb*(Nr+1)) {
10000818:	e0fffe83 	ldbu	r3,-6(fp)
1000081c:	e13ffa03 	ldbu	r4,-24(fp)
10000820:	e0bff903 	ldbu	r2,-28(fp)
10000824:	10800044 	addi	r2,r2,1
10000828:	2085383a 	mul	r2,r4,r2
1000082c:	18bfca16 	blt	r3,r2,10000758 <key_expansion+0x100>
	}
}
10000830:	0001883a 	nop
10000834:	e037883a 	mov	sp,fp
10000838:	dfc00117 	ldw	ra,4(sp)
1000083c:	df000017 	ldw	fp,0(sp)
10000840:	dec00204 	addi	sp,sp,8
10000844:	f800283a 	ret

10000848 <shift_rows>:

// Verified working.
void shift_rows(uint8_t* in, uint8_t* result) {
10000848:	defffb04 	addi	sp,sp,-20
1000084c:	df000415 	stw	fp,16(sp)
10000850:	df000404 	addi	fp,sp,16
10000854:	e13ffd15 	stw	r4,-12(fp)
10000858:	e17ffc15 	stw	r5,-16(fp)
	for(int i=0; i<4; i++) {
1000085c:	e03fff15 	stw	zero,-4(fp)
10000860:	00002706 	br	10000900 <shift_rows+0xb8>
		for(int j=0; j<4; j++) {
10000864:	e03ffe15 	stw	zero,-8(fp)
10000868:	00001f06 	br	100008e8 <shift_rows+0xa0>
			result[j*4+i] = in[((-i+3+j)%4)*4+i];
1000086c:	00c000c4 	movi	r3,3
10000870:	e0bfff17 	ldw	r2,-4(fp)
10000874:	1887c83a 	sub	r3,r3,r2
10000878:	e0bffe17 	ldw	r2,-8(fp)
1000087c:	1887883a 	add	r3,r3,r2
10000880:	00a00034 	movhi	r2,32768
10000884:	108000c4 	addi	r2,r2,3
10000888:	1884703a 	and	r2,r3,r2
1000088c:	1000040e 	bge	r2,zero,100008a0 <shift_rows+0x58>
10000890:	10bfffc4 	addi	r2,r2,-1
10000894:	00ffff04 	movi	r3,-4
10000898:	10c4b03a 	or	r2,r2,r3
1000089c:	10800044 	addi	r2,r2,1
100008a0:	100690ba 	slli	r3,r2,2
100008a4:	e0bfff17 	ldw	r2,-4(fp)
100008a8:	1885883a 	add	r2,r3,r2
100008ac:	1007883a 	mov	r3,r2
100008b0:	e0bffd17 	ldw	r2,-12(fp)
100008b4:	10c7883a 	add	r3,r2,r3
100008b8:	e0bffe17 	ldw	r2,-8(fp)
100008bc:	100890ba 	slli	r4,r2,2
100008c0:	e0bfff17 	ldw	r2,-4(fp)
100008c4:	2085883a 	add	r2,r4,r2
100008c8:	1009883a 	mov	r4,r2
100008cc:	e0bffc17 	ldw	r2,-16(fp)
100008d0:	1105883a 	add	r2,r2,r4
100008d4:	18c00003 	ldbu	r3,0(r3)
100008d8:	10c00005 	stb	r3,0(r2)
		for(int j=0; j<4; j++) {
100008dc:	e0bffe17 	ldw	r2,-8(fp)
100008e0:	10800044 	addi	r2,r2,1
100008e4:	e0bffe15 	stw	r2,-8(fp)
100008e8:	e0bffe17 	ldw	r2,-8(fp)
100008ec:	10800110 	cmplti	r2,r2,4
100008f0:	103fde1e 	bne	r2,zero,1000086c <shift_rows+0x24>
	for(int i=0; i<4; i++) {
100008f4:	e0bfff17 	ldw	r2,-4(fp)
100008f8:	10800044 	addi	r2,r2,1
100008fc:	e0bfff15 	stw	r2,-4(fp)
10000900:	e0bfff17 	ldw	r2,-4(fp)
10000904:	10800110 	cmplti	r2,r2,4
10000908:	103fd61e 	bne	r2,zero,10000864 <shift_rows+0x1c>
		}
	}
}
1000090c:	0001883a 	nop
10000910:	e037883a 	mov	sp,fp
10000914:	df000017 	ldw	fp,0(sp)
10000918:	dec00104 	addi	sp,sp,4
1000091c:	f800283a 	ret

10000920 <sub_byte>:

uint8_t sub_byte(uint8_t byte_in) {
10000920:	defffe04 	addi	sp,sp,-8
10000924:	df000115 	stw	fp,4(sp)
10000928:	df000104 	addi	fp,sp,4
1000092c:	2005883a 	mov	r2,r4
10000930:	e0bfff05 	stb	r2,-4(fp)
	return aes_sbox[(((byte_in & 0xF0) >> 4) * 16) + (byte_in & 0x0F)];
10000934:	e0bfff03 	ldbu	r2,-4(fp)
10000938:	1004d13a 	srli	r2,r2,4
1000093c:	10803fcc 	andi	r2,r2,255
10000940:	1006913a 	slli	r3,r2,4
10000944:	e0bfff03 	ldbu	r2,-4(fp)
10000948:	108003cc 	andi	r2,r2,15
1000094c:	1887883a 	add	r3,r3,r2
10000950:	008400b4 	movhi	r2,4098
10000954:	1885883a 	add	r2,r3,r2
10000958:	10917203 	ldbu	r2,17864(r2)
}
1000095c:	e037883a 	mov	sp,fp
10000960:	df000017 	ldw	fp,0(sp)
10000964:	dec00104 	addi	sp,sp,4
10000968:	f800283a 	ret

1000096c <sub_word32>:

uint32_t sub_word32(uint32_t word_in) {
1000096c:	defffc04 	addi	sp,sp,-16
10000970:	dfc00315 	stw	ra,12(sp)
10000974:	df000215 	stw	fp,8(sp)
10000978:	df000204 	addi	fp,sp,8
1000097c:	e13ffe15 	stw	r4,-8(fp)
	uint8_t bo_3 = sub_byte((word_in & 0xFF000000) >> 24);
10000980:	e0bffe17 	ldw	r2,-8(fp)
10000984:	1004d63a 	srli	r2,r2,24
10000988:	10803fcc 	andi	r2,r2,255
1000098c:	1009883a 	mov	r4,r2
10000990:	00009200 	call	10000920 <sub_byte>
10000994:	e0bfffc5 	stb	r2,-1(fp)
	uint8_t bo_2 = sub_byte((word_in & 0x00FF0000) >> 16);
10000998:	e0bffe17 	ldw	r2,-8(fp)
1000099c:	1004d43a 	srli	r2,r2,16
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	1009883a 	mov	r4,r2
100009a8:	00009200 	call	10000920 <sub_byte>
100009ac:	e0bfff85 	stb	r2,-2(fp)
	uint8_t bo_1 = sub_byte((word_in & 0x0000FF00) >> 8);
100009b0:	e0bffe17 	ldw	r2,-8(fp)
100009b4:	1004d23a 	srli	r2,r2,8
100009b8:	10803fcc 	andi	r2,r2,255
100009bc:	1009883a 	mov	r4,r2
100009c0:	00009200 	call	10000920 <sub_byte>
100009c4:	e0bfff45 	stb	r2,-3(fp)
	uint8_t bo_0 = sub_byte((word_in & 0x000000FF));
100009c8:	e0bffe17 	ldw	r2,-8(fp)
100009cc:	10803fcc 	andi	r2,r2,255
100009d0:	1009883a 	mov	r4,r2
100009d4:	00009200 	call	10000920 <sub_byte>
100009d8:	e0bfff05 	stb	r2,-4(fp)

	return (bo_3 << 24) | (bo_2 << 16) | (bo_1 << 8) | bo_0;
100009dc:	e0bfffc3 	ldbu	r2,-1(fp)
100009e0:	1006963a 	slli	r3,r2,24
100009e4:	e0bfff83 	ldbu	r2,-2(fp)
100009e8:	1004943a 	slli	r2,r2,16
100009ec:	1886b03a 	or	r3,r3,r2
100009f0:	e0bfff43 	ldbu	r2,-3(fp)
100009f4:	1004923a 	slli	r2,r2,8
100009f8:	1886b03a 	or	r3,r3,r2
100009fc:	e0bfff03 	ldbu	r2,-4(fp)
10000a00:	1884b03a 	or	r2,r3,r2
}
10000a04:	e037883a 	mov	sp,fp
10000a08:	dfc00117 	ldw	ra,4(sp)
10000a0c:	df000017 	ldw	fp,0(sp)
10000a10:	dec00204 	addi	sp,sp,8
10000a14:	f800283a 	ret

10000a18 <sub_word>:

void sub_word(uint8_t* word_in, uint8_t* word_out) {
10000a18:	defffb04 	addi	sp,sp,-20
10000a1c:	dfc00415 	stw	ra,16(sp)
10000a20:	df000315 	stw	fp,12(sp)
10000a24:	dc000215 	stw	r16,8(sp)
10000a28:	df000304 	addi	fp,sp,12
10000a2c:	e13ffe15 	stw	r4,-8(fp)
10000a30:	e17ffd15 	stw	r5,-12(fp)
	word_out[3] = sub_byte(word_in[3]);
10000a34:	e0bffe17 	ldw	r2,-8(fp)
10000a38:	108000c4 	addi	r2,r2,3
10000a3c:	10800003 	ldbu	r2,0(r2)
10000a40:	10c03fcc 	andi	r3,r2,255
10000a44:	e0bffd17 	ldw	r2,-12(fp)
10000a48:	140000c4 	addi	r16,r2,3
10000a4c:	1809883a 	mov	r4,r3
10000a50:	00009200 	call	10000920 <sub_byte>
10000a54:	80800005 	stb	r2,0(r16)
	word_out[2] = sub_byte(word_in[2]);
10000a58:	e0bffe17 	ldw	r2,-8(fp)
10000a5c:	10800084 	addi	r2,r2,2
10000a60:	10800003 	ldbu	r2,0(r2)
10000a64:	10c03fcc 	andi	r3,r2,255
10000a68:	e0bffd17 	ldw	r2,-12(fp)
10000a6c:	14000084 	addi	r16,r2,2
10000a70:	1809883a 	mov	r4,r3
10000a74:	00009200 	call	10000920 <sub_byte>
10000a78:	80800005 	stb	r2,0(r16)
	word_out[1] = sub_byte(word_in[1]);
10000a7c:	e0bffe17 	ldw	r2,-8(fp)
10000a80:	10800044 	addi	r2,r2,1
10000a84:	10800003 	ldbu	r2,0(r2)
10000a88:	10c03fcc 	andi	r3,r2,255
10000a8c:	e0bffd17 	ldw	r2,-12(fp)
10000a90:	14000044 	addi	r16,r2,1
10000a94:	1809883a 	mov	r4,r3
10000a98:	00009200 	call	10000920 <sub_byte>
10000a9c:	80800005 	stb	r2,0(r16)
	word_out[0] = sub_byte(word_in[0]);
10000aa0:	e0bffe17 	ldw	r2,-8(fp)
10000aa4:	10800003 	ldbu	r2,0(r2)
10000aa8:	10803fcc 	andi	r2,r2,255
10000aac:	1009883a 	mov	r4,r2
10000ab0:	00009200 	call	10000920 <sub_byte>
10000ab4:	1007883a 	mov	r3,r2
10000ab8:	e0bffd17 	ldw	r2,-12(fp)
10000abc:	10c00005 	stb	r3,0(r2)
}
10000ac0:	0001883a 	nop
10000ac4:	e6ffff04 	addi	sp,fp,-4
10000ac8:	dfc00217 	ldw	ra,8(sp)
10000acc:	df000117 	ldw	fp,4(sp)
10000ad0:	dc000017 	ldw	r16,0(sp)
10000ad4:	dec00304 	addi	sp,sp,12
10000ad8:	f800283a 	ret

10000adc <rot_word>:

uint32_t rot_word(uint32_t word_in) {
10000adc:	defffe04 	addi	sp,sp,-8
10000ae0:	df000115 	stw	fp,4(sp)
10000ae4:	df000104 	addi	fp,sp,4
10000ae8:	e13fff15 	stw	r4,-4(fp)
	return (((word_in & 0x00FFFFFF) << 8) & 0xFFFFFF00) | ((word_in & 0xFF000000) >> 24);
10000aec:	e0bfff17 	ldw	r2,-4(fp)
10000af0:	1004123a 	roli	r2,r2,8
}
10000af4:	e037883a 	mov	sp,fp
10000af8:	df000017 	ldw	fp,0(sp)
10000afc:	dec00104 	addi	sp,sp,4
10000b00:	f800283a 	ret

10000b04 <mix_columns>:

void mix_columns(uint8_t* mat_in, uint8_t* result) {
10000b04:	defff304 	addi	sp,sp,-52
10000b08:	dfc00c15 	stw	ra,48(sp)
10000b0c:	df000b15 	stw	fp,44(sp)
10000b10:	df000b04 	addi	fp,sp,44
10000b14:	e13ff615 	stw	r4,-40(fp)
10000b18:	e17ff515 	stw	r5,-44(fp)
	uint8_t state_deasm[4][4];	// State_disassembled.
	uint8_t result_deasm[4][4];	// Result disassembled.
	
	memcpy(&state_deasm, mat_in, sizeof(state_deasm));
10000b1c:	e0fff617 	ldw	r3,-40(fp)
10000b20:	e0bffbc4 	addi	r2,fp,-17
10000b24:	1809883a 	mov	r4,r3
10000b28:	00c00404 	movi	r3,16
10000b2c:	180d883a 	mov	r6,r3
10000b30:	200b883a 	mov	r5,r4
10000b34:	1009883a 	mov	r4,r2
10000b38:	00156f00 	call	100156f0 <memcpy>
		
	// Calculate.
	for(uint8_t i=0; i<4; i++) {
10000b3c:	e03fffc5 	stb	zero,-1(fp)
10000b40:	00008f06 	br	10000d80 <mix_columns+0x27c>
		result_deasm[i][3] = 
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000b44:	e0bfffc3 	ldbu	r2,-1(fp)
10000b48:	100490ba 	slli	r2,r2,2
10000b4c:	e085883a 	add	r2,fp,r2
10000b50:	10bffc83 	ldbu	r2,-14(r2)
10000b54:	10803fcc 	andi	r2,r2,255
10000b58:	10c001a4 	muli	r3,r2,6
10000b5c:	008400b4 	movhi	r2,4098
10000b60:	1885883a 	add	r2,r3,r2
10000b64:	10d7e503 	ldbu	r3,24468(r2)
10000b68:	e0bfffc3 	ldbu	r2,-1(fp)
10000b6c:	100490ba 	slli	r2,r2,2
10000b70:	e085883a 	add	r2,fp,r2
10000b74:	10bffc43 	ldbu	r2,-15(r2)
10000b78:	10803fcc 	andi	r2,r2,255
10000b7c:	110001a4 	muli	r4,r2,6
10000b80:	008400b4 	movhi	r2,4098
10000b84:	2085883a 	add	r2,r4,r2
10000b88:	1097e543 	ldbu	r2,24469(r2)
		result_deasm[i][3] = 
10000b8c:	1884f03a 	xor	r2,r3,r2
10000b90:	1007883a 	mov	r3,r2
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000b94:	e0bfffc3 	ldbu	r2,-1(fp)
10000b98:	100490ba 	slli	r2,r2,2
10000b9c:	e085883a 	add	r2,fp,r2
10000ba0:	10bffc03 	ldbu	r2,-16(r2)
		result_deasm[i][3] = 
10000ba4:	1884f03a 	xor	r2,r3,r2
10000ba8:	1009883a 	mov	r4,r2
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000bac:	e0bfffc3 	ldbu	r2,-1(fp)
10000bb0:	100490ba 	slli	r2,r2,2
10000bb4:	e085883a 	add	r2,fp,r2
10000bb8:	10fffbc3 	ldbu	r3,-17(r2)
		result_deasm[i][3] = 
10000bbc:	e0bfffc3 	ldbu	r2,-1(fp)
10000bc0:	20c6f03a 	xor	r3,r4,r3
10000bc4:	100490ba 	slli	r2,r2,2
10000bc8:	e085883a 	add	r2,fp,r2
10000bcc:	10fff885 	stb	r3,-30(r2)
		result_deasm[i][2] = 
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000bd0:	e0bfffc3 	ldbu	r2,-1(fp)
10000bd4:	100490ba 	slli	r2,r2,2
10000bd8:	e085883a 	add	r2,fp,r2
10000bdc:	10fffc83 	ldbu	r3,-14(r2)
10000be0:	e0bfffc3 	ldbu	r2,-1(fp)
10000be4:	100490ba 	slli	r2,r2,2
10000be8:	e085883a 	add	r2,fp,r2
10000bec:	10bffc43 	ldbu	r2,-15(r2)
10000bf0:	10803fcc 	andi	r2,r2,255
10000bf4:	110001a4 	muli	r4,r2,6
10000bf8:	008400b4 	movhi	r2,4098
10000bfc:	2085883a 	add	r2,r4,r2
10000c00:	1097e503 	ldbu	r2,24468(r2)
		result_deasm[i][2] = 
10000c04:	1884f03a 	xor	r2,r3,r2
10000c08:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000c0c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c10:	100490ba 	slli	r2,r2,2
10000c14:	e085883a 	add	r2,fp,r2
10000c18:	10bffc03 	ldbu	r2,-16(r2)
10000c1c:	10803fcc 	andi	r2,r2,255
10000c20:	10c001a4 	muli	r3,r2,6
10000c24:	008400b4 	movhi	r2,4098
10000c28:	1885883a 	add	r2,r3,r2
10000c2c:	1097e543 	ldbu	r2,24469(r2)
		result_deasm[i][2] = 
10000c30:	2084f03a 	xor	r2,r4,r2
10000c34:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000c38:	e0bfffc3 	ldbu	r2,-1(fp)
10000c3c:	100490ba 	slli	r2,r2,2
10000c40:	e085883a 	add	r2,fp,r2
10000c44:	10fffbc3 	ldbu	r3,-17(r2)
		result_deasm[i][2] = 
10000c48:	e0bfffc3 	ldbu	r2,-1(fp)
10000c4c:	20c6f03a 	xor	r3,r4,r3
10000c50:	100490ba 	slli	r2,r2,2
10000c54:	e085883a 	add	r2,fp,r2
10000c58:	10fff845 	stb	r3,-31(r2)
		result_deasm[i][1] = 
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000c5c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c60:	100490ba 	slli	r2,r2,2
10000c64:	e085883a 	add	r2,fp,r2
10000c68:	10fffc83 	ldbu	r3,-14(r2)
10000c6c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c70:	100490ba 	slli	r2,r2,2
10000c74:	e085883a 	add	r2,fp,r2
10000c78:	10bffc43 	ldbu	r2,-15(r2)
		result_deasm[i][1] = 
10000c7c:	1884f03a 	xor	r2,r3,r2
10000c80:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000c84:	e0bfffc3 	ldbu	r2,-1(fp)
10000c88:	100490ba 	slli	r2,r2,2
10000c8c:	e085883a 	add	r2,fp,r2
10000c90:	10bffc03 	ldbu	r2,-16(r2)
10000c94:	10803fcc 	andi	r2,r2,255
10000c98:	10c001a4 	muli	r3,r2,6
10000c9c:	008400b4 	movhi	r2,4098
10000ca0:	1885883a 	add	r2,r3,r2
10000ca4:	1097e503 	ldbu	r2,24468(r2)
		result_deasm[i][1] = 
10000ca8:	2084f03a 	xor	r2,r4,r2
10000cac:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000cb0:	e0bfffc3 	ldbu	r2,-1(fp)
10000cb4:	100490ba 	slli	r2,r2,2
10000cb8:	e085883a 	add	r2,fp,r2
10000cbc:	10bffbc3 	ldbu	r2,-17(r2)
10000cc0:	10803fcc 	andi	r2,r2,255
10000cc4:	10c001a4 	muli	r3,r2,6
10000cc8:	008400b4 	movhi	r2,4098
10000ccc:	1885883a 	add	r2,r3,r2
10000cd0:	10d7e543 	ldbu	r3,24469(r2)
		result_deasm[i][1] = 
10000cd4:	e0bfffc3 	ldbu	r2,-1(fp)
10000cd8:	20c6f03a 	xor	r3,r4,r3
10000cdc:	100490ba 	slli	r2,r2,2
10000ce0:	e085883a 	add	r2,fp,r2
10000ce4:	10fff805 	stb	r3,-32(r2)
		result_deasm[i][0] = 
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000ce8:	e0bfffc3 	ldbu	r2,-1(fp)
10000cec:	100490ba 	slli	r2,r2,2
10000cf0:	e085883a 	add	r2,fp,r2
10000cf4:	10bffc83 	ldbu	r2,-14(r2)
10000cf8:	10803fcc 	andi	r2,r2,255
10000cfc:	10c001a4 	muli	r3,r2,6
10000d00:	008400b4 	movhi	r2,4098
10000d04:	1885883a 	add	r2,r3,r2
10000d08:	10d7e543 	ldbu	r3,24469(r2)
10000d0c:	e0bfffc3 	ldbu	r2,-1(fp)
10000d10:	100490ba 	slli	r2,r2,2
10000d14:	e085883a 	add	r2,fp,r2
10000d18:	10bffc43 	ldbu	r2,-15(r2)
		result_deasm[i][0] = 
10000d1c:	1884f03a 	xor	r2,r3,r2
10000d20:	1007883a 	mov	r3,r2
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000d24:	e0bfffc3 	ldbu	r2,-1(fp)
10000d28:	100490ba 	slli	r2,r2,2
10000d2c:	e085883a 	add	r2,fp,r2
10000d30:	10bffc03 	ldbu	r2,-16(r2)
		result_deasm[i][0] = 
10000d34:	1884f03a 	xor	r2,r3,r2
10000d38:	1009883a 	mov	r4,r2
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000d3c:	e0bfffc3 	ldbu	r2,-1(fp)
10000d40:	100490ba 	slli	r2,r2,2
10000d44:	e085883a 	add	r2,fp,r2
10000d48:	10bffbc3 	ldbu	r2,-17(r2)
10000d4c:	10803fcc 	andi	r2,r2,255
10000d50:	10c001a4 	muli	r3,r2,6
10000d54:	008400b4 	movhi	r2,4098
10000d58:	1885883a 	add	r2,r3,r2
10000d5c:	10d7e503 	ldbu	r3,24468(r2)
		result_deasm[i][0] = 
10000d60:	e0bfffc3 	ldbu	r2,-1(fp)
10000d64:	20c6f03a 	xor	r3,r4,r3
10000d68:	100490ba 	slli	r2,r2,2
10000d6c:	e085883a 	add	r2,fp,r2
10000d70:	10fff7c5 	stb	r3,-33(r2)
	for(uint8_t i=0; i<4; i++) {
10000d74:	e0bfffc3 	ldbu	r2,-1(fp)
10000d78:	10800044 	addi	r2,r2,1
10000d7c:	e0bfffc5 	stb	r2,-1(fp)
10000d80:	e0bfffc3 	ldbu	r2,-1(fp)
10000d84:	10800130 	cmpltui	r2,r2,4
10000d88:	103f6e1e 	bne	r2,zero,10000b44 <mix_columns+0x40>
	}
	
	memcpy(result, &result_deasm, sizeof(state_deasm));
10000d8c:	e0bff517 	ldw	r2,-44(fp)
10000d90:	1009883a 	mov	r4,r2
10000d94:	e0bff7c4 	addi	r2,fp,-33
10000d98:	00c00404 	movi	r3,16
10000d9c:	180d883a 	mov	r6,r3
10000da0:	100b883a 	mov	r5,r2
10000da4:	00156f00 	call	100156f0 <memcpy>
}
10000da8:	0001883a 	nop
10000dac:	e037883a 	mov	sp,fp
10000db0:	dfc00117 	ldw	ra,4(sp)
10000db4:	df000017 	ldw	fp,0(sp)
10000db8:	dec00204 	addi	sp,sp,8
10000dbc:	f800283a 	ret

10000dc0 <add_round_key>:

// Each have a shape of uint32_t[4]
void add_round_key(uint32_t* state, uint32_t* round_key, uint32_t* result) {
10000dc0:	defffc04 	addi	sp,sp,-16
10000dc4:	df000315 	stw	fp,12(sp)
10000dc8:	df000304 	addi	fp,sp,12
10000dcc:	e13fff15 	stw	r4,-4(fp)
10000dd0:	e17ffe15 	stw	r5,-8(fp)
10000dd4:	e1bffd15 	stw	r6,-12(fp)
	result[0] = state[0] ^ round_key[0];
10000dd8:	e0bfff17 	ldw	r2,-4(fp)
10000ddc:	10c00017 	ldw	r3,0(r2)
10000de0:	e0bffe17 	ldw	r2,-8(fp)
10000de4:	10800017 	ldw	r2,0(r2)
10000de8:	1886f03a 	xor	r3,r3,r2
10000dec:	e0bffd17 	ldw	r2,-12(fp)
10000df0:	10c00015 	stw	r3,0(r2)
	result[1] = state[1] ^ round_key[1];
10000df4:	e0bfff17 	ldw	r2,-4(fp)
10000df8:	10800104 	addi	r2,r2,4
10000dfc:	11000017 	ldw	r4,0(r2)
10000e00:	e0bffe17 	ldw	r2,-8(fp)
10000e04:	10800104 	addi	r2,r2,4
10000e08:	10c00017 	ldw	r3,0(r2)
10000e0c:	e0bffd17 	ldw	r2,-12(fp)
10000e10:	10800104 	addi	r2,r2,4
10000e14:	20c6f03a 	xor	r3,r4,r3
10000e18:	10c00015 	stw	r3,0(r2)
	result[2] = state[2] ^ round_key[2];
10000e1c:	e0bfff17 	ldw	r2,-4(fp)
10000e20:	10800204 	addi	r2,r2,8
10000e24:	11000017 	ldw	r4,0(r2)
10000e28:	e0bffe17 	ldw	r2,-8(fp)
10000e2c:	10800204 	addi	r2,r2,8
10000e30:	10c00017 	ldw	r3,0(r2)
10000e34:	e0bffd17 	ldw	r2,-12(fp)
10000e38:	10800204 	addi	r2,r2,8
10000e3c:	20c6f03a 	xor	r3,r4,r3
10000e40:	10c00015 	stw	r3,0(r2)
	result[3] = state[3] ^ round_key[3];
10000e44:	e0bfff17 	ldw	r2,-4(fp)
10000e48:	10800304 	addi	r2,r2,12
10000e4c:	11000017 	ldw	r4,0(r2)
10000e50:	e0bffe17 	ldw	r2,-8(fp)
10000e54:	10800304 	addi	r2,r2,12
10000e58:	10c00017 	ldw	r3,0(r2)
10000e5c:	e0bffd17 	ldw	r2,-12(fp)
10000e60:	10800304 	addi	r2,r2,12
10000e64:	20c6f03a 	xor	r3,r4,r3
10000e68:	10c00015 	stw	r3,0(r2)
}
10000e6c:	0001883a 	nop
10000e70:	e037883a 	mov	sp,fp
10000e74:	df000017 	ldw	fp,0(sp)
10000e78:	dec00104 	addi	sp,sp,4
10000e7c:	f800283a 	ret

10000e80 <transpose>:

void transpose(uint8_t* arr_in, uint8_t* arr_out) {
10000e80:	defffb04 	addi	sp,sp,-20
10000e84:	df000415 	stw	fp,16(sp)
10000e88:	df000404 	addi	fp,sp,16
10000e8c:	e13ffd15 	stw	r4,-12(fp)
10000e90:	e17ffc15 	stw	r5,-16(fp)
	for(int i=0; i<4; i++) {
10000e94:	e03fff15 	stw	zero,-4(fp)
10000e98:	00001b06 	br	10000f08 <transpose+0x88>
		for(int j=0; j<4; j++) {
10000e9c:	e03ffe15 	stw	zero,-8(fp)
10000ea0:	00001306 	br	10000ef0 <transpose+0x70>
			arr_out[j*4+i] = arr_in[i*4+j];
10000ea4:	e0bfff17 	ldw	r2,-4(fp)
10000ea8:	100690ba 	slli	r3,r2,2
10000eac:	e0bffe17 	ldw	r2,-8(fp)
10000eb0:	1885883a 	add	r2,r3,r2
10000eb4:	1007883a 	mov	r3,r2
10000eb8:	e0bffd17 	ldw	r2,-12(fp)
10000ebc:	10c7883a 	add	r3,r2,r3
10000ec0:	e0bffe17 	ldw	r2,-8(fp)
10000ec4:	100890ba 	slli	r4,r2,2
10000ec8:	e0bfff17 	ldw	r2,-4(fp)
10000ecc:	2085883a 	add	r2,r4,r2
10000ed0:	1009883a 	mov	r4,r2
10000ed4:	e0bffc17 	ldw	r2,-16(fp)
10000ed8:	1105883a 	add	r2,r2,r4
10000edc:	18c00003 	ldbu	r3,0(r3)
10000ee0:	10c00005 	stb	r3,0(r2)
		for(int j=0; j<4; j++) {
10000ee4:	e0bffe17 	ldw	r2,-8(fp)
10000ee8:	10800044 	addi	r2,r2,1
10000eec:	e0bffe15 	stw	r2,-8(fp)
10000ef0:	e0bffe17 	ldw	r2,-8(fp)
10000ef4:	10800110 	cmplti	r2,r2,4
10000ef8:	103fea1e 	bne	r2,zero,10000ea4 <transpose+0x24>
	for(int i=0; i<4; i++) {
10000efc:	e0bfff17 	ldw	r2,-4(fp)
10000f00:	10800044 	addi	r2,r2,1
10000f04:	e0bfff15 	stw	r2,-4(fp)
10000f08:	e0bfff17 	ldw	r2,-4(fp)
10000f0c:	10800110 	cmplti	r2,r2,4
10000f10:	103fe21e 	bne	r2,zero,10000e9c <transpose+0x1c>
		}
	}
}
10000f14:	0001883a 	nop
10000f18:	e037883a 	mov	sp,fp
10000f1c:	df000017 	ldw	fp,0(sp)
10000f20:	dec00104 	addi	sp,sp,4
10000f24:	f800283a 	ret

10000f28 <screen_test>:
#include "core.h"
#include "hardware.h"
#include "tile_eng_driver.h"
#include <stdint.h>

void screen_test() {
10000f28:	deffc104 	addi	sp,sp,-252
10000f2c:	dfc03e15 	stw	ra,248(sp)
10000f30:	df003d15 	stw	fp,244(sp)
10000f34:	df003d04 	addi	fp,sp,244
	printf("Screen Test is running!");
10000f38:	010400b4 	movhi	r4,4098
10000f3c:	2111f204 	addi	r4,r4,18376
10000f40:	0015aa00 	call	10015aa0 <printf>
	palette_ptr[0b00000] = 0x117180;
10000f44:	00c02004 	movi	r3,128
10000f48:	00800474 	movhi	r2,17
10000f4c:	109c6004 	addi	r2,r2,29056
10000f50:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00001] = 0x6EECFF;
10000f54:	00c02104 	movi	r3,132
10000f58:	00801bf4 	movhi	r2,111
10000f5c:	10bb3fc4 	addi	r2,r2,-4865
10000f60:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00010] = 0x1BB4CC;
10000f64:	00c02204 	movi	r3,136
10000f68:	00800734 	movhi	r2,28
10000f6c:	10ad3304 	addi	r2,r2,-19252
10000f70:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00011] = 0x21E3FF;
10000f74:	00c02304 	movi	r3,140
10000f78:	008008b4 	movhi	r2,34
10000f7c:	10b8ffc4 	addi	r2,r2,-7169
10000f80:	18800015 	stw	r2,0(r3)

	Palette newPalette;
	newPalette.paletteId = 1;
10000f84:	00800044 	movi	r2,1
10000f88:	e0bff615 	stw	r2,-40(fp)
	newPalette.colors[0] = 0x723E80;
10000f8c:	00801cb4 	movhi	r2,114
10000f90:	108fa004 	addi	r2,r2,16000
10000f94:	e0bff715 	stw	r2,-36(fp)
	newPalette.colors[1] = 0xF3C7FF;
10000f98:	00803d34 	movhi	r2,244
10000f9c:	10b1ffc4 	addi	r2,r2,-14337
10000fa0:	e0bff815 	stw	r2,-32(fp)
	newPalette.colors[2] = 0x796380;
10000fa4:	00801e74 	movhi	r2,121
10000fa8:	1098e004 	addi	r2,r2,25472
10000fac:	e0bff915 	stw	r2,-28(fp)
	newPalette.colors[3] = 0xE57DFF;
10000fb0:	00803974 	movhi	r2,229
10000fb4:	109f7fc4 	addi	r2,r2,32255
10000fb8:	e0bffa15 	stw	r2,-24(fp)
	writePalette(&newPalette);
10000fbc:	e0bff604 	addi	r2,fp,-40
10000fc0:	1009883a 	mov	r4,r2
10000fc4:	00046d80 	call	100046d8 <writePalette>

	Palette newPalette2;
	newPalette2.paletteId = 2;
10000fc8:	00800084 	movi	r2,2
10000fcc:	e0bff115 	stw	r2,-60(fp)
	newPalette2.colors[0] = 0x2F802E;
10000fd0:	00800c34 	movhi	r2,48
10000fd4:	10a00b84 	addi	r2,r2,-32722
10000fd8:	e0bff215 	stw	r2,-56(fp)
	newPalette2.colors[3] = 0x5EFF5B;
10000fdc:	008017f4 	movhi	r2,95
10000fe0:	10bfd6c4 	addi	r2,r2,-165
10000fe4:	e0bff515 	stw	r2,-44(fp)
	writePalette(&newPalette2);
10000fe8:	e0bff104 	addi	r2,fp,-60
10000fec:	1009883a 	mov	r4,r2
10000ff0:	00046d80 	call	100046d8 <writePalette>

	Palette newPalette3;
	newPalette3.paletteId = 3;
10000ff4:	008000c4 	movi	r2,3
10000ff8:	e0bfec15 	stw	r2,-80(fp)
	newPalette3.colors[0] = 0x805E1B;
10000ffc:	00802034 	movhi	r2,128
10001000:	109786c4 	addi	r2,r2,24091
10001004:	e0bfed15 	stw	r2,-76(fp)
	newPalette3.colors[3] = 0xFFBC36;
10001008:	00804034 	movhi	r2,256
1000100c:	10af0d84 	addi	r2,r2,-17354
10001010:	e0bff015 	stw	r2,-64(fp)
	writePalette(&newPalette3);
10001014:	e0bfec04 	addi	r2,fp,-80
10001018:	1009883a 	mov	r4,r2
1000101c:	00046d80 	call	100046d8 <writePalette>

	Sprite wavey;
	wavey.sprite_id = 0;
10001020:	e03fe38d 	sth	zero,-114(fp)
	char wavey_mat[16][8] = {
10001024:	e0ffc384 	addi	r3,fp,-242
10001028:	008400b4 	movhi	r2,4098
1000102c:	10920184 	addi	r2,r2,18438
10001030:	01002004 	movi	r4,128
10001034:	200d883a 	mov	r6,r4
10001038:	100b883a 	mov	r5,r2
1000103c:	1809883a 	mov	r4,r3
10001040:	00156f00 	call	100156f0 <memcpy>
			"        ",
			"        ",
			"        ",
	};

	parseSprite(&wavey, wavey_mat);
10001044:	e0ffc384 	addi	r3,fp,-242
10001048:	e0bfe384 	addi	r2,fp,-114
1000104c:	180b883a 	mov	r5,r3
10001050:	1009883a 	mov	r4,r2
10001054:	00048840 	call	10004884 <parseSprite>
	for(int i=0;i<15;i++) {
10001058:	e03fff15 	stw	zero,-4(fp)
1000105c:	00000c06 	br	10001090 <screen_test+0x168>
		printf("%04x\n",wavey.lines[i]);
10001060:	e0bfff17 	ldw	r2,-4(fp)
10001064:	1085883a 	add	r2,r2,r2
10001068:	e085883a 	add	r2,fp,r2
1000106c:	10bfe40b 	ldhu	r2,-112(r2)
10001070:	10bfffcc 	andi	r2,r2,65535
10001074:	100b883a 	mov	r5,r2
10001078:	010400b4 	movhi	r4,4098
1000107c:	2111f804 	addi	r4,r4,18400
10001080:	0015aa00 	call	10015aa0 <printf>
	for(int i=0;i<15;i++) {
10001084:	e0bfff17 	ldw	r2,-4(fp)
10001088:	10800044 	addi	r2,r2,1
1000108c:	e0bfff15 	stw	r2,-4(fp)
10001090:	e0bfff17 	ldw	r2,-4(fp)
10001094:	108003d0 	cmplti	r2,r2,15
10001098:	103ff11e 	bne	r2,zero,10001060 <screen_test+0x138>
	}
	printf("\n\n");
1000109c:	010400b4 	movhi	r4,4098
100010a0:	2111fa04 	addi	r4,r4,18408
100010a4:	0015bc40 	call	10015bc4 <puts>

	writeSprite(&wavey);
100010a8:	e0bfe384 	addi	r2,fp,-114
100010ac:	1009883a 	mov	r4,r2
100010b0:	00048fc0 	call	100048fc <writeSprite>
	printf("\n\n");
100010b4:	010400b4 	movhi	r4,4098
100010b8:	2111fa04 	addi	r4,r4,18408
100010bc:	0015bc40 	call	10015bc4 <puts>

	for(int i=0;i<8;i++) {
100010c0:	e03ffe15 	stw	zero,-8(fp)
100010c4:	00000b06 	br	100010f4 <screen_test+0x1cc>
		printf("%08x\n",spriteram_ptr[i]);
100010c8:	e0bffe17 	ldw	r2,-8(fp)
100010cc:	100490ba 	slli	r2,r2,2
100010d0:	10860004 	addi	r2,r2,6144
100010d4:	10800017 	ldw	r2,0(r2)
100010d8:	100b883a 	mov	r5,r2
100010dc:	010400b4 	movhi	r4,4098
100010e0:	2111fb04 	addi	r4,r4,18412
100010e4:	0015aa00 	call	10015aa0 <printf>
	for(int i=0;i<8;i++) {
100010e8:	e0bffe17 	ldw	r2,-8(fp)
100010ec:	10800044 	addi	r2,r2,1
100010f0:	e0bffe15 	stw	r2,-8(fp)
100010f4:	e0bffe17 	ldw	r2,-8(fp)
100010f8:	10800210 	cmplti	r2,r2,8
100010fc:	103ff21e 	bne	r2,zero,100010c8 <screen_test+0x1a0>
	}

	// spriteram_ptr[0] = 0xFFFFFFFF;
	// spriteram_ptr[1] = 0xAAAAAAAA;
	uint8_t counter = 0;
10001100:	e03ffdc5 	stb	zero,-9(fp)
	for(int i=0; i<80; i++) {
10001104:	e03ffc15 	stw	zero,-16(fp)
10001108:	00001606 	br	10001164 <screen_test+0x23c>
		for(int j=0; j<30; j++) {
1000110c:	e03ffb15 	stw	zero,-20(fp)
10001110:	00000e06 	br	1000114c <screen_test+0x224>
			drawTile(i,j,counter&0x03,128);
10001114:	e0bffdc3 	ldbu	r2,-9(fp)
10001118:	108000cc 	andi	r2,r2,3
1000111c:	01c02004 	movi	r7,128
10001120:	100d883a 	mov	r6,r2
10001124:	e17ffb17 	ldw	r5,-20(fp)
10001128:	e13ffc17 	ldw	r4,-16(fp)
1000112c:	00045ac0 	call	100045ac <drawTile>
			counter = (counter+1) & 0x7F;
10001130:	e0bffdc3 	ldbu	r2,-9(fp)
10001134:	10800044 	addi	r2,r2,1
10001138:	10801fcc 	andi	r2,r2,127
1000113c:	e0bffdc5 	stb	r2,-9(fp)
		for(int j=0; j<30; j++) {
10001140:	e0bffb17 	ldw	r2,-20(fp)
10001144:	10800044 	addi	r2,r2,1
10001148:	e0bffb15 	stw	r2,-20(fp)
1000114c:	e0bffb17 	ldw	r2,-20(fp)
10001150:	10800790 	cmplti	r2,r2,30
10001154:	103fef1e 	bne	r2,zero,10001114 <screen_test+0x1ec>
	for(int i=0; i<80; i++) {
10001158:	e0bffc17 	ldw	r2,-16(fp)
1000115c:	10800044 	addi	r2,r2,1
10001160:	e0bffc15 	stw	r2,-16(fp)
10001164:	e0bffc17 	ldw	r2,-16(fp)
10001168:	10801410 	cmplti	r2,r2,80
1000116c:	103fe71e 	bne	r2,zero,1000110c <screen_test+0x1e4>
		}
	}

	writeText(0,0,"Score",0);
10001170:	000f883a 	mov	r7,zero
10001174:	018400b4 	movhi	r6,4098
10001178:	3191fd04 	addi	r6,r6,18420
1000117c:	000b883a 	mov	r5,zero
10001180:	0009883a 	mov	r4,zero
10001184:	00049d00 	call	100049d0 <writeText>
	writeText(0,2,"Highscore",0);
10001188:	000f883a 	mov	r7,zero
1000118c:	018400b4 	movhi	r6,4098
10001190:	3191ff04 	addi	r6,r6,18428
10001194:	01400084 	movi	r5,2
10001198:	0009883a 	mov	r4,zero
1000119c:	00049d00 	call	100049d0 <writeText>
}
100011a0:	0001883a 	nop
100011a4:	e037883a 	mov	sp,fp
100011a8:	dfc00117 	ldw	ra,4(sp)
100011ac:	df000017 	ldw	fp,0(sp)
100011b0:	dec00204 	addi	sp,sp,8
100011b4:	f800283a 	ret

100011b8 <IO_init>:
//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
100011b8:	deffff04 	addi	sp,sp,-4
100011bc:	df000015 	stw	fp,0(sp)
100011c0:	d839883a 	mov	fp,sp
	*otg_hpi_reset = 0xFF;
100011c4:	00801404 	movi	r2,80
100011c8:	00ffffc4 	movi	r3,-1
100011cc:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
100011d0:	00801804 	movi	r2,96
100011d4:	00ffffc4 	movi	r3,-1
100011d8:	10c00005 	stb	r3,0(r2)
	*otg_hpi_r = 0xFF;
100011dc:	00804004 	movi	r2,256
100011e0:	00ffffc4 	movi	r3,-1
100011e4:	10c00005 	stb	r3,0(r2)
	*otg_hpi_w = 0xFF;
100011e8:	00801c04 	movi	r2,112
100011ec:	00ffffc4 	movi	r3,-1
100011f0:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = 0;
100011f4:	00801004 	movi	r2,64
100011f8:	10000015 	stw	zero,0(r2)
	*otg_hpi_data = 0;
100011fc:	00804404 	movi	r2,272
10001200:	10000015 	stw	zero,0(r2)
	// Reset OTG chip
	*otg_hpi_cs = 0;
10001204:	00801804 	movi	r2,96
10001208:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0;
1000120c:	00801404 	movi	r2,80
10001210:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0xFF;
10001214:	00801404 	movi	r2,80
10001218:	00ffffc4 	movi	r3,-1
1000121c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
10001220:	00801804 	movi	r2,96
10001224:	00ffffc4 	movi	r3,-1
10001228:	10c00005 	stb	r3,0(r2)
}
1000122c:	0001883a 	nop
10001230:	e037883a 	mov	sp,fp
10001234:	df000017 	ldw	fp,0(sp)
10001238:	dec00104 	addi	sp,sp,4
1000123c:	f800283a 	ret

10001240 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data)
{
10001240:	defffd04 	addi	sp,sp,-12
10001244:	df000215 	stw	fp,8(sp)
10001248:	df000204 	addi	fp,sp,8
1000124c:	2005883a 	mov	r2,r4
10001250:	2807883a 	mov	r3,r5
10001254:	e0bfff05 	stb	r2,-4(fp)
10001258:	1805883a 	mov	r2,r3
1000125c:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
10001260:	00801004 	movi	r2,64
10001264:	e0ffff03 	ldbu	r3,-4(fp)
10001268:	10c00015 	stw	r3,0(r2)
	*otg_hpi_data = Data;
1000126c:	00804404 	movi	r2,272
10001270:	e0fffe0b 	ldhu	r3,-8(fp)
10001274:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
10001278:	00801804 	movi	r2,96
1000127c:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0;
10001280:	00801c04 	movi	r2,112
10001284:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0xFF;
10001288:	00801c04 	movi	r2,112
1000128c:	00ffffc4 	movi	r3,-1
10001290:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
10001294:	00801804 	movi	r2,96
10001298:	00ffffc4 	movi	r3,-1
1000129c:	10c00005 	stb	r3,0(r2)
	//printf("Wrote %x to HPI %d\n", Data, Address);
}
100012a0:	0001883a 	nop
100012a4:	e037883a 	mov	sp,fp
100012a8:	df000017 	ldw	fp,0(sp)
100012ac:	dec00104 	addi	sp,sp,4
100012b0:	f800283a 	ret

100012b4 <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
100012b4:	defffd04 	addi	sp,sp,-12
100012b8:	df000215 	stw	fp,8(sp)
100012bc:	df000204 	addi	fp,sp,8
100012c0:	2005883a 	mov	r2,r4
100012c4:	e0bffe05 	stb	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
100012c8:	00801004 	movi	r2,64
100012cc:	e0fffe03 	ldbu	r3,-8(fp)
100012d0:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
100012d4:	00801804 	movi	r2,96
100012d8:	10000005 	stb	zero,0(r2)
	*otg_hpi_r = 0;
100012dc:	00804004 	movi	r2,256
100012e0:	10000005 	stb	zero,0(r2)
	temp = *otg_hpi_data;
100012e4:	00804404 	movi	r2,272
100012e8:	10800017 	ldw	r2,0(r2)
100012ec:	e0bfff8d 	sth	r2,-2(fp)
	*otg_hpi_r = 0xFF;
100012f0:	00804004 	movi	r2,256
100012f4:	00ffffc4 	movi	r3,-1
100012f8:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
100012fc:	00801804 	movi	r2,96
10001300:	00ffffc4 	movi	r3,-1
10001304:	10c00005 	stb	r3,0(r2)
	//printf("%x\n",temp);
	//printf("Read %x from HPI %d\n", temp, Address);
	return temp;
10001308:	e0bfff8b 	ldhu	r2,-2(fp)
}
1000130c:	e037883a 	mov	sp,fp
10001310:	df000017 	ldw	fp,0(sp)
10001314:	dec00104 	addi	sp,sp,4
10001318:	f800283a 	ret

1000131c <init_game>:
// In the board configuration, it contains additional PLAYER_POS, GHOST_INKY, GHOST_BLINKY, GHOST_CLYDE and GHOST_PINKY.
// These values are only used for initialization.

// Initialize a game.
// The game variable must already have space allocated.
void init_game(Game* game) {
1000131c:	defffc04 	addi	sp,sp,-16
10001320:	dfc00315 	stw	ra,12(sp)
10001324:	df000215 	stw	fp,8(sp)
10001328:	df000204 	addi	fp,sp,8
1000132c:	e13ffe15 	stw	r4,-8(fp)
    uint8_t current_board = 0;
10001330:	e03fff45 	stb	zero,-3(fp)
    initScreen();
10001334:	0002df40 	call	10002df4 <initScreen>

    game->candy_count = 0;
10001338:	e0bffe17 	ldw	r2,-8(fp)
1000133c:	1000ea0d 	sth	zero,936(r2)
    game->state = PREINIT;
10001340:	e0bffe17 	ldw	r2,-8(fp)
10001344:	1000e915 	stw	zero,932(r2)

    // Find tiles in this map and assign them.
    uint8_t i, j;
    for(i=0; i<15; i+=1) {
10001348:	e03fffc5 	stb	zero,-1(fp)
1000134c:	00010106 	br	10001754 <init_game+0x438>
        for(j=0; j<15; j+=1) {
10001350:	e03fff85 	stb	zero,-2(fp)
10001354:	0000f906 	br	1000173c <init_game+0x420>
            if(GAME_BOARDS[current_board][i][j] == PLAYER_POS) {
10001358:	e0ffff43 	ldbu	r3,-3(fp)
1000135c:	e13fffc3 	ldbu	r4,-1(fp)
10001360:	e0bfff83 	ldbu	r2,-2(fp)
10001364:	210003e4 	muli	r4,r4,15
10001368:	18c03864 	muli	r3,r3,225
1000136c:	20c7883a 	add	r3,r4,r3
10001370:	1887883a 	add	r3,r3,r2
10001374:	008400b4 	movhi	r2,4098
10001378:	1885883a 	add	r2,r3,r2
1000137c:	10997503 	ldbu	r2,26068(r2)
10001380:	10803fcc 	andi	r2,r2,255
10001384:	10800218 	cmpnei	r2,r2,8
10001388:	1000161e 	bne	r2,zero,100013e4 <init_game+0xc8>
                game->player.xpos = i;
1000138c:	e0bffe17 	ldw	r2,-8(fp)
10001390:	e0ffffc3 	ldbu	r3,-1(fp)
10001394:	10c0e105 	stb	r3,900(r2)
                game->player.ypos = j;
10001398:	e0bffe17 	ldw	r2,-8(fp)
1000139c:	e0ffff83 	ldbu	r3,-2(fp)
100013a0:	10c0e145 	stb	r3,901(r2)
                game->game_map[i][j] = CANDY;
100013a4:	e13fffc3 	ldbu	r4,-1(fp)
100013a8:	e0bfff83 	ldbu	r2,-2(fp)
100013ac:	e0fffe17 	ldw	r3,-8(fp)
100013b0:	210003e4 	muli	r4,r4,15
100013b4:	2085883a 	add	r2,r4,r2
100013b8:	100490ba 	slli	r2,r2,2
100013bc:	1885883a 	add	r2,r3,r2
100013c0:	00c00044 	movi	r3,1
100013c4:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100013c8:	e0bffe17 	ldw	r2,-8(fp)
100013cc:	1080ea0b 	ldhu	r2,936(r2)
100013d0:	10800044 	addi	r2,r2,1
100013d4:	1007883a 	mov	r3,r2
100013d8:	e0bffe17 	ldw	r2,-8(fp)
100013dc:	10c0ea0d 	sth	r3,936(r2)
100013e0:	0000d306 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_BLINKY) {
100013e4:	e0ffff43 	ldbu	r3,-3(fp)
100013e8:	e13fffc3 	ldbu	r4,-1(fp)
100013ec:	e0bfff83 	ldbu	r2,-2(fp)
100013f0:	210003e4 	muli	r4,r4,15
100013f4:	18c03864 	muli	r3,r3,225
100013f8:	20c7883a 	add	r3,r4,r3
100013fc:	1887883a 	add	r3,r3,r2
10001400:	008400b4 	movhi	r2,4098
10001404:	1885883a 	add	r2,r3,r2
10001408:	10997503 	ldbu	r2,26068(r2)
1000140c:	10803fcc 	andi	r2,r2,255
10001410:	10800118 	cmpnei	r2,r2,4
10001414:	1000161e 	bne	r2,zero,10001470 <init_game+0x154>
                game->blinky.xpos = i;
10001418:	e0bffe17 	ldw	r2,-8(fp)
1000141c:	e0ffffc3 	ldbu	r3,-1(fp)
10001420:	10c0e285 	stb	r3,906(r2)
                game->blinky.ypos = j;
10001424:	e0bffe17 	ldw	r2,-8(fp)
10001428:	e0ffff83 	ldbu	r3,-2(fp)
1000142c:	10c0e2c5 	stb	r3,907(r2)
                game->game_map[i][j] = CANDY;
10001430:	e13fffc3 	ldbu	r4,-1(fp)
10001434:	e0bfff83 	ldbu	r2,-2(fp)
10001438:	e0fffe17 	ldw	r3,-8(fp)
1000143c:	210003e4 	muli	r4,r4,15
10001440:	2085883a 	add	r2,r4,r2
10001444:	100490ba 	slli	r2,r2,2
10001448:	1885883a 	add	r2,r3,r2
1000144c:	00c00044 	movi	r3,1
10001450:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
10001454:	e0bffe17 	ldw	r2,-8(fp)
10001458:	1080ea0b 	ldhu	r2,936(r2)
1000145c:	10800044 	addi	r2,r2,1
10001460:	1007883a 	mov	r3,r2
10001464:	e0bffe17 	ldw	r2,-8(fp)
10001468:	10c0ea0d 	sth	r3,936(r2)
1000146c:	0000b006 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_PINKY) {
10001470:	e0ffff43 	ldbu	r3,-3(fp)
10001474:	e13fffc3 	ldbu	r4,-1(fp)
10001478:	e0bfff83 	ldbu	r2,-2(fp)
1000147c:	210003e4 	muli	r4,r4,15
10001480:	18c03864 	muli	r3,r3,225
10001484:	20c7883a 	add	r3,r4,r3
10001488:	1887883a 	add	r3,r3,r2
1000148c:	008400b4 	movhi	r2,4098
10001490:	1885883a 	add	r2,r3,r2
10001494:	10997503 	ldbu	r2,26068(r2)
10001498:	10803fcc 	andi	r2,r2,255
1000149c:	10800158 	cmpnei	r2,r2,5
100014a0:	1000161e 	bne	r2,zero,100014fc <init_game+0x1e0>
                game->pinky.xpos = i;
100014a4:	e0bffe17 	ldw	r2,-8(fp)
100014a8:	e0ffffc3 	ldbu	r3,-1(fp)
100014ac:	10c0e405 	stb	r3,912(r2)
                game->pinky.ypos = j;
100014b0:	e0bffe17 	ldw	r2,-8(fp)
100014b4:	e0ffff83 	ldbu	r3,-2(fp)
100014b8:	10c0e445 	stb	r3,913(r2)
                game->game_map[i][j] = CANDY;
100014bc:	e13fffc3 	ldbu	r4,-1(fp)
100014c0:	e0bfff83 	ldbu	r2,-2(fp)
100014c4:	e0fffe17 	ldw	r3,-8(fp)
100014c8:	210003e4 	muli	r4,r4,15
100014cc:	2085883a 	add	r2,r4,r2
100014d0:	100490ba 	slli	r2,r2,2
100014d4:	1885883a 	add	r2,r3,r2
100014d8:	00c00044 	movi	r3,1
100014dc:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100014e0:	e0bffe17 	ldw	r2,-8(fp)
100014e4:	1080ea0b 	ldhu	r2,936(r2)
100014e8:	10800044 	addi	r2,r2,1
100014ec:	1007883a 	mov	r3,r2
100014f0:	e0bffe17 	ldw	r2,-8(fp)
100014f4:	10c0ea0d 	sth	r3,936(r2)
100014f8:	00008d06 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_INKY) {
100014fc:	e0ffff43 	ldbu	r3,-3(fp)
10001500:	e13fffc3 	ldbu	r4,-1(fp)
10001504:	e0bfff83 	ldbu	r2,-2(fp)
10001508:	210003e4 	muli	r4,r4,15
1000150c:	18c03864 	muli	r3,r3,225
10001510:	20c7883a 	add	r3,r4,r3
10001514:	1887883a 	add	r3,r3,r2
10001518:	008400b4 	movhi	r2,4098
1000151c:	1885883a 	add	r2,r3,r2
10001520:	10997503 	ldbu	r2,26068(r2)
10001524:	10803fcc 	andi	r2,r2,255
10001528:	10800198 	cmpnei	r2,r2,6
1000152c:	1000161e 	bne	r2,zero,10001588 <init_game+0x26c>
                game->inky.xpos = i;
10001530:	e0bffe17 	ldw	r2,-8(fp)
10001534:	e0ffffc3 	ldbu	r3,-1(fp)
10001538:	10c0e585 	stb	r3,918(r2)
                game->inky.ypos = j;
1000153c:	e0bffe17 	ldw	r2,-8(fp)
10001540:	e0ffff83 	ldbu	r3,-2(fp)
10001544:	10c0e5c5 	stb	r3,919(r2)
                game->game_map[i][j] = CANDY;
10001548:	e13fffc3 	ldbu	r4,-1(fp)
1000154c:	e0bfff83 	ldbu	r2,-2(fp)
10001550:	e0fffe17 	ldw	r3,-8(fp)
10001554:	210003e4 	muli	r4,r4,15
10001558:	2085883a 	add	r2,r4,r2
1000155c:	100490ba 	slli	r2,r2,2
10001560:	1885883a 	add	r2,r3,r2
10001564:	00c00044 	movi	r3,1
10001568:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
1000156c:	e0bffe17 	ldw	r2,-8(fp)
10001570:	1080ea0b 	ldhu	r2,936(r2)
10001574:	10800044 	addi	r2,r2,1
10001578:	1007883a 	mov	r3,r2
1000157c:	e0bffe17 	ldw	r2,-8(fp)
10001580:	10c0ea0d 	sth	r3,936(r2)
10001584:	00006a06 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_CLYDE) {
10001588:	e0ffff43 	ldbu	r3,-3(fp)
1000158c:	e13fffc3 	ldbu	r4,-1(fp)
10001590:	e0bfff83 	ldbu	r2,-2(fp)
10001594:	210003e4 	muli	r4,r4,15
10001598:	18c03864 	muli	r3,r3,225
1000159c:	20c7883a 	add	r3,r4,r3
100015a0:	1887883a 	add	r3,r3,r2
100015a4:	008400b4 	movhi	r2,4098
100015a8:	1885883a 	add	r2,r3,r2
100015ac:	10997503 	ldbu	r2,26068(r2)
100015b0:	10803fcc 	andi	r2,r2,255
100015b4:	108001d8 	cmpnei	r2,r2,7
100015b8:	1000161e 	bne	r2,zero,10001614 <init_game+0x2f8>
                game->clyde.xpos = i;
100015bc:	e0bffe17 	ldw	r2,-8(fp)
100015c0:	e0ffffc3 	ldbu	r3,-1(fp)
100015c4:	10c0e705 	stb	r3,924(r2)
                game->clyde.ypos = j;
100015c8:	e0bffe17 	ldw	r2,-8(fp)
100015cc:	e0ffff83 	ldbu	r3,-2(fp)
100015d0:	10c0e745 	stb	r3,925(r2)
                game->game_map[i][j] = CANDY;
100015d4:	e13fffc3 	ldbu	r4,-1(fp)
100015d8:	e0bfff83 	ldbu	r2,-2(fp)
100015dc:	e0fffe17 	ldw	r3,-8(fp)
100015e0:	210003e4 	muli	r4,r4,15
100015e4:	2085883a 	add	r2,r4,r2
100015e8:	100490ba 	slli	r2,r2,2
100015ec:	1885883a 	add	r2,r3,r2
100015f0:	00c00044 	movi	r3,1
100015f4:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100015f8:	e0bffe17 	ldw	r2,-8(fp)
100015fc:	1080ea0b 	ldhu	r2,936(r2)
10001600:	10800044 	addi	r2,r2,1
10001604:	1007883a 	mov	r3,r2
10001608:	e0bffe17 	ldw	r2,-8(fp)
1000160c:	10c0ea0d 	sth	r3,936(r2)
10001610:	00004706 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == CANDY || GAME_BOARDS[current_board][i][j] == SUPER) {
10001614:	e0ffff43 	ldbu	r3,-3(fp)
10001618:	e13fffc3 	ldbu	r4,-1(fp)
1000161c:	e0bfff83 	ldbu	r2,-2(fp)
10001620:	210003e4 	muli	r4,r4,15
10001624:	18c03864 	muli	r3,r3,225
10001628:	20c7883a 	add	r3,r4,r3
1000162c:	1887883a 	add	r3,r3,r2
10001630:	008400b4 	movhi	r2,4098
10001634:	1885883a 	add	r2,r3,r2
10001638:	10997503 	ldbu	r2,26068(r2)
1000163c:	10803fcc 	andi	r2,r2,255
10001640:	10800060 	cmpeqi	r2,r2,1
10001644:	10000d1e 	bne	r2,zero,1000167c <init_game+0x360>
10001648:	e0ffff43 	ldbu	r3,-3(fp)
1000164c:	e13fffc3 	ldbu	r4,-1(fp)
10001650:	e0bfff83 	ldbu	r2,-2(fp)
10001654:	210003e4 	muli	r4,r4,15
10001658:	18c03864 	muli	r3,r3,225
1000165c:	20c7883a 	add	r3,r4,r3
10001660:	1887883a 	add	r3,r3,r2
10001664:	008400b4 	movhi	r2,4098
10001668:	1885883a 	add	r2,r3,r2
1000166c:	10997503 	ldbu	r2,26068(r2)
10001670:	10803fcc 	andi	r2,r2,255
10001674:	10800098 	cmpnei	r2,r2,2
10001678:	10001a1e 	bne	r2,zero,100016e4 <init_game+0x3c8>
                game->candy_count += 1;
1000167c:	e0bffe17 	ldw	r2,-8(fp)
10001680:	1080ea0b 	ldhu	r2,936(r2)
10001684:	10800044 	addi	r2,r2,1
10001688:	1007883a 	mov	r3,r2
1000168c:	e0bffe17 	ldw	r2,-8(fp)
10001690:	10c0ea0d 	sth	r3,936(r2)
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
10001694:	e0ffff43 	ldbu	r3,-3(fp)
10001698:	e13fffc3 	ldbu	r4,-1(fp)
1000169c:	e0bfff83 	ldbu	r2,-2(fp)
100016a0:	210003e4 	muli	r4,r4,15
100016a4:	18c03864 	muli	r3,r3,225
100016a8:	20c7883a 	add	r3,r4,r3
100016ac:	1887883a 	add	r3,r3,r2
100016b0:	008400b4 	movhi	r2,4098
100016b4:	1885883a 	add	r2,r3,r2
100016b8:	10d97503 	ldbu	r3,26068(r2)
100016bc:	e17fffc3 	ldbu	r5,-1(fp)
100016c0:	e0bfff83 	ldbu	r2,-2(fp)
100016c4:	18c03fcc 	andi	r3,r3,255
100016c8:	e13ffe17 	ldw	r4,-8(fp)
100016cc:	294003e4 	muli	r5,r5,15
100016d0:	2885883a 	add	r2,r5,r2
100016d4:	100490ba 	slli	r2,r2,2
100016d8:	2085883a 	add	r2,r4,r2
100016dc:	10c00015 	stw	r3,0(r2)
100016e0:	00001306 	br	10001730 <init_game+0x414>
            } else {    // WALL and WAY.
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
100016e4:	e0ffff43 	ldbu	r3,-3(fp)
100016e8:	e13fffc3 	ldbu	r4,-1(fp)
100016ec:	e0bfff83 	ldbu	r2,-2(fp)
100016f0:	210003e4 	muli	r4,r4,15
100016f4:	18c03864 	muli	r3,r3,225
100016f8:	20c7883a 	add	r3,r4,r3
100016fc:	1887883a 	add	r3,r3,r2
10001700:	008400b4 	movhi	r2,4098
10001704:	1885883a 	add	r2,r3,r2
10001708:	10d97503 	ldbu	r3,26068(r2)
1000170c:	e17fffc3 	ldbu	r5,-1(fp)
10001710:	e0bfff83 	ldbu	r2,-2(fp)
10001714:	18c03fcc 	andi	r3,r3,255
10001718:	e13ffe17 	ldw	r4,-8(fp)
1000171c:	294003e4 	muli	r5,r5,15
10001720:	2885883a 	add	r2,r5,r2
10001724:	100490ba 	slli	r2,r2,2
10001728:	2085883a 	add	r2,r4,r2
1000172c:	10c00015 	stw	r3,0(r2)
        for(j=0; j<15; j+=1) {
10001730:	e0bfff83 	ldbu	r2,-2(fp)
10001734:	10800044 	addi	r2,r2,1
10001738:	e0bfff85 	stb	r2,-2(fp)
1000173c:	e0bfff83 	ldbu	r2,-2(fp)
10001740:	108003f0 	cmpltui	r2,r2,15
10001744:	103f041e 	bne	r2,zero,10001358 <init_game+0x3c>
    for(i=0; i<15; i+=1) {
10001748:	e0bfffc3 	ldbu	r2,-1(fp)
1000174c:	10800044 	addi	r2,r2,1
10001750:	e0bfffc5 	stb	r2,-1(fp)
10001754:	e0bfffc3 	ldbu	r2,-1(fp)
10001758:	108003f0 	cmpltui	r2,r2,15
1000175c:	103efc1e 	bne	r2,zero,10001350 <init_game+0x34>
            }
        }
    }

    game->state = PLAYING;
10001760:	e0bffe17 	ldw	r2,-8(fp)
10001764:	00c00044 	movi	r3,1
10001768:	10c0e915 	stw	r3,932(r2)
}
1000176c:	0001883a 	nop
10001770:	e037883a 	mov	sp,fp
10001774:	dfc00117 	ldw	ra,4(sp)
10001778:	df000017 	ldw	fp,0(sp)
1000177c:	dec00204 	addi	sp,sp,8
10001780:	f800283a 	ret

10001784 <tickgame>:

void tickgame(Game* board, char keypress) {
10001784:	defffa04 	addi	sp,sp,-24
10001788:	dfc00515 	stw	ra,20(sp)
1000178c:	df000415 	stw	fp,16(sp)
10001790:	df000404 	addi	fp,sp,16
10001794:	e13ffd15 	stw	r4,-12(fp)
10001798:	2805883a 	mov	r2,r5
1000179c:	e0bffc05 	stb	r2,-16(fp)
    if(board->state!=PLAYING) return;
100017a0:	e0bffd17 	ldw	r2,-12(fp)
100017a4:	1080e917 	ldw	r2,932(r2)
100017a8:	10800060 	cmpeqi	r2,r2,1
100017ac:	10018426 	beq	r2,zero,10001dc0 <tickgame+0x63c>
    // Move the player
    int16_t new_xpos = board->player.xpos;
100017b0:	e0bffd17 	ldw	r2,-12(fp)
100017b4:	1080e103 	ldbu	r2,900(r2)
100017b8:	10803fcc 	andi	r2,r2,255
100017bc:	e0bfff8d 	sth	r2,-2(fp)
    int16_t new_ypos = board->player.ypos;
100017c0:	e0bffd17 	ldw	r2,-12(fp)
100017c4:	1080e143 	ldbu	r2,901(r2)
100017c8:	10803fcc 	andi	r2,r2,255
100017cc:	e0bfff0d 	sth	r2,-4(fp)
    bool player_moved = false;
100017d0:	e03ffec5 	stb	zero,-5(fp)

    switch(keypress) {
100017d4:	e0bffc07 	ldb	r2,-16(fp)
100017d8:	10bfefc4 	addi	r2,r2,-65
100017dc:	10c00de8 	cmpgeui	r3,r2,55
100017e0:	1800531e 	bne	r3,zero,10001930 <tickgame+0x1ac>
100017e4:	100690ba 	slli	r3,r2,2
100017e8:	00840034 	movhi	r2,4096
100017ec:	1885883a 	add	r2,r3,r2
100017f0:	1085fe17 	ldw	r2,6136(r2)
100017f4:	1000683a 	jmp	r2
100017f8:	10001904 	addi	zero,r2,100
100017fc:	10001930 	cmpltui	zero,r2,100
10001800:	10001930 	cmpltui	zero,r2,100
10001804:	1000191c 	xori	zero,r2,100
10001808:	10001930 	cmpltui	zero,r2,100
1000180c:	10001930 	cmpltui	zero,r2,100
10001810:	10001930 	cmpltui	zero,r2,100
10001814:	10001930 	cmpltui	zero,r2,100
10001818:	10001930 	cmpltui	zero,r2,100
1000181c:	10001930 	cmpltui	zero,r2,100
10001820:	10001930 	cmpltui	zero,r2,100
10001824:	10001930 	cmpltui	zero,r2,100
10001828:	10001930 	cmpltui	zero,r2,100
1000182c:	10001930 	cmpltui	zero,r2,100
10001830:	10001930 	cmpltui	zero,r2,100
10001834:	10001930 	cmpltui	zero,r2,100
10001838:	10001930 	cmpltui	zero,r2,100
1000183c:	10001930 	cmpltui	zero,r2,100
10001840:	100018ec 	andhi	zero,r2,99
10001844:	10001930 	cmpltui	zero,r2,100
10001848:	10001930 	cmpltui	zero,r2,100
1000184c:	10001930 	cmpltui	zero,r2,100
10001850:	100018d4 	ori	zero,r2,99
10001854:	10001930 	cmpltui	zero,r2,100
10001858:	10001930 	cmpltui	zero,r2,100
1000185c:	10001930 	cmpltui	zero,r2,100
10001860:	10001930 	cmpltui	zero,r2,100
10001864:	10001930 	cmpltui	zero,r2,100
10001868:	10001930 	cmpltui	zero,r2,100
1000186c:	10001930 	cmpltui	zero,r2,100
10001870:	10001930 	cmpltui	zero,r2,100
10001874:	10001930 	cmpltui	zero,r2,100
10001878:	10001904 	addi	zero,r2,100
1000187c:	10001930 	cmpltui	zero,r2,100
10001880:	10001930 	cmpltui	zero,r2,100
10001884:	1000191c 	xori	zero,r2,100
10001888:	10001930 	cmpltui	zero,r2,100
1000188c:	10001930 	cmpltui	zero,r2,100
10001890:	10001930 	cmpltui	zero,r2,100
10001894:	10001930 	cmpltui	zero,r2,100
10001898:	10001930 	cmpltui	zero,r2,100
1000189c:	10001930 	cmpltui	zero,r2,100
100018a0:	10001930 	cmpltui	zero,r2,100
100018a4:	10001930 	cmpltui	zero,r2,100
100018a8:	10001930 	cmpltui	zero,r2,100
100018ac:	10001930 	cmpltui	zero,r2,100
100018b0:	10001930 	cmpltui	zero,r2,100
100018b4:	10001930 	cmpltui	zero,r2,100
100018b8:	10001930 	cmpltui	zero,r2,100
100018bc:	10001930 	cmpltui	zero,r2,100
100018c0:	100018ec 	andhi	zero,r2,99
100018c4:	10001930 	cmpltui	zero,r2,100
100018c8:	10001930 	cmpltui	zero,r2,100
100018cc:	10001930 	cmpltui	zero,r2,100
100018d0:	100018d4 	ori	zero,r2,99
        case 'w':
        case 'W':
            new_xpos -= 1;
100018d4:	e0bfff8b 	ldhu	r2,-2(fp)
100018d8:	10bfffc4 	addi	r2,r2,-1
100018dc:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
100018e0:	00800044 	movi	r2,1
100018e4:	e0bffec5 	stb	r2,-5(fp)
            break;
100018e8:	00001106 	br	10001930 <tickgame+0x1ac>
        case 'S':
        case 's':
            new_xpos += 1;
100018ec:	e0bfff8b 	ldhu	r2,-2(fp)
100018f0:	10800044 	addi	r2,r2,1
100018f4:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
100018f8:	00800044 	movi	r2,1
100018fc:	e0bffec5 	stb	r2,-5(fp)
            break;
10001900:	00000b06 	br	10001930 <tickgame+0x1ac>
        case 'A':
        case 'a':
            new_ypos -= 1;
10001904:	e0bfff0b 	ldhu	r2,-4(fp)
10001908:	10bfffc4 	addi	r2,r2,-1
1000190c:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10001910:	00800044 	movi	r2,1
10001914:	e0bffec5 	stb	r2,-5(fp)
            break;
10001918:	00000506 	br	10001930 <tickgame+0x1ac>
        case 'D':
        case 'd':
            new_ypos += 1;
1000191c:	e0bfff0b 	ldhu	r2,-4(fp)
10001920:	10800044 	addi	r2,r2,1
10001924:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10001928:	00800044 	movi	r2,1
1000192c:	e0bffec5 	stb	r2,-5(fp)
    }
    // Now check if the new coordinate is legal.
    new_xpos = (new_xpos + _BOARD_H) % _BOARD_H;
10001930:	e0bfff8f 	ldh	r2,-2(fp)
10001934:	108003c4 	addi	r2,r2,15
10001938:	00c003c4 	movi	r3,15
1000193c:	10c7283a 	div	r3,r2,r3
10001940:	18c003e4 	muli	r3,r3,15
10001944:	10c5c83a 	sub	r2,r2,r3
10001948:	e0bfff8d 	sth	r2,-2(fp)
    new_ypos = (new_ypos + _BOARD_W) % _BOARD_W;
1000194c:	e0bfff0f 	ldh	r2,-4(fp)
10001950:	108003c4 	addi	r2,r2,15
10001954:	00c003c4 	movi	r3,15
10001958:	10c7283a 	div	r3,r2,r3
1000195c:	18c003e4 	muli	r3,r3,15
10001960:	10c5c83a 	sub	r2,r2,r3
10001964:	e0bfff0d 	sth	r2,-4(fp)

    if(board->game_map[new_xpos][new_ypos] != WALL) {
10001968:	e13fff8f 	ldh	r4,-2(fp)
1000196c:	e0bfff0f 	ldh	r2,-4(fp)
10001970:	e0fffd17 	ldw	r3,-12(fp)
10001974:	210003e4 	muli	r4,r4,15
10001978:	2085883a 	add	r2,r4,r2
1000197c:	100490ba 	slli	r2,r2,2
10001980:	1885883a 	add	r2,r3,r2
10001984:	10800017 	ldw	r2,0(r2)
10001988:	10005526 	beq	r2,zero,10001ae0 <tickgame+0x35c>
        // New position is valid. Check if player actually moved.
        if(player_moved) {
1000198c:	e0bffec3 	ldbu	r2,-5(fp)
10001990:	10005326 	beq	r2,zero,10001ae0 <tickgame+0x35c>
            board->player.xpos = new_xpos;
10001994:	e0bfff8b 	ldhu	r2,-2(fp)
10001998:	1007883a 	mov	r3,r2
1000199c:	e0bffd17 	ldw	r2,-12(fp)
100019a0:	10c0e105 	stb	r3,900(r2)
            board->player.ypos = new_ypos;
100019a4:	e0bfff0b 	ldhu	r2,-4(fp)
100019a8:	1007883a 	mov	r3,r2
100019ac:	e0bffd17 	ldw	r2,-12(fp)
100019b0:	10c0e145 	stb	r3,901(r2)
            // Add both tiles to update queue.
            addPendingPos(board->player.xpos, board->player.ypos);
100019b4:	e0bffd17 	ldw	r2,-12(fp)
100019b8:	1080e103 	ldbu	r2,900(r2)
100019bc:	10c03fcc 	andi	r3,r2,255
100019c0:	e0bffd17 	ldw	r2,-12(fp)
100019c4:	1080e143 	ldbu	r2,901(r2)
100019c8:	10803fcc 	andi	r2,r2,255
100019cc:	100b883a 	mov	r5,r2
100019d0:	1809883a 	mov	r4,r3
100019d4:	0005cb40 	call	10005cb4 <addPendingPos>
            addPendingPos(new_xpos, new_ypos);
100019d8:	e0bfff8f 	ldh	r2,-2(fp)
100019dc:	e0ffff0f 	ldh	r3,-4(fp)
100019e0:	180b883a 	mov	r5,r3
100019e4:	1009883a 	mov	r4,r2
100019e8:	0005cb40 	call	10005cb4 <addPendingPos>
            // Pick the tile up.
            switch(board->game_map[new_xpos][new_ypos]) {
100019ec:	e13fff8f 	ldh	r4,-2(fp)
100019f0:	e0bfff0f 	ldh	r2,-4(fp)
100019f4:	e0fffd17 	ldw	r3,-12(fp)
100019f8:	210003e4 	muli	r4,r4,15
100019fc:	2085883a 	add	r2,r4,r2
10001a00:	100490ba 	slli	r2,r2,2
10001a04:	1885883a 	add	r2,r3,r2
10001a08:	10800017 	ldw	r2,0(r2)
10001a0c:	10c00060 	cmpeqi	r3,r2,1
10001a10:	1800041e 	bne	r3,zero,10001a24 <tickgame+0x2a0>
10001a14:	10003426 	beq	r2,zero,10001ae8 <tickgame+0x364>
10001a18:	108000a0 	cmpeqi	r2,r2,2
10001a1c:	1000171e 	bne	r2,zero,10001a7c <tickgame+0x2f8>
                    board->player.invincible = 15*60;   // 15 seconds.
                    board->candy_count -= 1;
                    break;
                case WALL:  // which should not happen
                case WAY:
                    break;
10001a20:	00003106 	br	10001ae8 <tickgame+0x364>
                    board->game_map[new_xpos][new_ypos] = WAY;
10001a24:	e13fff8f 	ldh	r4,-2(fp)
10001a28:	e0bfff0f 	ldh	r2,-4(fp)
10001a2c:	e0fffd17 	ldw	r3,-12(fp)
10001a30:	210003e4 	muli	r4,r4,15
10001a34:	2085883a 	add	r2,r4,r2
10001a38:	100490ba 	slli	r2,r2,2
10001a3c:	1885883a 	add	r2,r3,r2
10001a40:	00c000c4 	movi	r3,3
10001a44:	10c00015 	stw	r3,0(r2)
                    board->player.points += 10;
10001a48:	e0bffd17 	ldw	r2,-12(fp)
10001a4c:	1080e18b 	ldhu	r2,902(r2)
10001a50:	10800284 	addi	r2,r2,10
10001a54:	1007883a 	mov	r3,r2
10001a58:	e0bffd17 	ldw	r2,-12(fp)
10001a5c:	10c0e18d 	sth	r3,902(r2)
                    board->candy_count -= 1;
10001a60:	e0bffd17 	ldw	r2,-12(fp)
10001a64:	1080ea0b 	ldhu	r2,936(r2)
10001a68:	10bfffc4 	addi	r2,r2,-1
10001a6c:	1007883a 	mov	r3,r2
10001a70:	e0bffd17 	ldw	r2,-12(fp)
10001a74:	10c0ea0d 	sth	r3,936(r2)
                    break;
10001a78:	00001c06 	br	10001aec <tickgame+0x368>
                    board->game_map[new_xpos][new_ypos] = WAY;
10001a7c:	e13fff8f 	ldh	r4,-2(fp)
10001a80:	e0bfff0f 	ldh	r2,-4(fp)
10001a84:	e0fffd17 	ldw	r3,-12(fp)
10001a88:	210003e4 	muli	r4,r4,15
10001a8c:	2085883a 	add	r2,r4,r2
10001a90:	100490ba 	slli	r2,r2,2
10001a94:	1885883a 	add	r2,r3,r2
10001a98:	00c000c4 	movi	r3,3
10001a9c:	10c00015 	stw	r3,0(r2)
                    board->player.points += 100;
10001aa0:	e0bffd17 	ldw	r2,-12(fp)
10001aa4:	1080e18b 	ldhu	r2,902(r2)
10001aa8:	10801904 	addi	r2,r2,100
10001aac:	1007883a 	mov	r3,r2
10001ab0:	e0bffd17 	ldw	r2,-12(fp)
10001ab4:	10c0e18d 	sth	r3,902(r2)
                    board->player.invincible = 15*60;   // 15 seconds.
10001ab8:	e0bffd17 	ldw	r2,-12(fp)
10001abc:	00c0e104 	movi	r3,900
10001ac0:	10c0e20d 	sth	r3,904(r2)
                    board->candy_count -= 1;
10001ac4:	e0bffd17 	ldw	r2,-12(fp)
10001ac8:	1080ea0b 	ldhu	r2,936(r2)
10001acc:	10bfffc4 	addi	r2,r2,-1
10001ad0:	1007883a 	mov	r3,r2
10001ad4:	e0bffd17 	ldw	r2,-12(fp)
10001ad8:	10c0ea0d 	sth	r3,936(r2)
                    break;
10001adc:	00000306 	br	10001aec <tickgame+0x368>
            }
        }
10001ae0:	0001883a 	nop
10001ae4:	00000106 	br	10001aec <tickgame+0x368>
                    break;
10001ae8:	0001883a 	nop
    }

    // Ghosts move.
    blinkys_move(board);
10001aec:	e13ffd17 	ldw	r4,-12(fp)
10001af0:	0001f380 	call	10001f38 <blinkys_move>

    // Check if the player met a ghost.
    if(board->player.invincible > 0) {
10001af4:	e0bffd17 	ldw	r2,-12(fp)
10001af8:	1080e20b 	ldhu	r2,904(r2)
10001afc:	10bfffcc 	andi	r2,r2,65535
10001b00:	10006026 	beq	r2,zero,10001c84 <tickgame+0x500>
        // Ghost gets eaten. Grant points and set ghost away.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10001b04:	e0bffd17 	ldw	r2,-12(fp)
10001b08:	10c0e103 	ldbu	r3,900(r2)
10001b0c:	e0bffd17 	ldw	r2,-12(fp)
10001b10:	1080e283 	ldbu	r2,906(r2)
10001b14:	18c03fcc 	andi	r3,r3,255
10001b18:	10803fcc 	andi	r2,r2,255
10001b1c:	1880111e 	bne	r3,r2,10001b64 <tickgame+0x3e0>
10001b20:	e0bffd17 	ldw	r2,-12(fp)
10001b24:	10c0e143 	ldbu	r3,901(r2)
10001b28:	e0bffd17 	ldw	r2,-12(fp)
10001b2c:	1080e2c3 	ldbu	r2,907(r2)
10001b30:	18c03fcc 	andi	r3,r3,255
10001b34:	10803fcc 	andi	r2,r2,255
10001b38:	18800a1e 	bne	r3,r2,10001b64 <tickgame+0x3e0>
            // Met Blinky when invincible.
            board->blinky.revive_cntdown = 15*60;
10001b3c:	e0bffd17 	ldw	r2,-12(fp)
10001b40:	00c0e104 	movi	r3,900
10001b44:	10c0e38d 	sth	r3,910(r2)
            board->player.points += 200;
10001b48:	e0bffd17 	ldw	r2,-12(fp)
10001b4c:	1080e18b 	ldhu	r2,902(r2)
10001b50:	10803204 	addi	r2,r2,200
10001b54:	1007883a 	mov	r3,r2
10001b58:	e0bffd17 	ldw	r2,-12(fp)
10001b5c:	10c0e18d 	sth	r3,902(r2)
10001b60:	00008f06 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001b64:	e0bffd17 	ldw	r2,-12(fp)
10001b68:	10c0e103 	ldbu	r3,900(r2)
10001b6c:	e0bffd17 	ldw	r2,-12(fp)
10001b70:	1080e583 	ldbu	r2,918(r2)
10001b74:	18c03fcc 	andi	r3,r3,255
10001b78:	10803fcc 	andi	r2,r2,255
10001b7c:	1880111e 	bne	r3,r2,10001bc4 <tickgame+0x440>
10001b80:	e0bffd17 	ldw	r2,-12(fp)
10001b84:	10c0e143 	ldbu	r3,901(r2)
10001b88:	e0bffd17 	ldw	r2,-12(fp)
10001b8c:	1080e5c3 	ldbu	r2,919(r2)
10001b90:	18c03fcc 	andi	r3,r3,255
10001b94:	10803fcc 	andi	r2,r2,255
10001b98:	18800a1e 	bne	r3,r2,10001bc4 <tickgame+0x440>
            // Met inky when invincible.
            board->inky.revive_cntdown = 15*60;
10001b9c:	e0bffd17 	ldw	r2,-12(fp)
10001ba0:	00c0e104 	movi	r3,900
10001ba4:	10c0e68d 	sth	r3,922(r2)
            board->player.points += 200;
10001ba8:	e0bffd17 	ldw	r2,-12(fp)
10001bac:	1080e18b 	ldhu	r2,902(r2)
10001bb0:	10803204 	addi	r2,r2,200
10001bb4:	1007883a 	mov	r3,r2
10001bb8:	e0bffd17 	ldw	r2,-12(fp)
10001bbc:	10c0e18d 	sth	r3,902(r2)
10001bc0:	00007706 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
10001bc4:	e0bffd17 	ldw	r2,-12(fp)
10001bc8:	10c0e103 	ldbu	r3,900(r2)
10001bcc:	e0bffd17 	ldw	r2,-12(fp)
10001bd0:	1080e403 	ldbu	r2,912(r2)
10001bd4:	18c03fcc 	andi	r3,r3,255
10001bd8:	10803fcc 	andi	r2,r2,255
10001bdc:	1880111e 	bne	r3,r2,10001c24 <tickgame+0x4a0>
10001be0:	e0bffd17 	ldw	r2,-12(fp)
10001be4:	10c0e143 	ldbu	r3,901(r2)
10001be8:	e0bffd17 	ldw	r2,-12(fp)
10001bec:	1080e443 	ldbu	r2,913(r2)
10001bf0:	18c03fcc 	andi	r3,r3,255
10001bf4:	10803fcc 	andi	r2,r2,255
10001bf8:	18800a1e 	bne	r3,r2,10001c24 <tickgame+0x4a0>
            // Met pinky when invincible.
            board->pinky.revive_cntdown = 15*60;
10001bfc:	e0bffd17 	ldw	r2,-12(fp)
10001c00:	00c0e104 	movi	r3,900
10001c04:	10c0e50d 	sth	r3,916(r2)
            board->player.points += 200;
10001c08:	e0bffd17 	ldw	r2,-12(fp)
10001c0c:	1080e18b 	ldhu	r2,902(r2)
10001c10:	10803204 	addi	r2,r2,200
10001c14:	1007883a 	mov	r3,r2
10001c18:	e0bffd17 	ldw	r2,-12(fp)
10001c1c:	10c0e18d 	sth	r3,902(r2)
10001c20:	00005f06 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
10001c24:	e0bffd17 	ldw	r2,-12(fp)
10001c28:	10c0e103 	ldbu	r3,900(r2)
10001c2c:	e0bffd17 	ldw	r2,-12(fp)
10001c30:	1080e703 	ldbu	r2,924(r2)
10001c34:	18c03fcc 	andi	r3,r3,255
10001c38:	10803fcc 	andi	r2,r2,255
10001c3c:	1880581e 	bne	r3,r2,10001da0 <tickgame+0x61c>
10001c40:	e0bffd17 	ldw	r2,-12(fp)
10001c44:	10c0e143 	ldbu	r3,901(r2)
10001c48:	e0bffd17 	ldw	r2,-12(fp)
10001c4c:	1080e743 	ldbu	r2,925(r2)
10001c50:	18c03fcc 	andi	r3,r3,255
10001c54:	10803fcc 	andi	r2,r2,255
10001c58:	1880511e 	bne	r3,r2,10001da0 <tickgame+0x61c>
            // Met clyde when invincible.
            board->clyde.revive_cntdown = 15*60;
10001c5c:	e0bffd17 	ldw	r2,-12(fp)
10001c60:	00c0e104 	movi	r3,900
10001c64:	10c0e80d 	sth	r3,928(r2)
            board->player.points += 200;
10001c68:	e0bffd17 	ldw	r2,-12(fp)
10001c6c:	1080e18b 	ldhu	r2,902(r2)
10001c70:	10803204 	addi	r2,r2,200
10001c74:	1007883a 	mov	r3,r2
10001c78:	e0bffd17 	ldw	r2,-12(fp)
10001c7c:	10c0e18d 	sth	r3,902(r2)
10001c80:	00004706 	br	10001da0 <tickgame+0x61c>
        }
    } else {
        // Player is not invincible. Gets killed if ghost met.
        // These branches are retained in case some additional things added.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10001c84:	e0bffd17 	ldw	r2,-12(fp)
10001c88:	10c0e103 	ldbu	r3,900(r2)
10001c8c:	e0bffd17 	ldw	r2,-12(fp)
10001c90:	1080e283 	ldbu	r2,906(r2)
10001c94:	18c03fcc 	andi	r3,r3,255
10001c98:	10803fcc 	andi	r2,r2,255
10001c9c:	18800b1e 	bne	r3,r2,10001ccc <tickgame+0x548>
10001ca0:	e0bffd17 	ldw	r2,-12(fp)
10001ca4:	10c0e143 	ldbu	r3,901(r2)
10001ca8:	e0bffd17 	ldw	r2,-12(fp)
10001cac:	1080e2c3 	ldbu	r2,907(r2)
10001cb0:	18c03fcc 	andi	r3,r3,255
10001cb4:	10803fcc 	andi	r2,r2,255
10001cb8:	1880041e 	bne	r3,r2,10001ccc <tickgame+0x548>
            // Met Blinky
            board->state = DIED;
10001cbc:	e0bffd17 	ldw	r2,-12(fp)
10001cc0:	00c00084 	movi	r3,2
10001cc4:	10c0e915 	stw	r3,932(r2)
10001cc8:	00003506 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001ccc:	e0bffd17 	ldw	r2,-12(fp)
10001cd0:	10c0e103 	ldbu	r3,900(r2)
10001cd4:	e0bffd17 	ldw	r2,-12(fp)
10001cd8:	1080e583 	ldbu	r2,918(r2)
10001cdc:	18c03fcc 	andi	r3,r3,255
10001ce0:	10803fcc 	andi	r2,r2,255
10001ce4:	18800b1e 	bne	r3,r2,10001d14 <tickgame+0x590>
10001ce8:	e0bffd17 	ldw	r2,-12(fp)
10001cec:	10c0e143 	ldbu	r3,901(r2)
10001cf0:	e0bffd17 	ldw	r2,-12(fp)
10001cf4:	1080e5c3 	ldbu	r2,919(r2)
10001cf8:	18c03fcc 	andi	r3,r3,255
10001cfc:	10803fcc 	andi	r2,r2,255
10001d00:	1880041e 	bne	r3,r2,10001d14 <tickgame+0x590>
            // Met inky
            board->state = DIED;
10001d04:	e0bffd17 	ldw	r2,-12(fp)
10001d08:	00c00084 	movi	r3,2
10001d0c:	10c0e915 	stw	r3,932(r2)
10001d10:	00002306 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
10001d14:	e0bffd17 	ldw	r2,-12(fp)
10001d18:	10c0e103 	ldbu	r3,900(r2)
10001d1c:	e0bffd17 	ldw	r2,-12(fp)
10001d20:	1080e403 	ldbu	r2,912(r2)
10001d24:	18c03fcc 	andi	r3,r3,255
10001d28:	10803fcc 	andi	r2,r2,255
10001d2c:	18800b1e 	bne	r3,r2,10001d5c <tickgame+0x5d8>
10001d30:	e0bffd17 	ldw	r2,-12(fp)
10001d34:	10c0e143 	ldbu	r3,901(r2)
10001d38:	e0bffd17 	ldw	r2,-12(fp)
10001d3c:	1080e443 	ldbu	r2,913(r2)
10001d40:	18c03fcc 	andi	r3,r3,255
10001d44:	10803fcc 	andi	r2,r2,255
10001d48:	1880041e 	bne	r3,r2,10001d5c <tickgame+0x5d8>
            // Met pinky.
            board->state = DIED;
10001d4c:	e0bffd17 	ldw	r2,-12(fp)
10001d50:	00c00084 	movi	r3,2
10001d54:	10c0e915 	stw	r3,932(r2)
10001d58:	00001106 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
10001d5c:	e0bffd17 	ldw	r2,-12(fp)
10001d60:	10c0e103 	ldbu	r3,900(r2)
10001d64:	e0bffd17 	ldw	r2,-12(fp)
10001d68:	1080e703 	ldbu	r2,924(r2)
10001d6c:	18c03fcc 	andi	r3,r3,255
10001d70:	10803fcc 	andi	r2,r2,255
10001d74:	18800a1e 	bne	r3,r2,10001da0 <tickgame+0x61c>
10001d78:	e0bffd17 	ldw	r2,-12(fp)
10001d7c:	10c0e143 	ldbu	r3,901(r2)
10001d80:	e0bffd17 	ldw	r2,-12(fp)
10001d84:	1080e743 	ldbu	r2,925(r2)
10001d88:	18c03fcc 	andi	r3,r3,255
10001d8c:	10803fcc 	andi	r2,r2,255
10001d90:	1880031e 	bne	r3,r2,10001da0 <tickgame+0x61c>
            // Met clyde.
            board->state = DIED;
10001d94:	e0bffd17 	ldw	r2,-12(fp)
10001d98:	00c00084 	movi	r3,2
10001d9c:	10c0e915 	stw	r3,932(r2)
        }
    }

    // Check if game finished.
    if(is_over(board)) board -> state = WON;
10001da0:	e13ffd17 	ldw	r4,-12(fp)
10001da4:	0001dd80 	call	10001dd8 <is_over>
10001da8:	10803fcc 	andi	r2,r2,255
10001dac:	10000526 	beq	r2,zero,10001dc4 <tickgame+0x640>
10001db0:	e0bffd17 	ldw	r2,-12(fp)
10001db4:	00c000c4 	movi	r3,3
10001db8:	10c0e915 	stw	r3,932(r2)
10001dbc:	00000106 	br	10001dc4 <tickgame+0x640>
    if(board->state!=PLAYING) return;
10001dc0:	0001883a 	nop
}
10001dc4:	e037883a 	mov	sp,fp
10001dc8:	dfc00117 	ldw	ra,4(sp)
10001dcc:	df000017 	ldw	fp,0(sp)
10001dd0:	dec00204 	addi	sp,sp,8
10001dd4:	f800283a 	ret

10001dd8 <is_over>:

// Check if the current map is finished.
// The whole game is passed so we can maintain the array shape.
static inline bool is_over(Game* board)
{
10001dd8:	defffe04 	addi	sp,sp,-8
10001ddc:	df000115 	stw	fp,4(sp)
10001de0:	df000104 	addi	fp,sp,4
10001de4:	e13fff15 	stw	r4,-4(fp)
    return board -> candy_count == 0;
10001de8:	e0bfff17 	ldw	r2,-4(fp)
10001dec:	1080ea0b 	ldhu	r2,936(r2)
10001df0:	10bfffcc 	andi	r2,r2,65535
10001df4:	1005003a 	cmpeq	r2,r2,zero
}
10001df8:	e037883a 	mov	sp,fp
10001dfc:	df000017 	ldw	fp,0(sp)
10001e00:	dec00104 	addi	sp,sp,4
10001e04:	f800283a 	ret

10001e08 <recur_free>:

// Recursively free a pointer.
void recur_free(LinkedPoints* lp)
{
10001e08:	defffd04 	addi	sp,sp,-12
10001e0c:	dfc00215 	stw	ra,8(sp)
10001e10:	df000115 	stw	fp,4(sp)
10001e14:	df000104 	addi	fp,sp,4
10001e18:	e13fff15 	stw	r4,-4(fp)
    if(lp != nullptr) {
10001e1c:	e0bfff17 	ldw	r2,-4(fp)
10001e20:	10000626 	beq	r2,zero,10001e3c <recur_free+0x34>
        recur_free(lp -> next);
10001e24:	e0bfff17 	ldw	r2,-4(fp)
10001e28:	10800117 	ldw	r2,4(r2)
10001e2c:	1009883a 	mov	r4,r2
10001e30:	0001e080 	call	10001e08 <recur_free>
        free(lp);
10001e34:	e13fff17 	ldw	r4,-4(fp)
10001e38:	0014d780 	call	10014d78 <free>
    }
}
10001e3c:	0001883a 	nop
10001e40:	e037883a 	mov	sp,fp
10001e44:	dfc00117 	ldw	ra,4(sp)
10001e48:	df000017 	ldw	fp,0(sp)
10001e4c:	dec00204 	addi	sp,sp,8
10001e50:	f800283a 	ret

10001e54 <stack_push>:

// LinkedPoints as stack: push
// Returns the new head (head will change)
LinkedPoints* stack_push(LinkedPoints* head, const Point* data) {
10001e54:	defffb04 	addi	sp,sp,-20
10001e58:	dfc00415 	stw	ra,16(sp)
10001e5c:	df000315 	stw	fp,12(sp)
10001e60:	df000304 	addi	fp,sp,12
10001e64:	e13ffe15 	stw	r4,-8(fp)
10001e68:	e17ffd15 	stw	r5,-12(fp)
    LinkedPoints* newPoint = malloc(sizeof(LinkedPoints));
10001e6c:	01000204 	movi	r4,8
10001e70:	0014d680 	call	10014d68 <malloc>
10001e74:	e0bfff15 	stw	r2,-4(fp)
    newPoint->curr = *data;
10001e78:	e0bfff17 	ldw	r2,-4(fp)
10001e7c:	e0fffd17 	ldw	r3,-12(fp)
10001e80:	19000003 	ldbu	r4,0(r3)
10001e84:	11000005 	stb	r4,0(r2)
10001e88:	18c00043 	ldbu	r3,1(r3)
10001e8c:	10c00045 	stb	r3,1(r2)
    newPoint->next = head;
10001e90:	e0bfff17 	ldw	r2,-4(fp)
10001e94:	e0fffe17 	ldw	r3,-8(fp)
10001e98:	10c00115 	stw	r3,4(r2)
    return newPoint;
10001e9c:	e0bfff17 	ldw	r2,-4(fp)
}
10001ea0:	e037883a 	mov	sp,fp
10001ea4:	dfc00117 	ldw	ra,4(sp)
10001ea8:	df000017 	ldw	fp,0(sp)
10001eac:	dec00204 	addi	sp,sp,8
10001eb0:	f800283a 	ret

10001eb4 <stack_pop>:
static inline Point stack_peek(LinkedPoints* head) {
    return head -> curr;
}

// Pop an element. Element will be written to popped_data.
LinkedPoints* stack_pop(LinkedPoints* head, Point* popped_data) {
10001eb4:	defffb04 	addi	sp,sp,-20
10001eb8:	dfc00415 	stw	ra,16(sp)
10001ebc:	df000315 	stw	fp,12(sp)
10001ec0:	df000304 	addi	fp,sp,12
10001ec4:	e13ffe15 	stw	r4,-8(fp)
10001ec8:	e17ffd15 	stw	r5,-12(fp)
    *popped_data = head -> curr;
10001ecc:	e0bffd17 	ldw	r2,-12(fp)
10001ed0:	e0fffe17 	ldw	r3,-8(fp)
10001ed4:	19000003 	ldbu	r4,0(r3)
10001ed8:	11000005 	stb	r4,0(r2)
10001edc:	18c00043 	ldbu	r3,1(r3)
10001ee0:	10c00045 	stb	r3,1(r2)
    LinkedPoints* nextptr = head -> next;
10001ee4:	e0bffe17 	ldw	r2,-8(fp)
10001ee8:	10800117 	ldw	r2,4(r2)
10001eec:	e0bfff15 	stw	r2,-4(fp)
    free(head);
10001ef0:	e13ffe17 	ldw	r4,-8(fp)
10001ef4:	0014d780 	call	10014d78 <free>
    return nextptr;
10001ef8:	e0bfff17 	ldw	r2,-4(fp)
}
10001efc:	e037883a 	mov	sp,fp
10001f00:	dfc00117 	ldw	ra,4(sp)
10001f04:	df000017 	ldw	fp,0(sp)
10001f08:	dec00204 	addi	sp,sp,8
10001f0c:	f800283a 	ret

10001f10 <stack_isempty>:

static inline bool stack_isempty(const LinkedPoints* head) {
10001f10:	defffe04 	addi	sp,sp,-8
10001f14:	df000115 	stw	fp,4(sp)
10001f18:	df000104 	addi	fp,sp,4
10001f1c:	e13fff15 	stw	r4,-4(fp)
    return head != nullptr;
10001f20:	e0bfff17 	ldw	r2,-4(fp)
10001f24:	1004c03a 	cmpne	r2,r2,zero
}
10001f28:	e037883a 	mov	sp,fp
10001f2c:	df000017 	ldw	fp,0(sp)
10001f30:	dec00104 	addi	sp,sp,4
10001f34:	f800283a 	ret

10001f38 <blinkys_move>:
static inline bool PointEquals(const Point a, const Point b) {
    return a.xpos == b.xpos && a.ypos == b.ypos;
}

// Blinky. Use Dijkstra to find the shortest path to the player.
void blinkys_move(Game* game) {
10001f38:	defea404 	addi	sp,sp,-1392
10001f3c:	dfc15b15 	stw	ra,1388(sp)
10001f40:	df015a15 	stw	fp,1384(sp)
10001f44:	df015a04 	addi	fp,sp,1384
10001f48:	e13ea615 	stw	r4,-1384(fp)
    LinkedPoints* dijkstra_fringe;
    dijkstra_fringe = nullptr;
10001f4c:	e03fff15 	stw	zero,-4(fp)
    // Put Blinky's current position into fringe.
    int8_t distances[_BOARD_H][_BOARD_W];
    bool dst_finalize[_BOARD_H][_BOARD_W];
    Tile tmp_map[_BOARD_H][_BOARD_W];

    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
10001f50:	e0fea617 	ldw	r3,-1384(fp)
10001f54:	e0beaa04 	addi	r2,fp,-1368
10001f58:	0180e104 	movi	r6,900
10001f5c:	180b883a 	mov	r5,r3
10001f60:	1009883a 	mov	r4,r2
10001f64:	00156f00 	call	100156f0 <memcpy>

    // Mark other ghosts as obstacles.
    tmp_map[game->inky.xpos][game->inky.ypos] = WALL;
10001f68:	e0bea617 	ldw	r2,-1384(fp)
10001f6c:	1080e583 	ldbu	r2,918(r2)
10001f70:	10c03fcc 	andi	r3,r2,255
10001f74:	e0bea617 	ldw	r2,-1384(fp)
10001f78:	1080e5c3 	ldbu	r2,919(r2)
10001f7c:	10803fcc 	andi	r2,r2,255
10001f80:	18c003e4 	muli	r3,r3,15
10001f84:	1885883a 	add	r2,r3,r2
10001f88:	100490ba 	slli	r2,r2,2
10001f8c:	e085883a 	add	r2,fp,r2
10001f90:	103eaa15 	stw	zero,-1368(r2)
    tmp_map[game->clyde.xpos][game->clyde.ypos] = WALL;
10001f94:	e0bea617 	ldw	r2,-1384(fp)
10001f98:	1080e703 	ldbu	r2,924(r2)
10001f9c:	10c03fcc 	andi	r3,r2,255
10001fa0:	e0bea617 	ldw	r2,-1384(fp)
10001fa4:	1080e743 	ldbu	r2,925(r2)
10001fa8:	10803fcc 	andi	r2,r2,255
10001fac:	18c003e4 	muli	r3,r3,15
10001fb0:	1885883a 	add	r2,r3,r2
10001fb4:	100490ba 	slli	r2,r2,2
10001fb8:	e085883a 	add	r2,fp,r2
10001fbc:	103eaa15 	stw	zero,-1368(r2)
    tmp_map[game->pinky.xpos][game->pinky.ypos] = WALL;
10001fc0:	e0bea617 	ldw	r2,-1384(fp)
10001fc4:	1080e403 	ldbu	r2,912(r2)
10001fc8:	10c03fcc 	andi	r3,r2,255
10001fcc:	e0bea617 	ldw	r2,-1384(fp)
10001fd0:	1080e443 	ldbu	r2,913(r2)
10001fd4:	10803fcc 	andi	r2,r2,255
10001fd8:	18c003e4 	muli	r3,r3,15
10001fdc:	1885883a 	add	r2,r3,r2
10001fe0:	100490ba 	slli	r2,r2,2
10001fe4:	e085883a 	add	r2,fp,r2
10001fe8:	103eaa15 	stw	zero,-1368(r2)

    uint8_t i, j;

    for(i = 0; i<_BOARD_H;i+=1) {
10001fec:	e03ffec5 	stb	zero,-5(fp)
10001ff0:	00001806 	br	10002054 <blinkys_move+0x11c>
        for(j=0; j<_BOARD_W;j+=1) {
10001ff4:	e03ffe85 	stb	zero,-6(fp)
10001ff8:	00001006 	br	1000203c <blinkys_move+0x104>
            distances[i][j] = 63; //Something really long.
10001ffc:	e0fffec3 	ldbu	r3,-5(fp)
10002000:	e0bffe83 	ldbu	r2,-6(fp)
10002004:	18c003e4 	muli	r3,r3,15
10002008:	e0c7883a 	add	r3,fp,r3
1000200c:	1885883a 	add	r2,r3,r2
10002010:	00c00fc4 	movi	r3,63
10002014:	10ffc345 	stb	r3,-243(r2)
            dst_finalize[i][j] = false; // All not finalized.
10002018:	e0fffec3 	ldbu	r3,-5(fp)
1000201c:	e0bffe83 	ldbu	r2,-6(fp)
10002020:	18c003e4 	muli	r3,r3,15
10002024:	e0c7883a 	add	r3,fp,r3
10002028:	1885883a 	add	r2,r3,r2
1000202c:	103f8b05 	stb	zero,-468(r2)
        for(j=0; j<_BOARD_W;j+=1) {
10002030:	e0bffe83 	ldbu	r2,-6(fp)
10002034:	10800044 	addi	r2,r2,1
10002038:	e0bffe85 	stb	r2,-6(fp)
1000203c:	e0bffe83 	ldbu	r2,-6(fp)
10002040:	108003f0 	cmpltui	r2,r2,15
10002044:	103fed1e 	bne	r2,zero,10001ffc <blinkys_move+0xc4>
    for(i = 0; i<_BOARD_H;i+=1) {
10002048:	e0bffec3 	ldbu	r2,-5(fp)
1000204c:	10800044 	addi	r2,r2,1
10002050:	e0bffec5 	stb	r2,-5(fp)
10002054:	e0bffec3 	ldbu	r2,-5(fp)
10002058:	108003f0 	cmpltui	r2,r2,15
1000205c:	103fe51e 	bne	r2,zero,10001ff4 <blinkys_move+0xbc>
        }
    }

    distances[game->player.xpos][game->player.ypos] = 0;
10002060:	e0bea617 	ldw	r2,-1384(fp)
10002064:	1080e103 	ldbu	r2,900(r2)
10002068:	10c03fcc 	andi	r3,r2,255
1000206c:	e0bea617 	ldw	r2,-1384(fp)
10002070:	1080e143 	ldbu	r2,901(r2)
10002074:	10803fcc 	andi	r2,r2,255
10002078:	18c003e4 	muli	r3,r3,15
1000207c:	e0c7883a 	add	r3,fp,r3
10002080:	1885883a 	add	r2,r3,r2
10002084:	103fc345 	stb	zero,-243(r2)

    Point player_pos;
    player_pos.xpos = game->player.xpos;
10002088:	e0bea617 	ldw	r2,-1384(fp)
1000208c:	1080e103 	ldbu	r2,900(r2)
10002090:	e0bea985 	stb	r2,-1370(fp)
    player_pos.ypos = game->player.ypos;
10002094:	e0bea617 	ldw	r2,-1384(fp)
10002098:	1080e143 	ldbu	r2,901(r2)
1000209c:	e0bea9c5 	stb	r2,-1369(fp)
    // Propagate from player to ghost.
    stack_push(dijkstra_fringe, &player_pos);
100020a0:	e0bea984 	addi	r2,fp,-1370
100020a4:	100b883a 	mov	r5,r2
100020a8:	e13fff17 	ldw	r4,-4(fp)
100020ac:	0001e540 	call	10001e54 <stack_push>

    while(!stack_isempty(dijkstra_fringe)) {
100020b0:	00013606 	br	1000258c <blinkys_move+0x654>
        Point curr_seek;
        dijkstra_fringe = stack_pop(dijkstra_fringe, &curr_seek);
100020b4:	e0bea904 	addi	r2,fp,-1372
100020b8:	100b883a 	mov	r5,r2
100020bc:	e13fff17 	ldw	r4,-4(fp)
100020c0:	0001eb40 	call	10001eb4 <stack_pop>
100020c4:	e0bfff15 	stw	r2,-4(fp)
        dst_finalize[curr_seek.xpos][curr_seek.ypos] = true;
100020c8:	e0bea903 	ldbu	r2,-1372(fp)
100020cc:	10c03fcc 	andi	r3,r2,255
100020d0:	e0bea943 	ldbu	r2,-1371(fp)
100020d4:	10803fcc 	andi	r2,r2,255
100020d8:	18c003e4 	muli	r3,r3,15
100020dc:	e0c7883a 	add	r3,fp,r3
100020e0:	1885883a 	add	r2,r3,r2
100020e4:	00c00044 	movi	r3,1
100020e8:	10ff8b05 	stb	r3,-468(r2)
        // Investigate UP of current point.
        int16_t nxpos = curr_seek.xpos;
100020ec:	e0bea903 	ldbu	r2,-1372(fp)
100020f0:	10803fcc 	andi	r2,r2,255
100020f4:	e0bffd0d 	sth	r2,-12(fp)
        int16_t nypos = curr_seek.ypos;
100020f8:	e0bea943 	ldbu	r2,-1371(fp)
100020fc:	10803fcc 	andi	r2,r2,255
10002100:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
10002104:	e0bffd0f 	ldh	r2,-12(fp)
10002108:	10800384 	addi	r2,r2,14
1000210c:	00c003c4 	movi	r3,15
10002110:	10c7283a 	div	r3,r2,r3
10002114:	18c003e4 	muli	r3,r3,15
10002118:	10c5c83a 	sub	r2,r2,r3
1000211c:	e0bffd0d 	sth	r2,-12(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002120:	e13ffd0f 	ldh	r4,-12(fp)
10002124:	e0bffc8f 	ldh	r2,-14(fp)
10002128:	e0fea617 	ldw	r3,-1384(fp)
1000212c:	210003e4 	muli	r4,r4,15
10002130:	2085883a 	add	r2,r4,r2
10002134:	100490ba 	slli	r2,r2,2
10002138:	1885883a 	add	r2,r3,r2
1000213c:	10800017 	ldw	r2,0(r2)
10002140:	10003426 	beq	r2,zero,10002214 <blinkys_move+0x2dc>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002144:	e0fffd0f 	ldh	r3,-12(fp)
10002148:	e0bffc8f 	ldh	r2,-14(fp)
1000214c:	18c003e4 	muli	r3,r3,15
10002150:	e0c7883a 	add	r3,fp,r3
10002154:	1885883a 	add	r2,r3,r2
10002158:	113fc343 	ldbu	r4,-243(r2)
1000215c:	e0bea903 	ldbu	r2,-1372(fp)
10002160:	10c03fcc 	andi	r3,r2,255
10002164:	e0bea943 	ldbu	r2,-1371(fp)
10002168:	10803fcc 	andi	r2,r2,255
1000216c:	18c003e4 	muli	r3,r3,15
10002170:	e0c7883a 	add	r3,fp,r3
10002174:	1885883a 	add	r2,r3,r2
10002178:	10ffc343 	ldbu	r3,-243(r2)
1000217c:	20803fcc 	andi	r2,r4,255
10002180:	1080201c 	xori	r2,r2,128
10002184:	10bfe004 	addi	r2,r2,-128
10002188:	18c03fcc 	andi	r3,r3,255
1000218c:	18c0201c 	xori	r3,r3,128
10002190:	18ffe004 	addi	r3,r3,-128
10002194:	18800a0e 	bge	r3,r2,100021c0 <blinkys_move+0x288>
10002198:	e0bea903 	ldbu	r2,-1372(fp)
1000219c:	10c03fcc 	andi	r3,r2,255
100021a0:	e0bea943 	ldbu	r2,-1371(fp)
100021a4:	10803fcc 	andi	r2,r2,255
100021a8:	18c003e4 	muli	r3,r3,15
100021ac:	e0c7883a 	add	r3,fp,r3
100021b0:	1885883a 	add	r2,r3,r2
100021b4:	10bfc343 	ldbu	r2,-243(r2)
100021b8:	10800044 	addi	r2,r2,1
100021bc:	00000606 	br	100021d8 <blinkys_move+0x2a0>
100021c0:	e0fffd0f 	ldh	r3,-12(fp)
100021c4:	e0bffc8f 	ldh	r2,-14(fp)
100021c8:	18c003e4 	muli	r3,r3,15
100021cc:	e0c7883a 	add	r3,fp,r3
100021d0:	1885883a 	add	r2,r3,r2
100021d4:	10bfc343 	ldbu	r2,-243(r2)
100021d8:	e13ffd0f 	ldh	r4,-12(fp)
100021dc:	e0fffc8f 	ldh	r3,-14(fp)
100021e0:	210003e4 	muli	r4,r4,15
100021e4:	e109883a 	add	r4,fp,r4
100021e8:	20c7883a 	add	r3,r4,r3
100021ec:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
100021f0:	e0bffd0b 	ldhu	r2,-12(fp)
100021f4:	e0bea885 	stb	r2,-1374(fp)
            npt.ypos = nypos;
100021f8:	e0bffc8b 	ldhu	r2,-14(fp)
100021fc:	e0bea8c5 	stb	r2,-1373(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002200:	e0bea884 	addi	r2,fp,-1374
10002204:	100b883a 	mov	r5,r2
10002208:	e13fff17 	ldw	r4,-4(fp)
1000220c:	0001e540 	call	10001e54 <stack_push>
10002210:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate DOWN.
        nxpos = curr_seek.xpos;
10002214:	e0bea903 	ldbu	r2,-1372(fp)
10002218:	10803fcc 	andi	r2,r2,255
1000221c:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002220:	e0bea943 	ldbu	r2,-1371(fp)
10002224:	10803fcc 	andi	r2,r2,255
10002228:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos + 1) % _BOARD_H;
1000222c:	e0bffd0f 	ldh	r2,-12(fp)
10002230:	10800044 	addi	r2,r2,1
10002234:	00c003c4 	movi	r3,15
10002238:	10c7283a 	div	r3,r2,r3
1000223c:	18c003e4 	muli	r3,r3,15
10002240:	10c5c83a 	sub	r2,r2,r3
10002244:	e0bffd0d 	sth	r2,-12(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002248:	e13ffd0f 	ldh	r4,-12(fp)
1000224c:	e0bffc8f 	ldh	r2,-14(fp)
10002250:	e0fea617 	ldw	r3,-1384(fp)
10002254:	210003e4 	muli	r4,r4,15
10002258:	2085883a 	add	r2,r4,r2
1000225c:	100490ba 	slli	r2,r2,2
10002260:	1885883a 	add	r2,r3,r2
10002264:	10800017 	ldw	r2,0(r2)
10002268:	10003426 	beq	r2,zero,1000233c <blinkys_move+0x404>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
1000226c:	e0fffd0f 	ldh	r3,-12(fp)
10002270:	e0bffc8f 	ldh	r2,-14(fp)
10002274:	18c003e4 	muli	r3,r3,15
10002278:	e0c7883a 	add	r3,fp,r3
1000227c:	1885883a 	add	r2,r3,r2
10002280:	113fc343 	ldbu	r4,-243(r2)
10002284:	e0bea903 	ldbu	r2,-1372(fp)
10002288:	10c03fcc 	andi	r3,r2,255
1000228c:	e0bea943 	ldbu	r2,-1371(fp)
10002290:	10803fcc 	andi	r2,r2,255
10002294:	18c003e4 	muli	r3,r3,15
10002298:	e0c7883a 	add	r3,fp,r3
1000229c:	1885883a 	add	r2,r3,r2
100022a0:	10ffc343 	ldbu	r3,-243(r2)
100022a4:	20803fcc 	andi	r2,r4,255
100022a8:	1080201c 	xori	r2,r2,128
100022ac:	10bfe004 	addi	r2,r2,-128
100022b0:	18c03fcc 	andi	r3,r3,255
100022b4:	18c0201c 	xori	r3,r3,128
100022b8:	18ffe004 	addi	r3,r3,-128
100022bc:	18800a0e 	bge	r3,r2,100022e8 <blinkys_move+0x3b0>
100022c0:	e0bea903 	ldbu	r2,-1372(fp)
100022c4:	10c03fcc 	andi	r3,r2,255
100022c8:	e0bea943 	ldbu	r2,-1371(fp)
100022cc:	10803fcc 	andi	r2,r2,255
100022d0:	18c003e4 	muli	r3,r3,15
100022d4:	e0c7883a 	add	r3,fp,r3
100022d8:	1885883a 	add	r2,r3,r2
100022dc:	10bfc343 	ldbu	r2,-243(r2)
100022e0:	10800044 	addi	r2,r2,1
100022e4:	00000606 	br	10002300 <blinkys_move+0x3c8>
100022e8:	e0fffd0f 	ldh	r3,-12(fp)
100022ec:	e0bffc8f 	ldh	r2,-14(fp)
100022f0:	18c003e4 	muli	r3,r3,15
100022f4:	e0c7883a 	add	r3,fp,r3
100022f8:	1885883a 	add	r2,r3,r2
100022fc:	10bfc343 	ldbu	r2,-243(r2)
10002300:	e13ffd0f 	ldh	r4,-12(fp)
10002304:	e0fffc8f 	ldh	r3,-14(fp)
10002308:	210003e4 	muli	r4,r4,15
1000230c:	e109883a 	add	r4,fp,r4
10002310:	20c7883a 	add	r3,r4,r3
10002314:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002318:	e0bffd0b 	ldhu	r2,-12(fp)
1000231c:	e0bea805 	stb	r2,-1376(fp)
            npt.ypos = nypos;
10002320:	e0bffc8b 	ldhu	r2,-14(fp)
10002324:	e0bea845 	stb	r2,-1375(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002328:	e0bea804 	addi	r2,fp,-1376
1000232c:	100b883a 	mov	r5,r2
10002330:	e13fff17 	ldw	r4,-4(fp)
10002334:	0001e540 	call	10001e54 <stack_push>
10002338:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate LEFT.
        nxpos = curr_seek.xpos;
1000233c:	e0bea903 	ldbu	r2,-1372(fp)
10002340:	10803fcc 	andi	r2,r2,255
10002344:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002348:	e0bea943 	ldbu	r2,-1371(fp)
1000234c:	10803fcc 	andi	r2,r2,255
10002350:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10002354:	e0bffc8f 	ldh	r2,-14(fp)
10002358:	10800384 	addi	r2,r2,14
1000235c:	00c003c4 	movi	r3,15
10002360:	10c7283a 	div	r3,r2,r3
10002364:	18c003e4 	muli	r3,r3,15
10002368:	10c5c83a 	sub	r2,r2,r3
1000236c:	e0bffc8d 	sth	r2,-14(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002370:	e13ffd0f 	ldh	r4,-12(fp)
10002374:	e0bffc8f 	ldh	r2,-14(fp)
10002378:	e0fea617 	ldw	r3,-1384(fp)
1000237c:	210003e4 	muli	r4,r4,15
10002380:	2085883a 	add	r2,r4,r2
10002384:	100490ba 	slli	r2,r2,2
10002388:	1885883a 	add	r2,r3,r2
1000238c:	10800017 	ldw	r2,0(r2)
10002390:	10003426 	beq	r2,zero,10002464 <blinkys_move+0x52c>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002394:	e0fffd0f 	ldh	r3,-12(fp)
10002398:	e0bffc8f 	ldh	r2,-14(fp)
1000239c:	18c003e4 	muli	r3,r3,15
100023a0:	e0c7883a 	add	r3,fp,r3
100023a4:	1885883a 	add	r2,r3,r2
100023a8:	113fc343 	ldbu	r4,-243(r2)
100023ac:	e0bea903 	ldbu	r2,-1372(fp)
100023b0:	10c03fcc 	andi	r3,r2,255
100023b4:	e0bea943 	ldbu	r2,-1371(fp)
100023b8:	10803fcc 	andi	r2,r2,255
100023bc:	18c003e4 	muli	r3,r3,15
100023c0:	e0c7883a 	add	r3,fp,r3
100023c4:	1885883a 	add	r2,r3,r2
100023c8:	10ffc343 	ldbu	r3,-243(r2)
100023cc:	20803fcc 	andi	r2,r4,255
100023d0:	1080201c 	xori	r2,r2,128
100023d4:	10bfe004 	addi	r2,r2,-128
100023d8:	18c03fcc 	andi	r3,r3,255
100023dc:	18c0201c 	xori	r3,r3,128
100023e0:	18ffe004 	addi	r3,r3,-128
100023e4:	18800a0e 	bge	r3,r2,10002410 <blinkys_move+0x4d8>
100023e8:	e0bea903 	ldbu	r2,-1372(fp)
100023ec:	10c03fcc 	andi	r3,r2,255
100023f0:	e0bea943 	ldbu	r2,-1371(fp)
100023f4:	10803fcc 	andi	r2,r2,255
100023f8:	18c003e4 	muli	r3,r3,15
100023fc:	e0c7883a 	add	r3,fp,r3
10002400:	1885883a 	add	r2,r3,r2
10002404:	10bfc343 	ldbu	r2,-243(r2)
10002408:	10800044 	addi	r2,r2,1
1000240c:	00000606 	br	10002428 <blinkys_move+0x4f0>
10002410:	e0fffd0f 	ldh	r3,-12(fp)
10002414:	e0bffc8f 	ldh	r2,-14(fp)
10002418:	18c003e4 	muli	r3,r3,15
1000241c:	e0c7883a 	add	r3,fp,r3
10002420:	1885883a 	add	r2,r3,r2
10002424:	10bfc343 	ldbu	r2,-243(r2)
10002428:	e13ffd0f 	ldh	r4,-12(fp)
1000242c:	e0fffc8f 	ldh	r3,-14(fp)
10002430:	210003e4 	muli	r4,r4,15
10002434:	e109883a 	add	r4,fp,r4
10002438:	20c7883a 	add	r3,r4,r3
1000243c:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002440:	e0bffd0b 	ldhu	r2,-12(fp)
10002444:	e0bea785 	stb	r2,-1378(fp)
            npt.ypos = nypos;
10002448:	e0bffc8b 	ldhu	r2,-14(fp)
1000244c:	e0bea7c5 	stb	r2,-1377(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002450:	e0bea784 	addi	r2,fp,-1378
10002454:	100b883a 	mov	r5,r2
10002458:	e13fff17 	ldw	r4,-4(fp)
1000245c:	0001e540 	call	10001e54 <stack_push>
10002460:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate RIGHT.
        nxpos = curr_seek.xpos;
10002464:	e0bea903 	ldbu	r2,-1372(fp)
10002468:	10803fcc 	andi	r2,r2,255
1000246c:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002470:	e0bea943 	ldbu	r2,-1371(fp)
10002474:	10803fcc 	andi	r2,r2,255
10002478:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos + 1) % _BOARD_W;
1000247c:	e0bffc8f 	ldh	r2,-14(fp)
10002480:	10800044 	addi	r2,r2,1
10002484:	00c003c4 	movi	r3,15
10002488:	10c7283a 	div	r3,r2,r3
1000248c:	18c003e4 	muli	r3,r3,15
10002490:	10c5c83a 	sub	r2,r2,r3
10002494:	e0bffc8d 	sth	r2,-14(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002498:	e13ffd0f 	ldh	r4,-12(fp)
1000249c:	e0bffc8f 	ldh	r2,-14(fp)
100024a0:	e0fea617 	ldw	r3,-1384(fp)
100024a4:	210003e4 	muli	r4,r4,15
100024a8:	2085883a 	add	r2,r4,r2
100024ac:	100490ba 	slli	r2,r2,2
100024b0:	1885883a 	add	r2,r3,r2
100024b4:	10800017 	ldw	r2,0(r2)
100024b8:	10003426 	beq	r2,zero,1000258c <blinkys_move+0x654>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100024bc:	e0fffd0f 	ldh	r3,-12(fp)
100024c0:	e0bffc8f 	ldh	r2,-14(fp)
100024c4:	18c003e4 	muli	r3,r3,15
100024c8:	e0c7883a 	add	r3,fp,r3
100024cc:	1885883a 	add	r2,r3,r2
100024d0:	113fc343 	ldbu	r4,-243(r2)
100024d4:	e0bea903 	ldbu	r2,-1372(fp)
100024d8:	10c03fcc 	andi	r3,r2,255
100024dc:	e0bea943 	ldbu	r2,-1371(fp)
100024e0:	10803fcc 	andi	r2,r2,255
100024e4:	18c003e4 	muli	r3,r3,15
100024e8:	e0c7883a 	add	r3,fp,r3
100024ec:	1885883a 	add	r2,r3,r2
100024f0:	10ffc343 	ldbu	r3,-243(r2)
100024f4:	20803fcc 	andi	r2,r4,255
100024f8:	1080201c 	xori	r2,r2,128
100024fc:	10bfe004 	addi	r2,r2,-128
10002500:	18c03fcc 	andi	r3,r3,255
10002504:	18c0201c 	xori	r3,r3,128
10002508:	18ffe004 	addi	r3,r3,-128
1000250c:	18800a0e 	bge	r3,r2,10002538 <blinkys_move+0x600>
10002510:	e0bea903 	ldbu	r2,-1372(fp)
10002514:	10c03fcc 	andi	r3,r2,255
10002518:	e0bea943 	ldbu	r2,-1371(fp)
1000251c:	10803fcc 	andi	r2,r2,255
10002520:	18c003e4 	muli	r3,r3,15
10002524:	e0c7883a 	add	r3,fp,r3
10002528:	1885883a 	add	r2,r3,r2
1000252c:	10bfc343 	ldbu	r2,-243(r2)
10002530:	10800044 	addi	r2,r2,1
10002534:	00000606 	br	10002550 <blinkys_move+0x618>
10002538:	e0fffd0f 	ldh	r3,-12(fp)
1000253c:	e0bffc8f 	ldh	r2,-14(fp)
10002540:	18c003e4 	muli	r3,r3,15
10002544:	e0c7883a 	add	r3,fp,r3
10002548:	1885883a 	add	r2,r3,r2
1000254c:	10bfc343 	ldbu	r2,-243(r2)
10002550:	e13ffd0f 	ldh	r4,-12(fp)
10002554:	e0fffc8f 	ldh	r3,-14(fp)
10002558:	210003e4 	muli	r4,r4,15
1000255c:	e109883a 	add	r4,fp,r4
10002560:	20c7883a 	add	r3,r4,r3
10002564:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002568:	e0bffd0b 	ldhu	r2,-12(fp)
1000256c:	e0bea705 	stb	r2,-1380(fp)
            npt.ypos = nypos;
10002570:	e0bffc8b 	ldhu	r2,-14(fp)
10002574:	e0bea745 	stb	r2,-1379(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002578:	e0bea704 	addi	r2,fp,-1380
1000257c:	100b883a 	mov	r5,r2
10002580:	e13fff17 	ldw	r4,-4(fp)
10002584:	0001e540 	call	10001e54 <stack_push>
10002588:	e0bfff15 	stw	r2,-4(fp)
    while(!stack_isempty(dijkstra_fringe)) {
1000258c:	e13fff17 	ldw	r4,-4(fp)
10002590:	0001f100 	call	10001f10 <stack_isempty>
10002594:	1080005c 	xori	r2,r2,1
10002598:	10803fcc 	andi	r2,r2,255
1000259c:	103ec51e 	bne	r2,zero,100020b4 <blinkys_move+0x17c>
        }
    }

    // Now all tiles are marked with a distance. See where should blinky go.
    uint8_t best_xpos = game->blinky.xpos;
100025a0:	e0bea617 	ldw	r2,-1384(fp)
100025a4:	1080e283 	ldbu	r2,906(r2)
100025a8:	e0bffe45 	stb	r2,-7(fp)
    uint8_t best_ypos = game->blinky.ypos;
100025ac:	e0bea617 	ldw	r2,-1384(fp)
100025b0:	1080e2c3 	ldbu	r2,907(r2)
100025b4:	e0bffe05 	stb	r2,-8(fp)
    uint8_t best_dist = 63;
100025b8:	00800fc4 	movi	r2,63
100025bc:	e0bffdc5 	stb	r2,-9(fp)

    // Investigate UP.
    int16_t nxpos = game->blinky.xpos;
100025c0:	e0bea617 	ldw	r2,-1384(fp)
100025c4:	1080e283 	ldbu	r2,906(r2)
100025c8:	10803fcc 	andi	r2,r2,255
100025cc:	e0bffc0d 	sth	r2,-16(fp)
    int16_t nypos = game->blinky.ypos;
100025d0:	e0bea617 	ldw	r2,-1384(fp)
100025d4:	1080e2c3 	ldbu	r2,907(r2)
100025d8:	10803fcc 	andi	r2,r2,255
100025dc:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
100025e0:	e0bffc0f 	ldh	r2,-16(fp)
100025e4:	10800384 	addi	r2,r2,14
100025e8:	00c003c4 	movi	r3,15
100025ec:	10c7283a 	div	r3,r2,r3
100025f0:	18c003e4 	muli	r3,r3,15
100025f4:	10c5c83a 	sub	r2,r2,r3
100025f8:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
100025fc:	e0fffc0f 	ldh	r3,-16(fp)
10002600:	e0bffb8f 	ldh	r2,-18(fp)
10002604:	18c003e4 	muli	r3,r3,15
10002608:	e0c7883a 	add	r3,fp,r3
1000260c:	1885883a 	add	r2,r3,r2
10002610:	10bfc343 	ldbu	r2,-243(r2)
10002614:	10c03fcc 	andi	r3,r2,255
10002618:	18c0201c 	xori	r3,r3,128
1000261c:	18ffe004 	addi	r3,r3,-128
10002620:	e0bffdc3 	ldbu	r2,-9(fp)
10002624:	18800b0e 	bge	r3,r2,10002654 <blinkys_move+0x71c>
        best_dist = distances[nxpos][nypos];
10002628:	e0fffc0f 	ldh	r3,-16(fp)
1000262c:	e0bffb8f 	ldh	r2,-18(fp)
10002630:	18c003e4 	muli	r3,r3,15
10002634:	e0c7883a 	add	r3,fp,r3
10002638:	1885883a 	add	r2,r3,r2
1000263c:	10bfc343 	ldbu	r2,-243(r2)
10002640:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
10002644:	e0bffc0b 	ldhu	r2,-16(fp)
10002648:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
1000264c:	e0bffb8b 	ldhu	r2,-18(fp)
10002650:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate DOWN.
    nxpos = game->blinky.xpos;
10002654:	e0bea617 	ldw	r2,-1384(fp)
10002658:	1080e283 	ldbu	r2,906(r2)
1000265c:	10803fcc 	andi	r2,r2,255
10002660:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
10002664:	e0bea617 	ldw	r2,-1384(fp)
10002668:	1080e2c3 	ldbu	r2,907(r2)
1000266c:	10803fcc 	andi	r2,r2,255
10002670:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos + 1) % _BOARD_H;
10002674:	e0bffc0f 	ldh	r2,-16(fp)
10002678:	10800044 	addi	r2,r2,1
1000267c:	00c003c4 	movi	r3,15
10002680:	10c7283a 	div	r3,r2,r3
10002684:	18c003e4 	muli	r3,r3,15
10002688:	10c5c83a 	sub	r2,r2,r3
1000268c:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002690:	e0fffc0f 	ldh	r3,-16(fp)
10002694:	e0bffb8f 	ldh	r2,-18(fp)
10002698:	18c003e4 	muli	r3,r3,15
1000269c:	e0c7883a 	add	r3,fp,r3
100026a0:	1885883a 	add	r2,r3,r2
100026a4:	10bfc343 	ldbu	r2,-243(r2)
100026a8:	10c03fcc 	andi	r3,r2,255
100026ac:	18c0201c 	xori	r3,r3,128
100026b0:	18ffe004 	addi	r3,r3,-128
100026b4:	e0bffdc3 	ldbu	r2,-9(fp)
100026b8:	18800b0e 	bge	r3,r2,100026e8 <blinkys_move+0x7b0>
        best_dist = distances[nxpos][nypos];
100026bc:	e0fffc0f 	ldh	r3,-16(fp)
100026c0:	e0bffb8f 	ldh	r2,-18(fp)
100026c4:	18c003e4 	muli	r3,r3,15
100026c8:	e0c7883a 	add	r3,fp,r3
100026cc:	1885883a 	add	r2,r3,r2
100026d0:	10bfc343 	ldbu	r2,-243(r2)
100026d4:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
100026d8:	e0bffc0b 	ldhu	r2,-16(fp)
100026dc:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
100026e0:	e0bffb8b 	ldhu	r2,-18(fp)
100026e4:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate LEFT.
    nxpos = game->blinky.xpos;
100026e8:	e0bea617 	ldw	r2,-1384(fp)
100026ec:	1080e283 	ldbu	r2,906(r2)
100026f0:	10803fcc 	andi	r2,r2,255
100026f4:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
100026f8:	e0bea617 	ldw	r2,-1384(fp)
100026fc:	1080e2c3 	ldbu	r2,907(r2)
10002700:	10803fcc 	andi	r2,r2,255
10002704:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10002708:	e0bffb8f 	ldh	r2,-18(fp)
1000270c:	10800384 	addi	r2,r2,14
10002710:	00c003c4 	movi	r3,15
10002714:	10c7283a 	div	r3,r2,r3
10002718:	18c003e4 	muli	r3,r3,15
1000271c:	10c5c83a 	sub	r2,r2,r3
10002720:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002724:	e0fffc0f 	ldh	r3,-16(fp)
10002728:	e0bffb8f 	ldh	r2,-18(fp)
1000272c:	18c003e4 	muli	r3,r3,15
10002730:	e0c7883a 	add	r3,fp,r3
10002734:	1885883a 	add	r2,r3,r2
10002738:	10bfc343 	ldbu	r2,-243(r2)
1000273c:	10c03fcc 	andi	r3,r2,255
10002740:	18c0201c 	xori	r3,r3,128
10002744:	18ffe004 	addi	r3,r3,-128
10002748:	e0bffdc3 	ldbu	r2,-9(fp)
1000274c:	18800b0e 	bge	r3,r2,1000277c <blinkys_move+0x844>
        best_dist = distances[nxpos][nypos];
10002750:	e0fffc0f 	ldh	r3,-16(fp)
10002754:	e0bffb8f 	ldh	r2,-18(fp)
10002758:	18c003e4 	muli	r3,r3,15
1000275c:	e0c7883a 	add	r3,fp,r3
10002760:	1885883a 	add	r2,r3,r2
10002764:	10bfc343 	ldbu	r2,-243(r2)
10002768:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
1000276c:	e0bffc0b 	ldhu	r2,-16(fp)
10002770:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
10002774:	e0bffb8b 	ldhu	r2,-18(fp)
10002778:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate RIGHT.
    nxpos = game->blinky.xpos;
1000277c:	e0bea617 	ldw	r2,-1384(fp)
10002780:	1080e283 	ldbu	r2,906(r2)
10002784:	10803fcc 	andi	r2,r2,255
10002788:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
1000278c:	e0bea617 	ldw	r2,-1384(fp)
10002790:	1080e2c3 	ldbu	r2,907(r2)
10002794:	10803fcc 	andi	r2,r2,255
10002798:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos + 1) % _BOARD_W;
1000279c:	e0bffb8f 	ldh	r2,-18(fp)
100027a0:	10800044 	addi	r2,r2,1
100027a4:	00c003c4 	movi	r3,15
100027a8:	10c7283a 	div	r3,r2,r3
100027ac:	18c003e4 	muli	r3,r3,15
100027b0:	10c5c83a 	sub	r2,r2,r3
100027b4:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
100027b8:	e0fffc0f 	ldh	r3,-16(fp)
100027bc:	e0bffb8f 	ldh	r2,-18(fp)
100027c0:	18c003e4 	muli	r3,r3,15
100027c4:	e0c7883a 	add	r3,fp,r3
100027c8:	1885883a 	add	r2,r3,r2
100027cc:	10bfc343 	ldbu	r2,-243(r2)
100027d0:	10c03fcc 	andi	r3,r2,255
100027d4:	18c0201c 	xori	r3,r3,128
100027d8:	18ffe004 	addi	r3,r3,-128
100027dc:	e0bffdc3 	ldbu	r2,-9(fp)
100027e0:	18800b0e 	bge	r3,r2,10002810 <blinkys_move+0x8d8>
        best_dist = distances[nxpos][nypos];
100027e4:	e0fffc0f 	ldh	r3,-16(fp)
100027e8:	e0bffb8f 	ldh	r2,-18(fp)
100027ec:	18c003e4 	muli	r3,r3,15
100027f0:	e0c7883a 	add	r3,fp,r3
100027f4:	1885883a 	add	r2,r3,r2
100027f8:	10bfc343 	ldbu	r2,-243(r2)
100027fc:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
10002800:	e0bffc0b 	ldhu	r2,-16(fp)
10002804:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
10002808:	e0bffb8b 	ldhu	r2,-18(fp)
1000280c:	e0bffe05 	stb	r2,-8(fp)
    }

    if(best_dist != 63) {
10002810:	e0bffdc3 	ldbu	r2,-9(fp)
10002814:	10800fe0 	cmpeqi	r2,r2,63
10002818:	1000141e 	bne	r2,zero,1000286c <blinkys_move+0x934>
    	// Add to update queue.
    	addPendingPos(game->blinky.xpos, game->blinky.ypos);
1000281c:	e0bea617 	ldw	r2,-1384(fp)
10002820:	1080e283 	ldbu	r2,906(r2)
10002824:	10c03fcc 	andi	r3,r2,255
10002828:	e0bea617 	ldw	r2,-1384(fp)
1000282c:	1080e2c3 	ldbu	r2,907(r2)
10002830:	10803fcc 	andi	r2,r2,255
10002834:	100b883a 	mov	r5,r2
10002838:	1809883a 	mov	r4,r3
1000283c:	0005cb40 	call	10005cb4 <addPendingPos>
    	addPendingPos(best_xpos, best_ypos);
10002840:	e0bffe43 	ldbu	r2,-7(fp)
10002844:	e0fffe03 	ldbu	r3,-8(fp)
10002848:	180b883a 	mov	r5,r3
1000284c:	1009883a 	mov	r4,r2
10002850:	0005cb40 	call	10005cb4 <addPendingPos>
    	// Move blinky.
        game->blinky.xpos = best_xpos;
10002854:	e0bea617 	ldw	r2,-1384(fp)
10002858:	e0fffe43 	ldbu	r3,-7(fp)
1000285c:	10c0e285 	stb	r3,906(r2)
        game->blinky.ypos = best_ypos;
10002860:	e0bea617 	ldw	r2,-1384(fp)
10002864:	e0fffe03 	ldbu	r3,-8(fp)
10002868:	10c0e2c5 	stb	r3,907(r2)
    }
}
1000286c:	0001883a 	nop
10002870:	e037883a 	mov	sp,fp
10002874:	dfc00117 	ldw	ra,4(sp)
10002878:	df000017 	ldw	fp,0(sp)
1000287c:	dec00204 	addi	sp,sp,8
10002880:	f800283a 	ret

10002884 <pinkys_move>:

// Pinky. Ambush the player by cutting a way towards the player's moving direction.
void pinkys_move(Game* game) {
10002884:	defffe04 	addi	sp,sp,-8
10002888:	df000115 	stw	fp,4(sp)
1000288c:	df000104 	addi	fp,sp,4
10002890:	e13fff15 	stw	r4,-4(fp)

}
10002894:	0001883a 	nop
10002898:	e037883a 	mov	sp,fp
1000289c:	df000017 	ldw	fp,0(sp)
100028a0:	dec00104 	addi	sp,sp,4
100028a4:	f800283a 	ret

100028a8 <inkys_move>:

// Inky. Patrol an area.
void inkys_move(Game*game) {
100028a8:	defffe04 	addi	sp,sp,-8
100028ac:	df000115 	stw	fp,4(sp)
100028b0:	df000104 	addi	fp,sp,4
100028b4:	e13fff15 	stw	r4,-4(fp)

}
100028b8:	0001883a 	nop
100028bc:	e037883a 	mov	sp,fp
100028c0:	df000017 	ldw	fp,0(sp)
100028c4:	dec00104 	addi	sp,sp,4
100028c8:	f800283a 	ret

100028cc <clydes_move>:

// Clyde. Move randomly.
void clydes_move(Game* game) {
100028cc:	defffa04 	addi	sp,sp,-24
100028d0:	dfc00515 	stw	ra,20(sp)
100028d4:	df000415 	stw	fp,16(sp)
100028d8:	df000404 	addi	fp,sp,16
100028dc:	e13ffc15 	stw	r4,-16(fp)
	int rand_direction = rand() % 4;
100028e0:	0015be80 	call	10015be8 <rand>
100028e4:	1007883a 	mov	r3,r2
100028e8:	00a00034 	movhi	r2,32768
100028ec:	108000c4 	addi	r2,r2,3
100028f0:	1884703a 	and	r2,r3,r2
100028f4:	1000040e 	bge	r2,zero,10002908 <clydes_move+0x3c>
100028f8:	10bfffc4 	addi	r2,r2,-1
100028fc:	00ffff04 	movi	r3,-4
10002900:	10c4b03a 	or	r2,r2,r3
10002904:	10800044 	addi	r2,r2,1
10002908:	e0bffd15 	stw	r2,-12(fp)
	int newx, newy;
	switch(rand_direction) {
1000290c:	e0bffd17 	ldw	r2,-12(fp)
10002910:	10800060 	cmpeqi	r2,r2,1
10002914:	10000f1e 	bne	r2,zero,10002954 <clydes_move+0x88>
10002918:	e0bffd17 	ldw	r2,-12(fp)
1000291c:	108000a0 	cmpeqi	r2,r2,2
10002920:	1000161e 	bne	r2,zero,1000297c <clydes_move+0xb0>
10002924:	e0bffd17 	ldw	r2,-12(fp)
10002928:	10001e1e 	bne	r2,zero,100029a4 <clydes_move+0xd8>
		case 0: {
			newx = game->clyde.xpos + 1;
1000292c:	e0bffc17 	ldw	r2,-16(fp)
10002930:	1080e703 	ldbu	r2,924(r2)
10002934:	10803fcc 	andi	r2,r2,255
10002938:	10800044 	addi	r2,r2,1
1000293c:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos;
10002940:	e0bffc17 	ldw	r2,-16(fp)
10002944:	1080e743 	ldbu	r2,925(r2)
10002948:	10803fcc 	andi	r2,r2,255
1000294c:	e0bffe15 	stw	r2,-8(fp)
			break;
10002950:	00001e06 	br	100029cc <clydes_move+0x100>
		}
		case 1: {
			newx = game->clyde.xpos - 1;
10002954:	e0bffc17 	ldw	r2,-16(fp)
10002958:	1080e703 	ldbu	r2,924(r2)
1000295c:	10803fcc 	andi	r2,r2,255
10002960:	10bfffc4 	addi	r2,r2,-1
10002964:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos;
10002968:	e0bffc17 	ldw	r2,-16(fp)
1000296c:	1080e743 	ldbu	r2,925(r2)
10002970:	10803fcc 	andi	r2,r2,255
10002974:	e0bffe15 	stw	r2,-8(fp)
			break;
10002978:	00001406 	br	100029cc <clydes_move+0x100>
		}
		case 2: {
			newx = game->clyde.xpos;
1000297c:	e0bffc17 	ldw	r2,-16(fp)
10002980:	1080e703 	ldbu	r2,924(r2)
10002984:	10803fcc 	andi	r2,r2,255
10002988:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos + 1;
1000298c:	e0bffc17 	ldw	r2,-16(fp)
10002990:	1080e743 	ldbu	r2,925(r2)
10002994:	10803fcc 	andi	r2,r2,255
10002998:	10800044 	addi	r2,r2,1
1000299c:	e0bffe15 	stw	r2,-8(fp)
			break;
100029a0:	00000a06 	br	100029cc <clydes_move+0x100>
		}
		default: {
			newx = game->clyde.xpos;
100029a4:	e0bffc17 	ldw	r2,-16(fp)
100029a8:	1080e703 	ldbu	r2,924(r2)
100029ac:	10803fcc 	andi	r2,r2,255
100029b0:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos - 1;
100029b4:	e0bffc17 	ldw	r2,-16(fp)
100029b8:	1080e743 	ldbu	r2,925(r2)
100029bc:	10803fcc 	andi	r2,r2,255
100029c0:	10bfffc4 	addi	r2,r2,-1
100029c4:	e0bffe15 	stw	r2,-8(fp)
			break;
100029c8:	0001883a 	nop
		}
	}

	newx = (newx+16) % 16;
100029cc:	e0bfff17 	ldw	r2,-4(fp)
100029d0:	10c00404 	addi	r3,r2,16
100029d4:	00a00034 	movhi	r2,32768
100029d8:	108003c4 	addi	r2,r2,15
100029dc:	1884703a 	and	r2,r3,r2
100029e0:	1000040e 	bge	r2,zero,100029f4 <clydes_move+0x128>
100029e4:	10bfffc4 	addi	r2,r2,-1
100029e8:	00fffc04 	movi	r3,-16
100029ec:	10c4b03a 	or	r2,r2,r3
100029f0:	10800044 	addi	r2,r2,1
100029f4:	e0bfff15 	stw	r2,-4(fp)
	newy = (newy+16) % 16;
100029f8:	e0bffe17 	ldw	r2,-8(fp)
100029fc:	10c00404 	addi	r3,r2,16
10002a00:	00a00034 	movhi	r2,32768
10002a04:	108003c4 	addi	r2,r2,15
10002a08:	1884703a 	and	r2,r3,r2
10002a0c:	1000040e 	bge	r2,zero,10002a20 <clydes_move+0x154>
10002a10:	10bfffc4 	addi	r2,r2,-1
10002a14:	00fffc04 	movi	r3,-16
10002a18:	10c4b03a 	or	r2,r2,r3
10002a1c:	10800044 	addi	r2,r2,1
10002a20:	e0bffe15 	stw	r2,-8(fp)
	if(game->game_map[newx][newy] != WALL) {
10002a24:	e0fffc17 	ldw	r3,-16(fp)
10002a28:	e0bfff17 	ldw	r2,-4(fp)
10002a2c:	110003e4 	muli	r4,r2,15
10002a30:	e0bffe17 	ldw	r2,-8(fp)
10002a34:	2085883a 	add	r2,r4,r2
10002a38:	100490ba 	slli	r2,r2,2
10002a3c:	1885883a 	add	r2,r3,r2
10002a40:	10800017 	ldw	r2,0(r2)
10002a44:	10001c26 	beq	r2,zero,10002ab8 <clydes_move+0x1ec>
		// Add to update queue.
		addPendingPos(game->clyde.xpos, game->clyde.ypos);
10002a48:	e0bffc17 	ldw	r2,-16(fp)
10002a4c:	1080e703 	ldbu	r2,924(r2)
10002a50:	10c03fcc 	andi	r3,r2,255
10002a54:	e0bffc17 	ldw	r2,-16(fp)
10002a58:	1080e743 	ldbu	r2,925(r2)
10002a5c:	10803fcc 	andi	r2,r2,255
10002a60:	100b883a 	mov	r5,r2
10002a64:	1809883a 	mov	r4,r3
10002a68:	0005cb40 	call	10005cb4 <addPendingPos>
		addPendingPos(newx, newy);
10002a6c:	e0bfff17 	ldw	r2,-4(fp)
10002a70:	10bfffcc 	andi	r2,r2,65535
10002a74:	10a0001c 	xori	r2,r2,32768
10002a78:	10a00004 	addi	r2,r2,-32768
10002a7c:	e0fffe17 	ldw	r3,-8(fp)
10002a80:	18ffffcc 	andi	r3,r3,65535
10002a84:	18e0001c 	xori	r3,r3,32768
10002a88:	18e00004 	addi	r3,r3,-32768
10002a8c:	180b883a 	mov	r5,r3
10002a90:	1009883a 	mov	r4,r2
10002a94:	0005cb40 	call	10005cb4 <addPendingPos>
		game->clyde.xpos = newx;
10002a98:	e0bfff17 	ldw	r2,-4(fp)
10002a9c:	1007883a 	mov	r3,r2
10002aa0:	e0bffc17 	ldw	r2,-16(fp)
10002aa4:	10c0e705 	stb	r3,924(r2)
		game->clyde.ypos = newy;
10002aa8:	e0bffe17 	ldw	r2,-8(fp)
10002aac:	1007883a 	mov	r3,r2
10002ab0:	e0bffc17 	ldw	r2,-16(fp)
10002ab4:	10c0e745 	stb	r3,925(r2)
	}
}
10002ab8:	0001883a 	nop
10002abc:	e037883a 	mov	sp,fp
10002ac0:	dfc00117 	ldw	ra,4(sp)
10002ac4:	df000017 	ldw	fp,0(sp)
10002ac8:	dec00204 	addi	sp,sp,8
10002acc:	f800283a 	ret

10002ad0 <blinkyPalette>:

void blinkyPalette() {
10002ad0:	defffd04 	addi	sp,sp,-12
10002ad4:	dfc00215 	stw	ra,8(sp)
10002ad8:	df000115 	stw	fp,4(sp)
10002adc:	df000104 	addi	fp,sp,4
	Palette* binkyPalette;
	binkyPalette = malloc(sizeof(Palette));
10002ae0:	01000504 	movi	r4,20
10002ae4:	0014d680 	call	10014d68 <malloc>
10002ae8:	e0bfff15 	stw	r2,-4(fp)
	binkyPalette->colors[0] = 0x000000;
10002aec:	e0bfff17 	ldw	r2,-4(fp)
10002af0:	10000115 	stw	zero,4(r2)
	binkyPalette->colors[3] = 0xFF5243;
10002af4:	e0ffff17 	ldw	r3,-4(fp)
10002af8:	00803ff4 	movhi	r2,255
10002afc:	109490c4 	addi	r2,r2,21059
10002b00:	18800415 	stw	r2,16(r3)
	binkyPalette->paletteId = 3;
10002b04:	e0bfff17 	ldw	r2,-4(fp)
10002b08:	00c000c4 	movi	r3,3
10002b0c:	10c00015 	stw	r3,0(r2)
	writePalette(binkyPalette);
10002b10:	e13fff17 	ldw	r4,-4(fp)
10002b14:	00046d80 	call	100046d8 <writePalette>
	free(blinkyPalette);
10002b18:	01040034 	movhi	r4,4096
10002b1c:	210ab404 	addi	r4,r4,10960
10002b20:	0014d780 	call	10014d78 <free>
}
10002b24:	0001883a 	nop
10002b28:	e037883a 	mov	sp,fp
10002b2c:	dfc00117 	ldw	ra,4(sp)
10002b30:	df000017 	ldw	fp,0(sp)
10002b34:	dec00204 	addi	sp,sp,8
10002b38:	f800283a 	ret

10002b3c <pinkyPalette>:

void pinkyPalette() {
10002b3c:	defffd04 	addi	sp,sp,-12
10002b40:	dfc00215 	stw	ra,8(sp)
10002b44:	df000115 	stw	fp,4(sp)
10002b48:	df000104 	addi	fp,sp,4
	Palette* pinkyPalette;
	pinkyPalette = malloc(sizeof(Palette));
10002b4c:	01000504 	movi	r4,20
10002b50:	0014d680 	call	10014d68 <malloc>
10002b54:	e0bfff15 	stw	r2,-4(fp)
	pinkyPalette->colors[0] = 0x000000;
10002b58:	e0bfff17 	ldw	r2,-4(fp)
10002b5c:	10000115 	stw	zero,4(r2)
	pinkyPalette->colors[3] = 0xC92CE8;
10002b60:	e0ffff17 	ldw	r3,-4(fp)
10002b64:	00803274 	movhi	r2,201
10002b68:	108b3a04 	addi	r2,r2,11496
10002b6c:	18800415 	stw	r2,16(r3)
	pinkyPalette->paletteId = 4;
10002b70:	e0bfff17 	ldw	r2,-4(fp)
10002b74:	00c00104 	movi	r3,4
10002b78:	10c00015 	stw	r3,0(r2)
	writePalette(pinkyPalette);
10002b7c:	e13fff17 	ldw	r4,-4(fp)
10002b80:	00046d80 	call	100046d8 <writePalette>
	free(pinkyPalette);
10002b84:	e13fff17 	ldw	r4,-4(fp)
10002b88:	0014d780 	call	10014d78 <free>
}
10002b8c:	0001883a 	nop
10002b90:	e037883a 	mov	sp,fp
10002b94:	dfc00117 	ldw	ra,4(sp)
10002b98:	df000017 	ldw	fp,0(sp)
10002b9c:	dec00204 	addi	sp,sp,8
10002ba0:	f800283a 	ret

10002ba4 <inkyPalette>:

void inkyPalette(){
10002ba4:	defffd04 	addi	sp,sp,-12
10002ba8:	dfc00215 	stw	ra,8(sp)
10002bac:	df000115 	stw	fp,4(sp)
10002bb0:	df000104 	addi	fp,sp,4
	Palette* inkyPalette;
	inkyPalette = malloc(sizeof(Palette));
10002bb4:	01000504 	movi	r4,20
10002bb8:	0014d680 	call	10014d68 <malloc>
10002bbc:	e0bfff15 	stw	r2,-4(fp)
	inkyPalette->colors[0] = 0x000000;
10002bc0:	e0bfff17 	ldw	r2,-4(fp)
10002bc4:	10000115 	stw	zero,4(r2)
	inkyPalette->colors[3] = 0x2CD0E8;
10002bc8:	e0ffff17 	ldw	r3,-4(fp)
10002bcc:	00800b74 	movhi	r2,45
10002bd0:	10b43a04 	addi	r2,r2,-12056
10002bd4:	18800415 	stw	r2,16(r3)
	inkyPalette->paletteId = 5;
10002bd8:	e0bfff17 	ldw	r2,-4(fp)
10002bdc:	00c00144 	movi	r3,5
10002be0:	10c00015 	stw	r3,0(r2)
	writePalette(inkyPalette);
10002be4:	e13fff17 	ldw	r4,-4(fp)
10002be8:	00046d80 	call	100046d8 <writePalette>
	free(inkyPalette);
10002bec:	e13fff17 	ldw	r4,-4(fp)
10002bf0:	0014d780 	call	10014d78 <free>
}
10002bf4:	0001883a 	nop
10002bf8:	e037883a 	mov	sp,fp
10002bfc:	dfc00117 	ldw	ra,4(sp)
10002c00:	df000017 	ldw	fp,0(sp)
10002c04:	dec00204 	addi	sp,sp,8
10002c08:	f800283a 	ret

10002c0c <clydePalette>:

void clydePalette() {
10002c0c:	defffd04 	addi	sp,sp,-12
10002c10:	dfc00215 	stw	ra,8(sp)
10002c14:	df000115 	stw	fp,4(sp)
10002c18:	df000104 	addi	fp,sp,4
	Palette* clydePalette = malloc(sizeof(Palette));
10002c1c:	01000504 	movi	r4,20
10002c20:	0014d680 	call	10014d68 <malloc>
10002c24:	e0bfff15 	stw	r2,-4(fp)
	clydePalette->colors[0] = 0x000000;
10002c28:	e0bfff17 	ldw	r2,-4(fp)
10002c2c:	10000115 	stw	zero,4(r2)
	clydePalette->colors[3] = 0xFFB732;
10002c30:	e0ffff17 	ldw	r3,-4(fp)
10002c34:	00804034 	movhi	r2,256
10002c38:	10adcc84 	addi	r2,r2,-18638
10002c3c:	18800415 	stw	r2,16(r3)
	clydePalette->paletteId = 6;
10002c40:	e0bfff17 	ldw	r2,-4(fp)
10002c44:	00c00184 	movi	r3,6
10002c48:	10c00015 	stw	r3,0(r2)
	writePalette(clydePalette);
10002c4c:	e13fff17 	ldw	r4,-4(fp)
10002c50:	00046d80 	call	100046d8 <writePalette>
	free(clydePalette);
10002c54:	e13fff17 	ldw	r4,-4(fp)
10002c58:	0014d780 	call	10014d78 <free>
}
10002c5c:	0001883a 	nop
10002c60:	e037883a 	mov	sp,fp
10002c64:	dfc00117 	ldw	ra,4(sp)
10002c68:	df000017 	ldw	fp,0(sp)
10002c6c:	dec00204 	addi	sp,sp,8
10002c70:	f800283a 	ret

10002c74 <gbPalette>:

void gbPalette() {
10002c74:	defffd04 	addi	sp,sp,-12
10002c78:	dfc00215 	stw	ra,8(sp)
10002c7c:	df000115 	stw	fp,4(sp)
10002c80:	df000104 	addi	fp,sp,4
	Palette* gbPalette = malloc(sizeof(Palette));
10002c84:	01000504 	movi	r4,20
10002c88:	0014d680 	call	10014d68 <malloc>
10002c8c:	e0bfff15 	stw	r2,-4(fp)
	gbPalette->colors[0] = 0x000000;
10002c90:	e0bfff17 	ldw	r2,-4(fp)
10002c94:	10000115 	stw	zero,4(r2)
	gbPalette->colors[1] = 0xFFFFFF;	// White
10002c98:	e0ffff17 	ldw	r3,-4(fp)
10002c9c:	00804034 	movhi	r2,256
10002ca0:	10bfffc4 	addi	r2,r2,-1
10002ca4:	18800215 	stw	r2,8(r3)
	gbPalette->colors[2] = 0xFFFFFF;
10002ca8:	e0ffff17 	ldw	r3,-4(fp)
10002cac:	00804034 	movhi	r2,256
10002cb0:	10bfffc4 	addi	r2,r2,-1
10002cb4:	18800315 	stw	r2,12(r3)
	gbPalette->colors[3] = 0xFFFF00;	// Yellow
10002cb8:	e0ffff17 	ldw	r3,-4(fp)
10002cbc:	00804034 	movhi	r2,256
10002cc0:	10bfc004 	addi	r2,r2,-256
10002cc4:	18800415 	stw	r2,16(r3)
	gbPalette->paletteId = 1;
10002cc8:	e0bfff17 	ldw	r2,-4(fp)
10002ccc:	00c00044 	movi	r3,1
10002cd0:	10c00015 	stw	r3,0(r2)
	writePalette(gbPalette);
10002cd4:	e13fff17 	ldw	r4,-4(fp)
10002cd8:	00046d80 	call	100046d8 <writePalette>
	free(gbPalette);
10002cdc:	e13fff17 	ldw	r4,-4(fp)
10002ce0:	0014d780 	call	10014d78 <free>
}
10002ce4:	0001883a 	nop
10002ce8:	e037883a 	mov	sp,fp
10002cec:	dfc00117 	ldw	ra,4(sp)
10002cf0:	df000017 	ldw	fp,0(sp)
10002cf4:	dec00204 	addi	sp,sp,8
10002cf8:	f800283a 	ret

10002cfc <textPalette>:

void textPalette() {
10002cfc:	defffd04 	addi	sp,sp,-12
10002d00:	dfc00215 	stw	ra,8(sp)
10002d04:	df000115 	stw	fp,4(sp)
10002d08:	df000104 	addi	fp,sp,4
	Palette* textPalette = malloc(sizeof(Palette));
10002d0c:	01000504 	movi	r4,20
10002d10:	0014d680 	call	10014d68 <malloc>
10002d14:	e0bfff15 	stw	r2,-4(fp)
	textPalette->colors[0] = 0x000000;
10002d18:	e0bfff17 	ldw	r2,-4(fp)
10002d1c:	10000115 	stw	zero,4(r2)
	textPalette->colors[1] = 0xFFFFFF;
10002d20:	e0ffff17 	ldw	r3,-4(fp)
10002d24:	00804034 	movhi	r2,256
10002d28:	10bfffc4 	addi	r2,r2,-1
10002d2c:	18800215 	stw	r2,8(r3)
	textPalette->colors[2] = 0xFFFFFF;
10002d30:	e0ffff17 	ldw	r3,-4(fp)
10002d34:	00804034 	movhi	r2,256
10002d38:	10bfffc4 	addi	r2,r2,-1
10002d3c:	18800315 	stw	r2,12(r3)
	textPalette->colors[3] = 0xFFFFFF;
10002d40:	e0ffff17 	ldw	r3,-4(fp)
10002d44:	00804034 	movhi	r2,256
10002d48:	10bfffc4 	addi	r2,r2,-1
10002d4c:	18800415 	stw	r2,16(r3)
	textPalette->paletteId = 0;
10002d50:	e0bfff17 	ldw	r2,-4(fp)
10002d54:	10000015 	stw	zero,0(r2)
	writePalette(textPalette);
10002d58:	e13fff17 	ldw	r4,-4(fp)
10002d5c:	00046d80 	call	100046d8 <writePalette>
	free(textPalette);
10002d60:	e13fff17 	ldw	r4,-4(fp)
10002d64:	0014d780 	call	10014d78 <free>
}
10002d68:	0001883a 	nop
10002d6c:	e037883a 	mov	sp,fp
10002d70:	dfc00117 	ldw	ra,4(sp)
10002d74:	df000017 	ldw	fp,0(sp)
10002d78:	dec00204 	addi	sp,sp,8
10002d7c:	f800283a 	ret

10002d80 <wallPalette>:

void wallPalette() {
10002d80:	defffd04 	addi	sp,sp,-12
10002d84:	dfc00215 	stw	ra,8(sp)
10002d88:	df000115 	stw	fp,4(sp)
10002d8c:	df000104 	addi	fp,sp,4
	Palette* wallPalette = malloc(sizeof(Palette));
10002d90:	01000504 	movi	r4,20
10002d94:	0014d680 	call	10014d68 <malloc>
10002d98:	e0bfff15 	stw	r2,-4(fp)
	wallPalette->colors[0] = 0x0000FF;
10002d9c:	e0bfff17 	ldw	r2,-4(fp)
10002da0:	00c03fc4 	movi	r3,255
10002da4:	10c00115 	stw	r3,4(r2)
	wallPalette->colors[1] = 0x000000;
10002da8:	e0bfff17 	ldw	r2,-4(fp)
10002dac:	10000215 	stw	zero,8(r2)
	wallPalette->colors[2] = 0x000000;
10002db0:	e0bfff17 	ldw	r2,-4(fp)
10002db4:	10000315 	stw	zero,12(r2)
	wallPalette->colors[3] = 0x000000;
10002db8:	e0bfff17 	ldw	r2,-4(fp)
10002dbc:	10000415 	stw	zero,16(r2)
	wallPalette->paletteId = 2;
10002dc0:	e0bfff17 	ldw	r2,-4(fp)
10002dc4:	00c00084 	movi	r3,2
10002dc8:	10c00015 	stw	r3,0(r2)
	writePalette(wallPalette);
10002dcc:	e13fff17 	ldw	r4,-4(fp)
10002dd0:	00046d80 	call	100046d8 <writePalette>
	free(wallPalette);
10002dd4:	e13fff17 	ldw	r4,-4(fp)
10002dd8:	0014d780 	call	10014d78 <free>
}
10002ddc:	0001883a 	nop
10002de0:	e037883a 	mov	sp,fp
10002de4:	dfc00117 	ldw	ra,4(sp)
10002de8:	df000017 	ldw	fp,0(sp)
10002dec:	dec00204 	addi	sp,sp,8
10002df0:	f800283a 	ret

10002df4 <initScreen>:

// This function initializes the screen.
void initScreen() {
10002df4:	deff5c04 	addi	sp,sp,-656
10002df8:	dfc0a315 	stw	ra,652(sp)
10002dfc:	df00a215 	stw	fp,648(sp)
10002e00:	df00a204 	addi	fp,sp,648
	textPalette();
10002e04:	0002cfc0 	call	10002cfc <textPalette>
	clearScreen();
10002e08:	0004a680 	call	10004a68 <clearScreen>

	writeText(0,0,"Score",0);
10002e0c:	000f883a 	mov	r7,zero
10002e10:	018400b4 	movhi	r6,4098
10002e14:	31922204 	addi	r6,r6,18568
10002e18:	000b883a 	mov	r5,zero
10002e1c:	0009883a 	mov	r4,zero
10002e20:	00049d00 	call	100049d0 <writeText>
	writeText(2,1,"000000",0);
10002e24:	000f883a 	mov	r7,zero
10002e28:	018400b4 	movhi	r6,4098
10002e2c:	31922404 	addi	r6,r6,18576
10002e30:	01400044 	movi	r5,1
10002e34:	01000084 	movi	r4,2
10002e38:	00049d00 	call	100049d0 <writeText>
	writeText(0,2,"HighScore",0);
10002e3c:	000f883a 	mov	r7,zero
10002e40:	018400b4 	movhi	r6,4098
10002e44:	31922604 	addi	r6,r6,18584
10002e48:	01400084 	movi	r5,2
10002e4c:	0009883a 	mov	r4,zero
10002e50:	00049d00 	call	100049d0 <writeText>
	writeText(2,3,"000000",0);
10002e54:	000f883a 	mov	r7,zero
10002e58:	018400b4 	movhi	r6,4098
10002e5c:	31922404 	addi	r6,r6,18576
10002e60:	014000c4 	movi	r5,3
10002e64:	01000084 	movi	r4,2
10002e68:	00049d00 	call	100049d0 <writeText>

	gbPalette();
10002e6c:	0002c740 	call	10002c74 <gbPalette>
	wallPalette();
10002e70:	0002d800 	call	10002d80 <wallPalette>

	blinkyPalette();
10002e74:	0002ad00 	call	10002ad0 <blinkyPalette>
	inkyPalette();
10002e78:	0002ba40 	call	10002ba4 <inkyPalette>
	pinkyPalette();
10002e7c:	0002b3c0 	call	10002b3c <pinkyPalette>
	clydePalette();
10002e80:	0002c0c0 	call	10002c0c <clydePalette>

	Sprite candy_left;
	Sprite candy_right;
	Sprite scandy_left;
	Sprite scandy_right;
	candy_left.sprite_id = 1;
10002e84:	00800044 	movi	r2,1
10002e88:	e0bff78d 	sth	r2,-34(fp)
	candy_right.sprite_id = 2;
10002e8c:	00800084 	movi	r2,2
10002e90:	e0bfef0d 	sth	r2,-68(fp)
	scandy_left.sprite_id = 3;
10002e94:	008000c4 	movi	r2,3
10002e98:	e0bfe68d 	sth	r2,-102(fp)
	scandy_right.sprite_id = 4;
10002e9c:	00800104 	movi	r2,4
10002ea0:	e0bfde0d 	sth	r2,-136(fp)
	char candy_matl[16][8] = {
10002ea4:	e0ffbe04 	addi	r3,fp,-264
10002ea8:	008400b4 	movhi	r2,4098
10002eac:	10922884 	addi	r2,r2,18594
10002eb0:	01002004 	movi	r4,128
10002eb4:	200d883a 	mov	r6,r4
10002eb8:	100b883a 	mov	r5,r2
10002ebc:	1809883a 	mov	r4,r3
10002ec0:	00156f00 	call	100156f0 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char candy_matr[16][8] = {
10002ec4:	e0ff9e04 	addi	r3,fp,-392
10002ec8:	008400b4 	movhi	r2,4098
10002ecc:	10924884 	addi	r2,r2,18722
10002ed0:	01002004 	movi	r4,128
10002ed4:	200d883a 	mov	r6,r4
10002ed8:	100b883a 	mov	r5,r2
10002edc:	1809883a 	mov	r4,r3
10002ee0:	00156f00 	call	100156f0 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char scandy_matl[16][8] = {
10002ee4:	e0ff7e04 	addi	r3,fp,-520
10002ee8:	008400b4 	movhi	r2,4098
10002eec:	10926884 	addi	r2,r2,18850
10002ef0:	01002004 	movi	r4,128
10002ef4:	200d883a 	mov	r6,r4
10002ef8:	100b883a 	mov	r5,r2
10002efc:	1809883a 	mov	r4,r3
10002f00:	00156f00 	call	100156f0 <memcpy>
			"      *@",
			"       *",
			"        ",
			"        ",
	};
	char scandy_matr[16][8] = {
10002f04:	e0ff5e04 	addi	r3,fp,-648
10002f08:	008400b4 	movhi	r2,4098
10002f0c:	10928884 	addi	r2,r2,18978
10002f10:	01002004 	movi	r4,128
10002f14:	200d883a 	mov	r6,r4
10002f18:	100b883a 	mov	r5,r2
10002f1c:	1809883a 	mov	r4,r3
10002f20:	00156f00 	call	100156f0 <memcpy>
			"@*      ",
			"*       ",
			"        ",
			"        ",
	};
	parseSprite(&candy_left, candy_matl);
10002f24:	e0ffbe04 	addi	r3,fp,-264
10002f28:	e0bff784 	addi	r2,fp,-34
10002f2c:	180b883a 	mov	r5,r3
10002f30:	1009883a 	mov	r4,r2
10002f34:	00048840 	call	10004884 <parseSprite>
	writeSprite(&candy_left);
10002f38:	e0bff784 	addi	r2,fp,-34
10002f3c:	1009883a 	mov	r4,r2
10002f40:	00048fc0 	call	100048fc <writeSprite>
	parseSprite(&candy_right, candy_matr);
10002f44:	e0ff9e04 	addi	r3,fp,-392
10002f48:	e0bfef04 	addi	r2,fp,-68
10002f4c:	180b883a 	mov	r5,r3
10002f50:	1009883a 	mov	r4,r2
10002f54:	00048840 	call	10004884 <parseSprite>
	writeSprite(&candy_right);
10002f58:	e0bfef04 	addi	r2,fp,-68
10002f5c:	1009883a 	mov	r4,r2
10002f60:	00048fc0 	call	100048fc <writeSprite>
	parseSprite(&scandy_left, scandy_matl);
10002f64:	e0ff7e04 	addi	r3,fp,-520
10002f68:	e0bfe684 	addi	r2,fp,-102
10002f6c:	180b883a 	mov	r5,r3
10002f70:	1009883a 	mov	r4,r2
10002f74:	00048840 	call	10004884 <parseSprite>
	writeSprite(&scandy_left);
10002f78:	e0bfe684 	addi	r2,fp,-102
10002f7c:	1009883a 	mov	r4,r2
10002f80:	00048fc0 	call	100048fc <writeSprite>
	parseSprite(&scandy_right, scandy_matr);
10002f84:	e0ff5e04 	addi	r3,fp,-648
10002f88:	e0bfde04 	addi	r2,fp,-136
10002f8c:	180b883a 	mov	r5,r3
10002f90:	1009883a 	mov	r4,r2
10002f94:	00048840 	call	10004884 <parseSprite>
	writeSprite(&scandy_right);
10002f98:	e0bfde04 	addi	r2,fp,-136
10002f9c:	1009883a 	mov	r4,r2
10002fa0:	00048fc0 	call	100048fc <writeSprite>
}
10002fa4:	0001883a 	nop
10002fa8:	e037883a 	mov	sp,fp
10002fac:	dfc00117 	ldw	ra,4(sp)
10002fb0:	df000017 	ldw	fp,0(sp)
10002fb4:	dec00204 	addi	sp,sp,8
10002fb8:	f800283a 	ret

10002fbc <drawBoard>:

// Draw the game board.
void drawBoard(Game* game) {
10002fbc:	defff904 	addi	sp,sp,-28
10002fc0:	dfc00615 	stw	ra,24(sp)
10002fc4:	df000515 	stw	fp,20(sp)
10002fc8:	df000504 	addi	fp,sp,20
10002fcc:	e13ffb15 	stw	r4,-20(fp)
	// Draw the board.
	for(int i=0;i<_BOARD_W;i+=1) {
10002fd0:	e03fff15 	stw	zero,-4(fp)
10002fd4:	00008406 	br	100031e8 <drawBoard+0x22c>
		for(int j=0;j<_BOARD_H;j+=1) {
10002fd8:	e03ffe15 	stw	zero,-8(fp)
10002fdc:	00007c06 	br	100031d0 <drawBoard+0x214>
			if(i==game->blinky.xpos && j==game->blinky.ypos) {
10002fe0:	e0bffb17 	ldw	r2,-20(fp)
10002fe4:	1080e283 	ldbu	r2,906(r2)
10002fe8:	10803fcc 	andi	r2,r2,255
10002fec:	e0ffff17 	ldw	r3,-4(fp)
10002ff0:	1880051e 	bne	r3,r2,10003008 <drawBoard+0x4c>
10002ff4:	e0bffb17 	ldw	r2,-20(fp)
10002ff8:	1080e2c3 	ldbu	r2,907(r2)
10002ffc:	10803fcc 	andi	r2,r2,255
10003000:	e0fffe17 	ldw	r3,-8(fp)
10003004:	18806826 	beq	r3,r2,100031a8 <drawBoard+0x1ec>
				continue;
			} else if(i==game->pinky.xpos && j==game->pinky.ypos) {
10003008:	e0bffb17 	ldw	r2,-20(fp)
1000300c:	1080e403 	ldbu	r2,912(r2)
10003010:	10803fcc 	andi	r2,r2,255
10003014:	e0ffff17 	ldw	r3,-4(fp)
10003018:	1880051e 	bne	r3,r2,10003030 <drawBoard+0x74>
1000301c:	e0bffb17 	ldw	r2,-20(fp)
10003020:	1080e443 	ldbu	r2,913(r2)
10003024:	10803fcc 	andi	r2,r2,255
10003028:	e0fffe17 	ldw	r3,-8(fp)
1000302c:	18806026 	beq	r3,r2,100031b0 <drawBoard+0x1f4>
				continue;
			} else if(i==game->inky.xpos && j==game->inky.ypos) {
10003030:	e0bffb17 	ldw	r2,-20(fp)
10003034:	1080e583 	ldbu	r2,918(r2)
10003038:	10803fcc 	andi	r2,r2,255
1000303c:	e0ffff17 	ldw	r3,-4(fp)
10003040:	1880051e 	bne	r3,r2,10003058 <drawBoard+0x9c>
10003044:	e0bffb17 	ldw	r2,-20(fp)
10003048:	1080e5c3 	ldbu	r2,919(r2)
1000304c:	10803fcc 	andi	r2,r2,255
10003050:	e0fffe17 	ldw	r3,-8(fp)
10003054:	18805826 	beq	r3,r2,100031b8 <drawBoard+0x1fc>
				continue;
			} else if(i==game->clyde.xpos && j==game->clyde.ypos) {
10003058:	e0bffb17 	ldw	r2,-20(fp)
1000305c:	1080e703 	ldbu	r2,924(r2)
10003060:	10803fcc 	andi	r2,r2,255
10003064:	e0ffff17 	ldw	r3,-4(fp)
10003068:	1880051e 	bne	r3,r2,10003080 <drawBoard+0xc4>
1000306c:	e0bffb17 	ldw	r2,-20(fp)
10003070:	1080e743 	ldbu	r2,925(r2)
10003074:	10803fcc 	andi	r2,r2,255
10003078:	e0fffe17 	ldw	r3,-8(fp)
1000307c:	18805026 	beq	r3,r2,100031c0 <drawBoard+0x204>
				continue;
			}
			int curr_tile_xb = j*2+20;
10003080:	e0bffe17 	ldw	r2,-8(fp)
10003084:	10800284 	addi	r2,r2,10
10003088:	1085883a 	add	r2,r2,r2
1000308c:	e0bffd15 	stw	r2,-12(fp)
			int curr_tile_y = i;
10003090:	e0bfff17 	ldw	r2,-4(fp)
10003094:	e0bffc15 	stw	r2,-16(fp)
			switch(game->game_map[i][j]) {
10003098:	e0fffb17 	ldw	r3,-20(fp)
1000309c:	e0bfff17 	ldw	r2,-4(fp)
100030a0:	110003e4 	muli	r4,r2,15
100030a4:	e0bffe17 	ldw	r2,-8(fp)
100030a8:	2085883a 	add	r2,r4,r2
100030ac:	100490ba 	slli	r2,r2,2
100030b0:	1885883a 	add	r2,r3,r2
100030b4:	10800017 	ldw	r2,0(r2)
100030b8:	10c00060 	cmpeqi	r3,r2,1
100030bc:	1800131e 	bne	r3,zero,1000310c <drawBoard+0x150>
100030c0:	10000526 	beq	r2,zero,100030d8 <drawBoard+0x11c>
100030c4:	10c000a0 	cmpeqi	r3,r2,2
100030c8:	18002a1e 	bne	r3,zero,10003174 <drawBoard+0x1b8>
100030cc:	108000e0 	cmpeqi	r2,r2,3
100030d0:	10001b1e 	bne	r2,zero,10003140 <drawBoard+0x184>
100030d4:	00003b06 	br	100031c4 <drawBoard+0x208>
				case WALL: {
					drawTile(curr_tile_xb, curr_tile_y, 2, 0);
100030d8:	000f883a 	mov	r7,zero
100030dc:	01800084 	movi	r6,2
100030e0:	e17ffc17 	ldw	r5,-16(fp)
100030e4:	e13ffd17 	ldw	r4,-12(fp)
100030e8:	00045ac0 	call	100045ac <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
100030ec:	e0bffd17 	ldw	r2,-12(fp)
100030f0:	10800044 	addi	r2,r2,1
100030f4:	000f883a 	mov	r7,zero
100030f8:	01800084 	movi	r6,2
100030fc:	e17ffc17 	ldw	r5,-16(fp)
10003100:	1009883a 	mov	r4,r2
10003104:	00045ac0 	call	100045ac <drawTile>
					break;
10003108:	00002e06 	br	100031c4 <drawBoard+0x208>
				}
				case CANDY: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 129);
1000310c:	01c02044 	movi	r7,129
10003110:	01800044 	movi	r6,1
10003114:	e17ffc17 	ldw	r5,-16(fp)
10003118:	e13ffd17 	ldw	r4,-12(fp)
1000311c:	00045ac0 	call	100045ac <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
10003120:	e0bffd17 	ldw	r2,-12(fp)
10003124:	10800044 	addi	r2,r2,1
10003128:	01c02084 	movi	r7,130
1000312c:	01800044 	movi	r6,1
10003130:	e17ffc17 	ldw	r5,-16(fp)
10003134:	1009883a 	mov	r4,r2
10003138:	00045ac0 	call	100045ac <drawTile>
					break;
1000313c:	00002106 	br	100031c4 <drawBoard+0x208>
				}
				case WAY: {
					drawTile(curr_tile_xb,curr_tile_y, 1, 0);
10003140:	000f883a 	mov	r7,zero
10003144:	01800044 	movi	r6,1
10003148:	e17ffc17 	ldw	r5,-16(fp)
1000314c:	e13ffd17 	ldw	r4,-12(fp)
10003150:	00045ac0 	call	100045ac <drawTile>
					drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
10003154:	e0bffd17 	ldw	r2,-12(fp)
10003158:	10800044 	addi	r2,r2,1
1000315c:	000f883a 	mov	r7,zero
10003160:	01800044 	movi	r6,1
10003164:	e17ffc17 	ldw	r5,-16(fp)
10003168:	1009883a 	mov	r4,r2
1000316c:	00045ac0 	call	100045ac <drawTile>
					break;
10003170:	00001406 	br	100031c4 <drawBoard+0x208>
				}
				case SUPER: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 131);
10003174:	01c020c4 	movi	r7,131
10003178:	01800044 	movi	r6,1
1000317c:	e17ffc17 	ldw	r5,-16(fp)
10003180:	e13ffd17 	ldw	r4,-12(fp)
10003184:	00045ac0 	call	100045ac <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
10003188:	e0bffd17 	ldw	r2,-12(fp)
1000318c:	10800044 	addi	r2,r2,1
10003190:	01c02104 	movi	r7,132
10003194:	01800044 	movi	r6,1
10003198:	e17ffc17 	ldw	r5,-16(fp)
1000319c:	1009883a 	mov	r4,r2
100031a0:	00045ac0 	call	100045ac <drawTile>
					break;
100031a4:	00000706 	br	100031c4 <drawBoard+0x208>
				continue;
100031a8:	0001883a 	nop
100031ac:	00000506 	br	100031c4 <drawBoard+0x208>
				continue;
100031b0:	0001883a 	nop
100031b4:	00000306 	br	100031c4 <drawBoard+0x208>
				continue;
100031b8:	0001883a 	nop
100031bc:	00000106 	br	100031c4 <drawBoard+0x208>
				continue;
100031c0:	0001883a 	nop
		for(int j=0;j<_BOARD_H;j+=1) {
100031c4:	e0bffe17 	ldw	r2,-8(fp)
100031c8:	10800044 	addi	r2,r2,1
100031cc:	e0bffe15 	stw	r2,-8(fp)
100031d0:	e0bffe17 	ldw	r2,-8(fp)
100031d4:	108003d0 	cmplti	r2,r2,15
100031d8:	103f811e 	bne	r2,zero,10002fe0 <drawBoard+0x24>
	for(int i=0;i<_BOARD_W;i+=1) {
100031dc:	e0bfff17 	ldw	r2,-4(fp)
100031e0:	10800044 	addi	r2,r2,1
100031e4:	e0bfff15 	stw	r2,-4(fp)
100031e8:	e0bfff17 	ldw	r2,-4(fp)
100031ec:	108003d0 	cmplti	r2,r2,15
100031f0:	103f791e 	bne	r2,zero,10002fd8 <drawBoard+0x1c>
			}
		}
	}

	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
100031f4:	e0bffb17 	ldw	r2,-20(fp)
100031f8:	1080e2c3 	ldbu	r2,907(r2)
100031fc:	10803fcc 	andi	r2,r2,255
10003200:	10800284 	addi	r2,r2,10
10003204:	1085883a 	add	r2,r2,r2
10003208:	1007883a 	mov	r3,r2
1000320c:	e0bffb17 	ldw	r2,-20(fp)
10003210:	1080e283 	ldbu	r2,906(r2)
10003214:	10803fcc 	andi	r2,r2,255
10003218:	01c000c4 	movi	r7,3
1000321c:	018000c4 	movi	r6,3
10003220:	100b883a 	mov	r5,r2
10003224:	1809883a 	mov	r4,r3
10003228:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
1000322c:	e0bffb17 	ldw	r2,-20(fp)
10003230:	1080e2c3 	ldbu	r2,907(r2)
10003234:	10803fcc 	andi	r2,r2,255
10003238:	1085883a 	add	r2,r2,r2
1000323c:	10c00544 	addi	r3,r2,21
10003240:	e0bffb17 	ldw	r2,-20(fp)
10003244:	1080e283 	ldbu	r2,906(r2)
10003248:	10803fcc 	andi	r2,r2,255
1000324c:	01c00104 	movi	r7,4
10003250:	018000c4 	movi	r6,3
10003254:	100b883a 	mov	r5,r2
10003258:	1809883a 	mov	r4,r3
1000325c:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
10003260:	e0bffb17 	ldw	r2,-20(fp)
10003264:	1080e443 	ldbu	r2,913(r2)
10003268:	10803fcc 	andi	r2,r2,255
1000326c:	10800284 	addi	r2,r2,10
10003270:	1085883a 	add	r2,r2,r2
10003274:	1007883a 	mov	r3,r2
10003278:	e0bffb17 	ldw	r2,-20(fp)
1000327c:	1080e403 	ldbu	r2,912(r2)
10003280:	10803fcc 	andi	r2,r2,255
10003284:	01c000c4 	movi	r7,3
10003288:	01800104 	movi	r6,4
1000328c:	100b883a 	mov	r5,r2
10003290:	1809883a 	mov	r4,r3
10003294:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
10003298:	e0bffb17 	ldw	r2,-20(fp)
1000329c:	1080e443 	ldbu	r2,913(r2)
100032a0:	10803fcc 	andi	r2,r2,255
100032a4:	1085883a 	add	r2,r2,r2
100032a8:	10c00544 	addi	r3,r2,21
100032ac:	e0bffb17 	ldw	r2,-20(fp)
100032b0:	1080e403 	ldbu	r2,912(r2)
100032b4:	10803fcc 	andi	r2,r2,255
100032b8:	01c00104 	movi	r7,4
100032bc:	01800104 	movi	r6,4
100032c0:	100b883a 	mov	r5,r2
100032c4:	1809883a 	mov	r4,r3
100032c8:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
100032cc:	e0bffb17 	ldw	r2,-20(fp)
100032d0:	1080e5c3 	ldbu	r2,919(r2)
100032d4:	10803fcc 	andi	r2,r2,255
100032d8:	10800284 	addi	r2,r2,10
100032dc:	1085883a 	add	r2,r2,r2
100032e0:	1007883a 	mov	r3,r2
100032e4:	e0bffb17 	ldw	r2,-20(fp)
100032e8:	1080e583 	ldbu	r2,918(r2)
100032ec:	10803fcc 	andi	r2,r2,255
100032f0:	01c000c4 	movi	r7,3
100032f4:	01800144 	movi	r6,5
100032f8:	100b883a 	mov	r5,r2
100032fc:	1809883a 	mov	r4,r3
10003300:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
10003304:	e0bffb17 	ldw	r2,-20(fp)
10003308:	1080e5c3 	ldbu	r2,919(r2)
1000330c:	10803fcc 	andi	r2,r2,255
10003310:	1085883a 	add	r2,r2,r2
10003314:	10c00544 	addi	r3,r2,21
10003318:	e0bffb17 	ldw	r2,-20(fp)
1000331c:	1080e583 	ldbu	r2,918(r2)
10003320:	10803fcc 	andi	r2,r2,255
10003324:	01c00104 	movi	r7,4
10003328:	01800144 	movi	r6,5
1000332c:	100b883a 	mov	r5,r2
10003330:	1809883a 	mov	r4,r3
10003334:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
10003338:	e0bffb17 	ldw	r2,-20(fp)
1000333c:	1080e743 	ldbu	r2,925(r2)
10003340:	10803fcc 	andi	r2,r2,255
10003344:	10800284 	addi	r2,r2,10
10003348:	1085883a 	add	r2,r2,r2
1000334c:	1007883a 	mov	r3,r2
10003350:	e0bffb17 	ldw	r2,-20(fp)
10003354:	1080e703 	ldbu	r2,924(r2)
10003358:	10803fcc 	andi	r2,r2,255
1000335c:	01c000c4 	movi	r7,3
10003360:	01800184 	movi	r6,6
10003364:	100b883a 	mov	r5,r2
10003368:	1809883a 	mov	r4,r3
1000336c:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
10003370:	e0bffb17 	ldw	r2,-20(fp)
10003374:	1080e743 	ldbu	r2,925(r2)
10003378:	10803fcc 	andi	r2,r2,255
1000337c:	1085883a 	add	r2,r2,r2
10003380:	10c00544 	addi	r3,r2,21
10003384:	e0bffb17 	ldw	r2,-20(fp)
10003388:	1080e703 	ldbu	r2,924(r2)
1000338c:	10803fcc 	andi	r2,r2,255
10003390:	01c00104 	movi	r7,4
10003394:	01800184 	movi	r6,6
10003398:	100b883a 	mov	r5,r2
1000339c:	1809883a 	mov	r4,r3
100033a0:	00045ac0 	call	100045ac <drawTile>
}
100033a4:	0001883a 	nop
100033a8:	e037883a 	mov	sp,fp
100033ac:	dfc00117 	ldw	ra,4(sp)
100033b0:	df000017 	ldw	fp,0(sp)
100033b4:	dec00204 	addi	sp,sp,8
100033b8:	f800283a 	ret

100033bc <updateBoard>:

// Update board. change mimimal tiles.
void updateBoard(Game* game) {
100033bc:	defffa04 	addi	sp,sp,-24
100033c0:	dfc00515 	stw	ra,20(sp)
100033c4:	df000415 	stw	fp,16(sp)
100033c8:	df000404 	addi	fp,sp,16
100033cc:	e13ffc15 	stw	r4,-16(fp)
	while(hasRemain()) {
100033d0:	00009406 	br	10003624 <updateBoard+0x268>
		TileCollection k = getOne();
100033d4:	0005d280 	call	10005d28 <getOne>
100033d8:	e0bffd8d 	sth	r2,-10(fp)
		if(k.tile_x==game->blinky.xpos && k.tile_y==game->blinky.ypos) {
100033dc:	e0bffd83 	ldbu	r2,-10(fp)
100033e0:	10c03fcc 	andi	r3,r2,255
100033e4:	18c0201c 	xori	r3,r3,128
100033e8:	18ffe004 	addi	r3,r3,-128
100033ec:	e0bffc17 	ldw	r2,-16(fp)
100033f0:	1080e283 	ldbu	r2,906(r2)
100033f4:	10803fcc 	andi	r2,r2,255
100033f8:	1880081e 	bne	r3,r2,1000341c <updateBoard+0x60>
100033fc:	e0bffdc3 	ldbu	r2,-9(fp)
10003400:	10c03fcc 	andi	r3,r2,255
10003404:	18c0201c 	xori	r3,r3,128
10003408:	18ffe004 	addi	r3,r3,-128
1000340c:	e0bffc17 	ldw	r2,-16(fp)
10003410:	1080e2c3 	ldbu	r2,907(r2)
10003414:	10803fcc 	andi	r2,r2,255
10003418:	18807b26 	beq	r3,r2,10003608 <updateBoard+0x24c>
			continue;
		} else if(k.tile_x==game->pinky.xpos && k.tile_y==game->pinky.ypos) {
1000341c:	e0bffd83 	ldbu	r2,-10(fp)
10003420:	10c03fcc 	andi	r3,r2,255
10003424:	18c0201c 	xori	r3,r3,128
10003428:	18ffe004 	addi	r3,r3,-128
1000342c:	e0bffc17 	ldw	r2,-16(fp)
10003430:	1080e403 	ldbu	r2,912(r2)
10003434:	10803fcc 	andi	r2,r2,255
10003438:	1880081e 	bne	r3,r2,1000345c <updateBoard+0xa0>
1000343c:	e0bffdc3 	ldbu	r2,-9(fp)
10003440:	10c03fcc 	andi	r3,r2,255
10003444:	18c0201c 	xori	r3,r3,128
10003448:	18ffe004 	addi	r3,r3,-128
1000344c:	e0bffc17 	ldw	r2,-16(fp)
10003450:	1080e443 	ldbu	r2,913(r2)
10003454:	10803fcc 	andi	r2,r2,255
10003458:	18806d26 	beq	r3,r2,10003610 <updateBoard+0x254>
			continue;
		} else if(k.tile_x==game->inky.xpos && k.tile_y==game->inky.ypos) {
1000345c:	e0bffd83 	ldbu	r2,-10(fp)
10003460:	10c03fcc 	andi	r3,r2,255
10003464:	18c0201c 	xori	r3,r3,128
10003468:	18ffe004 	addi	r3,r3,-128
1000346c:	e0bffc17 	ldw	r2,-16(fp)
10003470:	1080e583 	ldbu	r2,918(r2)
10003474:	10803fcc 	andi	r2,r2,255
10003478:	1880081e 	bne	r3,r2,1000349c <updateBoard+0xe0>
1000347c:	e0bffdc3 	ldbu	r2,-9(fp)
10003480:	10c03fcc 	andi	r3,r2,255
10003484:	18c0201c 	xori	r3,r3,128
10003488:	18ffe004 	addi	r3,r3,-128
1000348c:	e0bffc17 	ldw	r2,-16(fp)
10003490:	1080e5c3 	ldbu	r2,919(r2)
10003494:	10803fcc 	andi	r2,r2,255
10003498:	18805f26 	beq	r3,r2,10003618 <updateBoard+0x25c>
			continue;
		} else if(k.tile_x==game->clyde.xpos && k.tile_y==game->clyde.ypos) {
1000349c:	e0bffd83 	ldbu	r2,-10(fp)
100034a0:	10c03fcc 	andi	r3,r2,255
100034a4:	18c0201c 	xori	r3,r3,128
100034a8:	18ffe004 	addi	r3,r3,-128
100034ac:	e0bffc17 	ldw	r2,-16(fp)
100034b0:	1080e703 	ldbu	r2,924(r2)
100034b4:	10803fcc 	andi	r2,r2,255
100034b8:	1880081e 	bne	r3,r2,100034dc <updateBoard+0x120>
100034bc:	e0bffdc3 	ldbu	r2,-9(fp)
100034c0:	10c03fcc 	andi	r3,r2,255
100034c4:	18c0201c 	xori	r3,r3,128
100034c8:	18ffe004 	addi	r3,r3,-128
100034cc:	e0bffc17 	ldw	r2,-16(fp)
100034d0:	1080e743 	ldbu	r2,925(r2)
100034d4:	10803fcc 	andi	r2,r2,255
100034d8:	18805126 	beq	r3,r2,10003620 <updateBoard+0x264>
			continue;
		}
		switch(game->game_map[k.tile_x][k.tile_y]) {
100034dc:	e0bffd83 	ldbu	r2,-10(fp)
100034e0:	11003fcc 	andi	r4,r2,255
100034e4:	2100201c 	xori	r4,r4,128
100034e8:	213fe004 	addi	r4,r4,-128
100034ec:	e0bffdc3 	ldbu	r2,-9(fp)
100034f0:	10803fcc 	andi	r2,r2,255
100034f4:	1080201c 	xori	r2,r2,128
100034f8:	10bfe004 	addi	r2,r2,-128
100034fc:	e0fffc17 	ldw	r3,-16(fp)
10003500:	210003e4 	muli	r4,r4,15
10003504:	2085883a 	add	r2,r4,r2
10003508:	100490ba 	slli	r2,r2,2
1000350c:	1885883a 	add	r2,r3,r2
10003510:	10800017 	ldw	r2,0(r2)
10003514:	10c00060 	cmpeqi	r3,r2,1
10003518:	1800131e 	bne	r3,zero,10003568 <updateBoard+0x1ac>
1000351c:	10000526 	beq	r2,zero,10003534 <updateBoard+0x178>
10003520:	10c000a0 	cmpeqi	r3,r2,2
10003524:	18002a1e 	bne	r3,zero,100035d0 <updateBoard+0x214>
10003528:	108000e0 	cmpeqi	r2,r2,3
1000352c:	10001b1e 	bne	r2,zero,1000359c <updateBoard+0x1e0>
10003530:	00003c06 	br	10003624 <updateBoard+0x268>
			int curr_tile_xb = k.tile_y*2+20;
			int curr_tile_y = k.tile_x;
			case WALL: {
				drawTile(curr_tile_xb, curr_tile_y, 2, 0);
10003534:	000f883a 	mov	r7,zero
10003538:	01800084 	movi	r6,2
1000353c:	e17ffe17 	ldw	r5,-8(fp)
10003540:	e13fff17 	ldw	r4,-4(fp)
10003544:	00045ac0 	call	100045ac <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
10003548:	e0bfff17 	ldw	r2,-4(fp)
1000354c:	10800044 	addi	r2,r2,1
10003550:	000f883a 	mov	r7,zero
10003554:	01800084 	movi	r6,2
10003558:	e17ffe17 	ldw	r5,-8(fp)
1000355c:	1009883a 	mov	r4,r2
10003560:	00045ac0 	call	100045ac <drawTile>
				break;
10003564:	00002f06 	br	10003624 <updateBoard+0x268>
			}
			case CANDY: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 129);
10003568:	01c02044 	movi	r7,129
1000356c:	01800044 	movi	r6,1
10003570:	e17ffe17 	ldw	r5,-8(fp)
10003574:	e13fff17 	ldw	r4,-4(fp)
10003578:	00045ac0 	call	100045ac <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
1000357c:	e0bfff17 	ldw	r2,-4(fp)
10003580:	10800044 	addi	r2,r2,1
10003584:	01c02084 	movi	r7,130
10003588:	01800044 	movi	r6,1
1000358c:	e17ffe17 	ldw	r5,-8(fp)
10003590:	1009883a 	mov	r4,r2
10003594:	00045ac0 	call	100045ac <drawTile>
				break;
10003598:	00002206 	br	10003624 <updateBoard+0x268>
			}
			case WAY: {
				drawTile(curr_tile_xb,curr_tile_y, 1, 0);
1000359c:	000f883a 	mov	r7,zero
100035a0:	01800044 	movi	r6,1
100035a4:	e17ffe17 	ldw	r5,-8(fp)
100035a8:	e13fff17 	ldw	r4,-4(fp)
100035ac:	00045ac0 	call	100045ac <drawTile>
				drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
100035b0:	e0bfff17 	ldw	r2,-4(fp)
100035b4:	10800044 	addi	r2,r2,1
100035b8:	000f883a 	mov	r7,zero
100035bc:	01800044 	movi	r6,1
100035c0:	e17ffe17 	ldw	r5,-8(fp)
100035c4:	1009883a 	mov	r4,r2
100035c8:	00045ac0 	call	100045ac <drawTile>
				break;
100035cc:	00001506 	br	10003624 <updateBoard+0x268>
			}
			case SUPER: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 131);
100035d0:	01c020c4 	movi	r7,131
100035d4:	01800044 	movi	r6,1
100035d8:	e17ffe17 	ldw	r5,-8(fp)
100035dc:	e13fff17 	ldw	r4,-4(fp)
100035e0:	00045ac0 	call	100045ac <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
100035e4:	e0bfff17 	ldw	r2,-4(fp)
100035e8:	10800044 	addi	r2,r2,1
100035ec:	01c02104 	movi	r7,132
100035f0:	01800044 	movi	r6,1
100035f4:	e17ffe17 	ldw	r5,-8(fp)
100035f8:	1009883a 	mov	r4,r2
100035fc:	00045ac0 	call	100045ac <drawTile>
				break;
10003600:	0001883a 	nop
10003604:	00000706 	br	10003624 <updateBoard+0x268>
			continue;
10003608:	0001883a 	nop
1000360c:	00000506 	br	10003624 <updateBoard+0x268>
			continue;
10003610:	0001883a 	nop
10003614:	00000306 	br	10003624 <updateBoard+0x268>
			continue;
10003618:	0001883a 	nop
1000361c:	00000106 	br	10003624 <updateBoard+0x268>
			continue;
10003620:	0001883a 	nop
	while(hasRemain()) {
10003624:	0005e240 	call	10005e24 <hasRemain>
10003628:	10803fcc 	andi	r2,r2,255
1000362c:	103f691e 	bne	r2,zero,100033d4 <updateBoard+0x18>
			}
		}
	}

	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
10003630:	e0bffc17 	ldw	r2,-16(fp)
10003634:	1080e2c3 	ldbu	r2,907(r2)
10003638:	10803fcc 	andi	r2,r2,255
1000363c:	10800284 	addi	r2,r2,10
10003640:	1085883a 	add	r2,r2,r2
10003644:	1007883a 	mov	r3,r2
10003648:	e0bffc17 	ldw	r2,-16(fp)
1000364c:	1080e283 	ldbu	r2,906(r2)
10003650:	10803fcc 	andi	r2,r2,255
10003654:	01c000c4 	movi	r7,3
10003658:	018000c4 	movi	r6,3
1000365c:	100b883a 	mov	r5,r2
10003660:	1809883a 	mov	r4,r3
10003664:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
10003668:	e0bffc17 	ldw	r2,-16(fp)
1000366c:	1080e2c3 	ldbu	r2,907(r2)
10003670:	10803fcc 	andi	r2,r2,255
10003674:	1085883a 	add	r2,r2,r2
10003678:	10c00544 	addi	r3,r2,21
1000367c:	e0bffc17 	ldw	r2,-16(fp)
10003680:	1080e283 	ldbu	r2,906(r2)
10003684:	10803fcc 	andi	r2,r2,255
10003688:	01c00104 	movi	r7,4
1000368c:	018000c4 	movi	r6,3
10003690:	100b883a 	mov	r5,r2
10003694:	1809883a 	mov	r4,r3
10003698:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
1000369c:	e0bffc17 	ldw	r2,-16(fp)
100036a0:	1080e443 	ldbu	r2,913(r2)
100036a4:	10803fcc 	andi	r2,r2,255
100036a8:	10800284 	addi	r2,r2,10
100036ac:	1085883a 	add	r2,r2,r2
100036b0:	1007883a 	mov	r3,r2
100036b4:	e0bffc17 	ldw	r2,-16(fp)
100036b8:	1080e403 	ldbu	r2,912(r2)
100036bc:	10803fcc 	andi	r2,r2,255
100036c0:	01c000c4 	movi	r7,3
100036c4:	01800104 	movi	r6,4
100036c8:	100b883a 	mov	r5,r2
100036cc:	1809883a 	mov	r4,r3
100036d0:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
100036d4:	e0bffc17 	ldw	r2,-16(fp)
100036d8:	1080e443 	ldbu	r2,913(r2)
100036dc:	10803fcc 	andi	r2,r2,255
100036e0:	1085883a 	add	r2,r2,r2
100036e4:	10c00544 	addi	r3,r2,21
100036e8:	e0bffc17 	ldw	r2,-16(fp)
100036ec:	1080e403 	ldbu	r2,912(r2)
100036f0:	10803fcc 	andi	r2,r2,255
100036f4:	01c00104 	movi	r7,4
100036f8:	01800104 	movi	r6,4
100036fc:	100b883a 	mov	r5,r2
10003700:	1809883a 	mov	r4,r3
10003704:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
10003708:	e0bffc17 	ldw	r2,-16(fp)
1000370c:	1080e5c3 	ldbu	r2,919(r2)
10003710:	10803fcc 	andi	r2,r2,255
10003714:	10800284 	addi	r2,r2,10
10003718:	1085883a 	add	r2,r2,r2
1000371c:	1007883a 	mov	r3,r2
10003720:	e0bffc17 	ldw	r2,-16(fp)
10003724:	1080e583 	ldbu	r2,918(r2)
10003728:	10803fcc 	andi	r2,r2,255
1000372c:	01c000c4 	movi	r7,3
10003730:	01800144 	movi	r6,5
10003734:	100b883a 	mov	r5,r2
10003738:	1809883a 	mov	r4,r3
1000373c:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
10003740:	e0bffc17 	ldw	r2,-16(fp)
10003744:	1080e5c3 	ldbu	r2,919(r2)
10003748:	10803fcc 	andi	r2,r2,255
1000374c:	1085883a 	add	r2,r2,r2
10003750:	10c00544 	addi	r3,r2,21
10003754:	e0bffc17 	ldw	r2,-16(fp)
10003758:	1080e583 	ldbu	r2,918(r2)
1000375c:	10803fcc 	andi	r2,r2,255
10003760:	01c00104 	movi	r7,4
10003764:	01800144 	movi	r6,5
10003768:	100b883a 	mov	r5,r2
1000376c:	1809883a 	mov	r4,r3
10003770:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
10003774:	e0bffc17 	ldw	r2,-16(fp)
10003778:	1080e743 	ldbu	r2,925(r2)
1000377c:	10803fcc 	andi	r2,r2,255
10003780:	10800284 	addi	r2,r2,10
10003784:	1085883a 	add	r2,r2,r2
10003788:	1007883a 	mov	r3,r2
1000378c:	e0bffc17 	ldw	r2,-16(fp)
10003790:	1080e703 	ldbu	r2,924(r2)
10003794:	10803fcc 	andi	r2,r2,255
10003798:	01c000c4 	movi	r7,3
1000379c:	01800184 	movi	r6,6
100037a0:	100b883a 	mov	r5,r2
100037a4:	1809883a 	mov	r4,r3
100037a8:	00045ac0 	call	100045ac <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
100037ac:	e0bffc17 	ldw	r2,-16(fp)
100037b0:	1080e743 	ldbu	r2,925(r2)
100037b4:	10803fcc 	andi	r2,r2,255
100037b8:	1085883a 	add	r2,r2,r2
100037bc:	10c00544 	addi	r3,r2,21
100037c0:	e0bffc17 	ldw	r2,-16(fp)
100037c4:	1080e703 	ldbu	r2,924(r2)
100037c8:	10803fcc 	andi	r2,r2,255
100037cc:	01c00104 	movi	r7,4
100037d0:	01800184 	movi	r6,6
100037d4:	100b883a 	mov	r5,r2
100037d8:	1809883a 	mov	r4,r3
100037dc:	00045ac0 	call	100045ac <drawTile>

	clearQueue();
100037e0:	0005e800 	call	10005e80 <clearQueue>
}
100037e4:	0001883a 	nop
100037e8:	e037883a 	mov	sp,fp
100037ec:	dfc00117 	ldw	ra,4(sp)
100037f0:	df000017 	ldw	fp,0(sp)
100037f4:	dec00204 	addi	sp,sp,8
100037f8:	f800283a 	ret

100037fc <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
100037fc:	deff0e04 	addi	sp,sp,-968
10003800:	dfc0f115 	stw	ra,964(sp)
10003804:	df00f015 	stw	fp,960(sp)
10003808:	df00f004 	addi	fp,sp,960
	IO_init();
1000380c:	00011b80 	call	100011b8 <IO_init>
	Game mainGame;
	init_game(&mainGame);
10003810:	e0bf1004 	addi	r2,fp,-960
10003814:	1009883a 	mov	r4,r2
10003818:	000131c0 	call	1000131c <init_game>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
1000381c:	e03ffe8d 	sth	zero,-6(fp)
	int keycode = 0;
10003820:	e03ffd15 	stw	zero,-12(fp)
	alt_u8 toggle = 0;
10003824:	e03fff45 	stb	zero,-3(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
10003828:	010400b4 	movhi	r4,4098
1000382c:	2112a904 	addi	r4,r4,19108
10003830:	0015bc40 	call	10015bc4 <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	UsbSoftReset();
10003834:	0004b840 	call	10004b84 <UsbSoftReset>
	drawBoard(&mainGame);
10003838:	e0bf1004 	addi	r2,fp,-960
1000383c:	1009883a 	mov	r4,r2
10003840:	0002fbc0 	call	10002fbc <drawBoard>

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10003844:	000b883a 	mov	r5,zero
10003848:	01005104 	movi	r4,324
1000384c:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10003850:	017fffd4 	movui	r5,65535
10003854:	01302414 	movui	r4,49296
10003858:	0004ae40 	call	10004ae4 <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
1000385c:	01409604 	movi	r5,600
10003860:	01006d04 	movi	r4,436
10003864:	0004ae40 	call	10004ae4 <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
10003868:	00811004 	movi	r2,1088
1000386c:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
10003870:	e0bfff8b 	ldhu	r2,-2(fp)
10003874:	100b883a 	mov	r5,r2
10003878:	01005084 	movi	r4,322
1000387c:	0004ae40 	call	10004ae4 <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
10003880:	00808404 	movi	r2,528
10003884:	e0bffc8d 	sth	r2,-14(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
10003888:	e0bffc8b 	ldhu	r2,-14(fp)
1000388c:	100b883a 	mov	r5,r2
10003890:	01302314 	movui	r4,49292
10003894:	0004ae40 	call	10004ae4 <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
10003898:	000b883a 	mov	r5,zero
1000389c:	01007104 	movi	r4,452
100038a0:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100038a4:	000b883a 	mov	r5,zero
100038a8:	01007184 	movi	r4,454
100038ac:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100038b0:	000b883a 	mov	r5,zero
100038b4:	01007204 	movi	r4,456
100038b8:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100038bc:	000b883a 	mov	r5,zero
100038c0:	01007284 	movi	r4,458
100038c4:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
100038c8:	000b883a 	mov	r5,zero
100038cc:	01007304 	movi	r4,460
100038d0:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
100038d4:	000b883a 	mov	r5,zero
100038d8:	01007384 	movi	r4,462
100038dc:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
100038e0:	000b883a 	mov	r5,zero
100038e4:	01007404 	movi	r4,464
100038e8:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
100038ec:	000b883a 	mov	r5,zero
100038f0:	01007484 	movi	r4,466
100038f4:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
100038f8:	000b883a 	mov	r5,zero
100038fc:	01007504 	movi	r4,468
10003900:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10003904:	000b883a 	mov	r5,zero
10003908:	01007584 	movi	r4,470
1000390c:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10003910:	000b883a 	mov	r5,zero
10003914:	01007604 	movi	r4,472
10003918:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
1000391c:	000b883a 	mov	r5,zero
10003920:	01007684 	movi	r4,474
10003924:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10003928:	000b883a 	mov	r5,zero
1000392c:	01007704 	movi	r4,476
10003930:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10003934:	000b883a 	mov	r5,zero
10003938:	01007784 	movi	r4,478
1000393c:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
10003940:	01401c84 	movi	r5,114
10003944:	01007084 	movi	r4,450
10003948:	0004ae40 	call	10004ae4 <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
1000394c:	01738054 	movui	r5,52737
10003950:	01000044 	movi	r4,1
10003954:	00012400 	call	10001240 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
10003958:	0001883a 	nop
1000395c:	010000c4 	movi	r4,3
10003960:	00012b40 	call	100012b4 <IO_read>
10003964:	10bfffcc 	andi	r2,r2,65535
10003968:	103ffc26 	beq	r2,zero,1000395c <main+0x160>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
1000396c:	00000806 	br	10003990 <main+0x194>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
10003970:	01000044 	movi	r4,1
10003974:	00012b40 	call	100012b4 <IO_read>
10003978:	10bfffcc 	andi	r2,r2,65535
1000397c:	100b883a 	mov	r5,r2
10003980:	010400b4 	movhi	r4,4098
10003984:	2112af04 	addi	r4,r4,19132
10003988:	0015aa00 	call	10015aa0 <printf>
		goto USB_HOT_PLUG;
1000398c:	003fa906 	br	10003834 <main+0x38>
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10003990:	01000044 	movi	r4,1
10003994:	00012b40 	call	100012b4 <IO_read>
10003998:	10bfffcc 	andi	r2,r2,65535
1000399c:	1083fb58 	cmpnei	r2,r2,4077
100039a0:	103ff31e 	bne	r2,zero,10003970 <main+0x174>
	}
	// STEP 1b end

	printf("STEP 1 Complete");
100039a4:	010400b4 	movhi	r4,4098
100039a8:	2112b804 	addi	r4,r4,19168
100039ac:	0015aa00 	call	10015aa0 <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
100039b0:	01401d04 	movi	r5,116
100039b4:	01007084 	movi	r4,450
100039b8:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
100039bc:	01400f04 	movi	r5,60
100039c0:	01007104 	movi	r4,452
100039c4:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100039c8:	000b883a 	mov	r5,zero
100039cc:	01007184 	movi	r4,454
100039d0:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100039d4:	000b883a 	mov	r5,zero
100039d8:	01007204 	movi	r4,456
100039dc:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100039e0:	000b883a 	mov	r5,zero
100039e4:	01007284 	movi	r4,458
100039e8:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
100039ec:	000b883a 	mov	r5,zero
100039f0:	01007304 	movi	r4,460
100039f4:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
100039f8:	000b883a 	mov	r5,zero
100039fc:	01007384 	movi	r4,462
10003a00:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10003a04:	000b883a 	mov	r5,zero
10003a08:	01007404 	movi	r4,464
10003a0c:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
10003a10:	000b883a 	mov	r5,zero
10003a14:	01007484 	movi	r4,466
10003a18:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10003a1c:	000b883a 	mov	r5,zero
10003a20:	01007504 	movi	r4,468
10003a24:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10003a28:	000b883a 	mov	r5,zero
10003a2c:	01007584 	movi	r4,470
10003a30:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10003a34:	000b883a 	mov	r5,zero
10003a38:	01007604 	movi	r4,472
10003a3c:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10003a40:	000b883a 	mov	r5,zero
10003a44:	01007684 	movi	r4,474
10003a48:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10003a4c:	000b883a 	mov	r5,zero
10003a50:	01007704 	movi	r4,476
10003a54:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10003a58:	000b883a 	mov	r5,zero
10003a5c:	01007784 	movi	r4,478
10003a60:	0004ae40 	call	10004ae4 <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
10003a64:	01738054 	movui	r5,52737
10003a68:	01000044 	movi	r4,1
10003a6c:	00012400 	call	10001240 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10003a70:	0001883a 	nop
10003a74:	01000044 	movi	r4,1
10003a78:	00012b40 	call	100012b4 <IO_read>
10003a7c:	10bfffcc 	andi	r2,r2,65535
10003a80:	1083fb58 	cmpnei	r2,r2,4077
10003a84:	10000826 	beq	r2,zero,10003aa8 <main+0x2ac>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
10003a88:	01000044 	movi	r4,1
10003a8c:	00012b40 	call	100012b4 <IO_read>
10003a90:	10bfffcc 	andi	r2,r2,65535
10003a94:	100b883a 	mov	r5,r2
10003a98:	010400b4 	movhi	r4,4098
10003a9c:	2112af04 	addi	r4,r4,19132
10003aa0:	0015aa00 	call	10015aa0 <printf>
		goto USB_HOT_PLUG;
10003aa4:	003f6306 	br	10003834 <main+0x38>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
10003aa8:	00b02284 	movi	r2,-16246
10003aac:	d0a95d0d 	sth	r2,-23180(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
10003ab0:	008c0004 	movi	r2,12288
10003ab4:	d0a95d8d 	sth	r2,-23178(gp)
	fs_device = A_DP_STAT;
10003ab8:	00880004 	movi	r2,8192
10003abc:	e0bffe8d 	sth	r2,-6(fp)
	usb_ctl_val = UsbRead(ctl_reg);
10003ac0:	d0a95d0b 	ldhu	r2,-23180(gp)
10003ac4:	10bfffcc 	andi	r2,r2,65535
10003ac8:	1009883a 	mov	r4,r2
10003acc:	0004b400 	call	10004b40 <UsbRead>
10003ad0:	e0bfff8d 	sth	r2,-2(fp)

	if (!(usb_ctl_val & no_device))
10003ad4:	d0a95d8b 	ldhu	r2,-23178(gp)
10003ad8:	e0ffff8b 	ldhu	r3,-2(fp)
10003adc:	1884703a 	and	r2,r3,r2
10003ae0:	10bfffcc 	andi	r2,r2,65535
10003ae4:	1000351e 	bne	r2,zero,10003bbc <main+0x3c0>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10003ae8:	e03fff05 	stb	zero,-4(fp)
10003aec:	00000f06 	br	10003b2c <main+0x330>
		{
			usleep(5*1000);
10003af0:	0104e204 	movi	r4,5000
10003af4:	00227480 	call	10022748 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10003af8:	d0a95d0b 	ldhu	r2,-23180(gp)
10003afc:	10bfffcc 	andi	r2,r2,65535
10003b00:	1009883a 	mov	r4,r2
10003b04:	0004b400 	call	10004b40 <UsbRead>
10003b08:	e0bfff8d 	sth	r2,-2(fp)
			if(usb_ctl_val & no_device) break;
10003b0c:	d0a95d8b 	ldhu	r2,-23178(gp)
10003b10:	e0ffff8b 	ldhu	r3,-2(fp)
10003b14:	1884703a 	and	r2,r3,r2
10003b18:	10bfffcc 	andi	r2,r2,65535
10003b1c:	1000071e 	bne	r2,zero,10003b3c <main+0x340>
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10003b20:	e0bfff03 	ldbu	r2,-4(fp)
10003b24:	10800044 	addi	r2,r2,1
10003b28:	e0bfff05 	stb	r2,-4(fp)
10003b2c:	e0bfff03 	ldbu	r2,-4(fp)
10003b30:	10800170 	cmpltui	r2,r2,5
10003b34:	103fee1e 	bne	r2,zero,10003af0 <main+0x2f4>
10003b38:	00000106 	br	10003b40 <main+0x344>
			if(usb_ctl_val & no_device) break;
10003b3c:	0001883a 	nop
		}
		if(!(usb_ctl_val & no_device))
10003b40:	d0a95d8b 	ldhu	r2,-23178(gp)
10003b44:	e0ffff8b 	ldhu	r3,-2(fp)
10003b48:	1884703a 	and	r2,r3,r2
10003b4c:	10bfffcc 	andi	r2,r2,65535
10003b50:	1000261e 	bne	r2,zero,10003bec <main+0x3f0>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
10003b54:	010400b4 	movhi	r4,4098
10003b58:	2112bc04 	addi	r4,r4,19184
10003b5c:	0015bc40 	call	10015bc4 <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
10003b60:	010400b4 	movhi	r4,4098
10003b64:	2112c604 	addi	r4,r4,19224
10003b68:	0015bc40 	call	10015bc4 <puts>
			while (!(usb_ctl_val & no_device))
10003b6c:	00000d06 	br	10003ba4 <main+0x3a8>
			{
				usb_ctl_val = UsbRead(ctl_reg);
10003b70:	d0a95d0b 	ldhu	r2,-23180(gp)
10003b74:	10bfffcc 	andi	r2,r2,65535
10003b78:	1009883a 	mov	r4,r2
10003b7c:	0004b400 	call	10004b40 <UsbRead>
10003b80:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device)
10003b84:	d0a95d8b 	ldhu	r2,-23178(gp)
10003b88:	e0ffff8b 	ldhu	r3,-2(fp)
10003b8c:	1884703a 	and	r2,r3,r2
10003b90:	10bfffcc 	andi	r2,r2,65535
10003b94:	10000126 	beq	r2,zero,10003b9c <main+0x3a0>
					goto USB_HOT_PLUG;
10003b98:	003f2606 	br	10003834 <main+0x38>

				usleep(2000);
10003b9c:	0101f404 	movi	r4,2000
10003ba0:	00227480 	call	10022748 <usleep>
			while (!(usb_ctl_val & no_device))
10003ba4:	d0a95d8b 	ldhu	r2,-23178(gp)
10003ba8:	e0ffff8b 	ldhu	r3,-2(fp)
10003bac:	1884703a 	and	r2,r3,r2
10003bb0:	10bfffcc 	andi	r2,r2,65535
10003bb4:	103fee26 	beq	r2,zero,10003b70 <main+0x374>
10003bb8:	00000c06 	br	10003bec <main+0x3f0>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
10003bbc:	e0ffff8b 	ldhu	r3,-2(fp)
10003bc0:	e0bffe8b 	ldhu	r2,-6(fp)
10003bc4:	1884703a 	and	r2,r3,r2
10003bc8:	10bfffcc 	andi	r2,r2,65535
10003bcc:	10000426 	beq	r2,zero,10003be0 <main+0x3e4>
		{
			printf("[INFO]: full speed device\n");
10003bd0:	010400b4 	movhi	r4,4098
10003bd4:	2112d204 	addi	r4,r4,19272
10003bd8:	0015bc40 	call	10015bc4 <puts>
10003bdc:	00000306 	br	10003bec <main+0x3f0>
		}
		else
		{
			printf("[INFO]: low speed device\n");
10003be0:	010400b4 	movhi	r4,4098
10003be4:	2112d904 	addi	r4,r4,19300
10003be8:	0015bc40 	call	10015bc4 <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
10003bec:	0004c380 	call	10004c38 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003bf0:	00000306 	br	10003c00 <main+0x404>
	{
		UsbSetAddress();
10003bf4:	0004c380 	call	10004c38 <UsbSetAddress>
		usleep(10*1000);
10003bf8:	0109c404 	movi	r4,10000
10003bfc:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003c00:	010000c4 	movi	r4,3
10003c04:	00012b40 	call	100012b4 <IO_read>
10003c08:	10bfffcc 	andi	r2,r2,65535
10003c0c:	1080040c 	andi	r2,r2,16
10003c10:	103ff826 	beq	r2,zero,10003bf4 <main+0x3f8>
	}

	UsbWaitTDListDone();
10003c14:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
10003c18:	01414184 	movi	r5,1286
10003c1c:	01000084 	movi	r4,2
10003c20:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003c24:	0009883a 	mov	r4,zero
10003c28:	00012b40 	call	100012b4 <IO_read>
10003c2c:	10bfffcc 	andi	r2,r2,65535
10003c30:	100b883a 	mov	r5,r2
10003c34:	010400b4 	movhi	r4,4098
10003c38:	2112e004 	addi	r4,r4,19328
10003c3c:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508); // n
10003c40:	01414204 	movi	r5,1288
10003c44:	01000084 	movi	r4,2
10003c48:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003c4c:	0009883a 	mov	r4,zero
10003c50:	00012b40 	call	100012b4 <IO_read>
10003c54:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
10003c58:	e0bfff8b 	ldhu	r2,-2(fp)
10003c5c:	100b883a 	mov	r5,r2
10003c60:	010400b4 	movhi	r4,4098
10003c64:	2112eb04 	addi	r4,r4,19372
10003c68:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03) // retries occurred
10003c6c:	e0bfff8b 	ldhu	r2,-2(fp)
10003c70:	108000e0 	cmpeqi	r2,r2,3
10003c74:	1000031e 	bne	r2,zero,10003c84 <main+0x488>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003c78:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
10003c7c:	e0bfff8d 	sth	r2,-2(fp)

		goto USB_HOT_PLUG;
10003c80:	003eec06 	br	10003834 <main+0x38>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
10003c84:	010400b4 	movhi	r4,4098
10003c88:	2112f704 	addi	r4,r4,19420
10003c8c:	0015bc40 	call	10015bc4 <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
10003c90:	0004d380 	call	10004d38 <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003c94:	00000306 	br	10003ca4 <main+0x4a8>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
10003c98:	0004d380 	call	10004d38 <UsbGetDeviceDesc1>
		usleep(10*1000);
10003c9c:	0109c404 	movi	r4,10000
10003ca0:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003ca4:	010000c4 	movi	r4,3
10003ca8:	00012b40 	call	100012b4 <IO_read>
10003cac:	10bfffcc 	andi	r2,r2,65535
10003cb0:	1080040c 	andi	r2,r2,16
10003cb4:	103ff826 	beq	r2,zero,10003c98 <main+0x49c>
	}

	UsbWaitTDListDone();
10003cb8:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003cbc:	01414184 	movi	r5,1286
10003cc0:	01000084 	movi	r4,2
10003cc4:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003cc8:	0009883a 	mov	r4,zero
10003ccc:	00012b40 	call	100012b4 <IO_read>
10003cd0:	10bfffcc 	andi	r2,r2,65535
10003cd4:	100b883a 	mov	r5,r2
10003cd8:	010400b4 	movhi	r4,4098
10003cdc:	21130604 	addi	r4,r4,19480
10003ce0:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10003ce4:	01414204 	movi	r5,1288
10003ce8:	01000084 	movi	r4,2
10003cec:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003cf0:	0009883a 	mov	r4,zero
10003cf4:	00012b40 	call	100012b4 <IO_read>
10003cf8:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
10003cfc:	e0bfff8b 	ldhu	r2,-2(fp)
10003d00:	100b883a 	mov	r5,r2
10003d04:	010400b4 	movhi	r4,4098
10003d08:	21131104 	addi	r4,r4,19524
10003d0c:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
10003d10:	e0bfff8b 	ldhu	r2,-2(fp)
10003d14:	108000e0 	cmpeqi	r2,r2,3
10003d18:	1000061e 	bne	r2,zero,10003d34 <main+0x538>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003d1c:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
10003d20:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003d24:	010400b4 	movhi	r4,4098
10003d28:	21131d04 	addi	r4,r4,19572
10003d2c:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
10003d30:	003ec006 	br	10003834 <main+0x38>
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
10003d34:	010400b4 	movhi	r4,4098
10003d38:	21132604 	addi	r4,r4,19608
10003d3c:	0015bc40 	call	10015bc4 <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
10003d40:	0004e800 	call	10004e80 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003d44:	00000306 	br	10003d54 <main+0x558>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
10003d48:	0004e800 	call	10004e80 <UsbGetDeviceDesc2>
		usleep(10*1000);
10003d4c:	0109c404 	movi	r4,10000
10003d50:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003d54:	010000c4 	movi	r4,3
10003d58:	00012b40 	call	100012b4 <IO_read>
10003d5c:	10bfffcc 	andi	r2,r2,65535
10003d60:	1080040c 	andi	r2,r2,16
10003d64:	103ff826 	beq	r2,zero,10003d48 <main+0x54c>
	}

	UsbWaitTDListDone();
10003d68:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003d6c:	01414184 	movi	r5,1286
10003d70:	01000084 	movi	r4,2
10003d74:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003d78:	0009883a 	mov	r4,zero
10003d7c:	00012b40 	call	100012b4 <IO_read>
10003d80:	10bfffcc 	andi	r2,r2,65535
10003d84:	100b883a 	mov	r5,r2
10003d88:	010400b4 	movhi	r4,4098
10003d8c:	21130604 	addi	r4,r4,19480
10003d90:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10003d94:	01414204 	movi	r5,1288
10003d98:	01000084 	movi	r4,2
10003d9c:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003da0:	0009883a 	mov	r4,zero
10003da4:	00012b40 	call	100012b4 <IO_read>
10003da8:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
10003dac:	e0bfff8b 	ldhu	r2,-2(fp)
10003db0:	100b883a 	mov	r5,r2
10003db4:	010400b4 	movhi	r4,4098
10003db8:	21131104 	addi	r4,r4,19524
10003dbc:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
10003dc0:	e0bfff8b 	ldhu	r2,-2(fp)
10003dc4:	108000e0 	cmpeqi	r2,r2,3
10003dc8:	1000061e 	bne	r2,zero,10003de4 <main+0x5e8>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003dcc:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
10003dd0:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003dd4:	010400b4 	movhi	r4,4098
10003dd8:	21131d04 	addi	r4,r4,19572
10003ddc:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
10003de0:	003e9406 	br	10003834 <main+0x38>
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
10003de4:	010400b4 	movhi	r4,4098
10003de8:	21133a04 	addi	r4,r4,19688
10003dec:	0015bc40 	call	10015bc4 <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
10003df0:	00050580 	call	10005058 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003df4:	00000306 	br	10003e04 <main+0x608>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
10003df8:	00050580 	call	10005058 <UsbGetConfigDesc1>
		usleep(10*1000);
10003dfc:	0109c404 	movi	r4,10000
10003e00:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003e04:	010000c4 	movi	r4,3
10003e08:	00012b40 	call	100012b4 <IO_read>
10003e0c:	10bfffcc 	andi	r2,r2,65535
10003e10:	1080040c 	andi	r2,r2,16
10003e14:	103ff826 	beq	r2,zero,10003df8 <main+0x5fc>
	}

	UsbWaitTDListDone();
10003e18:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003e1c:	01414184 	movi	r5,1286
10003e20:	01000084 	movi	r4,2
10003e24:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003e28:	0009883a 	mov	r4,zero
10003e2c:	00012b40 	call	100012b4 <IO_read>
10003e30:	10bfffcc 	andi	r2,r2,65535
10003e34:	100b883a 	mov	r5,r2
10003e38:	010400b4 	movhi	r4,4098
10003e3c:	21134c04 	addi	r4,r4,19760
10003e40:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10003e44:	01414204 	movi	r5,1288
10003e48:	01000084 	movi	r4,2
10003e4c:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003e50:	0009883a 	mov	r4,zero
10003e54:	00012b40 	call	100012b4 <IO_read>
10003e58:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
10003e5c:	e0bfff8b 	ldhu	r2,-2(fp)
10003e60:	100b883a 	mov	r5,r2
10003e64:	010400b4 	movhi	r4,4098
10003e68:	21135704 	addi	r4,r4,19804
10003e6c:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
10003e70:	e0bfff8b 	ldhu	r2,-2(fp)
10003e74:	108000e0 	cmpeqi	r2,r2,3
10003e78:	1000061e 	bne	r2,zero,10003e94 <main+0x698>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003e7c:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
10003e80:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003e84:	010400b4 	movhi	r4,4098
10003e88:	21131d04 	addi	r4,r4,19572
10003e8c:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
10003e90:	003e6806 	br	10003834 <main+0x38>
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
10003e94:	010400b4 	movhi	r4,4098
10003e98:	21136304 	addi	r4,r4,19852
10003e9c:	0015bc40 	call	10015bc4 <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
10003ea0:	00051e80 	call	100051e8 <UsbGetConfigDesc2>

	usleep(100*1000);
10003ea4:	010000b4 	movhi	r4,2
10003ea8:	2121a804 	addi	r4,r4,-31072
10003eac:	00227480 	call	10022748 <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003eb0:	00000306 	br	10003ec0 <main+0x6c4>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
10003eb4:	00051e80 	call	100051e8 <UsbGetConfigDesc2>
		usleep(10*1000);
10003eb8:	0109c404 	movi	r4,10000
10003ebc:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003ec0:	010000c4 	movi	r4,3
10003ec4:	00012b40 	call	100012b4 <IO_read>
10003ec8:	10bfffcc 	andi	r2,r2,65535
10003ecc:	1080040c 	andi	r2,r2,16
10003ed0:	103ff826 	beq	r2,zero,10003eb4 <main+0x6b8>
	}

	UsbWaitTDListDone();
10003ed4:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003ed8:	01414184 	movi	r5,1286
10003edc:	01000084 	movi	r4,2
10003ee0:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003ee4:	0009883a 	mov	r4,zero
10003ee8:	00012b40 	call	100012b4 <IO_read>
10003eec:	10bfffcc 	andi	r2,r2,65535
10003ef0:	100b883a 	mov	r5,r2
10003ef4:	010400b4 	movhi	r4,4098
10003ef8:	21137604 	addi	r4,r4,19928
10003efc:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10003f00:	01414204 	movi	r5,1288
10003f04:	01000084 	movi	r4,2
10003f08:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003f0c:	0009883a 	mov	r4,zero
10003f10:	00012b40 	call	100012b4 <IO_read>
10003f14:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
10003f18:	e0bfff8b 	ldhu	r2,-2(fp)
10003f1c:	100b883a 	mov	r5,r2
10003f20:	010400b4 	movhi	r4,4098
10003f24:	21138104 	addi	r4,r4,19972
10003f28:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
10003f2c:	e0bfff8b 	ldhu	r2,-2(fp)
10003f30:	108000e0 	cmpeqi	r2,r2,3
10003f34:	1000061e 	bne	r2,zero,10003f50 <main+0x754>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003f38:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
10003f3c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003f40:	010400b4 	movhi	r4,4098
10003f44:	21131d04 	addi	r4,r4,19572
10003f48:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
10003f4c:	003e3906 	br	10003834 <main+0x38>
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
10003f50:	010400b4 	movhi	r4,4098
10003f54:	21138d04 	addi	r4,r4,20020
10003f58:	0015bc40 	call	10015bc4 <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
10003f5c:	01415b04 	movi	r5,1388
10003f60:	01000084 	movi	r4,2
10003f64:	00012400 	call	10001240 <IO_write>
	code = IO_read(HPI_DATA);
10003f68:	0009883a 	mov	r4,zero
10003f6c:	00012b40 	call	100012b4 <IO_read>
10003f70:	e0bffc0d 	sth	r2,-16(fp)
	code = code & 0x003;
10003f74:	e0bffc0b 	ldhu	r2,-16(fp)
10003f78:	108000cc 	andi	r2,r2,3
10003f7c:	e0bffc0d 	sth	r2,-16(fp)
	printf("\ncode = %x\n", code);
10003f80:	e0bffc0b 	ldhu	r2,-16(fp)
10003f84:	100b883a 	mov	r5,r2
10003f88:	010400b4 	movhi	r4,4098
10003f8c:	2113a004 	addi	r4,r4,20096
10003f90:	0015aa00 	call	10015aa0 <printf>

	if (code == 0x01)
10003f94:	e0bffc0b 	ldhu	r2,-16(fp)
10003f98:	10800058 	cmpnei	r2,r2,1
10003f9c:	1000041e 	bne	r2,zero,10003fb0 <main+0x7b4>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
10003fa0:	010400b4 	movhi	r4,4098
10003fa4:	2113a304 	addi	r4,r4,20108
10003fa8:	0015bc40 	call	10015bc4 <puts>
10003fac:	00000306 	br	10003fbc <main+0x7c0>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
10003fb0:	010400b4 	movhi	r4,4098
10003fb4:	2113b204 	addi	r4,r4,20168
10003fb8:	0015bc40 	call	10015bc4 <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
10003fbc:	01415d84 	movi	r5,1398
10003fc0:	01000084 	movi	r4,2
10003fc4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x073F);
10003fc8:	0141cfc4 	movi	r5,1855
10003fcc:	0009883a 	mov	r4,zero
10003fd0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x8105);
10003fd4:	01604154 	movui	r5,33029
10003fd8:	0009883a 	mov	r4,zero
10003fdc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0003);
10003fe0:	014000c4 	movi	r5,3
10003fe4:	0009883a 	mov	r4,zero
10003fe8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);
10003fec:	01400204 	movi	r5,8
10003ff0:	0009883a 	mov	r4,zero
10003ff4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
10003ff8:	016b0294 	movui	r5,44042
10003ffc:	0009883a 	mov	r4,zero
10004000:	00012400 	call	10001240 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
10004004:	01415d84 	movi	r5,1398
10004008:	01006c04 	movi	r4,432
1000400c:	0004ae40 	call	10004ae4 <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
10004010:	01415f04 	movi	r5,1404
10004014:	01000084 	movi	r4,2
10004018:	00012400 	call	10001240 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
1000401c:	0009883a 	mov	r4,zero
10004020:	00012b40 	call	100012b4 <IO_read>
10004024:	e0bffbc5 	stb	r2,-17(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
10004028:	e0bffbc3 	ldbu	r2,-17(fp)
1000402c:	100b883a 	mov	r5,r2
10004030:	010400b4 	movhi	r4,4098
10004034:	2113bb04 	addi	r4,r4,20204
10004038:	0015aa00 	call	10015aa0 <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
1000403c:	00054500 	call	10005450 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004040:	00000306 	br	10004050 <main+0x854>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
10004044:	00054500 	call	10005450 <UsbSetConfig>
		usleep(10*1000);
10004048:	0109c404 	movi	r4,10000
1000404c:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004050:	010000c4 	movi	r4,3
10004054:	00012b40 	call	100012b4 <IO_read>
10004058:	10bfffcc 	andi	r2,r2,65535
1000405c:	1080040c 	andi	r2,r2,16
10004060:	103ff826 	beq	r2,zero,10004044 <main+0x848>
	}

	UsbWaitTDListDone();
10004064:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004068:	01414184 	movi	r5,1286
1000406c:	01000084 	movi	r4,2
10004070:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004074:	0009883a 	mov	r4,zero
10004078:	00012b40 	call	100012b4 <IO_read>
1000407c:	10bfffcc 	andi	r2,r2,65535
10004080:	100b883a 	mov	r5,r2
10004084:	010400b4 	movhi	r4,4098
10004088:	2113c504 	addi	r4,r4,20244
1000408c:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10004090:	01414204 	movi	r5,1288
10004094:	01000084 	movi	r4,2
10004098:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000409c:	0009883a 	mov	r4,zero
100040a0:	00012b40 	call	100012b4 <IO_read>
100040a4:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
100040a8:	e0bfff8b 	ldhu	r2,-2(fp)
100040ac:	100b883a 	mov	r5,r2
100040b0:	010400b4 	movhi	r4,4098
100040b4:	2113d004 	addi	r4,r4,20288
100040b8:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
100040bc:	e0bfff8b 	ldhu	r2,-2(fp)
100040c0:	108000e0 	cmpeqi	r2,r2,3
100040c4:	1000061e 	bne	r2,zero,100040e0 <main+0x8e4>
	{
		usb_ctl_val = UsbGetRetryCnt();
100040c8:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
100040cc:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100040d0:	010400b4 	movhi	r4,4098
100040d4:	21131d04 	addi	r4,r4,19572
100040d8:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
100040dc:	003dd506 	br	10003834 <main+0x38>
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
100040e0:	010400b4 	movhi	r4,4098
100040e4:	2113dc04 	addi	r4,r4,20336
100040e8:	0015bc40 	call	10015bc4 <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
100040ec:	00055500 	call	10005550 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100040f0:	00000306 	br	10004100 <main+0x904>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
100040f4:	00055500 	call	10005550 <UsbClassRequest>
		usleep(10*1000);
100040f8:	0109c404 	movi	r4,10000
100040fc:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004100:	010000c4 	movi	r4,3
10004104:	00012b40 	call	100012b4 <IO_read>
10004108:	10bfffcc 	andi	r2,r2,65535
1000410c:	1080040c 	andi	r2,r2,16
10004110:	103ff826 	beq	r2,zero,100040f4 <main+0x8f8>
	}

	UsbWaitTDListDone();
10004114:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004118:	01414184 	movi	r5,1286
1000411c:	01000084 	movi	r4,2
10004120:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004124:	0009883a 	mov	r4,zero
10004128:	00012b40 	call	100012b4 <IO_read>
1000412c:	10bfffcc 	andi	r2,r2,65535
10004130:	100b883a 	mov	r5,r2
10004134:	010400b4 	movhi	r4,4098
10004138:	2113ee04 	addi	r4,r4,20408
1000413c:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
10004140:	01414204 	movi	r5,1288
10004144:	01000084 	movi	r4,2
10004148:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000414c:	0009883a 	mov	r4,zero
10004150:	00012b40 	call	100012b4 <IO_read>
10004154:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004158:	e0bfff8b 	ldhu	r2,-2(fp)
1000415c:	100b883a 	mov	r5,r2
10004160:	010400b4 	movhi	r4,4098
10004164:	2113f904 	addi	r4,r4,20452
10004168:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
1000416c:	e0bfff8b 	ldhu	r2,-2(fp)
10004170:	108000e0 	cmpeqi	r2,r2,3
10004174:	1000061e 	bne	r2,zero,10004190 <main+0x994>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004178:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
1000417c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004180:	010400b4 	movhi	r4,4098
10004184:	21131d04 	addi	r4,r4,19572
10004188:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
1000418c:	003da906 	br	10003834 <main+0x38>
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
10004190:	010400b4 	movhi	r4,4098
10004194:	21140504 	addi	r4,r4,20500
10004198:	0015bc40 	call	10015bc4 <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
1000419c:	00056500 	call	10005650 <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100041a0:	00000306 	br	100041b0 <main+0x9b4>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
100041a4:	00056500 	call	10005650 <UsbGetHidDesc>
		usleep(10*1000);
100041a8:	0109c404 	movi	r4,10000
100041ac:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100041b0:	010000c4 	movi	r4,3
100041b4:	00012b40 	call	100012b4 <IO_read>
100041b8:	10bfffcc 	andi	r2,r2,65535
100041bc:	1080040c 	andi	r2,r2,16
100041c0:	103ff826 	beq	r2,zero,100041a4 <main+0x9a8>
	}

	UsbWaitTDListDone();
100041c4:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100041c8:	01414184 	movi	r5,1286
100041cc:	01000084 	movi	r4,2
100041d0:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
100041d4:	0009883a 	mov	r4,zero
100041d8:	00012b40 	call	100012b4 <IO_read>
100041dc:	10bfffcc 	andi	r2,r2,65535
100041e0:	100b883a 	mov	r5,r2
100041e4:	010400b4 	movhi	r4,4098
100041e8:	2113ee04 	addi	r4,r4,20408
100041ec:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
100041f0:	01414204 	movi	r5,1288
100041f4:	01000084 	movi	r4,2
100041f8:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100041fc:	0009883a 	mov	r4,zero
10004200:	00012b40 	call	100012b4 <IO_read>
10004204:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004208:	e0bfff8b 	ldhu	r2,-2(fp)
1000420c:	100b883a 	mov	r5,r2
10004210:	010400b4 	movhi	r4,4098
10004214:	2113f904 	addi	r4,r4,20452
10004218:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
1000421c:	e0bfff8b 	ldhu	r2,-2(fp)
10004220:	108000e0 	cmpeqi	r2,r2,3
10004224:	1000061e 	bne	r2,zero,10004240 <main+0xa44>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004228:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
1000422c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004230:	010400b4 	movhi	r4,4098
10004234:	21131d04 	addi	r4,r4,19572
10004238:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
1000423c:	003d7d06 	br	10003834 <main+0x38>
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
10004240:	010400b4 	movhi	r4,4098
10004244:	21141704 	addi	r4,r4,20572
10004248:	0015bc40 	call	10015bc4 <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
1000424c:	00057980 	call	10005798 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004250:	00000306 	br	10004260 <main+0xa64>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
10004254:	00057980 	call	10005798 <UsbGetReportDesc>
		usleep(10*1000);
10004258:	0109c404 	movi	r4,10000
1000425c:	00227480 	call	10022748 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004260:	010000c4 	movi	r4,3
10004264:	00012b40 	call	100012b4 <IO_read>
10004268:	10bfffcc 	andi	r2,r2,65535
1000426c:	1080040c 	andi	r2,r2,16
10004270:	103ff826 	beq	r2,zero,10004254 <main+0xa58>
	}

	UsbWaitTDListDone();
10004274:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004278:	01414184 	movi	r5,1286
1000427c:	01000084 	movi	r4,2
10004280:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004284:	0009883a 	mov	r4,zero
10004288:	00012b40 	call	100012b4 <IO_read>
1000428c:	10bfffcc 	andi	r2,r2,65535
10004290:	100b883a 	mov	r5,r2
10004294:	010400b4 	movhi	r4,4098
10004298:	21142b04 	addi	r4,r4,20652
1000429c:	0015aa00 	call	10015aa0 <printf>

	IO_write(HPI_ADDR,0x0508);
100042a0:	01414204 	movi	r5,1288
100042a4:	01000084 	movi	r4,2
100042a8:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100042ac:	0009883a 	mov	r4,zero
100042b0:	00012b40 	call	100012b4 <IO_read>
100042b4:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
100042b8:	e0bfff8b 	ldhu	r2,-2(fp)
100042bc:	100b883a 	mov	r5,r2
100042c0:	010400b4 	movhi	r4,4098
100042c4:	21143704 	addi	r4,r4,20700
100042c8:	0015aa00 	call	10015aa0 <printf>
	while (usb_ctl_val != 0x03)
100042cc:	e0bfff8b 	ldhu	r2,-2(fp)
100042d0:	108000e0 	cmpeqi	r2,r2,3
100042d4:	1000061e 	bne	r2,zero,100042f0 <main+0xaf4>
	{
		usb_ctl_val = UsbGetRetryCnt();
100042d8:	0005b5c0 	call	10005b5c <UsbGetRetryCnt>
100042dc:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100042e0:	010400b4 	movhi	r4,4098
100042e4:	21131d04 	addi	r4,r4,19572
100042e8:	0015bc40 	call	10015bc4 <puts>
		goto USB_HOT_PLUG;
100042ec:	003d5106 	br	10003834 <main+0x38>
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
100042f0:	010400b4 	movhi	r4,4098
100042f4:	21144304 	addi	r4,r4,20748
100042f8:	0015bc40 	call	10015bc4 <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
100042fc:	0109c404 	movi	r4,10000
10004300:	00227480 	call	10022748 <usleep>
	while(1)
	{
		toggle++;
10004304:	e0bfff43 	ldbu	r2,-3(fp)
10004308:	10800044 	addi	r2,r2,1
1000430c:	e0bfff45 	stb	r2,-3(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
10004310:	01414004 	movi	r5,1280
10004314:	01000084 	movi	r4,2
10004318:	00012400 	call	10001240 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
1000431c:	01414704 	movi	r5,1308
10004320:	0009883a 	mov	r4,zero
10004324:	00012400 	call	10001240 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
10004328:	e0bffbc3 	ldbu	r2,-17(fp)
1000432c:	108003cc 	andi	r2,r2,15
10004330:	100b883a 	mov	r5,r2
10004334:	0009883a 	mov	r4,zero
10004338:	00012400 	call	10001240 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
1000433c:	0140a444 	movi	r5,657
10004340:	0009883a 	mov	r4,zero
10004344:	00012400 	call	10001240 <IO_write>
		if(toggle%2)
10004348:	e0bfff43 	ldbu	r2,-3(fp)
1000434c:	1080004c 	andi	r2,r2,1
10004350:	10803fcc 	andi	r2,r2,255
10004354:	10000426 	beq	r2,zero,10004368 <main+0xb6c>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
10004358:	01400044 	movi	r5,1
1000435c:	0009883a 	mov	r4,zero
10004360:	00012400 	call	10001240 <IO_write>
10004364:	00000306 	br	10004374 <main+0xb78>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
10004368:	01401044 	movi	r5,65
1000436c:	0009883a 	mov	r4,zero
10004370:	00012400 	call	10001240 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
10004374:	014004c4 	movi	r5,19
10004378:	0009883a 	mov	r4,zero
1000437c:	00012400 	call	10001240 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
10004380:	000b883a 	mov	r5,zero
10004384:	0009883a 	mov	r4,zero
10004388:	00012400 	call	10001240 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000438c:	01414004 	movi	r5,1280
10004390:	01006c04 	movi	r4,432
10004394:	0004ae40 	call	10004ae4 <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004398:	00002406 	br	1000442c <main+0xc30>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
1000439c:	01414004 	movi	r5,1280
100043a0:	01000084 	movi	r4,2
100043a4:	00012400 	call	10001240 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
100043a8:	01414704 	movi	r5,1308
100043ac:	0009883a 	mov	r4,zero
100043b0:	00012400 	call	10001240 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
100043b4:	e0bffbc3 	ldbu	r2,-17(fp)
100043b8:	108003cc 	andi	r2,r2,15
100043bc:	100b883a 	mov	r5,r2
100043c0:	0009883a 	mov	r4,zero
100043c4:	00012400 	call	10001240 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
100043c8:	0140a444 	movi	r5,657
100043cc:	0009883a 	mov	r4,zero
100043d0:	00012400 	call	10001240 <IO_write>
			if(toggle%2)
100043d4:	e0bfff43 	ldbu	r2,-3(fp)
100043d8:	1080004c 	andi	r2,r2,1
100043dc:	10803fcc 	andi	r2,r2,255
100043e0:	10000426 	beq	r2,zero,100043f4 <main+0xbf8>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
100043e4:	01400044 	movi	r5,1
100043e8:	0009883a 	mov	r4,zero
100043ec:	00012400 	call	10001240 <IO_write>
100043f0:	00000306 	br	10004400 <main+0xc04>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
100043f4:	01401044 	movi	r5,65
100043f8:	0009883a 	mov	r4,zero
100043fc:	00012400 	call	10001240 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
10004400:	014004c4 	movi	r5,19
10004404:	0009883a 	mov	r4,zero
10004408:	00012400 	call	10001240 <IO_write>
			IO_write(HPI_DATA,0x0000);//
1000440c:	000b883a 	mov	r5,zero
10004410:	0009883a 	mov	r4,zero
10004414:	00012400 	call	10001240 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004418:	01414004 	movi	r5,1280
1000441c:	01006c04 	movi	r4,432
10004420:	0004ae40 	call	10004ae4 <UsbWrite>
			usleep(10*1000);
10004424:	0109c404 	movi	r4,10000
10004428:	00227480 	call	10022748 <usleep>
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
1000442c:	010000c4 	movi	r4,3
10004430:	00012b40 	call	100012b4 <IO_read>
10004434:	10bfffcc 	andi	r2,r2,65535
10004438:	1080040c 	andi	r2,r2,16
1000443c:	103fd726 	beq	r2,zero,1000439c <main+0xba0>
		}//end while

		usb_ctl_val = UsbWaitTDListDone();
10004440:	0005ad80 	call	10005ad8 <UsbWaitTDListDone>
10004444:	e0bfff8d 	sth	r2,-2(fp)

		// The first two keycodes are stored in 0x051E. Other keycodes are in 
		// subsequent addresses.
		keycode = UsbRead(0x051e);
10004448:	01014784 	movi	r4,1310
1000444c:	0004b400 	call	10004b40 <UsbRead>
10004450:	10bfffcc 	andi	r2,r2,65535
10004454:	e0bffd15 	stw	r2,-12(fp)
		printf("\nfirst two keycode values are %04x\n",keycode);
10004458:	e17ffd17 	ldw	r5,-12(fp)
1000445c:	010400b4 	movhi	r4,4098
10004460:	21145704 	addi	r4,r4,20828
10004464:	0015aa00 	call	10015aa0 <printf>
		// We only need the first keycode, which is at the lower byte of keycode.
		// Send the keycode to hardware via PIO.

		usleep(200);//usleep(5000);
10004468:	01003204 	movi	r4,200
1000446c:	00227480 	call	10022748 <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
10004470:	d0a95d0b 	ldhu	r2,-23180(gp)
10004474:	10bfffcc 	andi	r2,r2,65535
10004478:	1009883a 	mov	r4,r2
1000447c:	0004b400 	call	10004b40 <UsbRead>
10004480:	e0bfff8d 	sth	r2,-2(fp)

		if(!(usb_ctl_val & no_device))
10004484:	d0a95d8b 	ldhu	r2,-23178(gp)
10004488:	e0ffff8b 	ldhu	r3,-2(fp)
1000448c:	1884703a 	and	r2,r3,r2
10004490:	10bfffcc 	andi	r2,r2,65535
10004494:	10003f1e 	bne	r2,zero,10004594 <main+0xd98>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10004498:	e03fff05 	stb	zero,-4(fp)
1000449c:	00000f06 	br	100044dc <main+0xce0>
			{
				usleep(5*1000);
100044a0:	0104e204 	movi	r4,5000
100044a4:	00227480 	call	10022748 <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
100044a8:	d0a95d0b 	ldhu	r2,-23180(gp)
100044ac:	10bfffcc 	andi	r2,r2,65535
100044b0:	1009883a 	mov	r4,r2
100044b4:	0004b400 	call	10004b40 <UsbRead>
100044b8:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device) break;
100044bc:	d0a95d8b 	ldhu	r2,-23178(gp)
100044c0:	e0ffff8b 	ldhu	r3,-2(fp)
100044c4:	1884703a 	and	r2,r3,r2
100044c8:	10bfffcc 	andi	r2,r2,65535
100044cc:	1000071e 	bne	r2,zero,100044ec <main+0xcf0>
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
100044d0:	e0bfff03 	ldbu	r2,-4(fp)
100044d4:	10800044 	addi	r2,r2,1
100044d8:	e0bfff05 	stb	r2,-4(fp)
100044dc:	e0bfff03 	ldbu	r2,-4(fp)
100044e0:	108001f0 	cmpltui	r2,r2,7
100044e4:	103fee1e 	bne	r2,zero,100044a0 <main+0xca4>
100044e8:	00000106 	br	100044f0 <main+0xcf4>
				if(usb_ctl_val & no_device) break;
100044ec:	0001883a 	nop
			}
			if(!(usb_ctl_val & no_device))
100044f0:	d0a95d8b 	ldhu	r2,-23178(gp)
100044f4:	e0ffff8b 	ldhu	r3,-2(fp)
100044f8:	1884703a 	and	r2,r3,r2
100044fc:	10bfffcc 	andi	r2,r2,65535
10004500:	1000241e 	bne	r2,zero,10004594 <main+0xd98>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
10004504:	010400b4 	movhi	r4,4098
10004508:	21146004 	addi	r4,r4,20864
1000450c:	0015bc40 	call	10015bc4 <puts>
				printf("[INFO]: please insert again!!! \n");
10004510:	010400b4 	movhi	r4,4098
10004514:	21146b04 	addi	r4,r4,20908
10004518:	0015bc40 	call	10015bc4 <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
1000451c:	00001d06 	br	10004594 <main+0xd98>
		{

			usb_ctl_val = UsbRead(ctl_reg);
10004520:	d0a95d0b 	ldhu	r2,-23180(gp)
10004524:	10bfffcc 	andi	r2,r2,65535
10004528:	1009883a 	mov	r4,r2
1000452c:	0004b400 	call	10004b40 <UsbRead>
10004530:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004534:	0104e204 	movi	r4,5000
10004538:	00227480 	call	10022748 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
1000453c:	d0a95d0b 	ldhu	r2,-23180(gp)
10004540:	10bfffcc 	andi	r2,r2,65535
10004544:	1009883a 	mov	r4,r2
10004548:	0004b400 	call	10004b40 <UsbRead>
1000454c:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004550:	0104e204 	movi	r4,5000
10004554:	00227480 	call	10022748 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004558:	d0a95d0b 	ldhu	r2,-23180(gp)
1000455c:	10bfffcc 	andi	r2,r2,65535
10004560:	1009883a 	mov	r4,r2
10004564:	0004b400 	call	10004b40 <UsbRead>
10004568:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
1000456c:	0104e204 	movi	r4,5000
10004570:	00227480 	call	10022748 <usleep>

			if(usb_ctl_val & no_device)
10004574:	d0a95d8b 	ldhu	r2,-23178(gp)
10004578:	e0ffff8b 	ldhu	r3,-2(fp)
1000457c:	1884703a 	and	r2,r3,r2
10004580:	10bfffcc 	andi	r2,r2,65535
10004584:	10000126 	beq	r2,zero,1000458c <main+0xd90>
				goto USB_HOT_PLUG;
10004588:	003caa06 	br	10003834 <main+0x38>

			usleep(200);
1000458c:	01003204 	movi	r4,200
10004590:	00227480 	call	10022748 <usleep>
		while (!(usb_ctl_val & no_device))
10004594:	d0a95d8b 	ldhu	r2,-23178(gp)
10004598:	e0ffff8b 	ldhu	r3,-2(fp)
1000459c:	1884703a 	and	r2,r3,r2
100045a0:	10bfffcc 	andi	r2,r2,65535
100045a4:	103fde26 	beq	r2,zero,10004520 <main+0xd24>
		toggle++;
100045a8:	003f5606 	br	10004304 <main+0xb08>

100045ac <drawTile>:
#include "tile_eng_driver.h"
#include <stdint.h>
#include <stdio.h>
#include <string.h>

void drawTile(int x, int y, int paletteId, int spriteId) {
100045ac:	defffa04 	addi	sp,sp,-24
100045b0:	df000515 	stw	fp,20(sp)
100045b4:	df000504 	addi	fp,sp,20
100045b8:	e13ffe15 	stw	r4,-8(fp)
100045bc:	e17ffd15 	stw	r5,-12(fp)
100045c0:	e1bffc15 	stw	r6,-16(fp)
100045c4:	e1fffb15 	stw	r7,-20(fp)
	uint16_t tt_addr = ((y & 0xFF)<<8) | (x & 0xFF);
100045c8:	e0bffd17 	ldw	r2,-12(fp)
100045cc:	1004923a 	slli	r2,r2,8
100045d0:	1007883a 	mov	r3,r2
100045d4:	e0bffe17 	ldw	r2,-8(fp)
100045d8:	10803fcc 	andi	r2,r2,255
100045dc:	1884b03a 	or	r2,r3,r2
100045e0:	e0bfff8d 	sth	r2,-2(fp)
	uint16_t tt_data = ((paletteId & 0x7)<<8) | (spriteId & 0xFF);
100045e4:	e0bffc17 	ldw	r2,-16(fp)
100045e8:	1004923a 	slli	r2,r2,8
100045ec:	1081c00c 	andi	r2,r2,1792
100045f0:	1007883a 	mov	r3,r2
100045f4:	e0bffb17 	ldw	r2,-20(fp)
100045f8:	10803fcc 	andi	r2,r2,255
100045fc:	1884b03a 	or	r2,r3,r2
10004600:	e0bfff0d 	sth	r2,-4(fp)
	tiletable_ptr[tt_addr] = tt_data;
10004604:	e0bfff8b 	ldhu	r2,-2(fp)
10004608:	100690ba 	slli	r3,r2,2
1000460c:	00a00014 	movui	r2,32768
10004610:	1885883a 	add	r2,r3,r2
10004614:	e0ffff0b 	ldhu	r3,-4(fp)
10004618:	10c00015 	stw	r3,0(r2)
}
1000461c:	0001883a 	nop
10004620:	e037883a 	mov	sp,fp
10004624:	df000017 	ldw	fp,0(sp)
10004628:	dec00104 	addi	sp,sp,4
1000462c:	f800283a 	ret

10004630 <writePaletteHelper>:

// Internal function. Can be used but no need.
void writePaletteHelper(uint8_t paletteId, uint8_t colorIndex, int rgbColor) {
10004630:	defffa04 	addi	sp,sp,-24
10004634:	dfc00515 	stw	ra,20(sp)
10004638:	df000415 	stw	fp,16(sp)
1000463c:	df000404 	addi	fp,sp,16
10004640:	2005883a 	mov	r2,r4
10004644:	2807883a 	mov	r3,r5
10004648:	e1bffc15 	stw	r6,-16(fp)
1000464c:	e0bffe05 	stb	r2,-8(fp)
10004650:	1805883a 	mov	r2,r3
10004654:	e0bffd05 	stb	r2,-12(fp)
	uint8_t paletteAddr = ((paletteId & 0x7) << 2) | (colorIndex & 0x3);
10004658:	e0bffe03 	ldbu	r2,-8(fp)
1000465c:	100490ba 	slli	r2,r2,2
10004660:	1080070c 	andi	r2,r2,28
10004664:	1007883a 	mov	r3,r2
10004668:	e0bffd03 	ldbu	r2,-12(fp)
1000466c:	108000cc 	andi	r2,r2,3
10004670:	1884b03a 	or	r2,r3,r2
10004674:	e0bfffc5 	stb	r2,-1(fp)
	palette_ptr[paletteAddr] = rgbColor & 0x00FFFFFF;
10004678:	e0bfffc3 	ldbu	r2,-1(fp)
1000467c:	100490ba 	slli	r2,r2,2
10004680:	10c02004 	addi	r3,r2,128
10004684:	e13ffc17 	ldw	r4,-16(fp)
10004688:	00804034 	movhi	r2,256
1000468c:	10bfffc4 	addi	r2,r2,-1
10004690:	2084703a 	and	r2,r4,r2
10004694:	18800015 	stw	r2,0(r3)
	printf("palette_ptr[%02x]=%06x\n",paletteAddr, rgbColor & 0x00FFFFFF);
10004698:	e13fffc3 	ldbu	r4,-1(fp)
1000469c:	e0fffc17 	ldw	r3,-16(fp)
100046a0:	00804034 	movhi	r2,256
100046a4:	10bfffc4 	addi	r2,r2,-1
100046a8:	1884703a 	and	r2,r3,r2
100046ac:	100d883a 	mov	r6,r2
100046b0:	200b883a 	mov	r5,r4
100046b4:	010400b4 	movhi	r4,4098
100046b8:	21147304 	addi	r4,r4,20940
100046bc:	0015aa00 	call	10015aa0 <printf>
}
100046c0:	0001883a 	nop
100046c4:	e037883a 	mov	sp,fp
100046c8:	dfc00117 	ldw	ra,4(sp)
100046cc:	df000017 	ldw	fp,0(sp)
100046d0:	dec00204 	addi	sp,sp,8
100046d4:	f800283a 	ret

100046d8 <writePalette>:

// Write an entire palette to the palette storage.
void writePalette(Palette* toWrite) {
100046d8:	defffd04 	addi	sp,sp,-12
100046dc:	dfc00215 	stw	ra,8(sp)
100046e0:	df000115 	stw	fp,4(sp)
100046e4:	df000104 	addi	fp,sp,4
100046e8:	e13fff15 	stw	r4,-4(fp)
	writePaletteHelper(toWrite->paletteId, 0, toWrite->colors[0]);
100046ec:	e0bfff17 	ldw	r2,-4(fp)
100046f0:	10800017 	ldw	r2,0(r2)
100046f4:	10c03fcc 	andi	r3,r2,255
100046f8:	e0bfff17 	ldw	r2,-4(fp)
100046fc:	10800117 	ldw	r2,4(r2)
10004700:	100d883a 	mov	r6,r2
10004704:	000b883a 	mov	r5,zero
10004708:	1809883a 	mov	r4,r3
1000470c:	00046300 	call	10004630 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 1, toWrite->colors[1]);
10004710:	e0bfff17 	ldw	r2,-4(fp)
10004714:	10800017 	ldw	r2,0(r2)
10004718:	10c03fcc 	andi	r3,r2,255
1000471c:	e0bfff17 	ldw	r2,-4(fp)
10004720:	10800217 	ldw	r2,8(r2)
10004724:	100d883a 	mov	r6,r2
10004728:	01400044 	movi	r5,1
1000472c:	1809883a 	mov	r4,r3
10004730:	00046300 	call	10004630 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 2, toWrite->colors[2]);
10004734:	e0bfff17 	ldw	r2,-4(fp)
10004738:	10800017 	ldw	r2,0(r2)
1000473c:	10c03fcc 	andi	r3,r2,255
10004740:	e0bfff17 	ldw	r2,-4(fp)
10004744:	10800317 	ldw	r2,12(r2)
10004748:	100d883a 	mov	r6,r2
1000474c:	01400084 	movi	r5,2
10004750:	1809883a 	mov	r4,r3
10004754:	00046300 	call	10004630 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 3, toWrite->colors[3]);
10004758:	e0bfff17 	ldw	r2,-4(fp)
1000475c:	10800017 	ldw	r2,0(r2)
10004760:	10c03fcc 	andi	r3,r2,255
10004764:	e0bfff17 	ldw	r2,-4(fp)
10004768:	10800417 	ldw	r2,16(r2)
1000476c:	100d883a 	mov	r6,r2
10004770:	014000c4 	movi	r5,3
10004774:	1809883a 	mov	r4,r3
10004778:	00046300 	call	10004630 <writePaletteHelper>
	printf("\n");
1000477c:	01000284 	movi	r4,10
10004780:	0015ae00 	call	10015ae0 <putchar>
}
10004784:	0001883a 	nop
10004788:	e037883a 	mov	sp,fp
1000478c:	dfc00117 	ldw	ra,4(sp)
10004790:	df000017 	ldw	fp,0(sp)
10004794:	dec00204 	addi	sp,sp,8
10004798:	f800283a 	ret

1000479c <parseSpriteLine>:

// " " - 00, "@" - 01. "#" - 10, "*" - 11.
void parseSpriteLine(Sprite *sprite, uint8_t linenum, char data[8]) {
1000479c:	defffb04 	addi	sp,sp,-20
100047a0:	df000415 	stw	fp,16(sp)
100047a4:	df000404 	addi	fp,sp,16
100047a8:	e13ffe15 	stw	r4,-8(fp)
100047ac:	2805883a 	mov	r2,r5
100047b0:	e1bffc15 	stw	r6,-16(fp)
100047b4:	e0bffd05 	stb	r2,-12(fp)
	uint16_t result_line;
	for(uint8_t i=0; i<8; i++) {
100047b8:	e03fff45 	stb	zero,-3(fp)
100047bc:	00002306 	br	1000484c <parseSpriteLine+0xb0>
		switch(data[i]) {
100047c0:	e0bfff43 	ldbu	r2,-3(fp)
100047c4:	e0fffc17 	ldw	r3,-16(fp)
100047c8:	1885883a 	add	r2,r3,r2
100047cc:	10800003 	ldbu	r2,0(r2)
100047d0:	10803fcc 	andi	r2,r2,255
100047d4:	1080201c 	xori	r2,r2,128
100047d8:	10bfe004 	addi	r2,r2,-128
100047dc:	10c00aa0 	cmpeqi	r3,r2,42
100047e0:	1800051e 	bne	r3,zero,100047f8 <parseSpriteLine+0x5c>
100047e4:	10c01020 	cmpeqi	r3,r2,64
100047e8:	18000d1e 	bne	r3,zero,10004820 <parseSpriteLine+0x84>
100047ec:	108008e0 	cmpeqi	r2,r2,35
100047f0:	1000061e 	bne	r2,zero,1000480c <parseSpriteLine+0x70>
100047f4:	00000f06 	br	10004834 <parseSpriteLine+0x98>
			case '*': {
				result_line = (result_line<<2) | 0b11;
100047f8:	e0bfff8b 	ldhu	r2,-2(fp)
100047fc:	100490ba 	slli	r2,r2,2
10004800:	108000d4 	ori	r2,r2,3
10004804:	e0bfff8d 	sth	r2,-2(fp)
				break;
10004808:	00000d06 	br	10004840 <parseSpriteLine+0xa4>
			}
			case '#': {
				result_line = (result_line<<2) | 0b10;
1000480c:	e0bfff8b 	ldhu	r2,-2(fp)
10004810:	100490ba 	slli	r2,r2,2
10004814:	10800094 	ori	r2,r2,2
10004818:	e0bfff8d 	sth	r2,-2(fp)
				break;
1000481c:	00000806 	br	10004840 <parseSpriteLine+0xa4>
			}
			case '@': {
				result_line = (result_line<<2) | 0b01;
10004820:	e0bfff8b 	ldhu	r2,-2(fp)
10004824:	100490ba 	slli	r2,r2,2
10004828:	10800054 	ori	r2,r2,1
1000482c:	e0bfff8d 	sth	r2,-2(fp)
				break;
10004830:	00000306 	br	10004840 <parseSpriteLine+0xa4>
			}
			default: {
				result_line = (result_line<<2) | 0b00;
10004834:	e0bfff8b 	ldhu	r2,-2(fp)
10004838:	100490ba 	slli	r2,r2,2
1000483c:	e0bfff8d 	sth	r2,-2(fp)
	for(uint8_t i=0; i<8; i++) {
10004840:	e0bfff43 	ldbu	r2,-3(fp)
10004844:	10800044 	addi	r2,r2,1
10004848:	e0bfff45 	stb	r2,-3(fp)
1000484c:	e0bfff43 	ldbu	r2,-3(fp)
10004850:	10800230 	cmpltui	r2,r2,8
10004854:	103fda1e 	bne	r2,zero,100047c0 <parseSpriteLine+0x24>
			}
		}
	}
	sprite -> lines[linenum] = result_line;
10004858:	e0bffd03 	ldbu	r2,-12(fp)
1000485c:	e0fffe17 	ldw	r3,-8(fp)
10004860:	1085883a 	add	r2,r2,r2
10004864:	1885883a 	add	r2,r3,r2
10004868:	e0ffff8b 	ldhu	r3,-2(fp)
1000486c:	10c0008d 	sth	r3,2(r2)
}
10004870:	0001883a 	nop
10004874:	e037883a 	mov	sp,fp
10004878:	df000017 	ldw	fp,0(sp)
1000487c:	dec00104 	addi	sp,sp,4
10004880:	f800283a 	ret

10004884 <parseSprite>:

// Parses all 128 characters in a custom sprite
void parseSprite(Sprite *target, char datas[16][8]) {
10004884:	defffb04 	addi	sp,sp,-20
10004888:	dfc00415 	stw	ra,16(sp)
1000488c:	df000315 	stw	fp,12(sp)
10004890:	df000304 	addi	fp,sp,12
10004894:	e13ffe15 	stw	r4,-8(fp)
10004898:	e17ffd15 	stw	r5,-12(fp)
	for(int i=0; i<16; i++) {
1000489c:	e03fff15 	stw	zero,-4(fp)
100048a0:	00000d06 	br	100048d8 <parseSprite+0x54>
		parseSpriteLine(target,i,datas[i]);
100048a4:	e0bfff17 	ldw	r2,-4(fp)
100048a8:	11003fcc 	andi	r4,r2,255
100048ac:	e0bfff17 	ldw	r2,-4(fp)
100048b0:	100490fa 	slli	r2,r2,3
100048b4:	e0fffd17 	ldw	r3,-12(fp)
100048b8:	1885883a 	add	r2,r3,r2
100048bc:	100d883a 	mov	r6,r2
100048c0:	200b883a 	mov	r5,r4
100048c4:	e13ffe17 	ldw	r4,-8(fp)
100048c8:	000479c0 	call	1000479c <parseSpriteLine>
	for(int i=0; i<16; i++) {
100048cc:	e0bfff17 	ldw	r2,-4(fp)
100048d0:	10800044 	addi	r2,r2,1
100048d4:	e0bfff15 	stw	r2,-4(fp)
100048d8:	e0bfff17 	ldw	r2,-4(fp)
100048dc:	10800410 	cmplti	r2,r2,16
100048e0:	103ff01e 	bne	r2,zero,100048a4 <parseSprite+0x20>
	}
}
100048e4:	0001883a 	nop
100048e8:	e037883a 	mov	sp,fp
100048ec:	dfc00117 	ldw	ra,4(sp)
100048f0:	df000017 	ldw	fp,0(sp)
100048f4:	dec00204 	addi	sp,sp,8
100048f8:	f800283a 	ret

100048fc <writeSprite>:

void writeSprite(Sprite* target) {
100048fc:	defffb04 	addi	sp,sp,-20
10004900:	dfc00415 	stw	ra,16(sp)
10004904:	df000315 	stw	fp,12(sp)
10004908:	df000304 	addi	fp,sp,12
1000490c:	e13ffd15 	stw	r4,-12(fp)
	for(int i=0; i<8; i+=1) {
10004910:	e03fff15 	stw	zero,-4(fp)
10004914:	00002506 	br	100049ac <writeSprite+0xb0>
		int prepare_dualine = (((int)(target->lines[2*i]) & 0xFFFF)<< 16) | (((int)(target->lines[2*i+1]) & 0xFFFF));
10004918:	e0bfff17 	ldw	r2,-4(fp)
1000491c:	1085883a 	add	r2,r2,r2
10004920:	e0fffd17 	ldw	r3,-12(fp)
10004924:	1085883a 	add	r2,r2,r2
10004928:	1885883a 	add	r2,r3,r2
1000492c:	1080008b 	ldhu	r2,2(r2)
10004930:	10bfffcc 	andi	r2,r2,65535
10004934:	1006943a 	slli	r3,r2,16
10004938:	e0bfff17 	ldw	r2,-4(fp)
1000493c:	1085883a 	add	r2,r2,r2
10004940:	10800044 	addi	r2,r2,1
10004944:	e13ffd17 	ldw	r4,-12(fp)
10004948:	1085883a 	add	r2,r2,r2
1000494c:	2085883a 	add	r2,r4,r2
10004950:	1080008b 	ldhu	r2,2(r2)
10004954:	10bfffcc 	andi	r2,r2,65535
10004958:	1884b03a 	or	r2,r3,r2
1000495c:	e0bffe15 	stw	r2,-8(fp)
		printf("%08x\n",prepare_dualine);
10004960:	e17ffe17 	ldw	r5,-8(fp)
10004964:	010400b4 	movhi	r4,4098
10004968:	21147904 	addi	r4,r4,20964
1000496c:	0015aa00 	call	10015aa0 <printf>
		spriteram_ptr[((target->sprite_id & 0x3F) << 3) | (i&0x7)] = prepare_dualine;
10004970:	e0bffd17 	ldw	r2,-12(fp)
10004974:	1080000b 	ldhu	r2,0(r2)
10004978:	10bfffcc 	andi	r2,r2,65535
1000497c:	100490fa 	slli	r2,r2,3
10004980:	10c07e0c 	andi	r3,r2,504
10004984:	e0bfff17 	ldw	r2,-4(fp)
10004988:	108001cc 	andi	r2,r2,7
1000498c:	1884b03a 	or	r2,r3,r2
10004990:	100490ba 	slli	r2,r2,2
10004994:	10860004 	addi	r2,r2,6144
10004998:	e0fffe17 	ldw	r3,-8(fp)
1000499c:	10c00015 	stw	r3,0(r2)
	for(int i=0; i<8; i+=1) {
100049a0:	e0bfff17 	ldw	r2,-4(fp)
100049a4:	10800044 	addi	r2,r2,1
100049a8:	e0bfff15 	stw	r2,-4(fp)
100049ac:	e0bfff17 	ldw	r2,-4(fp)
100049b0:	10800210 	cmplti	r2,r2,8
100049b4:	103fd81e 	bne	r2,zero,10004918 <writeSprite+0x1c>
	}
}
100049b8:	0001883a 	nop
100049bc:	e037883a 	mov	sp,fp
100049c0:	dfc00117 	ldw	ra,4(sp)
100049c4:	df000017 	ldw	fp,0(sp)
100049c8:	dec00204 	addi	sp,sp,8
100049cc:	f800283a 	ret

100049d0 <writeText>:

void writeText(int beginningX, int Y, char text[], int paletteId) {
100049d0:	defff804 	addi	sp,sp,-32
100049d4:	dfc00715 	stw	ra,28(sp)
100049d8:	df000615 	stw	fp,24(sp)
100049dc:	df000604 	addi	fp,sp,24
100049e0:	e13ffd15 	stw	r4,-12(fp)
100049e4:	e17ffc15 	stw	r5,-16(fp)
100049e8:	e1bffb15 	stw	r6,-20(fp)
100049ec:	e1fffa15 	stw	r7,-24(fp)
	int length = strlen(text);
100049f0:	e13ffb17 	ldw	r4,-20(fp)
100049f4:	00163ac0 	call	100163ac <strlen>
100049f8:	e0bffe15 	stw	r2,-8(fp)
	for(int i=0;i<length;i+=1) {
100049fc:	e03fff15 	stw	zero,-4(fp)
10004a00:	00001006 	br	10004a44 <writeText+0x74>
		drawTile(beginningX+i, Y, paletteId, text[i]&0x7F);
10004a04:	e0fffd17 	ldw	r3,-12(fp)
10004a08:	e0bfff17 	ldw	r2,-4(fp)
10004a0c:	1889883a 	add	r4,r3,r2
10004a10:	e0bfff17 	ldw	r2,-4(fp)
10004a14:	e0fffb17 	ldw	r3,-20(fp)
10004a18:	1885883a 	add	r2,r3,r2
10004a1c:	10800003 	ldbu	r2,0(r2)
10004a20:	10803fcc 	andi	r2,r2,255
10004a24:	10801fcc 	andi	r2,r2,127
10004a28:	100f883a 	mov	r7,r2
10004a2c:	e1bffa17 	ldw	r6,-24(fp)
10004a30:	e17ffc17 	ldw	r5,-16(fp)
10004a34:	00045ac0 	call	100045ac <drawTile>
	for(int i=0;i<length;i+=1) {
10004a38:	e0bfff17 	ldw	r2,-4(fp)
10004a3c:	10800044 	addi	r2,r2,1
10004a40:	e0bfff15 	stw	r2,-4(fp)
10004a44:	e0ffff17 	ldw	r3,-4(fp)
10004a48:	e0bffe17 	ldw	r2,-8(fp)
10004a4c:	18bfed16 	blt	r3,r2,10004a04 <writeText+0x34>
	}
}
10004a50:	0001883a 	nop
10004a54:	e037883a 	mov	sp,fp
10004a58:	dfc00117 	ldw	ra,4(sp)
10004a5c:	df000017 	ldw	fp,0(sp)
10004a60:	dec00204 	addi	sp,sp,8
10004a64:	f800283a 	ret

10004a68 <clearScreen>:

void clearScreen() {
10004a68:	defffc04 	addi	sp,sp,-16
10004a6c:	dfc00315 	stw	ra,12(sp)
10004a70:	df000215 	stw	fp,8(sp)
10004a74:	df000204 	addi	fp,sp,8
	for(int i=0; i<30; i++){
10004a78:	e03fff15 	stw	zero,-4(fp)
10004a7c:	00001006 	br	10004ac0 <clearScreen+0x58>
		for(int j=0; j<80; j++) {
10004a80:	e03ffe15 	stw	zero,-8(fp)
10004a84:	00000806 	br	10004aa8 <clearScreen+0x40>
			drawTile(j,i,0,0);
10004a88:	000f883a 	mov	r7,zero
10004a8c:	000d883a 	mov	r6,zero
10004a90:	e17fff17 	ldw	r5,-4(fp)
10004a94:	e13ffe17 	ldw	r4,-8(fp)
10004a98:	00045ac0 	call	100045ac <drawTile>
		for(int j=0; j<80; j++) {
10004a9c:	e0bffe17 	ldw	r2,-8(fp)
10004aa0:	10800044 	addi	r2,r2,1
10004aa4:	e0bffe15 	stw	r2,-8(fp)
10004aa8:	e0bffe17 	ldw	r2,-8(fp)
10004aac:	10801410 	cmplti	r2,r2,80
10004ab0:	103ff51e 	bne	r2,zero,10004a88 <clearScreen+0x20>
	for(int i=0; i<30; i++){
10004ab4:	e0bfff17 	ldw	r2,-4(fp)
10004ab8:	10800044 	addi	r2,r2,1
10004abc:	e0bfff15 	stw	r2,-4(fp)
10004ac0:	e0bfff17 	ldw	r2,-4(fp)
10004ac4:	10800790 	cmplti	r2,r2,30
10004ac8:	103fed1e 	bne	r2,zero,10004a80 <clearScreen+0x18>
		}
	}
}
10004acc:	0001883a 	nop
10004ad0:	e037883a 	mov	sp,fp
10004ad4:	dfc00117 	ldw	ra,4(sp)
10004ad8:	df000017 	ldw	fp,0(sp)
10004adc:	dec00204 	addi	sp,sp,8
10004ae0:	f800283a 	ret

10004ae4 <UsbWrite>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data)
{
10004ae4:	defffc04 	addi	sp,sp,-16
10004ae8:	dfc00315 	stw	ra,12(sp)
10004aec:	df000215 	stw	fp,8(sp)
10004af0:	df000204 	addi	fp,sp,8
10004af4:	2005883a 	mov	r2,r4
10004af8:	2807883a 	mov	r3,r5
10004afc:	e0bfff0d 	sth	r2,-4(fp)
10004b00:	1805883a 	mov	r2,r3
10004b04:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10004b08:	e0bfff0b 	ldhu	r2,-4(fp)
10004b0c:	100b883a 	mov	r5,r2
10004b10:	01000084 	movi	r4,2
10004b14:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA, Data);
10004b18:	e0bffe0b 	ldhu	r2,-8(fp)
10004b1c:	100b883a 	mov	r5,r2
10004b20:	0009883a 	mov	r4,zero
10004b24:	00012400 	call	10001240 <IO_write>
}
10004b28:	0001883a 	nop
10004b2c:	e037883a 	mov	sp,fp
10004b30:	dfc00117 	ldw	ra,4(sp)
10004b34:	df000017 	ldw	fp,0(sp)
10004b38:	dec00204 	addi	sp,sp,8
10004b3c:	f800283a 	ret

10004b40 <UsbRead>:
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address)
{
10004b40:	defffd04 	addi	sp,sp,-12
10004b44:	dfc00215 	stw	ra,8(sp)
10004b48:	df000115 	stw	fp,4(sp)
10004b4c:	df000104 	addi	fp,sp,4
10004b50:	2005883a 	mov	r2,r4
10004b54:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10004b58:	e0bfff0b 	ldhu	r2,-4(fp)
10004b5c:	100b883a 	mov	r5,r2
10004b60:	01000084 	movi	r4,2
10004b64:	00012400 	call	10001240 <IO_write>
	return IO_read(HPI_DATA);
10004b68:	0009883a 	mov	r4,zero
10004b6c:	00012b40 	call	100012b4 <IO_read>
}
10004b70:	e037883a 	mov	sp,fp
10004b74:	dfc00117 	ldw	ra,4(sp)
10004b78:	df000017 	ldw	fp,0(sp)
10004b7c:	dec00204 	addi	sp,sp,8
10004b80:	f800283a 	ret

10004b84 <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
10004b84:	defffe04 	addi	sp,sp,-8
10004b88:	dfc00115 	stw	ra,4(sp)
10004b8c:	df000015 	stw	fp,0(sp)
10004b90:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
10004b94:	017e9414 	movui	r5,64080
10004b98:	01000044 	movi	r4,1
10004b9c:	00012400 	call	10001240 <IO_write>
	usleep(100000);
10004ba0:	010000b4 	movhi	r4,2
10004ba4:	2121a804 	addi	r4,r4,-31072
10004ba8:	00227480 	call	10022748 <usleep>
	printf("[USB INIT]:reset finished!\n");
10004bac:	010400b4 	movhi	r4,4098
10004bb0:	21147b04 	addi	r4,r4,20972
10004bb4:	0015bc40 	call	10015bc4 <puts>

	usleep(500000);
10004bb8:	01000234 	movhi	r4,8
10004bbc:	21284804 	addi	r4,r4,-24288
10004bc0:	00227480 	call	10022748 <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
10004bc4:	010400b4 	movhi	r4,4098
10004bc8:	21148204 	addi	r4,r4,21000
10004bcc:	0015bc40 	call	10015bc4 <puts>
	IO_read(HPI_MAILBOX);
10004bd0:	01000044 	movi	r4,1
10004bd4:	00012b40 	call	100012b4 <IO_read>
	IO_read(HPI_STATUS);
10004bd8:	010000c4 	movi	r4,3
10004bdc:	00012b40 	call	100012b4 <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
10004be0:	01005104 	movi	r4,324
10004be4:	0004b400 	call	10004b40 <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10004be8:	000b883a 	mov	r5,zero
10004bec:	01005104 	movi	r4,324
10004bf0:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
10004bf4:	01005204 	movi	r4,328
10004bf8:	0004b400 	call	10004b40 <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
10004bfc:	000b883a 	mov	r5,zero
10004c00:	01005204 	movi	r4,328
10004c04:	0004ae40 	call	10004ae4 <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10004c08:	017fffd4 	movui	r5,65535
10004c0c:	01302414 	movui	r4,49296
10004c10:	0004ae40 	call	10004ae4 <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
10004c14:	017fffd4 	movui	r5,65535
10004c18:	01302c14 	movui	r4,49328
10004c1c:	0004ae40 	call	10004ae4 <UsbWrite>
}
10004c20:	0001883a 	nop
10004c24:	e037883a 	mov	sp,fp
10004c28:	dfc00117 	ldw	ra,4(sp)
10004c2c:	df000017 	ldw	fp,0(sp)
10004c30:	dec00204 	addi	sp,sp,8
10004c34:	f800283a 	ret

10004c38 <UsbSetAddress>:


void UsbSetAddress()
{
10004c38:	defffe04 	addi	sp,sp,-8
10004c3c:	dfc00115 	stw	ra,4(sp)
10004c40:	df000015 	stw	fp,0(sp)
10004c44:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004c48:	01414004 	movi	r5,1280
10004c4c:	01000084 	movi	r4,2
10004c50:	00012400 	call	10001240 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
10004c54:	01414304 	movi	r5,1292
10004c58:	0009883a 	mov	r4,zero
10004c5c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004c60:	01400204 	movi	r5,8
10004c64:	0009883a 	mov	r4,zero
10004c68:	00012400 	call	10001240 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
10004c6c:	01403404 	movi	r5,208
10004c70:	0009883a 	mov	r4,zero
10004c74:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004c78:	01400044 	movi	r5,1
10004c7c:	0009883a 	mov	r4,zero
10004c80:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004c84:	014004c4 	movi	r5,19
10004c88:	0009883a 	mov	r4,zero
10004c8c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004c90:	01414504 	movi	r5,1300
10004c94:	0009883a 	mov	r4,zero
10004c98:	00012400 	call	10001240 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
10004c9c:	01414004 	movi	r5,1280
10004ca0:	0009883a 	mov	r4,zero
10004ca4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);
10004ca8:	01400084 	movi	r5,2
10004cac:	0009883a 	mov	r4,zero
10004cb0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004cb4:	000b883a 	mov	r5,zero
10004cb8:	0009883a 	mov	r4,zero
10004cbc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004cc0:	000b883a 	mov	r5,zero
10004cc4:	0009883a 	mov	r4,zero
10004cc8:	00012400 	call	10001240 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
10004ccc:	000b883a 	mov	r5,zero
10004cd0:	0009883a 	mov	r4,zero
10004cd4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//
10004cd8:	000b883a 	mov	r5,zero
10004cdc:	0009883a 	mov	r4,zero
10004ce0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0090);//
10004ce4:	01402404 	movi	r5,144
10004ce8:	0009883a 	mov	r4,zero
10004cec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004cf0:	01401044 	movi	r5,65
10004cf4:	0009883a 	mov	r4,zero
10004cf8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004cfc:	014004c4 	movi	r5,19
10004d00:	0009883a 	mov	r4,zero
10004d04:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004d08:	000b883a 	mov	r5,zero
10004d0c:	0009883a 	mov	r4,zero
10004d10:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004d14:	01414004 	movi	r5,1280
10004d18:	01006c04 	movi	r4,432
10004d1c:	0004ae40 	call	10004ae4 <UsbWrite>
}
10004d20:	0001883a 	nop
10004d24:	e037883a 	mov	sp,fp
10004d28:	dfc00117 	ldw	ra,4(sp)
10004d2c:	df000017 	ldw	fp,0(sp)
10004d30:	dec00204 	addi	sp,sp,8
10004d34:	f800283a 	ret

10004d38 <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
10004d38:	defffe04 	addi	sp,sp,-8
10004d3c:	dfc00115 	stw	ra,4(sp)
10004d40:	df000015 	stw	fp,0(sp)
10004d44:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004d48:	01414004 	movi	r5,1280
10004d4c:	01000084 	movi	r4,2
10004d50:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10004d54:	01414304 	movi	r5,1292
10004d58:	0009883a 	mov	r4,zero
10004d5c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004d60:	01400204 	movi	r5,8
10004d64:	0009883a 	mov	r4,zero
10004d68:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10004d6c:	0140b404 	movi	r5,720
10004d70:	0009883a 	mov	r4,zero
10004d74:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004d78:	01400044 	movi	r5,1
10004d7c:	0009883a 	mov	r4,zero
10004d80:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004d84:	014004c4 	movi	r5,19
10004d88:	0009883a 	mov	r4,zero
10004d8c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004d90:	01414504 	movi	r5,1300
10004d94:	0009883a 	mov	r4,zero
10004d98:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10004d9c:	0141a004 	movi	r5,1664
10004da0:	0009883a 	mov	r4,zero
10004da4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
10004da8:	01404004 	movi	r5,256
10004dac:	0009883a 	mov	r4,zero
10004db0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004db4:	000b883a 	mov	r5,zero
10004db8:	0009883a 	mov	r4,zero
10004dbc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);
10004dc0:	01400204 	movi	r5,8
10004dc4:	0009883a 	mov	r4,zero
10004dc8:	00012400 	call	10001240 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
10004dcc:	01414b04 	movi	r5,1324
10004dd0:	0009883a 	mov	r4,zero
10004dd4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//
10004dd8:	01400204 	movi	r5,8
10004ddc:	0009883a 	mov	r4,zero
10004de0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//
10004de4:	0140a404 	movi	r5,656
10004de8:	0009883a 	mov	r4,zero
10004dec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004df0:	01401044 	movi	r5,65
10004df4:	0009883a 	mov	r4,zero
10004df8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004dfc:	014004c4 	movi	r5,19
10004e00:	0009883a 	mov	r4,zero
10004e04:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);
10004e08:	01414804 	movi	r5,1312
10004e0c:	0009883a 	mov	r4,zero
10004e10:	00012400 	call	10001240 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
10004e14:	000b883a 	mov	r5,zero
10004e18:	0009883a 	mov	r4,zero
10004e1c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10004e20:	000b883a 	mov	r5,zero
10004e24:	0009883a 	mov	r4,zero
10004e28:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
10004e2c:	01408404 	movi	r5,528
10004e30:	0009883a 	mov	r4,zero
10004e34:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004e38:	01401044 	movi	r5,65
10004e3c:	0009883a 	mov	r4,zero
10004e40:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004e44:	014004c4 	movi	r5,19
10004e48:	0009883a 	mov	r4,zero
10004e4c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004e50:	000b883a 	mov	r5,zero
10004e54:	0009883a 	mov	r4,zero
10004e58:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004e5c:	01414004 	movi	r5,1280
10004e60:	01006c04 	movi	r4,432
10004e64:	0004ae40 	call	10004ae4 <UsbWrite>
}
10004e68:	0001883a 	nop
10004e6c:	e037883a 	mov	sp,fp
10004e70:	dfc00117 	ldw	ra,4(sp)
10004e74:	df000017 	ldw	fp,0(sp)
10004e78:	dec00204 	addi	sp,sp,8
10004e7c:	f800283a 	ret

10004e80 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
10004e80:	defffe04 	addi	sp,sp,-8
10004e84:	dfc00115 	stw	ra,4(sp)
10004e88:	df000015 	stw	fp,0(sp)
10004e8c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004e90:	01414004 	movi	r5,1280
10004e94:	01000084 	movi	r4,2
10004e98:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10004e9c:	01414304 	movi	r5,1292
10004ea0:	0009883a 	mov	r4,zero
10004ea4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004ea8:	01400204 	movi	r5,8
10004eac:	0009883a 	mov	r4,zero
10004eb0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10004eb4:	0140b404 	movi	r5,720
10004eb8:	0009883a 	mov	r4,zero
10004ebc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004ec0:	01400044 	movi	r5,1
10004ec4:	0009883a 	mov	r4,zero
10004ec8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004ecc:	014004c4 	movi	r5,19
10004ed0:	0009883a 	mov	r4,zero
10004ed4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004ed8:	01414504 	movi	r5,1300
10004edc:	0009883a 	mov	r4,zero
10004ee0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10004ee4:	0141a004 	movi	r5,1664
10004ee8:	0009883a 	mov	r4,zero
10004eec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
10004ef0:	01404004 	movi	r5,256
10004ef4:	0009883a 	mov	r4,zero
10004ef8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10004efc:	000b883a 	mov	r5,zero
10004f00:	0009883a 	mov	r4,zero
10004f04:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
10004f08:	01400484 	movi	r5,18
10004f0c:	0009883a 	mov	r4,zero
10004f10:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10004f14:	01415104 	movi	r5,1348
10004f18:	0009883a 	mov	r4,zero
10004f1c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10004f20:	01400204 	movi	r5,8
10004f24:	0009883a 	mov	r4,zero
10004f28:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10004f2c:	0140a404 	movi	r5,656
10004f30:	0009883a 	mov	r4,zero
10004f34:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10004f38:	01401044 	movi	r5,65
10004f3c:	0009883a 	mov	r4,zero
10004f40:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10004f44:	014004c4 	movi	r5,19
10004f48:	0009883a 	mov	r4,zero
10004f4c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10004f50:	01414804 	movi	r5,1312
10004f54:	0009883a 	mov	r4,zero
10004f58:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10004f5c:	01415304 	movi	r5,1356
10004f60:	0009883a 	mov	r4,zero
10004f64:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10004f68:	01400204 	movi	r5,8
10004f6c:	0009883a 	mov	r4,zero
10004f70:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10004f74:	0140a404 	movi	r5,656
10004f78:	0009883a 	mov	r4,zero
10004f7c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
10004f80:	01400044 	movi	r5,1
10004f84:	0009883a 	mov	r4,zero
10004f88:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10004f8c:	014004c4 	movi	r5,19
10004f90:	0009883a 	mov	r4,zero
10004f94:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10004f98:	01414b04 	movi	r5,1324
10004f9c:	0009883a 	mov	r4,zero
10004fa0:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
10004fa4:	01415504 	movi	r5,1364
10004fa8:	0009883a 	mov	r4,zero
10004fac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
10004fb0:	01400084 	movi	r5,2
10004fb4:	0009883a 	mov	r4,zero
10004fb8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10004fbc:	0140a404 	movi	r5,656
10004fc0:	0009883a 	mov	r4,zero
10004fc4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10004fc8:	01401044 	movi	r5,65
10004fcc:	0009883a 	mov	r4,zero
10004fd0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10004fd4:	014004c4 	movi	r5,19
10004fd8:	0009883a 	mov	r4,zero
10004fdc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10004fe0:	01414e04 	movi	r5,1336
10004fe4:	0009883a 	mov	r4,zero
10004fe8:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
10004fec:	000b883a 	mov	r5,zero
10004ff0:	0009883a 	mov	r4,zero
10004ff4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10004ff8:	000b883a 	mov	r5,zero
10004ffc:	0009883a 	mov	r4,zero
10005000:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
10005004:	01408404 	movi	r5,528
10005008:	0009883a 	mov	r4,zero
1000500c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
10005010:	01401044 	movi	r5,65
10005014:	0009883a 	mov	r4,zero
10005018:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
1000501c:	014004c4 	movi	r5,19
10005020:	0009883a 	mov	r4,zero
10005024:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10005028:	000b883a 	mov	r5,zero
1000502c:	0009883a 	mov	r4,zero
10005030:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005034:	01414004 	movi	r5,1280
10005038:	01006c04 	movi	r4,432
1000503c:	0004ae40 	call	10004ae4 <UsbWrite>
}
10005040:	0001883a 	nop
10005044:	e037883a 	mov	sp,fp
10005048:	dfc00117 	ldw	ra,4(sp)
1000504c:	df000017 	ldw	fp,0(sp)
10005050:	dec00204 	addi	sp,sp,8
10005054:	f800283a 	ret

10005058 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
10005058:	defffe04 	addi	sp,sp,-8
1000505c:	dfc00115 	stw	ra,4(sp)
10005060:	df000015 	stw	fp,0(sp)
10005064:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005068:	01414004 	movi	r5,1280
1000506c:	01000084 	movi	r4,2
10005070:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005074:	01414304 	movi	r5,1292
10005078:	0009883a 	mov	r4,zero
1000507c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005080:	01400204 	movi	r5,8
10005084:	0009883a 	mov	r4,zero
10005088:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
1000508c:	0140b404 	movi	r5,720
10005090:	0009883a 	mov	r4,zero
10005094:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005098:	01400044 	movi	r5,1
1000509c:	0009883a 	mov	r4,zero
100050a0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100050a4:	014004c4 	movi	r5,19
100050a8:	0009883a 	mov	r4,zero
100050ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100050b0:	01414504 	movi	r5,1300
100050b4:	0009883a 	mov	r4,zero
100050b8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100050bc:	0141a004 	movi	r5,1664
100050c0:	0009883a 	mov	r4,zero
100050c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
100050c8:	01408004 	movi	r5,512
100050cc:	0009883a 	mov	r4,zero
100050d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100050d4:	000b883a 	mov	r5,zero
100050d8:	0009883a 	mov	r4,zero
100050dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
100050e0:	01400244 	movi	r5,9
100050e4:	0009883a 	mov	r4,zero
100050e8:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
100050ec:	01415104 	movi	r5,1348
100050f0:	0009883a 	mov	r4,zero
100050f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
100050f8:	01400204 	movi	r5,8
100050fc:	0009883a 	mov	r4,zero
10005100:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005104:	0140a404 	movi	r5,656
10005108:	0009883a 	mov	r4,zero
1000510c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005110:	01401044 	movi	r5,65
10005114:	0009883a 	mov	r4,zero
10005118:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000511c:	014004c4 	movi	r5,19
10005120:	0009883a 	mov	r4,zero
10005124:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005128:	01414804 	movi	r5,1312
1000512c:	0009883a 	mov	r4,zero
10005130:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10005134:	01415304 	movi	r5,1356
10005138:	0009883a 	mov	r4,zero
1000513c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
10005140:	01400044 	movi	r5,1
10005144:	0009883a 	mov	r4,zero
10005148:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
1000514c:	0140a404 	movi	r5,656
10005150:	0009883a 	mov	r4,zero
10005154:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005158:	01400044 	movi	r5,1
1000515c:	0009883a 	mov	r4,zero
10005160:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005164:	014004c4 	movi	r5,19
10005168:	0009883a 	mov	r4,zero
1000516c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005170:	01414b04 	movi	r5,1324
10005174:	0009883a 	mov	r4,zero
10005178:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
1000517c:	000b883a 	mov	r5,zero
10005180:	0009883a 	mov	r4,zero
10005184:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005188:	000b883a 	mov	r5,zero
1000518c:	0009883a 	mov	r4,zero
10005190:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10005194:	01408404 	movi	r5,528
10005198:	0009883a 	mov	r4,zero
1000519c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100051a0:	01401044 	movi	r5,65
100051a4:	0009883a 	mov	r4,zero
100051a8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100051ac:	014004c4 	movi	r5,19
100051b0:	0009883a 	mov	r4,zero
100051b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100051b8:	000b883a 	mov	r5,zero
100051bc:	0009883a 	mov	r4,zero
100051c0:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100051c4:	01414004 	movi	r5,1280
100051c8:	01006c04 	movi	r4,432
100051cc:	0004ae40 	call	10004ae4 <UsbWrite>
}
100051d0:	0001883a 	nop
100051d4:	e037883a 	mov	sp,fp
100051d8:	dfc00117 	ldw	ra,4(sp)
100051dc:	df000017 	ldw	fp,0(sp)
100051e0:	dec00204 	addi	sp,sp,8
100051e4:	f800283a 	ret

100051e8 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
100051e8:	defffe04 	addi	sp,sp,-8
100051ec:	dfc00115 	stw	ra,4(sp)
100051f0:	df000015 	stw	fp,0(sp)
100051f4:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100051f8:	01414004 	movi	r5,1280
100051fc:	01000084 	movi	r4,2
10005200:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005204:	01414304 	movi	r5,1292
10005208:	0009883a 	mov	r4,zero
1000520c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005210:	01400204 	movi	r5,8
10005214:	0009883a 	mov	r4,zero
10005218:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
1000521c:	0140b404 	movi	r5,720
10005220:	0009883a 	mov	r4,zero
10005224:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005228:	01400044 	movi	r5,1
1000522c:	0009883a 	mov	r4,zero
10005230:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005234:	014004c4 	movi	r5,19
10005238:	0009883a 	mov	r4,zero
1000523c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005240:	01414504 	movi	r5,1300
10005244:	0009883a 	mov	r4,zero
10005248:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
1000524c:	0141a004 	movi	r5,1664
10005250:	0009883a 	mov	r4,zero
10005254:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10005258:	01408004 	movi	r5,512
1000525c:	0009883a 	mov	r4,zero
10005260:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10005264:	000b883a 	mov	r5,zero
10005268:	0009883a 	mov	r4,zero
1000526c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
10005270:	01403fc4 	movi	r5,255
10005274:	0009883a 	mov	r4,zero
10005278:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
1000527c:	01415704 	movi	r5,1372
10005280:	0009883a 	mov	r4,zero
10005284:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005288:	01400204 	movi	r5,8
1000528c:	0009883a 	mov	r4,zero
10005290:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005294:	0140a404 	movi	r5,656
10005298:	0009883a 	mov	r4,zero
1000529c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100052a0:	01401044 	movi	r5,65
100052a4:	0009883a 	mov	r4,zero
100052a8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100052ac:	014004c4 	movi	r5,19
100052b0:	0009883a 	mov	r4,zero
100052b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
100052b8:	01414804 	movi	r5,1312
100052bc:	0009883a 	mov	r4,zero
100052c0:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
100052c4:	01415904 	movi	r5,1380
100052c8:	0009883a 	mov	r4,zero
100052cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100052d0:	01400204 	movi	r5,8
100052d4:	0009883a 	mov	r4,zero
100052d8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100052dc:	0140a404 	movi	r5,656
100052e0:	0009883a 	mov	r4,zero
100052e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100052e8:	01400044 	movi	r5,1
100052ec:	0009883a 	mov	r4,zero
100052f0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100052f4:	014004c4 	movi	r5,19
100052f8:	0009883a 	mov	r4,zero
100052fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005300:	01414b04 	movi	r5,1324
10005304:	0009883a 	mov	r4,zero
10005308:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
1000530c:	01415b04 	movi	r5,1388
10005310:	0009883a 	mov	r4,zero
10005314:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10005318:	01400204 	movi	r5,8
1000531c:	0009883a 	mov	r4,zero
10005320:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10005324:	0140a404 	movi	r5,656
10005328:	0009883a 	mov	r4,zero
1000532c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005330:	01401044 	movi	r5,65
10005334:	0009883a 	mov	r4,zero
10005338:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
1000533c:	014004c4 	movi	r5,19
10005340:	0009883a 	mov	r4,zero
10005344:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10005348:	01414e04 	movi	r5,1336
1000534c:	0009883a 	mov	r4,zero
10005350:	00012400 	call	10001240 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
10005354:	01415d04 	movi	r5,1396
10005358:	0009883a 	mov	r4,zero
1000535c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10005360:	01400204 	movi	r5,8
10005364:	0009883a 	mov	r4,zero
10005368:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
1000536c:	0140a404 	movi	r5,656
10005370:	0009883a 	mov	r4,zero
10005374:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005378:	01400044 	movi	r5,1
1000537c:	0009883a 	mov	r4,zero
10005380:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005384:	014004c4 	movi	r5,19
10005388:	0009883a 	mov	r4,zero
1000538c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10005390:	01415104 	movi	r5,1348
10005394:	0009883a 	mov	r4,zero
10005398:	00012400 	call	10001240 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
1000539c:	01415f04 	movi	r5,1404
100053a0:	0009883a 	mov	r4,zero
100053a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
100053a8:	01400084 	movi	r5,2
100053ac:	0009883a 	mov	r4,zero
100053b0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100053b4:	0140a404 	movi	r5,656
100053b8:	0009883a 	mov	r4,zero
100053bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
100053c0:	01401044 	movi	r5,65
100053c4:	0009883a 	mov	r4,zero
100053c8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100053cc:	014004c4 	movi	r5,19
100053d0:	0009883a 	mov	r4,zero
100053d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
100053d8:	01415404 	movi	r5,1360
100053dc:	0009883a 	mov	r4,zero
100053e0:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
100053e4:	000b883a 	mov	r5,zero
100053e8:	0009883a 	mov	r4,zero
100053ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
100053f0:	000b883a 	mov	r5,zero
100053f4:	0009883a 	mov	r4,zero
100053f8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
100053fc:	01408404 	movi	r5,528
10005400:	0009883a 	mov	r4,zero
10005404:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
10005408:	01401044 	movi	r5,65
1000540c:	0009883a 	mov	r4,zero
10005410:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005414:	014004c4 	movi	r5,19
10005418:	0009883a 	mov	r4,zero
1000541c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10005420:	000b883a 	mov	r5,zero
10005424:	0009883a 	mov	r4,zero
10005428:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000542c:	01414004 	movi	r5,1280
10005430:	01006c04 	movi	r4,432
10005434:	0004ae40 	call	10004ae4 <UsbWrite>
}
10005438:	0001883a 	nop
1000543c:	e037883a 	mov	sp,fp
10005440:	dfc00117 	ldw	ra,4(sp)
10005444:	df000017 	ldw	fp,0(sp)
10005448:	dec00204 	addi	sp,sp,8
1000544c:	f800283a 	ret

10005450 <UsbSetConfig>:

void UsbSetConfig()
{
10005450:	defffe04 	addi	sp,sp,-8
10005454:	dfc00115 	stw	ra,4(sp)
10005458:	df000015 	stw	fp,0(sp)
1000545c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005460:	01414004 	movi	r5,1280
10005464:	01000084 	movi	r4,2
10005468:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000546c:	01414304 	movi	r5,1292
10005470:	0009883a 	mov	r4,zero
10005474:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005478:	01400204 	movi	r5,8
1000547c:	0009883a 	mov	r4,zero
10005480:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10005484:	0140b404 	movi	r5,720
10005488:	0009883a 	mov	r4,zero
1000548c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005490:	01400044 	movi	r5,1
10005494:	0009883a 	mov	r4,zero
10005498:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000549c:	014004c4 	movi	r5,19
100054a0:	0009883a 	mov	r4,zero
100054a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100054a8:	01414504 	movi	r5,1300
100054ac:	0009883a 	mov	r4,zero
100054b0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
100054b4:	01424004 	movi	r5,2304
100054b8:	0009883a 	mov	r4,zero
100054bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
100054c0:	01400044 	movi	r5,1
100054c4:	0009883a 	mov	r4,zero
100054c8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100054cc:	000b883a 	mov	r5,zero
100054d0:	0009883a 	mov	r4,zero
100054d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100054d8:	000b883a 	mov	r5,zero
100054dc:	0009883a 	mov	r4,zero
100054e0:	00012400 	call	10001240 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
100054e4:	000b883a 	mov	r5,zero
100054e8:	0009883a 	mov	r4,zero
100054ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
100054f0:	000b883a 	mov	r5,zero
100054f4:	0009883a 	mov	r4,zero
100054f8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
100054fc:	0140a404 	movi	r5,656
10005500:	0009883a 	mov	r4,zero
10005504:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10005508:	01401044 	movi	r5,65
1000550c:	0009883a 	mov	r4,zero
10005510:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005514:	014004c4 	movi	r5,19
10005518:	0009883a 	mov	r4,zero
1000551c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005520:	000b883a 	mov	r5,zero
10005524:	0009883a 	mov	r4,zero
10005528:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000552c:	01414004 	movi	r5,1280
10005530:	01006c04 	movi	r4,432
10005534:	0004ae40 	call	10004ae4 <UsbWrite>

}
10005538:	0001883a 	nop
1000553c:	e037883a 	mov	sp,fp
10005540:	dfc00117 	ldw	ra,4(sp)
10005544:	df000017 	ldw	fp,0(sp)
10005548:	dec00204 	addi	sp,sp,8
1000554c:	f800283a 	ret

10005550 <UsbClassRequest>:

void UsbClassRequest()
{
10005550:	defffe04 	addi	sp,sp,-8
10005554:	dfc00115 	stw	ra,4(sp)
10005558:	df000015 	stw	fp,0(sp)
1000555c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005560:	01414004 	movi	r5,1280
10005564:	01000084 	movi	r4,2
10005568:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000556c:	01414304 	movi	r5,1292
10005570:	0009883a 	mov	r4,zero
10005574:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005578:	01400204 	movi	r5,8
1000557c:	0009883a 	mov	r4,zero
10005580:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10005584:	0140b404 	movi	r5,720
10005588:	0009883a 	mov	r4,zero
1000558c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005590:	01400044 	movi	r5,1
10005594:	0009883a 	mov	r4,zero
10005598:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000559c:	014004c4 	movi	r5,19
100055a0:	0009883a 	mov	r4,zero
100055a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100055a8:	01414504 	movi	r5,1300
100055ac:	0009883a 	mov	r4,zero
100055b0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
100055b4:	01428844 	movi	r5,2593
100055b8:	0009883a 	mov	r4,zero
100055bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
100055c0:	000b883a 	mov	r5,zero
100055c4:	0009883a 	mov	r4,zero
100055c8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100055cc:	000b883a 	mov	r5,zero
100055d0:	0009883a 	mov	r4,zero
100055d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100055d8:	000b883a 	mov	r5,zero
100055dc:	0009883a 	mov	r4,zero
100055e0:	00012400 	call	10001240 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
100055e4:	000b883a 	mov	r5,zero
100055e8:	0009883a 	mov	r4,zero
100055ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
100055f0:	000b883a 	mov	r5,zero
100055f4:	0009883a 	mov	r4,zero
100055f8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
100055fc:	0140a404 	movi	r5,656
10005600:	0009883a 	mov	r4,zero
10005604:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10005608:	01401044 	movi	r5,65
1000560c:	0009883a 	mov	r4,zero
10005610:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005614:	014004c4 	movi	r5,19
10005618:	0009883a 	mov	r4,zero
1000561c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005620:	000b883a 	mov	r5,zero
10005624:	0009883a 	mov	r4,zero
10005628:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000562c:	01414004 	movi	r5,1280
10005630:	01006c04 	movi	r4,432
10005634:	0004ae40 	call	10004ae4 <UsbWrite>
}
10005638:	0001883a 	nop
1000563c:	e037883a 	mov	sp,fp
10005640:	dfc00117 	ldw	ra,4(sp)
10005644:	df000017 	ldw	fp,0(sp)
10005648:	dec00204 	addi	sp,sp,8
1000564c:	f800283a 	ret

10005650 <UsbGetHidDesc>:


void UsbGetHidDesc()
{
10005650:	defffe04 	addi	sp,sp,-8
10005654:	dfc00115 	stw	ra,4(sp)
10005658:	df000015 	stw	fp,0(sp)
1000565c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005660:	01414004 	movi	r5,1280
10005664:	01000084 	movi	r4,2
10005668:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000566c:	01414304 	movi	r5,1292
10005670:	0009883a 	mov	r4,zero
10005674:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005678:	01400204 	movi	r5,8
1000567c:	0009883a 	mov	r4,zero
10005680:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10005684:	0140b404 	movi	r5,720
10005688:	0009883a 	mov	r4,zero
1000568c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005690:	01400044 	movi	r5,1
10005694:	0009883a 	mov	r4,zero
10005698:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000569c:	014004c4 	movi	r5,19
100056a0:	0009883a 	mov	r4,zero
100056a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100056a8:	01414504 	movi	r5,1300
100056ac:	0009883a 	mov	r4,zero
100056b0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
100056b4:	0141a044 	movi	r5,1665
100056b8:	0009883a 	mov	r4,zero
100056bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
100056c0:	01484004 	movi	r5,8448
100056c4:	0009883a 	mov	r4,zero
100056c8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100056cc:	000b883a 	mov	r5,zero
100056d0:	0009883a 	mov	r4,zero
100056d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
100056d8:	01401ec4 	movi	r5,123
100056dc:	0009883a 	mov	r4,zero
100056e0:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
100056e4:	01415104 	movi	r5,1348
100056e8:	0009883a 	mov	r4,zero
100056ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
100056f0:	01400204 	movi	r5,8
100056f4:	0009883a 	mov	r4,zero
100056f8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100056fc:	0140a404 	movi	r5,656
10005700:	0009883a 	mov	r4,zero
10005704:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005708:	01401044 	movi	r5,65
1000570c:	0009883a 	mov	r4,zero
10005710:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005714:	014004c4 	movi	r5,19
10005718:	0009883a 	mov	r4,zero
1000571c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005720:	01414804 	movi	r5,1312
10005724:	0009883a 	mov	r4,zero
10005728:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
1000572c:	000b883a 	mov	r5,zero
10005730:	0009883a 	mov	r4,zero
10005734:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005738:	000b883a 	mov	r5,zero
1000573c:	0009883a 	mov	r4,zero
10005740:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10005744:	01408404 	movi	r5,528
10005748:	0009883a 	mov	r4,zero
1000574c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005750:	01401044 	movi	r5,65
10005754:	0009883a 	mov	r4,zero
10005758:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
1000575c:	014004c4 	movi	r5,19
10005760:	0009883a 	mov	r4,zero
10005764:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10005768:	000b883a 	mov	r5,zero
1000576c:	0009883a 	mov	r4,zero
10005770:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005774:	01414004 	movi	r5,1280
10005778:	01006c04 	movi	r4,432
1000577c:	0004ae40 	call	10004ae4 <UsbWrite>

}
10005780:	0001883a 	nop
10005784:	e037883a 	mov	sp,fp
10005788:	dfc00117 	ldw	ra,4(sp)
1000578c:	df000017 	ldw	fp,0(sp)
10005790:	dec00204 	addi	sp,sp,8
10005794:	f800283a 	ret

10005798 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
10005798:	defffe04 	addi	sp,sp,-8
1000579c:	dfc00115 	stw	ra,4(sp)
100057a0:	df000015 	stw	fp,0(sp)
100057a4:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100057a8:	01414004 	movi	r5,1280
100057ac:	01000084 	movi	r4,2
100057b0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
100057b4:	01414304 	movi	r5,1292
100057b8:	0009883a 	mov	r4,zero
100057bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100057c0:	01400204 	movi	r5,8
100057c4:	0009883a 	mov	r4,zero
100057c8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100057cc:	0140b404 	movi	r5,720
100057d0:	0009883a 	mov	r4,zero
100057d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
100057d8:	01400044 	movi	r5,1
100057dc:	0009883a 	mov	r4,zero
100057e0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100057e4:	014004c4 	movi	r5,19
100057e8:	0009883a 	mov	r4,zero
100057ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100057f0:	01414504 	movi	r5,1300
100057f4:	0009883a 	mov	r4,zero
100057f8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
100057fc:	0141a044 	movi	r5,1665
10005800:	0009883a 	mov	r4,zero
10005804:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
10005808:	01488004 	movi	r5,8704
1000580c:	0009883a 	mov	r4,zero
10005810:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10005814:	000b883a 	mov	r5,zero
10005818:	0009883a 	mov	r4,zero
1000581c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10005820:	01401ec4 	movi	r5,123
10005824:	0009883a 	mov	r4,zero
10005828:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
1000582c:	01416004 	movi	r5,1408
10005830:	0009883a 	mov	r4,zero
10005834:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005838:	01400204 	movi	r5,8
1000583c:	0009883a 	mov	r4,zero
10005840:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005844:	0140a404 	movi	r5,656
10005848:	0009883a 	mov	r4,zero
1000584c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005850:	01401044 	movi	r5,65
10005854:	0009883a 	mov	r4,zero
10005858:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000585c:	014004c4 	movi	r5,19
10005860:	0009883a 	mov	r4,zero
10005864:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005868:	01414804 	movi	r5,1312
1000586c:	0009883a 	mov	r4,zero
10005870:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
10005874:	01416204 	movi	r5,1416
10005878:	0009883a 	mov	r4,zero
1000587c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10005880:	01400204 	movi	r5,8
10005884:	0009883a 	mov	r4,zero
10005888:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
1000588c:	0140a404 	movi	r5,656
10005890:	0009883a 	mov	r4,zero
10005894:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005898:	01400044 	movi	r5,1
1000589c:	0009883a 	mov	r4,zero
100058a0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100058a4:	014004c4 	movi	r5,19
100058a8:	0009883a 	mov	r4,zero
100058ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100058b0:	01414b04 	movi	r5,1324
100058b4:	0009883a 	mov	r4,zero
100058b8:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
100058bc:	01416404 	movi	r5,1424
100058c0:	0009883a 	mov	r4,zero
100058c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
100058c8:	01400204 	movi	r5,8
100058cc:	0009883a 	mov	r4,zero
100058d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100058d4:	0140a404 	movi	r5,656
100058d8:	0009883a 	mov	r4,zero
100058dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100058e0:	01401044 	movi	r5,65
100058e4:	0009883a 	mov	r4,zero
100058e8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100058ec:	014004c4 	movi	r5,19
100058f0:	0009883a 	mov	r4,zero
100058f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
100058f8:	01414e04 	movi	r5,1336
100058fc:	0009883a 	mov	r4,zero
10005900:	00012400 	call	10001240 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
10005904:	01416604 	movi	r5,1432
10005908:	0009883a 	mov	r4,zero
1000590c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10005910:	01400204 	movi	r5,8
10005914:	0009883a 	mov	r4,zero
10005918:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
1000591c:	0140a404 	movi	r5,656
10005920:	0009883a 	mov	r4,zero
10005924:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005928:	01400044 	movi	r5,1
1000592c:	0009883a 	mov	r4,zero
10005930:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005934:	014004c4 	movi	r5,19
10005938:	0009883a 	mov	r4,zero
1000593c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10005940:	01415104 	movi	r5,1348
10005944:	0009883a 	mov	r4,zero
10005948:	00012400 	call	10001240 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
1000594c:	01416804 	movi	r5,1440
10005950:	0009883a 	mov	r4,zero
10005954:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005958:	01400204 	movi	r5,8
1000595c:	0009883a 	mov	r4,zero
10005960:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005964:	0140a404 	movi	r5,656
10005968:	0009883a 	mov	r4,zero
1000596c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
10005970:	01401044 	movi	r5,65
10005974:	0009883a 	mov	r4,zero
10005978:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000597c:	014004c4 	movi	r5,19
10005980:	0009883a 	mov	r4,zero
10005984:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10005988:	01415404 	movi	r5,1360
1000598c:	0009883a 	mov	r4,zero
10005990:	00012400 	call	10001240 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
10005994:	01416a04 	movi	r5,1448
10005998:	0009883a 	mov	r4,zero
1000599c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100059a0:	01400204 	movi	r5,8
100059a4:	0009883a 	mov	r4,zero
100059a8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100059ac:	0140a404 	movi	r5,656
100059b0:	0009883a 	mov	r4,zero
100059b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100059b8:	01400044 	movi	r5,1
100059bc:	0009883a 	mov	r4,zero
100059c0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100059c4:	014004c4 	movi	r5,19
100059c8:	0009883a 	mov	r4,zero
100059cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
100059d0:	01415704 	movi	r5,1372
100059d4:	0009883a 	mov	r4,zero
100059d8:	00012400 	call	10001240 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
100059dc:	01416c04 	movi	r5,1456
100059e0:	0009883a 	mov	r4,zero
100059e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
100059e8:	01400204 	movi	r5,8
100059ec:	0009883a 	mov	r4,zero
100059f0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
100059f4:	0140a404 	movi	r5,656
100059f8:	0009883a 	mov	r4,zero
100059fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
10005a00:	01401044 	movi	r5,65
10005a04:	0009883a 	mov	r4,zero
10005a08:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005a0c:	014004c4 	movi	r5,19
10005a10:	0009883a 	mov	r4,zero
10005a14:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
10005a18:	01415a04 	movi	r5,1384
10005a1c:	0009883a 	mov	r4,zero
10005a20:	00012400 	call	10001240 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
10005a24:	01416e04 	movi	r5,1464
10005a28:	0009883a 	mov	r4,zero
10005a2c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
10005a30:	014000c4 	movi	r5,3
10005a34:	0009883a 	mov	r4,zero
10005a38:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10005a3c:	0140a404 	movi	r5,656
10005a40:	0009883a 	mov	r4,zero
10005a44:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005a48:	01400044 	movi	r5,1
10005a4c:	0009883a 	mov	r4,zero
10005a50:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
10005a54:	014004c4 	movi	r5,19
10005a58:	0009883a 	mov	r4,zero
10005a5c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
10005a60:	01415d04 	movi	r5,1396
10005a64:	0009883a 	mov	r4,zero
10005a68:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
10005a6c:	000b883a 	mov	r5,zero
10005a70:	0009883a 	mov	r4,zero
10005a74:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10005a78:	000b883a 	mov	r5,zero
10005a7c:	0009883a 	mov	r4,zero
10005a80:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
10005a84:	01408404 	movi	r5,528
10005a88:	0009883a 	mov	r4,zero
10005a8c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005a90:	01401044 	movi	r5,65
10005a94:	0009883a 	mov	r4,zero
10005a98:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005a9c:	014004c4 	movi	r5,19
10005aa0:	0009883a 	mov	r4,zero
10005aa4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005aa8:	000b883a 	mov	r5,zero
10005aac:	0009883a 	mov	r4,zero
10005ab0:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005ab4:	01414004 	movi	r5,1280
10005ab8:	01006c04 	movi	r4,432
10005abc:	0004ae40 	call	10004ae4 <UsbWrite>

}
10005ac0:	0001883a 	nop
10005ac4:	e037883a 	mov	sp,fp
10005ac8:	dfc00117 	ldw	ra,4(sp)
10005acc:	df000017 	ldw	fp,0(sp)
10005ad0:	dec00204 	addi	sp,sp,8
10005ad4:	f800283a 	ret

10005ad8 <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
10005ad8:	defffd04 	addi	sp,sp,-12
10005adc:	dfc00215 	stw	ra,8(sp)
10005ae0:	df000115 	stw	fp,4(sp)
10005ae4:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
10005ae8:	01005104 	movi	r4,324
10005aec:	0004b400 	call	10004b40 <UsbRead>
10005af0:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005af4:	000b883a 	mov	r5,zero
10005af8:	01005104 	movi	r4,324
10005afc:	0004ae40 	call	10004ae4 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10005b00:	00000d06 	br	10005b38 <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
10005b04:	e0bfff8b 	ldhu	r2,-2(fp)
10005b08:	10000526 	beq	r2,zero,10005b20 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
10005b0c:	e0bfff8b 	ldhu	r2,-2(fp)
10005b10:	100b883a 	mov	r5,r2
10005b14:	010400b4 	movhi	r4,4098
10005b18:	21148b04 	addi	r4,r4,21036
10005b1c:	0015aa00 	call	10015aa0 <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
10005b20:	01005104 	movi	r4,324
10005b24:	0004b400 	call	10004b40 <UsbRead>
10005b28:	e0bfff8d 	sth	r2,-2(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005b2c:	000b883a 	mov	r5,zero
10005b30:	01005104 	movi	r4,324
10005b34:	0004ae40 	call	10004ae4 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10005b38:	e0bfff8b 	ldhu	r2,-2(fp)
10005b3c:	10840018 	cmpnei	r2,r2,4096
10005b40:	103ff01e 	bne	r2,zero,10005b04 <UsbWaitTDListDone+0x2c>
	}

	return usb_ctl_val;
10005b44:	e0bfff8b 	ldhu	r2,-2(fp)
}
10005b48:	e037883a 	mov	sp,fp
10005b4c:	dfc00117 	ldw	ra,4(sp)
10005b50:	df000017 	ldw	fp,0(sp)
10005b54:	dec00204 	addi	sp,sp,8
10005b58:	f800283a 	ret

10005b5c <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
10005b5c:	defffd04 	addi	sp,sp,-12
10005b60:	dfc00215 	stw	ra,8(sp)
10005b64:	df000115 	stw	fp,4(sp)
10005b68:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
10005b6c:	010000c4 	movi	r4,3
10005b70:	00012b40 	call	100012b4 <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
10005b74:	01005104 	movi	r4,324
10005b78:	0004b400 	call	10004b40 <UsbRead>
10005b7c:	10bfffcc 	andi	r2,r2,65535
10005b80:	10840018 	cmpnei	r2,r2,4096
10005b84:	1000091e 	bne	r2,zero,10005bac <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005b88:	000b883a 	mov	r5,zero
10005b8c:	01005104 	movi	r4,324
10005b90:	0004ae40 	call	10004ae4 <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10005b94:	0001883a 	nop
10005b98:	010000c4 	movi	r4,3
10005b9c:	00012b40 	call	100012b4 <IO_read>
10005ba0:	10bfffcc 	andi	r2,r2,65535
10005ba4:	1080040c 	andi	r2,r2,16
10005ba8:	103ffb26 	beq	r2,zero,10005b98 <UsbGetRetryCnt+0x3c>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
10005bac:	01414204 	movi	r5,1288
10005bb0:	01000084 	movi	r4,2
10005bb4:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10005bb8:	0009883a 	mov	r4,zero
10005bbc:	00012b40 	call	100012b4 <IO_read>
10005bc0:	e0bfff8d 	sth	r2,-2(fp)

	return usb_ctl_val;
10005bc4:	e0bfff8b 	ldhu	r2,-2(fp)
}
10005bc8:	e037883a 	mov	sp,fp
10005bcc:	dfc00117 	ldw	ra,4(sp)
10005bd0:	df000017 	ldw	fp,0(sp)
10005bd4:	dec00204 	addi	sp,sp,8
10005bd8:	f800283a 	ret

10005bdc <UsbPrintMem>:


void UsbPrintMem()
{
10005bdc:	defffc04 	addi	sp,sp,-16
10005be0:	dfc00315 	stw	ra,12(sp)
10005be4:	df000215 	stw	fp,8(sp)
10005be8:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
10005bec:	01414004 	movi	r5,1280
10005bf0:	01000084 	movi	r4,2
10005bf4:	00012400 	call	10001240 <IO_write>
	for (i = 0; i <= 200; i += 2)
10005bf8:	e03fff15 	stw	zero,-4(fp)
10005bfc:	00000e06 	br	10005c38 <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
10005c00:	0009883a 	mov	r4,zero
10005c04:	00012b40 	call	100012b4 <IO_read>
10005c08:	10bfffcc 	andi	r2,r2,65535
10005c0c:	e0bffe15 	stw	r2,-8(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
10005c10:	e0bfff17 	ldw	r2,-4(fp)
10005c14:	10814004 	addi	r2,r2,1280
10005c18:	e1bffe17 	ldw	r6,-8(fp)
10005c1c:	100b883a 	mov	r5,r2
10005c20:	010400b4 	movhi	r4,4098
10005c24:	21149304 	addi	r4,r4,21068
10005c28:	0015aa00 	call	10015aa0 <printf>
	for (i = 0; i <= 200; i += 2)
10005c2c:	e0bfff17 	ldw	r2,-4(fp)
10005c30:	10800084 	addi	r2,r2,2
10005c34:	e0bfff15 	stw	r2,-4(fp)
10005c38:	e0bfff17 	ldw	r2,-4(fp)
10005c3c:	10803250 	cmplti	r2,r2,201
10005c40:	103fef1e 	bne	r2,zero,10005c00 <UsbPrintMem+0x24>
	}
}
10005c44:	0001883a 	nop
10005c48:	e037883a 	mov	sp,fp
10005c4c:	dfc00117 	ldw	ra,4(sp)
10005c50:	df000017 	ldw	fp,0(sp)
10005c54:	dec00204 	addi	sp,sp,8
10005c58:	f800283a 	ret

10005c5c <addToSet>:
	}
};

std::set<TileGroup> workset;

void addToSet(TileCollection k) {
10005c5c:	defffc04 	addi	sp,sp,-16
10005c60:	dfc00315 	stw	ra,12(sp)
10005c64:	df000215 	stw	fp,8(sp)
10005c68:	df000204 	addi	fp,sp,8
10005c6c:	e13ffe0d 	sth	r4,-8(fp)
	TileGroup toInsert(k);
10005c70:	e0bfff84 	addi	r2,fp,-2
10005c74:	e17ffe17 	ldw	r5,-8(fp)
10005c78:	1009883a 	mov	r4,r2
10005c7c:	00060380 	call	10006038 <_ZN9TileGroupC1E10__tile_col>
	workset.insert(toInsert);
10005c80:	e0bfff84 	addi	r2,fp,-2
10005c84:	100b883a 	mov	r5,r2
10005c88:	010400f4 	movhi	r4,4099
10005c8c:	212a7404 	addi	r4,r4,-22064
10005c90:	00062fc0 	call	100062fc <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
10005c94:	1009883a 	mov	r4,r2
10005c98:	180b883a 	mov	r5,r3
}
10005c9c:	0001883a 	nop
10005ca0:	e037883a 	mov	sp,fp
10005ca4:	dfc00117 	ldw	ra,4(sp)
10005ca8:	df000017 	ldw	fp,0(sp)
10005cac:	dec00204 	addi	sp,sp,8
10005cb0:	f800283a 	ret

10005cb4 <addPendingPos>:

void addPendingPos(int16_t x, int16_t y) {
10005cb4:	defffb04 	addi	sp,sp,-20
10005cb8:	dfc00415 	stw	ra,16(sp)
10005cbc:	df000315 	stw	fp,12(sp)
10005cc0:	df000304 	addi	fp,sp,12
10005cc4:	2005883a 	mov	r2,r4
10005cc8:	2807883a 	mov	r3,r5
10005ccc:	e0bffe0d 	sth	r2,-8(fp)
10005cd0:	1805883a 	mov	r2,r3
10005cd4:	e0bffd0d 	sth	r2,-12(fp)
	TileGroup toInsert(x,y);
10005cd8:	e0fffe0f 	ldh	r3,-8(fp)
10005cdc:	e13ffd0f 	ldh	r4,-12(fp)
10005ce0:	e0bfff84 	addi	r2,fp,-2
10005ce4:	200d883a 	mov	r6,r4
10005ce8:	180b883a 	mov	r5,r3
10005cec:	1009883a 	mov	r4,r2
10005cf0:	00060740 	call	10006074 <_ZN9TileGroupC1Ess>
	workset.insert(toInsert);
10005cf4:	e0bfff84 	addi	r2,fp,-2
10005cf8:	100b883a 	mov	r5,r2
10005cfc:	010400f4 	movhi	r4,4099
10005d00:	212a7404 	addi	r4,r4,-22064
10005d04:	00062fc0 	call	100062fc <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
10005d08:	1009883a 	mov	r4,r2
10005d0c:	180b883a 	mov	r5,r3
}
10005d10:	0001883a 	nop
10005d14:	e037883a 	mov	sp,fp
10005d18:	dfc00117 	ldw	ra,4(sp)
10005d1c:	df000017 	ldw	fp,0(sp)
10005d20:	dec00204 	addi	sp,sp,8
10005d24:	f800283a 	ret

10005d28 <getOne>:

TileCollection getOne() {
10005d28:	defffa04 	addi	sp,sp,-24
10005d2c:	dfc00515 	stw	ra,20(sp)
10005d30:	df000415 	stw	fp,16(sp)
10005d34:	df000404 	addi	fp,sp,16
	std::set<TileGroup>::iterator tempit = workset.begin();
10005d38:	010400f4 	movhi	r4,4099
10005d3c:	212a7404 	addi	r4,r4,-22064
10005d40:	00063800 	call	10006380 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10005d44:	e0bffd15 	stw	r2,-12(fp)
	if(tempit != workset.end()) {
10005d48:	010400f4 	movhi	r4,4099
10005d4c:	212a7404 	addi	r4,r4,-22064
10005d50:	00063b40 	call	100063b4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10005d54:	e0bffe15 	stw	r2,-8(fp)
10005d58:	e0fffe04 	addi	r3,fp,-8
10005d5c:	e0bffd04 	addi	r2,fp,-12
10005d60:	180b883a 	mov	r5,r3
10005d64:	1009883a 	mov	r4,r2
10005d68:	00063e80 	call	100063e8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10005d6c:	10803fcc 	andi	r2,r2,255
10005d70:	10001126 	beq	r2,zero,10005db8 <getOne+0x90>
		TileCollection first = (*tempit).k;
10005d74:	e0bffd04 	addi	r2,fp,-12
10005d78:	1009883a 	mov	r4,r2
10005d7c:	00064200 	call	10006420 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
10005d80:	10c00003 	ldbu	r3,0(r2)
10005d84:	e0fffc85 	stb	r3,-14(fp)
10005d88:	10800043 	ldbu	r2,1(r2)
10005d8c:	e0bffcc5 	stb	r2,-13(fp)
		workset.erase(*tempit);
10005d90:	e0bffd04 	addi	r2,fp,-12
10005d94:	1009883a 	mov	r4,r2
10005d98:	00064200 	call	10006420 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
10005d9c:	100b883a 	mov	r5,r2
10005da0:	010400f4 	movhi	r4,4099
10005da4:	212a7404 	addi	r4,r4,-22064
10005da8:	00064580 	call	10006458 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>
		return first;
10005dac:	e0bffc8b 	ldhu	r2,-14(fp)
10005db0:	e0bfff8d 	sth	r2,-2(fp)
10005db4:	00000606 	br	10005dd0 <getOne+0xa8>
	} else {
		TileCollection wrong;
		wrong.tile_x = -1;
10005db8:	00bfffc4 	movi	r2,-1
10005dbc:	e0bffc05 	stb	r2,-16(fp)
		wrong.tile_y = -1;
10005dc0:	00bfffc4 	movi	r2,-1
10005dc4:	e0bffc45 	stb	r2,-15(fp)
		return wrong;
10005dc8:	e0bffc0b 	ldhu	r2,-16(fp)
10005dcc:	e0bfff8d 	sth	r2,-2(fp)
10005dd0:	0007883a 	mov	r3,zero
10005dd4:	e0bfff83 	ldbu	r2,-2(fp)
10005dd8:	10803fcc 	andi	r2,r2,255
10005ddc:	013fc004 	movi	r4,-256
10005de0:	1906703a 	and	r3,r3,r4
10005de4:	1884b03a 	or	r2,r3,r2
10005de8:	1007883a 	mov	r3,r2
10005dec:	e0bfffc3 	ldbu	r2,-1(fp)
10005df0:	10803fcc 	andi	r2,r2,255
10005df4:	1008923a 	slli	r4,r2,8
10005df8:	00bffff4 	movhi	r2,65535
10005dfc:	10803fc4 	addi	r2,r2,255
10005e00:	1884703a 	and	r2,r3,r2
10005e04:	1104b03a 	or	r2,r2,r4
10005e08:	1007883a 	mov	r3,r2
10005e0c:	1805883a 	mov	r2,r3
	}
}
10005e10:	e037883a 	mov	sp,fp
10005e14:	dfc00117 	ldw	ra,4(sp)
10005e18:	df000017 	ldw	fp,0(sp)
10005e1c:	dec00204 	addi	sp,sp,8
10005e20:	f800283a 	ret

10005e24 <hasRemain>:

bool hasRemain() {
10005e24:	defffc04 	addi	sp,sp,-16
10005e28:	dfc00315 	stw	ra,12(sp)
10005e2c:	df000215 	stw	fp,8(sp)
10005e30:	df000204 	addi	fp,sp,8
	std::set<TileGroup>::iterator tempit = workset.begin();
10005e34:	010400f4 	movhi	r4,4099
10005e38:	212a7404 	addi	r4,r4,-22064
10005e3c:	00063800 	call	10006380 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10005e40:	e0bffe15 	stw	r2,-8(fp)
	return tempit != workset.end();
10005e44:	010400f4 	movhi	r4,4099
10005e48:	212a7404 	addi	r4,r4,-22064
10005e4c:	00063b40 	call	100063b4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10005e50:	e0bfff15 	stw	r2,-4(fp)
10005e54:	e0ffff04 	addi	r3,fp,-4
10005e58:	e0bffe04 	addi	r2,fp,-8
10005e5c:	180b883a 	mov	r5,r3
10005e60:	1009883a 	mov	r4,r2
10005e64:	00063e80 	call	100063e8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10005e68:	0001883a 	nop
}
10005e6c:	e037883a 	mov	sp,fp
10005e70:	dfc00117 	ldw	ra,4(sp)
10005e74:	df000017 	ldw	fp,0(sp)
10005e78:	dec00204 	addi	sp,sp,8
10005e7c:	f800283a 	ret

10005e80 <clearQueue>:

void clearQueue() {
10005e80:	defffe04 	addi	sp,sp,-8
10005e84:	dfc00115 	stw	ra,4(sp)
10005e88:	df000015 	stw	fp,0(sp)
10005e8c:	d839883a 	mov	fp,sp
	workset.clear();
10005e90:	010400f4 	movhi	r4,4099
10005e94:	212a7404 	addi	r4,r4,-22064
10005e98:	00064940 	call	10006494 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>
}
10005e9c:	0001883a 	nop
10005ea0:	e037883a 	mov	sp,fp
10005ea4:	dfc00117 	ldw	ra,4(sp)
10005ea8:	df000017 	ldw	fp,0(sp)
10005eac:	dec00204 	addi	sp,sp,8
10005eb0:	f800283a 	ret

10005eb4 <_Z41__static_initialization_and_destruction_0ii>:
10005eb4:	defffc04 	addi	sp,sp,-16
10005eb8:	dfc00315 	stw	ra,12(sp)
10005ebc:	df000215 	stw	fp,8(sp)
10005ec0:	df000204 	addi	fp,sp,8
10005ec4:	e13fff15 	stw	r4,-4(fp)
10005ec8:	e17ffe15 	stw	r5,-8(fp)
10005ecc:	e0bfff17 	ldw	r2,-4(fp)
10005ed0:	10800058 	cmpnei	r2,r2,1
10005ed4:	1000061e 	bne	r2,zero,10005ef0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
10005ed8:	e0fffe17 	ldw	r3,-8(fp)
10005edc:	00bfffd4 	movui	r2,65535
10005ee0:	1880031e 	bne	r3,r2,10005ef0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
std::set<TileGroup> workset;
10005ee4:	010400f4 	movhi	r4,4099
10005ee8:	212a7404 	addi	r4,r4,-22064
10005eec:	00061c00 	call	100061c0 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>
10005ef0:	e0bfff17 	ldw	r2,-4(fp)
10005ef4:	1000061e 	bne	r2,zero,10005f10 <_Z41__static_initialization_and_destruction_0ii+0x5c>
10005ef8:	e0fffe17 	ldw	r3,-8(fp)
10005efc:	00bfffd4 	movui	r2,65535
10005f00:	1880031e 	bne	r3,r2,10005f10 <_Z41__static_initialization_and_destruction_0ii+0x5c>
10005f04:	010400f4 	movhi	r4,4099
10005f08:	212a7404 	addi	r4,r4,-22064
10005f0c:	0007e700 	call	10007e70 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>
}
10005f10:	0001883a 	nop
10005f14:	e037883a 	mov	sp,fp
10005f18:	dfc00117 	ldw	ra,4(sp)
10005f1c:	df000017 	ldw	fp,0(sp)
10005f20:	dec00204 	addi	sp,sp,8
10005f24:	f800283a 	ret

10005f28 <_GLOBAL__sub_I_workset>:
10005f28:	defffe04 	addi	sp,sp,-8
10005f2c:	dfc00115 	stw	ra,4(sp)
10005f30:	df000015 	stw	fp,0(sp)
10005f34:	d839883a 	mov	fp,sp
10005f38:	017fffd4 	movui	r5,65535
10005f3c:	01000044 	movi	r4,1
10005f40:	0005eb40 	call	10005eb4 <_Z41__static_initialization_and_destruction_0ii>
10005f44:	e037883a 	mov	sp,fp
10005f48:	dfc00117 	ldw	ra,4(sp)
10005f4c:	df000017 	ldw	fp,0(sp)
10005f50:	dec00204 	addi	sp,sp,8
10005f54:	f800283a 	ret

10005f58 <_GLOBAL__sub_D_workset>:
10005f58:	defffe04 	addi	sp,sp,-8
10005f5c:	dfc00115 	stw	ra,4(sp)
10005f60:	df000015 	stw	fp,0(sp)
10005f64:	d839883a 	mov	fp,sp
10005f68:	017fffd4 	movui	r5,65535
10005f6c:	0009883a 	mov	r4,zero
10005f70:	0005eb40 	call	10005eb4 <_Z41__static_initialization_and_destruction_0ii>
10005f74:	e037883a 	mov	sp,fp
10005f78:	dfc00117 	ldw	ra,4(sp)
10005f7c:	df000017 	ldw	fp,0(sp)
10005f80:	dec00204 	addi	sp,sp,8
10005f84:	f800283a 	ret

10005f88 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
10005f88:	defffd04 	addi	sp,sp,-12
10005f8c:	df000215 	stw	fp,8(sp)
10005f90:	df000204 	addi	fp,sp,8
10005f94:	e13fff15 	stw	r4,-4(fp)
10005f98:	e17ffe15 	stw	r5,-8(fp)
10005f9c:	e0bffe17 	ldw	r2,-8(fp)
10005fa0:	e037883a 	mov	sp,fp
10005fa4:	df000017 	ldw	fp,0(sp)
10005fa8:	dec00104 	addi	sp,sp,4
10005fac:	f800283a 	ret

10005fb0 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
10005fb0:	defffd04 	addi	sp,sp,-12
10005fb4:	dfc00215 	stw	ra,8(sp)
10005fb8:	df000115 	stw	fp,4(sp)
10005fbc:	df000104 	addi	fp,sp,4
10005fc0:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_color = _S_red;
10005fc4:	e0bfff17 	ldw	r2,-4(fp)
10005fc8:	10000015 	stw	zero,0(r2)
      _M_reset();
10005fcc:	e13fff17 	ldw	r4,-4(fp)
10005fd0:	0005fec0 	call	10005fec <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
10005fd4:	0001883a 	nop
10005fd8:	e037883a 	mov	sp,fp
10005fdc:	dfc00117 	ldw	ra,4(sp)
10005fe0:	df000017 	ldw	fp,0(sp)
10005fe4:	dec00204 	addi	sp,sp,8
10005fe8:	f800283a 	ret

10005fec <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
10005fec:	defffe04 	addi	sp,sp,-8
10005ff0:	df000115 	stw	fp,4(sp)
10005ff4:	df000104 	addi	fp,sp,4
10005ff8:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_parent = 0;
10005ffc:	e0bfff17 	ldw	r2,-4(fp)
10006000:	10000115 	stw	zero,4(r2)
      _M_header._M_left = &_M_header;
10006004:	e0ffff17 	ldw	r3,-4(fp)
10006008:	e0bfff17 	ldw	r2,-4(fp)
1000600c:	10c00215 	stw	r3,8(r2)
      _M_header._M_right = &_M_header;
10006010:	e0ffff17 	ldw	r3,-4(fp)
10006014:	e0bfff17 	ldw	r2,-4(fp)
10006018:	10c00315 	stw	r3,12(r2)
      _M_node_count = 0;
1000601c:	e0bfff17 	ldw	r2,-4(fp)
10006020:	10000415 	stw	zero,16(r2)
    }
10006024:	0001883a 	nop
10006028:	e037883a 	mov	sp,fp
1000602c:	df000017 	ldw	fp,0(sp)
10006030:	dec00104 	addi	sp,sp,4
10006034:	f800283a 	ret

10006038 <_ZN9TileGroupC1E10__tile_col>:
	TileGroup(TileCollection i) {
10006038:	defffd04 	addi	sp,sp,-12
1000603c:	df000215 	stw	fp,8(sp)
10006040:	df000204 	addi	fp,sp,8
10006044:	e13fff15 	stw	r4,-4(fp)
10006048:	e17ffe0d 	sth	r5,-8(fp)
		k = i;
1000604c:	e0bfff17 	ldw	r2,-4(fp)
10006050:	e0fffe03 	ldbu	r3,-8(fp)
10006054:	10c00005 	stb	r3,0(r2)
10006058:	e0fffe43 	ldbu	r3,-7(fp)
1000605c:	10c00045 	stb	r3,1(r2)
	}
10006060:	0001883a 	nop
10006064:	e037883a 	mov	sp,fp
10006068:	df000017 	ldw	fp,0(sp)
1000606c:	dec00104 	addi	sp,sp,4
10006070:	f800283a 	ret

10006074 <_ZN9TileGroupC1Ess>:
	TileGroup(int16_t x, int16_t y) {
10006074:	defffc04 	addi	sp,sp,-16
10006078:	df000315 	stw	fp,12(sp)
1000607c:	df000304 	addi	fp,sp,12
10006080:	e13fff15 	stw	r4,-4(fp)
10006084:	2805883a 	mov	r2,r5
10006088:	3007883a 	mov	r3,r6
1000608c:	e0bffe0d 	sth	r2,-8(fp)
10006090:	1805883a 	mov	r2,r3
10006094:	e0bffd0d 	sth	r2,-12(fp)
		k.tile_x = x;
10006098:	e0bffe0b 	ldhu	r2,-8(fp)
1000609c:	1007883a 	mov	r3,r2
100060a0:	e0bfff17 	ldw	r2,-4(fp)
100060a4:	10c00005 	stb	r3,0(r2)
		k.tile_y = y;
100060a8:	e0bffd0b 	ldhu	r2,-12(fp)
100060ac:	1007883a 	mov	r3,r2
100060b0:	e0bfff17 	ldw	r2,-4(fp)
100060b4:	10c00045 	stb	r3,1(r2)
	}
100060b8:	0001883a 	nop
100060bc:	e037883a 	mov	sp,fp
100060c0:	df000017 	ldw	fp,0(sp)
100060c4:	dec00104 	addi	sp,sp,4
100060c8:	f800283a 	ret

100060cc <_ZNK9TileGroupltERKS_>:
	bool operator<(const TileGroup& t) const {
100060cc:	defffd04 	addi	sp,sp,-12
100060d0:	df000215 	stw	fp,8(sp)
100060d4:	df000204 	addi	fp,sp,8
100060d8:	e13fff15 	stw	r4,-4(fp)
100060dc:	e17ffe15 	stw	r5,-8(fp)
		return t.k.tile_x < this->k.tile_x || t.k.tile_y < k.tile_y;
100060e0:	e0bffe17 	ldw	r2,-8(fp)
100060e4:	10c00003 	ldbu	r3,0(r2)
100060e8:	e0bfff17 	ldw	r2,-4(fp)
100060ec:	10800003 	ldbu	r2,0(r2)
100060f0:	18c03fcc 	andi	r3,r3,255
100060f4:	18c0201c 	xori	r3,r3,128
100060f8:	18ffe004 	addi	r3,r3,-128
100060fc:	10803fcc 	andi	r2,r2,255
10006100:	1080201c 	xori	r2,r2,128
10006104:	10bfe004 	addi	r2,r2,-128
10006108:	18800b16 	blt	r3,r2,10006138 <_ZNK9TileGroupltERKS_+0x6c>
1000610c:	e0bffe17 	ldw	r2,-8(fp)
10006110:	10c00043 	ldbu	r3,1(r2)
10006114:	e0bfff17 	ldw	r2,-4(fp)
10006118:	10800043 	ldbu	r2,1(r2)
1000611c:	18c03fcc 	andi	r3,r3,255
10006120:	18c0201c 	xori	r3,r3,128
10006124:	18ffe004 	addi	r3,r3,-128
10006128:	10803fcc 	andi	r2,r2,255
1000612c:	1080201c 	xori	r2,r2,128
10006130:	10bfe004 	addi	r2,r2,-128
10006134:	1880020e 	bge	r3,r2,10006140 <_ZNK9TileGroupltERKS_+0x74>
10006138:	00800044 	movi	r2,1
1000613c:	00000106 	br	10006144 <_ZNK9TileGroupltERKS_+0x78>
10006140:	0005883a 	mov	r2,zero
	}
10006144:	e037883a 	mov	sp,fp
10006148:	df000017 	ldw	fp,0(sp)
1000614c:	dec00104 	addi	sp,sp,4
10006150:	f800283a 	ret

10006154 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
10006154:	defffd04 	addi	sp,sp,-12
10006158:	dfc00215 	stw	ra,8(sp)
1000615c:	df000115 	stw	fp,4(sp)
10006160:	df000104 	addi	fp,sp,4
10006164:	e13fff15 	stw	r4,-4(fp)
10006168:	e13fff17 	ldw	r4,-4(fp)
1000616c:	00062480 	call	10006248 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>
10006170:	0001883a 	nop
10006174:	e037883a 	mov	sp,fp
10006178:	dfc00117 	ldw	ra,4(sp)
1000617c:	df000017 	ldw	fp,0(sp)
10006180:	dec00204 	addi	sp,sp,8
10006184:	f800283a 	ret

10006188 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
10006188:	defffd04 	addi	sp,sp,-12
1000618c:	dfc00215 	stw	ra,8(sp)
10006190:	df000115 	stw	fp,4(sp)
10006194:	df000104 	addi	fp,sp,4
10006198:	e13fff15 	stw	r4,-4(fp)
1000619c:	e0bfff17 	ldw	r2,-4(fp)
100061a0:	1009883a 	mov	r4,r2
100061a4:	00061f80 	call	100061f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>
100061a8:	0001883a 	nop
100061ac:	e037883a 	mov	sp,fp
100061b0:	dfc00117 	ldw	ra,4(sp)
100061b4:	df000017 	ldw	fp,0(sp)
100061b8:	dec00204 	addi	sp,sp,8
100061bc:	f800283a 	ret

100061c0 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      set() : _M_t() { }
#else
      set() = default;
100061c0:	defffd04 	addi	sp,sp,-12
100061c4:	dfc00215 	stw	ra,8(sp)
100061c8:	df000115 	stw	fp,4(sp)
100061cc:	df000104 	addi	fp,sp,4
100061d0:	e13fff15 	stw	r4,-4(fp)
100061d4:	e0bfff17 	ldw	r2,-4(fp)
100061d8:	1009883a 	mov	r4,r2
100061dc:	00061880 	call	10006188 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>
100061e0:	0001883a 	nop
100061e4:	e037883a 	mov	sp,fp
100061e8:	dfc00117 	ldw	ra,4(sp)
100061ec:	df000017 	ldw	fp,0(sp)
100061f0:	dec00204 	addi	sp,sp,8
100061f4:	f800283a 	ret

100061f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>:
	  _Rb_tree_impl()
100061f8:	defffd04 	addi	sp,sp,-12
100061fc:	dfc00215 	stw	ra,8(sp)
10006200:	df000115 	stw	fp,4(sp)
10006204:	df000104 	addi	fp,sp,4
10006208:	e13fff15 	stw	r4,-4(fp)
	  : _Node_allocator()
1000620c:	e13fff17 	ldw	r4,-4(fp)
10006210:	00064cc0 	call	100064cc <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
10006214:	e0bfff17 	ldw	r2,-4(fp)
10006218:	1009883a 	mov	r4,r2
1000621c:	00065000 	call	10006500 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>
10006220:	e0bfff17 	ldw	r2,-4(fp)
10006224:	10800104 	addi	r2,r2,4
10006228:	1009883a 	mov	r4,r2
1000622c:	0005fb00 	call	10005fb0 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
10006230:	0001883a 	nop
10006234:	e037883a 	mov	sp,fp
10006238:	dfc00117 	ldw	ra,4(sp)
1000623c:	df000017 	ldw	fp,0(sp)
10006240:	dec00204 	addi	sp,sp,8
10006244:	f800283a 	ret

10006248 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
	allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
10006248:	defffd04 	addi	sp,sp,-12
1000624c:	dfc00215 	stw	ra,8(sp)
10006250:	df000115 	stw	fp,4(sp)
10006254:	df000104 	addi	fp,sp,4
10006258:	e13fff15 	stw	r4,-4(fp)
1000625c:	e13fff17 	ldw	r4,-4(fp)
10006260:	00065240 	call	10006524 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>
10006264:	0001883a 	nop
10006268:	e037883a 	mov	sp,fp
1000626c:	dfc00117 	ldw	ra,4(sp)
10006270:	df000017 	ldw	fp,0(sp)
10006274:	dec00204 	addi	sp,sp,8
10006278:	f800283a 	ret

1000627c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>:
      { }

      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
1000627c:	defff004 	addi	sp,sp,-64
10006280:	dfc00f15 	stw	ra,60(sp)
10006284:	df000e15 	stw	fp,56(sp)
10006288:	df000e04 	addi	fp,sp,56
1000628c:	e13fff15 	stw	r4,-4(fp)
10006290:	00840074 	movhi	r2,4097
10006294:	10a26504 	addi	r2,r2,-30316
10006298:	e0bff815 	stw	r2,-32(fp)
1000629c:	008400b4 	movhi	r2,4098
100062a0:	10910604 	addi	r2,r2,17432
100062a4:	e0bff915 	stw	r2,-28(fp)
100062a8:	e0bff204 	addi	r2,fp,-56
100062ac:	1009883a 	mov	r4,r2
100062b0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
      { _M_erase(_M_begin()); }
100062b4:	e13fff17 	ldw	r4,-4(fp)
100062b8:	00065b80 	call	100065b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
100062bc:	e03ff315 	stw	zero,-52(fp)
100062c0:	100b883a 	mov	r5,r2
100062c4:	e13fff17 	ldw	r4,-4(fp)
100062c8:	00065480 	call	10006548 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
100062cc:	e0bfff17 	ldw	r2,-4(fp)
100062d0:	1009883a 	mov	r4,r2
100062d4:	00061540 	call	10006154 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>
100062d8:	0001883a 	nop
100062dc:	e0bff204 	addi	r2,fp,-56
100062e0:	1009883a 	mov	r4,r2
100062e4:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
100062e8:	e037883a 	mov	sp,fp
100062ec:	dfc00117 	ldw	ra,4(sp)
100062f0:	df000017 	ldw	fp,0(sp)
100062f4:	dec00204 	addi	sp,sp,8
100062f8:	f800283a 	ret

100062fc <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>:
       *  not already present in the %set.
       *
       *  Insertion requires logarithmic time.
       */
      std::pair<iterator, bool>
      insert(const value_type& __x)
100062fc:	defff804 	addi	sp,sp,-32
10006300:	dfc00715 	stw	ra,28(sp)
10006304:	df000615 	stw	fp,24(sp)
10006308:	df000604 	addi	fp,sp,24
1000630c:	e13ffb15 	stw	r4,-20(fp)
10006310:	e17ffa15 	stw	r5,-24(fp)
      {
	std::pair<typename _Rep_type::iterator, bool> __p =
10006314:	e0bffb17 	ldw	r2,-20(fp)
10006318:	e17ffa17 	ldw	r5,-24(fp)
1000631c:	1009883a 	mov	r4,r2
10006320:	00066040 	call	10006604 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>
10006324:	1009883a 	mov	r4,r2
10006328:	180b883a 	mov	r5,r3
1000632c:	e13ffc15 	stw	r4,-16(fp)
10006330:	e17ffd15 	stw	r5,-12(fp)
	  _M_t._M_insert_unique(__x);
	return std::pair<iterator, bool>(__p.first, __p.second);
10006334:	e0bffc04 	addi	r2,fp,-16
10006338:	11000104 	addi	r4,r2,4
1000633c:	e0fffc04 	addi	r3,fp,-16
10006340:	e0bffe04 	addi	r2,fp,-8
10006344:	200d883a 	mov	r6,r4
10006348:	180b883a 	mov	r5,r3
1000634c:	1009883a 	mov	r4,r2
10006350:	00067580 	call	10006758 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>
10006354:	e0bffe17 	ldw	r2,-8(fp)
10006358:	e0ffff17 	ldw	r3,-4(fp)
1000635c:	1009883a 	mov	r4,r2
10006360:	180b883a 	mov	r5,r3
      }
10006364:	2005883a 	mov	r2,r4
10006368:	2807883a 	mov	r3,r5
1000636c:	e037883a 	mov	sp,fp
10006370:	dfc00117 	ldw	ra,4(sp)
10006374:	df000017 	ldw	fp,0(sp)
10006378:	dec00204 	addi	sp,sp,8
1000637c:	f800283a 	ret

10006380 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
10006380:	defffd04 	addi	sp,sp,-12
10006384:	dfc00215 	stw	ra,8(sp)
10006388:	df000115 	stw	fp,4(sp)
1000638c:	df000104 	addi	fp,sp,4
10006390:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.begin(); }
10006394:	e0bfff17 	ldw	r2,-4(fp)
10006398:	1009883a 	mov	r4,r2
1000639c:	00067c00 	call	100067c0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
100063a0:	e037883a 	mov	sp,fp
100063a4:	dfc00117 	ldw	ra,4(sp)
100063a8:	df000017 	ldw	fp,0(sp)
100063ac:	dec00204 	addi	sp,sp,8
100063b0:	f800283a 	ret

100063b4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
100063b4:	defffd04 	addi	sp,sp,-12
100063b8:	dfc00215 	stw	ra,8(sp)
100063bc:	df000115 	stw	fp,4(sp)
100063c0:	df000104 	addi	fp,sp,4
100063c4:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.end(); }
100063c8:	e0bfff17 	ldw	r2,-4(fp)
100063cc:	1009883a 	mov	r4,r2
100063d0:	00068040 	call	10006804 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
100063d4:	e037883a 	mov	sp,fp
100063d8:	dfc00117 	ldw	ra,4(sp)
100063dc:	df000017 	ldw	fp,0(sp)
100063e0:	dec00204 	addi	sp,sp,8
100063e4:	f800283a 	ret

100063e8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>:
      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
100063e8:	defffd04 	addi	sp,sp,-12
100063ec:	df000215 	stw	fp,8(sp)
100063f0:	df000204 	addi	fp,sp,8
100063f4:	e13fff15 	stw	r4,-4(fp)
100063f8:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node != __x._M_node; }
100063fc:	e0bfff17 	ldw	r2,-4(fp)
10006400:	10c00017 	ldw	r3,0(r2)
10006404:	e0bffe17 	ldw	r2,-8(fp)
10006408:	10800017 	ldw	r2,0(r2)
1000640c:	1884c03a 	cmpne	r2,r3,r2
10006410:	e037883a 	mov	sp,fp
10006414:	df000017 	ldw	fp,0(sp)
10006418:	dec00104 	addi	sp,sp,4
1000641c:	f800283a 	ret

10006420 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
10006420:	defffd04 	addi	sp,sp,-12
10006424:	dfc00215 	stw	ra,8(sp)
10006428:	df000115 	stw	fp,4(sp)
1000642c:	df000104 	addi	fp,sp,4
10006430:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
10006434:	e0bfff17 	ldw	r2,-4(fp)
10006438:	10800017 	ldw	r2,0(r2)
1000643c:	1009883a 	mov	r4,r2
10006440:	00068480 	call	10006848 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10006444:	e037883a 	mov	sp,fp
10006448:	dfc00117 	ldw	ra,4(sp)
1000644c:	df000017 	ldw	fp,0(sp)
10006450:	dec00204 	addi	sp,sp,8
10006454:	f800283a 	ret

10006458 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
10006458:	defffc04 	addi	sp,sp,-16
1000645c:	dfc00315 	stw	ra,12(sp)
10006460:	df000215 	stw	fp,8(sp)
10006464:	df000204 	addi	fp,sp,8
10006468:	e13fff15 	stw	r4,-4(fp)
1000646c:	e17ffe15 	stw	r5,-8(fp)
      { return _M_t.erase(__x); }
10006470:	e0bfff17 	ldw	r2,-4(fp)
10006474:	e17ffe17 	ldw	r5,-8(fp)
10006478:	1009883a 	mov	r4,r2
1000647c:	00068800 	call	10006880 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>
10006480:	e037883a 	mov	sp,fp
10006484:	dfc00117 	ldw	ra,4(sp)
10006488:	df000017 	ldw	fp,0(sp)
1000648c:	dec00204 	addi	sp,sp,8
10006490:	f800283a 	ret

10006494 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>:
       *  the elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
10006494:	defffd04 	addi	sp,sp,-12
10006498:	dfc00215 	stw	ra,8(sp)
1000649c:	df000115 	stw	fp,4(sp)
100064a0:	df000104 	addi	fp,sp,4
100064a4:	e13fff15 	stw	r4,-4(fp)
      { _M_t.clear(); }
100064a8:	e0bfff17 	ldw	r2,-4(fp)
100064ac:	1009883a 	mov	r4,r2
100064b0:	00069240 	call	10006924 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
100064b4:	0001883a 	nop
100064b8:	e037883a 	mov	sp,fp
100064bc:	dfc00117 	ldw	ra,4(sp)
100064c0:	df000017 	ldw	fp,0(sp)
100064c4:	dec00204 	addi	sp,sp,8
100064c8:	f800283a 	ret

100064cc <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      allocator() throw() { }
100064cc:	defffd04 	addi	sp,sp,-12
100064d0:	dfc00215 	stw	ra,8(sp)
100064d4:	df000115 	stw	fp,4(sp)
100064d8:	df000104 	addi	fp,sp,4
100064dc:	e13fff15 	stw	r4,-4(fp)
100064e0:	e13fff17 	ldw	r4,-4(fp)
100064e4:	00069a80 	call	100069a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
100064e8:	0001883a 	nop
100064ec:	e037883a 	mov	sp,fp
100064f0:	dfc00117 	ldw	ra,4(sp)
100064f4:	df000017 	ldw	fp,0(sp)
100064f8:	dec00204 	addi	sp,sp,8
100064fc:	f800283a 	ret

10006500 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>:
      _Rb_tree_key_compare()
10006500:	defffe04 	addi	sp,sp,-8
10006504:	df000115 	stw	fp,4(sp)
10006508:	df000104 	addi	fp,sp,4
1000650c:	e13fff15 	stw	r4,-4(fp)
      { }
10006510:	0001883a 	nop
10006514:	e037883a 	mov	sp,fp
10006518:	df000017 	ldw	fp,0(sp)
1000651c:	dec00104 	addi	sp,sp,4
10006520:	f800283a 	ret

10006524 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }

      template<typename _Tp1>
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
10006524:	defffe04 	addi	sp,sp,-8
10006528:	df000115 	stw	fp,4(sp)
1000652c:	df000104 	addi	fp,sp,4
10006530:	e13fff15 	stw	r4,-4(fp)
10006534:	0001883a 	nop
10006538:	e037883a 	mov	sp,fp
1000653c:	df000017 	ldw	fp,0(sp)
10006540:	dec00104 	addi	sp,sp,4
10006544:	f800283a 	ret

10006548 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006548:	defffb04 	addi	sp,sp,-20
1000654c:	dfc00415 	stw	ra,16(sp)
10006550:	df000315 	stw	fp,12(sp)
10006554:	df000304 	addi	fp,sp,12
10006558:	e13ffe15 	stw	r4,-8(fp)
1000655c:	e17ffd15 	stw	r5,-12(fp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
10006560:	e0bffd17 	ldw	r2,-12(fp)
10006564:	10000e26 	beq	r2,zero,100065a0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x58>
	{
	  _M_erase(_S_right(__x));
10006568:	e13ffd17 	ldw	r4,-12(fp)
1000656c:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10006570:	100b883a 	mov	r5,r2
10006574:	e13ffe17 	ldw	r4,-8(fp)
10006578:	00065480 	call	10006548 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	  _Link_type __y = _S_left(__x);
1000657c:	e13ffd17 	ldw	r4,-12(fp)
10006580:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10006584:	e0bfff15 	stw	r2,-4(fp)
	  _M_drop_node(__x);
10006588:	e17ffd17 	ldw	r5,-12(fp)
1000658c:	e13ffe17 	ldw	r4,-8(fp)
10006590:	0006a1c0 	call	10006a1c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
	  __x = __y;
10006594:	e0bfff17 	ldw	r2,-4(fp)
10006598:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
1000659c:	003ff006 	br	10006560 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x18>
	}
    }
100065a0:	0001883a 	nop
100065a4:	e037883a 	mov	sp,fp
100065a8:	dfc00117 	ldw	ra,4(sp)
100065ac:	df000017 	ldw	fp,0(sp)
100065b0:	dec00204 	addi	sp,sp,8
100065b4:	f800283a 	ret

100065b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
100065b8:	defffe04 	addi	sp,sp,-8
100065bc:	df000115 	stw	fp,4(sp)
100065c0:	df000104 	addi	fp,sp,4
100065c4:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
100065c8:	e0bfff17 	ldw	r2,-4(fp)
100065cc:	10800217 	ldw	r2,8(r2)
100065d0:	e037883a 	mov	sp,fp
100065d4:	df000017 	ldw	fp,0(sp)
100065d8:	dec00104 	addi	sp,sp,4
100065dc:	f800283a 	ret

100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
100065e0:	defffe04 	addi	sp,sp,-8
100065e4:	df000115 	stw	fp,4(sp)
100065e8:	df000104 	addi	fp,sp,4
100065ec:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
100065f0:	e0bfff17 	ldw	r2,-4(fp)
100065f4:	e037883a 	mov	sp,fp
100065f8:	df000017 	ldw	fp,0(sp)
100065fc:	dec00104 	addi	sp,sp,4
10006600:	f800283a 	ret

10006604 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>:
#if __cplusplus >= 201103L
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006604:	deffed04 	addi	sp,sp,-76
10006608:	dfc01215 	stw	ra,72(sp)
1000660c:	df001115 	stw	fp,68(sp)
10006610:	dc401015 	stw	r17,64(sp)
10006614:	dc000f15 	stw	r16,60(sp)
10006618:	df001104 	addi	fp,sp,68
1000661c:	e13ff115 	stw	r4,-60(fp)
10006620:	e17ff015 	stw	r5,-64(fp)
    _M_insert_unique(const _Val& __v)
#endif
    {
      typedef pair<iterator, bool> _Res;
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
10006624:	e0bff5c4 	addi	r2,fp,-41
10006628:	e17ff017 	ldw	r5,-64(fp)
1000662c:	1009883a 	mov	r4,r2
10006630:	0006d140 	call	10006d14 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
      pair<_Base_ptr, _Base_ptr> __res
10006634:	100b883a 	mov	r5,r2
10006638:	e13ff117 	ldw	r4,-60(fp)
1000663c:	0006b600 	call	10006b60 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>
10006640:	1009883a 	mov	r4,r2
10006644:	180b883a 	mov	r5,r3
10006648:	e13ff315 	stw	r4,-52(fp)
1000664c:	e17ff415 	stw	r5,-48(fp)

      if (__res.second)
10006650:	e0bff417 	ldw	r2,-48(fp)
10006654:	10001d26 	beq	r2,zero,100066cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0xc8>
	{
	  _Alloc_node __an(*this);
10006658:	e0bff204 	addi	r2,fp,-56
1000665c:	e17ff117 	ldw	r5,-60(fp)
10006660:	1009883a 	mov	r4,r2
10006664:	0006d3c0 	call	10006d3c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>
	  return _Res(_M_insert_(__res.first, __res.second,
10006668:	e43ff317 	ldw	r16,-52(fp)
1000666c:	e47ff417 	ldw	r17,-48(fp)
10006670:	e13ff017 	ldw	r4,-64(fp)
10006674:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10006678:	1007883a 	mov	r3,r2
1000667c:	e0bff204 	addi	r2,fp,-56
10006680:	d8800015 	stw	r2,0(sp)
10006684:	180f883a 	mov	r7,r3
10006688:	880d883a 	mov	r6,r17
1000668c:	800b883a 	mov	r5,r16
10006690:	e13ff117 	ldw	r4,-60(fp)
10006694:	0006d700 	call	10006d70 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>
10006698:	e0bff815 	stw	r2,-32(fp)
				 _GLIBCXX_FORWARD(_Arg, __v), __an),
		      true);
1000669c:	00800044 	movi	r2,1
100066a0:	e0bff9c5 	stb	r2,-25(fp)
100066a4:	e13ff9c4 	addi	r4,fp,-25
100066a8:	e0fff804 	addi	r3,fp,-32
100066ac:	e0bff604 	addi	r2,fp,-40
100066b0:	200d883a 	mov	r6,r4
100066b4:	180b883a 	mov	r5,r3
100066b8:	1009883a 	mov	r4,r2
100066bc:	0006e9c0 	call	10006e9c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
100066c0:	e0bff617 	ldw	r2,-40(fp)
100066c4:	e0fff717 	ldw	r3,-36(fp)
100066c8:	00000f06 	br	10006708 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0x104>
	}

      return _Res(iterator(__res.first), false);
100066cc:	e0fff317 	ldw	r3,-52(fp)
100066d0:	e0bffc04 	addi	r2,fp,-16
100066d4:	180b883a 	mov	r5,r3
100066d8:	1009883a 	mov	r4,r2
100066dc:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100066e0:	e03ffdc5 	stb	zero,-9(fp)
100066e4:	e13ffdc4 	addi	r4,fp,-9
100066e8:	e0fffc04 	addi	r3,fp,-16
100066ec:	e0bffa04 	addi	r2,fp,-24
100066f0:	200d883a 	mov	r6,r4
100066f4:	180b883a 	mov	r5,r3
100066f8:	1009883a 	mov	r4,r2
100066fc:	0006e9c0 	call	10006e9c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
10006700:	e0bffa17 	ldw	r2,-24(fp)
10006704:	e0fffb17 	ldw	r3,-20(fp)
10006708:	1009883a 	mov	r4,r2
1000670c:	180b883a 	mov	r5,r3
    }
10006710:	2005883a 	mov	r2,r4
10006714:	2807883a 	mov	r3,r5
10006718:	e6fffe04 	addi	sp,fp,-8
1000671c:	dfc00317 	ldw	ra,12(sp)
10006720:	df000217 	ldw	fp,8(sp)
10006724:	dc400117 	ldw	r17,4(sp)
10006728:	dc000017 	ldw	r16,0(sp)
1000672c:	dec00404 	addi	sp,sp,16
10006730:	f800283a 	ret

10006734 <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006734:	defffe04 	addi	sp,sp,-8
10006738:	df000115 	stw	fp,4(sp)
1000673c:	df000104 	addi	fp,sp,4
10006740:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006744:	e0bfff17 	ldw	r2,-4(fp)
10006748:	e037883a 	mov	sp,fp
1000674c:	df000017 	ldw	fp,0(sp)
10006750:	dec00104 	addi	sp,sp,4
10006754:	f800283a 	ret

10006758 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
10006758:	defffa04 	addi	sp,sp,-24
1000675c:	dfc00515 	stw	ra,20(sp)
10006760:	df000415 	stw	fp,16(sp)
10006764:	dc000315 	stw	r16,12(sp)
10006768:	df000404 	addi	fp,sp,16
1000676c:	e13ffe15 	stw	r4,-8(fp)
10006770:	e17ffd15 	stw	r5,-12(fp)
10006774:	e1bffc15 	stw	r6,-16(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006778:	e43ffe17 	ldw	r16,-8(fp)
1000677c:	e13ffd17 	ldw	r4,-12(fp)
10006780:	00067340 	call	10006734 <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>
10006784:	100b883a 	mov	r5,r2
10006788:	8009883a 	mov	r4,r16
1000678c:	0006f540 	call	10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10006790:	e13ffc17 	ldw	r4,-16(fp)
10006794:	0006f300 	call	10006f30 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
10006798:	10c00003 	ldbu	r3,0(r2)
1000679c:	e0bffe17 	ldw	r2,-8(fp)
100067a0:	10c00105 	stb	r3,4(r2)
100067a4:	0001883a 	nop
100067a8:	e6ffff04 	addi	sp,fp,-4
100067ac:	dfc00217 	ldw	ra,8(sp)
100067b0:	df000117 	ldw	fp,4(sp)
100067b4:	dc000017 	ldw	r16,0(sp)
100067b8:	dec00304 	addi	sp,sp,12
100067bc:	f800283a 	ret

100067c0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
100067c0:	defffc04 	addi	sp,sp,-16
100067c4:	dfc00315 	stw	ra,12(sp)
100067c8:	df000215 	stw	fp,8(sp)
100067cc:	df000204 	addi	fp,sp,8
100067d0:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
100067d4:	e0bffe17 	ldw	r2,-8(fp)
100067d8:	10c00317 	ldw	r3,12(r2)
100067dc:	e0bfff04 	addi	r2,fp,-4
100067e0:	180b883a 	mov	r5,r3
100067e4:	1009883a 	mov	r4,r2
100067e8:	0006f8c0 	call	10006f8c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
100067ec:	e0bfff17 	ldw	r2,-4(fp)
100067f0:	e037883a 	mov	sp,fp
100067f4:	dfc00117 	ldw	ra,4(sp)
100067f8:	df000017 	ldw	fp,0(sp)
100067fc:	dec00204 	addi	sp,sp,8
10006800:	f800283a 	ret

10006804 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
10006804:	defffc04 	addi	sp,sp,-16
10006808:	dfc00315 	stw	ra,12(sp)
1000680c:	df000215 	stw	fp,8(sp)
10006810:	df000204 	addi	fp,sp,8
10006814:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(&this->_M_impl._M_header); }
10006818:	e0bffe17 	ldw	r2,-8(fp)
1000681c:	10c00104 	addi	r3,r2,4
10006820:	e0bfff04 	addi	r2,fp,-4
10006824:	180b883a 	mov	r5,r3
10006828:	1009883a 	mov	r4,r2
1000682c:	0006f8c0 	call	10006f8c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
10006830:	e0bfff17 	ldw	r2,-4(fp)
10006834:	e037883a 	mov	sp,fp
10006838:	dfc00117 	ldw	ra,4(sp)
1000683c:	df000017 	ldw	fp,0(sp)
10006840:	dec00204 	addi	sp,sp,8
10006844:	f800283a 	ret

10006848 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr() const
10006848:	defffd04 	addi	sp,sp,-12
1000684c:	dfc00215 	stw	ra,8(sp)
10006850:	df000115 	stw	fp,4(sp)
10006854:	df000104 	addi	fp,sp,4
10006858:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
1000685c:	e0bfff17 	ldw	r2,-4(fp)
10006860:	10800404 	addi	r2,r2,16
10006864:	1009883a 	mov	r4,r2
10006868:	0006fc00 	call	10006fc0 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
1000686c:	e037883a 	mov	sp,fp
10006870:	dfc00117 	ldw	ra,4(sp)
10006874:	df000017 	ldw	fp,0(sp)
10006878:	dec00204 	addi	sp,sp,8
1000687c:	f800283a 	ret

10006880 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006880:	defff704 	addi	sp,sp,-36
10006884:	dfc00815 	stw	ra,32(sp)
10006888:	df000715 	stw	fp,28(sp)
1000688c:	df000704 	addi	fp,sp,28
10006890:	e13ffa15 	stw	r4,-24(fp)
10006894:	e17ff915 	stw	r5,-28(fp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
10006898:	e17ff917 	ldw	r5,-28(fp)
1000689c:	e13ffa17 	ldw	r4,-24(fp)
100068a0:	0006ff00 	call	10006ff0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>
100068a4:	1009883a 	mov	r4,r2
100068a8:	180b883a 	mov	r5,r3
100068ac:	e13ffb15 	stw	r4,-20(fp)
100068b0:	e17ffc15 	stw	r5,-16(fp)
      const size_type __old_size = size();
100068b4:	e13ffa17 	ldw	r4,-24(fp)
100068b8:	00071900 	call	10007190 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
100068bc:	e0bfff15 	stw	r2,-4(fp)
      _M_erase_aux(__p.first, __p.second);
100068c0:	e0fffb04 	addi	r3,fp,-20
100068c4:	e0bffd04 	addi	r2,fp,-12
100068c8:	180b883a 	mov	r5,r3
100068cc:	1009883a 	mov	r4,r2
100068d0:	0006f540 	call	10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100068d4:	e0bffb04 	addi	r2,fp,-20
100068d8:	10c00104 	addi	r3,r2,4
100068dc:	e0bffe04 	addi	r2,fp,-8
100068e0:	180b883a 	mov	r5,r3
100068e4:	1009883a 	mov	r4,r2
100068e8:	0006f540 	call	10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100068ec:	e1bffe17 	ldw	r6,-8(fp)
100068f0:	e17ffd17 	ldw	r5,-12(fp)
100068f4:	e13ffa17 	ldw	r4,-24(fp)
100068f8:	00071b80 	call	100071b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>
      return __old_size - size();
100068fc:	e13ffa17 	ldw	r4,-24(fp)
10006900:	00071900 	call	10007190 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
10006904:	1007883a 	mov	r3,r2
10006908:	e0bfff17 	ldw	r2,-4(fp)
1000690c:	10c5c83a 	sub	r2,r2,r3
    }
10006910:	e037883a 	mov	sp,fp
10006914:	dfc00117 	ldw	ra,4(sp)
10006918:	df000017 	ldw	fp,0(sp)
1000691c:	dec00204 	addi	sp,sp,8
10006920:	f800283a 	ret

10006924 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
10006924:	defff004 	addi	sp,sp,-64
10006928:	dfc00f15 	stw	ra,60(sp)
1000692c:	df000e15 	stw	fp,56(sp)
10006930:	df000e04 	addi	fp,sp,56
10006934:	e13fff15 	stw	r4,-4(fp)
10006938:	00840074 	movhi	r2,4097
1000693c:	10a26504 	addi	r2,r2,-30316
10006940:	e0bff815 	stw	r2,-32(fp)
10006944:	008400b4 	movhi	r2,4098
10006948:	10910704 	addi	r2,r2,17436
1000694c:	e0bff915 	stw	r2,-28(fp)
10006950:	e0bff204 	addi	r2,fp,-56
10006954:	1009883a 	mov	r4,r2
10006958:	00142740 	call	10014274 <_Unwind_SjLj_Register>
	_M_erase(_M_begin());
1000695c:	e13fff17 	ldw	r4,-4(fp)
10006960:	00065b80 	call	100065b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10006964:	e03ff315 	stw	zero,-52(fp)
10006968:	100b883a 	mov	r5,r2
1000696c:	e13fff17 	ldw	r4,-4(fp)
10006970:	00065480 	call	10006548 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	_M_impl._M_reset();
10006974:	e0bfff17 	ldw	r2,-4(fp)
10006978:	10800104 	addi	r2,r2,4
1000697c:	1009883a 	mov	r4,r2
10006980:	0005fec0 	call	10005fec <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
10006984:	0001883a 	nop
10006988:	e0bff204 	addi	r2,fp,-56
1000698c:	1009883a 	mov	r4,r2
10006990:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10006994:	e037883a 	mov	sp,fp
10006998:	dfc00117 	ldw	ra,4(sp)
1000699c:	df000017 	ldw	fp,0(sp)
100069a0:	dec00204 	addi	sp,sp,8
100069a4:	f800283a 	ret

100069a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
100069a8:	defffe04 	addi	sp,sp,-8
100069ac:	df000115 	stw	fp,4(sp)
100069b0:	df000104 	addi	fp,sp,4
100069b4:	e13fff15 	stw	r4,-4(fp)
100069b8:	0001883a 	nop
100069bc:	e037883a 	mov	sp,fp
100069c0:	df000017 	ldw	fp,0(sp)
100069c4:	dec00104 	addi	sp,sp,4
100069c8:	f800283a 	ret

100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
100069cc:	defffe04 	addi	sp,sp,-8
100069d0:	df000115 	stw	fp,4(sp)
100069d4:	df000104 	addi	fp,sp,4
100069d8:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_right); }
100069dc:	e0bfff17 	ldw	r2,-4(fp)
100069e0:	10800317 	ldw	r2,12(r2)
100069e4:	e037883a 	mov	sp,fp
100069e8:	df000017 	ldw	fp,0(sp)
100069ec:	dec00104 	addi	sp,sp,4
100069f0:	f800283a 	ret

100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
100069f4:	defffe04 	addi	sp,sp,-8
100069f8:	df000115 	stw	fp,4(sp)
100069fc:	df000104 	addi	fp,sp,4
10006a00:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_left); }
10006a04:	e0bfff17 	ldw	r2,-4(fp)
10006a08:	10800217 	ldw	r2,8(r2)
10006a0c:	e037883a 	mov	sp,fp
10006a10:	df000017 	ldw	fp,0(sp)
10006a14:	dec00104 	addi	sp,sp,4
10006a18:	f800283a 	ret

10006a1c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
10006a1c:	defffc04 	addi	sp,sp,-16
10006a20:	dfc00315 	stw	ra,12(sp)
10006a24:	df000215 	stw	fp,8(sp)
10006a28:	df000204 	addi	fp,sp,8
10006a2c:	e13fff15 	stw	r4,-4(fp)
10006a30:	e17ffe15 	stw	r5,-8(fp)
	_M_destroy_node(__p);
10006a34:	e17ffe17 	ldw	r5,-8(fp)
10006a38:	e13fff17 	ldw	r4,-4(fp)
10006a3c:	00072c00 	call	100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>
	_M_put_node(__p);
10006a40:	e17ffe17 	ldw	r5,-8(fp)
10006a44:	e13fff17 	ldw	r4,-4(fp)
10006a48:	000734c0 	call	1000734c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
      }
10006a4c:	0001883a 	nop
10006a50:	e037883a 	mov	sp,fp
10006a54:	dfc00117 	ldw	ra,4(sp)
10006a58:	df000017 	ldw	fp,0(sp)
10006a5c:	dec00204 	addi	sp,sp,8
10006a60:	f800283a 	ret

10006a64 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
10006a64:	defffb04 	addi	sp,sp,-20
10006a68:	dfc00415 	stw	ra,16(sp)
10006a6c:	df000315 	stw	fp,12(sp)
10006a70:	df000304 	addi	fp,sp,12
10006a74:	e13fff15 	stw	r4,-4(fp)
10006a78:	e17ffe15 	stw	r5,-8(fp)
10006a7c:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006a80:	e13ffe17 	ldw	r4,-8(fp)
10006a84:	0006ac00 	call	10006ac0 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>
10006a88:	10c00017 	ldw	r3,0(r2)
10006a8c:	e0bfff17 	ldw	r2,-4(fp)
10006a90:	10c00015 	stw	r3,0(r2)
10006a94:	e13ffd17 	ldw	r4,-12(fp)
10006a98:	0006b3c0 	call	10006b3c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
10006a9c:	10c00017 	ldw	r3,0(r2)
10006aa0:	e0bfff17 	ldw	r2,-4(fp)
10006aa4:	10c00115 	stw	r3,4(r2)
10006aa8:	0001883a 	nop
10006aac:	e037883a 	mov	sp,fp
10006ab0:	dfc00117 	ldw	ra,4(sp)
10006ab4:	df000017 	ldw	fp,0(sp)
10006ab8:	dec00204 	addi	sp,sp,8
10006abc:	f800283a 	ret

10006ac0 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006ac0:	defffe04 	addi	sp,sp,-8
10006ac4:	df000115 	stw	fp,4(sp)
10006ac8:	df000104 	addi	fp,sp,4
10006acc:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006ad0:	e0bfff17 	ldw	r2,-4(fp)
10006ad4:	e037883a 	mov	sp,fp
10006ad8:	df000017 	ldw	fp,0(sp)
10006adc:	dec00104 	addi	sp,sp,4
10006ae0:	f800283a 	ret

10006ae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
10006ae4:	defffb04 	addi	sp,sp,-20
10006ae8:	dfc00415 	stw	ra,16(sp)
10006aec:	df000315 	stw	fp,12(sp)
10006af0:	df000304 	addi	fp,sp,12
10006af4:	e13fff15 	stw	r4,-4(fp)
10006af8:	e17ffe15 	stw	r5,-8(fp)
10006afc:	e1bffd15 	stw	r6,-12(fp)
       : first(std::forward<_U1>(__x)), second(__y) { }
10006b00:	e13ffe17 	ldw	r4,-8(fp)
10006b04:	0006b3c0 	call	10006b3c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
10006b08:	10c00017 	ldw	r3,0(r2)
10006b0c:	e0bfff17 	ldw	r2,-4(fp)
10006b10:	10c00015 	stw	r3,0(r2)
10006b14:	e0bffd17 	ldw	r2,-12(fp)
10006b18:	10c00017 	ldw	r3,0(r2)
10006b1c:	e0bfff17 	ldw	r2,-4(fp)
10006b20:	10c00115 	stw	r3,4(r2)
10006b24:	0001883a 	nop
10006b28:	e037883a 	mov	sp,fp
10006b2c:	dfc00117 	ldw	ra,4(sp)
10006b30:	df000017 	ldw	fp,0(sp)
10006b34:	dec00204 	addi	sp,sp,8
10006b38:	f800283a 	ret

10006b3c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006b3c:	defffe04 	addi	sp,sp,-8
10006b40:	df000115 	stw	fp,4(sp)
10006b44:	df000104 	addi	fp,sp,4
10006b48:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006b4c:	e0bfff17 	ldw	r2,-4(fp)
10006b50:	e037883a 	mov	sp,fp
10006b54:	df000017 	ldw	fp,0(sp)
10006b58:	dec00104 	addi	sp,sp,4
10006b5c:	f800283a 	ret

10006b60 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006b60:	deffef04 	addi	sp,sp,-68
10006b64:	dfc01015 	stw	ra,64(sp)
10006b68:	df000f15 	stw	fp,60(sp)
10006b6c:	dc000e15 	stw	r16,56(sp)
10006b70:	df000f04 	addi	fp,sp,60
10006b74:	e13ff215 	stw	r4,-56(fp)
10006b78:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
10006b7c:	e13ff217 	ldw	r4,-56(fp)
10006b80:	00065b80 	call	100065b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10006b84:	e0bff515 	stw	r2,-44(fp)
      _Base_ptr __y = _M_end();
10006b88:	e13ff217 	ldw	r4,-56(fp)
10006b8c:	00073c80 	call	100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10006b90:	e0bff415 	stw	r2,-48(fp)
      bool __comp = true;
10006b94:	00800044 	movi	r2,1
10006b98:	e0bffec5 	stb	r2,-5(fp)
      while (__x != 0)
10006b9c:	e0bff517 	ldw	r2,-44(fp)
10006ba0:	10001626 	beq	r2,zero,10006bfc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x9c>
	  __y = __x;
10006ba4:	e0bff517 	ldw	r2,-44(fp)
10006ba8:	e0bff415 	stw	r2,-48(fp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
10006bac:	e43ff217 	ldw	r16,-56(fp)
10006bb0:	e0bff517 	ldw	r2,-44(fp)
10006bb4:	1009883a 	mov	r4,r2
10006bb8:	00073f00 	call	100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10006bbc:	100d883a 	mov	r6,r2
10006bc0:	e17ff117 	ldw	r5,-60(fp)
10006bc4:	8009883a 	mov	r4,r16
10006bc8:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006bcc:	e0bffec5 	stb	r2,-5(fp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
10006bd0:	e0bffec3 	ldbu	r2,-5(fp)
10006bd4:	10000426 	beq	r2,zero,10006be8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x88>
10006bd8:	e0bff517 	ldw	r2,-44(fp)
10006bdc:	1009883a 	mov	r4,r2
10006be0:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10006be4:	00000306 	br	10006bf4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x94>
10006be8:	e0bff517 	ldw	r2,-44(fp)
10006bec:	1009883a 	mov	r4,r2
10006bf0:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10006bf4:	e0bff515 	stw	r2,-44(fp)
      while (__x != 0)
10006bf8:	003fe806 	br	10006b9c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x3c>
      iterator __j = iterator(__y);
10006bfc:	e0fff417 	ldw	r3,-48(fp)
10006c00:	e0bff304 	addi	r2,fp,-52
10006c04:	180b883a 	mov	r5,r3
10006c08:	1009883a 	mov	r4,r2
10006c0c:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
      if (__comp)
10006c10:	e0bffec3 	ldbu	r2,-5(fp)
10006c14:	10001726 	beq	r2,zero,10006c74 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x114>
	  if (__j == begin())
10006c18:	e13ff217 	ldw	r4,-56(fp)
10006c1c:	00074740 	call	10007474 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
10006c20:	e0bff615 	stw	r2,-40(fp)
10006c24:	e0fff604 	addi	r3,fp,-40
10006c28:	e0bff304 	addi	r2,fp,-52
10006c2c:	180b883a 	mov	r5,r3
10006c30:	1009883a 	mov	r4,r2
10006c34:	00074b80 	call	100074b8 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>
10006c38:	10803fcc 	andi	r2,r2,255
10006c3c:	10000a26 	beq	r2,zero,10006c68 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x108>
	    return _Res(__x, __y);
10006c40:	e13ff404 	addi	r4,fp,-48
10006c44:	e0fff504 	addi	r3,fp,-44
10006c48:	e0bff704 	addi	r2,fp,-36
10006c4c:	200d883a 	mov	r6,r4
10006c50:	180b883a 	mov	r5,r3
10006c54:	1009883a 	mov	r4,r2
10006c58:	0006a640 	call	10006a64 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
10006c5c:	e0bff717 	ldw	r2,-36(fp)
10006c60:	e0fff817 	ldw	r3,-32(fp)
10006c64:	00002106 	br	10006cec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
	    --__j;
10006c68:	e0bff304 	addi	r2,fp,-52
10006c6c:	1009883a 	mov	r4,r2
10006c70:	00074f00 	call	100074f0 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
10006c74:	e43ff217 	ldw	r16,-56(fp)
10006c78:	e0bff317 	ldw	r2,-52(fp)
10006c7c:	1009883a 	mov	r4,r2
10006c80:	00075380 	call	10007538 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
10006c84:	e1bff117 	ldw	r6,-60(fp)
10006c88:	100b883a 	mov	r5,r2
10006c8c:	8009883a 	mov	r4,r16
10006c90:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006c94:	10803fcc 	andi	r2,r2,255
10006c98:	10000a26 	beq	r2,zero,10006cc4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x164>
	return _Res(__x, __y);
10006c9c:	e13ff404 	addi	r4,fp,-48
10006ca0:	e0fff504 	addi	r3,fp,-44
10006ca4:	e0bff904 	addi	r2,fp,-28
10006ca8:	200d883a 	mov	r6,r4
10006cac:	180b883a 	mov	r5,r3
10006cb0:	1009883a 	mov	r4,r2
10006cb4:	0006a640 	call	10006a64 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
10006cb8:	e0bff917 	ldw	r2,-28(fp)
10006cbc:	e0fffa17 	ldw	r3,-24(fp)
10006cc0:	00000a06 	br	10006cec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
      return _Res(__j._M_node, 0);
10006cc4:	e03ffd15 	stw	zero,-12(fp)
10006cc8:	e13ffd04 	addi	r4,fp,-12
10006ccc:	e0fff304 	addi	r3,fp,-52
10006cd0:	e0bffb04 	addi	r2,fp,-20
10006cd4:	200d883a 	mov	r6,r4
10006cd8:	180b883a 	mov	r5,r3
10006cdc:	1009883a 	mov	r4,r2
10006ce0:	0006ae40 	call	10006ae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
10006ce4:	e0bffb17 	ldw	r2,-20(fp)
10006ce8:	e0fffc17 	ldw	r3,-16(fp)
10006cec:	1009883a 	mov	r4,r2
10006cf0:	180b883a 	mov	r5,r3
    }
10006cf4:	2005883a 	mov	r2,r4
10006cf8:	2807883a 	mov	r3,r5
10006cfc:	e6ffff04 	addi	sp,fp,-4
10006d00:	dfc00217 	ldw	ra,8(sp)
10006d04:	df000117 	ldw	fp,4(sp)
10006d08:	dc000017 	ldw	r16,0(sp)
10006d0c:	dec00304 	addi	sp,sp,12
10006d10:	f800283a 	ret

10006d14 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
10006d14:	defffd04 	addi	sp,sp,-12
10006d18:	df000215 	stw	fp,8(sp)
10006d1c:	df000204 	addi	fp,sp,8
10006d20:	e13fff15 	stw	r4,-4(fp)
10006d24:	e17ffe15 	stw	r5,-8(fp)
      { return __x; }
10006d28:	e0bffe17 	ldw	r2,-8(fp)
10006d2c:	e037883a 	mov	sp,fp
10006d30:	df000017 	ldw	fp,0(sp)
10006d34:	dec00104 	addi	sp,sp,4
10006d38:	f800283a 	ret

10006d3c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>:
	_Alloc_node(_Rb_tree& __t)
10006d3c:	defffd04 	addi	sp,sp,-12
10006d40:	df000215 	stw	fp,8(sp)
10006d44:	df000204 	addi	fp,sp,8
10006d48:	e13fff15 	stw	r4,-4(fp)
10006d4c:	e17ffe15 	stw	r5,-8(fp)
	  : _M_t(__t) { }
10006d50:	e0bfff17 	ldw	r2,-4(fp)
10006d54:	e0fffe17 	ldw	r3,-8(fp)
10006d58:	10c00015 	stw	r3,0(r2)
10006d5c:	0001883a 	nop
10006d60:	e037883a 	mov	sp,fp
10006d64:	df000017 	ldw	fp,0(sp)
10006d68:	dec00104 	addi	sp,sp,4
10006d6c:	f800283a 	ret

10006d70 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006d70:	defff404 	addi	sp,sp,-48
10006d74:	dfc00b15 	stw	ra,44(sp)
10006d78:	df000a15 	stw	fp,40(sp)
10006d7c:	dc400915 	stw	r17,36(sp)
10006d80:	dc000815 	stw	r16,32(sp)
10006d84:	df000a04 	addi	fp,sp,40
10006d88:	e13ff915 	stw	r4,-28(fp)
10006d8c:	e17ff815 	stw	r5,-32(fp)
10006d90:	e1bff715 	stw	r6,-36(fp)
10006d94:	e1fff615 	stw	r7,-40(fp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
10006d98:	e0bff817 	ldw	r2,-32(fp)
10006d9c:	1000131e 	bne	r2,zero,10006dec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
	bool __insert_left = (__x != 0 || __p == _M_end()
10006da0:	e13ff917 	ldw	r4,-28(fp)
10006da4:	00073c80 	call	100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10006da8:	1007883a 	mov	r3,r2
10006dac:	e0bff717 	ldw	r2,-36(fp)
10006db0:	10c00e26 	beq	r2,r3,10006dec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
10006db4:	e43ff917 	ldw	r16,-28(fp)
10006db8:	e0bffac4 	addi	r2,fp,-21
10006dbc:	e17ff617 	ldw	r5,-40(fp)
10006dc0:	1009883a 	mov	r4,r2
10006dc4:	0006d140 	call	10006d14 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10006dc8:	1023883a 	mov	r17,r2
10006dcc:	e13ff717 	ldw	r4,-36(fp)
10006dd0:	00075380 	call	10007538 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
10006dd4:	100d883a 	mov	r6,r2
10006dd8:	880b883a 	mov	r5,r17
10006ddc:	8009883a 	mov	r4,r16
10006de0:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006de4:	10803fcc 	andi	r2,r2,255
10006de8:	10000226 	beq	r2,zero,10006df4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x84>
10006dec:	00800044 	movi	r2,1
10006df0:	00000106 	br	10006df8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x88>
10006df4:	0005883a 	mov	r2,zero
	bool __insert_left = (__x != 0 || __p == _M_end()
10006df8:	e0bffdc5 	stb	r2,-9(fp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
10006dfc:	e13ff617 	ldw	r4,-40(fp)
10006e00:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10006e04:	100b883a 	mov	r5,r2
10006e08:	e1000217 	ldw	r4,8(fp)
10006e0c:	00075800 	call	10007580 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>
10006e10:	e0bffc15 	stw	r2,-16(fp)
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10006e14:	e0fffdc3 	ldbu	r3,-9(fp)
				      this->_M_impl._M_header);
10006e18:	e0bff917 	ldw	r2,-28(fp)
10006e1c:	10800104 	addi	r2,r2,4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10006e20:	100f883a 	mov	r7,r2
10006e24:	e1bff717 	ldw	r6,-36(fp)
10006e28:	e17ffc17 	ldw	r5,-16(fp)
10006e2c:	1809883a 	mov	r4,r3
10006e30:	00095dc0 	call	100095dc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
10006e34:	e0bff917 	ldw	r2,-28(fp)
10006e38:	10800517 	ldw	r2,20(r2)
10006e3c:	10c00044 	addi	r3,r2,1
10006e40:	e0bff917 	ldw	r2,-28(fp)
10006e44:	10c00515 	stw	r3,20(r2)
	return iterator(__z);
10006e48:	e0bffb04 	addi	r2,fp,-20
10006e4c:	e17ffc17 	ldw	r5,-16(fp)
10006e50:	1009883a 	mov	r4,r2
10006e54:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10006e58:	e0bffb17 	ldw	r2,-20(fp)
      }
10006e5c:	e6fffe04 	addi	sp,fp,-8
10006e60:	dfc00317 	ldw	ra,12(sp)
10006e64:	df000217 	ldw	fp,8(sp)
10006e68:	dc400117 	ldw	r17,4(sp)
10006e6c:	dc000017 	ldw	r16,0(sp)
10006e70:	dec00404 	addi	sp,sp,16
10006e74:	f800283a 	ret

10006e78 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006e78:	defffe04 	addi	sp,sp,-8
10006e7c:	df000115 	stw	fp,4(sp)
10006e80:	df000104 	addi	fp,sp,4
10006e84:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006e88:	e0bfff17 	ldw	r2,-4(fp)
10006e8c:	e037883a 	mov	sp,fp
10006e90:	df000017 	ldw	fp,0(sp)
10006e94:	dec00104 	addi	sp,sp,4
10006e98:	f800283a 	ret

10006e9c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
10006e9c:	defffb04 	addi	sp,sp,-20
10006ea0:	dfc00415 	stw	ra,16(sp)
10006ea4:	df000315 	stw	fp,12(sp)
10006ea8:	df000304 	addi	fp,sp,12
10006eac:	e13fff15 	stw	r4,-4(fp)
10006eb0:	e17ffe15 	stw	r5,-8(fp)
10006eb4:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006eb8:	e13ffe17 	ldw	r4,-8(fp)
10006ebc:	0006e780 	call	10006e78 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
10006ec0:	1007883a 	mov	r3,r2
10006ec4:	e0bfff17 	ldw	r2,-4(fp)
10006ec8:	18c00017 	ldw	r3,0(r3)
10006ecc:	10c00015 	stw	r3,0(r2)
10006ed0:	e13ffd17 	ldw	r4,-12(fp)
10006ed4:	00075d00 	call	100075d0 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
10006ed8:	10c00003 	ldbu	r3,0(r2)
10006edc:	e0bfff17 	ldw	r2,-4(fp)
10006ee0:	10c00105 	stb	r3,4(r2)
10006ee4:	0001883a 	nop
10006ee8:	e037883a 	mov	sp,fp
10006eec:	dfc00117 	ldw	ra,4(sp)
10006ef0:	df000017 	ldw	fp,0(sp)
10006ef4:	dec00204 	addi	sp,sp,8
10006ef8:	f800283a 	ret

10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10006efc:	defffd04 	addi	sp,sp,-12
10006f00:	df000215 	stw	fp,8(sp)
10006f04:	df000204 	addi	fp,sp,8
10006f08:	e13fff15 	stw	r4,-4(fp)
10006f0c:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
10006f10:	e0bfff17 	ldw	r2,-4(fp)
10006f14:	e0fffe17 	ldw	r3,-8(fp)
10006f18:	10c00015 	stw	r3,0(r2)
10006f1c:	0001883a 	nop
10006f20:	e037883a 	mov	sp,fp
10006f24:	df000017 	ldw	fp,0(sp)
10006f28:	dec00104 	addi	sp,sp,4
10006f2c:	f800283a 	ret

10006f30 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006f30:	defffe04 	addi	sp,sp,-8
10006f34:	df000115 	stw	fp,4(sp)
10006f38:	df000104 	addi	fp,sp,4
10006f3c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006f40:	e0bfff17 	ldw	r2,-4(fp)
10006f44:	e037883a 	mov	sp,fp
10006f48:	df000017 	ldw	fp,0(sp)
10006f4c:	dec00104 	addi	sp,sp,4
10006f50:	f800283a 	ret

10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
10006f54:	defffd04 	addi	sp,sp,-12
10006f58:	df000215 	stw	fp,8(sp)
10006f5c:	df000204 	addi	fp,sp,8
10006f60:	e13fff15 	stw	r4,-4(fp)
10006f64:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__it._M_node) { }
10006f68:	e0bffe17 	ldw	r2,-8(fp)
10006f6c:	10c00017 	ldw	r3,0(r2)
10006f70:	e0bfff17 	ldw	r2,-4(fp)
10006f74:	10c00015 	stw	r3,0(r2)
10006f78:	0001883a 	nop
10006f7c:	e037883a 	mov	sp,fp
10006f80:	df000017 	ldw	fp,0(sp)
10006f84:	dec00104 	addi	sp,sp,4
10006f88:	f800283a 	ret

10006f8c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10006f8c:	defffd04 	addi	sp,sp,-12
10006f90:	df000215 	stw	fp,8(sp)
10006f94:	df000204 	addi	fp,sp,8
10006f98:	e13fff15 	stw	r4,-4(fp)
10006f9c:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
10006fa0:	e0bfff17 	ldw	r2,-4(fp)
10006fa4:	e0fffe17 	ldw	r3,-8(fp)
10006fa8:	10c00015 	stw	r3,0(r2)
10006fac:	0001883a 	nop
10006fb0:	e037883a 	mov	sp,fp
10006fb4:	df000017 	ldw	fp,0(sp)
10006fb8:	dec00104 	addi	sp,sp,4
10006fbc:	f800283a 	ret

10006fc0 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
10006fc0:	defffd04 	addi	sp,sp,-12
10006fc4:	dfc00215 	stw	ra,8(sp)
10006fc8:	df000115 	stw	fp,4(sp)
10006fcc:	df000104 	addi	fp,sp,4
10006fd0:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const _Tp*>(_M_addr()); }
10006fd4:	e13fff17 	ldw	r4,-4(fp)
10006fd8:	00075f40 	call	100075f4 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
10006fdc:	e037883a 	mov	sp,fp
10006fe0:	dfc00117 	ldw	ra,4(sp)
10006fe4:	df000017 	ldw	fp,0(sp)
10006fe8:	dec00204 	addi	sp,sp,8
10006fec:	f800283a 	ret

10006ff0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006ff0:	deffef04 	addi	sp,sp,-68
10006ff4:	dfc01015 	stw	ra,64(sp)
10006ff8:	df000f15 	stw	fp,60(sp)
10006ffc:	dc000e15 	stw	r16,56(sp)
10007000:	df000f04 	addi	fp,sp,60
10007004:	e13ff215 	stw	r4,-56(fp)
10007008:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
1000700c:	e13ff217 	ldw	r4,-56(fp)
10007010:	00065b80 	call	100065b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10007014:	e0bffe15 	stw	r2,-8(fp)
      _Base_ptr __y = _M_end();
10007018:	e13ff217 	ldw	r4,-56(fp)
1000701c:	00073c80 	call	100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10007020:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
10007024:	e0bffe17 	ldw	r2,-8(fp)
10007028:	10003e26 	beq	r2,zero,10007124 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x134>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1000702c:	e43ff217 	ldw	r16,-56(fp)
10007030:	e13ffe17 	ldw	r4,-8(fp)
10007034:	00073f00 	call	100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007038:	e1bff117 	ldw	r6,-60(fp)
1000703c:	100b883a 	mov	r5,r2
10007040:	8009883a 	mov	r4,r16
10007044:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007048:	10803fcc 	andi	r2,r2,255
1000704c:	10000426 	beq	r2,zero,10007060 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x70>
	    __x = _S_right(__x);
10007050:	e13ffe17 	ldw	r4,-8(fp)
10007054:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007058:	e0bffe15 	stw	r2,-8(fp)
1000705c:	003ff106 	br	10007024 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
10007060:	e43ff217 	ldw	r16,-56(fp)
10007064:	e13ffe17 	ldw	r4,-8(fp)
10007068:	00073f00 	call	100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
1000706c:	100d883a 	mov	r6,r2
10007070:	e17ff117 	ldw	r5,-60(fp)
10007074:	8009883a 	mov	r4,r16
10007078:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
1000707c:	10803fcc 	andi	r2,r2,255
10007080:	10000626 	beq	r2,zero,1000709c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0xac>
	    __y = __x, __x = _S_left(__x);
10007084:	e0bffe17 	ldw	r2,-8(fp)
10007088:	e0bffd15 	stw	r2,-12(fp)
1000708c:	e13ffe17 	ldw	r4,-8(fp)
10007090:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007094:	e0bffe15 	stw	r2,-8(fp)
10007098:	003fe206 	br	10007024 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	      _Link_type __xu(__x);
1000709c:	e0bffe17 	ldw	r2,-8(fp)
100070a0:	e0bffc15 	stw	r2,-16(fp)
	      _Base_ptr __yu(__y);
100070a4:	e0bffd17 	ldw	r2,-12(fp)
100070a8:	e0bffb15 	stw	r2,-20(fp)
	      __y = __x, __x = _S_left(__x);
100070ac:	e0bffe17 	ldw	r2,-8(fp)
100070b0:	e0bffd15 	stw	r2,-12(fp)
100070b4:	e13ffe17 	ldw	r4,-8(fp)
100070b8:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
100070bc:	e0bffe15 	stw	r2,-8(fp)
	      __xu = _S_right(__xu);
100070c0:	e13ffc17 	ldw	r4,-16(fp)
100070c4:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
100070c8:	e0bffc15 	stw	r2,-16(fp)
	      return pair<iterator,
100070cc:	e1fff117 	ldw	r7,-60(fp)
100070d0:	e1bffd17 	ldw	r6,-12(fp)
100070d4:	e17ffe17 	ldw	r5,-8(fp)
100070d8:	e13ff217 	ldw	r4,-56(fp)
100070dc:	00076180 	call	10007618 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
100070e0:	e0bff515 	stw	r2,-44(fp)
100070e4:	e1fff117 	ldw	r7,-60(fp)
100070e8:	e1bffb17 	ldw	r6,-20(fp)
100070ec:	e17ffc17 	ldw	r5,-16(fp)
100070f0:	e13ff217 	ldw	r4,-56(fp)
100070f4:	00076c00 	call	100076c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
100070f8:	e0bff615 	stw	r2,-40(fp)
				    _M_upper_bound(__xu, __yu, __k));
100070fc:	e13ff604 	addi	r4,fp,-40
10007100:	e0fff504 	addi	r3,fp,-44
10007104:	e0bff304 	addi	r2,fp,-52
10007108:	200d883a 	mov	r6,r4
1000710c:	180b883a 	mov	r5,r3
10007110:	1009883a 	mov	r4,r2
10007114:	00077640 	call	10007764 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007118:	e0bff317 	ldw	r2,-52(fp)
1000711c:	e0fff417 	ldw	r3,-48(fp)
10007120:	00001106 	br	10007168 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x178>
				      iterator(__y));
10007124:	e0bff904 	addi	r2,fp,-28
10007128:	e17ffd17 	ldw	r5,-12(fp)
1000712c:	1009883a 	mov	r4,r2
10007130:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007134:	e0bffa04 	addi	r2,fp,-24
10007138:	e17ffd17 	ldw	r5,-12(fp)
1000713c:	1009883a 	mov	r4,r2
10007140:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007144:	e13ffa04 	addi	r4,fp,-24
10007148:	e0fff904 	addi	r3,fp,-28
1000714c:	e0bff704 	addi	r2,fp,-36
10007150:	200d883a 	mov	r6,r4
10007154:	180b883a 	mov	r5,r3
10007158:	1009883a 	mov	r4,r2
1000715c:	00077640 	call	10007764 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007160:	e0bff717 	ldw	r2,-36(fp)
10007164:	e0fff817 	ldw	r3,-32(fp)
10007168:	1009883a 	mov	r4,r2
1000716c:	180b883a 	mov	r5,r3
    }
10007170:	2005883a 	mov	r2,r4
10007174:	2807883a 	mov	r3,r5
10007178:	e6ffff04 	addi	sp,fp,-4
1000717c:	dfc00217 	ldw	ra,8(sp)
10007180:	df000117 	ldw	fp,4(sp)
10007184:	dc000017 	ldw	r16,0(sp)
10007188:	dec00304 	addi	sp,sp,12
1000718c:	f800283a 	ret

10007190 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
10007190:	defffe04 	addi	sp,sp,-8
10007194:	df000115 	stw	fp,4(sp)
10007198:	df000104 	addi	fp,sp,4
1000719c:	e13fff15 	stw	r4,-4(fp)
      { return _M_impl._M_node_count; }
100071a0:	e0bfff17 	ldw	r2,-4(fp)
100071a4:	10800517 	ldw	r2,20(r2)
100071a8:	e037883a 	mov	sp,fp
100071ac:	df000017 	ldw	fp,0(sp)
100071b0:	dec00104 	addi	sp,sp,4
100071b4:	f800283a 	ret

100071b8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100071b8:	defff704 	addi	sp,sp,-36
100071bc:	dfc00815 	stw	ra,32(sp)
100071c0:	df000715 	stw	fp,28(sp)
100071c4:	df000704 	addi	fp,sp,28
100071c8:	e13ffb15 	stw	r4,-20(fp)
100071cc:	e17ffa15 	stw	r5,-24(fp)
100071d0:	e1bff915 	stw	r6,-28(fp)
      if (__first == begin() && __last == end())
100071d4:	e13ffb17 	ldw	r4,-20(fp)
100071d8:	00074740 	call	10007474 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
100071dc:	e0bffd15 	stw	r2,-12(fp)
100071e0:	e0fffd04 	addi	r3,fp,-12
100071e4:	e0bffc04 	addi	r2,fp,-16
100071e8:	180b883a 	mov	r5,r3
100071ec:	1009883a 	mov	r4,r2
100071f0:	0006f540 	call	10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100071f4:	e0fffc04 	addi	r3,fp,-16
100071f8:	e0bffa04 	addi	r2,fp,-24
100071fc:	180b883a 	mov	r5,r3
10007200:	1009883a 	mov	r4,r2
10007204:	00077c80 	call	100077c8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
10007208:	10803fcc 	andi	r2,r2,255
1000720c:	10001126 	beq	r2,zero,10007254 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
10007210:	e13ffb17 	ldw	r4,-20(fp)
10007214:	00078000 	call	10007800 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
10007218:	e0bfff15 	stw	r2,-4(fp)
1000721c:	e0ffff04 	addi	r3,fp,-4
10007220:	e0bffe04 	addi	r2,fp,-8
10007224:	180b883a 	mov	r5,r3
10007228:	1009883a 	mov	r4,r2
1000722c:	0006f540 	call	10006f54 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10007230:	e0fffe04 	addi	r3,fp,-8
10007234:	e0bff904 	addi	r2,fp,-28
10007238:	180b883a 	mov	r5,r3
1000723c:	1009883a 	mov	r4,r2
10007240:	00077c80 	call	100077c8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
10007244:	10803fcc 	andi	r2,r2,255
10007248:	10000226 	beq	r2,zero,10007254 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
1000724c:	00800044 	movi	r2,1
10007250:	00000106 	br	10007258 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xa0>
10007254:	0005883a 	mov	r2,zero
10007258:	10803fcc 	andi	r2,r2,255
1000725c:	10000326 	beq	r2,zero,1000726c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
	clear();
10007260:	e13ffb17 	ldw	r4,-20(fp)
10007264:	00069240 	call	10006924 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
    }
10007268:	00000f06 	br	100072a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	while (__first != __last)
1000726c:	e0fff904 	addi	r3,fp,-28
10007270:	e0bffa04 	addi	r2,fp,-24
10007274:	180b883a 	mov	r5,r3
10007278:	1009883a 	mov	r4,r2
1000727c:	00063e80 	call	100063e8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10007280:	10803fcc 	andi	r2,r2,255
10007284:	10000826 	beq	r2,zero,100072a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	  _M_erase_aux(__first++);
10007288:	e0bffa04 	addi	r2,fp,-24
1000728c:	000b883a 	mov	r5,zero
10007290:	1009883a 	mov	r4,r2
10007294:	00078440 	call	10007844 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>
10007298:	100b883a 	mov	r5,r2
1000729c:	e13ffb17 	ldw	r4,-20(fp)
100072a0:	000789c0 	call	1000789c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>
	while (__first != __last)
100072a4:	003ff106 	br	1000726c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
    }
100072a8:	0001883a 	nop
100072ac:	e037883a 	mov	sp,fp
100072b0:	dfc00117 	ldw	ra,4(sp)
100072b4:	df000017 	ldw	fp,0(sp)
100072b8:	dec00204 	addi	sp,sp,8
100072bc:	f800283a 	ret

100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_destroy_node(_Link_type __p) noexcept
100072c0:	deffee04 	addi	sp,sp,-72
100072c4:	dfc01115 	stw	ra,68(sp)
100072c8:	df001015 	stw	fp,64(sp)
100072cc:	dc000f15 	stw	r16,60(sp)
100072d0:	df001004 	addi	fp,sp,64
100072d4:	e13ffe15 	stw	r4,-8(fp)
100072d8:	e17ffd15 	stw	r5,-12(fp)
100072dc:	00840074 	movhi	r2,4097
100072e0:	10a26504 	addi	r2,r2,-30316
100072e4:	e0bff615 	stw	r2,-40(fp)
100072e8:	008400b4 	movhi	r2,4098
100072ec:	10910804 	addi	r2,r2,17440
100072f0:	e0bff715 	stw	r2,-36(fp)
100072f4:	e0bff004 	addi	r2,fp,-64
100072f8:	1009883a 	mov	r4,r2
100072fc:	00142740 	call	10014274 <_Unwind_SjLj_Register>
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
10007300:	e13ffe17 	ldw	r4,-8(fp)
10007304:	00079080 	call	10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007308:	1021883a 	mov	r16,r2
1000730c:	e13ffd17 	ldw	r4,-12(fp)
10007310:	000792c0 	call	1000792c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007314:	e03ff115 	stw	zero,-60(fp)
10007318:	100b883a 	mov	r5,r2
1000731c:	8009883a 	mov	r4,r16
10007320:	00079640 	call	10007964 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>
      }
10007324:	0001883a 	nop
10007328:	e0bff004 	addi	r2,fp,-64
1000732c:	1009883a 	mov	r4,r2
10007330:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10007334:	e6ffff04 	addi	sp,fp,-4
10007338:	dfc00217 	ldw	ra,8(sp)
1000733c:	df000117 	ldw	fp,4(sp)
10007340:	dc000017 	ldw	r16,0(sp)
10007344:	dec00304 	addi	sp,sp,12
10007348:	f800283a 	ret

1000734c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
1000734c:	deffef04 	addi	sp,sp,-68
10007350:	dfc01015 	stw	ra,64(sp)
10007354:	df000f15 	stw	fp,60(sp)
10007358:	df000f04 	addi	fp,sp,60
1000735c:	e13fff15 	stw	r4,-4(fp)
10007360:	e17ffe15 	stw	r5,-8(fp)
10007364:	00840074 	movhi	r2,4097
10007368:	10a26504 	addi	r2,r2,-30316
1000736c:	e0bff715 	stw	r2,-36(fp)
10007370:	008400b4 	movhi	r2,4098
10007374:	10910904 	addi	r2,r2,17444
10007378:	e0bff815 	stw	r2,-32(fp)
1000737c:	e0bff104 	addi	r2,fp,-60
10007380:	1009883a 	mov	r4,r2
10007384:	00142740 	call	10014274 <_Unwind_SjLj_Register>
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
10007388:	e13fff17 	ldw	r4,-4(fp)
1000738c:	00079080 	call	10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007390:	e03ff215 	stw	zero,-56(fp)
10007394:	01800044 	movi	r6,1
10007398:	e17ffe17 	ldw	r5,-8(fp)
1000739c:	1009883a 	mov	r4,r2
100073a0:	00079a00 	call	100079a0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>
100073a4:	0001883a 	nop
100073a8:	e0bff104 	addi	r2,fp,-60
100073ac:	1009883a 	mov	r4,r2
100073b0:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
100073b4:	e037883a 	mov	sp,fp
100073b8:	dfc00117 	ldw	ra,4(sp)
100073bc:	df000017 	ldw	fp,0(sp)
100073c0:	dec00204 	addi	sp,sp,8
100073c4:	f800283a 	ret

100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
100073c8:	defffe04 	addi	sp,sp,-8
100073cc:	df000115 	stw	fp,4(sp)
100073d0:	df000104 	addi	fp,sp,4
100073d4:	e13fff15 	stw	r4,-4(fp)
      { return &this->_M_impl._M_header; }
100073d8:	e0bfff17 	ldw	r2,-4(fp)
100073dc:	10800104 	addi	r2,r2,4
100073e0:	e037883a 	mov	sp,fp
100073e4:	df000017 	ldw	fp,0(sp)
100073e8:	dec00104 	addi	sp,sp,4
100073ec:	f800283a 	ret

100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>:
      _S_key(_Const_Link_type __x)
100073f0:	defffc04 	addi	sp,sp,-16
100073f4:	dfc00315 	stw	ra,12(sp)
100073f8:	df000215 	stw	fp,8(sp)
100073fc:	df000204 	addi	fp,sp,8
10007400:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
10007404:	e13ffe17 	ldw	r4,-8(fp)
10007408:	00079e40 	call	100079e4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>
1000740c:	1007883a 	mov	r3,r2
10007410:	e0bfffc4 	addi	r2,fp,-1
10007414:	180b883a 	mov	r5,r3
10007418:	1009883a 	mov	r4,r2
1000741c:	0006d140 	call	10006d14 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007420:	0001883a 	nop
10007424:	e037883a 	mov	sp,fp
10007428:	dfc00117 	ldw	ra,4(sp)
1000742c:	df000017 	ldw	fp,0(sp)
10007430:	dec00204 	addi	sp,sp,8
10007434:	f800283a 	ret

10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>:
      operator()(const _Tp& __x, const _Tp& __y) const
10007438:	defffb04 	addi	sp,sp,-20
1000743c:	dfc00415 	stw	ra,16(sp)
10007440:	df000315 	stw	fp,12(sp)
10007444:	df000304 	addi	fp,sp,12
10007448:	e13fff15 	stw	r4,-4(fp)
1000744c:	e17ffe15 	stw	r5,-8(fp)
10007450:	e1bffd15 	stw	r6,-12(fp)
      { return __x < __y; }
10007454:	e17ffd17 	ldw	r5,-12(fp)
10007458:	e13ffe17 	ldw	r4,-8(fp)
1000745c:	00060cc0 	call	100060cc <_ZNK9TileGroupltERKS_>
10007460:	e037883a 	mov	sp,fp
10007464:	dfc00117 	ldw	ra,4(sp)
10007468:	df000017 	ldw	fp,0(sp)
1000746c:	dec00204 	addi	sp,sp,8
10007470:	f800283a 	ret

10007474 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
10007474:	defffc04 	addi	sp,sp,-16
10007478:	dfc00315 	stw	ra,12(sp)
1000747c:	df000215 	stw	fp,8(sp)
10007480:	df000204 	addi	fp,sp,8
10007484:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(this->_M_impl._M_header._M_left); }
10007488:	e0bffe17 	ldw	r2,-8(fp)
1000748c:	10c00317 	ldw	r3,12(r2)
10007490:	e0bfff04 	addi	r2,fp,-4
10007494:	180b883a 	mov	r5,r3
10007498:	1009883a 	mov	r4,r2
1000749c:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100074a0:	e0bfff17 	ldw	r2,-4(fp)
100074a4:	e037883a 	mov	sp,fp
100074a8:	dfc00117 	ldw	ra,4(sp)
100074ac:	df000017 	ldw	fp,0(sp)
100074b0:	dec00204 	addi	sp,sp,8
100074b4:	f800283a 	ret

100074b8 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
100074b8:	defffd04 	addi	sp,sp,-12
100074bc:	df000215 	stw	fp,8(sp)
100074c0:	df000204 	addi	fp,sp,8
100074c4:	e13fff15 	stw	r4,-4(fp)
100074c8:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
100074cc:	e0bfff17 	ldw	r2,-4(fp)
100074d0:	10c00017 	ldw	r3,0(r2)
100074d4:	e0bffe17 	ldw	r2,-8(fp)
100074d8:	10800017 	ldw	r2,0(r2)
100074dc:	1885003a 	cmpeq	r2,r3,r2
100074e0:	e037883a 	mov	sp,fp
100074e4:	df000017 	ldw	fp,0(sp)
100074e8:	dec00104 	addi	sp,sp,4
100074ec:	f800283a 	ret

100074f0 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
100074f0:	defffd04 	addi	sp,sp,-12
100074f4:	dfc00215 	stw	ra,8(sp)
100074f8:	df000115 	stw	fp,4(sp)
100074fc:	df000104 	addi	fp,sp,4
10007500:	e13fff15 	stw	r4,-4(fp)
	_M_node = _Rb_tree_decrement(_M_node);
10007504:	e0bfff17 	ldw	r2,-4(fp)
10007508:	10800017 	ldw	r2,0(r2)
1000750c:	1009883a 	mov	r4,r2
10007510:	000951c0 	call	1000951c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
10007514:	1007883a 	mov	r3,r2
10007518:	e0bfff17 	ldw	r2,-4(fp)
1000751c:	10c00015 	stw	r3,0(r2)
	return *this;
10007520:	e0bfff17 	ldw	r2,-4(fp)
      }
10007524:	e037883a 	mov	sp,fp
10007528:	dfc00117 	ldw	ra,4(sp)
1000752c:	df000017 	ldw	fp,0(sp)
10007530:	dec00204 	addi	sp,sp,8
10007534:	f800283a 	ret

10007538 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
10007538:	defffc04 	addi	sp,sp,-16
1000753c:	dfc00315 	stw	ra,12(sp)
10007540:	df000215 	stw	fp,8(sp)
10007544:	df000204 	addi	fp,sp,8
10007548:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
1000754c:	e13ffe17 	ldw	r4,-8(fp)
10007550:	0007a140 	call	10007a14 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>
10007554:	1007883a 	mov	r3,r2
10007558:	e0bfffc4 	addi	r2,fp,-1
1000755c:	180b883a 	mov	r5,r3
10007560:	1009883a 	mov	r4,r2
10007564:	0006d140 	call	10006d14 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007568:	0001883a 	nop
1000756c:	e037883a 	mov	sp,fp
10007570:	dfc00117 	ldw	ra,4(sp)
10007574:	df000017 	ldw	fp,0(sp)
10007578:	dec00204 	addi	sp,sp,8
1000757c:	f800283a 	ret

10007580 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>:
	  operator()(_Arg&& __arg) const
10007580:	defffb04 	addi	sp,sp,-20
10007584:	dfc00415 	stw	ra,16(sp)
10007588:	df000315 	stw	fp,12(sp)
1000758c:	dc000215 	stw	r16,8(sp)
10007590:	df000304 	addi	fp,sp,12
10007594:	e13ffe15 	stw	r4,-8(fp)
10007598:	e17ffd15 	stw	r5,-12(fp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
1000759c:	e0bffe17 	ldw	r2,-8(fp)
100075a0:	14000017 	ldw	r16,0(r2)
100075a4:	e13ffd17 	ldw	r4,-12(fp)
100075a8:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
100075ac:	100b883a 	mov	r5,r2
100075b0:	8009883a 	mov	r4,r16
100075b4:	0007a440 	call	10007a44 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>
100075b8:	e6ffff04 	addi	sp,fp,-4
100075bc:	dfc00217 	ldw	ra,8(sp)
100075c0:	df000117 	ldw	fp,4(sp)
100075c4:	dc000017 	ldw	r16,0(sp)
100075c8:	dec00304 	addi	sp,sp,12
100075cc:	f800283a 	ret

100075d0 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
100075d0:	defffe04 	addi	sp,sp,-8
100075d4:	df000115 	stw	fp,4(sp)
100075d8:	df000104 	addi	fp,sp,4
100075dc:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
100075e0:	e0bfff17 	ldw	r2,-4(fp)
100075e4:	e037883a 	mov	sp,fp
100075e8:	df000017 	ldw	fp,0(sp)
100075ec:	dec00104 	addi	sp,sp,4
100075f0:	f800283a 	ret

100075f4 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() const noexcept
100075f4:	defffe04 	addi	sp,sp,-8
100075f8:	df000115 	stw	fp,4(sp)
100075fc:	df000104 	addi	fp,sp,4
10007600:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const void*>(&_M_storage); }
10007604:	e0bfff17 	ldw	r2,-4(fp)
10007608:	e037883a 	mov	sp,fp
1000760c:	df000017 	ldw	fp,0(sp)
10007610:	dec00104 	addi	sp,sp,4
10007614:	f800283a 	ret

10007618 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10007618:	defff804 	addi	sp,sp,-32
1000761c:	dfc00715 	stw	ra,28(sp)
10007620:	df000615 	stw	fp,24(sp)
10007624:	dc000515 	stw	r16,20(sp)
10007628:	df000604 	addi	fp,sp,24
1000762c:	e13ffd15 	stw	r4,-12(fp)
10007630:	e17ffc15 	stw	r5,-16(fp)
10007634:	e1bffb15 	stw	r6,-20(fp)
10007638:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
1000763c:	e0bffc17 	ldw	r2,-16(fp)
10007640:	10001426 	beq	r2,zero,10007694 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x7c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
10007644:	e43ffd17 	ldw	r16,-12(fp)
10007648:	e13ffc17 	ldw	r4,-16(fp)
1000764c:	00073f00 	call	100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007650:	e1bffa17 	ldw	r6,-24(fp)
10007654:	100b883a 	mov	r5,r2
10007658:	8009883a 	mov	r4,r16
1000765c:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007660:	1080005c 	xori	r2,r2,1
10007664:	10803fcc 	andi	r2,r2,255
10007668:	10000626 	beq	r2,zero,10007684 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x6c>
	  __y = __x, __x = _S_left(__x);
1000766c:	e0bffc17 	ldw	r2,-16(fp)
10007670:	e0bffb15 	stw	r2,-20(fp)
10007674:	e13ffc17 	ldw	r4,-16(fp)
10007678:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
1000767c:	e0bffc15 	stw	r2,-16(fp)
10007680:	003fee06 	br	1000763c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
10007684:	e13ffc17 	ldw	r4,-16(fp)
10007688:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
1000768c:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
10007690:	003fea06 	br	1000763c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
10007694:	e0bffe04 	addi	r2,fp,-8
10007698:	e17ffb17 	ldw	r5,-20(fp)
1000769c:	1009883a 	mov	r4,r2
100076a0:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100076a4:	e0bffe17 	ldw	r2,-8(fp)
    }
100076a8:	e6ffff04 	addi	sp,fp,-4
100076ac:	dfc00217 	ldw	ra,8(sp)
100076b0:	df000117 	ldw	fp,4(sp)
100076b4:	dc000017 	ldw	r16,0(sp)
100076b8:	dec00304 	addi	sp,sp,12
100076bc:	f800283a 	ret

100076c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100076c0:	defff804 	addi	sp,sp,-32
100076c4:	dfc00715 	stw	ra,28(sp)
100076c8:	df000615 	stw	fp,24(sp)
100076cc:	dc000515 	stw	r16,20(sp)
100076d0:	df000604 	addi	fp,sp,24
100076d4:	e13ffd15 	stw	r4,-12(fp)
100076d8:	e17ffc15 	stw	r5,-16(fp)
100076dc:	e1bffb15 	stw	r6,-20(fp)
100076e0:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
100076e4:	e0bffc17 	ldw	r2,-16(fp)
100076e8:	10001326 	beq	r2,zero,10007738 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x78>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
100076ec:	e43ffd17 	ldw	r16,-12(fp)
100076f0:	e13ffc17 	ldw	r4,-16(fp)
100076f4:	00073f00 	call	100073f0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
100076f8:	100d883a 	mov	r6,r2
100076fc:	e17ffa17 	ldw	r5,-24(fp)
10007700:	8009883a 	mov	r4,r16
10007704:	00074380 	call	10007438 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007708:	10803fcc 	andi	r2,r2,255
1000770c:	10000626 	beq	r2,zero,10007728 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x68>
	  __y = __x, __x = _S_left(__x);
10007710:	e0bffc17 	ldw	r2,-16(fp)
10007714:	e0bffb15 	stw	r2,-20(fp)
10007718:	e13ffc17 	ldw	r4,-16(fp)
1000771c:	00069f40 	call	100069f4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007720:	e0bffc15 	stw	r2,-16(fp)
10007724:	003fef06 	br	100076e4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
10007728:	e13ffc17 	ldw	r4,-16(fp)
1000772c:	00069cc0 	call	100069cc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007730:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
10007734:	003feb06 	br	100076e4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
10007738:	e0bffe04 	addi	r2,fp,-8
1000773c:	e17ffb17 	ldw	r5,-20(fp)
10007740:	1009883a 	mov	r4,r2
10007744:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007748:	e0bffe17 	ldw	r2,-8(fp)
    }
1000774c:	e6ffff04 	addi	sp,fp,-4
10007750:	dfc00217 	ldw	ra,8(sp)
10007754:	df000117 	ldw	fp,4(sp)
10007758:	dc000017 	ldw	r16,0(sp)
1000775c:	dec00304 	addi	sp,sp,12
10007760:	f800283a 	ret

10007764 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
10007764:	defffb04 	addi	sp,sp,-20
10007768:	dfc00415 	stw	ra,16(sp)
1000776c:	df000315 	stw	fp,12(sp)
10007770:	df000304 	addi	fp,sp,12
10007774:	e13fff15 	stw	r4,-4(fp)
10007778:	e17ffe15 	stw	r5,-8(fp)
1000777c:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10007780:	e13ffe17 	ldw	r4,-8(fp)
10007784:	0006e780 	call	10006e78 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
10007788:	1007883a 	mov	r3,r2
1000778c:	e0bfff17 	ldw	r2,-4(fp)
10007790:	18c00017 	ldw	r3,0(r3)
10007794:	10c00015 	stw	r3,0(r2)
10007798:	e13ffd17 	ldw	r4,-12(fp)
1000779c:	0006e780 	call	10006e78 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
100077a0:	1007883a 	mov	r3,r2
100077a4:	e0bfff17 	ldw	r2,-4(fp)
100077a8:	18c00017 	ldw	r3,0(r3)
100077ac:	10c00115 	stw	r3,4(r2)
100077b0:	0001883a 	nop
100077b4:	e037883a 	mov	sp,fp
100077b8:	dfc00117 	ldw	ra,4(sp)
100077bc:	df000017 	ldw	fp,0(sp)
100077c0:	dec00204 	addi	sp,sp,8
100077c4:	f800283a 	ret

100077c8 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
100077c8:	defffd04 	addi	sp,sp,-12
100077cc:	df000215 	stw	fp,8(sp)
100077d0:	df000204 	addi	fp,sp,8
100077d4:	e13fff15 	stw	r4,-4(fp)
100077d8:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
100077dc:	e0bfff17 	ldw	r2,-4(fp)
100077e0:	10c00017 	ldw	r3,0(r2)
100077e4:	e0bffe17 	ldw	r2,-8(fp)
100077e8:	10800017 	ldw	r2,0(r2)
100077ec:	1885003a 	cmpeq	r2,r3,r2
100077f0:	e037883a 	mov	sp,fp
100077f4:	df000017 	ldw	fp,0(sp)
100077f8:	dec00104 	addi	sp,sp,4
100077fc:	f800283a 	ret

10007800 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
10007800:	defffc04 	addi	sp,sp,-16
10007804:	dfc00315 	stw	ra,12(sp)
10007808:	df000215 	stw	fp,8(sp)
1000780c:	df000204 	addi	fp,sp,8
10007810:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(&this->_M_impl._M_header); }
10007814:	e0bffe17 	ldw	r2,-8(fp)
10007818:	10c00104 	addi	r3,r2,4
1000781c:	e0bfff04 	addi	r2,fp,-4
10007820:	180b883a 	mov	r5,r3
10007824:	1009883a 	mov	r4,r2
10007828:	0006efc0 	call	10006efc <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
1000782c:	e0bfff17 	ldw	r2,-4(fp)
10007830:	e037883a 	mov	sp,fp
10007834:	dfc00117 	ldw	ra,4(sp)
10007838:	df000017 	ldw	fp,0(sp)
1000783c:	dec00204 	addi	sp,sp,8
10007840:	f800283a 	ret

10007844 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
10007844:	defffb04 	addi	sp,sp,-20
10007848:	dfc00415 	stw	ra,16(sp)
1000784c:	df000315 	stw	fp,12(sp)
10007850:	df000304 	addi	fp,sp,12
10007854:	e13ffe15 	stw	r4,-8(fp)
10007858:	e17ffd15 	stw	r5,-12(fp)
	_Self __tmp = *this;
1000785c:	e0bffe17 	ldw	r2,-8(fp)
10007860:	10800017 	ldw	r2,0(r2)
10007864:	e0bfff15 	stw	r2,-4(fp)
	_M_node = _Rb_tree_increment(_M_node);
10007868:	e0bffe17 	ldw	r2,-8(fp)
1000786c:	10800017 	ldw	r2,0(r2)
10007870:	1009883a 	mov	r4,r2
10007874:	00095180 	call	10009518 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
10007878:	1007883a 	mov	r3,r2
1000787c:	e0bffe17 	ldw	r2,-8(fp)
10007880:	10c00015 	stw	r3,0(r2)
	return __tmp;
10007884:	e0bfff17 	ldw	r2,-4(fp)
      }
10007888:	e037883a 	mov	sp,fp
1000788c:	dfc00117 	ldw	ra,4(sp)
10007890:	df000017 	ldw	fp,0(sp)
10007894:	dec00204 	addi	sp,sp,8
10007898:	f800283a 	ret

1000789c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1000789c:	defffb04 	addi	sp,sp,-20
100078a0:	dfc00415 	stw	ra,16(sp)
100078a4:	df000315 	stw	fp,12(sp)
100078a8:	df000304 	addi	fp,sp,12
100078ac:	e13ffe15 	stw	r4,-8(fp)
100078b0:	e17ffd15 	stw	r5,-12(fp)
				(const_cast<_Base_ptr>(__position._M_node),
100078b4:	e0fffd17 	ldw	r3,-12(fp)
				 this->_M_impl._M_header));
100078b8:	e0bffe17 	ldw	r2,-8(fp)
100078bc:	10800104 	addi	r2,r2,4
				(const_cast<_Base_ptr>(__position._M_node),
100078c0:	100b883a 	mov	r5,r2
100078c4:	1809883a 	mov	r4,r3
100078c8:	00098300 	call	10009830 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
100078cc:	e0bfff15 	stw	r2,-4(fp)
      _M_drop_node(__y);
100078d0:	e17fff17 	ldw	r5,-4(fp)
100078d4:	e13ffe17 	ldw	r4,-8(fp)
100078d8:	0006a1c0 	call	10006a1c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
      --_M_impl._M_node_count;
100078dc:	e0bffe17 	ldw	r2,-8(fp)
100078e0:	10800517 	ldw	r2,20(r2)
100078e4:	10ffffc4 	addi	r3,r2,-1
100078e8:	e0bffe17 	ldw	r2,-8(fp)
100078ec:	10c00515 	stw	r3,20(r2)
    }
100078f0:	0001883a 	nop
100078f4:	e037883a 	mov	sp,fp
100078f8:	dfc00117 	ldw	ra,4(sp)
100078fc:	df000017 	ldw	fp,0(sp)
10007900:	dec00204 	addi	sp,sp,8
10007904:	f800283a 	ret

10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
10007908:	defffe04 	addi	sp,sp,-8
1000790c:	df000115 	stw	fp,4(sp)
10007910:	df000104 	addi	fp,sp,4
10007914:	e13fff15 	stw	r4,-4(fp)
      { return this->_M_impl; }
10007918:	e0bfff17 	ldw	r2,-4(fp)
1000791c:	e037883a 	mov	sp,fp
10007920:	df000017 	ldw	fp,0(sp)
10007924:	dec00104 	addi	sp,sp,4
10007928:	f800283a 	ret

1000792c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr()
1000792c:	defffd04 	addi	sp,sp,-12
10007930:	dfc00215 	stw	ra,8(sp)
10007934:	df000115 	stw	fp,4(sp)
10007938:	df000104 	addi	fp,sp,4
1000793c:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
10007940:	e0bfff17 	ldw	r2,-4(fp)
10007944:	10800404 	addi	r2,r2,16
10007948:	1009883a 	mov	r4,r2
1000794c:	0007a980 	call	10007a98 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
10007950:	e037883a 	mov	sp,fp
10007954:	dfc00117 	ldw	ra,4(sp)
10007958:	df000017 	ldw	fp,0(sp)
1000795c:	dec00204 	addi	sp,sp,8
10007960:	f800283a 	ret

10007964 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
10007964:	defffc04 	addi	sp,sp,-16
10007968:	dfc00315 	stw	ra,12(sp)
1000796c:	df000215 	stw	fp,8(sp)
10007970:	df000204 	addi	fp,sp,8
10007974:	e13fff15 	stw	r4,-4(fp)
10007978:	e17ffe15 	stw	r5,-8(fp)
	{ __a.destroy(__p); }
1000797c:	e17ffe17 	ldw	r5,-8(fp)
10007980:	e13fff17 	ldw	r4,-4(fp)
10007984:	0007ac80 	call	10007ac8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>
10007988:	0001883a 	nop
1000798c:	e037883a 	mov	sp,fp
10007990:	dfc00117 	ldw	ra,4(sp)
10007994:	df000017 	ldw	fp,0(sp)
10007998:	dec00204 	addi	sp,sp,8
1000799c:	f800283a 	ret

100079a0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
100079a0:	defffb04 	addi	sp,sp,-20
100079a4:	dfc00415 	stw	ra,16(sp)
100079a8:	df000315 	stw	fp,12(sp)
100079ac:	df000304 	addi	fp,sp,12
100079b0:	e13fff15 	stw	r4,-4(fp)
100079b4:	e17ffe15 	stw	r5,-8(fp)
100079b8:	e1bffd15 	stw	r6,-12(fp)
      { __a.deallocate(__p, __n); }
100079bc:	e1bffd17 	ldw	r6,-12(fp)
100079c0:	e17ffe17 	ldw	r5,-8(fp)
100079c4:	e13fff17 	ldw	r4,-4(fp)
100079c8:	0007af00 	call	10007af0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>
100079cc:	0001883a 	nop
100079d0:	e037883a 	mov	sp,fp
100079d4:	dfc00117 	ldw	ra,4(sp)
100079d8:	df000017 	ldw	fp,0(sp)
100079dc:	dec00204 	addi	sp,sp,8
100079e0:	f800283a 	ret

100079e4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>:
      _S_value(_Const_Link_type __x)
100079e4:	defffd04 	addi	sp,sp,-12
100079e8:	dfc00215 	stw	ra,8(sp)
100079ec:	df000115 	stw	fp,4(sp)
100079f0:	df000104 	addi	fp,sp,4
100079f4:	e13fff15 	stw	r4,-4(fp)
      { return *__x->_M_valptr(); }
100079f8:	e13fff17 	ldw	r4,-4(fp)
100079fc:	00068480 	call	10006848 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007a00:	e037883a 	mov	sp,fp
10007a04:	dfc00117 	ldw	ra,4(sp)
10007a08:	df000017 	ldw	fp,0(sp)
10007a0c:	dec00204 	addi	sp,sp,8
10007a10:	f800283a 	ret

10007a14 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>:
      _S_value(_Const_Base_ptr __x)
10007a14:	defffd04 	addi	sp,sp,-12
10007a18:	dfc00215 	stw	ra,8(sp)
10007a1c:	df000115 	stw	fp,4(sp)
10007a20:	df000104 	addi	fp,sp,4
10007a24:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
10007a28:	e13fff17 	ldw	r4,-4(fp)
10007a2c:	00068480 	call	10006848 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007a30:	e037883a 	mov	sp,fp
10007a34:	dfc00117 	ldw	ra,4(sp)
10007a38:	df000017 	ldw	fp,0(sp)
10007a3c:	dec00204 	addi	sp,sp,8
10007a40:	f800283a 	ret

10007a44 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_create_node(_Args&&... __args)
10007a44:	defffb04 	addi	sp,sp,-20
10007a48:	dfc00415 	stw	ra,16(sp)
10007a4c:	df000315 	stw	fp,12(sp)
10007a50:	df000304 	addi	fp,sp,12
10007a54:	e13ffe15 	stw	r4,-8(fp)
10007a58:	e17ffd15 	stw	r5,-12(fp)
	  _Link_type __tmp = _M_get_node();
10007a5c:	e13ffe17 	ldw	r4,-8(fp)
10007a60:	0007b2c0 	call	10007b2c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>
10007a64:	e0bfff15 	stw	r2,-4(fp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
10007a68:	e13ffd17 	ldw	r4,-12(fp)
10007a6c:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007a70:	100d883a 	mov	r6,r2
10007a74:	e17fff17 	ldw	r5,-4(fp)
10007a78:	e13ffe17 	ldw	r4,-8(fp)
10007a7c:	0007b680 	call	10007b68 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>
	  return __tmp;
10007a80:	e0bfff17 	ldw	r2,-4(fp)
	}
10007a84:	e037883a 	mov	sp,fp
10007a88:	dfc00117 	ldw	ra,4(sp)
10007a8c:	df000017 	ldw	fp,0(sp)
10007a90:	dec00204 	addi	sp,sp,8
10007a94:	f800283a 	ret

10007a98 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _M_ptr() noexcept
10007a98:	defffd04 	addi	sp,sp,-12
10007a9c:	dfc00215 	stw	ra,8(sp)
10007aa0:	df000115 	stw	fp,4(sp)
10007aa4:	df000104 	addi	fp,sp,4
10007aa8:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Tp*>(_M_addr()); }
10007aac:	e13fff17 	ldw	r4,-4(fp)
10007ab0:	0007cd40 	call	10007cd4 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
10007ab4:	e037883a 	mov	sp,fp
10007ab8:	dfc00117 	ldw	ra,4(sp)
10007abc:	df000017 	ldw	fp,0(sp)
10007ac0:	dec00204 	addi	sp,sp,8
10007ac4:	f800283a 	ret

10007ac8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>:
	construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p) { __p->~_Up(); }
10007ac8:	defffd04 	addi	sp,sp,-12
10007acc:	df000215 	stw	fp,8(sp)
10007ad0:	df000204 	addi	fp,sp,8
10007ad4:	e13fff15 	stw	r4,-4(fp)
10007ad8:	e17ffe15 	stw	r5,-8(fp)
10007adc:	0001883a 	nop
10007ae0:	e037883a 	mov	sp,fp
10007ae4:	df000017 	ldw	fp,0(sp)
10007ae8:	dec00104 	addi	sp,sp,4
10007aec:	f800283a 	ret

10007af0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>:
      deallocate(pointer __p, size_type)
10007af0:	defffb04 	addi	sp,sp,-20
10007af4:	dfc00415 	stw	ra,16(sp)
10007af8:	df000315 	stw	fp,12(sp)
10007afc:	df000304 	addi	fp,sp,12
10007b00:	e13fff15 	stw	r4,-4(fp)
10007b04:	e17ffe15 	stw	r5,-8(fp)
10007b08:	e1bffd15 	stw	r6,-12(fp)
	::operator delete(__p);
10007b0c:	e13ffe17 	ldw	r4,-8(fp)
10007b10:	00083fc0 	call	100083fc <_ZdlPv>
      }
10007b14:	0001883a 	nop
10007b18:	e037883a 	mov	sp,fp
10007b1c:	dfc00117 	ldw	ra,4(sp)
10007b20:	df000017 	ldw	fp,0(sp)
10007b24:	dec00204 	addi	sp,sp,8
10007b28:	f800283a 	ret

10007b2c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>:
      _M_get_node()
10007b2c:	defffd04 	addi	sp,sp,-12
10007b30:	dfc00215 	stw	ra,8(sp)
10007b34:	df000115 	stw	fp,4(sp)
10007b38:	df000104 	addi	fp,sp,4
10007b3c:	e13fff15 	stw	r4,-4(fp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
10007b40:	e13fff17 	ldw	r4,-4(fp)
10007b44:	00079080 	call	10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007b48:	01400044 	movi	r5,1
10007b4c:	1009883a 	mov	r4,r2
10007b50:	0007cf80 	call	10007cf8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>
10007b54:	e037883a 	mov	sp,fp
10007b58:	dfc00117 	ldw	ra,4(sp)
10007b5c:	df000017 	ldw	fp,0(sp)
10007b60:	dec00204 	addi	sp,sp,8
10007b64:	f800283a 	ret

10007b68 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
10007b68:	deffe404 	addi	sp,sp,-112
10007b6c:	dfc01b15 	stw	ra,108(sp)
10007b70:	df001a15 	stw	fp,104(sp)
10007b74:	ddc01915 	stw	r23,100(sp)
10007b78:	dd801815 	stw	r22,96(sp)
10007b7c:	dd401715 	stw	r21,92(sp)
10007b80:	dd001615 	stw	r20,88(sp)
10007b84:	dcc01515 	stw	r19,84(sp)
10007b88:	dc801415 	stw	r18,80(sp)
10007b8c:	dc401315 	stw	r17,76(sp)
10007b90:	dc001215 	stw	r16,72(sp)
10007b94:	df001a04 	addi	fp,sp,104
10007b98:	e13ff715 	stw	r4,-36(fp)
10007b9c:	e17ff615 	stw	r5,-40(fp)
10007ba0:	e1bff515 	stw	r6,-44(fp)
10007ba4:	00840074 	movhi	r2,4097
10007ba8:	10a26504 	addi	r2,r2,-30316
10007bac:	e0bfee15 	stw	r2,-72(fp)
10007bb0:	008400b4 	movhi	r2,4098
10007bb4:	10910a04 	addi	r2,r2,17448
10007bb8:	e0bfef15 	stw	r2,-68(fp)
10007bbc:	e0bff004 	addi	r2,fp,-64
10007bc0:	e0fff804 	addi	r3,fp,-32
10007bc4:	10c00015 	stw	r3,0(r2)
10007bc8:	00c40034 	movhi	r3,4096
10007bcc:	18df0d04 	addi	r3,r3,31796
10007bd0:	10c00115 	stw	r3,4(r2)
10007bd4:	16c00215 	stw	sp,8(r2)
10007bd8:	e0bfe804 	addi	r2,fp,-96
10007bdc:	1009883a 	mov	r4,r2
10007be0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
	      ::new(__node) _Rb_tree_node<_Val>;
10007be4:	e0bff617 	ldw	r2,-40(fp)
10007be8:	100b883a 	mov	r5,r2
10007bec:	01000504 	movi	r4,20
10007bf0:	0005f880 	call	10005f88 <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
10007bf4:	e13ff717 	ldw	r4,-36(fp)
10007bf8:	00079080 	call	10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007bfc:	e0bfe715 	stw	r2,-100(fp)
10007c00:	e13ff617 	ldw	r4,-40(fp)
10007c04:	000792c0 	call	1000792c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007c08:	e0bfe615 	stw	r2,-104(fp)
10007c0c:	e13ff517 	ldw	r4,-44(fp)
10007c10:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007c14:	1007883a 	mov	r3,r2
10007c18:	00800044 	movi	r2,1
10007c1c:	e0bfe915 	stw	r2,-92(fp)
10007c20:	180d883a 	mov	r6,r3
10007c24:	e17fe617 	ldw	r5,-104(fp)
10007c28:	e13fe717 	ldw	r4,-100(fp)
10007c2c:	0007d340 	call	10007d34 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>
	}
10007c30:	00001806 	br	10007c94 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x12c>
10007c34:	e7000804 	addi	fp,fp,32
10007c38:	e0ffea17 	ldw	r3,-88(fp)
10007c3c:	e0bfe917 	ldw	r2,-92(fp)
10007c40:	10000326 	beq	r2,zero,10007c50 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0xe8>
10007c44:	10bfffc4 	addi	r2,r2,-1
10007c48:	10000a26 	beq	r2,zero,10007c74 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x10c>
10007c4c:	003b68fa 	trap	3
10007c50:	1805883a 	mov	r2,r3
	  __catch(...)
10007c54:	1009883a 	mov	r4,r2
10007c58:	0007f400 	call	10007f40 <__cxa_begin_catch>
	      _M_put_node(__node);
10007c5c:	e17ff617 	ldw	r5,-40(fp)
10007c60:	e13ff717 	ldw	r4,-36(fp)
10007c64:	000734c0 	call	1000734c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
	      __throw_exception_again;
10007c68:	00800084 	movi	r2,2
10007c6c:	e0bfe915 	stw	r2,-92(fp)
10007c70:	00083780 	call	10008378 <__cxa_rethrow>
10007c74:	e0ffe715 	stw	r3,-100(fp)
	  __catch(...)
10007c78:	e03fe915 	stw	zero,-92(fp)
10007c7c:	0007fec0 	call	10007fec <__cxa_end_catch>
10007c80:	e0ffe717 	ldw	r3,-100(fp)
10007c84:	00bfffc4 	movi	r2,-1
10007c88:	e0bfe915 	stw	r2,-92(fp)
10007c8c:	1809883a 	mov	r4,r3
10007c90:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>
10007c94:	e0bfe804 	addi	r2,fp,-96
10007c98:	1009883a 	mov	r4,r2
10007c9c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
	}
10007ca0:	e6fff804 	addi	sp,fp,-32
10007ca4:	dfc00917 	ldw	ra,36(sp)
10007ca8:	df000817 	ldw	fp,32(sp)
10007cac:	ddc00717 	ldw	r23,28(sp)
10007cb0:	dd800617 	ldw	r22,24(sp)
10007cb4:	dd400517 	ldw	r21,20(sp)
10007cb8:	dd000417 	ldw	r20,16(sp)
10007cbc:	dcc00317 	ldw	r19,12(sp)
10007cc0:	dc800217 	ldw	r18,8(sp)
10007cc4:	dc400117 	ldw	r17,4(sp)
10007cc8:	dc000017 	ldw	r16,0(sp)
10007ccc:	dec00a04 	addi	sp,sp,40
10007cd0:	f800283a 	ret

10007cd4 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() noexcept
10007cd4:	defffe04 	addi	sp,sp,-8
10007cd8:	df000115 	stw	fp,4(sp)
10007cdc:	df000104 	addi	fp,sp,4
10007ce0:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<void*>(&_M_storage); }
10007ce4:	e0bfff17 	ldw	r2,-4(fp)
10007ce8:	e037883a 	mov	sp,fp
10007cec:	df000017 	ldw	fp,0(sp)
10007cf0:	dec00104 	addi	sp,sp,4
10007cf4:	f800283a 	ret

10007cf8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>:
      allocate(allocator_type& __a, size_type __n)
10007cf8:	defffc04 	addi	sp,sp,-16
10007cfc:	dfc00315 	stw	ra,12(sp)
10007d00:	df000215 	stw	fp,8(sp)
10007d04:	df000204 	addi	fp,sp,8
10007d08:	e13fff15 	stw	r4,-4(fp)
10007d0c:	e17ffe15 	stw	r5,-8(fp)
      { return __a.allocate(__n); }
10007d10:	000d883a 	mov	r6,zero
10007d14:	e17ffe17 	ldw	r5,-8(fp)
10007d18:	e13fff17 	ldw	r4,-4(fp)
10007d1c:	0007d800 	call	10007d80 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>
10007d20:	e037883a 	mov	sp,fp
10007d24:	dfc00117 	ldw	ra,4(sp)
10007d28:	df000017 	ldw	fp,0(sp)
10007d2c:	dec00204 	addi	sp,sp,8
10007d30:	f800283a 	ret

10007d34 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
10007d34:	defffb04 	addi	sp,sp,-20
10007d38:	dfc00415 	stw	ra,16(sp)
10007d3c:	df000315 	stw	fp,12(sp)
10007d40:	df000304 	addi	fp,sp,12
10007d44:	e13fff15 	stw	r4,-4(fp)
10007d48:	e17ffe15 	stw	r5,-8(fp)
10007d4c:	e1bffd15 	stw	r6,-12(fp)
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
10007d50:	e13ffd17 	ldw	r4,-12(fp)
10007d54:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007d58:	100d883a 	mov	r6,r2
10007d5c:	e17ffe17 	ldw	r5,-8(fp)
10007d60:	e13fff17 	ldw	r4,-4(fp)
10007d64:	0007de00 	call	10007de0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
10007d68:	0001883a 	nop
10007d6c:	e037883a 	mov	sp,fp
10007d70:	dfc00117 	ldw	ra,4(sp)
10007d74:	df000017 	ldw	fp,0(sp)
10007d78:	dec00204 	addi	sp,sp,8
10007d7c:	f800283a 	ret

10007d80 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
10007d80:	defffb04 	addi	sp,sp,-20
10007d84:	dfc00415 	stw	ra,16(sp)
10007d88:	df000315 	stw	fp,12(sp)
10007d8c:	df000304 	addi	fp,sp,12
10007d90:	e13fff15 	stw	r4,-4(fp)
10007d94:	e17ffe15 	stw	r5,-8(fp)
10007d98:	e1bffd15 	stw	r6,-12(fp)
	if (__n > this->max_size())
10007d9c:	e13fff17 	ldw	r4,-4(fp)
10007da0:	0007e480 	call	10007e48 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>
10007da4:	1007883a 	mov	r3,r2
10007da8:	e0bffe17 	ldw	r2,-8(fp)
10007dac:	1885803a 	cmpltu	r2,r3,r2
10007db0:	10803fcc 	andi	r2,r2,255
10007db4:	10000126 	beq	r2,zero,10007dbc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv+0x3c>
	  std::__throw_bad_alloc();
10007db8:	0009d4c0 	call	10009d4c <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
10007dbc:	e0bffe17 	ldw	r2,-8(fp)
10007dc0:	10800524 	muli	r2,r2,20
10007dc4:	1009883a 	mov	r4,r2
10007dc8:	0007ea80 	call	10007ea8 <_Znwj>
      }
10007dcc:	e037883a 	mov	sp,fp
10007dd0:	dfc00117 	ldw	ra,4(sp)
10007dd4:	df000017 	ldw	fp,0(sp)
10007dd8:	dec00204 	addi	sp,sp,8
10007ddc:	f800283a 	ret

10007de0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
10007de0:	defffa04 	addi	sp,sp,-24
10007de4:	dfc00515 	stw	ra,20(sp)
10007de8:	df000415 	stw	fp,16(sp)
10007dec:	dc000315 	stw	r16,12(sp)
10007df0:	df000404 	addi	fp,sp,16
10007df4:	e13ffe15 	stw	r4,-8(fp)
10007df8:	e17ffd15 	stw	r5,-12(fp)
10007dfc:	e1bffc15 	stw	r6,-16(fp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
10007e00:	e13ffc17 	ldw	r4,-16(fp)
10007e04:	00065e00 	call	100065e0 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007e08:	1021883a 	mov	r16,r2
10007e0c:	e0bffd17 	ldw	r2,-12(fp)
10007e10:	100b883a 	mov	r5,r2
10007e14:	01000084 	movi	r4,2
10007e18:	0005f880 	call	10005f88 <_ZnwjPv>
10007e1c:	80c00003 	ldbu	r3,0(r16)
10007e20:	10c00005 	stb	r3,0(r2)
10007e24:	80c00043 	ldbu	r3,1(r16)
10007e28:	10c00045 	stb	r3,1(r2)
10007e2c:	0001883a 	nop
10007e30:	e6ffff04 	addi	sp,fp,-4
10007e34:	dfc00217 	ldw	ra,8(sp)
10007e38:	df000117 	ldw	fp,4(sp)
10007e3c:	dc000017 	ldw	r16,0(sp)
10007e40:	dec00304 	addi	sp,sp,12
10007e44:	f800283a 	ret

10007e48 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
10007e48:	defffe04 	addi	sp,sp,-8
10007e4c:	df000115 	stw	fp,4(sp)
10007e50:	df000104 	addi	fp,sp,4
10007e54:	e13fff15 	stw	r4,-4(fp)
      { return size_t(-1) / sizeof(_Tp); }
10007e58:	00833374 	movhi	r2,3277
10007e5c:	10b33304 	addi	r2,r2,-13108
10007e60:	e037883a 	mov	sp,fp
10007e64:	df000017 	ldw	fp,0(sp)
10007e68:	dec00104 	addi	sp,sp,4
10007e6c:	f800283a 	ret

10007e70 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>:
      ~set() = default;
10007e70:	defffd04 	addi	sp,sp,-12
10007e74:	dfc00215 	stw	ra,8(sp)
10007e78:	df000115 	stw	fp,4(sp)
10007e7c:	df000104 	addi	fp,sp,4
10007e80:	e13fff15 	stw	r4,-4(fp)
10007e84:	e0bfff17 	ldw	r2,-4(fp)
10007e88:	1009883a 	mov	r4,r2
10007e8c:	000627c0 	call	1000627c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>
10007e90:	0001883a 	nop
10007e94:	e037883a 	mov	sp,fp
10007e98:	dfc00117 	ldw	ra,4(sp)
10007e9c:	df000017 	ldw	fp,0(sp)
10007ea0:	dec00204 	addi	sp,sp,8
10007ea4:	f800283a 	ret

10007ea8 <_Znwj>:
10007ea8:	defffe04 	addi	sp,sp,-8
10007eac:	dc000015 	stw	r16,0(sp)
10007eb0:	dfc00115 	stw	ra,4(sp)
10007eb4:	2021883a 	mov	r16,r4
10007eb8:	2000011e 	bne	r4,zero,10007ec0 <_Znwj+0x18>
10007ebc:	04000044 	movi	r16,1
10007ec0:	8009883a 	mov	r4,r16
10007ec4:	0014d680 	call	10014d68 <malloc>
10007ec8:	10000426 	beq	r2,zero,10007edc <_Znwj+0x34>
10007ecc:	dfc00117 	ldw	ra,4(sp)
10007ed0:	dc000017 	ldw	r16,0(sp)
10007ed4:	dec00204 	addi	sp,sp,8
10007ed8:	f800283a 	ret
10007edc:	0007f2c0 	call	10007f2c <_ZSt15get_new_handlerv>
10007ee0:	10000226 	beq	r2,zero,10007eec <_Znwj+0x44>
10007ee4:	103ee83a 	callr	r2
10007ee8:	003ff506 	br	10007ec0 <_Znwj+0x18>
10007eec:	01000104 	movi	r4,4
10007ef0:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10007ef4:	00c400b4 	movhi	r3,4098
10007ef8:	01840074 	movhi	r6,4097
10007efc:	014400b4 	movhi	r5,4098
10007f00:	18d4a504 	addi	r3,r3,21140
10007f04:	31a10304 	addi	r6,r6,-31732
10007f08:	2954a004 	addi	r5,r5,21120
10007f0c:	1009883a 	mov	r4,r2
10007f10:	10c00015 	stw	r3,0(r2)
10007f14:	00082e40 	call	100082e4 <__cxa_throw>

10007f18 <_ZSt15set_new_handlerPFvvE>:
10007f18:	00c400f4 	movhi	r3,4099
10007f1c:	008400f4 	movhi	r2,4099
10007f20:	10aa6417 	ldw	r2,-22128(r2)
10007f24:	192a6415 	stw	r4,-22128(r3)
10007f28:	f800283a 	ret

10007f2c <_ZSt15get_new_handlerv>:
10007f2c:	008400f4 	movhi	r2,4099
10007f30:	10aa6417 	ldw	r2,-22128(r2)
10007f34:	f800283a 	ret

10007f38 <__cxa_get_exception_ptr>:
10007f38:	20bfff17 	ldw	r2,-4(r4)
10007f3c:	f800283a 	ret

10007f40 <__cxa_begin_catch>:
10007f40:	defffe04 	addi	sp,sp,-8
10007f44:	dc000015 	stw	r16,0(sp)
10007f48:	dfc00115 	stw	ra,4(sp)
10007f4c:	2021883a 	mov	r16,r4
10007f50:	000c5c80 	call	1000c5c8 <__cxa_get_globals>
10007f54:	80c00017 	ldw	r3,0(r16)
10007f58:	81000117 	ldw	r4,4(r16)
10007f5c:	016f3574 	movhi	r5,48341
10007f60:	29754004 	addi	r5,r5,-11008
10007f64:	01ae2cb4 	movhi	r6,47282
10007f68:	31aaaf04 	addi	r6,r6,-21828
10007f6c:	194b883a 	add	r5,r3,r5
10007f70:	2189883a 	add	r4,r4,r6
10007f74:	28c7803a 	cmpltu	r3,r5,r3
10007f78:	1907883a 	add	r3,r3,r4
10007f7c:	81bff504 	addi	r6,r16,-44
10007f80:	11000017 	ldw	r4,0(r2)
10007f84:	18000726 	beq	r3,zero,10007fa4 <__cxa_begin_catch+0x64>
10007f88:	2000171e 	bne	r4,zero,10007fe8 <__cxa_begin_catch+0xa8>
10007f8c:	11800015 	stw	r6,0(r2)
10007f90:	2005883a 	mov	r2,r4
10007f94:	dfc00117 	ldw	ra,4(sp)
10007f98:	dc000017 	ldw	r16,0(sp)
10007f9c:	dec00204 	addi	sp,sp,8
10007fa0:	f800283a 	ret
10007fa4:	294000a8 	cmpgeui	r5,r5,2
10007fa8:	283ff71e 	bne	r5,zero,10007f88 <__cxa_begin_catch+0x48>
10007fac:	80fffa17 	ldw	r3,-24(r16)
10007fb0:	18000a16 	blt	r3,zero,10007fdc <__cxa_begin_catch+0x9c>
10007fb4:	18c00044 	addi	r3,r3,1
10007fb8:	11400117 	ldw	r5,4(r2)
10007fbc:	80fffa15 	stw	r3,-24(r16)
10007fc0:	28ffffc4 	addi	r3,r5,-1
10007fc4:	10c00115 	stw	r3,4(r2)
10007fc8:	21800226 	beq	r4,r6,10007fd4 <__cxa_begin_catch+0x94>
10007fcc:	813ff915 	stw	r4,-28(r16)
10007fd0:	11800015 	stw	r6,0(r2)
10007fd4:	813fff17 	ldw	r4,-4(r16)
10007fd8:	003fed06 	br	10007f90 <__cxa_begin_catch+0x50>
10007fdc:	01400044 	movi	r5,1
10007fe0:	28c7c83a 	sub	r3,r5,r3
10007fe4:	003ff406 	br	10007fb8 <__cxa_begin_catch+0x78>
10007fe8:	00081a00 	call	100081a0 <_ZSt9terminatev>

10007fec <__cxa_end_catch>:
10007fec:	deffff04 	addi	sp,sp,-4
10007ff0:	dfc00015 	stw	ra,0(sp)
10007ff4:	000c5bc0 	call	1000c5bc <__cxa_get_globals_fast>
10007ff8:	11000017 	ldw	r4,0(r2)
10007ffc:	20001326 	beq	r4,zero,1000804c <__cxa_end_catch+0x60>
10008000:	20c00b17 	ldw	r3,44(r4)
10008004:	21800c17 	ldw	r6,48(r4)
10008008:	016f3574 	movhi	r5,48341
1000800c:	29754004 	addi	r5,r5,-11008
10008010:	01ee2cb4 	movhi	r7,47282
10008014:	39eaaf04 	addi	r7,r7,-21828
10008018:	194b883a 	add	r5,r3,r5
1000801c:	28c7803a 	cmpltu	r3,r5,r3
10008020:	31cd883a 	add	r6,r6,r7
10008024:	1987883a 	add	r3,r3,r6
10008028:	1800101e 	bne	r3,zero,1000806c <__cxa_end_catch+0x80>
1000802c:	294000a8 	cmpgeui	r5,r5,2
10008030:	28000e1e 	bne	r5,zero,1000806c <__cxa_end_catch+0x80>
10008034:	20c00517 	ldw	r3,20(r4)
10008038:	18000716 	blt	r3,zero,10008058 <__cxa_end_catch+0x6c>
1000803c:	18ffffc4 	addi	r3,r3,-1
10008040:	18000f26 	beq	r3,zero,10008080 <__cxa_end_catch+0x94>
10008044:	18001416 	blt	r3,zero,10008098 <__cxa_end_catch+0xac>
10008048:	20c00515 	stw	r3,20(r4)
1000804c:	dfc00017 	ldw	ra,0(sp)
10008050:	dec00104 	addi	sp,sp,4
10008054:	f800283a 	ret
10008058:	18c00044 	addi	r3,r3,1
1000805c:	183ffa1e 	bne	r3,zero,10008048 <__cxa_end_catch+0x5c>
10008060:	21400417 	ldw	r5,16(r4)
10008064:	11400015 	stw	r5,0(r2)
10008068:	003ff706 	br	10008048 <__cxa_end_catch+0x5c>
1000806c:	21000b04 	addi	r4,r4,44
10008070:	10000015 	stw	zero,0(r2)
10008074:	dfc00017 	ldw	ra,0(sp)
10008078:	dec00104 	addi	sp,sp,4
1000807c:	00144ec1 	jmpi	100144ec <_Unwind_DeleteException>
10008080:	20c00417 	ldw	r3,16(r4)
10008084:	21000b04 	addi	r4,r4,44
10008088:	10c00015 	stw	r3,0(r2)
1000808c:	dfc00017 	ldw	ra,0(sp)
10008090:	dec00104 	addi	sp,sp,4
10008094:	00144ec1 	jmpi	100144ec <_Unwind_DeleteException>
10008098:	00081a00 	call	100081a0 <_ZSt9terminatev>

1000809c <_ZSt18uncaught_exceptionv>:
1000809c:	deffff04 	addi	sp,sp,-4
100080a0:	dfc00015 	stw	ra,0(sp)
100080a4:	000c5c80 	call	1000c5c8 <__cxa_get_globals>
100080a8:	10800117 	ldw	r2,4(r2)
100080ac:	1004c03a 	cmpne	r2,r2,zero
100080b0:	dfc00017 	ldw	ra,0(sp)
100080b4:	dec00104 	addi	sp,sp,4
100080b8:	f800283a 	ret

100080bc <_ZSt19uncaught_exceptionsv>:
100080bc:	deffff04 	addi	sp,sp,-4
100080c0:	dfc00015 	stw	ra,0(sp)
100080c4:	000c5c80 	call	1000c5c8 <__cxa_get_globals>
100080c8:	10800117 	ldw	r2,4(r2)
100080cc:	dfc00017 	ldw	ra,0(sp)
100080d0:	dec00104 	addi	sp,sp,4
100080d4:	f800283a 	ret

100080d8 <_ZN10__cxxabiv111__terminateEPFvvE>:
100080d8:	00c400b4 	movhi	r3,4098
100080dc:	deffef04 	addi	sp,sp,-68
100080e0:	18d10e04 	addi	r3,r3,17464
100080e4:	01440074 	movhi	r5,4097
100080e8:	00840074 	movhi	r2,4097
100080ec:	10a04d04 	addi	r2,r2,-32460
100080f0:	29626504 	addi	r5,r5,-30316
100080f4:	d9000015 	stw	r4,0(sp)
100080f8:	d8c00915 	stw	r3,36(sp)
100080fc:	d9000204 	addi	r4,sp,8
10008100:	d8c00f04 	addi	r3,sp,60
10008104:	d8800b15 	stw	r2,44(sp)
10008108:	dfc01015 	stw	ra,64(sp)
1000810c:	df000f15 	stw	fp,60(sp)
10008110:	d9400815 	stw	r5,32(sp)
10008114:	d8c00a15 	stw	r3,40(sp)
10008118:	dec00c15 	stw	sp,48(sp)
1000811c:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10008120:	00800044 	movi	r2,1
10008124:	d8800315 	stw	r2,12(sp)
10008128:	d8800017 	ldw	r2,0(sp)
1000812c:	103ee83a 	callr	r2
10008130:	001458c0 	call	1001458c <abort>
10008134:	d8c00417 	ldw	r3,16(sp)
10008138:	d8800317 	ldw	r2,12(sp)
1000813c:	d8c00015 	stw	r3,0(sp)
10008140:	d8c00517 	ldw	r3,20(sp)
10008144:	d8c00115 	stw	r3,4(sp)
10008148:	1000051e 	bne	r2,zero,10008160 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
1000814c:	d9000417 	ldw	r4,16(sp)
10008150:	0007f400 	call	10007f40 <__cxa_begin_catch>
10008154:	00800084 	movi	r2,2
10008158:	d8800315 	stw	r2,12(sp)
1000815c:	001458c0 	call	1001458c <abort>
10008160:	10bfffc4 	addi	r2,r2,-1
10008164:	10000126 	beq	r2,zero,1000816c <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
10008168:	003b68fa 	trap	3
1000816c:	d8000315 	stw	zero,12(sp)
10008170:	0007fec0 	call	10007fec <__cxa_end_catch>
10008174:	d8c00117 	ldw	r3,4(sp)
10008178:	18bfffe0 	cmpeqi	r2,r3,-1
1000817c:	1000041e 	bne	r2,zero,10008190 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
10008180:	d9000017 	ldw	r4,0(sp)
10008184:	00bfffc4 	movi	r2,-1
10008188:	d8800315 	stw	r2,12(sp)
1000818c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>
10008190:	d8800117 	ldw	r2,4(sp)
10008194:	d9000017 	ldw	r4,0(sp)
10008198:	d8800315 	stw	r2,12(sp)
1000819c:	0008fb80 	call	10008fb8 <__cxa_call_unexpected>

100081a0 <_ZSt9terminatev>:
100081a0:	008400f4 	movhi	r2,4099
100081a4:	11210f17 	ldw	r4,-31684(r2)
100081a8:	deffff04 	addi	sp,sp,-4
100081ac:	dfc00015 	stw	ra,0(sp)
100081b0:	00080d80 	call	100080d8 <_ZN10__cxxabiv111__terminateEPFvvE>

100081b4 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
100081b4:	deffff04 	addi	sp,sp,-4
100081b8:	dfc00015 	stw	ra,0(sp)
100081bc:	203ee83a 	callr	r4
100081c0:	00081a00 	call	100081a0 <_ZSt9terminatev>

100081c4 <_ZSt10unexpectedv>:
100081c4:	008400f4 	movhi	r2,4099
100081c8:	11210817 	ldw	r4,-31712(r2)
100081cc:	deffff04 	addi	sp,sp,-4
100081d0:	dfc00015 	stw	ra,0(sp)
100081d4:	00081b40 	call	100081b4 <_ZN10__cxxabiv112__unexpectedEPFvvE>

100081d8 <_ZSt13set_terminatePFvvE>:
100081d8:	00c400f4 	movhi	r3,4099
100081dc:	008400f4 	movhi	r2,4099
100081e0:	10a10f17 	ldw	r2,-31684(r2)
100081e4:	19210f15 	stw	r4,-31684(r3)
100081e8:	f800283a 	ret

100081ec <_ZSt13get_terminatev>:
100081ec:	008400f4 	movhi	r2,4099
100081f0:	10a10f17 	ldw	r2,-31684(r2)
100081f4:	f800283a 	ret

100081f8 <_ZSt14set_unexpectedPFvvE>:
100081f8:	00c400f4 	movhi	r3,4099
100081fc:	008400f4 	movhi	r2,4099
10008200:	10a10817 	ldw	r2,-31712(r2)
10008204:	19210815 	stw	r4,-31712(r3)
10008208:	f800283a 	ret

1000820c <_ZSt14get_unexpectedv>:
1000820c:	008400f4 	movhi	r2,4099
10008210:	10a10817 	ldw	r2,-31712(r2)
10008214:	f800283a 	ret

10008218 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
10008218:	defffe04 	addi	sp,sp,-8
1000821c:	dfc00115 	stw	ra,4(sp)
10008220:	dc000015 	stw	r16,0(sp)
10008224:	210000b0 	cmpltui	r4,r4,2
10008228:	20001326 	beq	r4,zero,10008278 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
1000822c:	28bff417 	ldw	r2,-48(r5)
10008230:	10ffffc4 	addi	r3,r2,-1
10008234:	28fff415 	stw	r3,-48(r5)
10008238:	10800058 	cmpnei	r2,r2,1
1000823c:	10000426 	beq	r2,zero,10008250 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
10008240:	dfc00117 	ldw	ra,4(sp)
10008244:	dc000017 	ldw	r16,0(sp)
10008248:	dec00204 	addi	sp,sp,8
1000824c:	f800283a 	ret
10008250:	28bff617 	ldw	r2,-40(r5)
10008254:	2c000504 	addi	r16,r5,20
10008258:	10000226 	beq	r2,zero,10008264 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
1000825c:	8009883a 	mov	r4,r16
10008260:	103ee83a 	callr	r2
10008264:	8009883a 	mov	r4,r16
10008268:	dfc00117 	ldw	ra,4(sp)
1000826c:	dc000017 	ldw	r16,0(sp)
10008270:	dec00204 	addi	sp,sp,8
10008274:	00093541 	jmpi	10009354 <__cxa_free_exception>
10008278:	293ff817 	ldw	r4,-32(r5)
1000827c:	00080d80 	call	100080d8 <_ZN10__cxxabiv111__terminateEPFvvE>

10008280 <__cxa_init_primary_exception>:
10008280:	defffe04 	addi	sp,sp,-8
10008284:	dfc00115 	stw	ra,4(sp)
10008288:	dc000015 	stw	r16,0(sp)
1000828c:	217ff015 	stw	r5,-64(r4)
10008290:	21bff115 	stw	r6,-60(r4)
10008294:	203fef15 	stw	zero,-68(r4)
10008298:	2021883a 	mov	r16,r4
1000829c:	000820c0 	call	1000820c <_ZSt14get_unexpectedv>
100082a0:	80bff215 	stw	r2,-56(r16)
100082a4:	00081ec0 	call	100081ec <_ZSt13get_terminatev>
100082a8:	0150caf4 	movhi	r5,17195
100082ac:	0111d3b4 	movhi	r4,18254
100082b0:	00c40074 	movhi	r3,4097
100082b4:	294ac004 	addi	r5,r5,11008
100082b8:	211550c4 	addi	r4,r4,21827
100082bc:	18e08604 	addi	r3,r3,-32232
100082c0:	80bff315 	stw	r2,-52(r16)
100082c4:	80bfef04 	addi	r2,r16,-68
100082c8:	817ffb15 	stw	r5,-20(r16)
100082cc:	813ffc15 	stw	r4,-16(r16)
100082d0:	80fffd15 	stw	r3,-12(r16)
100082d4:	dfc00117 	ldw	ra,4(sp)
100082d8:	dc000017 	ldw	r16,0(sp)
100082dc:	dec00204 	addi	sp,sp,8
100082e0:	f800283a 	ret

100082e4 <__cxa_throw>:
100082e4:	defffb04 	addi	sp,sp,-20
100082e8:	dfc00415 	stw	ra,16(sp)
100082ec:	dcc00315 	stw	r19,12(sp)
100082f0:	dc800215 	stw	r18,8(sp)
100082f4:	2827883a 	mov	r19,r5
100082f8:	3025883a 	mov	r18,r6
100082fc:	dc400115 	stw	r17,4(sp)
10008300:	dc000015 	stw	r16,0(sp)
10008304:	2021883a 	mov	r16,r4
10008308:	000c5c80 	call	1000c5c8 <__cxa_get_globals>
1000830c:	10c00117 	ldw	r3,4(r2)
10008310:	847ffb04 	addi	r17,r16,-20
10008314:	18c00044 	addi	r3,r3,1
10008318:	10c00115 	stw	r3,4(r2)
1000831c:	803fef15 	stw	zero,-68(r16)
10008320:	84fff015 	stw	r19,-64(r16)
10008324:	84bff115 	stw	r18,-60(r16)
10008328:	000820c0 	call	1000820c <_ZSt14get_unexpectedv>
1000832c:	80bff215 	stw	r2,-56(r16)
10008330:	00081ec0 	call	100081ec <_ZSt13get_terminatev>
10008334:	0150caf4 	movhi	r5,17195
10008338:	0111d3b4 	movhi	r4,18254
1000833c:	00c40074 	movhi	r3,4097
10008340:	294ac004 	addi	r5,r5,11008
10008344:	18e08604 	addi	r3,r3,-32232
10008348:	211550c4 	addi	r4,r4,21827
1000834c:	80bff315 	stw	r2,-52(r16)
10008350:	00800044 	movi	r2,1
10008354:	817ffb15 	stw	r5,-20(r16)
10008358:	813ffc15 	stw	r4,-16(r16)
1000835c:	80fffd15 	stw	r3,-12(r16)
10008360:	8809883a 	mov	r4,r17
10008364:	80bfef15 	stw	r2,-68(r16)
10008368:	00143500 	call	10014350 <_Unwind_SjLj_RaiseException>
1000836c:	8809883a 	mov	r4,r17
10008370:	0007f400 	call	10007f40 <__cxa_begin_catch>
10008374:	00081a00 	call	100081a0 <_ZSt9terminatev>

10008378 <__cxa_rethrow>:
10008378:	defffe04 	addi	sp,sp,-8
1000837c:	dfc00115 	stw	ra,4(sp)
10008380:	dc000015 	stw	r16,0(sp)
10008384:	000c5c80 	call	1000c5c8 <__cxa_get_globals>
10008388:	10c00117 	ldw	r3,4(r2)
1000838c:	11000017 	ldw	r4,0(r2)
10008390:	18c00044 	addi	r3,r3,1
10008394:	10c00115 	stw	r3,4(r2)
10008398:	20001126 	beq	r4,zero,100083e0 <__cxa_rethrow+0x68>
1000839c:	20c00b17 	ldw	r3,44(r4)
100083a0:	21800c17 	ldw	r6,48(r4)
100083a4:	016f3574 	movhi	r5,48341
100083a8:	29754004 	addi	r5,r5,-11008
100083ac:	01ee2cb4 	movhi	r7,47282
100083b0:	39eaaf04 	addi	r7,r7,-21828
100083b4:	194b883a 	add	r5,r3,r5
100083b8:	28c7803a 	cmpltu	r3,r5,r3
100083bc:	31cd883a 	add	r6,r6,r7
100083c0:	1987883a 	add	r3,r3,r6
100083c4:	18000726 	beq	r3,zero,100083e4 <__cxa_rethrow+0x6c>
100083c8:	10000015 	stw	zero,0(r2)
100083cc:	24000b04 	addi	r16,r4,44
100083d0:	8009883a 	mov	r4,r16
100083d4:	00144a00 	call	100144a0 <_Unwind_SjLj_Resume_or_Rethrow>
100083d8:	8009883a 	mov	r4,r16
100083dc:	0007f400 	call	10007f40 <__cxa_begin_catch>
100083e0:	00081a00 	call	100081a0 <_ZSt9terminatev>
100083e4:	294000a8 	cmpgeui	r5,r5,2
100083e8:	283ff71e 	bne	r5,zero,100083c8 <__cxa_rethrow+0x50>
100083ec:	20800517 	ldw	r2,20(r4)
100083f0:	0085c83a 	sub	r2,zero,r2
100083f4:	20800515 	stw	r2,20(r4)
100083f8:	003ff406 	br	100083cc <__cxa_rethrow+0x54>

100083fc <_ZdlPv>:
100083fc:	0014d781 	jmpi	10014d78 <free>

10008400 <_ZNKSt9bad_alloc4whatEv>:
10008400:	008400b4 	movhi	r2,4098
10008404:	10949804 	addi	r2,r2,21088
10008408:	f800283a 	ret

1000840c <_ZNSt9bad_allocD1Ev>:
1000840c:	008400b4 	movhi	r2,4098
10008410:	1094a504 	addi	r2,r2,21140
10008414:	20800015 	stw	r2,0(r4)
10008418:	000c5d41 	jmpi	1000c5d4 <_ZNSt9exceptionD1Ev>

1000841c <_ZNSt9bad_allocD0Ev>:
1000841c:	defffe04 	addi	sp,sp,-8
10008420:	008400b4 	movhi	r2,4098
10008424:	dc000015 	stw	r16,0(sp)
10008428:	dfc00115 	stw	ra,4(sp)
1000842c:	1094a504 	addi	r2,r2,21140
10008430:	20800015 	stw	r2,0(r4)
10008434:	2021883a 	mov	r16,r4
10008438:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000843c:	01400104 	movi	r5,4
10008440:	8009883a 	mov	r4,r16
10008444:	dfc00117 	ldw	ra,4(sp)
10008448:	dc000017 	ldw	r16,0(sp)
1000844c:	dec00204 	addi	sp,sp,8
10008450:	000c6641 	jmpi	1000c664 <_ZdlPvj>

10008454 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
10008454:	28800017 	ldw	r2,0(r5)
10008458:	30c00017 	ldw	r3,0(r6)
1000845c:	defffb04 	addi	sp,sp,-20
10008460:	10800217 	ldw	r2,8(r2)
10008464:	dc400315 	stw	r17,12(sp)
10008468:	dc000215 	stw	r16,8(sp)
1000846c:	d9400015 	stw	r5,0(sp)
10008470:	dfc00415 	stw	ra,16(sp)
10008474:	2021883a 	mov	r16,r4
10008478:	d8c00115 	stw	r3,4(sp)
1000847c:	2809883a 	mov	r4,r5
10008480:	3023883a 	mov	r17,r6
10008484:	103ee83a 	callr	r2
10008488:	10803fcc 	andi	r2,r2,255
1000848c:	d9400017 	ldw	r5,0(sp)
10008490:	10000326 	beq	r2,zero,100084a0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
10008494:	d8800117 	ldw	r2,4(sp)
10008498:	10800017 	ldw	r2,0(r2)
1000849c:	d8800115 	stw	r2,4(sp)
100084a0:	80800017 	ldw	r2,0(r16)
100084a4:	01c00044 	movi	r7,1
100084a8:	d9800104 	addi	r6,sp,4
100084ac:	10800417 	ldw	r2,16(r2)
100084b0:	8009883a 	mov	r4,r16
100084b4:	103ee83a 	callr	r2
100084b8:	10c03fcc 	andi	r3,r2,255
100084bc:	18000226 	beq	r3,zero,100084c8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
100084c0:	d8c00117 	ldw	r3,4(sp)
100084c4:	88c00015 	stw	r3,0(r17)
100084c8:	dfc00417 	ldw	ra,16(sp)
100084cc:	dc400317 	ldw	r17,12(sp)
100084d0:	dc000217 	ldw	r16,8(sp)
100084d4:	dec00504 	addi	sp,sp,20
100084d8:	f800283a 	ret

100084dc <_ZL28read_encoded_value_with_basehjPKhPj>:
100084dc:	20c03fcc 	andi	r3,r4,255
100084e0:	18c01418 	cmpnei	r3,r3,80
100084e4:	18002c26 	beq	r3,zero,10008598 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
100084e8:	208003cc 	andi	r2,r4,15
100084ec:	10c00368 	cmpgeui	r3,r2,13
100084f0:	1800711e 	bne	r3,zero,100086b8 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
100084f4:	100490ba 	slli	r2,r2,2
100084f8:	00c40074 	movhi	r3,4097
100084fc:	10c7883a 	add	r3,r2,r3
10008500:	18a14217 	ldw	r2,-31480(r3)
10008504:	1000683a 	jmp	r2
10008508:	1000853c 	xorhi	zero,r2,532
1000850c:	10008680 	call	11000868 <_gp+0xfd0450>
10008510:	100085f0 	cmpltui	zero,r2,535
10008514:	1000853c 	xorhi	zero,r2,532
10008518:	100085b4 	orhi	zero,r2,534
1000851c:	100086b8 	rdprs	zero,r2,538
10008520:	100086b8 	rdprs	zero,r2,538
10008524:	100086b8 	rdprs	zero,r2,538
10008528:	100086b8 	rdprs	zero,r2,538
1000852c:	1000862c 	andhi	zero,r2,536
10008530:	10008608 	cmpgei	zero,r2,536
10008534:	1000853c 	xorhi	zero,r2,532
10008538:	100085b4 	orhi	zero,r2,534
1000853c:	32000043 	ldbu	r8,1(r6)
10008540:	30800083 	ldbu	r2,2(r6)
10008544:	30c000c3 	ldbu	r3,3(r6)
10008548:	32400003 	ldbu	r9,0(r6)
1000854c:	4010923a 	slli	r8,r8,8
10008550:	1004943a 	slli	r2,r2,16
10008554:	1806963a 	slli	r3,r3,24
10008558:	4250b03a 	or	r8,r8,r9
1000855c:	1204b03a 	or	r2,r2,r8
10008560:	1886b03a 	or	r3,r3,r2
10008564:	30800104 	addi	r2,r6,4
10008568:	18000926 	beq	r3,zero,10008590 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
1000856c:	22001c0c 	andi	r8,r4,112
10008570:	42000418 	cmpnei	r8,r8,16
10008574:	4000011e 	bne	r8,zero,1000857c <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
10008578:	300b883a 	mov	r5,r6
1000857c:	21003fcc 	andi	r4,r4,255
10008580:	2100201c 	xori	r4,r4,128
10008584:	213fe004 	addi	r4,r4,-128
10008588:	1947883a 	add	r3,r3,r5
1000858c:	20001516 	blt	r4,zero,100085e4 <_ZL28read_encoded_value_with_basehjPKhPj+0x108>
10008590:	38c00015 	stw	r3,0(r7)
10008594:	f800283a 	ret
10008598:	308000c4 	addi	r2,r6,3
1000859c:	01bfff04 	movi	r6,-4
100085a0:	1184703a 	and	r2,r2,r6
100085a4:	10c00017 	ldw	r3,0(r2)
100085a8:	10800104 	addi	r2,r2,4
100085ac:	38c00015 	stw	r3,0(r7)
100085b0:	f800283a 	ret
100085b4:	32000043 	ldbu	r8,1(r6)
100085b8:	30800083 	ldbu	r2,2(r6)
100085bc:	30c000c3 	ldbu	r3,3(r6)
100085c0:	32400003 	ldbu	r9,0(r6)
100085c4:	4010923a 	slli	r8,r8,8
100085c8:	1004943a 	slli	r2,r2,16
100085cc:	1806963a 	slli	r3,r3,24
100085d0:	4250b03a 	or	r8,r8,r9
100085d4:	1204b03a 	or	r2,r2,r8
100085d8:	1886b03a 	or	r3,r3,r2
100085dc:	30800204 	addi	r2,r6,8
100085e0:	003fe106 	br	10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100085e4:	18c00017 	ldw	r3,0(r3)
100085e8:	38c00015 	stw	r3,0(r7)
100085ec:	f800283a 	ret
100085f0:	30c00043 	ldbu	r3,1(r6)
100085f4:	32000003 	ldbu	r8,0(r6)
100085f8:	30800084 	addi	r2,r6,2
100085fc:	1806923a 	slli	r3,r3,8
10008600:	1a06b03a 	or	r3,r3,r8
10008604:	003fd806 	br	10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008608:	30c00043 	ldbu	r3,1(r6)
1000860c:	32000003 	ldbu	r8,0(r6)
10008610:	30800084 	addi	r2,r6,2
10008614:	1806923a 	slli	r3,r3,8
10008618:	1a06b03a 	or	r3,r3,r8
1000861c:	18ffffcc 	andi	r3,r3,65535
10008620:	18e0001c 	xori	r3,r3,32768
10008624:	18e00004 	addi	r3,r3,-32768
10008628:	003fcf06 	br	10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
1000862c:	3005883a 	mov	r2,r6
10008630:	0007883a 	mov	r3,zero
10008634:	0013883a 	mov	r9,zero
10008638:	10800044 	addi	r2,r2,1
1000863c:	12bfffc3 	ldbu	r10,-1(r2)
10008640:	52001fcc 	andi	r8,r10,127
10008644:	4250983a 	sll	r8,r8,r9
10008648:	52c03fcc 	andi	r11,r10,255
1000864c:	5ac0201c 	xori	r11,r11,128
10008650:	5affe004 	addi	r11,r11,-128
10008654:	1a06b03a 	or	r3,r3,r8
10008658:	4a4001c4 	addi	r9,r9,7
1000865c:	583ff616 	blt	r11,zero,10008638 <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
10008660:	4a000828 	cmpgeui	r8,r9,32
10008664:	403fc01e 	bne	r8,zero,10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008668:	5280100c 	andi	r10,r10,64
1000866c:	503fbe26 	beq	r10,zero,10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008670:	023fffc4 	movi	r8,-1
10008674:	4252983a 	sll	r9,r8,r9
10008678:	1a46b03a 	or	r3,r3,r9
1000867c:	003fbb06 	br	1000856c <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
10008680:	3005883a 	mov	r2,r6
10008684:	0007883a 	mov	r3,zero
10008688:	0015883a 	mov	r10,zero
1000868c:	10800044 	addi	r2,r2,1
10008690:	123fffc3 	ldbu	r8,-1(r2)
10008694:	42401fcc 	andi	r9,r8,127
10008698:	4a92983a 	sll	r9,r9,r10
1000869c:	42003fcc 	andi	r8,r8,255
100086a0:	4200201c 	xori	r8,r8,128
100086a4:	423fe004 	addi	r8,r8,-128
100086a8:	1a46b03a 	or	r3,r3,r9
100086ac:	528001c4 	addi	r10,r10,7
100086b0:	403ff616 	blt	r8,zero,1000868c <_ZL28read_encoded_value_with_basehjPKhPj+0x1b0>
100086b4:	003fac06 	br	10008568 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100086b8:	deffff04 	addi	sp,sp,-4
100086bc:	dfc00015 	stw	ra,0(sp)
100086c0:	001458c0 	call	1001458c <abort>

100086c4 <_ZL15get_ttype_entryP16lsda_header_infom>:
100086c4:	defffe04 	addi	sp,sp,-8
100086c8:	dfc00115 	stw	ra,4(sp)
100086cc:	20800503 	ldbu	r2,20(r4)
100086d0:	10c03fcc 	andi	r3,r2,255
100086d4:	19803fe0 	cmpeqi	r6,r3,255
100086d8:	30001c1e 	bne	r6,zero,1000874c <_ZL15get_ttype_entryP16lsda_header_infom+0x88>
100086dc:	108001cc 	andi	r2,r2,7
100086e0:	118000a0 	cmpeqi	r6,r2,2
100086e4:	3000161e 	bne	r6,zero,10008740 <_ZL15get_ttype_entryP16lsda_header_infom+0x7c>
100086e8:	118000e8 	cmpgeui	r6,r2,3
100086ec:	30001026 	beq	r6,zero,10008730 <_ZL15get_ttype_entryP16lsda_header_infom+0x6c>
100086f0:	118000e0 	cmpeqi	r6,r2,3
100086f4:	30000f1e 	bne	r6,zero,10008734 <_ZL15get_ttype_entryP16lsda_header_infom+0x70>
100086f8:	10800120 	cmpeqi	r2,r2,4
100086fc:	10001526 	beq	r2,zero,10008754 <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
10008700:	280a90fa 	slli	r5,r5,3
10008704:	014dc83a 	sub	r6,zero,r5
10008708:	20800317 	ldw	r2,12(r4)
1000870c:	21400217 	ldw	r5,8(r4)
10008710:	d80f883a 	mov	r7,sp
10008714:	118d883a 	add	r6,r2,r6
10008718:	1809883a 	mov	r4,r3
1000871c:	00084dc0 	call	100084dc <_ZL28read_encoded_value_with_basehjPKhPj>
10008720:	d8800017 	ldw	r2,0(sp)
10008724:	dfc00117 	ldw	ra,4(sp)
10008728:	dec00204 	addi	sp,sp,8
1000872c:	f800283a 	ret
10008730:	1000081e 	bne	r2,zero,10008754 <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
10008734:	280a90ba 	slli	r5,r5,2
10008738:	014dc83a 	sub	r6,zero,r5
1000873c:	003ff206 	br	10008708 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10008740:	294b883a 	add	r5,r5,r5
10008744:	014dc83a 	sub	r6,zero,r5
10008748:	003fef06 	br	10008708 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
1000874c:	000d883a 	mov	r6,zero
10008750:	003fed06 	br	10008708 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10008754:	001458c0 	call	1001458c <abort>

10008758 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
10008758:	defffb04 	addi	sp,sp,-20
1000875c:	dc000115 	stw	r16,4(sp)
10008760:	24000317 	ldw	r16,12(r4)
10008764:	01ce303a 	nor	r7,zero,r7
10008768:	dc800315 	stw	r18,12(sp)
1000876c:	dc400215 	stw	r17,8(sp)
10008770:	dfc00415 	stw	ra,16(sp)
10008774:	2023883a 	mov	r17,r4
10008778:	2825883a 	mov	r18,r5
1000877c:	d9800015 	stw	r6,0(sp)
10008780:	81e1883a 	add	r16,r16,r7
10008784:	000b883a 	mov	r5,zero
10008788:	0009883a 	mov	r4,zero
1000878c:	84000044 	addi	r16,r16,1
10008790:	80bfffc3 	ldbu	r2,-1(r16)
10008794:	10c01fcc 	andi	r3,r2,127
10008798:	1906983a 	sll	r3,r3,r4
1000879c:	10803fcc 	andi	r2,r2,255
100087a0:	1080201c 	xori	r2,r2,128
100087a4:	10bfe004 	addi	r2,r2,-128
100087a8:	28cab03a 	or	r5,r5,r3
100087ac:	210001c4 	addi	r4,r4,7
100087b0:	103ff616 	blt	r2,zero,1000878c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
100087b4:	28000e26 	beq	r5,zero,100087f0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x98>
100087b8:	8809883a 	mov	r4,r17
100087bc:	00086c40 	call	100086c4 <_ZL15get_ttype_entryP16lsda_header_infom>
100087c0:	d80d883a 	mov	r6,sp
100087c4:	900b883a 	mov	r5,r18
100087c8:	1009883a 	mov	r4,r2
100087cc:	00084540 	call	10008454 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
100087d0:	10c03fcc 	andi	r3,r2,255
100087d4:	183feb26 	beq	r3,zero,10008784 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
100087d8:	dfc00417 	ldw	ra,16(sp)
100087dc:	dc800317 	ldw	r18,12(sp)
100087e0:	dc400217 	ldw	r17,8(sp)
100087e4:	dc000117 	ldw	r16,4(sp)
100087e8:	dec00504 	addi	sp,sp,20
100087ec:	f800283a 	ret
100087f0:	0005883a 	mov	r2,zero
100087f4:	003ff806 	br	100087d8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x80>

100087f8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
100087f8:	20803fcc 	andi	r2,r4,255
100087fc:	10803fe0 	cmpeqi	r2,r2,255
10008800:	1000101e 	bne	r2,zero,10008844 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10008804:	20801c0c 	andi	r2,r4,112
10008808:	10c00820 	cmpeqi	r3,r2,32
1000880c:	1800111e 	bne	r3,zero,10008854 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
10008810:	10c00868 	cmpgeui	r3,r2,33
10008814:	18000826 	beq	r3,zero,10008838 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
10008818:	10c01020 	cmpeqi	r3,r2,64
1000881c:	18000b1e 	bne	r3,zero,1000884c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x54>
10008820:	10c01420 	cmpeqi	r3,r2,80
10008824:	1800071e 	bne	r3,zero,10008844 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10008828:	10800c20 	cmpeqi	r2,r2,48
1000882c:	10000b26 	beq	r2,zero,1000885c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
10008830:	2809883a 	mov	r4,r5
10008834:	00143401 	jmpi	10014340 <_Unwind_GetDataRelBase>
10008838:	10000226 	beq	r2,zero,10008844 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
1000883c:	10800420 	cmpeqi	r2,r2,16
10008840:	10000626 	beq	r2,zero,1000885c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
10008844:	0005883a 	mov	r2,zero
10008848:	f800283a 	ret
1000884c:	2809883a 	mov	r4,r5
10008850:	00143301 	jmpi	10014330 <_Unwind_GetRegionStart>
10008854:	2809883a 	mov	r4,r5
10008858:	00143481 	jmpi	10014348 <_Unwind_GetTextRelBase>
1000885c:	deffff04 	addi	sp,sp,-4
10008860:	dfc00015 	stw	ra,0(sp)
10008864:	001458c0 	call	1001458c <abort>

10008868 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
10008868:	defffb04 	addi	sp,sp,-20
1000886c:	dcc00315 	stw	r19,12(sp)
10008870:	dc400115 	stw	r17,4(sp)
10008874:	dc000015 	stw	r16,0(sp)
10008878:	dfc00415 	stw	ra,16(sp)
1000887c:	dc800215 	stw	r18,8(sp)
10008880:	2027883a 	mov	r19,r4
10008884:	2821883a 	mov	r16,r5
10008888:	3023883a 	mov	r17,r6
1000888c:	20003d26 	beq	r4,zero,10008984 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
10008890:	00143300 	call	10014330 <_Unwind_GetRegionStart>
10008894:	88800015 	stw	r2,0(r17)
10008898:	84800003 	ldbu	r18,0(r16)
1000889c:	84000044 	addi	r16,r16,1
100088a0:	90c03fe0 	cmpeqi	r3,r18,255
100088a4:	18002d26 	beq	r3,zero,1000895c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
100088a8:	88800115 	stw	r2,4(r17)
100088ac:	81000003 	ldbu	r4,0(r16)
100088b0:	80800044 	addi	r2,r16,1
100088b4:	20c03fcc 	andi	r3,r4,255
100088b8:	89000505 	stb	r4,20(r17)
100088bc:	18c03fe0 	cmpeqi	r3,r3,255
100088c0:	1800321e 	bne	r3,zero,1000898c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
100088c4:	000d883a 	mov	r6,zero
100088c8:	000b883a 	mov	r5,zero
100088cc:	10800044 	addi	r2,r2,1
100088d0:	10ffffc3 	ldbu	r3,-1(r2)
100088d4:	19001fcc 	andi	r4,r3,127
100088d8:	2148983a 	sll	r4,r4,r5
100088dc:	18c03fcc 	andi	r3,r3,255
100088e0:	18c0201c 	xori	r3,r3,128
100088e4:	18ffe004 	addi	r3,r3,-128
100088e8:	310cb03a 	or	r6,r6,r4
100088ec:	294001c4 	addi	r5,r5,7
100088f0:	183ff616 	blt	r3,zero,100088cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
100088f4:	118d883a 	add	r6,r2,r6
100088f8:	89800315 	stw	r6,12(r17)
100088fc:	10c00003 	ldbu	r3,0(r2)
10008900:	000d883a 	mov	r6,zero
10008904:	10800044 	addi	r2,r2,1
10008908:	88c00545 	stb	r3,21(r17)
1000890c:	000b883a 	mov	r5,zero
10008910:	10800044 	addi	r2,r2,1
10008914:	10ffffc3 	ldbu	r3,-1(r2)
10008918:	19001fcc 	andi	r4,r3,127
1000891c:	2148983a 	sll	r4,r4,r5
10008920:	18c03fcc 	andi	r3,r3,255
10008924:	18c0201c 	xori	r3,r3,128
10008928:	18ffe004 	addi	r3,r3,-128
1000892c:	310cb03a 	or	r6,r6,r4
10008930:	294001c4 	addi	r5,r5,7
10008934:	183ff616 	blt	r3,zero,10008910 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
10008938:	118d883a 	add	r6,r2,r6
1000893c:	89800415 	stw	r6,16(r17)
10008940:	dfc00417 	ldw	ra,16(sp)
10008944:	dcc00317 	ldw	r19,12(sp)
10008948:	dc800217 	ldw	r18,8(sp)
1000894c:	dc400117 	ldw	r17,4(sp)
10008950:	dc000017 	ldw	r16,0(sp)
10008954:	dec00504 	addi	sp,sp,20
10008958:	f800283a 	ret
1000895c:	980b883a 	mov	r5,r19
10008960:	9009883a 	mov	r4,r18
10008964:	00087f80 	call	100087f8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008968:	800d883a 	mov	r6,r16
1000896c:	89c00104 	addi	r7,r17,4
10008970:	100b883a 	mov	r5,r2
10008974:	9009883a 	mov	r4,r18
10008978:	00084dc0 	call	100084dc <_ZL28read_encoded_value_with_basehjPKhPj>
1000897c:	1021883a 	mov	r16,r2
10008980:	003fca06 	br	100088ac <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
10008984:	0005883a 	mov	r2,zero
10008988:	003fc206 	br	10008894 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
1000898c:	88000315 	stw	zero,12(r17)
10008990:	003fda06 	br	100088fc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

10008994 <__gxx_personality_sj0>:
10008994:	00c400b4 	movhi	r3,4098
10008998:	deffdc04 	addi	sp,sp,-144
1000899c:	18d11404 	addi	r3,r3,17488
100089a0:	02040074 	movhi	r8,4097
100089a4:	00840074 	movhi	r2,4097
100089a8:	10a3e304 	addi	r2,r2,-28788
100089ac:	42226504 	addi	r8,r8,-30316
100089b0:	d9000015 	stw	r4,0(sp)
100089b4:	d8c01415 	stw	r3,80(sp)
100089b8:	d9000d04 	addi	r4,sp,52
100089bc:	d8c02204 	addi	r3,sp,136
100089c0:	d8801615 	stw	r2,88(sp)
100089c4:	dfc02315 	stw	ra,140(sp)
100089c8:	df002215 	stw	fp,136(sp)
100089cc:	da001315 	stw	r8,76(sp)
100089d0:	d8c01515 	stw	r3,84(sp)
100089d4:	dec01715 	stw	sp,92(sp)
100089d8:	d9400315 	stw	r5,12(sp)
100089dc:	d9800115 	stw	r6,4(sp)
100089e0:	d9c00215 	stw	r7,8(sp)
100089e4:	00142740 	call	10014274 <_Unwind_SjLj_Register>
100089e8:	d8800017 	ldw	r2,0(sp)
100089ec:	d8001a15 	stw	zero,104(sp)
100089f0:	d8001b15 	stw	zero,108(sp)
100089f4:	10800058 	cmpnei	r2,r2,1
100089f8:	1000481e 	bne	r2,zero,10008b1c <__gxx_personality_sj0+0x188>
100089fc:	d9800117 	ldw	r6,4(sp)
10008a00:	00af3574 	movhi	r2,48341
10008a04:	10b54004 	addi	r2,r2,-11008
10008a08:	3085883a 	add	r2,r6,r2
10008a0c:	d8800715 	stw	r2,28(sp)
10008a10:	1185803a 	cmpltu	r2,r2,r6
10008a14:	d9800217 	ldw	r6,8(sp)
10008a18:	00ee2cb4 	movhi	r3,47282
10008a1c:	18eaaf04 	addi	r3,r3,-21828
10008a20:	d9000317 	ldw	r4,12(sp)
10008a24:	30c7883a 	add	r3,r6,r3
10008a28:	10c7883a 	add	r3,r2,r3
10008a2c:	21000198 	cmpnei	r4,r4,6
10008a30:	d8c00615 	stw	r3,24(sp)
10008a34:	2000011e 	bne	r4,zero,10008a3c <__gxx_personality_sj0+0xa8>
10008a38:	1800d026 	beq	r3,zero,10008d7c <__gxx_personality_sj0+0x3e8>
10008a3c:	d9002517 	ldw	r4,148(sp)
10008a40:	00bfffc4 	movi	r2,-1
10008a44:	d8800e15 	stw	r2,56(sp)
10008a48:	00143240 	call	10014324 <_Unwind_GetLanguageSpecificData>
10008a4c:	d8800515 	stw	r2,20(sp)
10008a50:	10006126 	beq	r2,zero,10008bd8 <__gxx_personality_sj0+0x244>
10008a54:	d9002517 	ldw	r4,148(sp)
10008a58:	d9400517 	ldw	r5,20(sp)
10008a5c:	d9801c04 	addi	r6,sp,112
10008a60:	00bfffc4 	movi	r2,-1
10008a64:	d8800e15 	stw	r2,56(sp)
10008a68:	00088680 	call	10008868 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10008a6c:	d9402517 	ldw	r5,148(sp)
10008a70:	d9002103 	ldbu	r4,132(sp)
10008a74:	d8800015 	stw	r2,0(sp)
10008a78:	00087f80 	call	100087f8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008a7c:	d9002517 	ldw	r4,148(sp)
10008a80:	d9401b04 	addi	r5,sp,108
10008a84:	d8801e15 	stw	r2,120(sp)
10008a88:	00142f40 	call	100142f4 <_Unwind_GetIPInfo>
10008a8c:	1007883a 	mov	r3,r2
10008a90:	d8800115 	stw	r2,4(sp)
10008a94:	d8801b17 	ldw	r2,108(sp)
10008a98:	10005226 	beq	r2,zero,10008be4 <__gxx_personality_sj0+0x250>
10008a9c:	d8800117 	ldw	r2,4(sp)
10008aa0:	10004d16 	blt	r2,zero,10008bd8 <__gxx_personality_sj0+0x244>
10008aa4:	1000381e 	bne	r2,zero,10008b88 <__gxx_personality_sj0+0x1f4>
10008aa8:	d8000415 	stw	zero,16(sp)
10008aac:	d8000215 	stw	zero,8(sp)
10008ab0:	00800044 	movi	r2,1
10008ab4:	d8c00317 	ldw	r3,12(sp)
10008ab8:	18c0004c 	andi	r3,r3,1
10008abc:	1800f51e 	bne	r3,zero,10008e94 <__gxx_personality_sj0+0x500>
10008ac0:	d8c00317 	ldw	r3,12(sp)
10008ac4:	18c0020c 	andi	r3,r3,8
10008ac8:	1800b526 	beq	r3,zero,10008da0 <__gxx_personality_sj0+0x40c>
10008acc:	10800058 	cmpnei	r2,r2,1
10008ad0:	10013026 	beq	r2,zero,10008f94 <__gxx_personality_sj0+0x600>
10008ad4:	d8800417 	ldw	r2,16(sp)
10008ad8:	10012916 	blt	r2,zero,10008f80 <__gxx_personality_sj0+0x5ec>
10008adc:	d9002517 	ldw	r4,148(sp)
10008ae0:	d9802417 	ldw	r6,144(sp)
10008ae4:	00bfffc4 	movi	r2,-1
10008ae8:	000b883a 	mov	r5,zero
10008aec:	d8800e15 	stw	r2,56(sp)
10008af0:	00142cc0 	call	100142cc <_Unwind_SetGR>
10008af4:	d9800417 	ldw	r6,16(sp)
10008af8:	d9002517 	ldw	r4,148(sp)
10008afc:	01400044 	movi	r5,1
10008b00:	00142cc0 	call	100142cc <_Unwind_SetGR>
10008b04:	d9400117 	ldw	r5,4(sp)
10008b08:	d9002517 	ldw	r4,148(sp)
10008b0c:	00143140 	call	10014314 <_Unwind_SetIP>
10008b10:	008001c4 	movi	r2,7
10008b14:	d8800015 	stw	r2,0(sp)
10008b18:	00000206 	br	10008b24 <__gxx_personality_sj0+0x190>
10008b1c:	008000c4 	movi	r2,3
10008b20:	d8800015 	stw	r2,0(sp)
10008b24:	d9000d04 	addi	r4,sp,52
10008b28:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10008b2c:	d8800017 	ldw	r2,0(sp)
10008b30:	dfc02317 	ldw	ra,140(sp)
10008b34:	df002217 	ldw	fp,136(sp)
10008b38:	dec02404 	addi	sp,sp,144
10008b3c:	f800283a 	ret
10008b40:	000b883a 	mov	r5,zero
10008b44:	0009883a 	mov	r4,zero
10008b48:	d8800017 	ldw	r2,0(sp)
10008b4c:	10800044 	addi	r2,r2,1
10008b50:	d8800015 	stw	r2,0(sp)
10008b54:	10bfffc3 	ldbu	r2,-1(r2)
10008b58:	10c01fcc 	andi	r3,r2,127
10008b5c:	1906983a 	sll	r3,r3,r4
10008b60:	10803fcc 	andi	r2,r2,255
10008b64:	1080201c 	xori	r2,r2,128
10008b68:	10bfe004 	addi	r2,r2,-128
10008b6c:	28cab03a 	or	r5,r5,r3
10008b70:	210001c4 	addi	r4,r4,7
10008b74:	103ff416 	blt	r2,zero,10008b48 <__gxx_personality_sj0+0x1b4>
10008b78:	d8800117 	ldw	r2,4(sp)
10008b7c:	10bfffc4 	addi	r2,r2,-1
10008b80:	d8800115 	stw	r2,4(sp)
10008b84:	10001a26 	beq	r2,zero,10008bf0 <__gxx_personality_sj0+0x25c>
10008b88:	000d883a 	mov	r6,zero
10008b8c:	0009883a 	mov	r4,zero
10008b90:	d8800017 	ldw	r2,0(sp)
10008b94:	10800044 	addi	r2,r2,1
10008b98:	d8800015 	stw	r2,0(sp)
10008b9c:	10bfffc3 	ldbu	r2,-1(r2)
10008ba0:	10c01fcc 	andi	r3,r2,127
10008ba4:	1906983a 	sll	r3,r3,r4
10008ba8:	10803fcc 	andi	r2,r2,255
10008bac:	1080201c 	xori	r2,r2,128
10008bb0:	10bfe004 	addi	r2,r2,-128
10008bb4:	30ccb03a 	or	r6,r6,r3
10008bb8:	210001c4 	addi	r4,r4,7
10008bbc:	103ff416 	blt	r2,zero,10008b90 <__gxx_personality_sj0+0x1fc>
10008bc0:	003fdf06 	br	10008b40 <__gxx_personality_sj0+0x1ac>
10008bc4:	d88008c3 	ldbu	r2,35(sp)
10008bc8:	10000326 	beq	r2,zero,10008bd8 <__gxx_personality_sj0+0x244>
10008bcc:	d8800317 	ldw	r2,12(sp)
10008bd0:	1080004c 	andi	r2,r2,1
10008bd4:	1000e226 	beq	r2,zero,10008f60 <__gxx_personality_sj0+0x5cc>
10008bd8:	00800204 	movi	r2,8
10008bdc:	d8800015 	stw	r2,0(sp)
10008be0:	003fd006 	br	10008b24 <__gxx_personality_sj0+0x190>
10008be4:	18bfffc4 	addi	r2,r3,-1
10008be8:	d8800115 	stw	r2,4(sp)
10008bec:	003fab06 	br	10008a9c <__gxx_personality_sj0+0x108>
10008bf0:	30800044 	addi	r2,r6,1
10008bf4:	d8800b15 	stw	r2,44(sp)
10008bf8:	283ff326 	beq	r5,zero,10008bc8 <__gxx_personality_sj0+0x234>
10008bfc:	d8800b17 	ldw	r2,44(sp)
10008c00:	103ff526 	beq	r2,zero,10008bd8 <__gxx_personality_sj0+0x244>
10008c04:	d8802017 	ldw	r2,128(sp)
10008c08:	297fffc4 	addi	r5,r5,-1
10008c0c:	1145883a 	add	r2,r2,r5
10008c10:	d8800215 	stw	r2,8(sp)
10008c14:	103fed26 	beq	r2,zero,10008bcc <__gxx_personality_sj0+0x238>
10008c18:	d8800317 	ldw	r2,12(sp)
10008c1c:	1080020c 	andi	r2,r2,8
10008c20:	d8800a15 	stw	r2,40(sp)
10008c24:	1000a71e 	bne	r2,zero,10008ec4 <__gxx_personality_sj0+0x530>
10008c28:	d8800617 	ldw	r2,24(sp)
10008c2c:	1000bc26 	beq	r2,zero,10008f20 <__gxx_personality_sj0+0x58c>
10008c30:	008400f4 	movhi	r2,4099
10008c34:	10a10d04 	addi	r2,r2,-31692
10008c38:	d8800915 	stw	r2,36(sp)
10008c3c:	d8800717 	ldw	r2,28(sp)
10008c40:	d80008c5 	stb	zero,35(sp)
10008c44:	108000a8 	cmpgeui	r2,r2,2
10008c48:	d8800c15 	stw	r2,48(sp)
10008c4c:	d8800217 	ldw	r2,8(sp)
10008c50:	000b883a 	mov	r5,zero
10008c54:	0007883a 	mov	r3,zero
10008c58:	d8800015 	stw	r2,0(sp)
10008c5c:	d8800017 	ldw	r2,0(sp)
10008c60:	10800044 	addi	r2,r2,1
10008c64:	113fffc3 	ldbu	r4,-1(r2)
10008c68:	d8800015 	stw	r2,0(sp)
10008c6c:	20801fcc 	andi	r2,r4,127
10008c70:	10c4983a 	sll	r2,r2,r3
10008c74:	21803fcc 	andi	r6,r4,255
10008c78:	3180201c 	xori	r6,r6,128
10008c7c:	31bfe004 	addi	r6,r6,-128
10008c80:	288ab03a 	or	r5,r5,r2
10008c84:	18c001c4 	addi	r3,r3,7
10008c88:	303ff416 	blt	r6,zero,10008c5c <__gxx_personality_sj0+0x2c8>
10008c8c:	18800828 	cmpgeui	r2,r3,32
10008c90:	1000061e 	bne	r2,zero,10008cac <__gxx_personality_sj0+0x318>
10008c94:	2100100c 	andi	r4,r4,64
10008c98:	20000426 	beq	r4,zero,10008cac <__gxx_personality_sj0+0x318>
10008c9c:	00800044 	movi	r2,1
10008ca0:	10c6983a 	sll	r3,r2,r3
10008ca4:	00c7c83a 	sub	r3,zero,r3
10008ca8:	28cab03a 	or	r5,r5,r3
10008cac:	d9800017 	ldw	r6,0(sp)
10008cb0:	d9400415 	stw	r5,16(sp)
10008cb4:	d8000115 	stw	zero,4(sp)
10008cb8:	0007883a 	mov	r3,zero
10008cbc:	31000003 	ldbu	r4,0(r6)
10008cc0:	da000117 	ldw	r8,4(sp)
10008cc4:	31800044 	addi	r6,r6,1
10008cc8:	20801fcc 	andi	r2,r4,127
10008ccc:	10c4983a 	sll	r2,r2,r3
10008cd0:	21c03fcc 	andi	r7,r4,255
10008cd4:	39c0201c 	xori	r7,r7,128
10008cd8:	4084b03a 	or	r2,r8,r2
10008cdc:	39ffe004 	addi	r7,r7,-128
10008ce0:	d8800115 	stw	r2,4(sp)
10008ce4:	18c001c4 	addi	r3,r3,7
10008ce8:	383ff416 	blt	r7,zero,10008cbc <__gxx_personality_sj0+0x328>
10008cec:	18800828 	cmpgeui	r2,r3,32
10008cf0:	1000081e 	bne	r2,zero,10008d14 <__gxx_personality_sj0+0x380>
10008cf4:	2100100c 	andi	r4,r4,64
10008cf8:	20000626 	beq	r4,zero,10008d14 <__gxx_personality_sj0+0x380>
10008cfc:	00800044 	movi	r2,1
10008d00:	10c6983a 	sll	r3,r2,r3
10008d04:	d8800117 	ldw	r2,4(sp)
10008d08:	00c7c83a 	sub	r3,zero,r3
10008d0c:	10c4b03a 	or	r2,r2,r3
10008d10:	d8800115 	stw	r2,4(sp)
10008d14:	28003b26 	beq	r5,zero,10008e04 <__gxx_personality_sj0+0x470>
10008d18:	01403d16 	blt	zero,r5,10008e10 <__gxx_personality_sj0+0x47c>
10008d1c:	d8c00917 	ldw	r3,36(sp)
10008d20:	18004b26 	beq	r3,zero,10008e50 <__gxx_personality_sj0+0x4bc>
10008d24:	d8800a17 	ldw	r2,40(sp)
10008d28:	1000491e 	bne	r2,zero,10008e50 <__gxx_personality_sj0+0x4bc>
10008d2c:	d8800617 	ldw	r2,24(sp)
10008d30:	1000471e 	bne	r2,zero,10008e50 <__gxx_personality_sj0+0x4bc>
10008d34:	d8800c17 	ldw	r2,48(sp)
10008d38:	1000451e 	bne	r2,zero,10008e50 <__gxx_personality_sj0+0x4bc>
10008d3c:	d9801a17 	ldw	r6,104(sp)
10008d40:	00bfffc4 	movi	r2,-1
10008d44:	280f883a 	mov	r7,r5
10008d48:	d9001c04 	addi	r4,sp,112
10008d4c:	180b883a 	mov	r5,r3
10008d50:	d8800e15 	stw	r2,56(sp)
10008d54:	00087580 	call	10008758 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
10008d58:	1080005c 	xori	r2,r2,1
10008d5c:	10803fcc 	andi	r2,r2,255
10008d60:	1000371e 	bne	r2,zero,10008e40 <__gxx_personality_sj0+0x4ac>
10008d64:	d8800117 	ldw	r2,4(sp)
10008d68:	103f9626 	beq	r2,zero,10008bc4 <__gxx_personality_sj0+0x230>
10008d6c:	d8c00017 	ldw	r3,0(sp)
10008d70:	1885883a 	add	r2,r3,r2
10008d74:	d8800215 	stw	r2,8(sp)
10008d78:	003fb406 	br	10008c4c <__gxx_personality_sj0+0x2b8>
10008d7c:	d8800717 	ldw	r2,28(sp)
10008d80:	108000a8 	cmpgeui	r2,r2,2
10008d84:	103f2d1e 	bne	r2,zero,10008a3c <__gxx_personality_sj0+0xa8>
10008d88:	d8802417 	ldw	r2,144(sp)
10008d8c:	10bffe17 	ldw	r2,-8(r2)
10008d90:	d8800115 	stw	r2,4(sp)
10008d94:	1000441e 	bne	r2,zero,10008ea8 <__gxx_personality_sj0+0x514>
10008d98:	d9002417 	ldw	r4,144(sp)
10008d9c:	000c2a00 	call	1000c2a0 <__cxa_call_terminate>
10008da0:	d8c00617 	ldw	r3,24(sp)
10008da4:	183f491e 	bne	r3,zero,10008acc <__gxx_personality_sj0+0x138>
10008da8:	d8c00717 	ldw	r3,28(sp)
10008dac:	18c000a8 	cmpgeui	r3,r3,2
10008db0:	183f461e 	bne	r3,zero,10008acc <__gxx_personality_sj0+0x138>
10008db4:	10800060 	cmpeqi	r2,r2,1
10008db8:	103ff71e 	bne	r2,zero,10008d98 <__gxx_personality_sj0+0x404>
10008dbc:	d8800417 	ldw	r2,16(sp)
10008dc0:	103f460e 	bge	r2,zero,10008adc <__gxx_personality_sj0+0x148>
10008dc4:	d9002517 	ldw	r4,148(sp)
10008dc8:	d9400517 	ldw	r5,20(sp)
10008dcc:	d9801c04 	addi	r6,sp,112
10008dd0:	00bfffc4 	movi	r2,-1
10008dd4:	d8800e15 	stw	r2,56(sp)
10008dd8:	00088680 	call	10008868 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10008ddc:	d9402517 	ldw	r5,148(sp)
10008de0:	d9002103 	ldbu	r4,132(sp)
10008de4:	00087f80 	call	100087f8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008de8:	d9002103 	ldbu	r4,132(sp)
10008dec:	d9402517 	ldw	r5,148(sp)
10008df0:	d8801e15 	stw	r2,120(sp)
10008df4:	00087f80 	call	100087f8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008df8:	d8c02417 	ldw	r3,144(sp)
10008dfc:	18bffe15 	stw	r2,-8(r3)
10008e00:	003f3606 	br	10008adc <__gxx_personality_sj0+0x148>
10008e04:	00800044 	movi	r2,1
10008e08:	d88008c5 	stb	r2,35(sp)
10008e0c:	003fd506 	br	10008d64 <__gxx_personality_sj0+0x3d0>
10008e10:	00bfffc4 	movi	r2,-1
10008e14:	d9001c04 	addi	r4,sp,112
10008e18:	d8800e15 	stw	r2,56(sp)
10008e1c:	00086c40 	call	100086c4 <_ZL15get_ttype_entryP16lsda_header_infom>
10008e20:	10000726 	beq	r2,zero,10008e40 <__gxx_personality_sj0+0x4ac>
10008e24:	d9400917 	ldw	r5,36(sp)
10008e28:	283fce26 	beq	r5,zero,10008d64 <__gxx_personality_sj0+0x3d0>
10008e2c:	d9801a04 	addi	r6,sp,104
10008e30:	1009883a 	mov	r4,r2
10008e34:	00084540 	call	10008454 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
10008e38:	10803fcc 	andi	r2,r2,255
10008e3c:	103fc926 	beq	r2,zero,10008d64 <__gxx_personality_sj0+0x3d0>
10008e40:	d8800b17 	ldw	r2,44(sp)
10008e44:	d8800115 	stw	r2,4(sp)
10008e48:	008000c4 	movi	r2,3
10008e4c:	003f1906 	br	10008ab4 <__gxx_personality_sj0+0x120>
10008e50:	d8801f17 	ldw	r2,124(sp)
10008e54:	014a303a 	nor	r5,zero,r5
10008e58:	000d883a 	mov	r6,zero
10008e5c:	114b883a 	add	r5,r2,r5
10008e60:	0009883a 	mov	r4,zero
10008e64:	29400044 	addi	r5,r5,1
10008e68:	28bfffc3 	ldbu	r2,-1(r5)
10008e6c:	10c01fcc 	andi	r3,r2,127
10008e70:	1906983a 	sll	r3,r3,r4
10008e74:	10803fcc 	andi	r2,r2,255
10008e78:	1080201c 	xori	r2,r2,128
10008e7c:	10bfe004 	addi	r2,r2,-128
10008e80:	30ccb03a 	or	r6,r6,r3
10008e84:	210001c4 	addi	r4,r4,7
10008e88:	103ff616 	blt	r2,zero,10008e64 <__gxx_personality_sj0+0x4d0>
10008e8c:	3005003a 	cmpeq	r2,r6,zero
10008e90:	003fb206 	br	10008d5c <__gxx_personality_sj0+0x3c8>
10008e94:	d8800617 	ldw	r2,24(sp)
10008e98:	10000e26 	beq	r2,zero,10008ed4 <__gxx_personality_sj0+0x540>
10008e9c:	00800184 	movi	r2,6
10008ea0:	d8800015 	stw	r2,0(sp)
10008ea4:	003f1f06 	br	10008b24 <__gxx_personality_sj0+0x190>
10008ea8:	d8802417 	ldw	r2,144(sp)
10008eac:	10bffb17 	ldw	r2,-20(r2)
10008eb0:	d8800415 	stw	r2,16(sp)
10008eb4:	d8802417 	ldw	r2,144(sp)
10008eb8:	10bffd17 	ldw	r2,-12(r2)
10008ebc:	d8800515 	stw	r2,20(sp)
10008ec0:	003fbe06 	br	10008dbc <__gxx_personality_sj0+0x428>
10008ec4:	008400f4 	movhi	r2,4099
10008ec8:	10a10b04 	addi	r2,r2,-31700
10008ecc:	d8800915 	stw	r2,36(sp)
10008ed0:	003f5a06 	br	10008c3c <__gxx_personality_sj0+0x2a8>
10008ed4:	d8800717 	ldw	r2,28(sp)
10008ed8:	108000a8 	cmpgeui	r2,r2,2
10008edc:	103fef1e 	bne	r2,zero,10008e9c <__gxx_personality_sj0+0x508>
10008ee0:	d8802417 	ldw	r2,144(sp)
10008ee4:	d8c00417 	ldw	r3,16(sp)
10008ee8:	10fffb15 	stw	r3,-20(r2)
10008eec:	d8c00217 	ldw	r3,8(sp)
10008ef0:	10fffc15 	stw	r3,-16(r2)
10008ef4:	d8c00517 	ldw	r3,20(sp)
10008ef8:	10fffd15 	stw	r3,-12(r2)
10008efc:	d8c02417 	ldw	r3,144(sp)
10008f00:	d8801a17 	ldw	r2,104(sp)
10008f04:	18bfff15 	stw	r2,-4(r3)
10008f08:	1805883a 	mov	r2,r3
10008f0c:	d8c00117 	ldw	r3,4(sp)
10008f10:	10fffe15 	stw	r3,-8(r2)
10008f14:	00800184 	movi	r2,6
10008f18:	d8800015 	stw	r2,0(sp)
10008f1c:	003f0106 	br	10008b24 <__gxx_personality_sj0+0x190>
10008f20:	d8800717 	ldw	r2,28(sp)
10008f24:	108000a8 	cmpgeui	r2,r2,2
10008f28:	103f411e 	bne	r2,zero,10008c30 <__gxx_personality_sj0+0x29c>
10008f2c:	d8802417 	ldw	r2,144(sp)
10008f30:	10800017 	ldw	r2,0(r2)
10008f34:	1080004c 	andi	r2,r2,1
10008f38:	10000626 	beq	r2,zero,10008f54 <__gxx_personality_sj0+0x5c0>
10008f3c:	d8802417 	ldw	r2,144(sp)
10008f40:	10bff517 	ldw	r2,-44(r2)
10008f44:	d8801a15 	stw	r2,104(sp)
10008f48:	10bff017 	ldw	r2,-64(r2)
10008f4c:	d8800915 	stw	r2,36(sp)
10008f50:	003f3a06 	br	10008c3c <__gxx_personality_sj0+0x2a8>
10008f54:	d8802417 	ldw	r2,144(sp)
10008f58:	10800504 	addi	r2,r2,20
10008f5c:	003ff906 	br	10008f44 <__gxx_personality_sj0+0x5b0>
10008f60:	d8800317 	ldw	r2,12(sp)
10008f64:	1080020c 	andi	r2,r2,8
10008f68:	d8800415 	stw	r2,16(sp)
10008f6c:	10000a26 	beq	r2,zero,10008f98 <__gxx_personality_sj0+0x604>
10008f70:	d8800b17 	ldw	r2,44(sp)
10008f74:	d8000415 	stw	zero,16(sp)
10008f78:	d8800115 	stw	r2,4(sp)
10008f7c:	003ed706 	br	10008adc <__gxx_personality_sj0+0x148>
10008f80:	00800044 	movi	r2,1
10008f84:	d8800e15 	stw	r2,56(sp)
10008f88:	00081c40 	call	100081c4 <_ZSt10unexpectedv>
10008f8c:	d9000f17 	ldw	r4,60(sp)
10008f90:	0007f400 	call	10007f40 <__cxa_begin_catch>
10008f94:	00081a00 	call	100081a0 <_ZSt9terminatev>
10008f98:	d8800617 	ldw	r2,24(sp)
10008f9c:	103ff41e 	bne	r2,zero,10008f70 <__gxx_personality_sj0+0x5dc>
10008fa0:	d8800717 	ldw	r2,28(sp)
10008fa4:	108000a8 	cmpgeui	r2,r2,2
10008fa8:	103ff11e 	bne	r2,zero,10008f70 <__gxx_personality_sj0+0x5dc>
10008fac:	d8800b17 	ldw	r2,44(sp)
10008fb0:	d8800115 	stw	r2,4(sp)
10008fb4:	003ec906 	br	10008adc <__gxx_personality_sj0+0x148>

10008fb8 <__cxa_call_unexpected>:
10008fb8:	00c400b4 	movhi	r3,4098
10008fbc:	deffe704 	addi	sp,sp,-100
10008fc0:	18d11804 	addi	r3,r3,17504
10008fc4:	01440074 	movhi	r5,4097
10008fc8:	00840074 	movhi	r2,4097
10008fcc:	29626504 	addi	r5,r5,-30316
10008fd0:	10a40f04 	addi	r2,r2,-28612
10008fd4:	d9000015 	stw	r4,0(sp)
10008fd8:	d8c00b15 	stw	r3,44(sp)
10008fdc:	d9000404 	addi	r4,sp,16
10008fe0:	d8c01704 	addi	r3,sp,92
10008fe4:	d8c00c15 	stw	r3,48(sp)
10008fe8:	dfc01815 	stw	ra,96(sp)
10008fec:	d9400a15 	stw	r5,40(sp)
10008ff0:	d8800d15 	stw	r2,52(sp)
10008ff4:	df001715 	stw	fp,92(sp)
10008ff8:	dec00e15 	stw	sp,56(sp)
10008ffc:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10009000:	d9000017 	ldw	r4,0(sp)
10009004:	0007f400 	call	10007f40 <__cxa_begin_catch>
10009008:	d9000017 	ldw	r4,0(sp)
1000900c:	20fffd17 	ldw	r3,-12(r4)
10009010:	20bffe17 	ldw	r2,-8(r4)
10009014:	d8c00115 	stw	r3,4(sp)
10009018:	20fffb17 	ldw	r3,-20(r4)
1000901c:	d8801315 	stw	r2,76(sp)
10009020:	d8c00015 	stw	r3,0(sp)
10009024:	20fff817 	ldw	r3,-32(r4)
10009028:	d8c00215 	stw	r3,8(sp)
1000902c:	00c00044 	movi	r3,1
10009030:	d8c00515 	stw	r3,20(sp)
10009034:	213ff717 	ldw	r4,-36(r4)
10009038:	00081b40 	call	100081b4 <_ZN10__cxxabiv112__unexpectedEPFvvE>
1000903c:	d8c00617 	ldw	r3,24(sp)
10009040:	d8800517 	ldw	r2,20(sp)
10009044:	d8c00315 	stw	r3,12(sp)
10009048:	1000221e 	bne	r2,zero,100090d4 <__cxa_call_unexpected+0x11c>
1000904c:	d9000617 	ldw	r4,24(sp)
10009050:	0007f400 	call	10007f40 <__cxa_begin_catch>
10009054:	000c5bc0 	call	1000c5bc <__cxa_get_globals_fast>
10009058:	10800017 	ldw	r2,0(r2)
1000905c:	10c00b17 	ldw	r3,44(r2)
10009060:	18c0004c 	andi	r3,r3,1
10009064:	1800251e 	bne	r3,zero,100090fc <__cxa_call_unexpected+0x144>
10009068:	10801004 	addi	r2,r2,64
1000906c:	d8800315 	stw	r2,12(sp)
10009070:	d9400117 	ldw	r5,4(sp)
10009074:	00800084 	movi	r2,2
10009078:	d9801104 	addi	r6,sp,68
1000907c:	0009883a 	mov	r4,zero
10009080:	d8800515 	stw	r2,20(sp)
10009084:	00088680 	call	10008868 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10009088:	d9800317 	ldw	r6,12(sp)
1000908c:	d9c00017 	ldw	r7,0(sp)
10009090:	d9001104 	addi	r4,sp,68
10009094:	317ff017 	ldw	r5,-64(r6)
10009098:	00087580 	call	10008758 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
1000909c:	10803fcc 	andi	r2,r2,255
100090a0:	1000191e 	bne	r2,zero,10009108 <__cxa_call_unexpected+0x150>
100090a4:	d9c00017 	ldw	r7,0(sp)
100090a8:	014400b4 	movhi	r5,4098
100090ac:	00800084 	movi	r2,2
100090b0:	000d883a 	mov	r6,zero
100090b4:	2954f004 	addi	r5,r5,21440
100090b8:	d9001104 	addi	r4,sp,68
100090bc:	d8800515 	stw	r2,20(sp)
100090c0:	00087580 	call	10008758 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
100090c4:	10803fcc 	andi	r2,r2,255
100090c8:	1000101e 	bne	r2,zero,1000910c <__cxa_call_unexpected+0x154>
100090cc:	d9000217 	ldw	r4,8(sp)
100090d0:	00080d80 	call	100080d8 <_ZN10__cxxabiv111__terminateEPFvvE>
100090d4:	10bfffc4 	addi	r2,r2,-1
100090d8:	10000126 	beq	r2,zero,100090e0 <__cxa_call_unexpected+0x128>
100090dc:	003b68fa 	trap	3
100090e0:	d8000515 	stw	zero,20(sp)
100090e4:	0007fec0 	call	10007fec <__cxa_end_catch>
100090e8:	0007fec0 	call	10007fec <__cxa_end_catch>
100090ec:	d9000317 	ldw	r4,12(sp)
100090f0:	00bfffc4 	movi	r2,-1
100090f4:	d8800515 	stw	r2,20(sp)
100090f8:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>
100090fc:	10800017 	ldw	r2,0(r2)
10009100:	d8800315 	stw	r2,12(sp)
10009104:	003fda06 	br	10009070 <__cxa_call_unexpected+0xb8>
10009108:	00083780 	call	10008378 <__cxa_rethrow>
1000910c:	01000104 	movi	r4,4
10009110:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009114:	00c400b4 	movhi	r3,4098
10009118:	01840074 	movhi	r6,4097
1000911c:	014400b4 	movhi	r5,4098
10009120:	18d50b04 	addi	r3,r3,21548
10009124:	31b17604 	addi	r6,r6,-14888
10009128:	2954f004 	addi	r5,r5,21440
1000912c:	1009883a 	mov	r4,r2
10009130:	10c00015 	stw	r3,0(r2)
10009134:	00082e40 	call	100082e4 <__cxa_throw>

10009138 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
10009138:	00c400f4 	movhi	r3,4099
1000913c:	18ea7a04 	addi	r3,r3,-22040
10009140:	18800117 	ldw	r2,4(r3)
10009144:	21ffff04 	addi	r7,r4,-4
10009148:	10001926 	beq	r2,zero,100091b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
1000914c:	227fff17 	ldw	r9,-4(r4)
10009150:	3a4d883a 	add	r6,r7,r9
10009154:	30801636 	bltu	r6,r2,100091b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
10009158:	11400117 	ldw	r5,4(r2)
1000915c:	11801f26 	beq	r2,r6,100091dc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa4>
10009160:	28002426 	beq	r5,zero,100091f4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xbc>
10009164:	31400336 	bltu	r6,r5,10009174 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x3c>
10009168:	00002806 	br	1000920c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xd4>
1000916c:	30c0052e 	bgeu	r6,r3,10009184 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4c>
10009170:	180b883a 	mov	r5,r3
10009174:	28c00117 	ldw	r3,4(r5)
10009178:	12000104 	addi	r8,r2,4
1000917c:	2805883a 	mov	r2,r5
10009180:	183ffa1e 	bne	r3,zero,1000916c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
10009184:	30c01026 	beq	r6,r3,100091c8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
10009188:	40800017 	ldw	r2,0(r8)
1000918c:	10c00017 	ldw	r3,0(r2)
10009190:	10cb883a 	add	r5,r2,r3
10009194:	39400926 	beq	r7,r5,100091bc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x84>
10009198:	10800117 	ldw	r2,4(r2)
1000919c:	227fff15 	stw	r9,-4(r4)
100091a0:	20800015 	stw	r2,0(r4)
100091a4:	40800017 	ldw	r2,0(r8)
100091a8:	11c00115 	stw	r7,4(r2)
100091ac:	f800283a 	ret
100091b0:	20800015 	stw	r2,0(r4)
100091b4:	19c00115 	stw	r7,4(r3)
100091b8:	f800283a 	ret
100091bc:	1a53883a 	add	r9,r3,r9
100091c0:	12400015 	stw	r9,0(r2)
100091c4:	f800283a 	ret
100091c8:	30c00017 	ldw	r3,0(r6)
100091cc:	30800117 	ldw	r2,4(r6)
100091d0:	48d3883a 	add	r9,r9,r3
100091d4:	28800115 	stw	r2,4(r5)
100091d8:	003feb06 	br	10009188 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
100091dc:	10800017 	ldw	r2,0(r2)
100091e0:	21400015 	stw	r5,0(r4)
100091e4:	1253883a 	add	r9,r2,r9
100091e8:	227fff15 	stw	r9,-4(r4)
100091ec:	19c00115 	stw	r7,4(r3)
100091f0:	f800283a 	ret
100091f4:	020400f4 	movhi	r8,4099
100091f8:	0007883a 	mov	r3,zero
100091fc:	100b883a 	mov	r5,r2
10009200:	422a7b04 	addi	r8,r8,-22036
10009204:	30ffe01e 	bne	r6,r3,10009188 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009208:	003fef06 	br	100091c8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
1000920c:	020400f4 	movhi	r8,4099
10009210:	2807883a 	mov	r3,r5
10009214:	422a7b04 	addi	r8,r8,-22036
10009218:	100b883a 	mov	r5,r2
1000921c:	30ffda1e 	bne	r6,r3,10009188 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009220:	003fe906 	br	100091c8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>

10009224 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
10009224:	21000104 	addi	r4,r4,4
10009228:	20800228 	cmpgeui	r2,r4,8
1000922c:	1000011e 	bne	r2,zero,10009234 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x10>
10009230:	01000204 	movi	r4,8
10009234:	008400f4 	movhi	r2,4099
10009238:	10ea7b17 	ldw	r3,-22036(r2)
1000923c:	210000c4 	addi	r4,r4,3
10009240:	017fff04 	movi	r5,-4
10009244:	214a703a 	and	r5,r4,r5
10009248:	18001a26 	beq	r3,zero,100092b4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x90>
1000924c:	19000017 	ldw	r4,0(r3)
10009250:	21400436 	bltu	r4,r5,10009264 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
10009254:	00001906 	br	100092bc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x98>
10009258:	11000017 	ldw	r4,0(r2)
1000925c:	2140042e 	bgeu	r4,r5,10009270 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4c>
10009260:	1007883a 	mov	r3,r2
10009264:	18800117 	ldw	r2,4(r3)
10009268:	103ffb1e 	bne	r2,zero,10009258 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
1000926c:	f800283a 	ret
10009270:	19800104 	addi	r6,r3,4
10009274:	2147c83a 	sub	r3,r4,r5
10009278:	1a000228 	cmpgeui	r8,r3,8
1000927c:	11c00117 	ldw	r7,4(r2)
10009280:	40000826 	beq	r8,zero,100092a4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x80>
10009284:	1149883a 	add	r4,r2,r5
10009288:	21c00115 	stw	r7,4(r4)
1000928c:	30800017 	ldw	r2,0(r6)
10009290:	20c00015 	stw	r3,0(r4)
10009294:	11400015 	stw	r5,0(r2)
10009298:	31000015 	stw	r4,0(r6)
1000929c:	10800104 	addi	r2,r2,4
100092a0:	f800283a 	ret
100092a4:	11000015 	stw	r4,0(r2)
100092a8:	31c00015 	stw	r7,0(r6)
100092ac:	10800104 	addi	r2,r2,4
100092b0:	f800283a 	ret
100092b4:	0005883a 	mov	r2,zero
100092b8:	f800283a 	ret
100092bc:	018400f4 	movhi	r6,4099
100092c0:	1805883a 	mov	r2,r3
100092c4:	31aa7b04 	addi	r6,r6,-22036
100092c8:	003fea06 	br	10009274 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>

100092cc <_ZN9__gnu_cxx9__freeresEv>:
100092cc:	008400f4 	movhi	r2,4099
100092d0:	112a7c17 	ldw	r4,-22032(r2)
100092d4:	20000826 	beq	r4,zero,100092f8 <_ZN9__gnu_cxx9__freeresEv+0x2c>
100092d8:	deffff04 	addi	sp,sp,-4
100092dc:	dfc00015 	stw	ra,0(sp)
100092e0:	0014d780 	call	10014d78 <free>
100092e4:	008400f4 	movhi	r2,4099
100092e8:	102a7c15 	stw	zero,-22032(r2)
100092ec:	dfc00017 	ldw	ra,0(sp)
100092f0:	dec00104 	addi	sp,sp,4
100092f4:	f800283a 	ret
100092f8:	f800283a 	ret

100092fc <__cxa_allocate_exception>:
100092fc:	defffe04 	addi	sp,sp,-8
10009300:	dc000015 	stw	r16,0(sp)
10009304:	24001104 	addi	r16,r4,68
10009308:	8009883a 	mov	r4,r16
1000930c:	dfc00115 	stw	ra,4(sp)
10009310:	0014d680 	call	10014d68 <malloc>
10009314:	10000a26 	beq	r2,zero,10009340 <__cxa_allocate_exception+0x44>
10009318:	1007883a 	mov	r3,r2
1000931c:	01801104 	movi	r6,68
10009320:	000b883a 	mov	r5,zero
10009324:	1809883a 	mov	r4,r3
10009328:	001591c0 	call	1001591c <memset>
1000932c:	10801104 	addi	r2,r2,68
10009330:	dfc00117 	ldw	ra,4(sp)
10009334:	dc000017 	ldw	r16,0(sp)
10009338:	dec00204 	addi	sp,sp,8
1000933c:	f800283a 	ret
10009340:	8009883a 	mov	r4,r16
10009344:	00092240 	call	10009224 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
10009348:	1007883a 	mov	r3,r2
1000934c:	103ff31e 	bne	r2,zero,1000931c <__cxa_allocate_exception+0x20>
10009350:	00081a00 	call	100081a0 <_ZSt9terminatev>

10009354 <__cxa_free_exception>:
10009354:	008400f4 	movhi	r2,4099
10009358:	10aa7a04 	addi	r2,r2,-22040
1000935c:	10c00217 	ldw	r3,8(r2)
10009360:	213fef04 	addi	r4,r4,-68
10009364:	1900042e 	bgeu	r3,r4,10009378 <__cxa_free_exception+0x24>
10009368:	10800317 	ldw	r2,12(r2)
1000936c:	1887883a 	add	r3,r3,r2
10009370:	20c0012e 	bgeu	r4,r3,10009378 <__cxa_free_exception+0x24>
10009374:	00091381 	jmpi	10009138 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
10009378:	0014d781 	jmpi	10014d78 <free>

1000937c <__cxa_allocate_dependent_exception>:
1000937c:	deffff04 	addi	sp,sp,-4
10009380:	01001004 	movi	r4,64
10009384:	dfc00015 	stw	ra,0(sp)
10009388:	0014d680 	call	10014d68 <malloc>
1000938c:	10000826 	beq	r2,zero,100093b0 <__cxa_allocate_dependent_exception+0x34>
10009390:	1007883a 	mov	r3,r2
10009394:	01801004 	movi	r6,64
10009398:	000b883a 	mov	r5,zero
1000939c:	1809883a 	mov	r4,r3
100093a0:	001591c0 	call	1001591c <memset>
100093a4:	dfc00017 	ldw	ra,0(sp)
100093a8:	dec00104 	addi	sp,sp,4
100093ac:	f800283a 	ret
100093b0:	01001004 	movi	r4,64
100093b4:	00092240 	call	10009224 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
100093b8:	1007883a 	mov	r3,r2
100093bc:	103ff51e 	bne	r2,zero,10009394 <__cxa_allocate_dependent_exception+0x18>
100093c0:	00081a00 	call	100081a0 <_ZSt9terminatev>

100093c4 <__cxa_free_dependent_exception>:
100093c4:	008400f4 	movhi	r2,4099
100093c8:	10aa7a04 	addi	r2,r2,-22040
100093cc:	10c00217 	ldw	r3,8(r2)
100093d0:	200b883a 	mov	r5,r4
100093d4:	1900042e 	bgeu	r3,r4,100093e8 <__cxa_free_dependent_exception+0x24>
100093d8:	10800317 	ldw	r2,12(r2)
100093dc:	1887883a 	add	r3,r3,r2
100093e0:	20c0012e 	bgeu	r4,r3,100093e8 <__cxa_free_dependent_exception+0x24>
100093e4:	00091381 	jmpi	10009138 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
100093e8:	2809883a 	mov	r4,r5
100093ec:	0014d781 	jmpi	10014d78 <free>

100093f0 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
100093f0:	defffd04 	addi	sp,sp,-12
100093f4:	dc000015 	stw	r16,0(sp)
100093f8:	040400f4 	movhi	r16,4099
100093fc:	dc400115 	stw	r17,4(sp)
10009400:	842a7a04 	addi	r16,r16,-22040
10009404:	04424004 	movi	r17,2304
10009408:	01024004 	movi	r4,2304
1000940c:	dfc00215 	stw	ra,8(sp)
10009410:	84400315 	stw	r17,12(r16)
10009414:	0014d680 	call	10014d68 <malloc>
10009418:	80800215 	stw	r2,8(r16)
1000941c:	10000826 	beq	r2,zero,10009440 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
10009420:	80800115 	stw	r2,4(r16)
10009424:	14400015 	stw	r17,0(r2)
10009428:	10000115 	stw	zero,4(r2)
1000942c:	dfc00217 	ldw	ra,8(sp)
10009430:	dc400117 	ldw	r17,4(sp)
10009434:	dc000017 	ldw	r16,0(sp)
10009438:	dec00304 	addi	sp,sp,12
1000943c:	f800283a 	ret
10009440:	008400f4 	movhi	r2,4099
10009444:	102a7d15 	stw	zero,-22028(r2)
10009448:	008400f4 	movhi	r2,4099
1000944c:	102a7b15 	stw	zero,-22036(r2)
10009450:	003ff606 	br	1000942c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

10009454 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
10009454:	20800017 	ldw	r2,0(r4)
10009458:	1000031e 	bne	r2,zero,10009468 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x14>
1000945c:	20800117 	ldw	r2,4(r4)
10009460:	10800117 	ldw	r2,4(r2)
10009464:	11001026 	beq	r2,r4,100094a8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x54>
10009468:	20800217 	ldw	r2,8(r4)
1000946c:	1000021e 	bne	r2,zero,10009478 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x24>
10009470:	00000406 	br	10009484 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x30>
10009474:	1805883a 	mov	r2,r3
10009478:	10c00317 	ldw	r3,12(r2)
1000947c:	183ffd1e 	bne	r3,zero,10009474 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
10009480:	f800283a 	ret
10009484:	20c00117 	ldw	r3,4(r4)
10009488:	18800217 	ldw	r2,8(r3)
1000948c:	20800226 	beq	r4,r2,10009498 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x44>
10009490:	00000706 	br	100094b0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x5c>
10009494:	1007883a 	mov	r3,r2
10009498:	18800117 	ldw	r2,4(r3)
1000949c:	11000217 	ldw	r4,8(r2)
100094a0:	193ffc26 	beq	r3,r4,10009494 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x40>
100094a4:	f800283a 	ret
100094a8:	10800317 	ldw	r2,12(r2)
100094ac:	f800283a 	ret
100094b0:	1805883a 	mov	r2,r3
100094b4:	003ff206 	br	10009480 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x2c>

100094b8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
100094b8:	20800317 	ldw	r2,12(r4)
100094bc:	1000021e 	bne	r2,zero,100094c8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
100094c0:	00000406 	br	100094d4 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
100094c4:	1805883a 	mov	r2,r3
100094c8:	10c00217 	ldw	r3,8(r2)
100094cc:	183ffd1e 	bne	r3,zero,100094c4 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xc>
100094d0:	f800283a 	ret
100094d4:	20c00117 	ldw	r3,4(r4)
100094d8:	18800317 	ldw	r2,12(r3)
100094dc:	20800226 	beq	r4,r2,100094e8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x30>
100094e0:	00000806 	br	10009504 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4c>
100094e4:	1007883a 	mov	r3,r2
100094e8:	18800117 	ldw	r2,4(r3)
100094ec:	11000317 	ldw	r4,12(r2)
100094f0:	20fffc26 	beq	r4,r3,100094e4 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x2c>
100094f4:	19400317 	ldw	r5,12(r3)
100094f8:	117ff51e 	bne	r2,r5,100094d0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
100094fc:	1805883a 	mov	r2,r3
10009500:	003ff306 	br	100094d0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009504:	1805883a 	mov	r2,r3
10009508:	000b883a 	mov	r5,zero
1000950c:	2007883a 	mov	r3,r4
10009510:	117fef1e 	bne	r2,r5,100094d0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009514:	003ff906 	br	100094fc <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x44>

10009518 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>:
10009518:	00094b81 	jmpi	100094b8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>

1000951c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
1000951c:	00094541 	jmpi	10009454 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

10009520 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>:
10009520:	00094541 	jmpi	10009454 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

10009524 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
10009524:	20800317 	ldw	r2,12(r4)
10009528:	10c00217 	ldw	r3,8(r2)
1000952c:	20c00315 	stw	r3,12(r4)
10009530:	18000126 	beq	r3,zero,10009538 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x14>
10009534:	19000115 	stw	r4,4(r3)
10009538:	20c00117 	ldw	r3,4(r4)
1000953c:	10c00115 	stw	r3,4(r2)
10009540:	29800017 	ldw	r6,0(r5)
10009544:	21800a26 	beq	r4,r6,10009570 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x4c>
10009548:	19400217 	ldw	r5,8(r3)
1000954c:	21400426 	beq	r4,r5,10009560 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x3c>
10009550:	18800315 	stw	r2,12(r3)
10009554:	11000215 	stw	r4,8(r2)
10009558:	20800115 	stw	r2,4(r4)
1000955c:	f800283a 	ret
10009560:	18800215 	stw	r2,8(r3)
10009564:	11000215 	stw	r4,8(r2)
10009568:	20800115 	stw	r2,4(r4)
1000956c:	f800283a 	ret
10009570:	28800015 	stw	r2,0(r5)
10009574:	11000215 	stw	r4,8(r2)
10009578:	20800115 	stw	r2,4(r4)
1000957c:	f800283a 	ret

10009580 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
10009580:	20800217 	ldw	r2,8(r4)
10009584:	10c00317 	ldw	r3,12(r2)
10009588:	20c00215 	stw	r3,8(r4)
1000958c:	18000126 	beq	r3,zero,10009594 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x14>
10009590:	19000115 	stw	r4,4(r3)
10009594:	20c00117 	ldw	r3,4(r4)
10009598:	10c00115 	stw	r3,4(r2)
1000959c:	29800017 	ldw	r6,0(r5)
100095a0:	21800a26 	beq	r4,r6,100095cc <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x4c>
100095a4:	19400317 	ldw	r5,12(r3)
100095a8:	21400426 	beq	r4,r5,100095bc <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x3c>
100095ac:	18800215 	stw	r2,8(r3)
100095b0:	11000315 	stw	r4,12(r2)
100095b4:	20800115 	stw	r2,4(r4)
100095b8:	f800283a 	ret
100095bc:	18800315 	stw	r2,12(r3)
100095c0:	11000315 	stw	r4,12(r2)
100095c4:	20800115 	stw	r2,4(r4)
100095c8:	f800283a 	ret
100095cc:	28800015 	stw	r2,0(r5)
100095d0:	11000315 	stw	r4,12(r2)
100095d4:	20800115 	stw	r2,4(r4)
100095d8:	f800283a 	ret

100095dc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
100095dc:	29800115 	stw	r6,4(r5)
100095e0:	28000215 	stw	zero,8(r5)
100095e4:	28000315 	stw	zero,12(r5)
100095e8:	28000015 	stw	zero,0(r5)
100095ec:	21003fcc 	andi	r4,r4,255
100095f0:	20001826 	beq	r4,zero,10009654 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x78>
100095f4:	31400215 	stw	r5,8(r6)
100095f8:	39807d26 	beq	r7,r6,100097f0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x214>
100095fc:	38800217 	ldw	r2,8(r7)
10009600:	11808126 	beq	r2,r6,10009808 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22c>
10009604:	39800117 	ldw	r6,4(r7)
10009608:	02000044 	movi	r8,1
1000960c:	29800e26 	beq	r5,r6,10009648 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
10009610:	28c00117 	ldw	r3,4(r5)
10009614:	18800017 	ldw	r2,0(r3)
10009618:	10000b1e 	bne	r2,zero,10009648 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
1000961c:	18800117 	ldw	r2,4(r3)
10009620:	11000217 	ldw	r4,8(r2)
10009624:	19002526 	beq	r3,r4,100096bc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xe0>
10009628:	20001026 	beq	r4,zero,1000966c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
1000962c:	22400017 	ldw	r9,0(r4)
10009630:	48000e1e 	bne	r9,zero,1000966c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
10009634:	1a000015 	stw	r8,0(r3)
10009638:	22000015 	stw	r8,0(r4)
1000963c:	10000015 	stw	zero,0(r2)
10009640:	100b883a 	mov	r5,r2
10009644:	29bff21e 	bne	r5,r6,10009610 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x34>
10009648:	00800044 	movi	r2,1
1000964c:	30800015 	stw	r2,0(r6)
10009650:	f800283a 	ret
10009654:	31400315 	stw	r5,12(r6)
10009658:	38800317 	ldw	r2,12(r7)
1000965c:	11bfe91e 	bne	r2,r6,10009604 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
10009660:	39400315 	stw	r5,12(r7)
10009664:	39800117 	ldw	r6,4(r7)
10009668:	003fe706 	br	10009608 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x2c>
1000966c:	19000217 	ldw	r4,8(r3)
10009670:	21402e26 	beq	r4,r5,1000972c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x150>
10009674:	11000317 	ldw	r4,12(r2)
10009678:	1a000015 	stw	r8,0(r3)
1000967c:	10000015 	stw	zero,0(r2)
10009680:	20c00217 	ldw	r3,8(r4)
10009684:	10c00315 	stw	r3,12(r2)
10009688:	18000126 	beq	r3,zero,10009690 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb4>
1000968c:	18800115 	stw	r2,4(r3)
10009690:	10c00117 	ldw	r3,4(r2)
10009694:	20c00115 	stw	r3,4(r4)
10009698:	39800117 	ldw	r6,4(r7)
1000969c:	11803426 	beq	r2,r6,10009770 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x194>
100096a0:	19800217 	ldw	r6,8(r3)
100096a4:	11803426 	beq	r2,r6,10009778 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x19c>
100096a8:	19000315 	stw	r4,12(r3)
100096ac:	20800215 	stw	r2,8(r4)
100096b0:	11000115 	stw	r4,4(r2)
100096b4:	39800117 	ldw	r6,4(r7)
100096b8:	003fd406 	br	1000960c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
100096bc:	12400317 	ldw	r9,12(r2)
100096c0:	48000726 	beq	r9,zero,100096e0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
100096c4:	4a800017 	ldw	r10,0(r9)
100096c8:	5000051e 	bne	r10,zero,100096e0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
100096cc:	1a000015 	stw	r8,0(r3)
100096d0:	4a000015 	stw	r8,0(r9)
100096d4:	10000015 	stw	zero,0(r2)
100096d8:	100b883a 	mov	r5,r2
100096dc:	003fcb06 	br	1000960c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
100096e0:	19800317 	ldw	r6,12(r3)
100096e4:	31402626 	beq	r6,r5,10009780 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1a4>
100096e8:	21800317 	ldw	r6,12(r4)
100096ec:	1a000015 	stw	r8,0(r3)
100096f0:	10000015 	stw	zero,0(r2)
100096f4:	11800215 	stw	r6,8(r2)
100096f8:	30000126 	beq	r6,zero,10009700 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x124>
100096fc:	30800115 	stw	r2,4(r6)
10009700:	10c00117 	ldw	r3,4(r2)
10009704:	20c00115 	stw	r3,4(r4)
10009708:	39800117 	ldw	r6,4(r7)
1000970c:	11802e26 	beq	r2,r6,100097c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1ec>
10009710:	19800317 	ldw	r6,12(r3)
10009714:	11802e26 	beq	r2,r6,100097d0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1f4>
10009718:	19000215 	stw	r4,8(r3)
1000971c:	20800315 	stw	r2,12(r4)
10009720:	11000115 	stw	r4,4(r2)
10009724:	39800117 	ldw	r6,4(r7)
10009728:	003fb806 	br	1000960c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
1000972c:	29000317 	ldw	r4,12(r5)
10009730:	19000215 	stw	r4,8(r3)
10009734:	20002a26 	beq	r4,zero,100097e0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x204>
10009738:	20c00115 	stw	r3,4(r4)
1000973c:	19000117 	ldw	r4,4(r3)
10009740:	29000115 	stw	r4,4(r5)
10009744:	39800117 	ldw	r6,4(r7)
10009748:	19802326 	beq	r3,r6,100097d8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1fc>
1000974c:	21800317 	ldw	r6,12(r4)
10009750:	19802526 	beq	r3,r6,100097e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20c>
10009754:	21400215 	stw	r5,8(r4)
10009758:	28c00315 	stw	r3,12(r5)
1000975c:	2809883a 	mov	r4,r5
10009760:	19400115 	stw	r5,4(r3)
10009764:	180b883a 	mov	r5,r3
10009768:	2007883a 	mov	r3,r4
1000976c:	003fc106 	br	10009674 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x98>
10009770:	39000115 	stw	r4,4(r7)
10009774:	003fcd06 	br	100096ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
10009778:	19000215 	stw	r4,8(r3)
1000977c:	003fcb06 	br	100096ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
10009780:	29000217 	ldw	r4,8(r5)
10009784:	19000315 	stw	r4,12(r3)
10009788:	20002126 	beq	r4,zero,10009810 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x234>
1000978c:	20c00115 	stw	r3,4(r4)
10009790:	19000117 	ldw	r4,4(r3)
10009794:	29000115 	stw	r4,4(r5)
10009798:	39800117 	ldw	r6,4(r7)
1000979c:	19802226 	beq	r3,r6,10009828 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
100097a0:	21800217 	ldw	r6,8(r4)
100097a4:	19801e26 	beq	r3,r6,10009820 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x244>
100097a8:	21400315 	stw	r5,12(r4)
100097ac:	28c00215 	stw	r3,8(r5)
100097b0:	280d883a 	mov	r6,r5
100097b4:	11000217 	ldw	r4,8(r2)
100097b8:	19400115 	stw	r5,4(r3)
100097bc:	180b883a 	mov	r5,r3
100097c0:	3007883a 	mov	r3,r6
100097c4:	003fc806 	br	100096e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x10c>
100097c8:	39000115 	stw	r4,4(r7)
100097cc:	003fd306 	br	1000971c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
100097d0:	19000315 	stw	r4,12(r3)
100097d4:	003fd106 	br	1000971c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
100097d8:	39400115 	stw	r5,4(r7)
100097dc:	003fde06 	br	10009758 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
100097e0:	1009883a 	mov	r4,r2
100097e4:	003fd606 	br	10009740 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x164>
100097e8:	21400315 	stw	r5,12(r4)
100097ec:	003fda06 	br	10009758 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
100097f0:	39400115 	stw	r5,4(r7)
100097f4:	39400315 	stw	r5,12(r7)
100097f8:	280d883a 	mov	r6,r5
100097fc:	00800044 	movi	r2,1
10009800:	30800015 	stw	r2,0(r6)
10009804:	f800283a 	ret
10009808:	39400215 	stw	r5,8(r7)
1000980c:	003f7d06 	br	10009604 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
10009810:	28800115 	stw	r2,4(r5)
10009814:	39000117 	ldw	r4,4(r7)
10009818:	19000326 	beq	r3,r4,10009828 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
1000981c:	1009883a 	mov	r4,r2
10009820:	21400215 	stw	r5,8(r4)
10009824:	003fe106 	br	100097ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>
10009828:	39400115 	stw	r5,4(r7)
1000982c:	003fdf06 	br	100097ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>

10009830 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>:
10009830:	2005883a 	mov	r2,r4
10009834:	21000217 	ldw	r4,8(r4)
10009838:	12000317 	ldw	r8,12(r2)
1000983c:	2000b326 	beq	r4,zero,10009b0c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2dc>
10009840:	40004e26 	beq	r8,zero,1000997c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x14c>
10009844:	400d883a 	mov	r6,r8
10009848:	00000106 	br	10009850 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x20>
1000984c:	180d883a 	mov	r6,r3
10009850:	30c00217 	ldw	r3,8(r6)
10009854:	183ffd1e 	bne	r3,zero,1000984c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1c>
10009858:	31c00317 	ldw	r7,12(r6)
1000985c:	3080aa26 	beq	r6,r2,10009b08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d8>
10009860:	21800115 	stw	r6,4(r4)
10009864:	31000215 	stw	r4,8(r6)
10009868:	32009f26 	beq	r6,r8,10009ae8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2b8>
1000986c:	30c00117 	ldw	r3,4(r6)
10009870:	3800a326 	beq	r7,zero,10009b00 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d0>
10009874:	38c00115 	stw	r3,4(r7)
10009878:	31000117 	ldw	r4,4(r6)
1000987c:	21c00215 	stw	r7,8(r4)
10009880:	32000315 	stw	r8,12(r6)
10009884:	11000317 	ldw	r4,12(r2)
10009888:	21800115 	stw	r6,4(r4)
1000988c:	29000117 	ldw	r4,4(r5)
10009890:	20809226 	beq	r4,r2,10009adc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2ac>
10009894:	12000117 	ldw	r8,4(r2)
10009898:	41000217 	ldw	r4,8(r8)
1000989c:	20809626 	beq	r4,r2,10009af8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c8>
100098a0:	41800315 	stw	r6,12(r8)
100098a4:	12400017 	ldw	r9,0(r2)
100098a8:	31000017 	ldw	r4,0(r6)
100098ac:	32000115 	stw	r8,4(r6)
100098b0:	32400015 	stw	r9,0(r6)
100098b4:	11000015 	stw	r4,0(r2)
100098b8:	20004726 	beq	r4,zero,100099d8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1a8>
100098bc:	29800117 	ldw	r6,4(r5)
100098c0:	02800044 	movi	r10,1
100098c4:	31c02926 	beq	r6,r7,1000996c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
100098c8:	38000326 	beq	r7,zero,100098d8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xa8>
100098cc:	39800017 	ldw	r6,0(r7)
100098d0:	31800060 	cmpeqi	r6,r6,1
100098d4:	30002626 	beq	r6,zero,10009970 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
100098d8:	19800217 	ldw	r6,8(r3)
100098dc:	31c03f26 	beq	r6,r7,100099dc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1ac>
100098e0:	32400017 	ldw	r9,0(r6)
100098e4:	32000317 	ldw	r8,12(r6)
100098e8:	4800111e 	bne	r9,zero,10009930 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x100>
100098ec:	32800015 	stw	r10,0(r6)
100098f0:	18000015 	stw	zero,0(r3)
100098f4:	1a000215 	stw	r8,8(r3)
100098f8:	40000126 	beq	r8,zero,10009900 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xd0>
100098fc:	40c00115 	stw	r3,4(r8)
10009900:	19000117 	ldw	r4,4(r3)
10009904:	31000115 	stw	r4,4(r6)
10009908:	2a400117 	ldw	r9,4(r5)
1000990c:	1a406726 	beq	r3,r9,10009aac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x27c>
10009910:	22400317 	ldw	r9,12(r4)
10009914:	1a406826 	beq	r3,r9,10009ab8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x288>
10009918:	21800215 	stw	r6,8(r4)
1000991c:	19000217 	ldw	r4,8(r3)
10009920:	30c00315 	stw	r3,12(r6)
10009924:	22000317 	ldw	r8,12(r4)
10009928:	19800115 	stw	r6,4(r3)
1000992c:	200d883a 	mov	r6,r4
10009930:	40000326 	beq	r8,zero,10009940 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x110>
10009934:	42400017 	ldw	r9,0(r8)
10009938:	4a400058 	cmpnei	r9,r9,1
1000993c:	4800831e 	bne	r9,zero,10009b4c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x31c>
10009940:	32400217 	ldw	r9,8(r6)
10009944:	48000326 	beq	r9,zero,10009954 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009948:	4a000017 	ldw	r8,0(r9)
1000994c:	42000058 	cmpnei	r8,r8,1
10009950:	40009b1e 	bne	r8,zero,10009bc0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x390>
10009954:	30000015 	stw	zero,0(r6)
10009958:	19800117 	ldw	r6,4(r3)
1000995c:	180f883a 	mov	r7,r3
10009960:	3007883a 	mov	r3,r6
10009964:	29800117 	ldw	r6,4(r5)
10009968:	31ffd71e 	bne	r6,r7,100098c8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x98>
1000996c:	38004e26 	beq	r7,zero,10009aa8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x278>
10009970:	00c00044 	movi	r3,1
10009974:	38c00015 	stw	r3,0(r7)
10009978:	f800283a 	ret
1000997c:	10c00117 	ldw	r3,4(r2)
10009980:	20c00115 	stw	r3,4(r4)
10009984:	200f883a 	mov	r7,r4
10009988:	29000117 	ldw	r4,4(r5)
1000998c:	20806426 	beq	r4,r2,10009b20 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f0>
10009990:	11000117 	ldw	r4,4(r2)
10009994:	21800217 	ldw	r6,8(r4)
10009998:	30805526 	beq	r6,r2,10009af0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c0>
1000999c:	21c00315 	stw	r7,12(r4)
100099a0:	29000217 	ldw	r4,8(r5)
100099a4:	20806026 	beq	r4,r2,10009b28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f8>
100099a8:	29800317 	ldw	r6,12(r5)
100099ac:	11000017 	ldw	r4,0(r2)
100099b0:	30bfc11e 	bne	r6,r2,100098b8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
100099b4:	11800217 	ldw	r6,8(r2)
100099b8:	3000b626 	beq	r6,zero,10009c94 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x464>
100099bc:	3811883a 	mov	r8,r7
100099c0:	00000106 	br	100099c8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x198>
100099c4:	3011883a 	mov	r8,r6
100099c8:	41800317 	ldw	r6,12(r8)
100099cc:	303ffd1e 	bne	r6,zero,100099c4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x194>
100099d0:	2a000315 	stw	r8,12(r5)
100099d4:	203fb91e 	bne	r4,zero,100098bc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x8c>
100099d8:	f800283a 	ret
100099dc:	19800317 	ldw	r6,12(r3)
100099e0:	31000017 	ldw	r4,0(r6)
100099e4:	32000217 	ldw	r8,8(r6)
100099e8:	2000111e 	bne	r4,zero,10009a30 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x200>
100099ec:	32800015 	stw	r10,0(r6)
100099f0:	18000015 	stw	zero,0(r3)
100099f4:	1a000315 	stw	r8,12(r3)
100099f8:	40000126 	beq	r8,zero,10009a00 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1d0>
100099fc:	40c00115 	stw	r3,4(r8)
10009a00:	19000117 	ldw	r4,4(r3)
10009a04:	31000115 	stw	r4,4(r6)
10009a08:	2a400117 	ldw	r9,4(r5)
10009a0c:	1a402d26 	beq	r3,r9,10009ac4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x294>
10009a10:	22400217 	ldw	r9,8(r4)
10009a14:	1a402e26 	beq	r3,r9,10009ad0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2a0>
10009a18:	21800315 	stw	r6,12(r4)
10009a1c:	19000317 	ldw	r4,12(r3)
10009a20:	30c00215 	stw	r3,8(r6)
10009a24:	22000217 	ldw	r8,8(r4)
10009a28:	19800115 	stw	r6,4(r3)
10009a2c:	200d883a 	mov	r6,r4
10009a30:	40000326 	beq	r8,zero,10009a40 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x210>
10009a34:	41000017 	ldw	r4,0(r8)
10009a38:	21000058 	cmpnei	r4,r4,1
10009a3c:	2000791e 	bne	r4,zero,10009c24 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3f4>
10009a40:	32400317 	ldw	r9,12(r6)
10009a44:	483fc326 	beq	r9,zero,10009954 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009a48:	49000017 	ldw	r4,0(r9)
10009a4c:	21000058 	cmpnei	r4,r4,1
10009a50:	203fc026 	beq	r4,zero,10009954 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009a54:	1a000017 	ldw	r8,0(r3)
10009a58:	19000317 	ldw	r4,12(r3)
10009a5c:	32000015 	stw	r8,0(r6)
10009a60:	01800044 	movi	r6,1
10009a64:	19800015 	stw	r6,0(r3)
10009a68:	01800044 	movi	r6,1
10009a6c:	49800015 	stw	r6,0(r9)
10009a70:	21800217 	ldw	r6,8(r4)
10009a74:	19800315 	stw	r6,12(r3)
10009a78:	30000126 	beq	r6,zero,10009a80 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x250>
10009a7c:	30c00115 	stw	r3,4(r6)
10009a80:	19800117 	ldw	r6,4(r3)
10009a84:	21800115 	stw	r6,4(r4)
10009a88:	2a000117 	ldw	r8,4(r5)
10009a8c:	1a008926 	beq	r3,r8,10009cb4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x484>
10009a90:	31400217 	ldw	r5,8(r6)
10009a94:	19408d26 	beq	r3,r5,10009ccc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x49c>
10009a98:	31000315 	stw	r4,12(r6)
10009a9c:	20c00215 	stw	r3,8(r4)
10009aa0:	19000115 	stw	r4,4(r3)
10009aa4:	383fb21e 	bne	r7,zero,10009970 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
10009aa8:	f800283a 	ret
10009aac:	29800115 	stw	r6,4(r5)
10009ab0:	19000217 	ldw	r4,8(r3)
10009ab4:	003f9a06 	br	10009920 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
10009ab8:	21800315 	stw	r6,12(r4)
10009abc:	4009883a 	mov	r4,r8
10009ac0:	003f9706 	br	10009920 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
10009ac4:	29800115 	stw	r6,4(r5)
10009ac8:	19000317 	ldw	r4,12(r3)
10009acc:	003fd406 	br	10009a20 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
10009ad0:	21800215 	stw	r6,8(r4)
10009ad4:	4009883a 	mov	r4,r8
10009ad8:	003fd106 	br	10009a20 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
10009adc:	29800115 	stw	r6,4(r5)
10009ae0:	12000117 	ldw	r8,4(r2)
10009ae4:	003f6f06 	br	100098a4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
10009ae8:	3007883a 	mov	r3,r6
10009aec:	003f6706 	br	1000988c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x5c>
10009af0:	21c00215 	stw	r7,8(r4)
10009af4:	003faa06 	br	100099a0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
10009af8:	41800215 	stw	r6,8(r8)
10009afc:	003f6906 	br	100098a4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
10009b00:	1809883a 	mov	r4,r3
10009b04:	003f5d06 	br	1000987c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4c>
10009b08:	3811883a 	mov	r8,r7
10009b0c:	10c00117 	ldw	r3,4(r2)
10009b10:	000f883a 	mov	r7,zero
10009b14:	403f9c26 	beq	r8,zero,10009988 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x158>
10009b18:	4009883a 	mov	r4,r8
10009b1c:	003f9806 	br	10009980 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x150>
10009b20:	29c00115 	stw	r7,4(r5)
10009b24:	003f9e06 	br	100099a0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
10009b28:	11000317 	ldw	r4,12(r2)
10009b2c:	20005c26 	beq	r4,zero,10009ca0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x470>
10009b30:	380d883a 	mov	r6,r7
10009b34:	00000106 	br	10009b3c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x30c>
10009b38:	200d883a 	mov	r6,r4
10009b3c:	31000217 	ldw	r4,8(r6)
10009b40:	203ffd1e 	bne	r4,zero,10009b38 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x308>
10009b44:	29800215 	stw	r6,8(r5)
10009b48:	003f9706 	br	100099a8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
10009b4c:	32400217 	ldw	r9,8(r6)
10009b50:	4800181e 	bne	r9,zero,10009bb4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x384>
10009b54:	41000217 	ldw	r4,8(r8)
10009b58:	02400044 	movi	r9,1
10009b5c:	42400015 	stw	r9,0(r8)
10009b60:	30000015 	stw	zero,0(r6)
10009b64:	31000315 	stw	r4,12(r6)
10009b68:	20000126 	beq	r4,zero,10009b70 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x340>
10009b6c:	21800115 	stw	r6,4(r4)
10009b70:	31000117 	ldw	r4,4(r6)
10009b74:	41000115 	stw	r4,4(r8)
10009b78:	2a400117 	ldw	r9,4(r5)
10009b7c:	32404b26 	beq	r6,r9,10009cac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x47c>
10009b80:	22400217 	ldw	r9,8(r4)
10009b84:	32402326 	beq	r6,r9,10009c14 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3e4>
10009b88:	22000315 	stw	r8,12(r4)
10009b8c:	41800215 	stw	r6,8(r8)
10009b90:	19000217 	ldw	r4,8(r3)
10009b94:	1a800017 	ldw	r10,0(r3)
10009b98:	32000115 	stw	r8,4(r6)
10009b9c:	22400217 	ldw	r9,8(r4)
10009ba0:	22800015 	stw	r10,0(r4)
10009ba4:	01800044 	movi	r6,1
10009ba8:	19800015 	stw	r6,0(r3)
10009bac:	48000b26 	beq	r9,zero,10009bdc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ac>
10009bb0:	00000806 	br	10009bd4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3a4>
10009bb4:	49000017 	ldw	r4,0(r9)
10009bb8:	21000060 	cmpeqi	r4,r4,1
10009bbc:	203fe51e 	bne	r4,zero,10009b54 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x324>
10009bc0:	1a000017 	ldw	r8,0(r3)
10009bc4:	19000217 	ldw	r4,8(r3)
10009bc8:	32000015 	stw	r8,0(r6)
10009bcc:	01800044 	movi	r6,1
10009bd0:	19800015 	stw	r6,0(r3)
10009bd4:	01800044 	movi	r6,1
10009bd8:	49800015 	stw	r6,0(r9)
10009bdc:	21800317 	ldw	r6,12(r4)
10009be0:	19800215 	stw	r6,8(r3)
10009be4:	30000126 	beq	r6,zero,10009bec <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3bc>
10009be8:	30c00115 	stw	r3,4(r6)
10009bec:	19800117 	ldw	r6,4(r3)
10009bf0:	21800115 	stw	r6,4(r4)
10009bf4:	2a000117 	ldw	r8,4(r5)
10009bf8:	1a000826 	beq	r3,r8,10009c1c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ec>
10009bfc:	31400317 	ldw	r5,12(r6)
10009c00:	19402226 	beq	r3,r5,10009c8c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x45c>
10009c04:	31000215 	stw	r4,8(r6)
10009c08:	20c00315 	stw	r3,12(r4)
10009c0c:	19000115 	stw	r4,4(r3)
10009c10:	003f5606 	br	1000996c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
10009c14:	22000215 	stw	r8,8(r4)
10009c18:	003fdc06 	br	10009b8c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
10009c1c:	29000115 	stw	r4,4(r5)
10009c20:	003ff906 	br	10009c08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
10009c24:	32400317 	ldw	r9,12(r6)
10009c28:	4800241e 	bne	r9,zero,10009cbc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x48c>
10009c2c:	41000317 	ldw	r4,12(r8)
10009c30:	02400044 	movi	r9,1
10009c34:	42400015 	stw	r9,0(r8)
10009c38:	30000015 	stw	zero,0(r6)
10009c3c:	31000215 	stw	r4,8(r6)
10009c40:	20000126 	beq	r4,zero,10009c48 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x418>
10009c44:	21800115 	stw	r6,4(r4)
10009c48:	31000117 	ldw	r4,4(r6)
10009c4c:	41000115 	stw	r4,4(r8)
10009c50:	2a400117 	ldw	r9,4(r5)
10009c54:	32401f26 	beq	r6,r9,10009cd4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4a4>
10009c58:	22400317 	ldw	r9,12(r4)
10009c5c:	32401f26 	beq	r6,r9,10009cdc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4ac>
10009c60:	22000215 	stw	r8,8(r4)
10009c64:	41800315 	stw	r6,12(r8)
10009c68:	19000317 	ldw	r4,12(r3)
10009c6c:	1a800017 	ldw	r10,0(r3)
10009c70:	32000115 	stw	r8,4(r6)
10009c74:	22400317 	ldw	r9,12(r4)
10009c78:	22800015 	stw	r10,0(r4)
10009c7c:	01800044 	movi	r6,1
10009c80:	19800015 	stw	r6,0(r3)
10009c84:	483f7a26 	beq	r9,zero,10009a70 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x240>
10009c88:	003f7706 	br	10009a68 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x238>
10009c8c:	31000315 	stw	r4,12(r6)
10009c90:	003fdd06 	br	10009c08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
10009c94:	11800117 	ldw	r6,4(r2)
10009c98:	29800315 	stw	r6,12(r5)
10009c9c:	003f0606 	br	100098b8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
10009ca0:	11000117 	ldw	r4,4(r2)
10009ca4:	29000215 	stw	r4,8(r5)
10009ca8:	003f3f06 	br	100099a8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
10009cac:	2a000115 	stw	r8,4(r5)
10009cb0:	003fb606 	br	10009b8c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
10009cb4:	29000115 	stw	r4,4(r5)
10009cb8:	003f7806 	br	10009a9c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
10009cbc:	49000017 	ldw	r4,0(r9)
10009cc0:	21000060 	cmpeqi	r4,r4,1
10009cc4:	203fd91e 	bne	r4,zero,10009c2c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3fc>
10009cc8:	003f6206 	br	10009a54 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x224>
10009ccc:	31000215 	stw	r4,8(r6)
10009cd0:	003f7206 	br	10009a9c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
10009cd4:	2a000115 	stw	r8,4(r5)
10009cd8:	003fe206 	br	10009c64 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>
10009cdc:	22000315 	stw	r8,12(r4)
10009ce0:	003fe006 	br	10009c64 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>

10009ce4 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_>:
10009ce4:	0005883a 	mov	r2,zero
10009ce8:	20000a26 	beq	r4,zero,10009d14 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
10009cec:	20c00017 	ldw	r3,0(r4)
10009cf0:	18c00058 	cmpnei	r3,r3,1
10009cf4:	18000526 	beq	r3,zero,10009d0c <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x28>
10009cf8:	21400626 	beq	r4,r5,10009d14 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
10009cfc:	21000117 	ldw	r4,4(r4)
10009d00:	20c00017 	ldw	r3,0(r4)
10009d04:	18c00058 	cmpnei	r3,r3,1
10009d08:	183ffb1e 	bne	r3,zero,10009cf8 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x14>
10009d0c:	10800044 	addi	r2,r2,1
10009d10:	217ffa1e 	bne	r4,r5,10009cfc <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x18>
10009d14:	f800283a 	ret

10009d18 <_ZSt21__throw_bad_exceptionv>:
10009d18:	deffff04 	addi	sp,sp,-4
10009d1c:	01000104 	movi	r4,4
10009d20:	dfc00015 	stw	ra,0(sp)
10009d24:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009d28:	00c400b4 	movhi	r3,4098
10009d2c:	01840074 	movhi	r6,4097
10009d30:	014400b4 	movhi	r5,4098
10009d34:	18d50b04 	addi	r3,r3,21548
10009d38:	31b17604 	addi	r6,r6,-14888
10009d3c:	2954f004 	addi	r5,r5,21440
10009d40:	1009883a 	mov	r4,r2
10009d44:	10c00015 	stw	r3,0(r2)
10009d48:	00082e40 	call	100082e4 <__cxa_throw>

10009d4c <_ZSt17__throw_bad_allocv>:
10009d4c:	deffff04 	addi	sp,sp,-4
10009d50:	01000104 	movi	r4,4
10009d54:	dfc00015 	stw	ra,0(sp)
10009d58:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009d5c:	00c400b4 	movhi	r3,4098
10009d60:	01840074 	movhi	r6,4097
10009d64:	014400b4 	movhi	r5,4098
10009d68:	18d4a504 	addi	r3,r3,21140
10009d6c:	31a10304 	addi	r6,r6,-31732
10009d70:	2954a004 	addi	r5,r5,21120
10009d74:	1009883a 	mov	r4,r2
10009d78:	10c00015 	stw	r3,0(r2)
10009d7c:	00082e40 	call	100082e4 <__cxa_throw>

10009d80 <_ZSt16__throw_bad_castv>:
10009d80:	deffff04 	addi	sp,sp,-4
10009d84:	01000104 	movi	r4,4
10009d88:	dfc00015 	stw	ra,0(sp)
10009d8c:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009d90:	00c400b4 	movhi	r3,4098
10009d94:	01840074 	movhi	r6,4097
10009d98:	014400b4 	movhi	r5,4098
10009d9c:	18d53304 	addi	r3,r3,21708
10009da0:	31b19d04 	addi	r6,r6,-14732
10009da4:	29552e04 	addi	r5,r5,21688
10009da8:	1009883a 	mov	r4,r2
10009dac:	10c00015 	stw	r3,0(r2)
10009db0:	00082e40 	call	100082e4 <__cxa_throw>

10009db4 <_ZSt18__throw_bad_typeidv>:
10009db4:	deffff04 	addi	sp,sp,-4
10009db8:	01000104 	movi	r4,4
10009dbc:	dfc00015 	stw	ra,0(sp)
10009dc0:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009dc4:	00c400b4 	movhi	r3,4098
10009dc8:	01840074 	movhi	r6,4097
10009dcc:	014400b4 	movhi	r5,4098
10009dd0:	18d54304 	addi	r3,r3,21772
10009dd4:	31b1b204 	addi	r6,r6,-14648
10009dd8:	29553e04 	addi	r5,r5,21752
10009ddc:	1009883a 	mov	r4,r2
10009de0:	10c00015 	stw	r3,0(r2)
10009de4:	00082e40 	call	100082e4 <__cxa_throw>

10009de8 <_ZSt19__throw_logic_errorPKc>:
10009de8:	00c400b4 	movhi	r3,4098
10009dec:	deffef04 	addi	sp,sp,-68
10009df0:	18d11c04 	addi	r3,r3,17520
10009df4:	01440074 	movhi	r5,4097
10009df8:	00840074 	movhi	r2,4097
10009dfc:	29626504 	addi	r5,r5,-30316
10009e00:	10a79d04 	addi	r2,r2,-24972
10009e04:	d9000015 	stw	r4,0(sp)
10009e08:	d8c00915 	stw	r3,36(sp)
10009e0c:	d9000204 	addi	r4,sp,8
10009e10:	d8c00f04 	addi	r3,sp,60
10009e14:	d9400815 	stw	r5,32(sp)
10009e18:	d8c00a15 	stw	r3,40(sp)
10009e1c:	dfc01015 	stw	ra,64(sp)
10009e20:	d8800b15 	stw	r2,44(sp)
10009e24:	df000f15 	stw	fp,60(sp)
10009e28:	dec00c15 	stw	sp,48(sp)
10009e2c:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10009e30:	01000204 	movi	r4,8
10009e34:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009e38:	d9400017 	ldw	r5,0(sp)
10009e3c:	1007883a 	mov	r3,r2
10009e40:	d8800115 	stw	r2,4(sp)
10009e44:	1809883a 	mov	r4,r3
10009e48:	00800044 	movi	r2,1
10009e4c:	d8800315 	stw	r2,12(sp)
10009e50:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
10009e54:	d9000117 	ldw	r4,4(sp)
10009e58:	01840074 	movhi	r6,4097
10009e5c:	014400b4 	movhi	r5,4098
10009e60:	00bfffc4 	movi	r2,-1
10009e64:	31b29204 	addi	r6,r6,-13752
10009e68:	29556d04 	addi	r5,r5,21940
10009e6c:	d8800315 	stw	r2,12(sp)
10009e70:	00082e40 	call	100082e4 <__cxa_throw>
10009e74:	d8800417 	ldw	r2,16(sp)
10009e78:	d9000117 	ldw	r4,4(sp)
10009e7c:	d8800015 	stw	r2,0(sp)
10009e80:	00093540 	call	10009354 <__cxa_free_exception>
10009e84:	d9000017 	ldw	r4,0(sp)
10009e88:	00bfffc4 	movi	r2,-1
10009e8c:	d8800315 	stw	r2,12(sp)
10009e90:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

10009e94 <_ZSt20__throw_domain_errorPKc>:
10009e94:	00c400b4 	movhi	r3,4098
10009e98:	deffef04 	addi	sp,sp,-68
10009e9c:	18d11d84 	addi	r3,r3,17526
10009ea0:	01440074 	movhi	r5,4097
10009ea4:	00840074 	movhi	r2,4097
10009ea8:	29626504 	addi	r5,r5,-30316
10009eac:	10a7c804 	addi	r2,r2,-24800
10009eb0:	d9000015 	stw	r4,0(sp)
10009eb4:	d8c00915 	stw	r3,36(sp)
10009eb8:	d9000204 	addi	r4,sp,8
10009ebc:	d8c00f04 	addi	r3,sp,60
10009ec0:	d9400815 	stw	r5,32(sp)
10009ec4:	d8c00a15 	stw	r3,40(sp)
10009ec8:	dfc01015 	stw	ra,64(sp)
10009ecc:	d8800b15 	stw	r2,44(sp)
10009ed0:	df000f15 	stw	fp,60(sp)
10009ed4:	dec00c15 	stw	sp,48(sp)
10009ed8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10009edc:	01000204 	movi	r4,8
10009ee0:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009ee4:	d9400017 	ldw	r5,0(sp)
10009ee8:	1007883a 	mov	r3,r2
10009eec:	d8800115 	stw	r2,4(sp)
10009ef0:	1809883a 	mov	r4,r3
10009ef4:	00800044 	movi	r2,1
10009ef8:	d8800315 	stw	r2,12(sp)
10009efc:	000aa300 	call	1000aa30 <_ZNSt12domain_errorC1EPKc>
10009f00:	d9000117 	ldw	r4,4(sp)
10009f04:	01840074 	movhi	r6,4097
10009f08:	014400b4 	movhi	r5,4098
10009f0c:	00bfffc4 	movi	r2,-1
10009f10:	31b2b504 	addi	r6,r6,-13612
10009f14:	29557504 	addi	r5,r5,21972
10009f18:	d8800315 	stw	r2,12(sp)
10009f1c:	00082e40 	call	100082e4 <__cxa_throw>
10009f20:	d8800417 	ldw	r2,16(sp)
10009f24:	d9000117 	ldw	r4,4(sp)
10009f28:	d8800015 	stw	r2,0(sp)
10009f2c:	00093540 	call	10009354 <__cxa_free_exception>
10009f30:	d9000017 	ldw	r4,0(sp)
10009f34:	00bfffc4 	movi	r2,-1
10009f38:	d8800315 	stw	r2,12(sp)
10009f3c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

10009f40 <_ZSt24__throw_invalid_argumentPKc>:
10009f40:	00c400b4 	movhi	r3,4098
10009f44:	deffef04 	addi	sp,sp,-68
10009f48:	18d11f04 	addi	r3,r3,17532
10009f4c:	01440074 	movhi	r5,4097
10009f50:	00840074 	movhi	r2,4097
10009f54:	29626504 	addi	r5,r5,-30316
10009f58:	10a7f304 	addi	r2,r2,-24628
10009f5c:	d9000015 	stw	r4,0(sp)
10009f60:	d8c00915 	stw	r3,36(sp)
10009f64:	d9000204 	addi	r4,sp,8
10009f68:	d8c00f04 	addi	r3,sp,60
10009f6c:	d9400815 	stw	r5,32(sp)
10009f70:	d8c00a15 	stw	r3,40(sp)
10009f74:	dfc01015 	stw	ra,64(sp)
10009f78:	d8800b15 	stw	r2,44(sp)
10009f7c:	df000f15 	stw	fp,60(sp)
10009f80:	dec00c15 	stw	sp,48(sp)
10009f84:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10009f88:	01000204 	movi	r4,8
10009f8c:	00092fc0 	call	100092fc <__cxa_allocate_exception>
10009f90:	d9400017 	ldw	r5,0(sp)
10009f94:	1007883a 	mov	r3,r2
10009f98:	d8800115 	stw	r2,4(sp)
10009f9c:	1809883a 	mov	r4,r3
10009fa0:	00800044 	movi	r2,1
10009fa4:	d8800315 	stw	r2,12(sp)
10009fa8:	000aa600 	call	1000aa60 <_ZNSt16invalid_argumentC1EPKc>
10009fac:	d9000117 	ldw	r4,4(sp)
10009fb0:	01840074 	movhi	r6,4097
10009fb4:	014400b4 	movhi	r5,4098
10009fb8:	00bfffc4 	movi	r2,-1
10009fbc:	31b2c604 	addi	r6,r6,-13544
10009fc0:	29557e04 	addi	r5,r5,22008
10009fc4:	d8800315 	stw	r2,12(sp)
10009fc8:	00082e40 	call	100082e4 <__cxa_throw>
10009fcc:	d8800417 	ldw	r2,16(sp)
10009fd0:	d9000117 	ldw	r4,4(sp)
10009fd4:	d8800015 	stw	r2,0(sp)
10009fd8:	00093540 	call	10009354 <__cxa_free_exception>
10009fdc:	d9000017 	ldw	r4,0(sp)
10009fe0:	00bfffc4 	movi	r2,-1
10009fe4:	d8800315 	stw	r2,12(sp)
10009fe8:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

10009fec <_ZSt20__throw_length_errorPKc>:
10009fec:	00c400b4 	movhi	r3,4098
10009ff0:	deffef04 	addi	sp,sp,-68
10009ff4:	18d12084 	addi	r3,r3,17538
10009ff8:	01440074 	movhi	r5,4097
10009ffc:	00840074 	movhi	r2,4097
1000a000:	29626504 	addi	r5,r5,-30316
1000a004:	10a81e04 	addi	r2,r2,-24456
1000a008:	d9000015 	stw	r4,0(sp)
1000a00c:	d8c00915 	stw	r3,36(sp)
1000a010:	d9000204 	addi	r4,sp,8
1000a014:	d8c00f04 	addi	r3,sp,60
1000a018:	d9400815 	stw	r5,32(sp)
1000a01c:	d8c00a15 	stw	r3,40(sp)
1000a020:	dfc01015 	stw	ra,64(sp)
1000a024:	d8800b15 	stw	r2,44(sp)
1000a028:	df000f15 	stw	fp,60(sp)
1000a02c:	dec00c15 	stw	sp,48(sp)
1000a030:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a034:	01000204 	movi	r4,8
1000a038:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a03c:	d9400017 	ldw	r5,0(sp)
1000a040:	1007883a 	mov	r3,r2
1000a044:	d8800115 	stw	r2,4(sp)
1000a048:	1809883a 	mov	r4,r3
1000a04c:	00800044 	movi	r2,1
1000a050:	d8800315 	stw	r2,12(sp)
1000a054:	000aa900 	call	1000aa90 <_ZNSt12length_errorC1EPKc>
1000a058:	d9000117 	ldw	r4,4(sp)
1000a05c:	01840074 	movhi	r6,4097
1000a060:	014400b4 	movhi	r5,4098
1000a064:	00bfffc4 	movi	r2,-1
1000a068:	31b2d704 	addi	r6,r6,-13476
1000a06c:	29558604 	addi	r5,r5,22040
1000a070:	d8800315 	stw	r2,12(sp)
1000a074:	00082e40 	call	100082e4 <__cxa_throw>
1000a078:	d8800417 	ldw	r2,16(sp)
1000a07c:	d9000117 	ldw	r4,4(sp)
1000a080:	d8800015 	stw	r2,0(sp)
1000a084:	00093540 	call	10009354 <__cxa_free_exception>
1000a088:	d9000017 	ldw	r4,0(sp)
1000a08c:	00bfffc4 	movi	r2,-1
1000a090:	d8800315 	stw	r2,12(sp)
1000a094:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a098 <_ZSt20__throw_out_of_rangePKc>:
1000a098:	00c400b4 	movhi	r3,4098
1000a09c:	deffef04 	addi	sp,sp,-68
1000a0a0:	18d12204 	addi	r3,r3,17544
1000a0a4:	01440074 	movhi	r5,4097
1000a0a8:	00840074 	movhi	r2,4097
1000a0ac:	29626504 	addi	r5,r5,-30316
1000a0b0:	10a84904 	addi	r2,r2,-24284
1000a0b4:	d9000015 	stw	r4,0(sp)
1000a0b8:	d8c00915 	stw	r3,36(sp)
1000a0bc:	d9000204 	addi	r4,sp,8
1000a0c0:	d8c00f04 	addi	r3,sp,60
1000a0c4:	d9400815 	stw	r5,32(sp)
1000a0c8:	d8c00a15 	stw	r3,40(sp)
1000a0cc:	dfc01015 	stw	ra,64(sp)
1000a0d0:	d8800b15 	stw	r2,44(sp)
1000a0d4:	df000f15 	stw	fp,60(sp)
1000a0d8:	dec00c15 	stw	sp,48(sp)
1000a0dc:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a0e0:	01000204 	movi	r4,8
1000a0e4:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a0e8:	d9400017 	ldw	r5,0(sp)
1000a0ec:	1007883a 	mov	r3,r2
1000a0f0:	d8800115 	stw	r2,4(sp)
1000a0f4:	1809883a 	mov	r4,r3
1000a0f8:	00800044 	movi	r2,1
1000a0fc:	d8800315 	stw	r2,12(sp)
1000a100:	000aac00 	call	1000aac0 <_ZNSt12out_of_rangeC1EPKc>
1000a104:	d9000117 	ldw	r4,4(sp)
1000a108:	01840074 	movhi	r6,4097
1000a10c:	014400b4 	movhi	r5,4098
1000a110:	00bfffc4 	movi	r2,-1
1000a114:	31b2e804 	addi	r6,r6,-13408
1000a118:	29558e04 	addi	r5,r5,22072
1000a11c:	d8800315 	stw	r2,12(sp)
1000a120:	00082e40 	call	100082e4 <__cxa_throw>
1000a124:	d8800417 	ldw	r2,16(sp)
1000a128:	d9000117 	ldw	r4,4(sp)
1000a12c:	d8800015 	stw	r2,0(sp)
1000a130:	00093540 	call	10009354 <__cxa_free_exception>
1000a134:	d9000017 	ldw	r4,0(sp)
1000a138:	00bfffc4 	movi	r2,-1
1000a13c:	d8800315 	stw	r2,12(sp)
1000a140:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>:
1000a144:	deffec04 	addi	sp,sp,-80
1000a148:	df000f15 	stw	fp,60(sp)
1000a14c:	dfc01015 	stw	ra,64(sp)
1000a150:	df000f04 	addi	fp,sp,60
1000a154:	e13ff215 	stw	r4,-56(fp)
1000a158:	e1400215 	stw	r5,8(fp)
1000a15c:	e1800315 	stw	r6,12(fp)
1000a160:	e1c00415 	stw	r7,16(fp)
1000a164:	01040074 	movhi	r4,4097
1000a168:	00c400b4 	movhi	r3,4098
1000a16c:	00840074 	movhi	r2,4097
1000a170:	18d12384 	addi	r3,r3,17550
1000a174:	10a88604 	addi	r2,r2,-24040
1000a178:	21226504 	addi	r4,r4,-30316
1000a17c:	e0fffa15 	stw	r3,-24(fp)
1000a180:	e6fffd15 	stw	sp,-12(fp)
1000a184:	e13ff915 	stw	r4,-28(fp)
1000a188:	e0bffc15 	stw	r2,-16(fp)
1000a18c:	e13ff304 	addi	r4,fp,-52
1000a190:	e73ffb15 	stw	fp,-20(fp)
1000a194:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a198:	e13ff217 	ldw	r4,-56(fp)
1000a19c:	00163ac0 	call	100163ac <strlen>
1000a1a0:	10c080c4 	addi	r3,r2,515
1000a1a4:	1806d0ba 	srli	r3,r3,2
1000a1a8:	11408004 	addi	r5,r2,512
1000a1ac:	e1bff217 	ldw	r6,-56(fp)
1000a1b0:	180490ba 	slli	r2,r3,2
1000a1b4:	e1c00204 	addi	r7,fp,8
1000a1b8:	d8b7c83a 	sub	sp,sp,r2
1000a1bc:	d805883a 	mov	r2,sp
1000a1c0:	1009883a 	mov	r4,r2
1000a1c4:	e0bff215 	stw	r2,-56(fp)
1000a1c8:	00bfffc4 	movi	r2,-1
1000a1cc:	e6fffd15 	stw	sp,-12(fp)
1000a1d0:	e0bff415 	stw	r2,-48(fp)
1000a1d4:	000a6480 	call	1000a648 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>
1000a1d8:	01000204 	movi	r4,8
1000a1dc:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a1e0:	e17ff217 	ldw	r5,-56(fp)
1000a1e4:	1009883a 	mov	r4,r2
1000a1e8:	e0bff115 	stw	r2,-60(fp)
1000a1ec:	00800044 	movi	r2,1
1000a1f0:	e0bff415 	stw	r2,-48(fp)
1000a1f4:	000aac00 	call	1000aac0 <_ZNSt12out_of_rangeC1EPKc>
1000a1f8:	e13ff117 	ldw	r4,-60(fp)
1000a1fc:	01840074 	movhi	r6,4097
1000a200:	014400b4 	movhi	r5,4098
1000a204:	00bfffc4 	movi	r2,-1
1000a208:	e0bff415 	stw	r2,-48(fp)
1000a20c:	31b2e804 	addi	r6,r6,-13408
1000a210:	29558e04 	addi	r5,r5,22072
1000a214:	00082e40 	call	100082e4 <__cxa_throw>
1000a218:	e0bff517 	ldw	r2,-44(fp)
1000a21c:	e13ff117 	ldw	r4,-60(fp)
1000a220:	e0bff215 	stw	r2,-56(fp)
1000a224:	00093540 	call	10009354 <__cxa_free_exception>
1000a228:	e13ff217 	ldw	r4,-56(fp)
1000a22c:	00bfffc4 	movi	r2,-1
1000a230:	e0bff415 	stw	r2,-48(fp)
1000a234:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a238 <_ZSt21__throw_runtime_errorPKc>:
1000a238:	00c400b4 	movhi	r3,4098
1000a23c:	deffef04 	addi	sp,sp,-68
1000a240:	18d12504 	addi	r3,r3,17556
1000a244:	01440074 	movhi	r5,4097
1000a248:	00840074 	movhi	r2,4097
1000a24c:	29626504 	addi	r5,r5,-30316
1000a250:	10a8b104 	addi	r2,r2,-23868
1000a254:	d9000015 	stw	r4,0(sp)
1000a258:	d8c00915 	stw	r3,36(sp)
1000a25c:	d9000204 	addi	r4,sp,8
1000a260:	d8c00f04 	addi	r3,sp,60
1000a264:	d9400815 	stw	r5,32(sp)
1000a268:	d8c00a15 	stw	r3,40(sp)
1000a26c:	dfc01015 	stw	ra,64(sp)
1000a270:	d8800b15 	stw	r2,44(sp)
1000a274:	df000f15 	stw	fp,60(sp)
1000a278:	dec00c15 	stw	sp,48(sp)
1000a27c:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a280:	01000204 	movi	r4,8
1000a284:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a288:	d9400017 	ldw	r5,0(sp)
1000a28c:	1007883a 	mov	r3,r2
1000a290:	d8800115 	stw	r2,4(sp)
1000a294:	1809883a 	mov	r4,r3
1000a298:	00800044 	movi	r2,1
1000a29c:	d8800315 	stw	r2,12(sp)
1000a2a0:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000a2a4:	d9000117 	ldw	r4,4(sp)
1000a2a8:	01840074 	movhi	r6,4097
1000a2ac:	014400b4 	movhi	r5,4098
1000a2b0:	00bfffc4 	movi	r2,-1
1000a2b4:	31b2f904 	addi	r6,r6,-13340
1000a2b8:	29559604 	addi	r5,r5,22104
1000a2bc:	d8800315 	stw	r2,12(sp)
1000a2c0:	00082e40 	call	100082e4 <__cxa_throw>
1000a2c4:	d8800417 	ldw	r2,16(sp)
1000a2c8:	d9000117 	ldw	r4,4(sp)
1000a2cc:	d8800015 	stw	r2,0(sp)
1000a2d0:	00093540 	call	10009354 <__cxa_free_exception>
1000a2d4:	d9000017 	ldw	r4,0(sp)
1000a2d8:	00bfffc4 	movi	r2,-1
1000a2dc:	d8800315 	stw	r2,12(sp)
1000a2e0:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a2e4 <_ZSt19__throw_range_errorPKc>:
1000a2e4:	00c400b4 	movhi	r3,4098
1000a2e8:	deffef04 	addi	sp,sp,-68
1000a2ec:	18d12684 	addi	r3,r3,17562
1000a2f0:	01440074 	movhi	r5,4097
1000a2f4:	00840074 	movhi	r2,4097
1000a2f8:	29626504 	addi	r5,r5,-30316
1000a2fc:	10a8dc04 	addi	r2,r2,-23696
1000a300:	d9000015 	stw	r4,0(sp)
1000a304:	d8c00915 	stw	r3,36(sp)
1000a308:	d9000204 	addi	r4,sp,8
1000a30c:	d8c00f04 	addi	r3,sp,60
1000a310:	d9400815 	stw	r5,32(sp)
1000a314:	d8c00a15 	stw	r3,40(sp)
1000a318:	dfc01015 	stw	ra,64(sp)
1000a31c:	d8800b15 	stw	r2,44(sp)
1000a320:	df000f15 	stw	fp,60(sp)
1000a324:	dec00c15 	stw	sp,48(sp)
1000a328:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a32c:	01000204 	movi	r4,8
1000a330:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a334:	d9400017 	ldw	r5,0(sp)
1000a338:	1007883a 	mov	r3,r2
1000a33c:	d8800115 	stw	r2,4(sp)
1000a340:	1809883a 	mov	r4,r3
1000a344:	00800044 	movi	r2,1
1000a348:	d8800315 	stw	r2,12(sp)
1000a34c:	000ab9c0 	call	1000ab9c <_ZNSt11range_errorC1EPKc>
1000a350:	d9000117 	ldw	r4,4(sp)
1000a354:	01840074 	movhi	r6,4097
1000a358:	014400b4 	movhi	r5,4098
1000a35c:	00bfffc4 	movi	r2,-1
1000a360:	31b31c04 	addi	r6,r6,-13200
1000a364:	29559d04 	addi	r5,r5,22132
1000a368:	d8800315 	stw	r2,12(sp)
1000a36c:	00082e40 	call	100082e4 <__cxa_throw>
1000a370:	d8800417 	ldw	r2,16(sp)
1000a374:	d9000117 	ldw	r4,4(sp)
1000a378:	d8800015 	stw	r2,0(sp)
1000a37c:	00093540 	call	10009354 <__cxa_free_exception>
1000a380:	d9000017 	ldw	r4,0(sp)
1000a384:	00bfffc4 	movi	r2,-1
1000a388:	d8800315 	stw	r2,12(sp)
1000a38c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a390 <_ZSt22__throw_overflow_errorPKc>:
1000a390:	00c400b4 	movhi	r3,4098
1000a394:	deffef04 	addi	sp,sp,-68
1000a398:	18d12804 	addi	r3,r3,17568
1000a39c:	01440074 	movhi	r5,4097
1000a3a0:	00840074 	movhi	r2,4097
1000a3a4:	29626504 	addi	r5,r5,-30316
1000a3a8:	10a90704 	addi	r2,r2,-23524
1000a3ac:	d9000015 	stw	r4,0(sp)
1000a3b0:	d8c00915 	stw	r3,36(sp)
1000a3b4:	d9000204 	addi	r4,sp,8
1000a3b8:	d8c00f04 	addi	r3,sp,60
1000a3bc:	d9400815 	stw	r5,32(sp)
1000a3c0:	d8c00a15 	stw	r3,40(sp)
1000a3c4:	dfc01015 	stw	ra,64(sp)
1000a3c8:	d8800b15 	stw	r2,44(sp)
1000a3cc:	df000f15 	stw	fp,60(sp)
1000a3d0:	dec00c15 	stw	sp,48(sp)
1000a3d4:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a3d8:	01000204 	movi	r4,8
1000a3dc:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a3e0:	d9400017 	ldw	r5,0(sp)
1000a3e4:	1007883a 	mov	r3,r2
1000a3e8:	d8800115 	stw	r2,4(sp)
1000a3ec:	1809883a 	mov	r4,r3
1000a3f0:	00800044 	movi	r2,1
1000a3f4:	d8800315 	stw	r2,12(sp)
1000a3f8:	000abcc0 	call	1000abcc <_ZNSt14overflow_errorC1EPKc>
1000a3fc:	d9000117 	ldw	r4,4(sp)
1000a400:	01840074 	movhi	r6,4097
1000a404:	014400b4 	movhi	r5,4098
1000a408:	00bfffc4 	movi	r2,-1
1000a40c:	31b32d04 	addi	r6,r6,-13132
1000a410:	2955a504 	addi	r5,r5,22164
1000a414:	d8800315 	stw	r2,12(sp)
1000a418:	00082e40 	call	100082e4 <__cxa_throw>
1000a41c:	d8800417 	ldw	r2,16(sp)
1000a420:	d9000117 	ldw	r4,4(sp)
1000a424:	d8800015 	stw	r2,0(sp)
1000a428:	00093540 	call	10009354 <__cxa_free_exception>
1000a42c:	d9000017 	ldw	r4,0(sp)
1000a430:	00bfffc4 	movi	r2,-1
1000a434:	d8800315 	stw	r2,12(sp)
1000a438:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a43c <_ZSt23__throw_underflow_errorPKc>:
1000a43c:	00c400b4 	movhi	r3,4098
1000a440:	deffef04 	addi	sp,sp,-68
1000a444:	18d12984 	addi	r3,r3,17574
1000a448:	01440074 	movhi	r5,4097
1000a44c:	00840074 	movhi	r2,4097
1000a450:	29626504 	addi	r5,r5,-30316
1000a454:	10a93204 	addi	r2,r2,-23352
1000a458:	d9000015 	stw	r4,0(sp)
1000a45c:	d8c00915 	stw	r3,36(sp)
1000a460:	d9000204 	addi	r4,sp,8
1000a464:	d8c00f04 	addi	r3,sp,60
1000a468:	d9400815 	stw	r5,32(sp)
1000a46c:	d8c00a15 	stw	r3,40(sp)
1000a470:	dfc01015 	stw	ra,64(sp)
1000a474:	d8800b15 	stw	r2,44(sp)
1000a478:	df000f15 	stw	fp,60(sp)
1000a47c:	dec00c15 	stw	sp,48(sp)
1000a480:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a484:	01000204 	movi	r4,8
1000a488:	00092fc0 	call	100092fc <__cxa_allocate_exception>
1000a48c:	d9400017 	ldw	r5,0(sp)
1000a490:	1007883a 	mov	r3,r2
1000a494:	d8800115 	stw	r2,4(sp)
1000a498:	1809883a 	mov	r4,r3
1000a49c:	00800044 	movi	r2,1
1000a4a0:	d8800315 	stw	r2,12(sp)
1000a4a4:	000abfc0 	call	1000abfc <_ZNSt15underflow_errorC1EPKc>
1000a4a8:	d9000117 	ldw	r4,4(sp)
1000a4ac:	01840074 	movhi	r6,4097
1000a4b0:	014400b4 	movhi	r5,4098
1000a4b4:	00bfffc4 	movi	r2,-1
1000a4b8:	31b33e04 	addi	r6,r6,-13064
1000a4bc:	2955ad04 	addi	r5,r5,22196
1000a4c0:	d8800315 	stw	r2,12(sp)
1000a4c4:	00082e40 	call	100082e4 <__cxa_throw>
1000a4c8:	d8800417 	ldw	r2,16(sp)
1000a4cc:	d9000117 	ldw	r4,4(sp)
1000a4d0:	d8800015 	stw	r2,0(sp)
1000a4d4:	00093540 	call	10009354 <__cxa_free_exception>
1000a4d8:	d9000017 	ldw	r4,0(sp)
1000a4dc:	00bfffc4 	movi	r2,-1
1000a4e0:	d8800315 	stw	r2,12(sp)
1000a4e4:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000a4e8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
1000a4e8:	deffe004 	addi	sp,sp,-128
1000a4ec:	df001e15 	stw	fp,120(sp)
1000a4f0:	dc401c15 	stw	r17,112(sp)
1000a4f4:	df001e04 	addi	fp,sp,120
1000a4f8:	2823883a 	mov	r17,r5
1000a4fc:	014400b4 	movhi	r5,4098
1000a500:	8923c83a 	sub	r17,r17,r4
1000a504:	dc801d15 	stw	r18,116(sp)
1000a508:	01801a44 	movi	r6,105
1000a50c:	2025883a 	mov	r18,r4
1000a510:	2954a804 	addi	r5,r5,21152
1000a514:	e13fe2c4 	addi	r4,fp,-117
1000a518:	dfc01f15 	stw	ra,124(sp)
1000a51c:	dc001b15 	stw	r16,108(sp)
1000a520:	00156f00 	call	100156f0 <memcpy>
1000a524:	88801b04 	addi	r2,r17,108
1000a528:	1004d0ba 	srli	r2,r2,2
1000a52c:	01801a04 	movi	r6,104
1000a530:	e17fe2c4 	addi	r5,fp,-117
1000a534:	100490ba 	slli	r2,r2,2
1000a538:	d8b7c83a 	sub	sp,sp,r2
1000a53c:	d821883a 	mov	r16,sp
1000a540:	8009883a 	mov	r4,r16
1000a544:	00156f00 	call	100156f0 <memcpy>
1000a548:	81001a04 	addi	r4,r16,104
1000a54c:	880d883a 	mov	r6,r17
1000a550:	900b883a 	mov	r5,r18
1000a554:	00156f00 	call	100156f0 <memcpy>
1000a558:	8009883a 	mov	r4,r16
1000a55c:	8461883a 	add	r16,r16,r17
1000a560:	80001a05 	stb	zero,104(r16)
1000a564:	0009de80 	call	10009de8 <_ZSt19__throw_logic_errorPKc>

1000a568 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
1000a568:	defff704 	addi	sp,sp,-36
1000a56c:	df000715 	stw	fp,28(sp)
1000a570:	dd800615 	stw	r22,24(sp)
1000a574:	dd400515 	stw	r21,20(sp)
1000a578:	dd000415 	stw	r20,16(sp)
1000a57c:	dcc00315 	stw	r19,12(sp)
1000a580:	dc800215 	stw	r18,8(sp)
1000a584:	dc400115 	stw	r17,4(sp)
1000a588:	dc000015 	stw	r16,0(sp)
1000a58c:	dfc00815 	stw	ra,32(sp)
1000a590:	df000704 	addi	fp,sp,28
1000a594:	defffd04 	addi	sp,sp,-12
1000a598:	d829883a 	mov	r20,sp
1000a59c:	a4c00304 	addi	r19,r20,12
1000a5a0:	048400b4 	movhi	r18,4098
1000a5a4:	202d883a 	mov	r22,r4
1000a5a8:	282b883a 	mov	r21,r5
1000a5ac:	3021883a 	mov	r16,r6
1000a5b0:	9823883a 	mov	r17,r19
1000a5b4:	9494c304 	addi	r18,r18,21260
1000a5b8:	00000106 	br	1000a5c0 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x58>
1000a5bc:	1021883a 	mov	r16,r2
1000a5c0:	8009883a 	mov	r4,r16
1000a5c4:	01400284 	movi	r5,10
1000a5c8:	00140080 	call	10014008 <__umodsi3>
1000a5cc:	9085883a 	add	r2,r18,r2
1000a5d0:	10800003 	ldbu	r2,0(r2)
1000a5d4:	8c7fffc4 	addi	r17,r17,-1
1000a5d8:	8009883a 	mov	r4,r16
1000a5dc:	01400284 	movi	r5,10
1000a5e0:	88800005 	stb	r2,0(r17)
1000a5e4:	840002a8 	cmpgeui	r16,r16,10
1000a5e8:	0013fa40 	call	10013fa4 <__udivsi3>
1000a5ec:	803ff31e 	bne	r16,zero,1000a5bc <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
1000a5f0:	9c63c83a 	sub	r17,r19,r17
1000a5f4:	ac401236 	bltu	r21,r17,1000a640 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xd8>
1000a5f8:	a44bc83a 	sub	r5,r20,r17
1000a5fc:	880d883a 	mov	r6,r17
1000a600:	29400304 	addi	r5,r5,12
1000a604:	b009883a 	mov	r4,r22
1000a608:	00156f00 	call	100156f0 <memcpy>
1000a60c:	8805883a 	mov	r2,r17
1000a610:	e6fff904 	addi	sp,fp,-28
1000a614:	dfc00817 	ldw	ra,32(sp)
1000a618:	df000717 	ldw	fp,28(sp)
1000a61c:	dd800617 	ldw	r22,24(sp)
1000a620:	dd400517 	ldw	r21,20(sp)
1000a624:	dd000417 	ldw	r20,16(sp)
1000a628:	dcc00317 	ldw	r19,12(sp)
1000a62c:	dc800217 	ldw	r18,8(sp)
1000a630:	dc400117 	ldw	r17,4(sp)
1000a634:	dc000017 	ldw	r16,0(sp)
1000a638:	dec00904 	addi	sp,sp,36
1000a63c:	f800283a 	ret
1000a640:	047fffc4 	movi	r17,-1
1000a644:	003ff106 	br	1000a60c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xa4>

1000a648 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>:
1000a648:	defffa04 	addi	sp,sp,-24
1000a64c:	297fffc4 	addi	r5,r5,-1
1000a650:	dcc00315 	stw	r19,12(sp)
1000a654:	dc800215 	stw	r18,8(sp)
1000a658:	dc400115 	stw	r17,4(sp)
1000a65c:	dc000015 	stw	r16,0(sp)
1000a660:	dfc00515 	stw	ra,20(sp)
1000a664:	dd000415 	stw	r20,16(sp)
1000a668:	2027883a 	mov	r19,r4
1000a66c:	3023883a 	mov	r17,r6
1000a670:	2165883a 	add	r18,r4,r5
1000a674:	2021883a 	mov	r16,r4
1000a678:	00000306 	br	1000a688 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a67c:	80c00005 	stb	r3,0(r16)
1000a680:	8c400044 	addi	r17,r17,1
1000a684:	84000044 	addi	r16,r16,1
1000a688:	88c00003 	ldbu	r3,0(r17)
1000a68c:	18803fcc 	andi	r2,r3,255
1000a690:	1080201c 	xori	r2,r2,128
1000a694:	10bfe004 	addi	r2,r2,-128
1000a698:	10003226 	beq	r2,zero,1000a764 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x11c>
1000a69c:	84803b2e 	bgeu	r16,r18,1000a78c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a6a0:	10800958 	cmpnei	r2,r2,37
1000a6a4:	103ff51e 	bne	r2,zero,1000a67c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a6a8:	89000043 	ldbu	r4,1(r17)
1000a6ac:	20803fcc 	andi	r2,r4,255
1000a6b0:	1080201c 	xori	r2,r2,128
1000a6b4:	10bfe004 	addi	r2,r2,-128
1000a6b8:	11401ce0 	cmpeqi	r5,r2,115
1000a6bc:	2800141e 	bne	r5,zero,1000a710 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xc8>
1000a6c0:	11401ea0 	cmpeqi	r5,r2,122
1000a6c4:	2800051e 	bne	r5,zero,1000a6dc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x94>
1000a6c8:	10800958 	cmpnei	r2,r2,37
1000a6cc:	103feb1e 	bne	r2,zero,1000a67c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a6d0:	8c400044 	addi	r17,r17,1
1000a6d4:	2007883a 	mov	r3,r4
1000a6d8:	003fe806 	br	1000a67c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a6dc:	88800087 	ldb	r2,2(r17)
1000a6e0:	10801d58 	cmpnei	r2,r2,117
1000a6e4:	103fe51e 	bne	r2,zero,1000a67c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a6e8:	39800017 	ldw	r6,0(r7)
1000a6ec:	940bc83a 	sub	r5,r18,r16
1000a6f0:	8009883a 	mov	r4,r16
1000a6f4:	3d000104 	addi	r20,r7,4
1000a6f8:	000a5680 	call	1000a568 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
1000a6fc:	0080230e 	bge	zero,r2,1000a78c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a700:	80a1883a 	add	r16,r16,r2
1000a704:	8c4000c4 	addi	r17,r17,3
1000a708:	a00f883a 	mov	r7,r20
1000a70c:	003fde06 	br	1000a688 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a710:	38800017 	ldw	r2,0(r7)
1000a714:	39c00104 	addi	r7,r7,4
1000a718:	10c00003 	ldbu	r3,0(r2)
1000a71c:	19003fcc 	andi	r4,r3,255
1000a720:	2100201c 	xori	r4,r4,128
1000a724:	213fe004 	addi	r4,r4,-128
1000a728:	20000c26 	beq	r4,zero,1000a75c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x114>
1000a72c:	940bc83a 	sub	r5,r18,r16
1000a730:	114b883a 	add	r5,r2,r5
1000a734:	00000106 	br	1000a73c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf4>
1000a738:	28801426 	beq	r5,r2,1000a78c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a73c:	84000044 	addi	r16,r16,1
1000a740:	10800044 	addi	r2,r2,1
1000a744:	80ffffc5 	stb	r3,-1(r16)
1000a748:	10c00003 	ldbu	r3,0(r2)
1000a74c:	19003fcc 	andi	r4,r3,255
1000a750:	2100201c 	xori	r4,r4,128
1000a754:	213fe004 	addi	r4,r4,-128
1000a758:	203ff71e 	bne	r4,zero,1000a738 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf0>
1000a75c:	8c400084 	addi	r17,r17,2
1000a760:	003fc906 	br	1000a688 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a764:	84c5c83a 	sub	r2,r16,r19
1000a768:	80000005 	stb	zero,0(r16)
1000a76c:	dfc00517 	ldw	ra,20(sp)
1000a770:	dd000417 	ldw	r20,16(sp)
1000a774:	dcc00317 	ldw	r19,12(sp)
1000a778:	dc800217 	ldw	r18,8(sp)
1000a77c:	dc400117 	ldw	r17,4(sp)
1000a780:	dc000017 	ldw	r16,0(sp)
1000a784:	dec00604 	addi	sp,sp,24
1000a788:	f800283a 	ret
1000a78c:	800b883a 	mov	r5,r16
1000a790:	9809883a 	mov	r4,r19
1000a794:	000a4e80 	call	1000a4e8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>

1000a798 <_Z27_txnal_cow_string_D1_commitPv>:
1000a798:	008400f4 	movhi	r2,4099
1000a79c:	10aa7e04 	addi	r2,r2,-22024
1000a7a0:	2080011e 	bne	r4,r2,1000a7a8 <_Z27_txnal_cow_string_D1_commitPv+0x10>
1000a7a4:	f800283a 	ret
1000a7a8:	20800217 	ldw	r2,8(r4)
1000a7ac:	117fffc4 	addi	r5,r2,-1
1000a7b0:	21400215 	stw	r5,8(r4)
1000a7b4:	00bffb16 	blt	zero,r2,1000a7a4 <_Z27_txnal_cow_string_D1_commitPv+0xc>
1000a7b8:	defffe04 	addi	sp,sp,-8
1000a7bc:	d94000c4 	addi	r5,sp,3
1000a7c0:	dfc00115 	stw	ra,4(sp)
1000a7c4:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000a7c8:	dfc00117 	ldw	ra,4(sp)
1000a7cc:	dec00204 	addi	sp,sp,8
1000a7d0:	f800283a 	ret

1000a7d4 <_ZNSt11logic_errorC1ERKS_>:
1000a7d4:	defff004 	addi	sp,sp,-64
1000a7d8:	00c40074 	movhi	r3,4097
1000a7dc:	008400b4 	movhi	r2,4098
1000a7e0:	dc000d15 	stw	r16,52(sp)
1000a7e4:	18e26504 	addi	r3,r3,-30316
1000a7e8:	2021883a 	mov	r16,r4
1000a7ec:	10912b04 	addi	r2,r2,17580
1000a7f0:	d809883a 	mov	r4,sp
1000a7f4:	dfc00f15 	stw	ra,60(sp)
1000a7f8:	dc400e15 	stw	r17,56(sp)
1000a7fc:	d8c00615 	stw	r3,24(sp)
1000a800:	2823883a 	mov	r17,r5
1000a804:	d8800715 	stw	r2,28(sp)
1000a808:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a80c:	008400b4 	movhi	r2,4098
1000a810:	1095b204 	addi	r2,r2,22216
1000a814:	80800015 	stw	r2,0(r16)
1000a818:	89400104 	addi	r5,r17,4
1000a81c:	81000104 	addi	r4,r16,4
1000a820:	d8000115 	stw	zero,4(sp)
1000a824:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000a828:	d809883a 	mov	r4,sp
1000a82c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000a830:	dfc00f17 	ldw	ra,60(sp)
1000a834:	dc400e17 	ldw	r17,56(sp)
1000a838:	dc000d17 	ldw	r16,52(sp)
1000a83c:	dec01004 	addi	sp,sp,64
1000a840:	f800283a 	ret

1000a844 <_ZNSt11logic_erroraSERKS_>:
1000a844:	defff004 	addi	sp,sp,-64
1000a848:	00c40074 	movhi	r3,4097
1000a84c:	008400b4 	movhi	r2,4098
1000a850:	dc000d15 	stw	r16,52(sp)
1000a854:	18e26504 	addi	r3,r3,-30316
1000a858:	2021883a 	mov	r16,r4
1000a85c:	10912c04 	addi	r2,r2,17584
1000a860:	d809883a 	mov	r4,sp
1000a864:	dfc00f15 	stw	ra,60(sp)
1000a868:	dc400e15 	stw	r17,56(sp)
1000a86c:	d8c00615 	stw	r3,24(sp)
1000a870:	2823883a 	mov	r17,r5
1000a874:	d8800715 	stw	r2,28(sp)
1000a878:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a87c:	89400104 	addi	r5,r17,4
1000a880:	81000104 	addi	r4,r16,4
1000a884:	d8000115 	stw	zero,4(sp)
1000a888:	000fa500 	call	1000fa50 <_ZNSs6assignERKSs>
1000a88c:	d809883a 	mov	r4,sp
1000a890:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000a894:	8005883a 	mov	r2,r16
1000a898:	dfc00f17 	ldw	ra,60(sp)
1000a89c:	dc400e17 	ldw	r17,56(sp)
1000a8a0:	dc000d17 	ldw	r16,52(sp)
1000a8a4:	dec01004 	addi	sp,sp,64
1000a8a8:	f800283a 	ret

1000a8ac <_ZNSt13runtime_errorC1ERKS_>:
1000a8ac:	defff004 	addi	sp,sp,-64
1000a8b0:	00c40074 	movhi	r3,4097
1000a8b4:	008400b4 	movhi	r2,4098
1000a8b8:	dc000d15 	stw	r16,52(sp)
1000a8bc:	18e26504 	addi	r3,r3,-30316
1000a8c0:	2021883a 	mov	r16,r4
1000a8c4:	10912d04 	addi	r2,r2,17588
1000a8c8:	d809883a 	mov	r4,sp
1000a8cc:	dfc00f15 	stw	ra,60(sp)
1000a8d0:	dc400e15 	stw	r17,56(sp)
1000a8d4:	d8c00615 	stw	r3,24(sp)
1000a8d8:	2823883a 	mov	r17,r5
1000a8dc:	d8800715 	stw	r2,28(sp)
1000a8e0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a8e4:	008400b4 	movhi	r2,4098
1000a8e8:	1095cb04 	addi	r2,r2,22316
1000a8ec:	80800015 	stw	r2,0(r16)
1000a8f0:	89400104 	addi	r5,r17,4
1000a8f4:	81000104 	addi	r4,r16,4
1000a8f8:	d8000115 	stw	zero,4(sp)
1000a8fc:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000a900:	d809883a 	mov	r4,sp
1000a904:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000a908:	dfc00f17 	ldw	ra,60(sp)
1000a90c:	dc400e17 	ldw	r17,56(sp)
1000a910:	dc000d17 	ldw	r16,52(sp)
1000a914:	dec01004 	addi	sp,sp,64
1000a918:	f800283a 	ret

1000a91c <_ZNSt13runtime_erroraSERKS_>:
1000a91c:	defff004 	addi	sp,sp,-64
1000a920:	00c40074 	movhi	r3,4097
1000a924:	008400b4 	movhi	r2,4098
1000a928:	dc000d15 	stw	r16,52(sp)
1000a92c:	18e26504 	addi	r3,r3,-30316
1000a930:	2021883a 	mov	r16,r4
1000a934:	10912e04 	addi	r2,r2,17592
1000a938:	d809883a 	mov	r4,sp
1000a93c:	dfc00f15 	stw	ra,60(sp)
1000a940:	dc400e15 	stw	r17,56(sp)
1000a944:	d8c00615 	stw	r3,24(sp)
1000a948:	2823883a 	mov	r17,r5
1000a94c:	d8800715 	stw	r2,28(sp)
1000a950:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a954:	89400104 	addi	r5,r17,4
1000a958:	81000104 	addi	r4,r16,4
1000a95c:	d8000115 	stw	zero,4(sp)
1000a960:	000fa500 	call	1000fa50 <_ZNSs6assignERKSs>
1000a964:	d809883a 	mov	r4,sp
1000a968:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000a96c:	8005883a 	mov	r2,r16
1000a970:	dfc00f17 	ldw	ra,60(sp)
1000a974:	dc400e17 	ldw	r17,56(sp)
1000a978:	dc000d17 	ldw	r16,52(sp)
1000a97c:	dec01004 	addi	sp,sp,64
1000a980:	f800283a 	ret

1000a984 <_ZNSt11logic_errorC1EPKc>:
1000a984:	01840074 	movhi	r6,4097
1000a988:	deffee04 	addi	sp,sp,-72
1000a98c:	31a26504 	addi	r6,r6,-30316
1000a990:	00c400b4 	movhi	r3,4098
1000a994:	00840074 	movhi	r2,4097
1000a998:	18d12f04 	addi	r3,r3,17596
1000a99c:	10aa8404 	addi	r2,r2,-22000
1000a9a0:	d9000015 	stw	r4,0(sp)
1000a9a4:	d9800815 	stw	r6,32(sp)
1000a9a8:	d9000204 	addi	r4,sp,8
1000a9ac:	d9801004 	addi	r6,sp,64
1000a9b0:	d8c00915 	stw	r3,36(sp)
1000a9b4:	d9800a15 	stw	r6,40(sp)
1000a9b8:	d8800b15 	stw	r2,44(sp)
1000a9bc:	d9400115 	stw	r5,4(sp)
1000a9c0:	dfc01115 	stw	ra,68(sp)
1000a9c4:	df001015 	stw	fp,64(sp)
1000a9c8:	dec00c15 	stw	sp,48(sp)
1000a9cc:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000a9d0:	d8c00017 	ldw	r3,0(sp)
1000a9d4:	008400b4 	movhi	r2,4098
1000a9d8:	d9400117 	ldw	r5,4(sp)
1000a9dc:	1095b204 	addi	r2,r2,22216
1000a9e0:	18800015 	stw	r2,0(r3)
1000a9e4:	d9800fc4 	addi	r6,sp,63
1000a9e8:	00800044 	movi	r2,1
1000a9ec:	19000104 	addi	r4,r3,4
1000a9f0:	d8800315 	stw	r2,12(sp)
1000a9f4:	00105ac0 	call	100105ac <_ZNSsC1EPKcRKSaIcE>
1000a9f8:	d9000204 	addi	r4,sp,8
1000a9fc:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000aa00:	dfc01117 	ldw	ra,68(sp)
1000aa04:	df001017 	ldw	fp,64(sp)
1000aa08:	dec01204 	addi	sp,sp,72
1000aa0c:	f800283a 	ret
1000aa10:	d8800417 	ldw	r2,16(sp)
1000aa14:	d9000017 	ldw	r4,0(sp)
1000aa18:	d8800115 	stw	r2,4(sp)
1000aa1c:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000aa20:	d9000117 	ldw	r4,4(sp)
1000aa24:	00bfffc4 	movi	r2,-1
1000aa28:	d8800315 	stw	r2,12(sp)
1000aa2c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000aa30 <_ZNSt12domain_errorC1EPKc>:
1000aa30:	defffe04 	addi	sp,sp,-8
1000aa34:	dc000015 	stw	r16,0(sp)
1000aa38:	dfc00115 	stw	ra,4(sp)
1000aa3c:	2021883a 	mov	r16,r4
1000aa40:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000aa44:	008400b4 	movhi	r2,4098
1000aa48:	1095b704 	addi	r2,r2,22236
1000aa4c:	80800015 	stw	r2,0(r16)
1000aa50:	dfc00117 	ldw	ra,4(sp)
1000aa54:	dc000017 	ldw	r16,0(sp)
1000aa58:	dec00204 	addi	sp,sp,8
1000aa5c:	f800283a 	ret

1000aa60 <_ZNSt16invalid_argumentC1EPKc>:
1000aa60:	defffe04 	addi	sp,sp,-8
1000aa64:	dc000015 	stw	r16,0(sp)
1000aa68:	dfc00115 	stw	ra,4(sp)
1000aa6c:	2021883a 	mov	r16,r4
1000aa70:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000aa74:	008400b4 	movhi	r2,4098
1000aa78:	1095bc04 	addi	r2,r2,22256
1000aa7c:	80800015 	stw	r2,0(r16)
1000aa80:	dfc00117 	ldw	ra,4(sp)
1000aa84:	dc000017 	ldw	r16,0(sp)
1000aa88:	dec00204 	addi	sp,sp,8
1000aa8c:	f800283a 	ret

1000aa90 <_ZNSt12length_errorC1EPKc>:
1000aa90:	defffe04 	addi	sp,sp,-8
1000aa94:	dc000015 	stw	r16,0(sp)
1000aa98:	dfc00115 	stw	ra,4(sp)
1000aa9c:	2021883a 	mov	r16,r4
1000aaa0:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000aaa4:	008400b4 	movhi	r2,4098
1000aaa8:	1095c104 	addi	r2,r2,22276
1000aaac:	80800015 	stw	r2,0(r16)
1000aab0:	dfc00117 	ldw	ra,4(sp)
1000aab4:	dc000017 	ldw	r16,0(sp)
1000aab8:	dec00204 	addi	sp,sp,8
1000aabc:	f800283a 	ret

1000aac0 <_ZNSt12out_of_rangeC1EPKc>:
1000aac0:	defffe04 	addi	sp,sp,-8
1000aac4:	dc000015 	stw	r16,0(sp)
1000aac8:	dfc00115 	stw	ra,4(sp)
1000aacc:	2021883a 	mov	r16,r4
1000aad0:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000aad4:	008400b4 	movhi	r2,4098
1000aad8:	1095c604 	addi	r2,r2,22296
1000aadc:	80800015 	stw	r2,0(r16)
1000aae0:	dfc00117 	ldw	ra,4(sp)
1000aae4:	dc000017 	ldw	r16,0(sp)
1000aae8:	dec00204 	addi	sp,sp,8
1000aaec:	f800283a 	ret

1000aaf0 <_ZNSt13runtime_errorC1EPKc>:
1000aaf0:	01840074 	movhi	r6,4097
1000aaf4:	deffee04 	addi	sp,sp,-72
1000aaf8:	31a26504 	addi	r6,r6,-30316
1000aafc:	00c400b4 	movhi	r3,4098
1000ab00:	00840074 	movhi	r2,4097
1000ab04:	18d13084 	addi	r3,r3,17602
1000ab08:	10aadf04 	addi	r2,r2,-21636
1000ab0c:	d9000015 	stw	r4,0(sp)
1000ab10:	d9800815 	stw	r6,32(sp)
1000ab14:	d9000204 	addi	r4,sp,8
1000ab18:	d9801004 	addi	r6,sp,64
1000ab1c:	d8c00915 	stw	r3,36(sp)
1000ab20:	d9800a15 	stw	r6,40(sp)
1000ab24:	d8800b15 	stw	r2,44(sp)
1000ab28:	d9400115 	stw	r5,4(sp)
1000ab2c:	dfc01115 	stw	ra,68(sp)
1000ab30:	df001015 	stw	fp,64(sp)
1000ab34:	dec00c15 	stw	sp,48(sp)
1000ab38:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000ab3c:	d8c00017 	ldw	r3,0(sp)
1000ab40:	008400b4 	movhi	r2,4098
1000ab44:	d9400117 	ldw	r5,4(sp)
1000ab48:	1095cb04 	addi	r2,r2,22316
1000ab4c:	18800015 	stw	r2,0(r3)
1000ab50:	d9800fc4 	addi	r6,sp,63
1000ab54:	00800044 	movi	r2,1
1000ab58:	19000104 	addi	r4,r3,4
1000ab5c:	d8800315 	stw	r2,12(sp)
1000ab60:	00105ac0 	call	100105ac <_ZNSsC1EPKcRKSaIcE>
1000ab64:	d9000204 	addi	r4,sp,8
1000ab68:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000ab6c:	dfc01117 	ldw	ra,68(sp)
1000ab70:	df001017 	ldw	fp,64(sp)
1000ab74:	dec01204 	addi	sp,sp,72
1000ab78:	f800283a 	ret
1000ab7c:	d8800417 	ldw	r2,16(sp)
1000ab80:	d9000017 	ldw	r4,0(sp)
1000ab84:	d8800115 	stw	r2,4(sp)
1000ab88:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000ab8c:	d9000117 	ldw	r4,4(sp)
1000ab90:	00bfffc4 	movi	r2,-1
1000ab94:	d8800315 	stw	r2,12(sp)
1000ab98:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000ab9c <_ZNSt11range_errorC1EPKc>:
1000ab9c:	defffe04 	addi	sp,sp,-8
1000aba0:	dc000015 	stw	r16,0(sp)
1000aba4:	dfc00115 	stw	ra,4(sp)
1000aba8:	2021883a 	mov	r16,r4
1000abac:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000abb0:	008400b4 	movhi	r2,4098
1000abb4:	1095d004 	addi	r2,r2,22336
1000abb8:	80800015 	stw	r2,0(r16)
1000abbc:	dfc00117 	ldw	ra,4(sp)
1000abc0:	dc000017 	ldw	r16,0(sp)
1000abc4:	dec00204 	addi	sp,sp,8
1000abc8:	f800283a 	ret

1000abcc <_ZNSt14overflow_errorC1EPKc>:
1000abcc:	defffe04 	addi	sp,sp,-8
1000abd0:	dc000015 	stw	r16,0(sp)
1000abd4:	dfc00115 	stw	ra,4(sp)
1000abd8:	2021883a 	mov	r16,r4
1000abdc:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000abe0:	008400b4 	movhi	r2,4098
1000abe4:	1095d504 	addi	r2,r2,22356
1000abe8:	80800015 	stw	r2,0(r16)
1000abec:	dfc00117 	ldw	ra,4(sp)
1000abf0:	dc000017 	ldw	r16,0(sp)
1000abf4:	dec00204 	addi	sp,sp,8
1000abf8:	f800283a 	ret

1000abfc <_ZNSt15underflow_errorC1EPKc>:
1000abfc:	defffe04 	addi	sp,sp,-8
1000ac00:	dc000015 	stw	r16,0(sp)
1000ac04:	dfc00115 	stw	ra,4(sp)
1000ac08:	2021883a 	mov	r16,r4
1000ac0c:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000ac10:	008400b4 	movhi	r2,4098
1000ac14:	1095da04 	addi	r2,r2,22376
1000ac18:	80800015 	stw	r2,0(r16)
1000ac1c:	dfc00117 	ldw	ra,4(sp)
1000ac20:	dc000017 	ldw	r16,0(sp)
1000ac24:	dec00204 	addi	sp,sp,8
1000ac28:	f800283a 	ret

1000ac2c <_ZNSt12__sso_stringC1ERKSs>:
1000ac2c:	29400017 	ldw	r5,0(r5)
1000ac30:	29bffd17 	ldw	r6,-12(r5)
1000ac34:	000d0101 	jmpi	1000d010 <_ZNSt12__sso_stringC1EPKcj>

1000ac38 <_ZNSt12__cow_stringC1Ev>:
1000ac38:	008400f4 	movhi	r2,4099
1000ac3c:	10aa8104 	addi	r2,r2,-22012
1000ac40:	20800015 	stw	r2,0(r4)
1000ac44:	f800283a 	ret

1000ac48 <_ZNSt12__cow_stringC1ERKSs>:
1000ac48:	000f9f41 	jmpi	1000f9f4 <_ZNSsC1ERKSs>

1000ac4c <_ZNSt12__cow_stringC1EPKcj>:
1000ac4c:	defffe04 	addi	sp,sp,-8
1000ac50:	d9c000c4 	addi	r7,sp,3
1000ac54:	dfc00115 	stw	ra,4(sp)
1000ac58:	00100c00 	call	100100c0 <_ZNSsC1EPKcjRKSaIcE>
1000ac5c:	dfc00117 	ldw	ra,4(sp)
1000ac60:	dec00204 	addi	sp,sp,8
1000ac64:	f800283a 	ret

1000ac68 <_ZNSt12__cow_stringC1ERKS_>:
1000ac68:	defff004 	addi	sp,sp,-64
1000ac6c:	00c40074 	movhi	r3,4097
1000ac70:	008400b4 	movhi	r2,4098
1000ac74:	dc000e15 	stw	r16,56(sp)
1000ac78:	18e26504 	addi	r3,r3,-30316
1000ac7c:	10913204 	addi	r2,r2,17608
1000ac80:	2021883a 	mov	r16,r4
1000ac84:	d9000104 	addi	r4,sp,4
1000ac88:	dfc00f15 	stw	ra,60(sp)
1000ac8c:	d8c00715 	stw	r3,28(sp)
1000ac90:	d8800815 	stw	r2,32(sp)
1000ac94:	d9400015 	stw	r5,0(sp)
1000ac98:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000ac9c:	d9400017 	ldw	r5,0(sp)
1000aca0:	8009883a 	mov	r4,r16
1000aca4:	d8000215 	stw	zero,8(sp)
1000aca8:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000acac:	d9000104 	addi	r4,sp,4
1000acb0:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000acb4:	dfc00f17 	ldw	ra,60(sp)
1000acb8:	dc000e17 	ldw	r16,56(sp)
1000acbc:	dec01004 	addi	sp,sp,64
1000acc0:	f800283a 	ret

1000acc4 <_ZNSt12__cow_stringaSERKS_>:
1000acc4:	defff004 	addi	sp,sp,-64
1000acc8:	00c40074 	movhi	r3,4097
1000accc:	008400b4 	movhi	r2,4098
1000acd0:	dc000e15 	stw	r16,56(sp)
1000acd4:	18e26504 	addi	r3,r3,-30316
1000acd8:	2021883a 	mov	r16,r4
1000acdc:	10913304 	addi	r2,r2,17612
1000ace0:	d9000104 	addi	r4,sp,4
1000ace4:	dfc00f15 	stw	ra,60(sp)
1000ace8:	d8c00715 	stw	r3,28(sp)
1000acec:	d9400015 	stw	r5,0(sp)
1000acf0:	d8800815 	stw	r2,32(sp)
1000acf4:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000acf8:	d9400017 	ldw	r5,0(sp)
1000acfc:	8009883a 	mov	r4,r16
1000ad00:	d8000215 	stw	zero,8(sp)
1000ad04:	000fa500 	call	1000fa50 <_ZNSs6assignERKSs>
1000ad08:	d9000104 	addi	r4,sp,4
1000ad0c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000ad10:	8005883a 	mov	r2,r16
1000ad14:	dfc00f17 	ldw	ra,60(sp)
1000ad18:	dc000e17 	ldw	r16,56(sp)
1000ad1c:	dec01004 	addi	sp,sp,64
1000ad20:	f800283a 	ret

1000ad24 <_ZNSt12__cow_stringD1Ev>:
1000ad24:	20c00017 	ldw	r3,0(r4)
1000ad28:	008400f4 	movhi	r2,4099
1000ad2c:	10aa7e04 	addi	r2,r2,-22024
1000ad30:	193ffd04 	addi	r4,r3,-12
1000ad34:	2080011e 	bne	r4,r2,1000ad3c <_ZNSt12__cow_stringD1Ev+0x18>
1000ad38:	f800283a 	ret
1000ad3c:	18bfff17 	ldw	r2,-4(r3)
1000ad40:	117fffc4 	addi	r5,r2,-1
1000ad44:	197fff15 	stw	r5,-4(r3)
1000ad48:	00bffb16 	blt	zero,r2,1000ad38 <_ZNSt12__cow_stringD1Ev+0x14>
1000ad4c:	defffe04 	addi	sp,sp,-8
1000ad50:	d94000c4 	addi	r5,sp,3
1000ad54:	dfc00115 	stw	ra,4(sp)
1000ad58:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000ad5c:	dfc00117 	ldw	ra,4(sp)
1000ad60:	dec00204 	addi	sp,sp,8
1000ad64:	f800283a 	ret

1000ad68 <_ZNSt12__cow_stringC1EOS_>:
1000ad68:	28c00017 	ldw	r3,0(r5)
1000ad6c:	008400f4 	movhi	r2,4099
1000ad70:	10aa8104 	addi	r2,r2,-22012
1000ad74:	20c00015 	stw	r3,0(r4)
1000ad78:	28800015 	stw	r2,0(r5)
1000ad7c:	f800283a 	ret

1000ad80 <_ZNSt12__cow_stringaSEOS_>:
1000ad80:	defff004 	addi	sp,sp,-64
1000ad84:	01840074 	movhi	r6,4097
1000ad88:	00c400b4 	movhi	r3,4098
1000ad8c:	dc000e15 	stw	r16,56(sp)
1000ad90:	31a26504 	addi	r6,r6,-30316
1000ad94:	18d13404 	addi	r3,r3,17616
1000ad98:	2021883a 	mov	r16,r4
1000ad9c:	d9000104 	addi	r4,sp,4
1000ada0:	dfc00f15 	stw	ra,60(sp)
1000ada4:	d9800715 	stw	r6,28(sp)
1000ada8:	d8c00815 	stw	r3,32(sp)
1000adac:	d9400015 	stw	r5,0(sp)
1000adb0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000adb4:	d9400017 	ldw	r5,0(sp)
1000adb8:	8009883a 	mov	r4,r16
1000adbc:	d8000215 	stw	zero,8(sp)
1000adc0:	000d60c0 	call	1000d60c <_ZNSs4swapERSs>
1000adc4:	d9000104 	addi	r4,sp,4
1000adc8:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000adcc:	8005883a 	mov	r2,r16
1000add0:	dfc00f17 	ldw	ra,60(sp)
1000add4:	dc000e17 	ldw	r16,56(sp)
1000add8:	dec01004 	addi	sp,sp,64
1000addc:	f800283a 	ret

1000ade0 <_ZNKSt3_V214error_category10_M_messageEi>:
1000ade0:	00c400b4 	movhi	r3,4098
1000ade4:	deffec04 	addi	sp,sp,-80
1000ade8:	18d13504 	addi	r3,r3,17620
1000adec:	01c40074 	movhi	r7,4097
1000adf0:	00840074 	movhi	r2,4097
1000adf4:	39e26504 	addi	r7,r7,-30316
1000adf8:	10abad04 	addi	r2,r2,-20812
1000adfc:	d9000015 	stw	r4,0(sp)
1000ae00:	d8c00a15 	stw	r3,40(sp)
1000ae04:	d9000304 	addi	r4,sp,12
1000ae08:	d8c01204 	addi	r3,sp,72
1000ae0c:	dfc01315 	stw	ra,76(sp)
1000ae10:	d9400115 	stw	r5,4(sp)
1000ae14:	d9c00915 	stw	r7,36(sp)
1000ae18:	d8c00b15 	stw	r3,44(sp)
1000ae1c:	d8800c15 	stw	r2,48(sp)
1000ae20:	d9800215 	stw	r6,8(sp)
1000ae24:	df001215 	stw	fp,72(sp)
1000ae28:	dec00d15 	stw	sp,52(sp)
1000ae2c:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000ae30:	d9400117 	ldw	r5,4(sp)
1000ae34:	d9800217 	ldw	r6,8(sp)
1000ae38:	00ffffc4 	movi	r3,-1
1000ae3c:	28800017 	ldw	r2,0(r5)
1000ae40:	d9001104 	addi	r4,sp,68
1000ae44:	10800317 	ldw	r2,12(r2)
1000ae48:	d8c00415 	stw	r3,16(sp)
1000ae4c:	103ee83a 	callr	r2
1000ae50:	d9401117 	ldw	r5,68(sp)
1000ae54:	00800044 	movi	r2,1
1000ae58:	d8800415 	stw	r2,16(sp)
1000ae5c:	29bffd17 	ldw	r6,-12(r5)
1000ae60:	d9000017 	ldw	r4,0(sp)
1000ae64:	000d0100 	call	1000d010 <_ZNSt12__sso_stringC1EPKcj>
1000ae68:	d8c01117 	ldw	r3,68(sp)
1000ae6c:	008400f4 	movhi	r2,4099
1000ae70:	10aa7e04 	addi	r2,r2,-22024
1000ae74:	193ffd04 	addi	r4,r3,-12
1000ae78:	2080071e 	bne	r4,r2,1000ae98 <_ZNKSt3_V214error_category10_M_messageEi+0xb8>
1000ae7c:	d9000304 	addi	r4,sp,12
1000ae80:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000ae84:	d8800017 	ldw	r2,0(sp)
1000ae88:	dfc01317 	ldw	ra,76(sp)
1000ae8c:	df001217 	ldw	fp,72(sp)
1000ae90:	dec01404 	addi	sp,sp,80
1000ae94:	f800283a 	ret
1000ae98:	18bfff17 	ldw	r2,-4(r3)
1000ae9c:	117fffc4 	addi	r5,r2,-1
1000aea0:	197fff15 	stw	r5,-4(r3)
1000aea4:	00bff516 	blt	zero,r2,1000ae7c <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000aea8:	d94010c4 	addi	r5,sp,67
1000aeac:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000aeb0:	003ff206 	br	1000ae7c <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000aeb4:	d8801117 	ldw	r2,68(sp)
1000aeb8:	d9400517 	ldw	r5,20(sp)
1000aebc:	00c400f4 	movhi	r3,4099
1000aec0:	18ea7e04 	addi	r3,r3,-22024
1000aec4:	113ffd04 	addi	r4,r2,-12
1000aec8:	d9400015 	stw	r5,0(sp)
1000aecc:	20c00626 	beq	r4,r3,1000aee8 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000aed0:	10ffff17 	ldw	r3,-4(r2)
1000aed4:	197fffc4 	addi	r5,r3,-1
1000aed8:	117fff15 	stw	r5,-4(r2)
1000aedc:	00c00216 	blt	zero,r3,1000aee8 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000aee0:	d94010c4 	addi	r5,sp,67
1000aee4:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000aee8:	d9000017 	ldw	r4,0(sp)
1000aeec:	00bfffc4 	movi	r2,-1
1000aef0:	d8800415 	stw	r2,16(sp)
1000aef4:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>:
1000aef8:	00c400b4 	movhi	r3,4098
1000aefc:	deffed04 	addi	sp,sp,-76
1000af00:	18d13704 	addi	r3,r3,17628
1000af04:	01840074 	movhi	r6,4097
1000af08:	00840074 	movhi	r2,4097
1000af0c:	10abfb04 	addi	r2,r2,-20500
1000af10:	31a26504 	addi	r6,r6,-30316
1000af14:	d9000315 	stw	r4,12(sp)
1000af18:	d8c00b15 	stw	r3,44(sp)
1000af1c:	d9000404 	addi	r4,sp,16
1000af20:	d8c01104 	addi	r3,sp,68
1000af24:	d8c00c15 	stw	r3,48(sp)
1000af28:	d8800d15 	stw	r2,52(sp)
1000af2c:	dfc01215 	stw	ra,72(sp)
1000af30:	df001115 	stw	fp,68(sp)
1000af34:	d9400215 	stw	r5,8(sp)
1000af38:	d9800a15 	stw	r6,40(sp)
1000af3c:	dec00e15 	stw	sp,56(sp)
1000af40:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000af44:	d8800217 	ldw	r2,8(sp)
1000af48:	00c00044 	movi	r3,1
1000af4c:	d8c00015 	stw	r3,0(sp)
1000af50:	10bfffc4 	addi	r2,r2,-1
1000af54:	d8800115 	stw	r2,4(sp)
1000af58:	00000306 	br	1000af68 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x70>
1000af5c:	d8800017 	ldw	r2,0(sp)
1000af60:	10800044 	addi	r2,r2,1
1000af64:	d8800015 	stw	r2,0(sp)
1000af68:	00bfffc4 	movi	r2,-1
1000af6c:	d8800515 	stw	r2,20(sp)
1000af70:	d8c00117 	ldw	r3,4(sp)
1000af74:	d8800017 	ldw	r2,0(sp)
1000af78:	1889883a 	add	r4,r3,r2
1000af7c:	00000000 	call	10000000 <__reset>
1000af80:	10803fcc 	andi	r2,r2,255
1000af84:	103ff51e 	bne	r2,zero,1000af5c <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x64>
1000af88:	d9800017 	ldw	r6,0(sp)
1000af8c:	00800044 	movi	r2,1
1000af90:	d8800515 	stw	r2,20(sp)
1000af94:	31000304 	addi	r4,r6,12
1000af98:	00000000 	call	10000000 <__reset>
1000af9c:	d9800017 	ldw	r6,0(sp)
1000afa0:	d9400217 	ldw	r5,8(sp)
1000afa4:	11000304 	addi	r4,r2,12
1000afa8:	30ffffc4 	addi	r3,r6,-1
1000afac:	10c00115 	stw	r3,4(r2)
1000afb0:	10c00015 	stw	r3,0(r2)
1000afb4:	10000215 	stw	zero,8(r2)
1000afb8:	00bfffc4 	movi	r2,-1
1000afbc:	d8800515 	stw	r2,20(sp)
1000afc0:	d9000015 	stw	r4,0(sp)
1000afc4:	00000000 	call	10000000 <__reset>
1000afc8:	d9000017 	ldw	r4,0(sp)
1000afcc:	d8800317 	ldw	r2,12(sp)
1000afd0:	11000015 	stw	r4,0(r2)
1000afd4:	d9000404 	addi	r4,sp,16
1000afd8:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000afdc:	dfc01217 	ldw	ra,72(sp)
1000afe0:	df001117 	ldw	fp,68(sp)
1000afe4:	dec01304 	addi	sp,sp,76
1000afe8:	f800283a 	ret
1000afec:	d8c00617 	ldw	r3,24(sp)
1000aff0:	d8800517 	ldw	r2,20(sp)
1000aff4:	d8c00015 	stw	r3,0(sp)
1000aff8:	1000051e 	bne	r2,zero,1000b010 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x118>
1000affc:	d9000617 	ldw	r4,24(sp)
1000b000:	0007f400 	call	10007f40 <__cxa_begin_catch>
1000b004:	00800084 	movi	r2,2
1000b008:	d8800515 	stw	r2,20(sp)
1000b00c:	00083780 	call	10008378 <__cxa_rethrow>
1000b010:	10bfffc4 	addi	r2,r2,-1
1000b014:	10000126 	beq	r2,zero,1000b01c <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x124>
1000b018:	003b68fa 	trap	3
1000b01c:	d8000515 	stw	zero,20(sp)
1000b020:	0007fec0 	call	10007fec <__cxa_end_catch>
1000b024:	d9000017 	ldw	r4,0(sp)
1000b028:	00bfffc4 	movi	r2,-1
1000b02c:	d8800515 	stw	r2,20(sp)
1000b030:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b034 <_Z23_txnal_cow_string_c_strPKv>:
1000b034:	00000001 	jmpi	10000000 <__reset>

1000b038 <_Z23_txnal_sso_string_c_strPKv>:
1000b038:	00000001 	jmpi	10000000 <__reset>

1000b03c <_Z20_txnal_cow_string_D1Pv>:
1000b03c:	deffff04 	addi	sp,sp,-4
1000b040:	dfc00015 	stw	ra,0(sp)
1000b044:	00000000 	call	10000000 <__reset>
1000b048:	01040074 	movhi	r4,4097
1000b04c:	11fffd04 	addi	r7,r2,-12
1000b050:	01400044 	movi	r5,1
1000b054:	000d883a 	mov	r6,zero
1000b058:	2129e604 	addi	r4,r4,-22632
1000b05c:	dfc00017 	ldw	ra,0(sp)
1000b060:	dec00104 	addi	sp,sp,4
1000b064:	00000001 	jmpi	10000000 <__reset>

1000b068 <_Z26_txnal_logic_error_get_msgPv>:
1000b068:	20800104 	addi	r2,r4,4
1000b06c:	f800283a 	ret

1000b070 <_Z28_txnal_runtime_error_get_msgPv>:
1000b070:	20800104 	addi	r2,r4,4
1000b074:	f800283a 	ret

1000b078 <_ZGTtNSt11logic_errorC1EPKc>:
1000b078:	00c400b4 	movhi	r3,4098
1000b07c:	deffed04 	addi	sp,sp,-76
1000b080:	18d13b04 	addi	r3,r3,17644
1000b084:	01840074 	movhi	r6,4097
1000b088:	00840074 	movhi	r2,4097
1000b08c:	31a26504 	addi	r6,r6,-30316
1000b090:	10ac4b04 	addi	r2,r2,-20180
1000b094:	d9000015 	stw	r4,0(sp)
1000b098:	d8c00915 	stw	r3,36(sp)
1000b09c:	d9000204 	addi	r4,sp,8
1000b0a0:	d8c01104 	addi	r3,sp,68
1000b0a4:	d9800815 	stw	r6,32(sp)
1000b0a8:	dfc01215 	stw	ra,72(sp)
1000b0ac:	d8c00a15 	stw	r3,40(sp)
1000b0b0:	d8800b15 	stw	r2,44(sp)
1000b0b4:	d9400115 	stw	r5,4(sp)
1000b0b8:	df001115 	stw	fp,68(sp)
1000b0bc:	dec00c15 	stw	sp,48(sp)
1000b0c0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b0c4:	d8800f04 	addi	r2,sp,60
1000b0c8:	014400b4 	movhi	r5,4098
1000b0cc:	1009883a 	mov	r4,r2
1000b0d0:	2954c204 	addi	r5,r5,21256
1000b0d4:	00bfffc4 	movi	r2,-1
1000b0d8:	d8800315 	stw	r2,12(sp)
1000b0dc:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b0e0:	00800044 	movi	r2,1
1000b0e4:	d9000017 	ldw	r4,0(sp)
1000b0e8:	d8800315 	stw	r2,12(sp)
1000b0ec:	d8800f04 	addi	r2,sp,60
1000b0f0:	01800204 	movi	r6,8
1000b0f4:	100b883a 	mov	r5,r2
1000b0f8:	00000000 	call	10000000 <__reset>
1000b0fc:	d9800017 	ldw	r6,0(sp)
1000b100:	d9400117 	ldw	r5,4(sp)
1000b104:	31000104 	addi	r4,r6,4
1000b108:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b10c:	d9000f04 	addi	r4,sp,60
1000b110:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000b114:	d9000204 	addi	r4,sp,8
1000b118:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b11c:	dfc01217 	ldw	ra,72(sp)
1000b120:	df001117 	ldw	fp,68(sp)
1000b124:	dec01304 	addi	sp,sp,76
1000b128:	f800283a 	ret
1000b12c:	d8800417 	ldw	r2,16(sp)
1000b130:	d9000f04 	addi	r4,sp,60
1000b134:	d8800015 	stw	r2,0(sp)
1000b138:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000b13c:	d9000017 	ldw	r4,0(sp)
1000b140:	00bfffc4 	movi	r2,-1
1000b144:	d8800315 	stw	r2,12(sp)
1000b148:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b14c <_ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b14c:	00c400b4 	movhi	r3,4098
1000b150:	deffed04 	addi	sp,sp,-76
1000b154:	18d13c84 	addi	r3,r3,17650
1000b158:	01840074 	movhi	r6,4097
1000b15c:	00840074 	movhi	r2,4097
1000b160:	31a26504 	addi	r6,r6,-30316
1000b164:	10ac8504 	addi	r2,r2,-19948
1000b168:	d9000015 	stw	r4,0(sp)
1000b16c:	d8c00915 	stw	r3,36(sp)
1000b170:	d9000204 	addi	r4,sp,8
1000b174:	d8c01104 	addi	r3,sp,68
1000b178:	d9800815 	stw	r6,32(sp)
1000b17c:	dfc01215 	stw	ra,72(sp)
1000b180:	d8c00a15 	stw	r3,40(sp)
1000b184:	d8800b15 	stw	r2,44(sp)
1000b188:	d9400115 	stw	r5,4(sp)
1000b18c:	df001115 	stw	fp,68(sp)
1000b190:	dec00c15 	stw	sp,48(sp)
1000b194:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b198:	d8c00f04 	addi	r3,sp,60
1000b19c:	014400b4 	movhi	r5,4098
1000b1a0:	1809883a 	mov	r4,r3
1000b1a4:	00bfffc4 	movi	r2,-1
1000b1a8:	2954c204 	addi	r5,r5,21256
1000b1ac:	d8800315 	stw	r2,12(sp)
1000b1b0:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b1b4:	d9000017 	ldw	r4,0(sp)
1000b1b8:	d8c00f04 	addi	r3,sp,60
1000b1bc:	00800044 	movi	r2,1
1000b1c0:	01800204 	movi	r6,8
1000b1c4:	180b883a 	mov	r5,r3
1000b1c8:	d8800315 	stw	r2,12(sp)
1000b1cc:	00000000 	call	10000000 <__reset>
1000b1d0:	d8800017 	ldw	r2,0(sp)
1000b1d4:	d9000117 	ldw	r4,4(sp)
1000b1d8:	10c00104 	addi	r3,r2,4
1000b1dc:	d8c00115 	stw	r3,4(sp)
1000b1e0:	00000000 	call	10000000 <__reset>
1000b1e4:	d9800017 	ldw	r6,0(sp)
1000b1e8:	d9000117 	ldw	r4,4(sp)
1000b1ec:	100b883a 	mov	r5,r2
1000b1f0:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b1f4:	d9000f04 	addi	r4,sp,60
1000b1f8:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000b1fc:	d9000204 	addi	r4,sp,8
1000b200:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b204:	dfc01217 	ldw	ra,72(sp)
1000b208:	df001117 	ldw	fp,68(sp)
1000b20c:	dec01304 	addi	sp,sp,76
1000b210:	f800283a 	ret
1000b214:	d8800417 	ldw	r2,16(sp)
1000b218:	d9000f04 	addi	r4,sp,60
1000b21c:	d8800015 	stw	r2,0(sp)
1000b220:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000b224:	d9000017 	ldw	r4,0(sp)
1000b228:	00bfffc4 	movi	r2,-1
1000b22c:	d8800315 	stw	r2,12(sp)
1000b230:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b234 <_ZGTtNSt11logic_errorD1Ev>:
1000b234:	21000104 	addi	r4,r4,4
1000b238:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000b23c <_ZGTtNSt11logic_errorD0Ev>:
1000b23c:	defffe04 	addi	sp,sp,-8
1000b240:	dc000015 	stw	r16,0(sp)
1000b244:	2021883a 	mov	r16,r4
1000b248:	21000104 	addi	r4,r4,4
1000b24c:	dfc00115 	stw	ra,4(sp)
1000b250:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000b254:	8009883a 	mov	r4,r16
1000b258:	dfc00117 	ldw	ra,4(sp)
1000b25c:	dc000017 	ldw	r16,0(sp)
1000b260:	dec00204 	addi	sp,sp,8
1000b264:	00000001 	jmpi	10000000 <__reset>

1000b268 <_ZGTtNKSt11logic_error4whatEv>:
1000b268:	21000104 	addi	r4,r4,4
1000b26c:	00000001 	jmpi	10000000 <__reset>

1000b270 <_ZGTtNSt12domain_errorC1EPKc>:
1000b270:	00c400b4 	movhi	r3,4098
1000b274:	deffed04 	addi	sp,sp,-76
1000b278:	18d13e04 	addi	r3,r3,17656
1000b27c:	01840074 	movhi	r6,4097
1000b280:	00840074 	movhi	r2,4097
1000b284:	31a26504 	addi	r6,r6,-30316
1000b288:	10accc04 	addi	r2,r2,-19664
1000b28c:	d9000015 	stw	r4,0(sp)
1000b290:	d8c00915 	stw	r3,36(sp)
1000b294:	d9000204 	addi	r4,sp,8
1000b298:	d8c01104 	addi	r3,sp,68
1000b29c:	d9800815 	stw	r6,32(sp)
1000b2a0:	d8c00a15 	stw	r3,40(sp)
1000b2a4:	dfc01215 	stw	ra,72(sp)
1000b2a8:	d8800b15 	stw	r2,44(sp)
1000b2ac:	d9400115 	stw	r5,4(sp)
1000b2b0:	df001115 	stw	fp,68(sp)
1000b2b4:	dec00c15 	stw	sp,48(sp)
1000b2b8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b2bc:	d8800f04 	addi	r2,sp,60
1000b2c0:	014400b4 	movhi	r5,4098
1000b2c4:	1009883a 	mov	r4,r2
1000b2c8:	2954c204 	addi	r5,r5,21256
1000b2cc:	00bfffc4 	movi	r2,-1
1000b2d0:	d8800315 	stw	r2,12(sp)
1000b2d4:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b2d8:	00c00044 	movi	r3,1
1000b2dc:	d9000017 	ldw	r4,0(sp)
1000b2e0:	008400b4 	movhi	r2,4098
1000b2e4:	d8c00315 	stw	r3,12(sp)
1000b2e8:	d8c00f04 	addi	r3,sp,60
1000b2ec:	1095b704 	addi	r2,r2,22236
1000b2f0:	01800204 	movi	r6,8
1000b2f4:	180b883a 	mov	r5,r3
1000b2f8:	d8800f15 	stw	r2,60(sp)
1000b2fc:	00000000 	call	10000000 <__reset>
1000b300:	d9800017 	ldw	r6,0(sp)
1000b304:	d9400117 	ldw	r5,4(sp)
1000b308:	31000104 	addi	r4,r6,4
1000b30c:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b310:	d9000f04 	addi	r4,sp,60
1000b314:	000cad40 	call	1000cad4 <_ZNSt12domain_errorD1Ev>
1000b318:	d9000204 	addi	r4,sp,8
1000b31c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b320:	dfc01217 	ldw	ra,72(sp)
1000b324:	df001117 	ldw	fp,68(sp)
1000b328:	dec01304 	addi	sp,sp,76
1000b32c:	f800283a 	ret
1000b330:	d8800417 	ldw	r2,16(sp)
1000b334:	d9000f04 	addi	r4,sp,60
1000b338:	d8800015 	stw	r2,0(sp)
1000b33c:	000cad40 	call	1000cad4 <_ZNSt12domain_errorD1Ev>
1000b340:	d9000017 	ldw	r4,0(sp)
1000b344:	00bfffc4 	movi	r2,-1
1000b348:	d8800315 	stw	r2,12(sp)
1000b34c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b350 <_ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b350:	00c400b4 	movhi	r3,4098
1000b354:	deffed04 	addi	sp,sp,-76
1000b358:	18d13f84 	addi	r3,r3,17662
1000b35c:	01840074 	movhi	r6,4097
1000b360:	00840074 	movhi	r2,4097
1000b364:	31a26504 	addi	r6,r6,-30316
1000b368:	10ad0904 	addi	r2,r2,-19420
1000b36c:	d9000015 	stw	r4,0(sp)
1000b370:	d8c00915 	stw	r3,36(sp)
1000b374:	d9000204 	addi	r4,sp,8
1000b378:	d8c01104 	addi	r3,sp,68
1000b37c:	d9800815 	stw	r6,32(sp)
1000b380:	dfc01215 	stw	ra,72(sp)
1000b384:	d8c00a15 	stw	r3,40(sp)
1000b388:	d8800b15 	stw	r2,44(sp)
1000b38c:	d9400115 	stw	r5,4(sp)
1000b390:	df001115 	stw	fp,68(sp)
1000b394:	dec00c15 	stw	sp,48(sp)
1000b398:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b39c:	d8c00f04 	addi	r3,sp,60
1000b3a0:	014400b4 	movhi	r5,4098
1000b3a4:	1809883a 	mov	r4,r3
1000b3a8:	00bfffc4 	movi	r2,-1
1000b3ac:	2954c204 	addi	r5,r5,21256
1000b3b0:	d8800315 	stw	r2,12(sp)
1000b3b4:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b3b8:	00c00044 	movi	r3,1
1000b3bc:	d9000017 	ldw	r4,0(sp)
1000b3c0:	008400b4 	movhi	r2,4098
1000b3c4:	d8c00315 	stw	r3,12(sp)
1000b3c8:	d8c00f04 	addi	r3,sp,60
1000b3cc:	1095b704 	addi	r2,r2,22236
1000b3d0:	01800204 	movi	r6,8
1000b3d4:	180b883a 	mov	r5,r3
1000b3d8:	d8800f15 	stw	r2,60(sp)
1000b3dc:	00000000 	call	10000000 <__reset>
1000b3e0:	d8800017 	ldw	r2,0(sp)
1000b3e4:	d9000117 	ldw	r4,4(sp)
1000b3e8:	10c00104 	addi	r3,r2,4
1000b3ec:	d8c00115 	stw	r3,4(sp)
1000b3f0:	00000000 	call	10000000 <__reset>
1000b3f4:	d9800017 	ldw	r6,0(sp)
1000b3f8:	d9000117 	ldw	r4,4(sp)
1000b3fc:	100b883a 	mov	r5,r2
1000b400:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b404:	d9000f04 	addi	r4,sp,60
1000b408:	000cad40 	call	1000cad4 <_ZNSt12domain_errorD1Ev>
1000b40c:	d9000204 	addi	r4,sp,8
1000b410:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b414:	dfc01217 	ldw	ra,72(sp)
1000b418:	df001117 	ldw	fp,68(sp)
1000b41c:	dec01304 	addi	sp,sp,76
1000b420:	f800283a 	ret
1000b424:	d8800417 	ldw	r2,16(sp)
1000b428:	d9000f04 	addi	r4,sp,60
1000b42c:	d8800015 	stw	r2,0(sp)
1000b430:	000cad40 	call	1000cad4 <_ZNSt12domain_errorD1Ev>
1000b434:	d9000017 	ldw	r4,0(sp)
1000b438:	00bfffc4 	movi	r2,-1
1000b43c:	d8800315 	stw	r2,12(sp)
1000b440:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b444 <_ZGTtNSt12domain_errorD1Ev>:
1000b444:	21000104 	addi	r4,r4,4
1000b448:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000b44c <_ZGTtNSt12domain_errorD0Ev>:
1000b44c:	defffe04 	addi	sp,sp,-8
1000b450:	dc000015 	stw	r16,0(sp)
1000b454:	2021883a 	mov	r16,r4
1000b458:	21000104 	addi	r4,r4,4
1000b45c:	dfc00115 	stw	ra,4(sp)
1000b460:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000b464:	8009883a 	mov	r4,r16
1000b468:	dfc00117 	ldw	ra,4(sp)
1000b46c:	dc000017 	ldw	r16,0(sp)
1000b470:	dec00204 	addi	sp,sp,8
1000b474:	00000001 	jmpi	10000000 <__reset>

1000b478 <_ZGTtNSt16invalid_argumentC1EPKc>:
1000b478:	00c400b4 	movhi	r3,4098
1000b47c:	deffed04 	addi	sp,sp,-76
1000b480:	18d14104 	addi	r3,r3,17668
1000b484:	01840074 	movhi	r6,4097
1000b488:	00840074 	movhi	r2,4097
1000b48c:	31a26504 	addi	r6,r6,-30316
1000b490:	10ad4e04 	addi	r2,r2,-19144
1000b494:	d9000015 	stw	r4,0(sp)
1000b498:	d8c00915 	stw	r3,36(sp)
1000b49c:	d9000204 	addi	r4,sp,8
1000b4a0:	d8c01104 	addi	r3,sp,68
1000b4a4:	d9800815 	stw	r6,32(sp)
1000b4a8:	d8c00a15 	stw	r3,40(sp)
1000b4ac:	dfc01215 	stw	ra,72(sp)
1000b4b0:	d8800b15 	stw	r2,44(sp)
1000b4b4:	d9400115 	stw	r5,4(sp)
1000b4b8:	df001115 	stw	fp,68(sp)
1000b4bc:	dec00c15 	stw	sp,48(sp)
1000b4c0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b4c4:	d8800f04 	addi	r2,sp,60
1000b4c8:	014400b4 	movhi	r5,4098
1000b4cc:	1009883a 	mov	r4,r2
1000b4d0:	2954c204 	addi	r5,r5,21256
1000b4d4:	00bfffc4 	movi	r2,-1
1000b4d8:	d8800315 	stw	r2,12(sp)
1000b4dc:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b4e0:	00c00044 	movi	r3,1
1000b4e4:	d9000017 	ldw	r4,0(sp)
1000b4e8:	008400b4 	movhi	r2,4098
1000b4ec:	d8c00315 	stw	r3,12(sp)
1000b4f0:	d8c00f04 	addi	r3,sp,60
1000b4f4:	1095bc04 	addi	r2,r2,22256
1000b4f8:	01800204 	movi	r6,8
1000b4fc:	180b883a 	mov	r5,r3
1000b500:	d8800f15 	stw	r2,60(sp)
1000b504:	00000000 	call	10000000 <__reset>
1000b508:	d9800017 	ldw	r6,0(sp)
1000b50c:	d9400117 	ldw	r5,4(sp)
1000b510:	31000104 	addi	r4,r6,4
1000b514:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b518:	d9000f04 	addi	r4,sp,60
1000b51c:	000cb180 	call	1000cb18 <_ZNSt16invalid_argumentD1Ev>
1000b520:	d9000204 	addi	r4,sp,8
1000b524:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b528:	dfc01217 	ldw	ra,72(sp)
1000b52c:	df001117 	ldw	fp,68(sp)
1000b530:	dec01304 	addi	sp,sp,76
1000b534:	f800283a 	ret
1000b538:	d8800417 	ldw	r2,16(sp)
1000b53c:	d9000f04 	addi	r4,sp,60
1000b540:	d8800015 	stw	r2,0(sp)
1000b544:	000cb180 	call	1000cb18 <_ZNSt16invalid_argumentD1Ev>
1000b548:	d9000017 	ldw	r4,0(sp)
1000b54c:	00bfffc4 	movi	r2,-1
1000b550:	d8800315 	stw	r2,12(sp)
1000b554:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b558 <_ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b558:	00c400b4 	movhi	r3,4098
1000b55c:	deffed04 	addi	sp,sp,-76
1000b560:	18d14284 	addi	r3,r3,17674
1000b564:	01840074 	movhi	r6,4097
1000b568:	00840074 	movhi	r2,4097
1000b56c:	31a26504 	addi	r6,r6,-30316
1000b570:	10ad8b04 	addi	r2,r2,-18900
1000b574:	d9000015 	stw	r4,0(sp)
1000b578:	d8c00915 	stw	r3,36(sp)
1000b57c:	d9000204 	addi	r4,sp,8
1000b580:	d8c01104 	addi	r3,sp,68
1000b584:	d9800815 	stw	r6,32(sp)
1000b588:	dfc01215 	stw	ra,72(sp)
1000b58c:	d8c00a15 	stw	r3,40(sp)
1000b590:	d8800b15 	stw	r2,44(sp)
1000b594:	d9400115 	stw	r5,4(sp)
1000b598:	df001115 	stw	fp,68(sp)
1000b59c:	dec00c15 	stw	sp,48(sp)
1000b5a0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b5a4:	d8c00f04 	addi	r3,sp,60
1000b5a8:	014400b4 	movhi	r5,4098
1000b5ac:	1809883a 	mov	r4,r3
1000b5b0:	00bfffc4 	movi	r2,-1
1000b5b4:	2954c204 	addi	r5,r5,21256
1000b5b8:	d8800315 	stw	r2,12(sp)
1000b5bc:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b5c0:	00c00044 	movi	r3,1
1000b5c4:	d9000017 	ldw	r4,0(sp)
1000b5c8:	008400b4 	movhi	r2,4098
1000b5cc:	d8c00315 	stw	r3,12(sp)
1000b5d0:	d8c00f04 	addi	r3,sp,60
1000b5d4:	1095bc04 	addi	r2,r2,22256
1000b5d8:	01800204 	movi	r6,8
1000b5dc:	180b883a 	mov	r5,r3
1000b5e0:	d8800f15 	stw	r2,60(sp)
1000b5e4:	00000000 	call	10000000 <__reset>
1000b5e8:	d8800017 	ldw	r2,0(sp)
1000b5ec:	d9000117 	ldw	r4,4(sp)
1000b5f0:	10c00104 	addi	r3,r2,4
1000b5f4:	d8c00115 	stw	r3,4(sp)
1000b5f8:	00000000 	call	10000000 <__reset>
1000b5fc:	d9800017 	ldw	r6,0(sp)
1000b600:	d9000117 	ldw	r4,4(sp)
1000b604:	100b883a 	mov	r5,r2
1000b608:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b60c:	d9000f04 	addi	r4,sp,60
1000b610:	000cb180 	call	1000cb18 <_ZNSt16invalid_argumentD1Ev>
1000b614:	d9000204 	addi	r4,sp,8
1000b618:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b61c:	dfc01217 	ldw	ra,72(sp)
1000b620:	df001117 	ldw	fp,68(sp)
1000b624:	dec01304 	addi	sp,sp,76
1000b628:	f800283a 	ret
1000b62c:	d8800417 	ldw	r2,16(sp)
1000b630:	d9000f04 	addi	r4,sp,60
1000b634:	d8800015 	stw	r2,0(sp)
1000b638:	000cb180 	call	1000cb18 <_ZNSt16invalid_argumentD1Ev>
1000b63c:	d9000017 	ldw	r4,0(sp)
1000b640:	00bfffc4 	movi	r2,-1
1000b644:	d8800315 	stw	r2,12(sp)
1000b648:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b64c <_ZGTtNSt16invalid_argumentD1Ev>:
1000b64c:	21000104 	addi	r4,r4,4
1000b650:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000b654 <_ZGTtNSt16invalid_argumentD0Ev>:
1000b654:	defffe04 	addi	sp,sp,-8
1000b658:	dc000015 	stw	r16,0(sp)
1000b65c:	2021883a 	mov	r16,r4
1000b660:	21000104 	addi	r4,r4,4
1000b664:	dfc00115 	stw	ra,4(sp)
1000b668:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000b66c:	8009883a 	mov	r4,r16
1000b670:	dfc00117 	ldw	ra,4(sp)
1000b674:	dc000017 	ldw	r16,0(sp)
1000b678:	dec00204 	addi	sp,sp,8
1000b67c:	00000001 	jmpi	10000000 <__reset>

1000b680 <_ZGTtNSt12length_errorC1EPKc>:
1000b680:	00c400b4 	movhi	r3,4098
1000b684:	deffed04 	addi	sp,sp,-76
1000b688:	18d14404 	addi	r3,r3,17680
1000b68c:	01840074 	movhi	r6,4097
1000b690:	00840074 	movhi	r2,4097
1000b694:	31a26504 	addi	r6,r6,-30316
1000b698:	10add004 	addi	r2,r2,-18624
1000b69c:	d9000015 	stw	r4,0(sp)
1000b6a0:	d8c00915 	stw	r3,36(sp)
1000b6a4:	d9000204 	addi	r4,sp,8
1000b6a8:	d8c01104 	addi	r3,sp,68
1000b6ac:	d9800815 	stw	r6,32(sp)
1000b6b0:	d8c00a15 	stw	r3,40(sp)
1000b6b4:	dfc01215 	stw	ra,72(sp)
1000b6b8:	d8800b15 	stw	r2,44(sp)
1000b6bc:	d9400115 	stw	r5,4(sp)
1000b6c0:	df001115 	stw	fp,68(sp)
1000b6c4:	dec00c15 	stw	sp,48(sp)
1000b6c8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b6cc:	d8800f04 	addi	r2,sp,60
1000b6d0:	014400b4 	movhi	r5,4098
1000b6d4:	1009883a 	mov	r4,r2
1000b6d8:	2954c204 	addi	r5,r5,21256
1000b6dc:	00bfffc4 	movi	r2,-1
1000b6e0:	d8800315 	stw	r2,12(sp)
1000b6e4:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b6e8:	00c00044 	movi	r3,1
1000b6ec:	d9000017 	ldw	r4,0(sp)
1000b6f0:	008400b4 	movhi	r2,4098
1000b6f4:	d8c00315 	stw	r3,12(sp)
1000b6f8:	d8c00f04 	addi	r3,sp,60
1000b6fc:	1095c104 	addi	r2,r2,22276
1000b700:	01800204 	movi	r6,8
1000b704:	180b883a 	mov	r5,r3
1000b708:	d8800f15 	stw	r2,60(sp)
1000b70c:	00000000 	call	10000000 <__reset>
1000b710:	d9800017 	ldw	r6,0(sp)
1000b714:	d9400117 	ldw	r5,4(sp)
1000b718:	31000104 	addi	r4,r6,4
1000b71c:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b720:	d9000f04 	addi	r4,sp,60
1000b724:	000cb5c0 	call	1000cb5c <_ZNSt12length_errorD1Ev>
1000b728:	d9000204 	addi	r4,sp,8
1000b72c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b730:	dfc01217 	ldw	ra,72(sp)
1000b734:	df001117 	ldw	fp,68(sp)
1000b738:	dec01304 	addi	sp,sp,76
1000b73c:	f800283a 	ret
1000b740:	d8800417 	ldw	r2,16(sp)
1000b744:	d9000f04 	addi	r4,sp,60
1000b748:	d8800015 	stw	r2,0(sp)
1000b74c:	000cb5c0 	call	1000cb5c <_ZNSt12length_errorD1Ev>
1000b750:	d9000017 	ldw	r4,0(sp)
1000b754:	00bfffc4 	movi	r2,-1
1000b758:	d8800315 	stw	r2,12(sp)
1000b75c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b760 <_ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b760:	00c400b4 	movhi	r3,4098
1000b764:	deffed04 	addi	sp,sp,-76
1000b768:	18d14584 	addi	r3,r3,17686
1000b76c:	01840074 	movhi	r6,4097
1000b770:	00840074 	movhi	r2,4097
1000b774:	31a26504 	addi	r6,r6,-30316
1000b778:	10ae0d04 	addi	r2,r2,-18380
1000b77c:	d9000015 	stw	r4,0(sp)
1000b780:	d8c00915 	stw	r3,36(sp)
1000b784:	d9000204 	addi	r4,sp,8
1000b788:	d8c01104 	addi	r3,sp,68
1000b78c:	d9800815 	stw	r6,32(sp)
1000b790:	dfc01215 	stw	ra,72(sp)
1000b794:	d8c00a15 	stw	r3,40(sp)
1000b798:	d8800b15 	stw	r2,44(sp)
1000b79c:	d9400115 	stw	r5,4(sp)
1000b7a0:	df001115 	stw	fp,68(sp)
1000b7a4:	dec00c15 	stw	sp,48(sp)
1000b7a8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b7ac:	d8c00f04 	addi	r3,sp,60
1000b7b0:	014400b4 	movhi	r5,4098
1000b7b4:	1809883a 	mov	r4,r3
1000b7b8:	00bfffc4 	movi	r2,-1
1000b7bc:	2954c204 	addi	r5,r5,21256
1000b7c0:	d8800315 	stw	r2,12(sp)
1000b7c4:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b7c8:	00c00044 	movi	r3,1
1000b7cc:	d9000017 	ldw	r4,0(sp)
1000b7d0:	008400b4 	movhi	r2,4098
1000b7d4:	d8c00315 	stw	r3,12(sp)
1000b7d8:	d8c00f04 	addi	r3,sp,60
1000b7dc:	1095c104 	addi	r2,r2,22276
1000b7e0:	01800204 	movi	r6,8
1000b7e4:	180b883a 	mov	r5,r3
1000b7e8:	d8800f15 	stw	r2,60(sp)
1000b7ec:	00000000 	call	10000000 <__reset>
1000b7f0:	d8800017 	ldw	r2,0(sp)
1000b7f4:	d9000117 	ldw	r4,4(sp)
1000b7f8:	10c00104 	addi	r3,r2,4
1000b7fc:	d8c00115 	stw	r3,4(sp)
1000b800:	00000000 	call	10000000 <__reset>
1000b804:	d9800017 	ldw	r6,0(sp)
1000b808:	d9000117 	ldw	r4,4(sp)
1000b80c:	100b883a 	mov	r5,r2
1000b810:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b814:	d9000f04 	addi	r4,sp,60
1000b818:	000cb5c0 	call	1000cb5c <_ZNSt12length_errorD1Ev>
1000b81c:	d9000204 	addi	r4,sp,8
1000b820:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b824:	dfc01217 	ldw	ra,72(sp)
1000b828:	df001117 	ldw	fp,68(sp)
1000b82c:	dec01304 	addi	sp,sp,76
1000b830:	f800283a 	ret
1000b834:	d8800417 	ldw	r2,16(sp)
1000b838:	d9000f04 	addi	r4,sp,60
1000b83c:	d8800015 	stw	r2,0(sp)
1000b840:	000cb5c0 	call	1000cb5c <_ZNSt12length_errorD1Ev>
1000b844:	d9000017 	ldw	r4,0(sp)
1000b848:	00bfffc4 	movi	r2,-1
1000b84c:	d8800315 	stw	r2,12(sp)
1000b850:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b854 <_ZGTtNSt12length_errorD1Ev>:
1000b854:	21000104 	addi	r4,r4,4
1000b858:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000b85c <_ZGTtNSt12length_errorD0Ev>:
1000b85c:	defffe04 	addi	sp,sp,-8
1000b860:	dc000015 	stw	r16,0(sp)
1000b864:	2021883a 	mov	r16,r4
1000b868:	21000104 	addi	r4,r4,4
1000b86c:	dfc00115 	stw	ra,4(sp)
1000b870:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000b874:	8009883a 	mov	r4,r16
1000b878:	dfc00117 	ldw	ra,4(sp)
1000b87c:	dc000017 	ldw	r16,0(sp)
1000b880:	dec00204 	addi	sp,sp,8
1000b884:	00000001 	jmpi	10000000 <__reset>

1000b888 <_ZGTtNSt12out_of_rangeC1EPKc>:
1000b888:	00c400b4 	movhi	r3,4098
1000b88c:	deffed04 	addi	sp,sp,-76
1000b890:	18d14704 	addi	r3,r3,17692
1000b894:	01840074 	movhi	r6,4097
1000b898:	00840074 	movhi	r2,4097
1000b89c:	31a26504 	addi	r6,r6,-30316
1000b8a0:	10ae5204 	addi	r2,r2,-18104
1000b8a4:	d9000015 	stw	r4,0(sp)
1000b8a8:	d8c00915 	stw	r3,36(sp)
1000b8ac:	d9000204 	addi	r4,sp,8
1000b8b0:	d8c01104 	addi	r3,sp,68
1000b8b4:	d9800815 	stw	r6,32(sp)
1000b8b8:	d8c00a15 	stw	r3,40(sp)
1000b8bc:	dfc01215 	stw	ra,72(sp)
1000b8c0:	d8800b15 	stw	r2,44(sp)
1000b8c4:	d9400115 	stw	r5,4(sp)
1000b8c8:	df001115 	stw	fp,68(sp)
1000b8cc:	dec00c15 	stw	sp,48(sp)
1000b8d0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b8d4:	d8800f04 	addi	r2,sp,60
1000b8d8:	014400b4 	movhi	r5,4098
1000b8dc:	1009883a 	mov	r4,r2
1000b8e0:	2954c204 	addi	r5,r5,21256
1000b8e4:	00bfffc4 	movi	r2,-1
1000b8e8:	d8800315 	stw	r2,12(sp)
1000b8ec:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b8f0:	00c00044 	movi	r3,1
1000b8f4:	d9000017 	ldw	r4,0(sp)
1000b8f8:	008400b4 	movhi	r2,4098
1000b8fc:	d8c00315 	stw	r3,12(sp)
1000b900:	d8c00f04 	addi	r3,sp,60
1000b904:	1095c604 	addi	r2,r2,22296
1000b908:	01800204 	movi	r6,8
1000b90c:	180b883a 	mov	r5,r3
1000b910:	d8800f15 	stw	r2,60(sp)
1000b914:	00000000 	call	10000000 <__reset>
1000b918:	d9800017 	ldw	r6,0(sp)
1000b91c:	d9400117 	ldw	r5,4(sp)
1000b920:	31000104 	addi	r4,r6,4
1000b924:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b928:	d9000f04 	addi	r4,sp,60
1000b92c:	000cba00 	call	1000cba0 <_ZNSt12out_of_rangeD1Ev>
1000b930:	d9000204 	addi	r4,sp,8
1000b934:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000b938:	dfc01217 	ldw	ra,72(sp)
1000b93c:	df001117 	ldw	fp,68(sp)
1000b940:	dec01304 	addi	sp,sp,76
1000b944:	f800283a 	ret
1000b948:	d8800417 	ldw	r2,16(sp)
1000b94c:	d9000f04 	addi	r4,sp,60
1000b950:	d8800015 	stw	r2,0(sp)
1000b954:	000cba00 	call	1000cba0 <_ZNSt12out_of_rangeD1Ev>
1000b958:	d9000017 	ldw	r4,0(sp)
1000b95c:	00bfffc4 	movi	r2,-1
1000b960:	d8800315 	stw	r2,12(sp)
1000b964:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000b968 <_ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b968:	00c400b4 	movhi	r3,4098
1000b96c:	deffed04 	addi	sp,sp,-76
1000b970:	18d14884 	addi	r3,r3,17698
1000b974:	01840074 	movhi	r6,4097
1000b978:	00840074 	movhi	r2,4097
1000b97c:	31a26504 	addi	r6,r6,-30316
1000b980:	10ae8f04 	addi	r2,r2,-17860
1000b984:	d9000015 	stw	r4,0(sp)
1000b988:	d8c00915 	stw	r3,36(sp)
1000b98c:	d9000204 	addi	r4,sp,8
1000b990:	d8c01104 	addi	r3,sp,68
1000b994:	d9800815 	stw	r6,32(sp)
1000b998:	dfc01215 	stw	ra,72(sp)
1000b99c:	d8c00a15 	stw	r3,40(sp)
1000b9a0:	d8800b15 	stw	r2,44(sp)
1000b9a4:	d9400115 	stw	r5,4(sp)
1000b9a8:	df001115 	stw	fp,68(sp)
1000b9ac:	dec00c15 	stw	sp,48(sp)
1000b9b0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000b9b4:	d8c00f04 	addi	r3,sp,60
1000b9b8:	014400b4 	movhi	r5,4098
1000b9bc:	1809883a 	mov	r4,r3
1000b9c0:	00bfffc4 	movi	r2,-1
1000b9c4:	2954c204 	addi	r5,r5,21256
1000b9c8:	d8800315 	stw	r2,12(sp)
1000b9cc:	000a9840 	call	1000a984 <_ZNSt11logic_errorC1EPKc>
1000b9d0:	00c00044 	movi	r3,1
1000b9d4:	d9000017 	ldw	r4,0(sp)
1000b9d8:	008400b4 	movhi	r2,4098
1000b9dc:	d8c00315 	stw	r3,12(sp)
1000b9e0:	d8c00f04 	addi	r3,sp,60
1000b9e4:	1095c604 	addi	r2,r2,22296
1000b9e8:	01800204 	movi	r6,8
1000b9ec:	180b883a 	mov	r5,r3
1000b9f0:	d8800f15 	stw	r2,60(sp)
1000b9f4:	00000000 	call	10000000 <__reset>
1000b9f8:	d8800017 	ldw	r2,0(sp)
1000b9fc:	d9000117 	ldw	r4,4(sp)
1000ba00:	10c00104 	addi	r3,r2,4
1000ba04:	d8c00115 	stw	r3,4(sp)
1000ba08:	00000000 	call	10000000 <__reset>
1000ba0c:	d9800017 	ldw	r6,0(sp)
1000ba10:	d9000117 	ldw	r4,4(sp)
1000ba14:	100b883a 	mov	r5,r2
1000ba18:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000ba1c:	d9000f04 	addi	r4,sp,60
1000ba20:	000cba00 	call	1000cba0 <_ZNSt12out_of_rangeD1Ev>
1000ba24:	d9000204 	addi	r4,sp,8
1000ba28:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000ba2c:	dfc01217 	ldw	ra,72(sp)
1000ba30:	df001117 	ldw	fp,68(sp)
1000ba34:	dec01304 	addi	sp,sp,76
1000ba38:	f800283a 	ret
1000ba3c:	d8800417 	ldw	r2,16(sp)
1000ba40:	d9000f04 	addi	r4,sp,60
1000ba44:	d8800015 	stw	r2,0(sp)
1000ba48:	000cba00 	call	1000cba0 <_ZNSt12out_of_rangeD1Ev>
1000ba4c:	d9000017 	ldw	r4,0(sp)
1000ba50:	00bfffc4 	movi	r2,-1
1000ba54:	d8800315 	stw	r2,12(sp)
1000ba58:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000ba5c <_ZGTtNSt12out_of_rangeD1Ev>:
1000ba5c:	21000104 	addi	r4,r4,4
1000ba60:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000ba64 <_ZGTtNSt12out_of_rangeD0Ev>:
1000ba64:	defffe04 	addi	sp,sp,-8
1000ba68:	dc000015 	stw	r16,0(sp)
1000ba6c:	2021883a 	mov	r16,r4
1000ba70:	21000104 	addi	r4,r4,4
1000ba74:	dfc00115 	stw	ra,4(sp)
1000ba78:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000ba7c:	8009883a 	mov	r4,r16
1000ba80:	dfc00117 	ldw	ra,4(sp)
1000ba84:	dc000017 	ldw	r16,0(sp)
1000ba88:	dec00204 	addi	sp,sp,8
1000ba8c:	00000001 	jmpi	10000000 <__reset>

1000ba90 <_ZGTtNSt13runtime_errorC1EPKc>:
1000ba90:	00c400b4 	movhi	r3,4098
1000ba94:	deffed04 	addi	sp,sp,-76
1000ba98:	18d14a04 	addi	r3,r3,17704
1000ba9c:	01840074 	movhi	r6,4097
1000baa0:	00840074 	movhi	r2,4097
1000baa4:	31a26504 	addi	r6,r6,-30316
1000baa8:	10aed104 	addi	r2,r2,-17596
1000baac:	d9000015 	stw	r4,0(sp)
1000bab0:	d8c00915 	stw	r3,36(sp)
1000bab4:	d9000204 	addi	r4,sp,8
1000bab8:	d8c01104 	addi	r3,sp,68
1000babc:	d9800815 	stw	r6,32(sp)
1000bac0:	dfc01215 	stw	ra,72(sp)
1000bac4:	d8c00a15 	stw	r3,40(sp)
1000bac8:	d8800b15 	stw	r2,44(sp)
1000bacc:	d9400115 	stw	r5,4(sp)
1000bad0:	df001115 	stw	fp,68(sp)
1000bad4:	dec00c15 	stw	sp,48(sp)
1000bad8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000badc:	d8800f04 	addi	r2,sp,60
1000bae0:	014400b4 	movhi	r5,4098
1000bae4:	1009883a 	mov	r4,r2
1000bae8:	2954c204 	addi	r5,r5,21256
1000baec:	00bfffc4 	movi	r2,-1
1000baf0:	d8800315 	stw	r2,12(sp)
1000baf4:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000baf8:	00800044 	movi	r2,1
1000bafc:	d9000017 	ldw	r4,0(sp)
1000bb00:	d8800315 	stw	r2,12(sp)
1000bb04:	d8800f04 	addi	r2,sp,60
1000bb08:	01800204 	movi	r6,8
1000bb0c:	100b883a 	mov	r5,r2
1000bb10:	00000000 	call	10000000 <__reset>
1000bb14:	d9800017 	ldw	r6,0(sp)
1000bb18:	d9400117 	ldw	r5,4(sp)
1000bb1c:	31000104 	addi	r4,r6,4
1000bb20:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bb24:	d9000f04 	addi	r4,sp,60
1000bb28:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000bb2c:	d9000204 	addi	r4,sp,8
1000bb30:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000bb34:	dfc01217 	ldw	ra,72(sp)
1000bb38:	df001117 	ldw	fp,68(sp)
1000bb3c:	dec01304 	addi	sp,sp,76
1000bb40:	f800283a 	ret
1000bb44:	d8800417 	ldw	r2,16(sp)
1000bb48:	d9000f04 	addi	r4,sp,60
1000bb4c:	d8800015 	stw	r2,0(sp)
1000bb50:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000bb54:	d9000017 	ldw	r4,0(sp)
1000bb58:	00bfffc4 	movi	r2,-1
1000bb5c:	d8800315 	stw	r2,12(sp)
1000bb60:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000bb64 <_ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bb64:	00c400b4 	movhi	r3,4098
1000bb68:	deffed04 	addi	sp,sp,-76
1000bb6c:	18d14b84 	addi	r3,r3,17710
1000bb70:	01840074 	movhi	r6,4097
1000bb74:	00840074 	movhi	r2,4097
1000bb78:	31a26504 	addi	r6,r6,-30316
1000bb7c:	10af0b04 	addi	r2,r2,-17364
1000bb80:	d9000015 	stw	r4,0(sp)
1000bb84:	d8c00915 	stw	r3,36(sp)
1000bb88:	d9000204 	addi	r4,sp,8
1000bb8c:	d8c01104 	addi	r3,sp,68
1000bb90:	d9800815 	stw	r6,32(sp)
1000bb94:	dfc01215 	stw	ra,72(sp)
1000bb98:	d8c00a15 	stw	r3,40(sp)
1000bb9c:	d8800b15 	stw	r2,44(sp)
1000bba0:	d9400115 	stw	r5,4(sp)
1000bba4:	df001115 	stw	fp,68(sp)
1000bba8:	dec00c15 	stw	sp,48(sp)
1000bbac:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000bbb0:	d8c00f04 	addi	r3,sp,60
1000bbb4:	014400b4 	movhi	r5,4098
1000bbb8:	1809883a 	mov	r4,r3
1000bbbc:	00bfffc4 	movi	r2,-1
1000bbc0:	2954c204 	addi	r5,r5,21256
1000bbc4:	d8800315 	stw	r2,12(sp)
1000bbc8:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000bbcc:	d9000017 	ldw	r4,0(sp)
1000bbd0:	d8c00f04 	addi	r3,sp,60
1000bbd4:	00800044 	movi	r2,1
1000bbd8:	01800204 	movi	r6,8
1000bbdc:	180b883a 	mov	r5,r3
1000bbe0:	d8800315 	stw	r2,12(sp)
1000bbe4:	00000000 	call	10000000 <__reset>
1000bbe8:	d8800017 	ldw	r2,0(sp)
1000bbec:	d9000117 	ldw	r4,4(sp)
1000bbf0:	10c00104 	addi	r3,r2,4
1000bbf4:	d8c00115 	stw	r3,4(sp)
1000bbf8:	00000000 	call	10000000 <__reset>
1000bbfc:	d9800017 	ldw	r6,0(sp)
1000bc00:	d9000117 	ldw	r4,4(sp)
1000bc04:	100b883a 	mov	r5,r2
1000bc08:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bc0c:	d9000f04 	addi	r4,sp,60
1000bc10:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000bc14:	d9000204 	addi	r4,sp,8
1000bc18:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000bc1c:	dfc01217 	ldw	ra,72(sp)
1000bc20:	df001117 	ldw	fp,68(sp)
1000bc24:	dec01304 	addi	sp,sp,76
1000bc28:	f800283a 	ret
1000bc2c:	d8800417 	ldw	r2,16(sp)
1000bc30:	d9000f04 	addi	r4,sp,60
1000bc34:	d8800015 	stw	r2,0(sp)
1000bc38:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000bc3c:	d9000017 	ldw	r4,0(sp)
1000bc40:	00bfffc4 	movi	r2,-1
1000bc44:	d8800315 	stw	r2,12(sp)
1000bc48:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000bc4c <_ZGTtNSt13runtime_errorD1Ev>:
1000bc4c:	21000104 	addi	r4,r4,4
1000bc50:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000bc54 <_ZGTtNSt13runtime_errorD0Ev>:
1000bc54:	defffe04 	addi	sp,sp,-8
1000bc58:	dc000015 	stw	r16,0(sp)
1000bc5c:	2021883a 	mov	r16,r4
1000bc60:	21000104 	addi	r4,r4,4
1000bc64:	dfc00115 	stw	ra,4(sp)
1000bc68:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000bc6c:	8009883a 	mov	r4,r16
1000bc70:	dfc00117 	ldw	ra,4(sp)
1000bc74:	dc000017 	ldw	r16,0(sp)
1000bc78:	dec00204 	addi	sp,sp,8
1000bc7c:	00000001 	jmpi	10000000 <__reset>

1000bc80 <_ZGTtNKSt13runtime_error4whatEv>:
1000bc80:	21000104 	addi	r4,r4,4
1000bc84:	00000001 	jmpi	10000000 <__reset>

1000bc88 <_ZGTtNSt11range_errorC1EPKc>:
1000bc88:	00c400b4 	movhi	r3,4098
1000bc8c:	deffed04 	addi	sp,sp,-76
1000bc90:	18d14d04 	addi	r3,r3,17716
1000bc94:	01840074 	movhi	r6,4097
1000bc98:	00840074 	movhi	r2,4097
1000bc9c:	31a26504 	addi	r6,r6,-30316
1000bca0:	10af5204 	addi	r2,r2,-17080
1000bca4:	d9000015 	stw	r4,0(sp)
1000bca8:	d8c00915 	stw	r3,36(sp)
1000bcac:	d9000204 	addi	r4,sp,8
1000bcb0:	d8c01104 	addi	r3,sp,68
1000bcb4:	d9800815 	stw	r6,32(sp)
1000bcb8:	d8c00a15 	stw	r3,40(sp)
1000bcbc:	dfc01215 	stw	ra,72(sp)
1000bcc0:	d8800b15 	stw	r2,44(sp)
1000bcc4:	d9400115 	stw	r5,4(sp)
1000bcc8:	df001115 	stw	fp,68(sp)
1000bccc:	dec00c15 	stw	sp,48(sp)
1000bcd0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000bcd4:	d8800f04 	addi	r2,sp,60
1000bcd8:	014400b4 	movhi	r5,4098
1000bcdc:	1009883a 	mov	r4,r2
1000bce0:	2954c204 	addi	r5,r5,21256
1000bce4:	00bfffc4 	movi	r2,-1
1000bce8:	d8800315 	stw	r2,12(sp)
1000bcec:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000bcf0:	00c00044 	movi	r3,1
1000bcf4:	d9000017 	ldw	r4,0(sp)
1000bcf8:	008400b4 	movhi	r2,4098
1000bcfc:	d8c00315 	stw	r3,12(sp)
1000bd00:	d8c00f04 	addi	r3,sp,60
1000bd04:	1095d004 	addi	r2,r2,22336
1000bd08:	01800204 	movi	r6,8
1000bd0c:	180b883a 	mov	r5,r3
1000bd10:	d8800f15 	stw	r2,60(sp)
1000bd14:	00000000 	call	10000000 <__reset>
1000bd18:	d9800017 	ldw	r6,0(sp)
1000bd1c:	d9400117 	ldw	r5,4(sp)
1000bd20:	31000104 	addi	r4,r6,4
1000bd24:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bd28:	d9000f04 	addi	r4,sp,60
1000bd2c:	000cc700 	call	1000cc70 <_ZNSt11range_errorD1Ev>
1000bd30:	d9000204 	addi	r4,sp,8
1000bd34:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000bd38:	dfc01217 	ldw	ra,72(sp)
1000bd3c:	df001117 	ldw	fp,68(sp)
1000bd40:	dec01304 	addi	sp,sp,76
1000bd44:	f800283a 	ret
1000bd48:	d8800417 	ldw	r2,16(sp)
1000bd4c:	d9000f04 	addi	r4,sp,60
1000bd50:	d8800015 	stw	r2,0(sp)
1000bd54:	000cc700 	call	1000cc70 <_ZNSt11range_errorD1Ev>
1000bd58:	d9000017 	ldw	r4,0(sp)
1000bd5c:	00bfffc4 	movi	r2,-1
1000bd60:	d8800315 	stw	r2,12(sp)
1000bd64:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000bd68 <_ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bd68:	00c400b4 	movhi	r3,4098
1000bd6c:	deffed04 	addi	sp,sp,-76
1000bd70:	18d14e84 	addi	r3,r3,17722
1000bd74:	01840074 	movhi	r6,4097
1000bd78:	00840074 	movhi	r2,4097
1000bd7c:	31a26504 	addi	r6,r6,-30316
1000bd80:	10af8f04 	addi	r2,r2,-16836
1000bd84:	d9000015 	stw	r4,0(sp)
1000bd88:	d8c00915 	stw	r3,36(sp)
1000bd8c:	d9000204 	addi	r4,sp,8
1000bd90:	d8c01104 	addi	r3,sp,68
1000bd94:	d9800815 	stw	r6,32(sp)
1000bd98:	dfc01215 	stw	ra,72(sp)
1000bd9c:	d8c00a15 	stw	r3,40(sp)
1000bda0:	d8800b15 	stw	r2,44(sp)
1000bda4:	d9400115 	stw	r5,4(sp)
1000bda8:	df001115 	stw	fp,68(sp)
1000bdac:	dec00c15 	stw	sp,48(sp)
1000bdb0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000bdb4:	d8c00f04 	addi	r3,sp,60
1000bdb8:	014400b4 	movhi	r5,4098
1000bdbc:	1809883a 	mov	r4,r3
1000bdc0:	00bfffc4 	movi	r2,-1
1000bdc4:	2954c204 	addi	r5,r5,21256
1000bdc8:	d8800315 	stw	r2,12(sp)
1000bdcc:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000bdd0:	00c00044 	movi	r3,1
1000bdd4:	d9000017 	ldw	r4,0(sp)
1000bdd8:	008400b4 	movhi	r2,4098
1000bddc:	d8c00315 	stw	r3,12(sp)
1000bde0:	d8c00f04 	addi	r3,sp,60
1000bde4:	1095d004 	addi	r2,r2,22336
1000bde8:	01800204 	movi	r6,8
1000bdec:	180b883a 	mov	r5,r3
1000bdf0:	d8800f15 	stw	r2,60(sp)
1000bdf4:	00000000 	call	10000000 <__reset>
1000bdf8:	d8800017 	ldw	r2,0(sp)
1000bdfc:	d9000117 	ldw	r4,4(sp)
1000be00:	10c00104 	addi	r3,r2,4
1000be04:	d8c00115 	stw	r3,4(sp)
1000be08:	00000000 	call	10000000 <__reset>
1000be0c:	d9800017 	ldw	r6,0(sp)
1000be10:	d9000117 	ldw	r4,4(sp)
1000be14:	100b883a 	mov	r5,r2
1000be18:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000be1c:	d9000f04 	addi	r4,sp,60
1000be20:	000cc700 	call	1000cc70 <_ZNSt11range_errorD1Ev>
1000be24:	d9000204 	addi	r4,sp,8
1000be28:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000be2c:	dfc01217 	ldw	ra,72(sp)
1000be30:	df001117 	ldw	fp,68(sp)
1000be34:	dec01304 	addi	sp,sp,76
1000be38:	f800283a 	ret
1000be3c:	d8800417 	ldw	r2,16(sp)
1000be40:	d9000f04 	addi	r4,sp,60
1000be44:	d8800015 	stw	r2,0(sp)
1000be48:	000cc700 	call	1000cc70 <_ZNSt11range_errorD1Ev>
1000be4c:	d9000017 	ldw	r4,0(sp)
1000be50:	00bfffc4 	movi	r2,-1
1000be54:	d8800315 	stw	r2,12(sp)
1000be58:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000be5c <_ZGTtNSt11range_errorD1Ev>:
1000be5c:	21000104 	addi	r4,r4,4
1000be60:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000be64 <_ZGTtNSt11range_errorD0Ev>:
1000be64:	defffe04 	addi	sp,sp,-8
1000be68:	dc000015 	stw	r16,0(sp)
1000be6c:	2021883a 	mov	r16,r4
1000be70:	21000104 	addi	r4,r4,4
1000be74:	dfc00115 	stw	ra,4(sp)
1000be78:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000be7c:	8009883a 	mov	r4,r16
1000be80:	dfc00117 	ldw	ra,4(sp)
1000be84:	dc000017 	ldw	r16,0(sp)
1000be88:	dec00204 	addi	sp,sp,8
1000be8c:	00000001 	jmpi	10000000 <__reset>

1000be90 <_ZGTtNSt14overflow_errorC1EPKc>:
1000be90:	00c400b4 	movhi	r3,4098
1000be94:	deffed04 	addi	sp,sp,-76
1000be98:	18d15004 	addi	r3,r3,17728
1000be9c:	01840074 	movhi	r6,4097
1000bea0:	00840074 	movhi	r2,4097
1000bea4:	31a26504 	addi	r6,r6,-30316
1000bea8:	10afd404 	addi	r2,r2,-16560
1000beac:	d9000015 	stw	r4,0(sp)
1000beb0:	d8c00915 	stw	r3,36(sp)
1000beb4:	d9000204 	addi	r4,sp,8
1000beb8:	d8c01104 	addi	r3,sp,68
1000bebc:	d9800815 	stw	r6,32(sp)
1000bec0:	d8c00a15 	stw	r3,40(sp)
1000bec4:	dfc01215 	stw	ra,72(sp)
1000bec8:	d8800b15 	stw	r2,44(sp)
1000becc:	d9400115 	stw	r5,4(sp)
1000bed0:	df001115 	stw	fp,68(sp)
1000bed4:	dec00c15 	stw	sp,48(sp)
1000bed8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000bedc:	d8800f04 	addi	r2,sp,60
1000bee0:	014400b4 	movhi	r5,4098
1000bee4:	1009883a 	mov	r4,r2
1000bee8:	2954c204 	addi	r5,r5,21256
1000beec:	00bfffc4 	movi	r2,-1
1000bef0:	d8800315 	stw	r2,12(sp)
1000bef4:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000bef8:	00c00044 	movi	r3,1
1000befc:	d9000017 	ldw	r4,0(sp)
1000bf00:	008400b4 	movhi	r2,4098
1000bf04:	d8c00315 	stw	r3,12(sp)
1000bf08:	d8c00f04 	addi	r3,sp,60
1000bf0c:	1095d504 	addi	r2,r2,22356
1000bf10:	01800204 	movi	r6,8
1000bf14:	180b883a 	mov	r5,r3
1000bf18:	d8800f15 	stw	r2,60(sp)
1000bf1c:	00000000 	call	10000000 <__reset>
1000bf20:	d9800017 	ldw	r6,0(sp)
1000bf24:	d9400117 	ldw	r5,4(sp)
1000bf28:	31000104 	addi	r4,r6,4
1000bf2c:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bf30:	d9000f04 	addi	r4,sp,60
1000bf34:	000ccb40 	call	1000ccb4 <_ZNSt14overflow_errorD1Ev>
1000bf38:	d9000204 	addi	r4,sp,8
1000bf3c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000bf40:	dfc01217 	ldw	ra,72(sp)
1000bf44:	df001117 	ldw	fp,68(sp)
1000bf48:	dec01304 	addi	sp,sp,76
1000bf4c:	f800283a 	ret
1000bf50:	d8800417 	ldw	r2,16(sp)
1000bf54:	d9000f04 	addi	r4,sp,60
1000bf58:	d8800015 	stw	r2,0(sp)
1000bf5c:	000ccb40 	call	1000ccb4 <_ZNSt14overflow_errorD1Ev>
1000bf60:	d9000017 	ldw	r4,0(sp)
1000bf64:	00bfffc4 	movi	r2,-1
1000bf68:	d8800315 	stw	r2,12(sp)
1000bf6c:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000bf70 <_ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bf70:	00c400b4 	movhi	r3,4098
1000bf74:	deffed04 	addi	sp,sp,-76
1000bf78:	18d15184 	addi	r3,r3,17734
1000bf7c:	01840074 	movhi	r6,4097
1000bf80:	00840074 	movhi	r2,4097
1000bf84:	31a26504 	addi	r6,r6,-30316
1000bf88:	10b01104 	addi	r2,r2,-16316
1000bf8c:	d9000015 	stw	r4,0(sp)
1000bf90:	d8c00915 	stw	r3,36(sp)
1000bf94:	d9000204 	addi	r4,sp,8
1000bf98:	d8c01104 	addi	r3,sp,68
1000bf9c:	d9800815 	stw	r6,32(sp)
1000bfa0:	dfc01215 	stw	ra,72(sp)
1000bfa4:	d8c00a15 	stw	r3,40(sp)
1000bfa8:	d8800b15 	stw	r2,44(sp)
1000bfac:	d9400115 	stw	r5,4(sp)
1000bfb0:	df001115 	stw	fp,68(sp)
1000bfb4:	dec00c15 	stw	sp,48(sp)
1000bfb8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000bfbc:	d8c00f04 	addi	r3,sp,60
1000bfc0:	014400b4 	movhi	r5,4098
1000bfc4:	1809883a 	mov	r4,r3
1000bfc8:	00bfffc4 	movi	r2,-1
1000bfcc:	2954c204 	addi	r5,r5,21256
1000bfd0:	d8800315 	stw	r2,12(sp)
1000bfd4:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000bfd8:	00c00044 	movi	r3,1
1000bfdc:	d9000017 	ldw	r4,0(sp)
1000bfe0:	008400b4 	movhi	r2,4098
1000bfe4:	d8c00315 	stw	r3,12(sp)
1000bfe8:	d8c00f04 	addi	r3,sp,60
1000bfec:	1095d504 	addi	r2,r2,22356
1000bff0:	01800204 	movi	r6,8
1000bff4:	180b883a 	mov	r5,r3
1000bff8:	d8800f15 	stw	r2,60(sp)
1000bffc:	00000000 	call	10000000 <__reset>
1000c000:	d8800017 	ldw	r2,0(sp)
1000c004:	d9000117 	ldw	r4,4(sp)
1000c008:	10c00104 	addi	r3,r2,4
1000c00c:	d8c00115 	stw	r3,4(sp)
1000c010:	00000000 	call	10000000 <__reset>
1000c014:	d9800017 	ldw	r6,0(sp)
1000c018:	d9000117 	ldw	r4,4(sp)
1000c01c:	100b883a 	mov	r5,r2
1000c020:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c024:	d9000f04 	addi	r4,sp,60
1000c028:	000ccb40 	call	1000ccb4 <_ZNSt14overflow_errorD1Ev>
1000c02c:	d9000204 	addi	r4,sp,8
1000c030:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000c034:	dfc01217 	ldw	ra,72(sp)
1000c038:	df001117 	ldw	fp,68(sp)
1000c03c:	dec01304 	addi	sp,sp,76
1000c040:	f800283a 	ret
1000c044:	d8800417 	ldw	r2,16(sp)
1000c048:	d9000f04 	addi	r4,sp,60
1000c04c:	d8800015 	stw	r2,0(sp)
1000c050:	000ccb40 	call	1000ccb4 <_ZNSt14overflow_errorD1Ev>
1000c054:	d9000017 	ldw	r4,0(sp)
1000c058:	00bfffc4 	movi	r2,-1
1000c05c:	d8800315 	stw	r2,12(sp)
1000c060:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000c064 <_ZGTtNSt14overflow_errorD1Ev>:
1000c064:	21000104 	addi	r4,r4,4
1000c068:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000c06c <_ZGTtNSt14overflow_errorD0Ev>:
1000c06c:	defffe04 	addi	sp,sp,-8
1000c070:	dc000015 	stw	r16,0(sp)
1000c074:	2021883a 	mov	r16,r4
1000c078:	21000104 	addi	r4,r4,4
1000c07c:	dfc00115 	stw	ra,4(sp)
1000c080:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000c084:	8009883a 	mov	r4,r16
1000c088:	dfc00117 	ldw	ra,4(sp)
1000c08c:	dc000017 	ldw	r16,0(sp)
1000c090:	dec00204 	addi	sp,sp,8
1000c094:	00000001 	jmpi	10000000 <__reset>

1000c098 <_ZGTtNSt15underflow_errorC1EPKc>:
1000c098:	00c400b4 	movhi	r3,4098
1000c09c:	deffed04 	addi	sp,sp,-76
1000c0a0:	18d15304 	addi	r3,r3,17740
1000c0a4:	01840074 	movhi	r6,4097
1000c0a8:	00840074 	movhi	r2,4097
1000c0ac:	31a26504 	addi	r6,r6,-30316
1000c0b0:	10b05604 	addi	r2,r2,-16040
1000c0b4:	d9000015 	stw	r4,0(sp)
1000c0b8:	d8c00915 	stw	r3,36(sp)
1000c0bc:	d9000204 	addi	r4,sp,8
1000c0c0:	d8c01104 	addi	r3,sp,68
1000c0c4:	d9800815 	stw	r6,32(sp)
1000c0c8:	d8c00a15 	stw	r3,40(sp)
1000c0cc:	dfc01215 	stw	ra,72(sp)
1000c0d0:	d8800b15 	stw	r2,44(sp)
1000c0d4:	d9400115 	stw	r5,4(sp)
1000c0d8:	df001115 	stw	fp,68(sp)
1000c0dc:	dec00c15 	stw	sp,48(sp)
1000c0e0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000c0e4:	d8800f04 	addi	r2,sp,60
1000c0e8:	014400b4 	movhi	r5,4098
1000c0ec:	1009883a 	mov	r4,r2
1000c0f0:	2954c204 	addi	r5,r5,21256
1000c0f4:	00bfffc4 	movi	r2,-1
1000c0f8:	d8800315 	stw	r2,12(sp)
1000c0fc:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000c100:	00c00044 	movi	r3,1
1000c104:	d9000017 	ldw	r4,0(sp)
1000c108:	008400b4 	movhi	r2,4098
1000c10c:	d8c00315 	stw	r3,12(sp)
1000c110:	d8c00f04 	addi	r3,sp,60
1000c114:	1095da04 	addi	r2,r2,22376
1000c118:	01800204 	movi	r6,8
1000c11c:	180b883a 	mov	r5,r3
1000c120:	d8800f15 	stw	r2,60(sp)
1000c124:	00000000 	call	10000000 <__reset>
1000c128:	d9800017 	ldw	r6,0(sp)
1000c12c:	d9400117 	ldw	r5,4(sp)
1000c130:	31000104 	addi	r4,r6,4
1000c134:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c138:	d9000f04 	addi	r4,sp,60
1000c13c:	000ccf80 	call	1000ccf8 <_ZNSt15underflow_errorD1Ev>
1000c140:	d9000204 	addi	r4,sp,8
1000c144:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000c148:	dfc01217 	ldw	ra,72(sp)
1000c14c:	df001117 	ldw	fp,68(sp)
1000c150:	dec01304 	addi	sp,sp,76
1000c154:	f800283a 	ret
1000c158:	d8800417 	ldw	r2,16(sp)
1000c15c:	d9000f04 	addi	r4,sp,60
1000c160:	d8800015 	stw	r2,0(sp)
1000c164:	000ccf80 	call	1000ccf8 <_ZNSt15underflow_errorD1Ev>
1000c168:	d9000017 	ldw	r4,0(sp)
1000c16c:	00bfffc4 	movi	r2,-1
1000c170:	d8800315 	stw	r2,12(sp)
1000c174:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000c178 <_ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c178:	00c400b4 	movhi	r3,4098
1000c17c:	deffed04 	addi	sp,sp,-76
1000c180:	18d15484 	addi	r3,r3,17746
1000c184:	01840074 	movhi	r6,4097
1000c188:	00840074 	movhi	r2,4097
1000c18c:	31a26504 	addi	r6,r6,-30316
1000c190:	10b09304 	addi	r2,r2,-15796
1000c194:	d9000015 	stw	r4,0(sp)
1000c198:	d8c00915 	stw	r3,36(sp)
1000c19c:	d9000204 	addi	r4,sp,8
1000c1a0:	d8c01104 	addi	r3,sp,68
1000c1a4:	d9800815 	stw	r6,32(sp)
1000c1a8:	dfc01215 	stw	ra,72(sp)
1000c1ac:	d8c00a15 	stw	r3,40(sp)
1000c1b0:	d8800b15 	stw	r2,44(sp)
1000c1b4:	d9400115 	stw	r5,4(sp)
1000c1b8:	df001115 	stw	fp,68(sp)
1000c1bc:	dec00c15 	stw	sp,48(sp)
1000c1c0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000c1c4:	d8c00f04 	addi	r3,sp,60
1000c1c8:	014400b4 	movhi	r5,4098
1000c1cc:	1809883a 	mov	r4,r3
1000c1d0:	00bfffc4 	movi	r2,-1
1000c1d4:	2954c204 	addi	r5,r5,21256
1000c1d8:	d8800315 	stw	r2,12(sp)
1000c1dc:	000aaf00 	call	1000aaf0 <_ZNSt13runtime_errorC1EPKc>
1000c1e0:	00c00044 	movi	r3,1
1000c1e4:	d9000017 	ldw	r4,0(sp)
1000c1e8:	008400b4 	movhi	r2,4098
1000c1ec:	d8c00315 	stw	r3,12(sp)
1000c1f0:	d8c00f04 	addi	r3,sp,60
1000c1f4:	1095da04 	addi	r2,r2,22376
1000c1f8:	01800204 	movi	r6,8
1000c1fc:	180b883a 	mov	r5,r3
1000c200:	d8800f15 	stw	r2,60(sp)
1000c204:	00000000 	call	10000000 <__reset>
1000c208:	d8800017 	ldw	r2,0(sp)
1000c20c:	d9000117 	ldw	r4,4(sp)
1000c210:	10c00104 	addi	r3,r2,4
1000c214:	d8c00115 	stw	r3,4(sp)
1000c218:	00000000 	call	10000000 <__reset>
1000c21c:	d9800017 	ldw	r6,0(sp)
1000c220:	d9000117 	ldw	r4,4(sp)
1000c224:	100b883a 	mov	r5,r2
1000c228:	000aef80 	call	1000aef8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c22c:	d9000f04 	addi	r4,sp,60
1000c230:	000ccf80 	call	1000ccf8 <_ZNSt15underflow_errorD1Ev>
1000c234:	d9000204 	addi	r4,sp,8
1000c238:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000c23c:	dfc01217 	ldw	ra,72(sp)
1000c240:	df001117 	ldw	fp,68(sp)
1000c244:	dec01304 	addi	sp,sp,76
1000c248:	f800283a 	ret
1000c24c:	d8800417 	ldw	r2,16(sp)
1000c250:	d9000f04 	addi	r4,sp,60
1000c254:	d8800015 	stw	r2,0(sp)
1000c258:	000ccf80 	call	1000ccf8 <_ZNSt15underflow_errorD1Ev>
1000c25c:	d9000017 	ldw	r4,0(sp)
1000c260:	00bfffc4 	movi	r2,-1
1000c264:	d8800315 	stw	r2,12(sp)
1000c268:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000c26c <_ZGTtNSt15underflow_errorD1Ev>:
1000c26c:	21000104 	addi	r4,r4,4
1000c270:	000b03c1 	jmpi	1000b03c <_Z20_txnal_cow_string_D1Pv>

1000c274 <_ZGTtNSt15underflow_errorD0Ev>:
1000c274:	defffe04 	addi	sp,sp,-8
1000c278:	dc000015 	stw	r16,0(sp)
1000c27c:	2021883a 	mov	r16,r4
1000c280:	21000104 	addi	r4,r4,4
1000c284:	dfc00115 	stw	ra,4(sp)
1000c288:	000b03c0 	call	1000b03c <_Z20_txnal_cow_string_D1Pv>
1000c28c:	8009883a 	mov	r4,r16
1000c290:	dfc00117 	ldw	ra,4(sp)
1000c294:	dc000017 	ldw	r16,0(sp)
1000c298:	dec00204 	addi	sp,sp,8
1000c29c:	00000001 	jmpi	10000000 <__reset>

1000c2a0 <__cxa_call_terminate>:
1000c2a0:	defffe04 	addi	sp,sp,-8
1000c2a4:	dfc00115 	stw	ra,4(sp)
1000c2a8:	dc000015 	stw	r16,0(sp)
1000c2ac:	20000d26 	beq	r4,zero,1000c2e4 <__cxa_call_terminate+0x44>
1000c2b0:	2021883a 	mov	r16,r4
1000c2b4:	0007f400 	call	10007f40 <__cxa_begin_catch>
1000c2b8:	80800017 	ldw	r2,0(r16)
1000c2bc:	81000117 	ldw	r4,4(r16)
1000c2c0:	00ef3574 	movhi	r3,48341
1000c2c4:	18f54004 	addi	r3,r3,-11008
1000c2c8:	016e2cb4 	movhi	r5,47282
1000c2cc:	296aaf04 	addi	r5,r5,-21828
1000c2d0:	10c7883a 	add	r3,r2,r3
1000c2d4:	1885803a 	cmpltu	r2,r3,r2
1000c2d8:	2149883a 	add	r4,r4,r5
1000c2dc:	1105883a 	add	r2,r2,r4
1000c2e0:	10000126 	beq	r2,zero,1000c2e8 <__cxa_call_terminate+0x48>
1000c2e4:	00081a00 	call	100081a0 <_ZSt9terminatev>
1000c2e8:	18c000a8 	cmpgeui	r3,r3,2
1000c2ec:	183ffd1e 	bne	r3,zero,1000c2e4 <__cxa_call_terminate+0x44>
1000c2f0:	813ff817 	ldw	r4,-32(r16)
1000c2f4:	00080d80 	call	100080d8 <_ZN10__cxxabiv111__terminateEPFvvE>

1000c2f8 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
1000c2f8:	008400b4 	movhi	r2,4098
1000c2fc:	1094d504 	addi	r2,r2,21332
1000c300:	20800015 	stw	r2,0(r4)
1000c304:	000c7a01 	jmpi	1000c7a0 <_ZN10__cxxabiv117__class_type_infoD1Ev>

1000c308 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
1000c308:	defffe04 	addi	sp,sp,-8
1000c30c:	008400b4 	movhi	r2,4098
1000c310:	dc000015 	stw	r16,0(sp)
1000c314:	dfc00115 	stw	ra,4(sp)
1000c318:	1094d504 	addi	r2,r2,21332
1000c31c:	20800015 	stw	r2,0(r4)
1000c320:	2021883a 	mov	r16,r4
1000c324:	000c7a00 	call	1000c7a0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
1000c328:	01400304 	movi	r5,12
1000c32c:	8009883a 	mov	r4,r16
1000c330:	dfc00117 	ldw	ra,4(sp)
1000c334:	dc000017 	ldw	r16,0(sp)
1000c338:	dec00204 	addi	sp,sp,8
1000c33c:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c340 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
1000c340:	defffa04 	addi	sp,sp,-24
1000c344:	dc000215 	stw	r16,8(sp)
1000c348:	dc000617 	ldw	r16,24(sp)
1000c34c:	dc800415 	stw	r18,16(sp)
1000c350:	dc400315 	stw	r17,12(sp)
1000c354:	dfc00515 	stw	ra,20(sp)
1000c358:	2023883a 	mov	r17,r4
1000c35c:	2825883a 	mov	r18,r5
1000c360:	81800b26 	beq	r16,r6,1000c390 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
1000c364:	89000217 	ldw	r4,8(r17)
1000c368:	900b883a 	mov	r5,r18
1000c36c:	20800017 	ldw	r2,0(r4)
1000c370:	dc000615 	stw	r16,24(sp)
1000c374:	10800817 	ldw	r2,32(r2)
1000c378:	dfc00517 	ldw	ra,20(sp)
1000c37c:	dc800417 	ldw	r18,16(sp)
1000c380:	dc400317 	ldw	r17,12(sp)
1000c384:	dc000217 	ldw	r16,8(sp)
1000c388:	dec00604 	addi	sp,sp,24
1000c38c:	1000683a 	jmp	r2
1000c390:	21000117 	ldw	r4,4(r4)
1000c394:	39400117 	ldw	r5,4(r7)
1000c398:	21400926 	beq	r4,r5,1000c3c0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
1000c39c:	20800007 	ldb	r2,0(r4)
1000c3a0:	10800aa0 	cmpeqi	r2,r2,42
1000c3a4:	103fef1e 	bne	r2,zero,1000c364 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000c3a8:	d9c00115 	stw	r7,4(sp)
1000c3ac:	d9800015 	stw	r6,0(sp)
1000c3b0:	00162d40 	call	100162d4 <strcmp>
1000c3b4:	d9800017 	ldw	r6,0(sp)
1000c3b8:	d9c00117 	ldw	r7,4(sp)
1000c3bc:	103fe91e 	bne	r2,zero,1000c364 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000c3c0:	00800184 	movi	r2,6
1000c3c4:	dfc00517 	ldw	ra,20(sp)
1000c3c8:	dc800417 	ldw	r18,16(sp)
1000c3cc:	dc400317 	ldw	r17,12(sp)
1000c3d0:	dc000217 	ldw	r16,8(sp)
1000c3d4:	dec00604 	addi	sp,sp,24
1000c3d8:	f800283a 	ret

1000c3dc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
1000c3dc:	defff504 	addi	sp,sp,-44
1000c3e0:	dc000215 	stw	r16,8(sp)
1000c3e4:	38800117 	ldw	r2,4(r7)
1000c3e8:	24000117 	ldw	r16,4(r4)
1000c3ec:	ddc00915 	stw	r23,36(sp)
1000c3f0:	dd400715 	stw	r21,28(sp)
1000c3f4:	dcc00515 	stw	r19,20(sp)
1000c3f8:	dc800415 	stw	r18,16(sp)
1000c3fc:	dc400315 	stw	r17,12(sp)
1000c400:	dfc00a15 	stw	ra,40(sp)
1000c404:	dd800815 	stw	r22,32(sp)
1000c408:	dd000615 	stw	r20,24(sp)
1000c40c:	2827883a 	mov	r19,r5
1000c410:	dc400b17 	ldw	r17,44(sp)
1000c414:	ddc00c17 	ldw	r23,48(sp)
1000c418:	dd400d17 	ldw	r21,52(sp)
1000c41c:	dc800e17 	ldw	r18,56(sp)
1000c420:	80802026 	beq	r16,r2,1000c4a4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000c424:	85800007 	ldb	r22,0(r16)
1000c428:	2029883a 	mov	r20,r4
1000c42c:	b0c00aa0 	cmpeqi	r3,r22,42
1000c430:	1800081e 	bne	r3,zero,1000c454 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
1000c434:	100b883a 	mov	r5,r2
1000c438:	8009883a 	mov	r4,r16
1000c43c:	d9c00115 	stw	r7,4(sp)
1000c440:	d9800015 	stw	r6,0(sp)
1000c444:	00162d40 	call	100162d4 <strcmp>
1000c448:	d9800017 	ldw	r6,0(sp)
1000c44c:	d9c00117 	ldw	r7,4(sp)
1000c450:	10001426 	beq	r2,zero,1000c4a4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000c454:	8d402926 	beq	r17,r21,1000c4fc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
1000c458:	a1000217 	ldw	r4,8(r20)
1000c45c:	980b883a 	mov	r5,r19
1000c460:	20800017 	ldw	r2,0(r4)
1000c464:	dc800e15 	stw	r18,56(sp)
1000c468:	dd400d15 	stw	r21,52(sp)
1000c46c:	ddc00c15 	stw	r23,48(sp)
1000c470:	dc400b15 	stw	r17,44(sp)
1000c474:	10800717 	ldw	r2,28(r2)
1000c478:	dfc00a17 	ldw	ra,40(sp)
1000c47c:	ddc00917 	ldw	r23,36(sp)
1000c480:	dd800817 	ldw	r22,32(sp)
1000c484:	dd400717 	ldw	r21,28(sp)
1000c488:	dd000617 	ldw	r20,24(sp)
1000c48c:	dcc00517 	ldw	r19,20(sp)
1000c490:	dc800417 	ldw	r18,16(sp)
1000c494:	dc400317 	ldw	r17,12(sp)
1000c498:	dc000217 	ldw	r16,8(sp)
1000c49c:	dec00b04 	addi	sp,sp,44
1000c4a0:	1000683a 	jmp	r2
1000c4a4:	94400015 	stw	r17,0(r18)
1000c4a8:	91800115 	stw	r6,4(r18)
1000c4ac:	98001016 	blt	r19,zero,1000c4f0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x114>
1000c4b0:	8ce3883a 	add	r17,r17,r19
1000c4b4:	ac401e26 	beq	r21,r17,1000c530 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
1000c4b8:	00800044 	movi	r2,1
1000c4bc:	90800315 	stw	r2,12(r18)
1000c4c0:	0005883a 	mov	r2,zero
1000c4c4:	dfc00a17 	ldw	ra,40(sp)
1000c4c8:	ddc00917 	ldw	r23,36(sp)
1000c4cc:	dd800817 	ldw	r22,32(sp)
1000c4d0:	dd400717 	ldw	r21,28(sp)
1000c4d4:	dd000617 	ldw	r20,24(sp)
1000c4d8:	dcc00517 	ldw	r19,20(sp)
1000c4dc:	dc800417 	ldw	r18,16(sp)
1000c4e0:	dc400317 	ldw	r17,12(sp)
1000c4e4:	dc000217 	ldw	r16,8(sp)
1000c4e8:	dec00b04 	addi	sp,sp,44
1000c4ec:	f800283a 	ret
1000c4f0:	9c7fff98 	cmpnei	r17,r19,-2
1000c4f4:	883ff21e 	bne	r17,zero,1000c4c0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000c4f8:	003fef06 	br	1000c4b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
1000c4fc:	b9400117 	ldw	r5,4(r23)
1000c500:	81400926 	beq	r16,r5,1000c528 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
1000c504:	b5800aa0 	cmpeqi	r22,r22,42
1000c508:	b03fd31e 	bne	r22,zero,1000c458 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000c50c:	8009883a 	mov	r4,r16
1000c510:	d9c00115 	stw	r7,4(sp)
1000c514:	d9800015 	stw	r6,0(sp)
1000c518:	00162d40 	call	100162d4 <strcmp>
1000c51c:	d9800017 	ldw	r6,0(sp)
1000c520:	d9c00117 	ldw	r7,4(sp)
1000c524:	103fcc1e 	bne	r2,zero,1000c458 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000c528:	91800215 	stw	r6,8(r18)
1000c52c:	003fe406 	br	1000c4c0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000c530:	00800184 	movi	r2,6
1000c534:	003fe106 	br	1000c4bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe0>

1000c538 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
1000c538:	defffb04 	addi	sp,sp,-20
1000c53c:	dcc00315 	stw	r19,12(sp)
1000c540:	dc800215 	stw	r18,8(sp)
1000c544:	dc400115 	stw	r17,4(sp)
1000c548:	dc000015 	stw	r16,0(sp)
1000c54c:	dfc00415 	stw	ra,16(sp)
1000c550:	2027883a 	mov	r19,r4
1000c554:	2821883a 	mov	r16,r5
1000c558:	3023883a 	mov	r17,r6
1000c55c:	3825883a 	mov	r18,r7
1000c560:	000c8b40 	call	1000c8b4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
1000c564:	10c03fcc 	andi	r3,r2,255
1000c568:	18000d1e 	bne	r3,zero,1000c5a0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
1000c56c:	99000217 	ldw	r4,8(r19)
1000c570:	900f883a 	mov	r7,r18
1000c574:	880d883a 	mov	r6,r17
1000c578:	20800017 	ldw	r2,0(r4)
1000c57c:	800b883a 	mov	r5,r16
1000c580:	10800617 	ldw	r2,24(r2)
1000c584:	dfc00417 	ldw	ra,16(sp)
1000c588:	dcc00317 	ldw	r19,12(sp)
1000c58c:	dc800217 	ldw	r18,8(sp)
1000c590:	dc400117 	ldw	r17,4(sp)
1000c594:	dc000017 	ldw	r16,0(sp)
1000c598:	dec00504 	addi	sp,sp,20
1000c59c:	1000683a 	jmp	r2
1000c5a0:	dfc00417 	ldw	ra,16(sp)
1000c5a4:	dcc00317 	ldw	r19,12(sp)
1000c5a8:	dc800217 	ldw	r18,8(sp)
1000c5ac:	dc400117 	ldw	r17,4(sp)
1000c5b0:	dc000017 	ldw	r16,0(sp)
1000c5b4:	dec00504 	addi	sp,sp,20
1000c5b8:	f800283a 	ret

1000c5bc <__cxa_get_globals_fast>:
1000c5bc:	008400f4 	movhi	r2,4099
1000c5c0:	10aa6504 	addi	r2,r2,-22124
1000c5c4:	f800283a 	ret

1000c5c8 <__cxa_get_globals>:
1000c5c8:	008400f4 	movhi	r2,4099
1000c5cc:	10aa6504 	addi	r2,r2,-22124
1000c5d0:	f800283a 	ret

1000c5d4 <_ZNSt9exceptionD1Ev>:
1000c5d4:	f800283a 	ret

1000c5d8 <_ZNSt13bad_exceptionD1Ev>:
1000c5d8:	f800283a 	ret

1000c5dc <_ZGTtNKSt9exception4whatEv>:
1000c5dc:	008400b4 	movhi	r2,4098
1000c5e0:	1094de04 	addi	r2,r2,21368
1000c5e4:	f800283a 	ret

1000c5e8 <_ZGTtNKSt13bad_exception4whatEv>:
1000c5e8:	008400b4 	movhi	r2,4098
1000c5ec:	1094e204 	addi	r2,r2,21384
1000c5f0:	f800283a 	ret

1000c5f4 <_ZNSt9exceptionD0Ev>:
1000c5f4:	01400104 	movi	r5,4
1000c5f8:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c5fc <_ZNSt13bad_exceptionD0Ev>:
1000c5fc:	01400104 	movi	r5,4
1000c600:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c604 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
1000c604:	f800283a 	ret

1000c608 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
1000c608:	01400104 	movi	r5,4
1000c60c:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c610 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
1000c610:	f800283a 	ret

1000c614 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
1000c614:	01400104 	movi	r5,4
1000c618:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c61c <_ZGTtNKSt9exceptionD1Ev>:
1000c61c:	f800283a 	ret

1000c620 <_ZGTtNKSt13bad_exceptionD1Ev>:
1000c620:	f800283a 	ret

1000c624 <__cxa_pure_virtual>:
1000c624:	014400b4 	movhi	r5,4098
1000c628:	deffff04 	addi	sp,sp,-4
1000c62c:	018006c4 	movi	r6,27
1000c630:	29551804 	addi	r5,r5,21600
1000c634:	01000084 	movi	r4,2
1000c638:	dfc00015 	stw	ra,0(sp)
1000c63c:	00227b40 	call	100227b4 <write>
1000c640:	00081a00 	call	100081a0 <_ZSt9terminatev>

1000c644 <__cxa_deleted_virtual>:
1000c644:	014400b4 	movhi	r5,4098
1000c648:	deffff04 	addi	sp,sp,-4
1000c64c:	01800784 	movi	r6,30
1000c650:	29551f04 	addi	r5,r5,21628
1000c654:	01000084 	movi	r4,2
1000c658:	dfc00015 	stw	ra,0(sp)
1000c65c:	00227b40 	call	100227b4 <write>
1000c660:	00081a00 	call	100081a0 <_ZSt9terminatev>

1000c664 <_ZdlPvj>:
1000c664:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000c668 <_ZNKSt8bad_cast4whatEv>:
1000c668:	008400b4 	movhi	r2,4098
1000c66c:	10952704 	addi	r2,r2,21660
1000c670:	f800283a 	ret

1000c674 <_ZNSt8bad_castD1Ev>:
1000c674:	008400b4 	movhi	r2,4098
1000c678:	10953304 	addi	r2,r2,21708
1000c67c:	20800015 	stw	r2,0(r4)
1000c680:	000c5d41 	jmpi	1000c5d4 <_ZNSt9exceptionD1Ev>

1000c684 <_ZNSt8bad_castD0Ev>:
1000c684:	defffe04 	addi	sp,sp,-8
1000c688:	008400b4 	movhi	r2,4098
1000c68c:	dc000015 	stw	r16,0(sp)
1000c690:	dfc00115 	stw	ra,4(sp)
1000c694:	10953304 	addi	r2,r2,21708
1000c698:	20800015 	stw	r2,0(r4)
1000c69c:	2021883a 	mov	r16,r4
1000c6a0:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000c6a4:	01400104 	movi	r5,4
1000c6a8:	8009883a 	mov	r4,r16
1000c6ac:	dfc00117 	ldw	ra,4(sp)
1000c6b0:	dc000017 	ldw	r16,0(sp)
1000c6b4:	dec00204 	addi	sp,sp,8
1000c6b8:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c6bc <_ZNKSt10bad_typeid4whatEv>:
1000c6bc:	008400b4 	movhi	r2,4098
1000c6c0:	10953604 	addi	r2,r2,21720
1000c6c4:	f800283a 	ret

1000c6c8 <_ZNSt10bad_typeidD1Ev>:
1000c6c8:	008400b4 	movhi	r2,4098
1000c6cc:	10954304 	addi	r2,r2,21772
1000c6d0:	20800015 	stw	r2,0(r4)
1000c6d4:	000c5d41 	jmpi	1000c5d4 <_ZNSt9exceptionD1Ev>

1000c6d8 <_ZNSt10bad_typeidD0Ev>:
1000c6d8:	defffe04 	addi	sp,sp,-8
1000c6dc:	008400b4 	movhi	r2,4098
1000c6e0:	dc000015 	stw	r16,0(sp)
1000c6e4:	dfc00115 	stw	ra,4(sp)
1000c6e8:	10954304 	addi	r2,r2,21772
1000c6ec:	20800015 	stw	r2,0(r4)
1000c6f0:	2021883a 	mov	r16,r4
1000c6f4:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000c6f8:	01400104 	movi	r5,4
1000c6fc:	8009883a 	mov	r4,r16
1000c700:	dfc00117 	ldw	ra,4(sp)
1000c704:	dc000017 	ldw	r16,0(sp)
1000c708:	dec00204 	addi	sp,sp,8
1000c70c:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c710 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
1000c710:	20800017 	ldw	r2,0(r4)
1000c714:	defffa04 	addi	sp,sp,-24
1000c718:	dc000415 	stw	r16,16(sp)
1000c71c:	10800617 	ldw	r2,24(r2)
1000c720:	3021883a 	mov	r16,r6
1000c724:	31800017 	ldw	r6,0(r6)
1000c728:	00c00404 	movi	r3,16
1000c72c:	dfc00515 	stw	ra,20(sp)
1000c730:	d8000015 	stw	zero,0(sp)
1000c734:	d8000115 	stw	zero,4(sp)
1000c738:	d8c00215 	stw	r3,8(sp)
1000c73c:	d8000315 	stw	zero,12(sp)
1000c740:	d80f883a 	mov	r7,sp
1000c744:	103ee83a 	callr	r2
1000c748:	d8800117 	ldw	r2,4(sp)
1000c74c:	1080018c 	andi	r2,r2,6
1000c750:	10800198 	cmpnei	r2,r2,6
1000c754:	1000071e 	bne	r2,zero,1000c774 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
1000c758:	d8c00017 	ldw	r3,0(sp)
1000c75c:	00800044 	movi	r2,1
1000c760:	80c00015 	stw	r3,0(r16)
1000c764:	dfc00517 	ldw	ra,20(sp)
1000c768:	dc000417 	ldw	r16,16(sp)
1000c76c:	dec00604 	addi	sp,sp,24
1000c770:	f800283a 	ret
1000c774:	0005883a 	mov	r2,zero
1000c778:	dfc00517 	ldw	ra,20(sp)
1000c77c:	dc000417 	ldw	r16,16(sp)
1000c780:	dec00604 	addi	sp,sp,24
1000c784:	f800283a 	ret

1000c788 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
1000c788:	d8c00017 	ldw	r3,0(sp)
1000c78c:	00800044 	movi	r2,1
1000c790:	19800126 	beq	r3,r6,1000c798 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
1000c794:	f800283a 	ret
1000c798:	00800184 	movi	r2,6
1000c79c:	f800283a 	ret

1000c7a0 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
1000c7a0:	008400b4 	movhi	r2,4098
1000c7a4:	10955404 	addi	r2,r2,21840
1000c7a8:	20800015 	stw	r2,0(r4)
1000c7ac:	000c9d81 	jmpi	1000c9d8 <_ZNSt9type_infoD1Ev>

1000c7b0 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
1000c7b0:	defffe04 	addi	sp,sp,-8
1000c7b4:	008400b4 	movhi	r2,4098
1000c7b8:	dc000015 	stw	r16,0(sp)
1000c7bc:	dfc00115 	stw	ra,4(sp)
1000c7c0:	10955404 	addi	r2,r2,21840
1000c7c4:	20800015 	stw	r2,0(r4)
1000c7c8:	2021883a 	mov	r16,r4
1000c7cc:	000c9d80 	call	1000c9d8 <_ZNSt9type_infoD1Ev>
1000c7d0:	01400204 	movi	r5,8
1000c7d4:	8009883a 	mov	r4,r16
1000c7d8:	dfc00117 	ldw	ra,4(sp)
1000c7dc:	dc000017 	ldw	r16,0(sp)
1000c7e0:	dec00204 	addi	sp,sp,8
1000c7e4:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c7e8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
1000c7e8:	defffa04 	addi	sp,sp,-24
1000c7ec:	dc800315 	stw	r18,12(sp)
1000c7f0:	d8800817 	ldw	r2,32(sp)
1000c7f4:	dc800617 	ldw	r18,24(sp)
1000c7f8:	dcc00415 	stw	r19,16(sp)
1000c7fc:	dc400215 	stw	r17,8(sp)
1000c800:	dc000115 	stw	r16,4(sp)
1000c804:	dfc00515 	stw	ra,20(sp)
1000c808:	3027883a 	mov	r19,r6
1000c80c:	dc400917 	ldw	r17,36(sp)
1000c810:	24000117 	ldw	r16,4(r4)
1000c814:	90801426 	beq	r18,r2,1000c868 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x80>
1000c818:	39400117 	ldw	r5,4(r7)
1000c81c:	2c000626 	beq	r5,r16,1000c838 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c820:	80800007 	ldb	r2,0(r16)
1000c824:	10800aa0 	cmpeqi	r2,r2,42
1000c828:	1000071e 	bne	r2,zero,1000c848 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c82c:	8009883a 	mov	r4,r16
1000c830:	00162d40 	call	100162d4 <strcmp>
1000c834:	1000041e 	bne	r2,zero,1000c848 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c838:	00800044 	movi	r2,1
1000c83c:	8c800015 	stw	r18,0(r17)
1000c840:	8cc00115 	stw	r19,4(r17)
1000c844:	88800315 	stw	r2,12(r17)
1000c848:	0005883a 	mov	r2,zero
1000c84c:	dfc00517 	ldw	ra,20(sp)
1000c850:	dcc00417 	ldw	r19,16(sp)
1000c854:	dc800317 	ldw	r18,12(sp)
1000c858:	dc400217 	ldw	r17,8(sp)
1000c85c:	dc000117 	ldw	r16,4(sp)
1000c860:	dec00604 	addi	sp,sp,24
1000c864:	f800283a 	ret
1000c868:	d8800717 	ldw	r2,28(sp)
1000c86c:	11400117 	ldw	r5,4(r2)
1000c870:	2c000e26 	beq	r5,r16,1000c8ac <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000c874:	80800007 	ldb	r2,0(r16)
1000c878:	10800aa0 	cmpeqi	r2,r2,42
1000c87c:	1000081e 	bne	r2,zero,1000c8a0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
1000c880:	8009883a 	mov	r4,r16
1000c884:	d9c00015 	stw	r7,0(sp)
1000c888:	00162d40 	call	100162d4 <strcmp>
1000c88c:	10000726 	beq	r2,zero,1000c8ac <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000c890:	d9c00017 	ldw	r7,0(sp)
1000c894:	39400117 	ldw	r5,4(r7)
1000c898:	817fe41e 	bne	r16,r5,1000c82c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x44>
1000c89c:	003fe606 	br	1000c838 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c8a0:	38800117 	ldw	r2,4(r7)
1000c8a4:	143fe81e 	bne	r2,r16,1000c848 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c8a8:	003fe306 	br	1000c838 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c8ac:	8cc00215 	stw	r19,8(r17)
1000c8b0:	003fe506 	br	1000c848 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>

1000c8b4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
1000c8b4:	21000117 	ldw	r4,4(r4)
1000c8b8:	29400117 	ldw	r5,4(r5)
1000c8bc:	defffd04 	addi	sp,sp,-12
1000c8c0:	dfc00215 	stw	ra,8(sp)
1000c8c4:	21400d26 	beq	r4,r5,1000c8fc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000c8c8:	20800007 	ldb	r2,0(r4)
1000c8cc:	d9c00115 	stw	r7,4(sp)
1000c8d0:	d9800015 	stw	r6,0(sp)
1000c8d4:	10800aa0 	cmpeqi	r2,r2,42
1000c8d8:	1000041e 	bne	r2,zero,1000c8ec <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
1000c8dc:	00162d40 	call	100162d4 <strcmp>
1000c8e0:	d9800017 	ldw	r6,0(sp)
1000c8e4:	d9c00117 	ldw	r7,4(sp)
1000c8e8:	10000426 	beq	r2,zero,1000c8fc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000c8ec:	0005883a 	mov	r2,zero
1000c8f0:	dfc00217 	ldw	ra,8(sp)
1000c8f4:	dec00304 	addi	sp,sp,12
1000c8f8:	f800283a 	ret
1000c8fc:	00800204 	movi	r2,8
1000c900:	38800315 	stw	r2,12(r7)
1000c904:	00800184 	movi	r2,6
1000c908:	38800115 	stw	r2,4(r7)
1000c90c:	00800044 	movi	r2,1
1000c910:	39800015 	stw	r6,0(r7)
1000c914:	dfc00217 	ldw	ra,8(sp)
1000c918:	dec00304 	addi	sp,sp,12
1000c91c:	f800283a 	ret

1000c920 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
1000c920:	20800117 	ldw	r2,4(r4)
1000c924:	2a000117 	ldw	r8,4(r5)
1000c928:	12002726 	beq	r2,r8,1000c9c8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xa8>
1000c92c:	defffb04 	addi	sp,sp,-20
1000c930:	dcc00315 	stw	r19,12(sp)
1000c934:	dc800215 	stw	r18,8(sp)
1000c938:	dc400115 	stw	r17,4(sp)
1000c93c:	dc000015 	stw	r16,0(sp)
1000c940:	dfc00415 	stw	ra,16(sp)
1000c944:	10c00007 	ldb	r3,0(r2)
1000c948:	3823883a 	mov	r17,r7
1000c94c:	3027883a 	mov	r19,r6
1000c950:	18c00aa0 	cmpeqi	r3,r3,42
1000c954:	2821883a 	mov	r16,r5
1000c958:	2025883a 	mov	r18,r4
1000c95c:	18000c1e 	bne	r3,zero,1000c990 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000c960:	400b883a 	mov	r5,r8
1000c964:	1009883a 	mov	r4,r2
1000c968:	00162d40 	call	100162d4 <strcmp>
1000c96c:	1000081e 	bne	r2,zero,1000c990 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000c970:	00800044 	movi	r2,1
1000c974:	dfc00417 	ldw	ra,16(sp)
1000c978:	dcc00317 	ldw	r19,12(sp)
1000c97c:	dc800217 	ldw	r18,8(sp)
1000c980:	dc400117 	ldw	r17,4(sp)
1000c984:	dc000017 	ldw	r16,0(sp)
1000c988:	dec00504 	addi	sp,sp,20
1000c98c:	f800283a 	ret
1000c990:	89c00128 	cmpgeui	r7,r17,4
1000c994:	38000e1e 	bne	r7,zero,1000c9d0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
1000c998:	80800017 	ldw	r2,0(r16)
1000c99c:	980d883a 	mov	r6,r19
1000c9a0:	900b883a 	mov	r5,r18
1000c9a4:	10800517 	ldw	r2,20(r2)
1000c9a8:	8009883a 	mov	r4,r16
1000c9ac:	dfc00417 	ldw	ra,16(sp)
1000c9b0:	dcc00317 	ldw	r19,12(sp)
1000c9b4:	dc800217 	ldw	r18,8(sp)
1000c9b8:	dc400117 	ldw	r17,4(sp)
1000c9bc:	dc000017 	ldw	r16,0(sp)
1000c9c0:	dec00504 	addi	sp,sp,20
1000c9c4:	1000683a 	jmp	r2
1000c9c8:	00800044 	movi	r2,1
1000c9cc:	f800283a 	ret
1000c9d0:	0005883a 	mov	r2,zero
1000c9d4:	003fe706 	br	1000c974 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x54>

1000c9d8 <_ZNSt9type_infoD1Ev>:
1000c9d8:	f800283a 	ret

1000c9dc <_ZNKSt9type_info14__is_pointer_pEv>:
1000c9dc:	0005883a 	mov	r2,zero
1000c9e0:	f800283a 	ret

1000c9e4 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
1000c9e4:	0005883a 	mov	r2,zero
1000c9e8:	f800283a 	ret

1000c9ec <_ZNSt9type_infoD0Ev>:
1000c9ec:	01400204 	movi	r5,8
1000c9f0:	000c6641 	jmpi	1000c664 <_ZdlPvj>

1000c9f4 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
1000c9f4:	21000117 	ldw	r4,4(r4)
1000c9f8:	29400117 	ldw	r5,4(r5)
1000c9fc:	21400c26 	beq	r4,r5,1000ca30 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
1000ca00:	20800007 	ldb	r2,0(r4)
1000ca04:	10800aa0 	cmpeqi	r2,r2,42
1000ca08:	1000071e 	bne	r2,zero,1000ca28 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
1000ca0c:	deffff04 	addi	sp,sp,-4
1000ca10:	dfc00015 	stw	ra,0(sp)
1000ca14:	00162d40 	call	100162d4 <strcmp>
1000ca18:	1005003a 	cmpeq	r2,r2,zero
1000ca1c:	dfc00017 	ldw	ra,0(sp)
1000ca20:	dec00104 	addi	sp,sp,4
1000ca24:	f800283a 	ret
1000ca28:	0005883a 	mov	r2,zero
1000ca2c:	f800283a 	ret
1000ca30:	00800044 	movi	r2,1
1000ca34:	f800283a 	ret

1000ca38 <_ZNKSt11logic_error4whatEv>:
1000ca38:	20800117 	ldw	r2,4(r4)
1000ca3c:	f800283a 	ret

1000ca40 <_ZNKSt13runtime_error4whatEv>:
1000ca40:	20800117 	ldw	r2,4(r4)
1000ca44:	f800283a 	ret

1000ca48 <_ZNSt11logic_errorD1Ev>:
1000ca48:	21400117 	ldw	r5,4(r4)
1000ca4c:	defffd04 	addi	sp,sp,-12
1000ca50:	00c400b4 	movhi	r3,4098
1000ca54:	dc000115 	stw	r16,4(sp)
1000ca58:	dfc00215 	stw	ra,8(sp)
1000ca5c:	18d5b204 	addi	r3,r3,22216
1000ca60:	008400f4 	movhi	r2,4099
1000ca64:	2021883a 	mov	r16,r4
1000ca68:	20c00015 	stw	r3,0(r4)
1000ca6c:	10aa7e04 	addi	r2,r2,-22024
1000ca70:	293ffd04 	addi	r4,r5,-12
1000ca74:	2080061e 	bne	r4,r2,1000ca90 <_ZNSt11logic_errorD1Ev+0x48>
1000ca78:	8009883a 	mov	r4,r16
1000ca7c:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000ca80:	dfc00217 	ldw	ra,8(sp)
1000ca84:	dc000117 	ldw	r16,4(sp)
1000ca88:	dec00304 	addi	sp,sp,12
1000ca8c:	f800283a 	ret
1000ca90:	28bfff17 	ldw	r2,-4(r5)
1000ca94:	10ffffc4 	addi	r3,r2,-1
1000ca98:	28ffff15 	stw	r3,-4(r5)
1000ca9c:	00bff616 	blt	zero,r2,1000ca78 <_ZNSt11logic_errorD1Ev+0x30>
1000caa0:	d94000c4 	addi	r5,sp,3
1000caa4:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000caa8:	003ff306 	br	1000ca78 <_ZNSt11logic_errorD1Ev+0x30>

1000caac <_ZNSt11logic_errorD0Ev>:
1000caac:	defffe04 	addi	sp,sp,-8
1000cab0:	dc000015 	stw	r16,0(sp)
1000cab4:	dfc00115 	stw	ra,4(sp)
1000cab8:	2021883a 	mov	r16,r4
1000cabc:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000cac0:	8009883a 	mov	r4,r16
1000cac4:	dfc00117 	ldw	ra,4(sp)
1000cac8:	dc000017 	ldw	r16,0(sp)
1000cacc:	dec00204 	addi	sp,sp,8
1000cad0:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cad4 <_ZNSt12domain_errorD1Ev>:
1000cad4:	008400b4 	movhi	r2,4098
1000cad8:	1095b704 	addi	r2,r2,22236
1000cadc:	20800015 	stw	r2,0(r4)
1000cae0:	000ca481 	jmpi	1000ca48 <_ZNSt11logic_errorD1Ev>

1000cae4 <_ZNSt12domain_errorD0Ev>:
1000cae4:	defffe04 	addi	sp,sp,-8
1000cae8:	008400b4 	movhi	r2,4098
1000caec:	dc000015 	stw	r16,0(sp)
1000caf0:	dfc00115 	stw	ra,4(sp)
1000caf4:	1095b704 	addi	r2,r2,22236
1000caf8:	20800015 	stw	r2,0(r4)
1000cafc:	2021883a 	mov	r16,r4
1000cb00:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000cb04:	8009883a 	mov	r4,r16
1000cb08:	dfc00117 	ldw	ra,4(sp)
1000cb0c:	dc000017 	ldw	r16,0(sp)
1000cb10:	dec00204 	addi	sp,sp,8
1000cb14:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cb18 <_ZNSt16invalid_argumentD1Ev>:
1000cb18:	008400b4 	movhi	r2,4098
1000cb1c:	1095bc04 	addi	r2,r2,22256
1000cb20:	20800015 	stw	r2,0(r4)
1000cb24:	000ca481 	jmpi	1000ca48 <_ZNSt11logic_errorD1Ev>

1000cb28 <_ZNSt16invalid_argumentD0Ev>:
1000cb28:	defffe04 	addi	sp,sp,-8
1000cb2c:	008400b4 	movhi	r2,4098
1000cb30:	dc000015 	stw	r16,0(sp)
1000cb34:	dfc00115 	stw	ra,4(sp)
1000cb38:	1095bc04 	addi	r2,r2,22256
1000cb3c:	20800015 	stw	r2,0(r4)
1000cb40:	2021883a 	mov	r16,r4
1000cb44:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000cb48:	8009883a 	mov	r4,r16
1000cb4c:	dfc00117 	ldw	ra,4(sp)
1000cb50:	dc000017 	ldw	r16,0(sp)
1000cb54:	dec00204 	addi	sp,sp,8
1000cb58:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cb5c <_ZNSt12length_errorD1Ev>:
1000cb5c:	008400b4 	movhi	r2,4098
1000cb60:	1095c104 	addi	r2,r2,22276
1000cb64:	20800015 	stw	r2,0(r4)
1000cb68:	000ca481 	jmpi	1000ca48 <_ZNSt11logic_errorD1Ev>

1000cb6c <_ZNSt12length_errorD0Ev>:
1000cb6c:	defffe04 	addi	sp,sp,-8
1000cb70:	008400b4 	movhi	r2,4098
1000cb74:	dc000015 	stw	r16,0(sp)
1000cb78:	dfc00115 	stw	ra,4(sp)
1000cb7c:	1095c104 	addi	r2,r2,22276
1000cb80:	20800015 	stw	r2,0(r4)
1000cb84:	2021883a 	mov	r16,r4
1000cb88:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000cb8c:	8009883a 	mov	r4,r16
1000cb90:	dfc00117 	ldw	ra,4(sp)
1000cb94:	dc000017 	ldw	r16,0(sp)
1000cb98:	dec00204 	addi	sp,sp,8
1000cb9c:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cba0 <_ZNSt12out_of_rangeD1Ev>:
1000cba0:	008400b4 	movhi	r2,4098
1000cba4:	1095c604 	addi	r2,r2,22296
1000cba8:	20800015 	stw	r2,0(r4)
1000cbac:	000ca481 	jmpi	1000ca48 <_ZNSt11logic_errorD1Ev>

1000cbb0 <_ZNSt12out_of_rangeD0Ev>:
1000cbb0:	defffe04 	addi	sp,sp,-8
1000cbb4:	008400b4 	movhi	r2,4098
1000cbb8:	dc000015 	stw	r16,0(sp)
1000cbbc:	dfc00115 	stw	ra,4(sp)
1000cbc0:	1095c604 	addi	r2,r2,22296
1000cbc4:	20800015 	stw	r2,0(r4)
1000cbc8:	2021883a 	mov	r16,r4
1000cbcc:	000ca480 	call	1000ca48 <_ZNSt11logic_errorD1Ev>
1000cbd0:	8009883a 	mov	r4,r16
1000cbd4:	dfc00117 	ldw	ra,4(sp)
1000cbd8:	dc000017 	ldw	r16,0(sp)
1000cbdc:	dec00204 	addi	sp,sp,8
1000cbe0:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cbe4 <_ZNSt13runtime_errorD1Ev>:
1000cbe4:	21400117 	ldw	r5,4(r4)
1000cbe8:	defffd04 	addi	sp,sp,-12
1000cbec:	00c400b4 	movhi	r3,4098
1000cbf0:	dc000115 	stw	r16,4(sp)
1000cbf4:	dfc00215 	stw	ra,8(sp)
1000cbf8:	18d5cb04 	addi	r3,r3,22316
1000cbfc:	008400f4 	movhi	r2,4099
1000cc00:	2021883a 	mov	r16,r4
1000cc04:	20c00015 	stw	r3,0(r4)
1000cc08:	10aa7e04 	addi	r2,r2,-22024
1000cc0c:	293ffd04 	addi	r4,r5,-12
1000cc10:	2080061e 	bne	r4,r2,1000cc2c <_ZNSt13runtime_errorD1Ev+0x48>
1000cc14:	8009883a 	mov	r4,r16
1000cc18:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000cc1c:	dfc00217 	ldw	ra,8(sp)
1000cc20:	dc000117 	ldw	r16,4(sp)
1000cc24:	dec00304 	addi	sp,sp,12
1000cc28:	f800283a 	ret
1000cc2c:	28bfff17 	ldw	r2,-4(r5)
1000cc30:	10ffffc4 	addi	r3,r2,-1
1000cc34:	28ffff15 	stw	r3,-4(r5)
1000cc38:	00bff616 	blt	zero,r2,1000cc14 <_ZNSt13runtime_errorD1Ev+0x30>
1000cc3c:	d94000c4 	addi	r5,sp,3
1000cc40:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000cc44:	003ff306 	br	1000cc14 <_ZNSt13runtime_errorD1Ev+0x30>

1000cc48 <_ZNSt13runtime_errorD0Ev>:
1000cc48:	defffe04 	addi	sp,sp,-8
1000cc4c:	dc000015 	stw	r16,0(sp)
1000cc50:	dfc00115 	stw	ra,4(sp)
1000cc54:	2021883a 	mov	r16,r4
1000cc58:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000cc5c:	8009883a 	mov	r4,r16
1000cc60:	dfc00117 	ldw	ra,4(sp)
1000cc64:	dc000017 	ldw	r16,0(sp)
1000cc68:	dec00204 	addi	sp,sp,8
1000cc6c:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cc70 <_ZNSt11range_errorD1Ev>:
1000cc70:	008400b4 	movhi	r2,4098
1000cc74:	1095d004 	addi	r2,r2,22336
1000cc78:	20800015 	stw	r2,0(r4)
1000cc7c:	000cbe41 	jmpi	1000cbe4 <_ZNSt13runtime_errorD1Ev>

1000cc80 <_ZNSt11range_errorD0Ev>:
1000cc80:	defffe04 	addi	sp,sp,-8
1000cc84:	008400b4 	movhi	r2,4098
1000cc88:	dc000015 	stw	r16,0(sp)
1000cc8c:	dfc00115 	stw	ra,4(sp)
1000cc90:	1095d004 	addi	r2,r2,22336
1000cc94:	20800015 	stw	r2,0(r4)
1000cc98:	2021883a 	mov	r16,r4
1000cc9c:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000cca0:	8009883a 	mov	r4,r16
1000cca4:	dfc00117 	ldw	ra,4(sp)
1000cca8:	dc000017 	ldw	r16,0(sp)
1000ccac:	dec00204 	addi	sp,sp,8
1000ccb0:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000ccb4 <_ZNSt14overflow_errorD1Ev>:
1000ccb4:	008400b4 	movhi	r2,4098
1000ccb8:	1095d504 	addi	r2,r2,22356
1000ccbc:	20800015 	stw	r2,0(r4)
1000ccc0:	000cbe41 	jmpi	1000cbe4 <_ZNSt13runtime_errorD1Ev>

1000ccc4 <_ZNSt14overflow_errorD0Ev>:
1000ccc4:	defffe04 	addi	sp,sp,-8
1000ccc8:	008400b4 	movhi	r2,4098
1000cccc:	dc000015 	stw	r16,0(sp)
1000ccd0:	dfc00115 	stw	ra,4(sp)
1000ccd4:	1095d504 	addi	r2,r2,22356
1000ccd8:	20800015 	stw	r2,0(r4)
1000ccdc:	2021883a 	mov	r16,r4
1000cce0:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000cce4:	8009883a 	mov	r4,r16
1000cce8:	dfc00117 	ldw	ra,4(sp)
1000ccec:	dc000017 	ldw	r16,0(sp)
1000ccf0:	dec00204 	addi	sp,sp,8
1000ccf4:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000ccf8 <_ZNSt15underflow_errorD1Ev>:
1000ccf8:	008400b4 	movhi	r2,4098
1000ccfc:	1095da04 	addi	r2,r2,22376
1000cd00:	20800015 	stw	r2,0(r4)
1000cd04:	000cbe41 	jmpi	1000cbe4 <_ZNSt13runtime_errorD1Ev>

1000cd08 <_ZNSt15underflow_errorD0Ev>:
1000cd08:	defffe04 	addi	sp,sp,-8
1000cd0c:	008400b4 	movhi	r2,4098
1000cd10:	dc000015 	stw	r16,0(sp)
1000cd14:	dfc00115 	stw	ra,4(sp)
1000cd18:	1095da04 	addi	r2,r2,22376
1000cd1c:	20800015 	stw	r2,0(r4)
1000cd20:	2021883a 	mov	r16,r4
1000cd24:	000cbe40 	call	1000cbe4 <_ZNSt13runtime_errorD1Ev>
1000cd28:	8009883a 	mov	r4,r16
1000cd2c:	dfc00117 	ldw	ra,4(sp)
1000cd30:	dc000017 	ldw	r16,0(sp)
1000cd34:	dec00204 	addi	sp,sp,8
1000cd38:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000cd3c <_ZNSt11logic_errorC1ERKSs>:
1000cd3c:	01840074 	movhi	r6,4097
1000cd40:	deffef04 	addi	sp,sp,-68
1000cd44:	31a26504 	addi	r6,r6,-30316
1000cd48:	00c400b4 	movhi	r3,4098
1000cd4c:	00840074 	movhi	r2,4097
1000cd50:	18d15604 	addi	r3,r3,17752
1000cd54:	10b37104 	addi	r2,r2,-12860
1000cd58:	d9000015 	stw	r4,0(sp)
1000cd5c:	d9800815 	stw	r6,32(sp)
1000cd60:	d9000204 	addi	r4,sp,8
1000cd64:	d9800f04 	addi	r6,sp,60
1000cd68:	d8c00915 	stw	r3,36(sp)
1000cd6c:	d8800b15 	stw	r2,44(sp)
1000cd70:	d9400115 	stw	r5,4(sp)
1000cd74:	dfc01015 	stw	ra,64(sp)
1000cd78:	df000f15 	stw	fp,60(sp)
1000cd7c:	d9800a15 	stw	r6,40(sp)
1000cd80:	dec00c15 	stw	sp,48(sp)
1000cd84:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000cd88:	d8c00017 	ldw	r3,0(sp)
1000cd8c:	008400b4 	movhi	r2,4098
1000cd90:	d9400117 	ldw	r5,4(sp)
1000cd94:	1095b204 	addi	r2,r2,22216
1000cd98:	18800015 	stw	r2,0(r3)
1000cd9c:	19000104 	addi	r4,r3,4
1000cda0:	00800044 	movi	r2,1
1000cda4:	d8800315 	stw	r2,12(sp)
1000cda8:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000cdac:	d9000204 	addi	r4,sp,8
1000cdb0:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000cdb4:	dfc01017 	ldw	ra,64(sp)
1000cdb8:	df000f17 	ldw	fp,60(sp)
1000cdbc:	dec01104 	addi	sp,sp,68
1000cdc0:	f800283a 	ret
1000cdc4:	d8800417 	ldw	r2,16(sp)
1000cdc8:	d9000017 	ldw	r4,0(sp)
1000cdcc:	d8800115 	stw	r2,4(sp)
1000cdd0:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000cdd4:	d9000117 	ldw	r4,4(sp)
1000cdd8:	00bfffc4 	movi	r2,-1
1000cddc:	d8800315 	stw	r2,12(sp)
1000cde0:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000cde4 <_ZNSt12domain_errorC1ERKSs>:
1000cde4:	defffe04 	addi	sp,sp,-8
1000cde8:	dc000015 	stw	r16,0(sp)
1000cdec:	dfc00115 	stw	ra,4(sp)
1000cdf0:	2021883a 	mov	r16,r4
1000cdf4:	000cd3c0 	call	1000cd3c <_ZNSt11logic_errorC1ERKSs>
1000cdf8:	008400b4 	movhi	r2,4098
1000cdfc:	1095b704 	addi	r2,r2,22236
1000ce00:	80800015 	stw	r2,0(r16)
1000ce04:	dfc00117 	ldw	ra,4(sp)
1000ce08:	dc000017 	ldw	r16,0(sp)
1000ce0c:	dec00204 	addi	sp,sp,8
1000ce10:	f800283a 	ret

1000ce14 <_ZNSt16invalid_argumentC1ERKSs>:
1000ce14:	defffe04 	addi	sp,sp,-8
1000ce18:	dc000015 	stw	r16,0(sp)
1000ce1c:	dfc00115 	stw	ra,4(sp)
1000ce20:	2021883a 	mov	r16,r4
1000ce24:	000cd3c0 	call	1000cd3c <_ZNSt11logic_errorC1ERKSs>
1000ce28:	008400b4 	movhi	r2,4098
1000ce2c:	1095bc04 	addi	r2,r2,22256
1000ce30:	80800015 	stw	r2,0(r16)
1000ce34:	dfc00117 	ldw	ra,4(sp)
1000ce38:	dc000017 	ldw	r16,0(sp)
1000ce3c:	dec00204 	addi	sp,sp,8
1000ce40:	f800283a 	ret

1000ce44 <_ZNSt12length_errorC1ERKSs>:
1000ce44:	defffe04 	addi	sp,sp,-8
1000ce48:	dc000015 	stw	r16,0(sp)
1000ce4c:	dfc00115 	stw	ra,4(sp)
1000ce50:	2021883a 	mov	r16,r4
1000ce54:	000cd3c0 	call	1000cd3c <_ZNSt11logic_errorC1ERKSs>
1000ce58:	008400b4 	movhi	r2,4098
1000ce5c:	1095c104 	addi	r2,r2,22276
1000ce60:	80800015 	stw	r2,0(r16)
1000ce64:	dfc00117 	ldw	ra,4(sp)
1000ce68:	dc000017 	ldw	r16,0(sp)
1000ce6c:	dec00204 	addi	sp,sp,8
1000ce70:	f800283a 	ret

1000ce74 <_ZNSt12out_of_rangeC1ERKSs>:
1000ce74:	defffe04 	addi	sp,sp,-8
1000ce78:	dc000015 	stw	r16,0(sp)
1000ce7c:	dfc00115 	stw	ra,4(sp)
1000ce80:	2021883a 	mov	r16,r4
1000ce84:	000cd3c0 	call	1000cd3c <_ZNSt11logic_errorC1ERKSs>
1000ce88:	008400b4 	movhi	r2,4098
1000ce8c:	1095c604 	addi	r2,r2,22296
1000ce90:	80800015 	stw	r2,0(r16)
1000ce94:	dfc00117 	ldw	ra,4(sp)
1000ce98:	dc000017 	ldw	r16,0(sp)
1000ce9c:	dec00204 	addi	sp,sp,8
1000cea0:	f800283a 	ret

1000cea4 <_ZNSt13runtime_errorC1ERKSs>:
1000cea4:	01840074 	movhi	r6,4097
1000cea8:	deffef04 	addi	sp,sp,-68
1000ceac:	31a26504 	addi	r6,r6,-30316
1000ceb0:	00c400b4 	movhi	r3,4098
1000ceb4:	00840074 	movhi	r2,4097
1000ceb8:	18d15784 	addi	r3,r3,17758
1000cebc:	10b3cb04 	addi	r2,r2,-12500
1000cec0:	d9000015 	stw	r4,0(sp)
1000cec4:	d9800815 	stw	r6,32(sp)
1000cec8:	d9000204 	addi	r4,sp,8
1000cecc:	d9800f04 	addi	r6,sp,60
1000ced0:	d8c00915 	stw	r3,36(sp)
1000ced4:	d8800b15 	stw	r2,44(sp)
1000ced8:	d9400115 	stw	r5,4(sp)
1000cedc:	dfc01015 	stw	ra,64(sp)
1000cee0:	df000f15 	stw	fp,60(sp)
1000cee4:	d9800a15 	stw	r6,40(sp)
1000cee8:	dec00c15 	stw	sp,48(sp)
1000ceec:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000cef0:	d8c00017 	ldw	r3,0(sp)
1000cef4:	008400b4 	movhi	r2,4098
1000cef8:	d9400117 	ldw	r5,4(sp)
1000cefc:	1095cb04 	addi	r2,r2,22316
1000cf00:	18800015 	stw	r2,0(r3)
1000cf04:	19000104 	addi	r4,r3,4
1000cf08:	00800044 	movi	r2,1
1000cf0c:	d8800315 	stw	r2,12(sp)
1000cf10:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000cf14:	d9000204 	addi	r4,sp,8
1000cf18:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000cf1c:	dfc01017 	ldw	ra,64(sp)
1000cf20:	df000f17 	ldw	fp,60(sp)
1000cf24:	dec01104 	addi	sp,sp,68
1000cf28:	f800283a 	ret
1000cf2c:	d8800417 	ldw	r2,16(sp)
1000cf30:	d9000017 	ldw	r4,0(sp)
1000cf34:	d8800115 	stw	r2,4(sp)
1000cf38:	000c5d40 	call	1000c5d4 <_ZNSt9exceptionD1Ev>
1000cf3c:	d9000117 	ldw	r4,4(sp)
1000cf40:	00bfffc4 	movi	r2,-1
1000cf44:	d8800315 	stw	r2,12(sp)
1000cf48:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000cf4c <_ZNSt11range_errorC1ERKSs>:
1000cf4c:	defffe04 	addi	sp,sp,-8
1000cf50:	dc000015 	stw	r16,0(sp)
1000cf54:	dfc00115 	stw	ra,4(sp)
1000cf58:	2021883a 	mov	r16,r4
1000cf5c:	000cea40 	call	1000cea4 <_ZNSt13runtime_errorC1ERKSs>
1000cf60:	008400b4 	movhi	r2,4098
1000cf64:	1095d004 	addi	r2,r2,22336
1000cf68:	80800015 	stw	r2,0(r16)
1000cf6c:	dfc00117 	ldw	ra,4(sp)
1000cf70:	dc000017 	ldw	r16,0(sp)
1000cf74:	dec00204 	addi	sp,sp,8
1000cf78:	f800283a 	ret

1000cf7c <_ZNSt14overflow_errorC1ERKSs>:
1000cf7c:	defffe04 	addi	sp,sp,-8
1000cf80:	dc000015 	stw	r16,0(sp)
1000cf84:	dfc00115 	stw	ra,4(sp)
1000cf88:	2021883a 	mov	r16,r4
1000cf8c:	000cea40 	call	1000cea4 <_ZNSt13runtime_errorC1ERKSs>
1000cf90:	008400b4 	movhi	r2,4098
1000cf94:	1095d504 	addi	r2,r2,22356
1000cf98:	80800015 	stw	r2,0(r16)
1000cf9c:	dfc00117 	ldw	ra,4(sp)
1000cfa0:	dc000017 	ldw	r16,0(sp)
1000cfa4:	dec00204 	addi	sp,sp,8
1000cfa8:	f800283a 	ret

1000cfac <_ZNSt15underflow_errorC1ERKSs>:
1000cfac:	defffe04 	addi	sp,sp,-8
1000cfb0:	dc000015 	stw	r16,0(sp)
1000cfb4:	dfc00115 	stw	ra,4(sp)
1000cfb8:	2021883a 	mov	r16,r4
1000cfbc:	000cea40 	call	1000cea4 <_ZNSt13runtime_errorC1ERKSs>
1000cfc0:	008400b4 	movhi	r2,4098
1000cfc4:	1095da04 	addi	r2,r2,22376
1000cfc8:	80800015 	stw	r2,0(r16)
1000cfcc:	dfc00117 	ldw	ra,4(sp)
1000cfd0:	dc000017 	ldw	r16,0(sp)
1000cfd4:	dec00204 	addi	sp,sp,8
1000cfd8:	f800283a 	ret

1000cfdc <_ZNSt12__sso_stringC1Ev>:
1000cfdc:	20800204 	addi	r2,r4,8
1000cfe0:	20800015 	stw	r2,0(r4)
1000cfe4:	20000115 	stw	zero,4(r4)
1000cfe8:	20000205 	stb	zero,8(r4)
1000cfec:	f800283a 	ret

1000cff0 <_ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000cff0:	20c00204 	addi	r3,r4,8
1000cff4:	20c00015 	stw	r3,0(r4)
1000cff8:	28800017 	ldw	r2,0(r5)
1000cffc:	29800117 	ldw	r6,4(r5)
1000d000:	000f883a 	mov	r7,zero
1000d004:	100b883a 	mov	r5,r2
1000d008:	118d883a 	add	r6,r2,r6
1000d00c:	001394c1 	jmpi	1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

1000d010 <_ZNSt12__sso_stringC1EPKcj>:
1000d010:	20c00204 	addi	r3,r4,8
1000d014:	000f883a 	mov	r7,zero
1000d018:	298d883a 	add	r6,r5,r6
1000d01c:	20c00015 	stw	r3,0(r4)
1000d020:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

1000d024 <_ZNSt12__sso_stringC1ERKS_>:
1000d024:	defff004 	addi	sp,sp,-64
1000d028:	00c40074 	movhi	r3,4097
1000d02c:	008400b4 	movhi	r2,4098
1000d030:	dc000d15 	stw	r16,52(sp)
1000d034:	18e26504 	addi	r3,r3,-30316
1000d038:	2021883a 	mov	r16,r4
1000d03c:	10915904 	addi	r2,r2,17764
1000d040:	d809883a 	mov	r4,sp
1000d044:	dfc00f15 	stw	ra,60(sp)
1000d048:	dc400e15 	stw	r17,56(sp)
1000d04c:	d8c00615 	stw	r3,24(sp)
1000d050:	2823883a 	mov	r17,r5
1000d054:	d8800715 	stw	r2,28(sp)
1000d058:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000d05c:	80800204 	addi	r2,r16,8
1000d060:	80800015 	stw	r2,0(r16)
1000d064:	88800017 	ldw	r2,0(r17)
1000d068:	89800117 	ldw	r6,4(r17)
1000d06c:	000f883a 	mov	r7,zero
1000d070:	100b883a 	mov	r5,r2
1000d074:	118d883a 	add	r6,r2,r6
1000d078:	8009883a 	mov	r4,r16
1000d07c:	d8000115 	stw	zero,4(sp)
1000d080:	001394c0 	call	1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
1000d084:	d809883a 	mov	r4,sp
1000d088:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000d08c:	dfc00f17 	ldw	ra,60(sp)
1000d090:	dc400e17 	ldw	r17,56(sp)
1000d094:	dc000d17 	ldw	r16,52(sp)
1000d098:	dec01004 	addi	sp,sp,64
1000d09c:	f800283a 	ret

1000d0a0 <_ZNSt12__sso_stringaSERKS_>:
1000d0a0:	defff004 	addi	sp,sp,-64
1000d0a4:	01840074 	movhi	r6,4097
1000d0a8:	00c400b4 	movhi	r3,4098
1000d0ac:	dc000e15 	stw	r16,56(sp)
1000d0b0:	31a26504 	addi	r6,r6,-30316
1000d0b4:	18d15a04 	addi	r3,r3,17768
1000d0b8:	2021883a 	mov	r16,r4
1000d0bc:	d9000104 	addi	r4,sp,4
1000d0c0:	dfc00f15 	stw	ra,60(sp)
1000d0c4:	d9800715 	stw	r6,28(sp)
1000d0c8:	d8c00815 	stw	r3,32(sp)
1000d0cc:	d9400015 	stw	r5,0(sp)
1000d0d0:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000d0d4:	d9400017 	ldw	r5,0(sp)
1000d0d8:	8009883a 	mov	r4,r16
1000d0dc:	d8000215 	stw	zero,8(sp)
1000d0e0:	0010b240 	call	10010b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
1000d0e4:	d9000104 	addi	r4,sp,4
1000d0e8:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000d0ec:	8005883a 	mov	r2,r16
1000d0f0:	dfc00f17 	ldw	ra,60(sp)
1000d0f4:	dc000e17 	ldw	r16,56(sp)
1000d0f8:	dec01004 	addi	sp,sp,64
1000d0fc:	f800283a 	ret

1000d100 <_ZNSt12__sso_stringD1Ev>:
1000d100:	20c00017 	ldw	r3,0(r4)
1000d104:	20800204 	addi	r2,r4,8
1000d108:	18800226 	beq	r3,r2,1000d114 <_ZNSt12__sso_stringD1Ev+0x14>
1000d10c:	1809883a 	mov	r4,r3
1000d110:	00083fc1 	jmpi	100083fc <_ZdlPv>
1000d114:	f800283a 	ret

1000d118 <_ZNSt12__sso_stringC1EOS_>:
1000d118:	defffc04 	addi	sp,sp,-16
1000d11c:	dc800215 	stw	r18,8(sp)
1000d120:	dc400115 	stw	r17,4(sp)
1000d124:	dc000015 	stw	r16,0(sp)
1000d128:	dfc00315 	stw	ra,12(sp)
1000d12c:	2023883a 	mov	r17,r4
1000d130:	21000204 	addi	r4,r4,8
1000d134:	89000015 	stw	r4,0(r17)
1000d138:	28800017 	ldw	r2,0(r5)
1000d13c:	2c800204 	addi	r18,r5,8
1000d140:	2821883a 	mov	r16,r5
1000d144:	14800e26 	beq	r2,r18,1000d180 <_ZNSt12__sso_stringC1EOS_+0x68>
1000d148:	88800015 	stw	r2,0(r17)
1000d14c:	28800217 	ldw	r2,8(r5)
1000d150:	88800215 	stw	r2,8(r17)
1000d154:	80800117 	ldw	r2,4(r16)
1000d158:	88800115 	stw	r2,4(r17)
1000d15c:	84800015 	stw	r18,0(r16)
1000d160:	80000115 	stw	zero,4(r16)
1000d164:	80000205 	stb	zero,8(r16)
1000d168:	dfc00317 	ldw	ra,12(sp)
1000d16c:	dc800217 	ldw	r18,8(sp)
1000d170:	dc400117 	ldw	r17,4(sp)
1000d174:	dc000017 	ldw	r16,0(sp)
1000d178:	dec00404 	addi	sp,sp,16
1000d17c:	f800283a 	ret
1000d180:	01800404 	movi	r6,16
1000d184:	900b883a 	mov	r5,r18
1000d188:	00156f00 	call	100156f0 <memcpy>
1000d18c:	003ff106 	br	1000d154 <_ZNSt12__sso_stringC1EOS_+0x3c>

1000d190 <_ZNSt12__sso_stringaSEOS_>:
1000d190:	defffd04 	addi	sp,sp,-12
1000d194:	dc400115 	stw	r17,4(sp)
1000d198:	dc000015 	stw	r16,0(sp)
1000d19c:	dfc00215 	stw	ra,8(sp)
1000d1a0:	2821883a 	mov	r16,r5
1000d1a4:	29400017 	ldw	r5,0(r5)
1000d1a8:	80800204 	addi	r2,r16,8
1000d1ac:	2023883a 	mov	r17,r4
1000d1b0:	21000017 	ldw	r4,0(r4)
1000d1b4:	28801a26 	beq	r5,r2,1000d220 <_ZNSt12__sso_stringaSEOS_+0x90>
1000d1b8:	88c00204 	addi	r3,r17,8
1000d1bc:	89400015 	stw	r5,0(r17)
1000d1c0:	20c01026 	beq	r4,r3,1000d204 <_ZNSt12__sso_stringaSEOS_+0x74>
1000d1c4:	81400117 	ldw	r5,4(r16)
1000d1c8:	88c00217 	ldw	r3,8(r17)
1000d1cc:	89400115 	stw	r5,4(r17)
1000d1d0:	81400217 	ldw	r5,8(r16)
1000d1d4:	89400215 	stw	r5,8(r17)
1000d1d8:	20000e26 	beq	r4,zero,1000d214 <_ZNSt12__sso_stringaSEOS_+0x84>
1000d1dc:	81000015 	stw	r4,0(r16)
1000d1e0:	80c00215 	stw	r3,8(r16)
1000d1e4:	80000115 	stw	zero,4(r16)
1000d1e8:	8805883a 	mov	r2,r17
1000d1ec:	20000005 	stb	zero,0(r4)
1000d1f0:	dfc00217 	ldw	ra,8(sp)
1000d1f4:	dc400117 	ldw	r17,4(sp)
1000d1f8:	dc000017 	ldw	r16,0(sp)
1000d1fc:	dec00304 	addi	sp,sp,12
1000d200:	f800283a 	ret
1000d204:	80c00117 	ldw	r3,4(r16)
1000d208:	88c00115 	stw	r3,4(r17)
1000d20c:	80c00217 	ldw	r3,8(r16)
1000d210:	88c00215 	stw	r3,8(r17)
1000d214:	80800015 	stw	r2,0(r16)
1000d218:	1009883a 	mov	r4,r2
1000d21c:	003ff106 	br	1000d1e4 <_ZNSt12__sso_stringaSEOS_+0x54>
1000d220:	81800117 	ldw	r6,4(r16)
1000d224:	30000526 	beq	r6,zero,1000d23c <_ZNSt12__sso_stringaSEOS_+0xac>
1000d228:	30800058 	cmpnei	r2,r6,1
1000d22c:	10000826 	beq	r2,zero,1000d250 <_ZNSt12__sso_stringaSEOS_+0xc0>
1000d230:	00156f00 	call	100156f0 <memcpy>
1000d234:	81800117 	ldw	r6,4(r16)
1000d238:	89000017 	ldw	r4,0(r17)
1000d23c:	89800115 	stw	r6,4(r17)
1000d240:	2189883a 	add	r4,r4,r6
1000d244:	20000005 	stb	zero,0(r4)
1000d248:	81000017 	ldw	r4,0(r16)
1000d24c:	003fe506 	br	1000d1e4 <_ZNSt12__sso_stringaSEOS_+0x54>
1000d250:	80800203 	ldbu	r2,8(r16)
1000d254:	20800005 	stb	r2,0(r4)
1000d258:	81800117 	ldw	r6,4(r16)
1000d25c:	89000017 	ldw	r4,0(r17)
1000d260:	003ff606 	br	1000d23c <_ZNSt12__sso_stringaSEOS_+0xac>

1000d264 <_ZNKSs7_M_dataEv>:
1000d264:	20800017 	ldw	r2,0(r4)
1000d268:	f800283a 	ret

1000d26c <_ZNSs7_M_dataEPc>:
1000d26c:	2805883a 	mov	r2,r5
1000d270:	21400015 	stw	r5,0(r4)
1000d274:	f800283a 	ret

1000d278 <_ZNKSs6_M_repEv>:
1000d278:	20800017 	ldw	r2,0(r4)
1000d27c:	10bffd04 	addi	r2,r2,-12
1000d280:	f800283a 	ret

1000d284 <_ZNKSs9_M_ibeginEv>:
1000d284:	20800017 	ldw	r2,0(r4)
1000d288:	f800283a 	ret

1000d28c <_ZNKSs7_M_iendEv>:
1000d28c:	20800017 	ldw	r2,0(r4)
1000d290:	10fffd17 	ldw	r3,-12(r2)
1000d294:	10c5883a 	add	r2,r2,r3
1000d298:	f800283a 	ret

1000d29c <_ZNKSs8_M_checkEjPKc>:
1000d29c:	20c00017 	ldw	r3,0(r4)
1000d2a0:	2805883a 	mov	r2,r5
1000d2a4:	19fffd17 	ldw	r7,-12(r3)
1000d2a8:	39400136 	bltu	r7,r5,1000d2b0 <_ZNKSs8_M_checkEjPKc+0x14>
1000d2ac:	f800283a 	ret
1000d2b0:	010400b4 	movhi	r4,4098
1000d2b4:	deffff04 	addi	sp,sp,-4
1000d2b8:	300b883a 	mov	r5,r6
1000d2bc:	2115dd04 	addi	r4,r4,22388
1000d2c0:	100d883a 	mov	r6,r2
1000d2c4:	dfc00015 	stw	ra,0(sp)
1000d2c8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000d2cc <_ZNKSs15_M_check_lengthEjjPKc>:
1000d2cc:	20c00017 	ldw	r3,0(r4)
1000d2d0:	00900034 	movhi	r2,16384
1000d2d4:	10bfff04 	addi	r2,r2,-4
1000d2d8:	18fffd17 	ldw	r3,-12(r3)
1000d2dc:	288b883a 	add	r5,r5,r2
1000d2e0:	28cbc83a 	sub	r5,r5,r3
1000d2e4:	29800136 	bltu	r5,r6,1000d2ec <_ZNKSs15_M_check_lengthEjjPKc+0x20>
1000d2e8:	f800283a 	ret
1000d2ec:	deffff04 	addi	sp,sp,-4
1000d2f0:	3809883a 	mov	r4,r7
1000d2f4:	dfc00015 	stw	ra,0(sp)
1000d2f8:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000d2fc <_ZNKSs8_M_limitEjj>:
1000d2fc:	20800017 	ldw	r2,0(r4)
1000d300:	10bffd17 	ldw	r2,-12(r2)
1000d304:	1145c83a 	sub	r2,r2,r5
1000d308:	3080012e 	bgeu	r6,r2,1000d310 <_ZNKSs8_M_limitEjj+0x14>
1000d30c:	3005883a 	mov	r2,r6
1000d310:	f800283a 	ret

1000d314 <_ZNKSs11_M_disjunctEPKc>:
1000d314:	20800017 	ldw	r2,0(r4)
1000d318:	28800436 	bltu	r5,r2,1000d32c <_ZNKSs11_M_disjunctEPKc+0x18>
1000d31c:	10fffd17 	ldw	r3,-12(r2)
1000d320:	10c5883a 	add	r2,r2,r3
1000d324:	1145803a 	cmpltu	r2,r2,r5
1000d328:	f800283a 	ret
1000d32c:	00800044 	movi	r2,1
1000d330:	f800283a 	ret

1000d334 <_ZNSs7_M_copyEPcPKcj>:
1000d334:	30c00058 	cmpnei	r3,r6,1
1000d338:	18000326 	beq	r3,zero,1000d348 <_ZNSs7_M_copyEPcPKcj+0x14>
1000d33c:	3000011e 	bne	r6,zero,1000d344 <_ZNSs7_M_copyEPcPKcj+0x10>
1000d340:	f800283a 	ret
1000d344:	00156f01 	jmpi	100156f0 <memcpy>
1000d348:	28800003 	ldbu	r2,0(r5)
1000d34c:	20800005 	stb	r2,0(r4)
1000d350:	f800283a 	ret

1000d354 <_ZNSs7_M_moveEPcPKcj>:
1000d354:	30c00058 	cmpnei	r3,r6,1
1000d358:	18000326 	beq	r3,zero,1000d368 <_ZNSs7_M_moveEPcPKcj+0x14>
1000d35c:	3000011e 	bne	r6,zero,1000d364 <_ZNSs7_M_moveEPcPKcj+0x10>
1000d360:	f800283a 	ret
1000d364:	00157f01 	jmpi	100157f0 <memmove>
1000d368:	28800003 	ldbu	r2,0(r5)
1000d36c:	20800005 	stb	r2,0(r4)
1000d370:	f800283a 	ret

1000d374 <_ZNSs9_M_assignEPcjc>:
1000d374:	28800058 	cmpnei	r2,r5,1
1000d378:	200f883a 	mov	r7,r4
1000d37c:	3007883a 	mov	r3,r6
1000d380:	10000726 	beq	r2,zero,1000d3a0 <_ZNSs9_M_assignEPcjc+0x2c>
1000d384:	2800011e 	bne	r5,zero,1000d38c <_ZNSs9_M_assignEPcjc+0x18>
1000d388:	f800283a 	ret
1000d38c:	280d883a 	mov	r6,r5
1000d390:	19403fcc 	andi	r5,r3,255
1000d394:	2940201c 	xori	r5,r5,128
1000d398:	297fe004 	addi	r5,r5,-128
1000d39c:	001591c1 	jmpi	1001591c <memset>
1000d3a0:	39800005 	stb	r6,0(r7)
1000d3a4:	f800283a 	ret

1000d3a8 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_>:
1000d3a8:	314dc83a 	sub	r6,r6,r5
1000d3ac:	30c00058 	cmpnei	r3,r6,1
1000d3b0:	18000326 	beq	r3,zero,1000d3c0 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x18>
1000d3b4:	3000011e 	bne	r6,zero,1000d3bc <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x14>
1000d3b8:	f800283a 	ret
1000d3bc:	00156f01 	jmpi	100156f0 <memcpy>
1000d3c0:	28800003 	ldbu	r2,0(r5)
1000d3c4:	20800005 	stb	r2,0(r4)
1000d3c8:	f800283a 	ret

1000d3cc <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_>:
1000d3cc:	314dc83a 	sub	r6,r6,r5
1000d3d0:	30c00058 	cmpnei	r3,r6,1
1000d3d4:	18000326 	beq	r3,zero,1000d3e4 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x18>
1000d3d8:	3000011e 	bne	r6,zero,1000d3e0 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x14>
1000d3dc:	f800283a 	ret
1000d3e0:	00156f01 	jmpi	100156f0 <memcpy>
1000d3e4:	28800003 	ldbu	r2,0(r5)
1000d3e8:	20800005 	stb	r2,0(r4)
1000d3ec:	f800283a 	ret

1000d3f0 <_ZNSs13_S_copy_charsEPcS_S_>:
1000d3f0:	314dc83a 	sub	r6,r6,r5
1000d3f4:	30c00058 	cmpnei	r3,r6,1
1000d3f8:	18000326 	beq	r3,zero,1000d408 <_ZNSs13_S_copy_charsEPcS_S_+0x18>
1000d3fc:	3000011e 	bne	r6,zero,1000d404 <_ZNSs13_S_copy_charsEPcS_S_+0x14>
1000d400:	f800283a 	ret
1000d404:	00156f01 	jmpi	100156f0 <memcpy>
1000d408:	28800003 	ldbu	r2,0(r5)
1000d40c:	20800005 	stb	r2,0(r4)
1000d410:	f800283a 	ret

1000d414 <_ZNSs13_S_copy_charsEPcPKcS1_>:
1000d414:	314dc83a 	sub	r6,r6,r5
1000d418:	30c00058 	cmpnei	r3,r6,1
1000d41c:	18000326 	beq	r3,zero,1000d42c <_ZNSs13_S_copy_charsEPcPKcS1_+0x18>
1000d420:	3000011e 	bne	r6,zero,1000d428 <_ZNSs13_S_copy_charsEPcPKcS1_+0x14>
1000d424:	f800283a 	ret
1000d428:	00156f01 	jmpi	100156f0 <memcpy>
1000d42c:	28800003 	ldbu	r2,0(r5)
1000d430:	20800005 	stb	r2,0(r4)
1000d434:	f800283a 	ret

1000d438 <_ZNSs10_S_compareEjj>:
1000d438:	2145c83a 	sub	r2,r4,r5
1000d43c:	f800283a 	ret

1000d440 <_ZNSs12_S_empty_repEv>:
1000d440:	008400f4 	movhi	r2,4099
1000d444:	10aa7e04 	addi	r2,r2,-22024
1000d448:	f800283a 	ret

1000d44c <_ZNSsC1Ev>:
1000d44c:	008400f4 	movhi	r2,4099
1000d450:	10aa8104 	addi	r2,r2,-22012
1000d454:	20800015 	stw	r2,0(r4)
1000d458:	f800283a 	ret

1000d45c <_ZNSsC1EOSs>:
1000d45c:	28c00017 	ldw	r3,0(r5)
1000d460:	008400f4 	movhi	r2,4099
1000d464:	10aa8104 	addi	r2,r2,-22012
1000d468:	20c00015 	stw	r3,0(r4)
1000d46c:	28800015 	stw	r2,0(r5)
1000d470:	f800283a 	ret

1000d474 <_ZNKSs5beginEv>:
1000d474:	20800017 	ldw	r2,0(r4)
1000d478:	f800283a 	ret

1000d47c <_ZNKSs3endEv>:
1000d47c:	20800017 	ldw	r2,0(r4)
1000d480:	10fffd17 	ldw	r3,-12(r2)
1000d484:	10c5883a 	add	r2,r2,r3
1000d488:	f800283a 	ret

1000d48c <_ZNKSs6rbeginEv>:
1000d48c:	28c00017 	ldw	r3,0(r5)
1000d490:	2005883a 	mov	r2,r4
1000d494:	197ffd17 	ldw	r5,-12(r3)
1000d498:	1947883a 	add	r3,r3,r5
1000d49c:	20c00015 	stw	r3,0(r4)
1000d4a0:	f800283a 	ret

1000d4a4 <_ZNKSs4rendEv>:
1000d4a4:	28c00017 	ldw	r3,0(r5)
1000d4a8:	2005883a 	mov	r2,r4
1000d4ac:	20c00015 	stw	r3,0(r4)
1000d4b0:	f800283a 	ret

1000d4b4 <_ZNKSs6cbeginEv>:
1000d4b4:	20800017 	ldw	r2,0(r4)
1000d4b8:	f800283a 	ret

1000d4bc <_ZNKSs4cendEv>:
1000d4bc:	20800017 	ldw	r2,0(r4)
1000d4c0:	10fffd17 	ldw	r3,-12(r2)
1000d4c4:	10c5883a 	add	r2,r2,r3
1000d4c8:	f800283a 	ret

1000d4cc <_ZNKSs7crbeginEv>:
1000d4cc:	28c00017 	ldw	r3,0(r5)
1000d4d0:	2005883a 	mov	r2,r4
1000d4d4:	197ffd17 	ldw	r5,-12(r3)
1000d4d8:	1947883a 	add	r3,r3,r5
1000d4dc:	20c00015 	stw	r3,0(r4)
1000d4e0:	f800283a 	ret

1000d4e4 <_ZNKSs5crendEv>:
1000d4e4:	28c00017 	ldw	r3,0(r5)
1000d4e8:	2005883a 	mov	r2,r4
1000d4ec:	20c00015 	stw	r3,0(r4)
1000d4f0:	f800283a 	ret

1000d4f4 <_ZNKSs4sizeEv>:
1000d4f4:	20800017 	ldw	r2,0(r4)
1000d4f8:	10bffd17 	ldw	r2,-12(r2)
1000d4fc:	f800283a 	ret

1000d500 <_ZNKSs6lengthEv>:
1000d500:	20800017 	ldw	r2,0(r4)
1000d504:	10bffd17 	ldw	r2,-12(r2)
1000d508:	f800283a 	ret

1000d50c <_ZNKSs8max_sizeEv>:
1000d50c:	00900034 	movhi	r2,16384
1000d510:	10bfff04 	addi	r2,r2,-4
1000d514:	f800283a 	ret

1000d518 <_ZNKSs8capacityEv>:
1000d518:	20800017 	ldw	r2,0(r4)
1000d51c:	10bffe17 	ldw	r2,-8(r2)
1000d520:	f800283a 	ret

1000d524 <_ZNKSs5emptyEv>:
1000d524:	20800017 	ldw	r2,0(r4)
1000d528:	10bffd17 	ldw	r2,-12(r2)
1000d52c:	1005003a 	cmpeq	r2,r2,zero
1000d530:	f800283a 	ret

1000d534 <_ZNKSsixEj>:
1000d534:	20800017 	ldw	r2,0(r4)
1000d538:	1145883a 	add	r2,r2,r5
1000d53c:	f800283a 	ret

1000d540 <_ZNKSs2atEj>:
1000d540:	20c00017 	ldw	r3,0(r4)
1000d544:	19bffd17 	ldw	r6,-12(r3)
1000d548:	2980022e 	bgeu	r5,r6,1000d554 <_ZNKSs2atEj+0x14>
1000d54c:	1945883a 	add	r2,r3,r5
1000d550:	f800283a 	ret
1000d554:	010400b4 	movhi	r4,4098
1000d558:	deffff04 	addi	sp,sp,-4
1000d55c:	2115eb04 	addi	r4,r4,22444
1000d560:	dfc00015 	stw	ra,0(sp)
1000d564:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000d568 <_ZNKSs5frontEv>:
1000d568:	20800017 	ldw	r2,0(r4)
1000d56c:	f800283a 	ret

1000d570 <_ZNKSs4backEv>:
1000d570:	20c00017 	ldw	r3,0(r4)
1000d574:	18bffd17 	ldw	r2,-12(r3)
1000d578:	10bfffc4 	addi	r2,r2,-1
1000d57c:	1885883a 	add	r2,r3,r2
1000d580:	f800283a 	ret

1000d584 <_ZNKSs4copyEPcjj>:
1000d584:	20c00017 	ldw	r3,0(r4)
1000d588:	defffe04 	addi	sp,sp,-8
1000d58c:	dc000015 	stw	r16,0(sp)
1000d590:	1c3ffd17 	ldw	r16,-12(r3)
1000d594:	dfc00115 	stw	ra,4(sp)
1000d598:	3805883a 	mov	r2,r7
1000d59c:	81c01436 	bltu	r16,r7,1000d5f0 <_ZNKSs4copyEPcjj+0x6c>
1000d5a0:	81e1c83a 	sub	r16,r16,r7
1000d5a4:	2809883a 	mov	r4,r5
1000d5a8:	34000b36 	bltu	r6,r16,1000d5d8 <_ZNKSs4copyEPcjj+0x54>
1000d5ac:	80000526 	beq	r16,zero,1000d5c4 <_ZNKSs4copyEPcjj+0x40>
1000d5b0:	81800058 	cmpnei	r6,r16,1
1000d5b4:	188b883a 	add	r5,r3,r2
1000d5b8:	30000a26 	beq	r6,zero,1000d5e4 <_ZNKSs4copyEPcjj+0x60>
1000d5bc:	800d883a 	mov	r6,r16
1000d5c0:	00156f00 	call	100156f0 <memcpy>
1000d5c4:	8005883a 	mov	r2,r16
1000d5c8:	dfc00117 	ldw	ra,4(sp)
1000d5cc:	dc000017 	ldw	r16,0(sp)
1000d5d0:	dec00204 	addi	sp,sp,8
1000d5d4:	f800283a 	ret
1000d5d8:	3021883a 	mov	r16,r6
1000d5dc:	803ff926 	beq	r16,zero,1000d5c4 <_ZNKSs4copyEPcjj+0x40>
1000d5e0:	003ff306 	br	1000d5b0 <_ZNKSs4copyEPcjj+0x2c>
1000d5e4:	28800003 	ldbu	r2,0(r5)
1000d5e8:	20800005 	stb	r2,0(r4)
1000d5ec:	003ff506 	br	1000d5c4 <_ZNKSs4copyEPcjj+0x40>
1000d5f0:	014400b4 	movhi	r5,4098
1000d5f4:	010400b4 	movhi	r4,4098
1000d5f8:	800f883a 	mov	r7,r16
1000d5fc:	100d883a 	mov	r6,r2
1000d600:	2955fc04 	addi	r5,r5,22512
1000d604:	2115dd04 	addi	r4,r4,22388
1000d608:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000d60c <_ZNSs4swapERSs>:
1000d60c:	20800017 	ldw	r2,0(r4)
1000d610:	10ffff17 	ldw	r3,-4(r2)
1000d614:	1800010e 	bge	r3,zero,1000d61c <_ZNSs4swapERSs+0x10>
1000d618:	103fff15 	stw	zero,-4(r2)
1000d61c:	28c00017 	ldw	r3,0(r5)
1000d620:	19bfff17 	ldw	r6,-4(r3)
1000d624:	3000010e 	bge	r6,zero,1000d62c <_ZNSs4swapERSs+0x20>
1000d628:	183fff15 	stw	zero,-4(r3)
1000d62c:	20c00015 	stw	r3,0(r4)
1000d630:	28800015 	stw	r2,0(r5)
1000d634:	f800283a 	ret

1000d638 <_ZNSsaSEOSs>:
1000d638:	defffe04 	addi	sp,sp,-8
1000d63c:	dc000015 	stw	r16,0(sp)
1000d640:	dfc00115 	stw	ra,4(sp)
1000d644:	2021883a 	mov	r16,r4
1000d648:	000d60c0 	call	1000d60c <_ZNSs4swapERSs>
1000d64c:	8005883a 	mov	r2,r16
1000d650:	dfc00117 	ldw	ra,4(sp)
1000d654:	dc000017 	ldw	r16,0(sp)
1000d658:	dec00204 	addi	sp,sp,8
1000d65c:	f800283a 	ret

1000d660 <_ZNSs6assignEOSs>:
1000d660:	defffe04 	addi	sp,sp,-8
1000d664:	dc000015 	stw	r16,0(sp)
1000d668:	dfc00115 	stw	ra,4(sp)
1000d66c:	2021883a 	mov	r16,r4
1000d670:	000d60c0 	call	1000d60c <_ZNSs4swapERSs>
1000d674:	8005883a 	mov	r2,r16
1000d678:	dfc00117 	ldw	ra,4(sp)
1000d67c:	dc000017 	ldw	r16,0(sp)
1000d680:	dec00204 	addi	sp,sp,8
1000d684:	f800283a 	ret

1000d688 <_ZNKSs5c_strEv>:
1000d688:	20800017 	ldw	r2,0(r4)
1000d68c:	f800283a 	ret

1000d690 <_ZNKSs4dataEv>:
1000d690:	20800017 	ldw	r2,0(r4)
1000d694:	f800283a 	ret

1000d698 <_ZNKSs13get_allocatorEv>:
1000d698:	2005883a 	mov	r2,r4
1000d69c:	f800283a 	ret

1000d6a0 <_ZNKSs4findEPKcjj>:
1000d6a0:	defff804 	addi	sp,sp,-32
1000d6a4:	dd000415 	stw	r20,16(sp)
1000d6a8:	25000017 	ldw	r20,0(r4)
1000d6ac:	dc800215 	stw	r18,8(sp)
1000d6b0:	dfc00715 	stw	ra,28(sp)
1000d6b4:	dd800615 	stw	r22,24(sp)
1000d6b8:	dd400515 	stw	r21,20(sp)
1000d6bc:	dcc00315 	stw	r19,12(sp)
1000d6c0:	dc400115 	stw	r17,4(sp)
1000d6c4:	dc000015 	stw	r16,0(sp)
1000d6c8:	a4bffd17 	ldw	r18,-12(r20)
1000d6cc:	38002526 	beq	r7,zero,1000d764 <_ZNKSs4findEPKcjj+0xc4>
1000d6d0:	3480192e 	bgeu	r6,r18,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d6d4:	9185c83a 	sub	r2,r18,r6
1000d6d8:	a189883a 	add	r4,r20,r6
1000d6dc:	a4a5883a 	add	r18,r20,r18
1000d6e0:	11c01536 	bltu	r2,r7,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d6e4:	05400044 	movi	r21,1
1000d6e8:	a9ebc83a 	sub	r21,r21,r7
1000d6ec:	a88d883a 	add	r6,r21,r2
1000d6f0:	30001126 	beq	r6,zero,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d6f4:	2d800007 	ldb	r22,0(r5)
1000d6f8:	2827883a 	mov	r19,r5
1000d6fc:	3821883a 	mov	r16,r7
1000d700:	b00b883a 	mov	r5,r22
1000d704:	001557c0 	call	1001557c <memchr>
1000d708:	1023883a 	mov	r17,r2
1000d70c:	800d883a 	mov	r6,r16
1000d710:	980b883a 	mov	r5,r19
1000d714:	1009883a 	mov	r4,r2
1000d718:	10000726 	beq	r2,zero,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d71c:	00156640 	call	10015664 <memcmp>
1000d720:	89000044 	addi	r4,r17,1
1000d724:	9107c83a 	sub	r3,r18,r4
1000d728:	a8cd883a 	add	r6,r21,r3
1000d72c:	10001026 	beq	r2,zero,1000d770 <_ZNKSs4findEPKcjj+0xd0>
1000d730:	1c000136 	bltu	r3,r16,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d734:	303ff21e 	bne	r6,zero,1000d700 <_ZNKSs4findEPKcjj+0x60>
1000d738:	00bfffc4 	movi	r2,-1
1000d73c:	dfc00717 	ldw	ra,28(sp)
1000d740:	dd800617 	ldw	r22,24(sp)
1000d744:	dd400517 	ldw	r21,20(sp)
1000d748:	dd000417 	ldw	r20,16(sp)
1000d74c:	dcc00317 	ldw	r19,12(sp)
1000d750:	dc800217 	ldw	r18,8(sp)
1000d754:	dc400117 	ldw	r17,4(sp)
1000d758:	dc000017 	ldw	r16,0(sp)
1000d75c:	dec00804 	addi	sp,sp,32
1000d760:	f800283a 	ret
1000d764:	91bff436 	bltu	r18,r6,1000d738 <_ZNKSs4findEPKcjj+0x98>
1000d768:	3005883a 	mov	r2,r6
1000d76c:	003ff306 	br	1000d73c <_ZNKSs4findEPKcjj+0x9c>
1000d770:	8d05c83a 	sub	r2,r17,r20
1000d774:	003ff106 	br	1000d73c <_ZNKSs4findEPKcjj+0x9c>

1000d778 <_ZNKSs4findERKSsj>:
1000d778:	29400017 	ldw	r5,0(r5)
1000d77c:	29fffd17 	ldw	r7,-12(r5)
1000d780:	000d6a01 	jmpi	1000d6a0 <_ZNKSs4findEPKcjj>

1000d784 <_ZNKSs4findEPKcj>:
1000d784:	defffc04 	addi	sp,sp,-16
1000d788:	dc000215 	stw	r16,8(sp)
1000d78c:	2021883a 	mov	r16,r4
1000d790:	2809883a 	mov	r4,r5
1000d794:	dfc00315 	stw	ra,12(sp)
1000d798:	d9800115 	stw	r6,4(sp)
1000d79c:	d9400015 	stw	r5,0(sp)
1000d7a0:	00163ac0 	call	100163ac <strlen>
1000d7a4:	d9800117 	ldw	r6,4(sp)
1000d7a8:	d9400017 	ldw	r5,0(sp)
1000d7ac:	100f883a 	mov	r7,r2
1000d7b0:	8009883a 	mov	r4,r16
1000d7b4:	dfc00317 	ldw	ra,12(sp)
1000d7b8:	dc000217 	ldw	r16,8(sp)
1000d7bc:	dec00404 	addi	sp,sp,16
1000d7c0:	000d6a01 	jmpi	1000d6a0 <_ZNKSs4findEPKcjj>

1000d7c4 <_ZNKSs4findEcj>:
1000d7c4:	defffe04 	addi	sp,sp,-8
1000d7c8:	dc000015 	stw	r16,0(sp)
1000d7cc:	24000017 	ldw	r16,0(r4)
1000d7d0:	dfc00115 	stw	ra,4(sp)
1000d7d4:	80bffd17 	ldw	r2,-12(r16)
1000d7d8:	30800d2e 	bgeu	r6,r2,1000d810 <_ZNKSs4findEcj+0x4c>
1000d7dc:	29403fcc 	andi	r5,r5,255
1000d7e0:	3009883a 	mov	r4,r6
1000d7e4:	2940201c 	xori	r5,r5,128
1000d7e8:	118dc83a 	sub	r6,r2,r6
1000d7ec:	297fe004 	addi	r5,r5,-128
1000d7f0:	8109883a 	add	r4,r16,r4
1000d7f4:	001557c0 	call	1001557c <memchr>
1000d7f8:	10000526 	beq	r2,zero,1000d810 <_ZNKSs4findEcj+0x4c>
1000d7fc:	1405c83a 	sub	r2,r2,r16
1000d800:	dfc00117 	ldw	ra,4(sp)
1000d804:	dc000017 	ldw	r16,0(sp)
1000d808:	dec00204 	addi	sp,sp,8
1000d80c:	f800283a 	ret
1000d810:	00bfffc4 	movi	r2,-1
1000d814:	dfc00117 	ldw	ra,4(sp)
1000d818:	dc000017 	ldw	r16,0(sp)
1000d81c:	dec00204 	addi	sp,sp,8
1000d820:	f800283a 	ret

1000d824 <_ZNKSs5rfindEPKcjj>:
1000d824:	defffb04 	addi	sp,sp,-20
1000d828:	dcc00315 	stw	r19,12(sp)
1000d82c:	24c00017 	ldw	r19,0(r4)
1000d830:	dc000015 	stw	r16,0(sp)
1000d834:	dfc00415 	stw	ra,16(sp)
1000d838:	9c3ffd17 	ldw	r16,-12(r19)
1000d83c:	dc800215 	stw	r18,8(sp)
1000d840:	dc400115 	stw	r17,4(sp)
1000d844:	81c01b36 	bltu	r16,r7,1000d8b4 <_ZNKSs5rfindEPKcjj+0x90>
1000d848:	81e1c83a 	sub	r16,r16,r7
1000d84c:	2825883a 	mov	r18,r5
1000d850:	3823883a 	mov	r17,r7
1000d854:	34001536 	bltu	r6,r16,1000d8ac <_ZNKSs5rfindEPKcjj+0x88>
1000d858:	9c09883a 	add	r4,r19,r16
1000d85c:	880d883a 	mov	r6,r17
1000d860:	900b883a 	mov	r5,r18
1000d864:	88000926 	beq	r17,zero,1000d88c <_ZNKSs5rfindEPKcjj+0x68>
1000d868:	00156640 	call	10015664 <memcmp>
1000d86c:	10000726 	beq	r2,zero,1000d88c <_ZNKSs5rfindEPKcjj+0x68>
1000d870:	80bfffc4 	addi	r2,r16,-1
1000d874:	80000f26 	beq	r16,zero,1000d8b4 <_ZNKSs5rfindEPKcjj+0x90>
1000d878:	1021883a 	mov	r16,r2
1000d87c:	9c09883a 	add	r4,r19,r16
1000d880:	880d883a 	mov	r6,r17
1000d884:	900b883a 	mov	r5,r18
1000d888:	883ff71e 	bne	r17,zero,1000d868 <_ZNKSs5rfindEPKcjj+0x44>
1000d88c:	8005883a 	mov	r2,r16
1000d890:	dfc00417 	ldw	ra,16(sp)
1000d894:	dcc00317 	ldw	r19,12(sp)
1000d898:	dc800217 	ldw	r18,8(sp)
1000d89c:	dc400117 	ldw	r17,4(sp)
1000d8a0:	dc000017 	ldw	r16,0(sp)
1000d8a4:	dec00504 	addi	sp,sp,20
1000d8a8:	f800283a 	ret
1000d8ac:	3021883a 	mov	r16,r6
1000d8b0:	003fe906 	br	1000d858 <_ZNKSs5rfindEPKcjj+0x34>
1000d8b4:	043fffc4 	movi	r16,-1
1000d8b8:	003ff406 	br	1000d88c <_ZNKSs5rfindEPKcjj+0x68>

1000d8bc <_ZNKSs5rfindERKSsj>:
1000d8bc:	29400017 	ldw	r5,0(r5)
1000d8c0:	29fffd17 	ldw	r7,-12(r5)
1000d8c4:	000d8241 	jmpi	1000d824 <_ZNKSs5rfindEPKcjj>

1000d8c8 <_ZNKSs5rfindEPKcj>:
1000d8c8:	defffc04 	addi	sp,sp,-16
1000d8cc:	dc000215 	stw	r16,8(sp)
1000d8d0:	2021883a 	mov	r16,r4
1000d8d4:	2809883a 	mov	r4,r5
1000d8d8:	dfc00315 	stw	ra,12(sp)
1000d8dc:	d9800115 	stw	r6,4(sp)
1000d8e0:	d9400015 	stw	r5,0(sp)
1000d8e4:	00163ac0 	call	100163ac <strlen>
1000d8e8:	d9800117 	ldw	r6,4(sp)
1000d8ec:	d9400017 	ldw	r5,0(sp)
1000d8f0:	100f883a 	mov	r7,r2
1000d8f4:	8009883a 	mov	r4,r16
1000d8f8:	dfc00317 	ldw	ra,12(sp)
1000d8fc:	dc000217 	ldw	r16,8(sp)
1000d900:	dec00404 	addi	sp,sp,16
1000d904:	000d8241 	jmpi	1000d824 <_ZNKSs5rfindEPKcjj>

1000d908 <_ZNKSs5rfindEcj>:
1000d908:	21000017 	ldw	r4,0(r4)
1000d90c:	20bffd17 	ldw	r2,-12(r4)
1000d910:	10000e26 	beq	r2,zero,1000d94c <_ZNKSs5rfindEcj+0x44>
1000d914:	10bfffc4 	addi	r2,r2,-1
1000d918:	30800a36 	bltu	r6,r2,1000d944 <_ZNKSs5rfindEcj+0x3c>
1000d91c:	29403fcc 	andi	r5,r5,255
1000d920:	2940201c 	xori	r5,r5,128
1000d924:	297fe004 	addi	r5,r5,-128
1000d928:	2087883a 	add	r3,r4,r2
1000d92c:	18c00007 	ldb	r3,0(r3)
1000d930:	19400826 	beq	r3,r5,1000d954 <_ZNKSs5rfindEcj+0x4c>
1000d934:	10bfffc4 	addi	r2,r2,-1
1000d938:	10ffffe0 	cmpeqi	r3,r2,-1
1000d93c:	183ffa26 	beq	r3,zero,1000d928 <_ZNKSs5rfindEcj+0x20>
1000d940:	f800283a 	ret
1000d944:	3005883a 	mov	r2,r6
1000d948:	003ff406 	br	1000d91c <_ZNKSs5rfindEcj+0x14>
1000d94c:	00bfffc4 	movi	r2,-1
1000d950:	f800283a 	ret
1000d954:	f800283a 	ret

1000d958 <_ZNKSs13find_first_ofEPKcjj>:
1000d958:	38002126 	beq	r7,zero,1000d9e0 <_ZNKSs13find_first_ofEPKcjj+0x88>
1000d95c:	defffa04 	addi	sp,sp,-24
1000d960:	dc800215 	stw	r18,8(sp)
1000d964:	24800017 	ldw	r18,0(r4)
1000d968:	dcc00315 	stw	r19,12(sp)
1000d96c:	dd000415 	stw	r20,16(sp)
1000d970:	94fffd17 	ldw	r19,-12(r18)
1000d974:	dc400115 	stw	r17,4(sp)
1000d978:	dc000015 	stw	r16,0(sp)
1000d97c:	dfc00515 	stw	ra,20(sp)
1000d980:	3823883a 	mov	r17,r7
1000d984:	2829883a 	mov	r20,r5
1000d988:	3021883a 	mov	r16,r6
1000d98c:	34c00336 	bltu	r6,r19,1000d99c <_ZNKSs13find_first_ofEPKcjj+0x44>
1000d990:	00001106 	br	1000d9d8 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000d994:	84000044 	addi	r16,r16,1
1000d998:	84c00f26 	beq	r16,r19,1000d9d8 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000d99c:	9405883a 	add	r2,r18,r16
1000d9a0:	11400007 	ldb	r5,0(r2)
1000d9a4:	880d883a 	mov	r6,r17
1000d9a8:	a009883a 	mov	r4,r20
1000d9ac:	001557c0 	call	1001557c <memchr>
1000d9b0:	103ff826 	beq	r2,zero,1000d994 <_ZNKSs13find_first_ofEPKcjj+0x3c>
1000d9b4:	8005883a 	mov	r2,r16
1000d9b8:	dfc00517 	ldw	ra,20(sp)
1000d9bc:	dd000417 	ldw	r20,16(sp)
1000d9c0:	dcc00317 	ldw	r19,12(sp)
1000d9c4:	dc800217 	ldw	r18,8(sp)
1000d9c8:	dc400117 	ldw	r17,4(sp)
1000d9cc:	dc000017 	ldw	r16,0(sp)
1000d9d0:	dec00604 	addi	sp,sp,24
1000d9d4:	f800283a 	ret
1000d9d8:	00bfffc4 	movi	r2,-1
1000d9dc:	003ff606 	br	1000d9b8 <_ZNKSs13find_first_ofEPKcjj+0x60>
1000d9e0:	00bfffc4 	movi	r2,-1
1000d9e4:	f800283a 	ret

1000d9e8 <_ZNKSs13find_first_ofERKSsj>:
1000d9e8:	29400017 	ldw	r5,0(r5)
1000d9ec:	29fffd17 	ldw	r7,-12(r5)
1000d9f0:	000d9581 	jmpi	1000d958 <_ZNKSs13find_first_ofEPKcjj>

1000d9f4 <_ZNKSs13find_first_ofEPKcj>:
1000d9f4:	defffc04 	addi	sp,sp,-16
1000d9f8:	dc000215 	stw	r16,8(sp)
1000d9fc:	2021883a 	mov	r16,r4
1000da00:	2809883a 	mov	r4,r5
1000da04:	dfc00315 	stw	ra,12(sp)
1000da08:	d9800115 	stw	r6,4(sp)
1000da0c:	d9400015 	stw	r5,0(sp)
1000da10:	00163ac0 	call	100163ac <strlen>
1000da14:	d9800117 	ldw	r6,4(sp)
1000da18:	d9400017 	ldw	r5,0(sp)
1000da1c:	100f883a 	mov	r7,r2
1000da20:	8009883a 	mov	r4,r16
1000da24:	dfc00317 	ldw	ra,12(sp)
1000da28:	dc000217 	ldw	r16,8(sp)
1000da2c:	dec00404 	addi	sp,sp,16
1000da30:	000d9581 	jmpi	1000d958 <_ZNKSs13find_first_ofEPKcjj>

1000da34 <_ZNKSs13find_first_ofEcj>:
1000da34:	29403fcc 	andi	r5,r5,255
1000da38:	2940201c 	xori	r5,r5,128
1000da3c:	297fe004 	addi	r5,r5,-128
1000da40:	000d7c41 	jmpi	1000d7c4 <_ZNKSs4findEcj>

1000da44 <_ZNKSs12find_last_ofEPKcjj>:
1000da44:	defffb04 	addi	sp,sp,-20
1000da48:	dc800215 	stw	r18,8(sp)
1000da4c:	24800017 	ldw	r18,0(r4)
1000da50:	dc000015 	stw	r16,0(sp)
1000da54:	dfc00415 	stw	ra,16(sp)
1000da58:	943ffd17 	ldw	r16,-12(r18)
1000da5c:	dcc00315 	stw	r19,12(sp)
1000da60:	dc400115 	stw	r17,4(sp)
1000da64:	80001126 	beq	r16,zero,1000daac <_ZNKSs12find_last_ofEPKcjj+0x68>
1000da68:	38001026 	beq	r7,zero,1000daac <_ZNKSs12find_last_ofEPKcjj+0x68>
1000da6c:	843fffc4 	addi	r16,r16,-1
1000da70:	3823883a 	mov	r17,r7
1000da74:	2827883a 	mov	r19,r5
1000da78:	3400052e 	bgeu	r6,r16,1000da90 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000da7c:	3021883a 	mov	r16,r6
1000da80:	00000306 	br	1000da90 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000da84:	843fffc4 	addi	r16,r16,-1
1000da88:	80bfffd8 	cmpnei	r2,r16,-1
1000da8c:	10000826 	beq	r2,zero,1000dab0 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000da90:	9405883a 	add	r2,r18,r16
1000da94:	11400007 	ldb	r5,0(r2)
1000da98:	880d883a 	mov	r6,r17
1000da9c:	9809883a 	mov	r4,r19
1000daa0:	001557c0 	call	1001557c <memchr>
1000daa4:	103ff726 	beq	r2,zero,1000da84 <_ZNKSs12find_last_ofEPKcjj+0x40>
1000daa8:	00000106 	br	1000dab0 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000daac:	043fffc4 	movi	r16,-1
1000dab0:	8005883a 	mov	r2,r16
1000dab4:	dfc00417 	ldw	ra,16(sp)
1000dab8:	dcc00317 	ldw	r19,12(sp)
1000dabc:	dc800217 	ldw	r18,8(sp)
1000dac0:	dc400117 	ldw	r17,4(sp)
1000dac4:	dc000017 	ldw	r16,0(sp)
1000dac8:	dec00504 	addi	sp,sp,20
1000dacc:	f800283a 	ret

1000dad0 <_ZNKSs12find_last_ofERKSsj>:
1000dad0:	29400017 	ldw	r5,0(r5)
1000dad4:	29fffd17 	ldw	r7,-12(r5)
1000dad8:	000da441 	jmpi	1000da44 <_ZNKSs12find_last_ofEPKcjj>

1000dadc <_ZNKSs12find_last_ofEPKcj>:
1000dadc:	defffc04 	addi	sp,sp,-16
1000dae0:	dc000215 	stw	r16,8(sp)
1000dae4:	2021883a 	mov	r16,r4
1000dae8:	2809883a 	mov	r4,r5
1000daec:	dfc00315 	stw	ra,12(sp)
1000daf0:	d9800115 	stw	r6,4(sp)
1000daf4:	d9400015 	stw	r5,0(sp)
1000daf8:	00163ac0 	call	100163ac <strlen>
1000dafc:	d9800117 	ldw	r6,4(sp)
1000db00:	d9400017 	ldw	r5,0(sp)
1000db04:	100f883a 	mov	r7,r2
1000db08:	8009883a 	mov	r4,r16
1000db0c:	dfc00317 	ldw	ra,12(sp)
1000db10:	dc000217 	ldw	r16,8(sp)
1000db14:	dec00404 	addi	sp,sp,16
1000db18:	000da441 	jmpi	1000da44 <_ZNKSs12find_last_ofEPKcjj>

1000db1c <_ZNKSs12find_last_ofEcj>:
1000db1c:	29403fcc 	andi	r5,r5,255
1000db20:	2940201c 	xori	r5,r5,128
1000db24:	297fe004 	addi	r5,r5,-128
1000db28:	000d9081 	jmpi	1000d908 <_ZNKSs5rfindEcj>

1000db2c <_ZNKSs17find_first_not_ofEPKcjj>:
1000db2c:	defffa04 	addi	sp,sp,-24
1000db30:	dc400115 	stw	r17,4(sp)
1000db34:	24400017 	ldw	r17,0(r4)
1000db38:	dcc00315 	stw	r19,12(sp)
1000db3c:	dfc00515 	stw	ra,20(sp)
1000db40:	8cfffd17 	ldw	r19,-12(r17)
1000db44:	dd000415 	stw	r20,16(sp)
1000db48:	dc800215 	stw	r18,8(sp)
1000db4c:	dc000015 	stw	r16,0(sp)
1000db50:	34c0162e 	bgeu	r6,r19,1000dbac <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000db54:	3021883a 	mov	r16,r6
1000db58:	2829883a 	mov	r20,r5
1000db5c:	3825883a 	mov	r18,r7
1000db60:	3800031e 	bne	r7,zero,1000db70 <_ZNKSs17find_first_not_ofEPKcjj+0x44>
1000db64:	00000806 	br	1000db88 <_ZNKSs17find_first_not_ofEPKcjj+0x5c>
1000db68:	84000044 	addi	r16,r16,1
1000db6c:	84c00f26 	beq	r16,r19,1000dbac <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000db70:	8c05883a 	add	r2,r17,r16
1000db74:	11400007 	ldb	r5,0(r2)
1000db78:	900d883a 	mov	r6,r18
1000db7c:	a009883a 	mov	r4,r20
1000db80:	001557c0 	call	1001557c <memchr>
1000db84:	103ff81e 	bne	r2,zero,1000db68 <_ZNKSs17find_first_not_ofEPKcjj+0x3c>
1000db88:	8005883a 	mov	r2,r16
1000db8c:	dfc00517 	ldw	ra,20(sp)
1000db90:	dd000417 	ldw	r20,16(sp)
1000db94:	dcc00317 	ldw	r19,12(sp)
1000db98:	dc800217 	ldw	r18,8(sp)
1000db9c:	dc400117 	ldw	r17,4(sp)
1000dba0:	dc000017 	ldw	r16,0(sp)
1000dba4:	dec00604 	addi	sp,sp,24
1000dba8:	f800283a 	ret
1000dbac:	00bfffc4 	movi	r2,-1
1000dbb0:	003ff606 	br	1000db8c <_ZNKSs17find_first_not_ofEPKcjj+0x60>

1000dbb4 <_ZNKSs17find_first_not_ofERKSsj>:
1000dbb4:	29400017 	ldw	r5,0(r5)
1000dbb8:	29fffd17 	ldw	r7,-12(r5)
1000dbbc:	000db2c1 	jmpi	1000db2c <_ZNKSs17find_first_not_ofEPKcjj>

1000dbc0 <_ZNKSs17find_first_not_ofEPKcj>:
1000dbc0:	defffc04 	addi	sp,sp,-16
1000dbc4:	dc000215 	stw	r16,8(sp)
1000dbc8:	2021883a 	mov	r16,r4
1000dbcc:	2809883a 	mov	r4,r5
1000dbd0:	dfc00315 	stw	ra,12(sp)
1000dbd4:	d9800115 	stw	r6,4(sp)
1000dbd8:	d9400015 	stw	r5,0(sp)
1000dbdc:	00163ac0 	call	100163ac <strlen>
1000dbe0:	d9800117 	ldw	r6,4(sp)
1000dbe4:	d9400017 	ldw	r5,0(sp)
1000dbe8:	100f883a 	mov	r7,r2
1000dbec:	8009883a 	mov	r4,r16
1000dbf0:	dfc00317 	ldw	ra,12(sp)
1000dbf4:	dc000217 	ldw	r16,8(sp)
1000dbf8:	dec00404 	addi	sp,sp,16
1000dbfc:	000db2c1 	jmpi	1000db2c <_ZNKSs17find_first_not_ofEPKcjj>

1000dc00 <_ZNKSs17find_first_not_ofEcj>:
1000dc00:	20c00017 	ldw	r3,0(r4)
1000dc04:	19fffd17 	ldw	r7,-12(r3)
1000dc08:	31c00d2e 	bgeu	r6,r7,1000dc40 <_ZNKSs17find_first_not_ofEcj+0x40>
1000dc0c:	1985883a 	add	r2,r3,r6
1000dc10:	29403fcc 	andi	r5,r5,255
1000dc14:	10800007 	ldb	r2,0(r2)
1000dc18:	2940201c 	xori	r5,r5,128
1000dc1c:	297fe004 	addi	r5,r5,-128
1000dc20:	2880091e 	bne	r5,r2,1000dc48 <_ZNKSs17find_first_not_ofEcj+0x48>
1000dc24:	2809883a 	mov	r4,r5
1000dc28:	00000206 	br	1000dc34 <_ZNKSs17find_first_not_ofEcj+0x34>
1000dc2c:	10800007 	ldb	r2,0(r2)
1000dc30:	1100051e 	bne	r2,r4,1000dc48 <_ZNKSs17find_first_not_ofEcj+0x48>
1000dc34:	31800044 	addi	r6,r6,1
1000dc38:	1985883a 	add	r2,r3,r6
1000dc3c:	31fffb1e 	bne	r6,r7,1000dc2c <_ZNKSs17find_first_not_ofEcj+0x2c>
1000dc40:	00bfffc4 	movi	r2,-1
1000dc44:	f800283a 	ret
1000dc48:	3005883a 	mov	r2,r6
1000dc4c:	f800283a 	ret

1000dc50 <_ZNKSs16find_last_not_ofEPKcjj>:
1000dc50:	defffb04 	addi	sp,sp,-20
1000dc54:	dcc00315 	stw	r19,12(sp)
1000dc58:	24c00017 	ldw	r19,0(r4)
1000dc5c:	dc000015 	stw	r16,0(sp)
1000dc60:	dfc00415 	stw	ra,16(sp)
1000dc64:	9c3ffd17 	ldw	r16,-12(r19)
1000dc68:	dc800215 	stw	r18,8(sp)
1000dc6c:	dc400115 	stw	r17,4(sp)
1000dc70:	80001826 	beq	r16,zero,1000dcd4 <_ZNKSs16find_last_not_ofEPKcjj+0x84>
1000dc74:	843fffc4 	addi	r16,r16,-1
1000dc78:	3823883a 	mov	r17,r7
1000dc7c:	2825883a 	mov	r18,r5
1000dc80:	34001236 	bltu	r6,r16,1000dccc <_ZNKSs16find_last_not_ofEPKcjj+0x7c>
1000dc84:	9c05883a 	add	r2,r19,r16
1000dc88:	880d883a 	mov	r6,r17
1000dc8c:	9009883a 	mov	r4,r18
1000dc90:	88000626 	beq	r17,zero,1000dcac <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000dc94:	11400007 	ldb	r5,0(r2)
1000dc98:	001557c0 	call	1001557c <memchr>
1000dc9c:	10000326 	beq	r2,zero,1000dcac <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000dca0:	843fffc4 	addi	r16,r16,-1
1000dca4:	80bfffd8 	cmpnei	r2,r16,-1
1000dca8:	103ff61e 	bne	r2,zero,1000dc84 <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000dcac:	8005883a 	mov	r2,r16
1000dcb0:	dfc00417 	ldw	ra,16(sp)
1000dcb4:	dcc00317 	ldw	r19,12(sp)
1000dcb8:	dc800217 	ldw	r18,8(sp)
1000dcbc:	dc400117 	ldw	r17,4(sp)
1000dcc0:	dc000017 	ldw	r16,0(sp)
1000dcc4:	dec00504 	addi	sp,sp,20
1000dcc8:	f800283a 	ret
1000dccc:	3021883a 	mov	r16,r6
1000dcd0:	003fec06 	br	1000dc84 <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000dcd4:	043fffc4 	movi	r16,-1
1000dcd8:	003ff406 	br	1000dcac <_ZNKSs16find_last_not_ofEPKcjj+0x5c>

1000dcdc <_ZNKSs16find_last_not_ofERKSsj>:
1000dcdc:	29400017 	ldw	r5,0(r5)
1000dce0:	29fffd17 	ldw	r7,-12(r5)
1000dce4:	000dc501 	jmpi	1000dc50 <_ZNKSs16find_last_not_ofEPKcjj>

1000dce8 <_ZNKSs16find_last_not_ofEPKcj>:
1000dce8:	defffc04 	addi	sp,sp,-16
1000dcec:	dc000215 	stw	r16,8(sp)
1000dcf0:	2021883a 	mov	r16,r4
1000dcf4:	2809883a 	mov	r4,r5
1000dcf8:	dfc00315 	stw	ra,12(sp)
1000dcfc:	d9800115 	stw	r6,4(sp)
1000dd00:	d9400015 	stw	r5,0(sp)
1000dd04:	00163ac0 	call	100163ac <strlen>
1000dd08:	d9800117 	ldw	r6,4(sp)
1000dd0c:	d9400017 	ldw	r5,0(sp)
1000dd10:	100f883a 	mov	r7,r2
1000dd14:	8009883a 	mov	r4,r16
1000dd18:	dfc00317 	ldw	ra,12(sp)
1000dd1c:	dc000217 	ldw	r16,8(sp)
1000dd20:	dec00404 	addi	sp,sp,16
1000dd24:	000dc501 	jmpi	1000dc50 <_ZNKSs16find_last_not_ofEPKcjj>

1000dd28 <_ZNKSs16find_last_not_ofEcj>:
1000dd28:	21000017 	ldw	r4,0(r4)
1000dd2c:	20bffd17 	ldw	r2,-12(r4)
1000dd30:	10000f26 	beq	r2,zero,1000dd70 <_ZNKSs16find_last_not_ofEcj+0x48>
1000dd34:	10bfffc4 	addi	r2,r2,-1
1000dd38:	30800b36 	bltu	r6,r2,1000dd68 <_ZNKSs16find_last_not_ofEcj+0x40>
1000dd3c:	29403fcc 	andi	r5,r5,255
1000dd40:	2940201c 	xori	r5,r5,128
1000dd44:	297fe004 	addi	r5,r5,-128
1000dd48:	00000306 	br	1000dd58 <_ZNKSs16find_last_not_ofEcj+0x30>
1000dd4c:	10bfffc4 	addi	r2,r2,-1
1000dd50:	10ffffd8 	cmpnei	r3,r2,-1
1000dd54:	18000826 	beq	r3,zero,1000dd78 <_ZNKSs16find_last_not_ofEcj+0x50>
1000dd58:	2087883a 	add	r3,r4,r2
1000dd5c:	18c00007 	ldb	r3,0(r3)
1000dd60:	197ffa26 	beq	r3,r5,1000dd4c <_ZNKSs16find_last_not_ofEcj+0x24>
1000dd64:	f800283a 	ret
1000dd68:	3005883a 	mov	r2,r6
1000dd6c:	003ff306 	br	1000dd3c <_ZNKSs16find_last_not_ofEcj+0x14>
1000dd70:	00bfffc4 	movi	r2,-1
1000dd74:	f800283a 	ret
1000dd78:	f800283a 	ret

1000dd7c <_ZNKSs7compareERKSs>:
1000dd7c:	21000017 	ldw	r4,0(r4)
1000dd80:	29400017 	ldw	r5,0(r5)
1000dd84:	defffd04 	addi	sp,sp,-12
1000dd88:	dc400115 	stw	r17,4(sp)
1000dd8c:	dc000015 	stw	r16,0(sp)
1000dd90:	247ffd17 	ldw	r17,-12(r4)
1000dd94:	2c3ffd17 	ldw	r16,-12(r5)
1000dd98:	dfc00215 	stw	ra,8(sp)
1000dd9c:	8c000a2e 	bgeu	r17,r16,1000ddc8 <_ZNKSs7compareERKSs+0x4c>
1000dda0:	880d883a 	mov	r6,r17
1000dda4:	30000226 	beq	r6,zero,1000ddb0 <_ZNKSs7compareERKSs+0x34>
1000dda8:	00156640 	call	10015664 <memcmp>
1000ddac:	1000011e 	bne	r2,zero,1000ddb4 <_ZNKSs7compareERKSs+0x38>
1000ddb0:	8c05c83a 	sub	r2,r17,r16
1000ddb4:	dfc00217 	ldw	ra,8(sp)
1000ddb8:	dc400117 	ldw	r17,4(sp)
1000ddbc:	dc000017 	ldw	r16,0(sp)
1000ddc0:	dec00304 	addi	sp,sp,12
1000ddc4:	f800283a 	ret
1000ddc8:	800d883a 	mov	r6,r16
1000ddcc:	003ff506 	br	1000dda4 <_ZNKSs7compareERKSs+0x28>

1000ddd0 <_ZNKSs7compareEjjRKSs>:
1000ddd0:	21000017 	ldw	r4,0(r4)
1000ddd4:	defffd04 	addi	sp,sp,-12
1000ddd8:	dc000015 	stw	r16,0(sp)
1000dddc:	243ffd17 	ldw	r16,-12(r4)
1000dde0:	dfc00215 	stw	ra,8(sp)
1000dde4:	dc400115 	stw	r17,4(sp)
1000dde8:	2805883a 	mov	r2,r5
1000ddec:	81401836 	bltu	r16,r5,1000de50 <_ZNKSs7compareEjjRKSs+0x80>
1000ddf0:	8161c83a 	sub	r16,r16,r5
1000ddf4:	34001036 	bltu	r6,r16,1000de38 <_ZNKSs7compareEjjRKSs+0x68>
1000ddf8:	39400017 	ldw	r5,0(r7)
1000ddfc:	2c7ffd17 	ldw	r17,-12(r5)
1000de00:	880d883a 	mov	r6,r17
1000de04:	84400a36 	bltu	r16,r17,1000de30 <_ZNKSs7compareEjjRKSs+0x60>
1000de08:	30000326 	beq	r6,zero,1000de18 <_ZNKSs7compareEjjRKSs+0x48>
1000de0c:	2089883a 	add	r4,r4,r2
1000de10:	00156640 	call	10015664 <memcmp>
1000de14:	1000011e 	bne	r2,zero,1000de1c <_ZNKSs7compareEjjRKSs+0x4c>
1000de18:	8445c83a 	sub	r2,r16,r17
1000de1c:	dfc00217 	ldw	ra,8(sp)
1000de20:	dc400117 	ldw	r17,4(sp)
1000de24:	dc000017 	ldw	r16,0(sp)
1000de28:	dec00304 	addi	sp,sp,12
1000de2c:	f800283a 	ret
1000de30:	800d883a 	mov	r6,r16
1000de34:	003ff406 	br	1000de08 <_ZNKSs7compareEjjRKSs+0x38>
1000de38:	39400017 	ldw	r5,0(r7)
1000de3c:	3021883a 	mov	r16,r6
1000de40:	2c7ffd17 	ldw	r17,-12(r5)
1000de44:	880d883a 	mov	r6,r17
1000de48:	847fef2e 	bgeu	r16,r17,1000de08 <_ZNKSs7compareEjjRKSs+0x38>
1000de4c:	003ff806 	br	1000de30 <_ZNKSs7compareEjjRKSs+0x60>
1000de50:	014400b4 	movhi	r5,4098
1000de54:	010400b4 	movhi	r4,4098
1000de58:	800f883a 	mov	r7,r16
1000de5c:	100d883a 	mov	r6,r2
1000de60:	29560104 	addi	r5,r5,22532
1000de64:	2115dd04 	addi	r4,r4,22388
1000de68:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000de6c <_ZNKSs7compareEjjRKSsjj>:
1000de6c:	21000017 	ldw	r4,0(r4)
1000de70:	defffd04 	addi	sp,sp,-12
1000de74:	dc400115 	stw	r17,4(sp)
1000de78:	247ffd17 	ldw	r17,-12(r4)
1000de7c:	dfc00215 	stw	ra,8(sp)
1000de80:	dc000015 	stw	r16,0(sp)
1000de84:	2805883a 	mov	r2,r5
1000de88:	d8c00317 	ldw	r3,12(sp)
1000de8c:	da000417 	ldw	r8,16(sp)
1000de90:	89402536 	bltu	r17,r5,1000df28 <_ZNKSs7compareEjjRKSsjj+0xbc>
1000de94:	39400017 	ldw	r5,0(r7)
1000de98:	2c3ffd17 	ldw	r16,-12(r5)
1000de9c:	80c01b36 	bltu	r16,r3,1000df0c <_ZNKSs7compareEjjRKSsjj+0xa0>
1000dea0:	88a3c83a 	sub	r17,r17,r2
1000dea4:	34401536 	bltu	r6,r17,1000defc <_ZNKSs7compareEjjRKSsjj+0x90>
1000dea8:	80e1c83a 	sub	r16,r16,r3
1000deac:	44000f36 	bltu	r8,r16,1000deec <_ZNKSs7compareEjjRKSsjj+0x80>
1000deb0:	800d883a 	mov	r6,r16
1000deb4:	8c000b36 	bltu	r17,r16,1000dee4 <_ZNKSs7compareEjjRKSsjj+0x78>
1000deb8:	30000426 	beq	r6,zero,1000decc <_ZNKSs7compareEjjRKSsjj+0x60>
1000debc:	28cb883a 	add	r5,r5,r3
1000dec0:	2089883a 	add	r4,r4,r2
1000dec4:	00156640 	call	10015664 <memcmp>
1000dec8:	1000011e 	bne	r2,zero,1000ded0 <_ZNKSs7compareEjjRKSsjj+0x64>
1000decc:	8c05c83a 	sub	r2,r17,r16
1000ded0:	dfc00217 	ldw	ra,8(sp)
1000ded4:	dc400117 	ldw	r17,4(sp)
1000ded8:	dc000017 	ldw	r16,0(sp)
1000dedc:	dec00304 	addi	sp,sp,12
1000dee0:	f800283a 	ret
1000dee4:	880d883a 	mov	r6,r17
1000dee8:	003ff306 	br	1000deb8 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000deec:	4021883a 	mov	r16,r8
1000def0:	800d883a 	mov	r6,r16
1000def4:	8c3ff02e 	bgeu	r17,r16,1000deb8 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000def8:	003ffa06 	br	1000dee4 <_ZNKSs7compareEjjRKSsjj+0x78>
1000defc:	80e1c83a 	sub	r16,r16,r3
1000df00:	3023883a 	mov	r17,r6
1000df04:	443fea2e 	bgeu	r8,r16,1000deb0 <_ZNKSs7compareEjjRKSsjj+0x44>
1000df08:	003ff806 	br	1000deec <_ZNKSs7compareEjjRKSsjj+0x80>
1000df0c:	014400b4 	movhi	r5,4098
1000df10:	010400b4 	movhi	r4,4098
1000df14:	800f883a 	mov	r7,r16
1000df18:	180d883a 	mov	r6,r3
1000df1c:	29560104 	addi	r5,r5,22532
1000df20:	2115dd04 	addi	r4,r4,22388
1000df24:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
1000df28:	014400b4 	movhi	r5,4098
1000df2c:	010400b4 	movhi	r4,4098
1000df30:	880f883a 	mov	r7,r17
1000df34:	100d883a 	mov	r6,r2
1000df38:	29560104 	addi	r5,r5,22532
1000df3c:	2115dd04 	addi	r4,r4,22388
1000df40:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000df44 <_ZNKSs7compareEPKc>:
1000df44:	defffb04 	addi	sp,sp,-20
1000df48:	dc800215 	stw	r18,8(sp)
1000df4c:	24800017 	ldw	r18,0(r4)
1000df50:	dc400115 	stw	r17,4(sp)
1000df54:	2809883a 	mov	r4,r5
1000df58:	947ffd17 	ldw	r17,-12(r18)
1000df5c:	dcc00315 	stw	r19,12(sp)
1000df60:	dc000015 	stw	r16,0(sp)
1000df64:	dfc00415 	stw	ra,16(sp)
1000df68:	2827883a 	mov	r19,r5
1000df6c:	00163ac0 	call	100163ac <strlen>
1000df70:	1021883a 	mov	r16,r2
1000df74:	88800e2e 	bgeu	r17,r2,1000dfb0 <_ZNKSs7compareEPKc+0x6c>
1000df78:	880d883a 	mov	r6,r17
1000df7c:	30000426 	beq	r6,zero,1000df90 <_ZNKSs7compareEPKc+0x4c>
1000df80:	980b883a 	mov	r5,r19
1000df84:	9009883a 	mov	r4,r18
1000df88:	00156640 	call	10015664 <memcmp>
1000df8c:	1000011e 	bne	r2,zero,1000df94 <_ZNKSs7compareEPKc+0x50>
1000df90:	8c05c83a 	sub	r2,r17,r16
1000df94:	dfc00417 	ldw	ra,16(sp)
1000df98:	dcc00317 	ldw	r19,12(sp)
1000df9c:	dc800217 	ldw	r18,8(sp)
1000dfa0:	dc400117 	ldw	r17,4(sp)
1000dfa4:	dc000017 	ldw	r16,0(sp)
1000dfa8:	dec00504 	addi	sp,sp,20
1000dfac:	f800283a 	ret
1000dfb0:	100d883a 	mov	r6,r2
1000dfb4:	003ff106 	br	1000df7c <_ZNKSs7compareEPKc+0x38>

1000dfb8 <_ZNKSs7compareEjjPKc>:
1000dfb8:	defffa04 	addi	sp,sp,-24
1000dfbc:	dcc00315 	stw	r19,12(sp)
1000dfc0:	24c00017 	ldw	r19,0(r4)
1000dfc4:	dc000015 	stw	r16,0(sp)
1000dfc8:	dc800215 	stw	r18,8(sp)
1000dfcc:	9c3ffd17 	ldw	r16,-12(r19)
1000dfd0:	dfc00515 	stw	ra,20(sp)
1000dfd4:	dd000415 	stw	r20,16(sp)
1000dfd8:	dc400115 	stw	r17,4(sp)
1000dfdc:	2825883a 	mov	r18,r5
1000dfe0:	81401a36 	bltu	r16,r5,1000e04c <_ZNKSs7compareEjjPKc+0x94>
1000dfe4:	8161c83a 	sub	r16,r16,r5
1000dfe8:	3829883a 	mov	r20,r7
1000dfec:	34001536 	bltu	r6,r16,1000e044 <_ZNKSs7compareEjjPKc+0x8c>
1000dff0:	a009883a 	mov	r4,r20
1000dff4:	00163ac0 	call	100163ac <strlen>
1000dff8:	1023883a 	mov	r17,r2
1000dffc:	100d883a 	mov	r6,r2
1000e000:	80800e36 	bltu	r16,r2,1000e03c <_ZNKSs7compareEjjPKc+0x84>
1000e004:	30000426 	beq	r6,zero,1000e018 <_ZNKSs7compareEjjPKc+0x60>
1000e008:	a00b883a 	mov	r5,r20
1000e00c:	9c89883a 	add	r4,r19,r18
1000e010:	00156640 	call	10015664 <memcmp>
1000e014:	1000011e 	bne	r2,zero,1000e01c <_ZNKSs7compareEjjPKc+0x64>
1000e018:	8445c83a 	sub	r2,r16,r17
1000e01c:	dfc00517 	ldw	ra,20(sp)
1000e020:	dd000417 	ldw	r20,16(sp)
1000e024:	dcc00317 	ldw	r19,12(sp)
1000e028:	dc800217 	ldw	r18,8(sp)
1000e02c:	dc400117 	ldw	r17,4(sp)
1000e030:	dc000017 	ldw	r16,0(sp)
1000e034:	dec00604 	addi	sp,sp,24
1000e038:	f800283a 	ret
1000e03c:	800d883a 	mov	r6,r16
1000e040:	003ff006 	br	1000e004 <_ZNKSs7compareEjjPKc+0x4c>
1000e044:	3021883a 	mov	r16,r6
1000e048:	003fe906 	br	1000dff0 <_ZNKSs7compareEjjPKc+0x38>
1000e04c:	014400b4 	movhi	r5,4098
1000e050:	010400b4 	movhi	r4,4098
1000e054:	800f883a 	mov	r7,r16
1000e058:	900d883a 	mov	r6,r18
1000e05c:	29560104 	addi	r5,r5,22532
1000e060:	2115dd04 	addi	r4,r4,22388
1000e064:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e068 <_ZNKSs7compareEjjPKcj>:
1000e068:	21000017 	ldw	r4,0(r4)
1000e06c:	defffd04 	addi	sp,sp,-12
1000e070:	dc000015 	stw	r16,0(sp)
1000e074:	243ffd17 	ldw	r16,-12(r4)
1000e078:	dc400115 	stw	r17,4(sp)
1000e07c:	dfc00215 	stw	ra,8(sp)
1000e080:	2805883a 	mov	r2,r5
1000e084:	dc400317 	ldw	r17,12(sp)
1000e088:	81401536 	bltu	r16,r5,1000e0e0 <_ZNKSs7compareEjjPKcj+0x78>
1000e08c:	8161c83a 	sub	r16,r16,r5
1000e090:	34000f36 	bltu	r6,r16,1000e0d0 <_ZNKSs7compareEjjPKcj+0x68>
1000e094:	800d883a 	mov	r6,r16
1000e098:	8c000b36 	bltu	r17,r16,1000e0c8 <_ZNKSs7compareEjjPKcj+0x60>
1000e09c:	30000426 	beq	r6,zero,1000e0b0 <_ZNKSs7compareEjjPKcj+0x48>
1000e0a0:	380b883a 	mov	r5,r7
1000e0a4:	2089883a 	add	r4,r4,r2
1000e0a8:	00156640 	call	10015664 <memcmp>
1000e0ac:	1000011e 	bne	r2,zero,1000e0b4 <_ZNKSs7compareEjjPKcj+0x4c>
1000e0b0:	8445c83a 	sub	r2,r16,r17
1000e0b4:	dfc00217 	ldw	ra,8(sp)
1000e0b8:	dc400117 	ldw	r17,4(sp)
1000e0bc:	dc000017 	ldw	r16,0(sp)
1000e0c0:	dec00304 	addi	sp,sp,12
1000e0c4:	f800283a 	ret
1000e0c8:	880d883a 	mov	r6,r17
1000e0cc:	003ff306 	br	1000e09c <_ZNKSs7compareEjjPKcj+0x34>
1000e0d0:	3021883a 	mov	r16,r6
1000e0d4:	800d883a 	mov	r6,r16
1000e0d8:	8c3ff02e 	bgeu	r17,r16,1000e09c <_ZNKSs7compareEjjPKcj+0x34>
1000e0dc:	003ffa06 	br	1000e0c8 <_ZNKSs7compareEjjPKcj+0x60>
1000e0e0:	014400b4 	movhi	r5,4098
1000e0e4:	010400b4 	movhi	r4,4098
1000e0e8:	800f883a 	mov	r7,r16
1000e0ec:	100d883a 	mov	r6,r2
1000e0f0:	29560104 	addi	r5,r5,22532
1000e0f4:	2115dd04 	addi	r4,r4,22388
1000e0f8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e0fc <_ZNSs12_Alloc_hiderC1EPcRKSaIcE>:
1000e0fc:	21400015 	stw	r5,0(r4)
1000e100:	f800283a 	ret

1000e104 <_ZNSs4_Rep12_S_empty_repEv>:
1000e104:	008400f4 	movhi	r2,4099
1000e108:	10aa7e04 	addi	r2,r2,-22024
1000e10c:	f800283a 	ret

1000e110 <_ZNKSs4_Rep12_M_is_leakedEv>:
1000e110:	20800217 	ldw	r2,8(r4)
1000e114:	1004d7fa 	srli	r2,r2,31
1000e118:	f800283a 	ret

1000e11c <_ZNKSs4_Rep12_M_is_sharedEv>:
1000e11c:	20800217 	ldw	r2,8(r4)
1000e120:	0084803a 	cmplt	r2,zero,r2
1000e124:	f800283a 	ret

1000e128 <_ZNSs4_Rep13_M_set_leakedEv>:
1000e128:	00bfffc4 	movi	r2,-1
1000e12c:	20800215 	stw	r2,8(r4)
1000e130:	f800283a 	ret

1000e134 <_ZNSs4_Rep15_M_set_sharableEv>:
1000e134:	20000215 	stw	zero,8(r4)
1000e138:	f800283a 	ret

1000e13c <_ZNSs4_Rep26_M_set_length_and_sharableEj>:
1000e13c:	008400f4 	movhi	r2,4099
1000e140:	10aa7e04 	addi	r2,r2,-22024
1000e144:	2080011e 	bne	r4,r2,1000e14c <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x10>
1000e148:	f800283a 	ret
1000e14c:	20000215 	stw	zero,8(r4)
1000e150:	21400015 	stw	r5,0(r4)
1000e154:	2149883a 	add	r4,r4,r5
1000e158:	20000305 	stb	zero,12(r4)
1000e15c:	003ffa06 	br	1000e148 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0xc>

1000e160 <_ZNSs4_Rep10_M_refdataEv>:
1000e160:	20800304 	addi	r2,r4,12
1000e164:	f800283a 	ret

1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
1000e168:	defffe04 	addi	sp,sp,-8
1000e16c:	00900034 	movhi	r2,16384
1000e170:	dfc00115 	stw	ra,4(sp)
1000e174:	dc000015 	stw	r16,0(sp)
1000e178:	10bfff04 	addi	r2,r2,-4
1000e17c:	11001a36 	bltu	r2,r4,1000e1e8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x80>
1000e180:	2021883a 	mov	r16,r4
1000e184:	29000e2e 	bgeu	r5,r4,1000e1c0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000e188:	2945883a 	add	r2,r5,r5
1000e18c:	2080012e 	bgeu	r4,r2,1000e194 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x2c>
1000e190:	1021883a 	mov	r16,r2
1000e194:	80800744 	addi	r2,r16,29
1000e198:	10c40070 	cmpltui	r3,r2,4097
1000e19c:	81000344 	addi	r4,r16,13
1000e1a0:	1800081e 	bne	r3,zero,1000e1c4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000e1a4:	2c00072e 	bgeu	r5,r16,1000e1c4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000e1a8:	84040004 	addi	r16,r16,4096
1000e1ac:	1083ffcc 	andi	r2,r2,4095
1000e1b0:	00d00034 	movhi	r3,16384
1000e1b4:	80a1c83a 	sub	r16,r16,r2
1000e1b8:	18ffff04 	addi	r3,r3,-4
1000e1bc:	1c000836 	bltu	r3,r16,1000e1e0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x78>
1000e1c0:	81000344 	addi	r4,r16,13
1000e1c4:	0007ea80 	call	10007ea8 <_Znwj>
1000e1c8:	14000115 	stw	r16,4(r2)
1000e1cc:	10000215 	stw	zero,8(r2)
1000e1d0:	dfc00117 	ldw	ra,4(sp)
1000e1d4:	dc000017 	ldw	r16,0(sp)
1000e1d8:	dec00204 	addi	sp,sp,8
1000e1dc:	f800283a 	ret
1000e1e0:	1821883a 	mov	r16,r3
1000e1e4:	003ff606 	br	1000e1c0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000e1e8:	010400b4 	movhi	r4,4098
1000e1ec:	21160704 	addi	r4,r4,22556
1000e1f0:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000e1f4 <_ZNSs12_S_constructEjcRKSaIcE>:
1000e1f4:	2000041e 	bne	r4,zero,1000e208 <_ZNSs12_S_constructEjcRKSaIcE+0x14>
1000e1f8:	00c400f4 	movhi	r3,4099
1000e1fc:	18ea8104 	addi	r3,r3,-22012
1000e200:	1805883a 	mov	r2,r3
1000e204:	f800283a 	ret
1000e208:	defffc04 	addi	sp,sp,-16
1000e20c:	dc400115 	stw	r17,4(sp)
1000e210:	2823883a 	mov	r17,r5
1000e214:	000b883a 	mov	r5,zero
1000e218:	dc800215 	stw	r18,8(sp)
1000e21c:	dc000015 	stw	r16,0(sp)
1000e220:	dfc00315 	stw	ra,12(sp)
1000e224:	2021883a 	mov	r16,r4
1000e228:	000e1680 	call	1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e22c:	1025883a 	mov	r18,r2
1000e230:	80800058 	cmpnei	r2,r16,1
1000e234:	90c00304 	addi	r3,r18,12
1000e238:	10001126 	beq	r2,zero,1000e280 <_ZNSs12_S_constructEjcRKSaIcE+0x8c>
1000e23c:	89403fcc 	andi	r5,r17,255
1000e240:	2940201c 	xori	r5,r5,128
1000e244:	1809883a 	mov	r4,r3
1000e248:	800d883a 	mov	r6,r16
1000e24c:	297fe004 	addi	r5,r5,-128
1000e250:	001591c0 	call	1001591c <memset>
1000e254:	1007883a 	mov	r3,r2
1000e258:	008400f4 	movhi	r2,4099
1000e25c:	10aa7e04 	addi	r2,r2,-22024
1000e260:	9080091e 	bne	r18,r2,1000e288 <_ZNSs12_S_constructEjcRKSaIcE+0x94>
1000e264:	1805883a 	mov	r2,r3
1000e268:	dfc00317 	ldw	ra,12(sp)
1000e26c:	dc800217 	ldw	r18,8(sp)
1000e270:	dc400117 	ldw	r17,4(sp)
1000e274:	dc000017 	ldw	r16,0(sp)
1000e278:	dec00404 	addi	sp,sp,16
1000e27c:	f800283a 	ret
1000e280:	94400305 	stb	r17,12(r18)
1000e284:	003ff406 	br	1000e258 <_ZNSs12_S_constructEjcRKSaIcE+0x64>
1000e288:	90000215 	stw	zero,8(r18)
1000e28c:	94000015 	stw	r16,0(r18)
1000e290:	9405883a 	add	r2,r18,r16
1000e294:	10000305 	stb	zero,12(r2)
1000e298:	003ff206 	br	1000e264 <_ZNSs12_S_constructEjcRKSaIcE+0x70>

1000e29c <_ZNSsC1ERKSaIcE>:
1000e29c:	defffe04 	addi	sp,sp,-8
1000e2a0:	dc000015 	stw	r16,0(sp)
1000e2a4:	280d883a 	mov	r6,r5
1000e2a8:	2021883a 	mov	r16,r4
1000e2ac:	000b883a 	mov	r5,zero
1000e2b0:	0009883a 	mov	r4,zero
1000e2b4:	dfc00115 	stw	ra,4(sp)
1000e2b8:	000e1f40 	call	1000e1f4 <_ZNSs12_S_constructEjcRKSaIcE>
1000e2bc:	80800015 	stw	r2,0(r16)
1000e2c0:	dfc00117 	ldw	ra,4(sp)
1000e2c4:	dc000017 	ldw	r16,0(sp)
1000e2c8:	dec00204 	addi	sp,sp,8
1000e2cc:	f800283a 	ret

1000e2d0 <_ZNSsC1EjcRKSaIcE>:
1000e2d0:	2805883a 	mov	r2,r5
1000e2d4:	31403fcc 	andi	r5,r6,255
1000e2d8:	defffe04 	addi	sp,sp,-8
1000e2dc:	2940201c 	xori	r5,r5,128
1000e2e0:	dc000015 	stw	r16,0(sp)
1000e2e4:	297fe004 	addi	r5,r5,-128
1000e2e8:	2021883a 	mov	r16,r4
1000e2ec:	380d883a 	mov	r6,r7
1000e2f0:	1009883a 	mov	r4,r2
1000e2f4:	dfc00115 	stw	ra,4(sp)
1000e2f8:	000e1f40 	call	1000e1f4 <_ZNSs12_S_constructEjcRKSaIcE>
1000e2fc:	80800015 	stw	r2,0(r16)
1000e300:	dfc00117 	ldw	ra,4(sp)
1000e304:	dc000017 	ldw	r16,0(sp)
1000e308:	dec00204 	addi	sp,sp,8
1000e30c:	f800283a 	ret

1000e310 <_ZNSs18_S_construct_aux_2EjcRKSaIcE>:
1000e310:	29403fcc 	andi	r5,r5,255
1000e314:	2940201c 	xori	r5,r5,128
1000e318:	297fe004 	addi	r5,r5,-128
1000e31c:	000e1f41 	jmpi	1000e1f4 <_ZNSs12_S_constructEjcRKSaIcE>

1000e320 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>:
1000e320:	defffc04 	addi	sp,sp,-16
1000e324:	dc000015 	stw	r16,0(sp)
1000e328:	2921c83a 	sub	r16,r5,r4
1000e32c:	dc800215 	stw	r18,8(sp)
1000e330:	000b883a 	mov	r5,zero
1000e334:	2025883a 	mov	r18,r4
1000e338:	8009883a 	mov	r4,r16
1000e33c:	dc400115 	stw	r17,4(sp)
1000e340:	dfc00315 	stw	ra,12(sp)
1000e344:	000e1680 	call	1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e348:	1023883a 	mov	r17,r2
1000e34c:	80800058 	cmpnei	r2,r16,1
1000e350:	88c00304 	addi	r3,r17,12
1000e354:	10000f26 	beq	r2,zero,1000e394 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x74>
1000e358:	1809883a 	mov	r4,r3
1000e35c:	800d883a 	mov	r6,r16
1000e360:	900b883a 	mov	r5,r18
1000e364:	00156f00 	call	100156f0 <memcpy>
1000e368:	1007883a 	mov	r3,r2
1000e36c:	008400f4 	movhi	r2,4099
1000e370:	10aa7e04 	addi	r2,r2,-22024
1000e374:	88800c1e 	bne	r17,r2,1000e3a8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x88>
1000e378:	1805883a 	mov	r2,r3
1000e37c:	dfc00317 	ldw	ra,12(sp)
1000e380:	dc800217 	ldw	r18,8(sp)
1000e384:	dc400117 	ldw	r17,4(sp)
1000e388:	dc000017 	ldw	r16,0(sp)
1000e38c:	dec00404 	addi	sp,sp,16
1000e390:	f800283a 	ret
1000e394:	90800003 	ldbu	r2,0(r18)
1000e398:	88800305 	stb	r2,12(r17)
1000e39c:	008400f4 	movhi	r2,4099
1000e3a0:	10aa7e04 	addi	r2,r2,-22024
1000e3a4:	88bff426 	beq	r17,r2,1000e378 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>
1000e3a8:	8c000015 	stw	r16,0(r17)
1000e3ac:	88000215 	stw	zero,8(r17)
1000e3b0:	8c21883a 	add	r16,r17,r16
1000e3b4:	80000305 	stb	zero,12(r16)
1000e3b8:	003fef06 	br	1000e378 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>

1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>:
1000e3bc:	00083fc1 	jmpi	100083fc <_ZdlPv>

1000e3c0 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>:
1000e3c0:	20800217 	ldw	r2,8(r4)
1000e3c4:	11bfffc4 	addi	r6,r2,-1
1000e3c8:	21800215 	stw	r6,8(r4)
1000e3cc:	0080010e 	bge	zero,r2,1000e3d4 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12+0x14>
1000e3d0:	f800283a 	ret
1000e3d4:	000e3bc1 	jmpi	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000e3d8 <_ZNSs4_Rep10_M_disposeERKSaIcE>:
1000e3d8:	008400f4 	movhi	r2,4099
1000e3dc:	10aa7e04 	addi	r2,r2,-22024
1000e3e0:	2080011e 	bne	r4,r2,1000e3e8 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x10>
1000e3e4:	f800283a 	ret
1000e3e8:	20800217 	ldw	r2,8(r4)
1000e3ec:	11bfffc4 	addi	r6,r2,-1
1000e3f0:	21800215 	stw	r6,8(r4)
1000e3f4:	00bffb16 	blt	zero,r2,1000e3e4 <_ZNSs4_Rep10_M_disposeERKSaIcE+0xc>
1000e3f8:	000e3bc1 	jmpi	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000e3fc <_ZNSsD1Ev>:
1000e3fc:	20c00017 	ldw	r3,0(r4)
1000e400:	008400f4 	movhi	r2,4099
1000e404:	10aa7e04 	addi	r2,r2,-22024
1000e408:	193ffd04 	addi	r4,r3,-12
1000e40c:	2080011e 	bne	r4,r2,1000e414 <_ZNSsD1Ev+0x18>
1000e410:	f800283a 	ret
1000e414:	18bfff17 	ldw	r2,-4(r3)
1000e418:	117fffc4 	addi	r5,r2,-1
1000e41c:	197fff15 	stw	r5,-4(r3)
1000e420:	00bffb16 	blt	zero,r2,1000e410 <_ZNSsD1Ev+0x14>
1000e424:	defffe04 	addi	sp,sp,-8
1000e428:	d94000c4 	addi	r5,sp,3
1000e42c:	dfc00115 	stw	ra,4(sp)
1000e430:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000e434:	dfc00117 	ldw	ra,4(sp)
1000e438:	dec00204 	addi	sp,sp,8
1000e43c:	f800283a 	ret

1000e440 <_ZNSs5clearEv>:
1000e440:	20800017 	ldw	r2,0(r4)
1000e444:	00c400f4 	movhi	r3,4099
1000e448:	18ea7e04 	addi	r3,r3,-22024
1000e44c:	117fff17 	ldw	r5,-4(r2)
1000e450:	11bffd04 	addi	r6,r2,-12
1000e454:	0140050e 	bge	zero,r5,1000e46c <_ZNSs5clearEv+0x2c>
1000e458:	30c0061e 	bne	r6,r3,1000e474 <_ZNSs5clearEv+0x34>
1000e45c:	008400f4 	movhi	r2,4099
1000e460:	10aa8104 	addi	r2,r2,-22012
1000e464:	20800015 	stw	r2,0(r4)
1000e468:	f800283a 	ret
1000e46c:	30c0041e 	bne	r6,r3,1000e480 <_ZNSs5clearEv+0x40>
1000e470:	f800283a 	ret
1000e474:	297fffc4 	addi	r5,r5,-1
1000e478:	117fff15 	stw	r5,-4(r2)
1000e47c:	003ff706 	br	1000e45c <_ZNSs5clearEv+0x1c>
1000e480:	103fff15 	stw	zero,-4(r2)
1000e484:	103ffd15 	stw	zero,-12(r2)
1000e488:	10000005 	stb	zero,0(r2)
1000e48c:	003ff806 	br	1000e470 <_ZNSs5clearEv+0x30>

1000e490 <_ZNSs9_M_mutateEjjj>:
1000e490:	defff604 	addi	sp,sp,-40
1000e494:	dc000115 	stw	r16,4(sp)
1000e498:	24000017 	ldw	r16,0(r4)
1000e49c:	dd000515 	stw	r20,20(sp)
1000e4a0:	39a9c83a 	sub	r20,r7,r6
1000e4a4:	80bffd17 	ldw	r2,-12(r16)
1000e4a8:	80fffe17 	ldw	r3,-8(r16)
1000e4ac:	ddc00815 	stw	r23,32(sp)
1000e4b0:	dd800715 	stw	r22,28(sp)
1000e4b4:	dd400615 	stw	r21,24(sp)
1000e4b8:	dcc00415 	stw	r19,16(sp)
1000e4bc:	dc400215 	stw	r17,8(sp)
1000e4c0:	316f883a 	add	r23,r6,r5
1000e4c4:	dfc00915 	stw	ra,36(sp)
1000e4c8:	dc800315 	stw	r18,12(sp)
1000e4cc:	a0a9883a 	add	r20,r20,r2
1000e4d0:	202b883a 	mov	r21,r4
1000e4d4:	382d883a 	mov	r22,r7
1000e4d8:	2823883a 	mov	r17,r5
1000e4dc:	15e7c83a 	sub	r19,r2,r23
1000e4e0:	1d000236 	bltu	r3,r20,1000e4ec <_ZNSs9_M_mutateEjjj+0x5c>
1000e4e4:	80bfff17 	ldw	r2,-4(r16)
1000e4e8:	00802b0e 	bge	zero,r2,1000e598 <_ZNSs9_M_mutateEjjj+0x108>
1000e4ec:	d98000c4 	addi	r6,sp,3
1000e4f0:	180b883a 	mov	r5,r3
1000e4f4:	a009883a 	mov	r4,r20
1000e4f8:	000e1680 	call	1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e4fc:	1025883a 	mov	r18,r2
1000e500:	88001d1e 	bne	r17,zero,1000e578 <_ZNSs9_M_mutateEjjj+0xe8>
1000e504:	14000304 	addi	r16,r2,12
1000e508:	a9400017 	ldw	r5,0(r21)
1000e50c:	98000926 	beq	r19,zero,1000e534 <_ZNSs9_M_mutateEjjj+0xa4>
1000e510:	8c400304 	addi	r17,r17,12
1000e514:	8da3883a 	add	r17,r17,r22
1000e518:	98800058 	cmpnei	r2,r19,1
1000e51c:	9449883a 	add	r4,r18,r17
1000e520:	2dcb883a 	add	r5,r5,r23
1000e524:	10003626 	beq	r2,zero,1000e600 <_ZNSs9_M_mutateEjjj+0x170>
1000e528:	980d883a 	mov	r6,r19
1000e52c:	00156f00 	call	100156f0 <memcpy>
1000e530:	a9400017 	ldw	r5,0(r21)
1000e534:	044400f4 	movhi	r17,4099
1000e538:	293ffd04 	addi	r4,r5,-12
1000e53c:	8c6a7e04 	addi	r17,r17,-22024
1000e540:	2440331e 	bne	r4,r17,1000e610 <_ZNSs9_M_mutateEjjj+0x180>
1000e544:	ac000015 	stw	r16,0(r21)
1000e548:	9440211e 	bne	r18,r17,1000e5d0 <_ZNSs9_M_mutateEjjj+0x140>
1000e54c:	dfc00917 	ldw	ra,36(sp)
1000e550:	ddc00817 	ldw	r23,32(sp)
1000e554:	dd800717 	ldw	r22,28(sp)
1000e558:	dd400617 	ldw	r21,24(sp)
1000e55c:	dd000517 	ldw	r20,20(sp)
1000e560:	dcc00417 	ldw	r19,16(sp)
1000e564:	dc800317 	ldw	r18,12(sp)
1000e568:	dc400217 	ldw	r17,8(sp)
1000e56c:	dc000117 	ldw	r16,4(sp)
1000e570:	dec00a04 	addi	sp,sp,40
1000e574:	f800283a 	ret
1000e578:	88800058 	cmpnei	r2,r17,1
1000e57c:	94000304 	addi	r16,r18,12
1000e580:	a9400017 	ldw	r5,0(r21)
1000e584:	10001b26 	beq	r2,zero,1000e5f4 <_ZNSs9_M_mutateEjjj+0x164>
1000e588:	880d883a 	mov	r6,r17
1000e58c:	8009883a 	mov	r4,r16
1000e590:	00156f00 	call	100156f0 <memcpy>
1000e594:	003fdc06 	br	1000e508 <_ZNSs9_M_mutateEjjj+0x78>
1000e598:	98001226 	beq	r19,zero,1000e5e4 <_ZNSs9_M_mutateEjjj+0x154>
1000e59c:	39801126 	beq	r7,r6,1000e5e4 <_ZNSs9_M_mutateEjjj+0x154>
1000e5a0:	3963883a 	add	r17,r7,r5
1000e5a4:	98800058 	cmpnei	r2,r19,1
1000e5a8:	8449883a 	add	r4,r16,r17
1000e5ac:	85cb883a 	add	r5,r16,r23
1000e5b0:	10001e26 	beq	r2,zero,1000e62c <_ZNSs9_M_mutateEjjj+0x19c>
1000e5b4:	980d883a 	mov	r6,r19
1000e5b8:	00157f00 	call	100157f0 <memmove>
1000e5bc:	ac000017 	ldw	r16,0(r21)
1000e5c0:	044400f4 	movhi	r17,4099
1000e5c4:	8c6a7e04 	addi	r17,r17,-22024
1000e5c8:	84bffd04 	addi	r18,r16,-12
1000e5cc:	947fdf26 	beq	r18,r17,1000e54c <_ZNSs9_M_mutateEjjj+0xbc>
1000e5d0:	803fff15 	stw	zero,-4(r16)
1000e5d4:	853ffd15 	stw	r20,-12(r16)
1000e5d8:	8521883a 	add	r16,r16,r20
1000e5dc:	80000005 	stb	zero,0(r16)
1000e5e0:	003fda06 	br	1000e54c <_ZNSs9_M_mutateEjjj+0xbc>
1000e5e4:	044400f4 	movhi	r17,4099
1000e5e8:	84bffd04 	addi	r18,r16,-12
1000e5ec:	8c6a7e04 	addi	r17,r17,-22024
1000e5f0:	003fd506 	br	1000e548 <_ZNSs9_M_mutateEjjj+0xb8>
1000e5f4:	28800003 	ldbu	r2,0(r5)
1000e5f8:	90800305 	stb	r2,12(r18)
1000e5fc:	003fc206 	br	1000e508 <_ZNSs9_M_mutateEjjj+0x78>
1000e600:	28800003 	ldbu	r2,0(r5)
1000e604:	20800005 	stb	r2,0(r4)
1000e608:	a9400017 	ldw	r5,0(r21)
1000e60c:	003fc906 	br	1000e534 <_ZNSs9_M_mutateEjjj+0xa4>
1000e610:	28bfff17 	ldw	r2,-4(r5)
1000e614:	10ffffc4 	addi	r3,r2,-1
1000e618:	28ffff15 	stw	r3,-4(r5)
1000e61c:	00bfc916 	blt	zero,r2,1000e544 <_ZNSs9_M_mutateEjjj+0xb4>
1000e620:	d94000c4 	addi	r5,sp,3
1000e624:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000e628:	003fc606 	br	1000e544 <_ZNSs9_M_mutateEjjj+0xb4>
1000e62c:	28800003 	ldbu	r2,0(r5)
1000e630:	044400f4 	movhi	r17,4099
1000e634:	8c6a7e04 	addi	r17,r17,-22024
1000e638:	20800005 	stb	r2,0(r4)
1000e63c:	ac000017 	ldw	r16,0(r21)
1000e640:	84bffd04 	addi	r18,r16,-12
1000e644:	003fc006 	br	1000e548 <_ZNSs9_M_mutateEjjj+0xb8>

1000e648 <_ZNSs12_M_leak_hardEv>:
1000e648:	20c00017 	ldw	r3,0(r4)
1000e64c:	008400f4 	movhi	r2,4099
1000e650:	10aa7e04 	addi	r2,r2,-22024
1000e654:	19bffd04 	addi	r6,r3,-12
1000e658:	30800526 	beq	r6,r2,1000e670 <_ZNSs12_M_leak_hardEv+0x28>
1000e65c:	18bfff17 	ldw	r2,-4(r3)
1000e660:	00800416 	blt	zero,r2,1000e674 <_ZNSs12_M_leak_hardEv+0x2c>
1000e664:	00bfffc4 	movi	r2,-1
1000e668:	18bfff15 	stw	r2,-4(r3)
1000e66c:	f800283a 	ret
1000e670:	f800283a 	ret
1000e674:	defffe04 	addi	sp,sp,-8
1000e678:	000f883a 	mov	r7,zero
1000e67c:	000d883a 	mov	r6,zero
1000e680:	000b883a 	mov	r5,zero
1000e684:	dc000015 	stw	r16,0(sp)
1000e688:	dfc00115 	stw	ra,4(sp)
1000e68c:	2021883a 	mov	r16,r4
1000e690:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000e694:	80c00017 	ldw	r3,0(r16)
1000e698:	00bfffc4 	movi	r2,-1
1000e69c:	18bfff15 	stw	r2,-4(r3)
1000e6a0:	dfc00117 	ldw	ra,4(sp)
1000e6a4:	dc000017 	ldw	r16,0(sp)
1000e6a8:	dec00204 	addi	sp,sp,8
1000e6ac:	f800283a 	ret

1000e6b0 <_ZNSs7_M_leakEv>:
1000e6b0:	20800017 	ldw	r2,0(r4)
1000e6b4:	10bfff17 	ldw	r2,-4(r2)
1000e6b8:	1000010e 	bge	r2,zero,1000e6c0 <_ZNSs7_M_leakEv+0x10>
1000e6bc:	f800283a 	ret
1000e6c0:	000e6481 	jmpi	1000e648 <_ZNSs12_M_leak_hardEv>

1000e6c4 <_ZNSs5beginEv>:
1000e6c4:	20800017 	ldw	r2,0(r4)
1000e6c8:	117fff17 	ldw	r5,-4(r2)
1000e6cc:	2800010e 	bge	r5,zero,1000e6d4 <_ZNSs5beginEv+0x10>
1000e6d0:	f800283a 	ret
1000e6d4:	defffe04 	addi	sp,sp,-8
1000e6d8:	dc000015 	stw	r16,0(sp)
1000e6dc:	dfc00115 	stw	ra,4(sp)
1000e6e0:	2021883a 	mov	r16,r4
1000e6e4:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e6e8:	80800017 	ldw	r2,0(r16)
1000e6ec:	dfc00117 	ldw	ra,4(sp)
1000e6f0:	dc000017 	ldw	r16,0(sp)
1000e6f4:	dec00204 	addi	sp,sp,8
1000e6f8:	f800283a 	ret

1000e6fc <_ZNSs4rendEv>:
1000e6fc:	28c00017 	ldw	r3,0(r5)
1000e700:	2005883a 	mov	r2,r4
1000e704:	193fff17 	ldw	r4,-4(r3)
1000e708:	2000020e 	bge	r4,zero,1000e714 <_ZNSs4rendEv+0x18>
1000e70c:	10c00015 	stw	r3,0(r2)
1000e710:	f800283a 	ret
1000e714:	defffd04 	addi	sp,sp,-12
1000e718:	2809883a 	mov	r4,r5
1000e71c:	dfc00215 	stw	ra,8(sp)
1000e720:	d8800115 	stw	r2,4(sp)
1000e724:	d9400015 	stw	r5,0(sp)
1000e728:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e72c:	d9400017 	ldw	r5,0(sp)
1000e730:	d8800117 	ldw	r2,4(sp)
1000e734:	28c00017 	ldw	r3,0(r5)
1000e738:	10c00015 	stw	r3,0(r2)
1000e73c:	dfc00217 	ldw	ra,8(sp)
1000e740:	dec00304 	addi	sp,sp,12
1000e744:	f800283a 	ret

1000e748 <_ZNSs3endEv>:
1000e748:	20800017 	ldw	r2,0(r4)
1000e74c:	117fff17 	ldw	r5,-4(r2)
1000e750:	2800030e 	bge	r5,zero,1000e760 <_ZNSs3endEv+0x18>
1000e754:	10fffd17 	ldw	r3,-12(r2)
1000e758:	10c5883a 	add	r2,r2,r3
1000e75c:	f800283a 	ret
1000e760:	defffe04 	addi	sp,sp,-8
1000e764:	dc000015 	stw	r16,0(sp)
1000e768:	dfc00115 	stw	ra,4(sp)
1000e76c:	2021883a 	mov	r16,r4
1000e770:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e774:	80800017 	ldw	r2,0(r16)
1000e778:	10fffd17 	ldw	r3,-12(r2)
1000e77c:	10c5883a 	add	r2,r2,r3
1000e780:	dfc00117 	ldw	ra,4(sp)
1000e784:	dc000017 	ldw	r16,0(sp)
1000e788:	dec00204 	addi	sp,sp,8
1000e78c:	f800283a 	ret

1000e790 <_ZNSs6rbeginEv>:
1000e790:	28c00017 	ldw	r3,0(r5)
1000e794:	defffd04 	addi	sp,sp,-12
1000e798:	dc000115 	stw	r16,4(sp)
1000e79c:	18bfff17 	ldw	r2,-4(r3)
1000e7a0:	dfc00215 	stw	ra,8(sp)
1000e7a4:	2021883a 	mov	r16,r4
1000e7a8:	10000516 	blt	r2,zero,1000e7c0 <_ZNSs6rbeginEv+0x30>
1000e7ac:	2809883a 	mov	r4,r5
1000e7b0:	d9400015 	stw	r5,0(sp)
1000e7b4:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e7b8:	d9400017 	ldw	r5,0(sp)
1000e7bc:	28c00017 	ldw	r3,0(r5)
1000e7c0:	193ffd17 	ldw	r4,-12(r3)
1000e7c4:	8005883a 	mov	r2,r16
1000e7c8:	1907883a 	add	r3,r3,r4
1000e7cc:	80c00015 	stw	r3,0(r16)
1000e7d0:	dfc00217 	ldw	ra,8(sp)
1000e7d4:	dc000117 	ldw	r16,4(sp)
1000e7d8:	dec00304 	addi	sp,sp,12
1000e7dc:	f800283a 	ret

1000e7e0 <_ZNSsixEj>:
1000e7e0:	20800017 	ldw	r2,0(r4)
1000e7e4:	10ffff17 	ldw	r3,-4(r2)
1000e7e8:	1800020e 	bge	r3,zero,1000e7f4 <_ZNSsixEj+0x14>
1000e7ec:	1145883a 	add	r2,r2,r5
1000e7f0:	f800283a 	ret
1000e7f4:	defffd04 	addi	sp,sp,-12
1000e7f8:	dc000115 	stw	r16,4(sp)
1000e7fc:	dfc00215 	stw	ra,8(sp)
1000e800:	2021883a 	mov	r16,r4
1000e804:	d9400015 	stw	r5,0(sp)
1000e808:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e80c:	80800017 	ldw	r2,0(r16)
1000e810:	d9400017 	ldw	r5,0(sp)
1000e814:	1145883a 	add	r2,r2,r5
1000e818:	dfc00217 	ldw	ra,8(sp)
1000e81c:	dc000117 	ldw	r16,4(sp)
1000e820:	dec00304 	addi	sp,sp,12
1000e824:	f800283a 	ret

1000e828 <_ZNSs5frontEv>:
1000e828:	20800017 	ldw	r2,0(r4)
1000e82c:	117fff17 	ldw	r5,-4(r2)
1000e830:	2800010e 	bge	r5,zero,1000e838 <_ZNSs5frontEv+0x10>
1000e834:	f800283a 	ret
1000e838:	defffe04 	addi	sp,sp,-8
1000e83c:	dc000015 	stw	r16,0(sp)
1000e840:	dfc00115 	stw	ra,4(sp)
1000e844:	2021883a 	mov	r16,r4
1000e848:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e84c:	80800017 	ldw	r2,0(r16)
1000e850:	dfc00117 	ldw	ra,4(sp)
1000e854:	dc000017 	ldw	r16,0(sp)
1000e858:	dec00204 	addi	sp,sp,8
1000e85c:	f800283a 	ret

1000e860 <_ZNSs4backEv>:
1000e860:	20c00017 	ldw	r3,0(r4)
1000e864:	defffd04 	addi	sp,sp,-12
1000e868:	dc000015 	stw	r16,0(sp)
1000e86c:	197fff17 	ldw	r5,-4(r3)
1000e870:	1c3ffd17 	ldw	r16,-12(r3)
1000e874:	dfc00215 	stw	ra,8(sp)
1000e878:	dc400115 	stw	r17,4(sp)
1000e87c:	843fffc4 	addi	r16,r16,-1
1000e880:	28000316 	blt	r5,zero,1000e890 <_ZNSs4backEv+0x30>
1000e884:	2023883a 	mov	r17,r4
1000e888:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e88c:	88c00017 	ldw	r3,0(r17)
1000e890:	1c05883a 	add	r2,r3,r16
1000e894:	dfc00217 	ldw	ra,8(sp)
1000e898:	dc400117 	ldw	r17,4(sp)
1000e89c:	dc000017 	ldw	r16,0(sp)
1000e8a0:	dec00304 	addi	sp,sp,12
1000e8a4:	f800283a 	ret

1000e8a8 <_ZNSs2atEj>:
1000e8a8:	20800017 	ldw	r2,0(r4)
1000e8ac:	defffd04 	addi	sp,sp,-12
1000e8b0:	dfc00215 	stw	ra,8(sp)
1000e8b4:	11bffd17 	ldw	r6,-12(r2)
1000e8b8:	dc400115 	stw	r17,4(sp)
1000e8bc:	dc000015 	stw	r16,0(sp)
1000e8c0:	29800c2e 	bgeu	r5,r6,1000e8f4 <_ZNSs2atEj+0x4c>
1000e8c4:	10ffff17 	ldw	r3,-4(r2)
1000e8c8:	2821883a 	mov	r16,r5
1000e8cc:	18000316 	blt	r3,zero,1000e8dc <_ZNSs2atEj+0x34>
1000e8d0:	2023883a 	mov	r17,r4
1000e8d4:	000e6480 	call	1000e648 <_ZNSs12_M_leak_hardEv>
1000e8d8:	88800017 	ldw	r2,0(r17)
1000e8dc:	1405883a 	add	r2,r2,r16
1000e8e0:	dfc00217 	ldw	ra,8(sp)
1000e8e4:	dc400117 	ldw	r17,4(sp)
1000e8e8:	dc000017 	ldw	r16,0(sp)
1000e8ec:	dec00304 	addi	sp,sp,12
1000e8f0:	f800283a 	ret
1000e8f4:	010400b4 	movhi	r4,4098
1000e8f8:	2115eb04 	addi	r4,r4,22444
1000e8fc:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e900 <_ZNSs5eraseEjj>:
1000e900:	20800017 	ldw	r2,0(r4)
1000e904:	defffe04 	addi	sp,sp,-8
1000e908:	dfc00115 	stw	ra,4(sp)
1000e90c:	10fffd17 	ldw	r3,-12(r2)
1000e910:	dc000015 	stw	r16,0(sp)
1000e914:	2811883a 	mov	r8,r5
1000e918:	19400f36 	bltu	r3,r5,1000e958 <_ZNSs5eraseEjj+0x58>
1000e91c:	1947c83a 	sub	r3,r3,r5
1000e920:	2021883a 	mov	r16,r4
1000e924:	30c00a36 	bltu	r6,r3,1000e950 <_ZNSs5eraseEjj+0x50>
1000e928:	000f883a 	mov	r7,zero
1000e92c:	180d883a 	mov	r6,r3
1000e930:	400b883a 	mov	r5,r8
1000e934:	8009883a 	mov	r4,r16
1000e938:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000e93c:	8005883a 	mov	r2,r16
1000e940:	dfc00117 	ldw	ra,4(sp)
1000e944:	dc000017 	ldw	r16,0(sp)
1000e948:	dec00204 	addi	sp,sp,8
1000e94c:	f800283a 	ret
1000e950:	3007883a 	mov	r3,r6
1000e954:	003ff406 	br	1000e928 <_ZNSs5eraseEjj+0x28>
1000e958:	014400b4 	movhi	r5,4098
1000e95c:	010400b4 	movhi	r4,4098
1000e960:	180f883a 	mov	r7,r3
1000e964:	400d883a 	mov	r6,r8
1000e968:	29560d04 	addi	r5,r5,22580
1000e96c:	2115dd04 	addi	r4,r4,22388
1000e970:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e974 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE>:
1000e974:	defffd04 	addi	sp,sp,-12
1000e978:	dc000015 	stw	r16,0(sp)
1000e97c:	24000017 	ldw	r16,0(r4)
1000e980:	000f883a 	mov	r7,zero
1000e984:	01800044 	movi	r6,1
1000e988:	2c21c83a 	sub	r16,r5,r16
1000e98c:	800b883a 	mov	r5,r16
1000e990:	dc400115 	stw	r17,4(sp)
1000e994:	dfc00215 	stw	ra,8(sp)
1000e998:	2023883a 	mov	r17,r4
1000e99c:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000e9a0:	88800017 	ldw	r2,0(r17)
1000e9a4:	00ffffc4 	movi	r3,-1
1000e9a8:	10ffff15 	stw	r3,-4(r2)
1000e9ac:	1405883a 	add	r2,r2,r16
1000e9b0:	dfc00217 	ldw	ra,8(sp)
1000e9b4:	dc400117 	ldw	r17,4(sp)
1000e9b8:	dc000017 	ldw	r16,0(sp)
1000e9bc:	dec00304 	addi	sp,sp,12
1000e9c0:	f800283a 	ret

1000e9c4 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_>:
1000e9c4:	314dc83a 	sub	r6,r6,r5
1000e9c8:	3000021e 	bne	r6,zero,1000e9d4 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_+0x10>
1000e9cc:	2805883a 	mov	r2,r5
1000e9d0:	f800283a 	ret
1000e9d4:	20800017 	ldw	r2,0(r4)
1000e9d8:	defffd04 	addi	sp,sp,-12
1000e9dc:	dc000015 	stw	r16,0(sp)
1000e9e0:	28a1c83a 	sub	r16,r5,r2
1000e9e4:	800b883a 	mov	r5,r16
1000e9e8:	000f883a 	mov	r7,zero
1000e9ec:	dc400115 	stw	r17,4(sp)
1000e9f0:	dfc00215 	stw	ra,8(sp)
1000e9f4:	2023883a 	mov	r17,r4
1000e9f8:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000e9fc:	89400017 	ldw	r5,0(r17)
1000ea00:	00bfffc4 	movi	r2,-1
1000ea04:	28bfff15 	stw	r2,-4(r5)
1000ea08:	2c05883a 	add	r2,r5,r16
1000ea0c:	dfc00217 	ldw	ra,8(sp)
1000ea10:	dc400117 	ldw	r17,4(sp)
1000ea14:	dc000017 	ldw	r16,0(sp)
1000ea18:	dec00304 	addi	sp,sp,12
1000ea1c:	f800283a 	ret

1000ea20 <_ZNSs14_M_replace_auxEjjjc>:
1000ea20:	20c00017 	ldw	r3,0(r4)
1000ea24:	00900034 	movhi	r2,16384
1000ea28:	10bfff04 	addi	r2,r2,-4
1000ea2c:	18fffd17 	ldw	r3,-12(r3)
1000ea30:	defffb04 	addi	sp,sp,-20
1000ea34:	3085883a 	add	r2,r6,r2
1000ea38:	dcc00315 	stw	r19,12(sp)
1000ea3c:	dfc00415 	stw	ra,16(sp)
1000ea40:	dc800215 	stw	r18,8(sp)
1000ea44:	dc400115 	stw	r17,4(sp)
1000ea48:	dc000015 	stw	r16,0(sp)
1000ea4c:	10c5c83a 	sub	r2,r2,r3
1000ea50:	dcc00517 	ldw	r19,20(sp)
1000ea54:	11c01836 	bltu	r2,r7,1000eab8 <_ZNSs14_M_replace_auxEjjjc+0x98>
1000ea58:	3821883a 	mov	r16,r7
1000ea5c:	2023883a 	mov	r17,r4
1000ea60:	2825883a 	mov	r18,r5
1000ea64:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000ea68:	80000926 	beq	r16,zero,1000ea90 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000ea6c:	89000017 	ldw	r4,0(r17)
1000ea70:	80800058 	cmpnei	r2,r16,1
1000ea74:	2489883a 	add	r4,r4,r18
1000ea78:	10000d26 	beq	r2,zero,1000eab0 <_ZNSs14_M_replace_auxEjjjc+0x90>
1000ea7c:	99403fcc 	andi	r5,r19,255
1000ea80:	2940201c 	xori	r5,r5,128
1000ea84:	800d883a 	mov	r6,r16
1000ea88:	297fe004 	addi	r5,r5,-128
1000ea8c:	001591c0 	call	1001591c <memset>
1000ea90:	8805883a 	mov	r2,r17
1000ea94:	dfc00417 	ldw	ra,16(sp)
1000ea98:	dcc00317 	ldw	r19,12(sp)
1000ea9c:	dc800217 	ldw	r18,8(sp)
1000eaa0:	dc400117 	ldw	r17,4(sp)
1000eaa4:	dc000017 	ldw	r16,0(sp)
1000eaa8:	dec00504 	addi	sp,sp,20
1000eaac:	f800283a 	ret
1000eab0:	24c00005 	stb	r19,0(r4)
1000eab4:	003ff606 	br	1000ea90 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000eab8:	010400b4 	movhi	r4,4098
1000eabc:	21161204 	addi	r4,r4,22600
1000eac0:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000eac4 <_ZNSs6assignEjc>:
1000eac4:	31803fcc 	andi	r6,r6,255
1000eac8:	20800017 	ldw	r2,0(r4)
1000eacc:	3180201c 	xori	r6,r6,128
1000ead0:	defffe04 	addi	sp,sp,-8
1000ead4:	31bfe004 	addi	r6,r6,-128
1000ead8:	d9800015 	stw	r6,0(sp)
1000eadc:	11bffd17 	ldw	r6,-12(r2)
1000eae0:	280f883a 	mov	r7,r5
1000eae4:	000b883a 	mov	r5,zero
1000eae8:	dfc00115 	stw	ra,4(sp)
1000eaec:	000ea200 	call	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000eaf0:	dfc00117 	ldw	ra,4(sp)
1000eaf4:	dec00204 	addi	sp,sp,8
1000eaf8:	f800283a 	ret

1000eafc <_ZNSsaSEc>:
1000eafc:	29403fcc 	andi	r5,r5,255
1000eb00:	20800017 	ldw	r2,0(r4)
1000eb04:	2940201c 	xori	r5,r5,128
1000eb08:	defffd04 	addi	sp,sp,-12
1000eb0c:	297fe004 	addi	r5,r5,-128
1000eb10:	d9400015 	stw	r5,0(sp)
1000eb14:	11bffd17 	ldw	r6,-12(r2)
1000eb18:	01c00044 	movi	r7,1
1000eb1c:	000b883a 	mov	r5,zero
1000eb20:	dc000115 	stw	r16,4(sp)
1000eb24:	dfc00215 	stw	ra,8(sp)
1000eb28:	2021883a 	mov	r16,r4
1000eb2c:	000ea200 	call	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000eb30:	8005883a 	mov	r2,r16
1000eb34:	dfc00217 	ldw	ra,8(sp)
1000eb38:	dc000117 	ldw	r16,4(sp)
1000eb3c:	dec00304 	addi	sp,sp,12
1000eb40:	f800283a 	ret

1000eb44 <_ZNSs6insertEjjc>:
1000eb44:	20c00017 	ldw	r3,0(r4)
1000eb48:	defffe04 	addi	sp,sp,-8
1000eb4c:	dfc00115 	stw	ra,4(sp)
1000eb50:	18fffd17 	ldw	r3,-12(r3)
1000eb54:	19400a36 	bltu	r3,r5,1000eb80 <_ZNSs6insertEjjc+0x3c>
1000eb58:	39c03fcc 	andi	r7,r7,255
1000eb5c:	39c0201c 	xori	r7,r7,128
1000eb60:	39ffe004 	addi	r7,r7,-128
1000eb64:	d9c00015 	stw	r7,0(sp)
1000eb68:	300f883a 	mov	r7,r6
1000eb6c:	000d883a 	mov	r6,zero
1000eb70:	000ea200 	call	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000eb74:	dfc00117 	ldw	ra,4(sp)
1000eb78:	dec00204 	addi	sp,sp,8
1000eb7c:	f800283a 	ret
1000eb80:	2805883a 	mov	r2,r5
1000eb84:	010400b4 	movhi	r4,4098
1000eb88:	014400b4 	movhi	r5,4098
1000eb8c:	180f883a 	mov	r7,r3
1000eb90:	100d883a 	mov	r6,r2
1000eb94:	29561a04 	addi	r5,r5,22632
1000eb98:	2115dd04 	addi	r4,r4,22388
1000eb9c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000eba0 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>:
1000eba0:	defffc04 	addi	sp,sp,-16
1000eba4:	dc000115 	stw	r16,4(sp)
1000eba8:	24000017 	ldw	r16,0(r4)
1000ebac:	31803fcc 	andi	r6,r6,255
1000ebb0:	3180201c 	xori	r6,r6,128
1000ebb4:	2c21c83a 	sub	r16,r5,r16
1000ebb8:	31bfe004 	addi	r6,r6,-128
1000ebbc:	d9800015 	stw	r6,0(sp)
1000ebc0:	01c00044 	movi	r7,1
1000ebc4:	000d883a 	mov	r6,zero
1000ebc8:	800b883a 	mov	r5,r16
1000ebcc:	dc400215 	stw	r17,8(sp)
1000ebd0:	dfc00315 	stw	ra,12(sp)
1000ebd4:	2023883a 	mov	r17,r4
1000ebd8:	000ea200 	call	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000ebdc:	88800017 	ldw	r2,0(r17)
1000ebe0:	00ffffc4 	movi	r3,-1
1000ebe4:	10ffff15 	stw	r3,-4(r2)
1000ebe8:	1405883a 	add	r2,r2,r16
1000ebec:	dfc00317 	ldw	ra,12(sp)
1000ebf0:	dc400217 	ldw	r17,8(sp)
1000ebf4:	dc000117 	ldw	r16,4(sp)
1000ebf8:	dec00404 	addi	sp,sp,16
1000ebfc:	f800283a 	ret

1000ec00 <_ZNSs7replaceEjjjc>:
1000ec00:	20800017 	ldw	r2,0(r4)
1000ec04:	deffff04 	addi	sp,sp,-4
1000ec08:	dfc00015 	stw	ra,0(sp)
1000ec0c:	10bffd17 	ldw	r2,-12(r2)
1000ec10:	d8c00117 	ldw	r3,4(sp)
1000ec14:	11400c36 	bltu	r2,r5,1000ec48 <_ZNSs7replaceEjjjc+0x48>
1000ec18:	1145c83a 	sub	r2,r2,r5
1000ec1c:	30800836 	bltu	r6,r2,1000ec40 <_ZNSs7replaceEjjjc+0x40>
1000ec20:	18c03fcc 	andi	r3,r3,255
1000ec24:	18c0201c 	xori	r3,r3,128
1000ec28:	18ffe004 	addi	r3,r3,-128
1000ec2c:	100d883a 	mov	r6,r2
1000ec30:	d8c00115 	stw	r3,4(sp)
1000ec34:	dfc00017 	ldw	ra,0(sp)
1000ec38:	dec00104 	addi	sp,sp,4
1000ec3c:	000ea201 	jmpi	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000ec40:	3005883a 	mov	r2,r6
1000ec44:	003ff606 	br	1000ec20 <_ZNSs7replaceEjjjc+0x20>
1000ec48:	280d883a 	mov	r6,r5
1000ec4c:	010400b4 	movhi	r4,4098
1000ec50:	014400b4 	movhi	r5,4098
1000ec54:	100f883a 	mov	r7,r2
1000ec58:	29562004 	addi	r5,r5,22656
1000ec5c:	2115dd04 	addi	r4,r4,22388
1000ec60:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000ec64 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc>:
1000ec64:	20800017 	ldw	r2,0(r4)
1000ec68:	d8c00007 	ldb	r3,0(sp)
1000ec6c:	314dc83a 	sub	r6,r6,r5
1000ec70:	288bc83a 	sub	r5,r5,r2
1000ec74:	d8c00015 	stw	r3,0(sp)
1000ec78:	000ea201 	jmpi	1000ea20 <_ZNSs14_M_replace_auxEjjjc>

1000ec7c <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc>:
1000ec7c:	20800017 	ldw	r2,0(r4)
1000ec80:	39c03fcc 	andi	r7,r7,255
1000ec84:	39c0201c 	xori	r7,r7,128
1000ec88:	defffe04 	addi	sp,sp,-8
1000ec8c:	39ffe004 	addi	r7,r7,-128
1000ec90:	d9c00015 	stw	r7,0(sp)
1000ec94:	288bc83a 	sub	r5,r5,r2
1000ec98:	300f883a 	mov	r7,r6
1000ec9c:	000d883a 	mov	r6,zero
1000eca0:	dfc00115 	stw	ra,4(sp)
1000eca4:	000ea200 	call	1000ea20 <_ZNSs14_M_replace_auxEjjjc>
1000eca8:	dfc00117 	ldw	ra,4(sp)
1000ecac:	dec00204 	addi	sp,sp,8
1000ecb0:	f800283a 	ret

1000ecb4 <_ZNSs15_M_replace_safeEjjPKcj>:
1000ecb4:	defffb04 	addi	sp,sp,-20
1000ecb8:	dc000015 	stw	r16,0(sp)
1000ecbc:	dc000517 	ldw	r16,20(sp)
1000ecc0:	dc800215 	stw	r18,8(sp)
1000ecc4:	3825883a 	mov	r18,r7
1000ecc8:	800f883a 	mov	r7,r16
1000eccc:	dcc00315 	stw	r19,12(sp)
1000ecd0:	dc400115 	stw	r17,4(sp)
1000ecd4:	dfc00415 	stw	ra,16(sp)
1000ecd8:	2023883a 	mov	r17,r4
1000ecdc:	2827883a 	mov	r19,r5
1000ece0:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000ece4:	80000726 	beq	r16,zero,1000ed04 <_ZNSs15_M_replace_safeEjjPKcj+0x50>
1000ece8:	89000017 	ldw	r4,0(r17)
1000ecec:	80800058 	cmpnei	r2,r16,1
1000ecf0:	24c9883a 	add	r4,r4,r19
1000ecf4:	10000b26 	beq	r2,zero,1000ed24 <_ZNSs15_M_replace_safeEjjPKcj+0x70>
1000ecf8:	800d883a 	mov	r6,r16
1000ecfc:	900b883a 	mov	r5,r18
1000ed00:	00156f00 	call	100156f0 <memcpy>
1000ed04:	8805883a 	mov	r2,r17
1000ed08:	dfc00417 	ldw	ra,16(sp)
1000ed0c:	dcc00317 	ldw	r19,12(sp)
1000ed10:	dc800217 	ldw	r18,8(sp)
1000ed14:	dc400117 	ldw	r17,4(sp)
1000ed18:	dc000017 	ldw	r16,0(sp)
1000ed1c:	dec00504 	addi	sp,sp,20
1000ed20:	f800283a 	ret
1000ed24:	90800003 	ldbu	r2,0(r18)
1000ed28:	20800005 	stb	r2,0(r4)
1000ed2c:	003ff506 	br	1000ed04 <_ZNSs15_M_replace_safeEjjPKcj+0x50>

1000ed30 <_ZNSs6assignEPKcj>:
1000ed30:	defffc04 	addi	sp,sp,-16
1000ed34:	dc000115 	stw	r16,4(sp)
1000ed38:	2021883a 	mov	r16,r4
1000ed3c:	21000017 	ldw	r4,0(r4)
1000ed40:	00900034 	movhi	r2,16384
1000ed44:	dfc00315 	stw	ra,12(sp)
1000ed48:	dc400215 	stw	r17,8(sp)
1000ed4c:	10bfff04 	addi	r2,r2,-4
1000ed50:	20fffd17 	ldw	r3,-12(r4)
1000ed54:	11802c36 	bltu	r2,r6,1000ee08 <_ZNSs6assignEPKcj+0xd8>
1000ed58:	3023883a 	mov	r17,r6
1000ed5c:	280f883a 	mov	r7,r5
1000ed60:	29000a2e 	bgeu	r5,r4,1000ed8c <_ZNSs6assignEPKcj+0x5c>
1000ed64:	dc400015 	stw	r17,0(sp)
1000ed68:	180d883a 	mov	r6,r3
1000ed6c:	000b883a 	mov	r5,zero
1000ed70:	8009883a 	mov	r4,r16
1000ed74:	000ecb40 	call	1000ecb4 <_ZNSs15_M_replace_safeEjjPKcj>
1000ed78:	dfc00317 	ldw	ra,12(sp)
1000ed7c:	dc400217 	ldw	r17,8(sp)
1000ed80:	dc000117 	ldw	r16,4(sp)
1000ed84:	dec00404 	addi	sp,sp,16
1000ed88:	f800283a 	ret
1000ed8c:	20c5883a 	add	r2,r4,r3
1000ed90:	117ff436 	bltu	r2,r5,1000ed64 <_ZNSs6assignEPKcj+0x34>
1000ed94:	20bfff17 	ldw	r2,-4(r4)
1000ed98:	00bff216 	blt	zero,r2,1000ed64 <_ZNSs6assignEPKcj+0x34>
1000ed9c:	2905c83a 	sub	r2,r5,r4
1000eda0:	11800f2e 	bgeu	r2,r6,1000ede0 <_ZNSs6assignEPKcj+0xb0>
1000eda4:	10000426 	beq	r2,zero,1000edb8 <_ZNSs6assignEPKcj+0x88>
1000eda8:	30800058 	cmpnei	r2,r6,1
1000edac:	10001226 	beq	r2,zero,1000edf8 <_ZNSs6assignEPKcj+0xc8>
1000edb0:	00157f00 	call	100157f0 <memmove>
1000edb4:	81000017 	ldw	r4,0(r16)
1000edb8:	00c400f4 	movhi	r3,4099
1000edbc:	217ffd04 	addi	r5,r4,-12
1000edc0:	18ea7e04 	addi	r3,r3,-22024
1000edc4:	8005883a 	mov	r2,r16
1000edc8:	28ffeb26 	beq	r5,r3,1000ed78 <_ZNSs6assignEPKcj+0x48>
1000edcc:	203fff15 	stw	zero,-4(r4)
1000edd0:	247ffd15 	stw	r17,-12(r4)
1000edd4:	2449883a 	add	r4,r4,r17
1000edd8:	20000005 	stb	zero,0(r4)
1000eddc:	003fe606 	br	1000ed78 <_ZNSs6assignEPKcj+0x48>
1000ede0:	30800058 	cmpnei	r2,r6,1
1000ede4:	10000426 	beq	r2,zero,1000edf8 <_ZNSs6assignEPKcj+0xc8>
1000ede8:	303ff326 	beq	r6,zero,1000edb8 <_ZNSs6assignEPKcj+0x88>
1000edec:	00156f00 	call	100156f0 <memcpy>
1000edf0:	81000017 	ldw	r4,0(r16)
1000edf4:	003ff006 	br	1000edb8 <_ZNSs6assignEPKcj+0x88>
1000edf8:	38800003 	ldbu	r2,0(r7)
1000edfc:	20800005 	stb	r2,0(r4)
1000ee00:	81000017 	ldw	r4,0(r16)
1000ee04:	003fec06 	br	1000edb8 <_ZNSs6assignEPKcj+0x88>
1000ee08:	010400b4 	movhi	r4,4098
1000ee0c:	21162604 	addi	r4,r4,22680
1000ee10:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000ee14 <_ZNSsaSESt16initializer_listIcE>:
1000ee14:	defffe04 	addi	sp,sp,-8
1000ee18:	dc000015 	stw	r16,0(sp)
1000ee1c:	dfc00115 	stw	ra,4(sp)
1000ee20:	2021883a 	mov	r16,r4
1000ee24:	000ed300 	call	1000ed30 <_ZNSs6assignEPKcj>
1000ee28:	8005883a 	mov	r2,r16
1000ee2c:	dfc00117 	ldw	ra,4(sp)
1000ee30:	dc000017 	ldw	r16,0(sp)
1000ee34:	dec00204 	addi	sp,sp,8
1000ee38:	f800283a 	ret

1000ee3c <_ZNSs6assignERKSsjj>:
1000ee3c:	29400017 	ldw	r5,0(r5)
1000ee40:	28bffd17 	ldw	r2,-12(r5)
1000ee44:	11800836 	bltu	r2,r6,1000ee68 <_ZNSs6assignERKSsjj+0x2c>
1000ee48:	3007883a 	mov	r3,r6
1000ee4c:	118dc83a 	sub	r6,r2,r6
1000ee50:	39800236 	bltu	r7,r6,1000ee5c <_ZNSs6assignERKSsjj+0x20>
1000ee54:	28cb883a 	add	r5,r5,r3
1000ee58:	000ed301 	jmpi	1000ed30 <_ZNSs6assignEPKcj>
1000ee5c:	380d883a 	mov	r6,r7
1000ee60:	28cb883a 	add	r5,r5,r3
1000ee64:	000ed301 	jmpi	1000ed30 <_ZNSs6assignEPKcj>
1000ee68:	014400b4 	movhi	r5,4098
1000ee6c:	010400b4 	movhi	r4,4098
1000ee70:	deffff04 	addi	sp,sp,-4
1000ee74:	100f883a 	mov	r7,r2
1000ee78:	29562604 	addi	r5,r5,22680
1000ee7c:	2115dd04 	addi	r4,r4,22388
1000ee80:	dfc00015 	stw	ra,0(sp)
1000ee84:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000ee88 <_ZNSs6assignEPKc>:
1000ee88:	defffd04 	addi	sp,sp,-12
1000ee8c:	dc000115 	stw	r16,4(sp)
1000ee90:	2021883a 	mov	r16,r4
1000ee94:	2809883a 	mov	r4,r5
1000ee98:	dfc00215 	stw	ra,8(sp)
1000ee9c:	d9400015 	stw	r5,0(sp)
1000eea0:	00163ac0 	call	100163ac <strlen>
1000eea4:	d9400017 	ldw	r5,0(sp)
1000eea8:	100d883a 	mov	r6,r2
1000eeac:	8009883a 	mov	r4,r16
1000eeb0:	dfc00217 	ldw	ra,8(sp)
1000eeb4:	dc000117 	ldw	r16,4(sp)
1000eeb8:	dec00304 	addi	sp,sp,12
1000eebc:	000ed301 	jmpi	1000ed30 <_ZNSs6assignEPKcj>

1000eec0 <_ZNSsaSEPKc>:
1000eec0:	defffd04 	addi	sp,sp,-12
1000eec4:	dc000115 	stw	r16,4(sp)
1000eec8:	2021883a 	mov	r16,r4
1000eecc:	2809883a 	mov	r4,r5
1000eed0:	dfc00215 	stw	ra,8(sp)
1000eed4:	d9400015 	stw	r5,0(sp)
1000eed8:	00163ac0 	call	100163ac <strlen>
1000eedc:	d9400017 	ldw	r5,0(sp)
1000eee0:	100d883a 	mov	r6,r2
1000eee4:	8009883a 	mov	r4,r16
1000eee8:	dfc00217 	ldw	ra,8(sp)
1000eeec:	dc000117 	ldw	r16,4(sp)
1000eef0:	dec00304 	addi	sp,sp,12
1000eef4:	000ed301 	jmpi	1000ed30 <_ZNSs6assignEPKcj>

1000eef8 <_ZNSs6assignESt16initializer_listIcE>:
1000eef8:	000ed301 	jmpi	1000ed30 <_ZNSs6assignEPKcj>

1000eefc <_ZNSs6insertEjPKcj>:
1000eefc:	22000017 	ldw	r8,0(r4)
1000ef00:	defffa04 	addi	sp,sp,-24
1000ef04:	dcc00415 	stw	r19,16(sp)
1000ef08:	40bffd17 	ldw	r2,-12(r8)
1000ef0c:	dfc00515 	stw	ra,20(sp)
1000ef10:	dc800315 	stw	r18,12(sp)
1000ef14:	dc400215 	stw	r17,8(sp)
1000ef18:	dc000115 	stw	r16,4(sp)
1000ef1c:	2827883a 	mov	r19,r5
1000ef20:	11405636 	bltu	r2,r5,1000f07c <_ZNSs6insertEjPKcj+0x180>
1000ef24:	00d00034 	movhi	r3,16384
1000ef28:	18ffff04 	addi	r3,r3,-4
1000ef2c:	1887c83a 	sub	r3,r3,r2
1000ef30:	3825883a 	mov	r18,r7
1000ef34:	19c04e36 	bltu	r3,r7,1000f070 <_ZNSs6insertEjPKcj+0x174>
1000ef38:	2021883a 	mov	r16,r4
1000ef3c:	3023883a 	mov	r17,r6
1000ef40:	32000d2e 	bgeu	r6,r8,1000ef78 <_ZNSs6insertEjPKcj+0x7c>
1000ef44:	dc800015 	stw	r18,0(sp)
1000ef48:	880f883a 	mov	r7,r17
1000ef4c:	000d883a 	mov	r6,zero
1000ef50:	980b883a 	mov	r5,r19
1000ef54:	8009883a 	mov	r4,r16
1000ef58:	000ecb40 	call	1000ecb4 <_ZNSs15_M_replace_safeEjjPKcj>
1000ef5c:	dfc00517 	ldw	ra,20(sp)
1000ef60:	dcc00417 	ldw	r19,16(sp)
1000ef64:	dc800317 	ldw	r18,12(sp)
1000ef68:	dc400217 	ldw	r17,8(sp)
1000ef6c:	dc000117 	ldw	r16,4(sp)
1000ef70:	dec00604 	addi	sp,sp,24
1000ef74:	f800283a 	ret
1000ef78:	4085883a 	add	r2,r8,r2
1000ef7c:	11bff136 	bltu	r2,r6,1000ef44 <_ZNSs6insertEjPKcj+0x48>
1000ef80:	40bfff17 	ldw	r2,-4(r8)
1000ef84:	00bfef16 	blt	zero,r2,1000ef44 <_ZNSs6insertEjPKcj+0x48>
1000ef88:	000d883a 	mov	r6,zero
1000ef8c:	8a23c83a 	sub	r17,r17,r8
1000ef90:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
1000ef94:	80c00017 	ldw	r3,0(r16)
1000ef98:	1c4b883a 	add	r5,r3,r17
1000ef9c:	2c85883a 	add	r2,r5,r18
1000efa0:	1cc7883a 	add	r3,r3,r19
1000efa4:	18800836 	bltu	r3,r2,1000efc8 <_ZNSs6insertEjPKcj+0xcc>
1000efa8:	90800058 	cmpnei	r2,r18,1
1000efac:	10002126 	beq	r2,zero,1000f034 <_ZNSs6insertEjPKcj+0x138>
1000efb0:	90001e26 	beq	r18,zero,1000f02c <_ZNSs6insertEjPKcj+0x130>
1000efb4:	900d883a 	mov	r6,r18
1000efb8:	1809883a 	mov	r4,r3
1000efbc:	00156f00 	call	100156f0 <memcpy>
1000efc0:	8005883a 	mov	r2,r16
1000efc4:	003fe506 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000efc8:	28c00936 	bltu	r5,r3,1000eff0 <_ZNSs6insertEjPKcj+0xf4>
1000efcc:	91000058 	cmpnei	r4,r18,1
1000efd0:	20001f26 	beq	r4,zero,1000f050 <_ZNSs6insertEjPKcj+0x154>
1000efd4:	90001526 	beq	r18,zero,1000f02c <_ZNSs6insertEjPKcj+0x130>
1000efd8:	900d883a 	mov	r6,r18
1000efdc:	100b883a 	mov	r5,r2
1000efe0:	1809883a 	mov	r4,r3
1000efe4:	00156f00 	call	100156f0 <memcpy>
1000efe8:	8005883a 	mov	r2,r16
1000efec:	003fdb06 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000eff0:	9c63c83a 	sub	r17,r19,r17
1000eff4:	88800058 	cmpnei	r2,r17,1
1000eff8:	10001226 	beq	r2,zero,1000f044 <_ZNSs6insertEjPKcj+0x148>
1000effc:	88000426 	beq	r17,zero,1000f010 <_ZNSs6insertEjPKcj+0x114>
1000f000:	1809883a 	mov	r4,r3
1000f004:	880d883a 	mov	r6,r17
1000f008:	00156f00 	call	100156f0 <memcpy>
1000f00c:	1007883a 	mov	r3,r2
1000f010:	944dc83a 	sub	r6,r18,r17
1000f014:	30800058 	cmpnei	r2,r6,1
1000f018:	1c49883a 	add	r4,r3,r17
1000f01c:	1c8b883a 	add	r5,r3,r18
1000f020:	10000f26 	beq	r2,zero,1000f060 <_ZNSs6insertEjPKcj+0x164>
1000f024:	30000126 	beq	r6,zero,1000f02c <_ZNSs6insertEjPKcj+0x130>
1000f028:	00156f00 	call	100156f0 <memcpy>
1000f02c:	8005883a 	mov	r2,r16
1000f030:	003fca06 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000f034:	29000003 	ldbu	r4,0(r5)
1000f038:	8005883a 	mov	r2,r16
1000f03c:	19000005 	stb	r4,0(r3)
1000f040:	003fc606 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000f044:	28800003 	ldbu	r2,0(r5)
1000f048:	18800005 	stb	r2,0(r3)
1000f04c:	003ff006 	br	1000f010 <_ZNSs6insertEjPKcj+0x114>
1000f050:	11000003 	ldbu	r4,0(r2)
1000f054:	8005883a 	mov	r2,r16
1000f058:	19000005 	stb	r4,0(r3)
1000f05c:	003fbf06 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000f060:	28c00003 	ldbu	r3,0(r5)
1000f064:	8005883a 	mov	r2,r16
1000f068:	20c00005 	stb	r3,0(r4)
1000f06c:	003fbb06 	br	1000ef5c <_ZNSs6insertEjPKcj+0x60>
1000f070:	010400b4 	movhi	r4,4098
1000f074:	21161a04 	addi	r4,r4,22632
1000f078:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>
1000f07c:	014400b4 	movhi	r5,4098
1000f080:	010400b4 	movhi	r4,4098
1000f084:	100f883a 	mov	r7,r2
1000f088:	980d883a 	mov	r6,r19
1000f08c:	29561a04 	addi	r5,r5,22632
1000f090:	2115dd04 	addi	r4,r4,22388
1000f094:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f098 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE>:
1000f098:	20800017 	ldw	r2,0(r4)
1000f09c:	288bc83a 	sub	r5,r5,r2
1000f0a0:	000eefc1 	jmpi	1000eefc <_ZNSs6insertEjPKcj>

1000f0a4 <_ZNSs6insertEjRKSsjj>:
1000f0a4:	31800017 	ldw	r6,0(r6)
1000f0a8:	3805883a 	mov	r2,r7
1000f0ac:	deffff04 	addi	sp,sp,-4
1000f0b0:	31fffd17 	ldw	r7,-12(r6)
1000f0b4:	dfc00015 	stw	ra,0(sp)
1000f0b8:	d8c00117 	ldw	r3,4(sp)
1000f0bc:	38800b36 	bltu	r7,r2,1000f0ec <_ZNSs6insertEjRKSsjj+0x48>
1000f0c0:	388fc83a 	sub	r7,r7,r2
1000f0c4:	19c00436 	bltu	r3,r7,1000f0d8 <_ZNSs6insertEjRKSsjj+0x34>
1000f0c8:	308d883a 	add	r6,r6,r2
1000f0cc:	dfc00017 	ldw	ra,0(sp)
1000f0d0:	dec00104 	addi	sp,sp,4
1000f0d4:	000eefc1 	jmpi	1000eefc <_ZNSs6insertEjPKcj>
1000f0d8:	180f883a 	mov	r7,r3
1000f0dc:	308d883a 	add	r6,r6,r2
1000f0e0:	dfc00017 	ldw	ra,0(sp)
1000f0e4:	dec00104 	addi	sp,sp,4
1000f0e8:	000eefc1 	jmpi	1000eefc <_ZNSs6insertEjPKcj>
1000f0ec:	014400b4 	movhi	r5,4098
1000f0f0:	010400b4 	movhi	r4,4098
1000f0f4:	100d883a 	mov	r6,r2
1000f0f8:	29561a04 	addi	r5,r5,22632
1000f0fc:	2115dd04 	addi	r4,r4,22388
1000f100:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f104 <_ZNSs6insertEjPKc>:
1000f104:	defffc04 	addi	sp,sp,-16
1000f108:	dc000215 	stw	r16,8(sp)
1000f10c:	2021883a 	mov	r16,r4
1000f110:	3009883a 	mov	r4,r6
1000f114:	dfc00315 	stw	ra,12(sp)
1000f118:	d9400115 	stw	r5,4(sp)
1000f11c:	d9800015 	stw	r6,0(sp)
1000f120:	00163ac0 	call	100163ac <strlen>
1000f124:	d9800017 	ldw	r6,0(sp)
1000f128:	d9400117 	ldw	r5,4(sp)
1000f12c:	100f883a 	mov	r7,r2
1000f130:	8009883a 	mov	r4,r16
1000f134:	dfc00317 	ldw	ra,12(sp)
1000f138:	dc000217 	ldw	r16,8(sp)
1000f13c:	dec00404 	addi	sp,sp,16
1000f140:	000eefc1 	jmpi	1000eefc <_ZNSs6insertEjPKcj>

1000f144 <_ZNSs6insertEjRKSs>:
1000f144:	31800017 	ldw	r6,0(r6)
1000f148:	31fffd17 	ldw	r7,-12(r6)
1000f14c:	000eefc1 	jmpi	1000eefc <_ZNSs6insertEjPKcj>

1000f150 <_ZNSs8pop_backEv>:
1000f150:	20800017 	ldw	r2,0(r4)
1000f154:	10bffd17 	ldw	r2,-12(r2)
1000f158:	117fffc4 	addi	r5,r2,-1
1000f15c:	11400336 	bltu	r2,r5,1000f16c <_ZNSs8pop_backEv+0x1c>
1000f160:	000f883a 	mov	r7,zero
1000f164:	01800044 	movi	r6,1
1000f168:	000e4901 	jmpi	1000e490 <_ZNSs9_M_mutateEjjj>
1000f16c:	014400b4 	movhi	r5,4098
1000f170:	010400b4 	movhi	r4,4098
1000f174:	deffff04 	addi	sp,sp,-4
1000f178:	000f883a 	mov	r7,zero
1000f17c:	01bfffc4 	movi	r6,-1
1000f180:	29560d04 	addi	r5,r5,22580
1000f184:	2115dd04 	addi	r4,r4,22388
1000f188:	dfc00015 	stw	ra,0(sp)
1000f18c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f190 <_ZNSs4_Rep10_M_refcopyEv>:
1000f190:	00c400f4 	movhi	r3,4099
1000f194:	18ea7e04 	addi	r3,r3,-22024
1000f198:	20c0021e 	bne	r4,r3,1000f1a4 <_ZNSs4_Rep10_M_refcopyEv+0x14>
1000f19c:	20800304 	addi	r2,r4,12
1000f1a0:	f800283a 	ret
1000f1a4:	20800217 	ldw	r2,8(r4)
1000f1a8:	10800044 	addi	r2,r2,1
1000f1ac:	20800215 	stw	r2,8(r4)
1000f1b0:	003ffa06 	br	1000f19c <_ZNSs4_Rep10_M_refcopyEv+0xc>

1000f1b4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>:
1000f1b4:	defffd04 	addi	sp,sp,-12
1000f1b8:	dc000015 	stw	r16,0(sp)
1000f1bc:	2021883a 	mov	r16,r4
1000f1c0:	21000017 	ldw	r4,0(r4)
1000f1c4:	dc400115 	stw	r17,4(sp)
1000f1c8:	dfc00215 	stw	ra,8(sp)
1000f1cc:	3109883a 	add	r4,r6,r4
1000f1d0:	280d883a 	mov	r6,r5
1000f1d4:	81400117 	ldw	r5,4(r16)
1000f1d8:	000e1680 	call	1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000f1dc:	81800017 	ldw	r6,0(r16)
1000f1e0:	1023883a 	mov	r17,r2
1000f1e4:	30000a1e 	bne	r6,zero,1000f210 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x5c>
1000f1e8:	10c00304 	addi	r3,r2,12
1000f1ec:	008400f4 	movhi	r2,4099
1000f1f0:	10aa7e04 	addi	r2,r2,-22024
1000f1f4:	8880111e 	bne	r17,r2,1000f23c <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x88>
1000f1f8:	1805883a 	mov	r2,r3
1000f1fc:	dfc00217 	ldw	ra,8(sp)
1000f200:	dc400117 	ldw	r17,4(sp)
1000f204:	dc000017 	ldw	r16,0(sp)
1000f208:	dec00304 	addi	sp,sp,12
1000f20c:	f800283a 	ret
1000f210:	30800058 	cmpnei	r2,r6,1
1000f214:	88c00304 	addi	r3,r17,12
1000f218:	10000d26 	beq	r2,zero,1000f250 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x9c>
1000f21c:	1809883a 	mov	r4,r3
1000f220:	81400304 	addi	r5,r16,12
1000f224:	00156f00 	call	100156f0 <memcpy>
1000f228:	1007883a 	mov	r3,r2
1000f22c:	008400f4 	movhi	r2,4099
1000f230:	10aa7e04 	addi	r2,r2,-22024
1000f234:	81800017 	ldw	r6,0(r16)
1000f238:	88bfef26 	beq	r17,r2,1000f1f8 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000f23c:	88000215 	stw	zero,8(r17)
1000f240:	89800015 	stw	r6,0(r17)
1000f244:	89a3883a 	add	r17,r17,r6
1000f248:	88000305 	stb	zero,12(r17)
1000f24c:	003fea06 	br	1000f1f8 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000f250:	80800303 	ldbu	r2,12(r16)
1000f254:	88800305 	stb	r2,12(r17)
1000f258:	81800017 	ldw	r6,0(r16)
1000f25c:	003fe306 	br	1000f1ec <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x38>

1000f260 <_ZNSs7reserveEj>:
1000f260:	20800017 	ldw	r2,0(r4)
1000f264:	10fffe17 	ldw	r3,-8(r2)
1000f268:	28c01626 	beq	r5,r3,1000f2c4 <_ZNSs7reserveEj+0x64>
1000f26c:	11bffd17 	ldw	r6,-12(r2)
1000f270:	defffc04 	addi	sp,sp,-16
1000f274:	dfc00315 	stw	ra,12(sp)
1000f278:	dc000215 	stw	r16,8(sp)
1000f27c:	29800f36 	bltu	r5,r6,1000f2bc <_ZNSs7reserveEj+0x5c>
1000f280:	2021883a 	mov	r16,r4
1000f284:	298dc83a 	sub	r6,r5,r6
1000f288:	113ffd04 	addi	r4,r2,-12
1000f28c:	d94001c4 	addi	r5,sp,7
1000f290:	000f1b40 	call	1000f1b4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000f294:	81400017 	ldw	r5,0(r16)
1000f298:	00c400f4 	movhi	r3,4099
1000f29c:	18ea7e04 	addi	r3,r3,-22024
1000f2a0:	293ffd04 	addi	r4,r5,-12
1000f2a4:	20c00a1e 	bne	r4,r3,1000f2d0 <_ZNSs7reserveEj+0x70>
1000f2a8:	80800015 	stw	r2,0(r16)
1000f2ac:	dfc00317 	ldw	ra,12(sp)
1000f2b0:	dc000217 	ldw	r16,8(sp)
1000f2b4:	dec00404 	addi	sp,sp,16
1000f2b8:	f800283a 	ret
1000f2bc:	300b883a 	mov	r5,r6
1000f2c0:	003fef06 	br	1000f280 <_ZNSs7reserveEj+0x20>
1000f2c4:	10ffff17 	ldw	r3,-4(r2)
1000f2c8:	00ffe816 	blt	zero,r3,1000f26c <_ZNSs7reserveEj+0xc>
1000f2cc:	f800283a 	ret
1000f2d0:	28ffff17 	ldw	r3,-4(r5)
1000f2d4:	19bfffc4 	addi	r6,r3,-1
1000f2d8:	29bfff15 	stw	r6,-4(r5)
1000f2dc:	00fff216 	blt	zero,r3,1000f2a8 <_ZNSs7reserveEj+0x48>
1000f2e0:	d94001c4 	addi	r5,sp,7
1000f2e4:	d8800015 	stw	r2,0(sp)
1000f2e8:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000f2ec:	d8800017 	ldw	r2,0(sp)
1000f2f0:	003fed06 	br	1000f2a8 <_ZNSs7reserveEj+0x48>

1000f2f4 <_ZNSs13shrink_to_fitEv>:
1000f2f4:	deffe704 	addi	sp,sp,-100
1000f2f8:	00c400b4 	movhi	r3,4098
1000f2fc:	d9800204 	addi	r6,sp,8
1000f300:	18d15b04 	addi	r3,r3,17772
1000f304:	01440074 	movhi	r5,4097
1000f308:	00840074 	movhi	r2,4097
1000f30c:	10bcf204 	addi	r2,r2,-3128
1000f310:	29626504 	addi	r5,r5,-30316
1000f314:	d9000015 	stw	r4,0(sp)
1000f318:	d8c00915 	stw	r3,36(sp)
1000f31c:	3009883a 	mov	r4,r6
1000f320:	d8c00f04 	addi	r3,sp,60
1000f324:	d8c00a15 	stw	r3,40(sp)
1000f328:	d8800b15 	stw	r2,44(sp)
1000f32c:	dfc01815 	stw	ra,96(sp)
1000f330:	df001715 	stw	fp,92(sp)
1000f334:	ddc01615 	stw	r23,88(sp)
1000f338:	dd801515 	stw	r22,84(sp)
1000f33c:	dd401415 	stw	r21,80(sp)
1000f340:	dd001315 	stw	r20,76(sp)
1000f344:	dcc01215 	stw	r19,72(sp)
1000f348:	dc801115 	stw	r18,68(sp)
1000f34c:	dc401015 	stw	r17,64(sp)
1000f350:	dc000f15 	stw	r16,60(sp)
1000f354:	d9800115 	stw	r6,4(sp)
1000f358:	d9400815 	stw	r5,32(sp)
1000f35c:	dec00c15 	stw	sp,48(sp)
1000f360:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000f364:	d8800017 	ldw	r2,0(sp)
1000f368:	10800017 	ldw	r2,0(r2)
1000f36c:	10fffd17 	ldw	r3,-12(r2)
1000f370:	10bffe17 	ldw	r2,-8(r2)
1000f374:	18800e36 	bltu	r3,r2,1000f3b0 <_ZNSs13shrink_to_fitEv+0xbc>
1000f378:	d9000117 	ldw	r4,4(sp)
1000f37c:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000f380:	dfc01817 	ldw	ra,96(sp)
1000f384:	df001717 	ldw	fp,92(sp)
1000f388:	ddc01617 	ldw	r23,88(sp)
1000f38c:	dd801517 	ldw	r22,84(sp)
1000f390:	dd401417 	ldw	r21,80(sp)
1000f394:	dd001317 	ldw	r20,76(sp)
1000f398:	dcc01217 	ldw	r19,72(sp)
1000f39c:	dc801117 	ldw	r18,68(sp)
1000f3a0:	dc401017 	ldw	r17,64(sp)
1000f3a4:	dc000f17 	ldw	r16,60(sp)
1000f3a8:	dec01904 	addi	sp,sp,100
1000f3ac:	f800283a 	ret
1000f3b0:	d9000017 	ldw	r4,0(sp)
1000f3b4:	00800044 	movi	r2,1
1000f3b8:	000b883a 	mov	r5,zero
1000f3bc:	d8800315 	stw	r2,12(sp)
1000f3c0:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f3c4:	003fec06 	br	1000f378 <_ZNSs13shrink_to_fitEv+0x84>
1000f3c8:	d9000417 	ldw	r4,16(sp)
1000f3cc:	d8800204 	addi	r2,sp,8
1000f3d0:	d8800115 	stw	r2,4(sp)
1000f3d4:	0007f400 	call	10007f40 <__cxa_begin_catch>
1000f3d8:	d8000315 	stw	zero,12(sp)
1000f3dc:	0007fec0 	call	10007fec <__cxa_end_catch>
1000f3e0:	003fe506 	br	1000f378 <_ZNSs13shrink_to_fitEv+0x84>

1000f3e4 <_ZNSs6appendERKSs>:
1000f3e4:	defffb04 	addi	sp,sp,-20
1000f3e8:	dc800215 	stw	r18,8(sp)
1000f3ec:	2825883a 	mov	r18,r5
1000f3f0:	29400017 	ldw	r5,0(r5)
1000f3f4:	dc400115 	stw	r17,4(sp)
1000f3f8:	dc000015 	stw	r16,0(sp)
1000f3fc:	2c7ffd17 	ldw	r17,-12(r5)
1000f400:	dfc00415 	stw	ra,16(sp)
1000f404:	dcc00315 	stw	r19,12(sp)
1000f408:	2021883a 	mov	r16,r4
1000f40c:	88001726 	beq	r17,zero,1000f46c <_ZNSs6appendERKSs+0x88>
1000f410:	21000017 	ldw	r4,0(r4)
1000f414:	20fffd17 	ldw	r3,-12(r4)
1000f418:	20bffe17 	ldw	r2,-8(r4)
1000f41c:	1c67883a 	add	r19,r3,r17
1000f420:	14c00236 	bltu	r2,r19,1000f42c <_ZNSs6appendERKSs+0x48>
1000f424:	20bfff17 	ldw	r2,-4(r4)
1000f428:	0080060e 	bge	zero,r2,1000f444 <_ZNSs6appendERKSs+0x60>
1000f42c:	980b883a 	mov	r5,r19
1000f430:	8009883a 	mov	r4,r16
1000f434:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f438:	81000017 	ldw	r4,0(r16)
1000f43c:	91400017 	ldw	r5,0(r18)
1000f440:	20fffd17 	ldw	r3,-12(r4)
1000f444:	88800058 	cmpnei	r2,r17,1
1000f448:	20c9883a 	add	r4,r4,r3
1000f44c:	10001426 	beq	r2,zero,1000f4a0 <_ZNSs6appendERKSs+0xbc>
1000f450:	880d883a 	mov	r6,r17
1000f454:	00156f00 	call	100156f0 <memcpy>
1000f458:	80c00017 	ldw	r3,0(r16)
1000f45c:	008400f4 	movhi	r2,4099
1000f460:	10aa7e04 	addi	r2,r2,-22024
1000f464:	193ffd04 	addi	r4,r3,-12
1000f468:	2080081e 	bne	r4,r2,1000f48c <_ZNSs6appendERKSs+0xa8>
1000f46c:	8005883a 	mov	r2,r16
1000f470:	dfc00417 	ldw	ra,16(sp)
1000f474:	dcc00317 	ldw	r19,12(sp)
1000f478:	dc800217 	ldw	r18,8(sp)
1000f47c:	dc400117 	ldw	r17,4(sp)
1000f480:	dc000017 	ldw	r16,0(sp)
1000f484:	dec00504 	addi	sp,sp,20
1000f488:	f800283a 	ret
1000f48c:	1cfffd15 	stw	r19,-12(r3)
1000f490:	183fff15 	stw	zero,-4(r3)
1000f494:	1ce7883a 	add	r19,r3,r19
1000f498:	98000005 	stb	zero,0(r19)
1000f49c:	003ff306 	br	1000f46c <_ZNSs6appendERKSs+0x88>
1000f4a0:	28800003 	ldbu	r2,0(r5)
1000f4a4:	20800005 	stb	r2,0(r4)
1000f4a8:	003feb06 	br	1000f458 <_ZNSs6appendERKSs+0x74>

1000f4ac <_ZNSspLERKSs>:
1000f4ac:	000f3e41 	jmpi	1000f3e4 <_ZNSs6appendERKSs>

1000f4b0 <_ZNSs6appendERKSsjj>:
1000f4b0:	defffa04 	addi	sp,sp,-24
1000f4b4:	dcc00315 	stw	r19,12(sp)
1000f4b8:	2827883a 	mov	r19,r5
1000f4bc:	29400017 	ldw	r5,0(r5)
1000f4c0:	dc000015 	stw	r16,0(sp)
1000f4c4:	dfc00515 	stw	ra,20(sp)
1000f4c8:	2c3ffd17 	ldw	r16,-12(r5)
1000f4cc:	dd000415 	stw	r20,16(sp)
1000f4d0:	dc800215 	stw	r18,8(sp)
1000f4d4:	dc400115 	stw	r17,4(sp)
1000f4d8:	81803136 	bltu	r16,r6,1000f5a0 <_ZNSs6appendERKSsjj+0xf0>
1000f4dc:	81a1c83a 	sub	r16,r16,r6
1000f4e0:	3025883a 	mov	r18,r6
1000f4e4:	2023883a 	mov	r17,r4
1000f4e8:	3c002236 	bltu	r7,r16,1000f574 <_ZNSs6appendERKSsjj+0xc4>
1000f4ec:	80001826 	beq	r16,zero,1000f550 <_ZNSs6appendERKSsjj+0xa0>
1000f4f0:	89000017 	ldw	r4,0(r17)
1000f4f4:	20fffd17 	ldw	r3,-12(r4)
1000f4f8:	20bffe17 	ldw	r2,-8(r4)
1000f4fc:	1c29883a 	add	r20,r3,r16
1000f500:	15000236 	bltu	r2,r20,1000f50c <_ZNSs6appendERKSsjj+0x5c>
1000f504:	20bfff17 	ldw	r2,-4(r4)
1000f508:	0080060e 	bge	zero,r2,1000f524 <_ZNSs6appendERKSsjj+0x74>
1000f50c:	a00b883a 	mov	r5,r20
1000f510:	8809883a 	mov	r4,r17
1000f514:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f518:	89000017 	ldw	r4,0(r17)
1000f51c:	99400017 	ldw	r5,0(r19)
1000f520:	20fffd17 	ldw	r3,-12(r4)
1000f524:	80800058 	cmpnei	r2,r16,1
1000f528:	20c9883a 	add	r4,r4,r3
1000f52c:	2c8b883a 	add	r5,r5,r18
1000f530:	10001326 	beq	r2,zero,1000f580 <_ZNSs6appendERKSsjj+0xd0>
1000f534:	800d883a 	mov	r6,r16
1000f538:	00156f00 	call	100156f0 <memcpy>
1000f53c:	88c00017 	ldw	r3,0(r17)
1000f540:	008400f4 	movhi	r2,4099
1000f544:	10aa7e04 	addi	r2,r2,-22024
1000f548:	193ffd04 	addi	r4,r3,-12
1000f54c:	20800f1e 	bne	r4,r2,1000f58c <_ZNSs6appendERKSsjj+0xdc>
1000f550:	8805883a 	mov	r2,r17
1000f554:	dfc00517 	ldw	ra,20(sp)
1000f558:	dd000417 	ldw	r20,16(sp)
1000f55c:	dcc00317 	ldw	r19,12(sp)
1000f560:	dc800217 	ldw	r18,8(sp)
1000f564:	dc400117 	ldw	r17,4(sp)
1000f568:	dc000017 	ldw	r16,0(sp)
1000f56c:	dec00604 	addi	sp,sp,24
1000f570:	f800283a 	ret
1000f574:	3821883a 	mov	r16,r7
1000f578:	803ff526 	beq	r16,zero,1000f550 <_ZNSs6appendERKSsjj+0xa0>
1000f57c:	003fdc06 	br	1000f4f0 <_ZNSs6appendERKSsjj+0x40>
1000f580:	28800003 	ldbu	r2,0(r5)
1000f584:	20800005 	stb	r2,0(r4)
1000f588:	003fec06 	br	1000f53c <_ZNSs6appendERKSsjj+0x8c>
1000f58c:	1d3ffd15 	stw	r20,-12(r3)
1000f590:	183fff15 	stw	zero,-4(r3)
1000f594:	1d29883a 	add	r20,r3,r20
1000f598:	a0000005 	stb	zero,0(r20)
1000f59c:	003fec06 	br	1000f550 <_ZNSs6appendERKSsjj+0xa0>
1000f5a0:	014400b4 	movhi	r5,4098
1000f5a4:	010400b4 	movhi	r4,4098
1000f5a8:	800f883a 	mov	r7,r16
1000f5ac:	29562c04 	addi	r5,r5,22704
1000f5b0:	2115dd04 	addi	r4,r4,22388
1000f5b4:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f5b8 <_ZNSs6appendEPKcj>:
1000f5b8:	defffb04 	addi	sp,sp,-20
1000f5bc:	dc000115 	stw	r16,4(sp)
1000f5c0:	dfc00415 	stw	ra,16(sp)
1000f5c4:	dc800315 	stw	r18,12(sp)
1000f5c8:	dc400215 	stw	r17,8(sp)
1000f5cc:	2021883a 	mov	r16,r4
1000f5d0:	30001e26 	beq	r6,zero,1000f64c <_ZNSs6appendEPKcj+0x94>
1000f5d4:	20800017 	ldw	r2,0(r4)
1000f5d8:	00d00034 	movhi	r3,16384
1000f5dc:	18ffff04 	addi	r3,r3,-4
1000f5e0:	113ffd17 	ldw	r4,-12(r2)
1000f5e4:	1907c83a 	sub	r3,r3,r4
1000f5e8:	19803136 	bltu	r3,r6,1000f6b0 <_ZNSs6appendEPKcj+0xf8>
1000f5ec:	10fffe17 	ldw	r3,-8(r2)
1000f5f0:	3125883a 	add	r18,r6,r4
1000f5f4:	2823883a 	mov	r17,r5
1000f5f8:	1c800236 	bltu	r3,r18,1000f604 <_ZNSs6appendEPKcj+0x4c>
1000f5fc:	10ffff17 	ldw	r3,-4(r2)
1000f600:	00c0080e 	bge	zero,r3,1000f624 <_ZNSs6appendEPKcj+0x6c>
1000f604:	d9800015 	stw	r6,0(sp)
1000f608:	900b883a 	mov	r5,r18
1000f60c:	8880162e 	bgeu	r17,r2,1000f668 <_ZNSs6appendEPKcj+0xb0>
1000f610:	8009883a 	mov	r4,r16
1000f614:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f618:	80800017 	ldw	r2,0(r16)
1000f61c:	d9800017 	ldw	r6,0(sp)
1000f620:	113ffd17 	ldw	r4,-12(r2)
1000f624:	30c00058 	cmpnei	r3,r6,1
1000f628:	1109883a 	add	r4,r2,r4
1000f62c:	18001826 	beq	r3,zero,1000f690 <_ZNSs6appendEPKcj+0xd8>
1000f630:	880b883a 	mov	r5,r17
1000f634:	00156f00 	call	100156f0 <memcpy>
1000f638:	80c00017 	ldw	r3,0(r16)
1000f63c:	008400f4 	movhi	r2,4099
1000f640:	10aa7e04 	addi	r2,r2,-22024
1000f644:	193ffd04 	addi	r4,r3,-12
1000f648:	2080141e 	bne	r4,r2,1000f69c <_ZNSs6appendEPKcj+0xe4>
1000f64c:	8005883a 	mov	r2,r16
1000f650:	dfc00417 	ldw	ra,16(sp)
1000f654:	dc800317 	ldw	r18,12(sp)
1000f658:	dc400217 	ldw	r17,8(sp)
1000f65c:	dc000117 	ldw	r16,4(sp)
1000f660:	dec00504 	addi	sp,sp,20
1000f664:	f800283a 	ret
1000f668:	1109883a 	add	r4,r2,r4
1000f66c:	247fe836 	bltu	r4,r17,1000f610 <_ZNSs6appendEPKcj+0x58>
1000f670:	8009883a 	mov	r4,r16
1000f674:	88a3c83a 	sub	r17,r17,r2
1000f678:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f67c:	80800017 	ldw	r2,0(r16)
1000f680:	d9800017 	ldw	r6,0(sp)
1000f684:	1463883a 	add	r17,r2,r17
1000f688:	113ffd17 	ldw	r4,-12(r2)
1000f68c:	003fe506 	br	1000f624 <_ZNSs6appendEPKcj+0x6c>
1000f690:	88800003 	ldbu	r2,0(r17)
1000f694:	20800005 	stb	r2,0(r4)
1000f698:	003fe706 	br	1000f638 <_ZNSs6appendEPKcj+0x80>
1000f69c:	1cbffd15 	stw	r18,-12(r3)
1000f6a0:	183fff15 	stw	zero,-4(r3)
1000f6a4:	1ca5883a 	add	r18,r3,r18
1000f6a8:	90000005 	stb	zero,0(r18)
1000f6ac:	003fe706 	br	1000f64c <_ZNSs6appendEPKcj+0x94>
1000f6b0:	010400b4 	movhi	r4,4098
1000f6b4:	21162c04 	addi	r4,r4,22704
1000f6b8:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000f6bc <_ZNSspLESt16initializer_listIcE>:
1000f6bc:	000f5b81 	jmpi	1000f5b8 <_ZNSs6appendEPKcj>

1000f6c0 <_ZNSs6appendEPKc>:
1000f6c0:	defffd04 	addi	sp,sp,-12
1000f6c4:	dc000115 	stw	r16,4(sp)
1000f6c8:	2021883a 	mov	r16,r4
1000f6cc:	2809883a 	mov	r4,r5
1000f6d0:	dfc00215 	stw	ra,8(sp)
1000f6d4:	d9400015 	stw	r5,0(sp)
1000f6d8:	00163ac0 	call	100163ac <strlen>
1000f6dc:	d9400017 	ldw	r5,0(sp)
1000f6e0:	100d883a 	mov	r6,r2
1000f6e4:	8009883a 	mov	r4,r16
1000f6e8:	dfc00217 	ldw	ra,8(sp)
1000f6ec:	dc000117 	ldw	r16,4(sp)
1000f6f0:	dec00304 	addi	sp,sp,12
1000f6f4:	000f5b81 	jmpi	1000f5b8 <_ZNSs6appendEPKcj>

1000f6f8 <_ZNSspLEPKc>:
1000f6f8:	defffd04 	addi	sp,sp,-12
1000f6fc:	dc000115 	stw	r16,4(sp)
1000f700:	2021883a 	mov	r16,r4
1000f704:	2809883a 	mov	r4,r5
1000f708:	dfc00215 	stw	ra,8(sp)
1000f70c:	d9400015 	stw	r5,0(sp)
1000f710:	00163ac0 	call	100163ac <strlen>
1000f714:	d9400017 	ldw	r5,0(sp)
1000f718:	100d883a 	mov	r6,r2
1000f71c:	8009883a 	mov	r4,r16
1000f720:	dfc00217 	ldw	ra,8(sp)
1000f724:	dc000117 	ldw	r16,4(sp)
1000f728:	dec00304 	addi	sp,sp,12
1000f72c:	000f5b81 	jmpi	1000f5b8 <_ZNSs6appendEPKcj>

1000f730 <_ZNSs6appendESt16initializer_listIcE>:
1000f730:	000f5b81 	jmpi	1000f5b8 <_ZNSs6appendEPKcj>

1000f734 <_ZNSs6appendEjc>:
1000f734:	defffb04 	addi	sp,sp,-20
1000f738:	dc400115 	stw	r17,4(sp)
1000f73c:	dfc00415 	stw	ra,16(sp)
1000f740:	dcc00315 	stw	r19,12(sp)
1000f744:	dc800215 	stw	r18,8(sp)
1000f748:	dc000015 	stw	r16,0(sp)
1000f74c:	2023883a 	mov	r17,r4
1000f750:	28001f26 	beq	r5,zero,1000f7d0 <_ZNSs6appendEjc+0x9c>
1000f754:	21000017 	ldw	r4,0(r4)
1000f758:	00900034 	movhi	r2,16384
1000f75c:	10bfff04 	addi	r2,r2,-4
1000f760:	20fffd17 	ldw	r3,-12(r4)
1000f764:	2821883a 	mov	r16,r5
1000f768:	10c5c83a 	sub	r2,r2,r3
1000f76c:	11402736 	bltu	r2,r5,1000f80c <_ZNSs6appendEjc+0xd8>
1000f770:	20bffe17 	ldw	r2,-8(r4)
1000f774:	28e7883a 	add	r19,r5,r3
1000f778:	3025883a 	mov	r18,r6
1000f77c:	14c00236 	bltu	r2,r19,1000f788 <_ZNSs6appendEjc+0x54>
1000f780:	20bfff17 	ldw	r2,-4(r4)
1000f784:	0080050e 	bge	zero,r2,1000f79c <_ZNSs6appendEjc+0x68>
1000f788:	8809883a 	mov	r4,r17
1000f78c:	980b883a 	mov	r5,r19
1000f790:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f794:	89000017 	ldw	r4,0(r17)
1000f798:	20fffd17 	ldw	r3,-12(r4)
1000f79c:	80800058 	cmpnei	r2,r16,1
1000f7a0:	20c9883a 	add	r4,r4,r3
1000f7a4:	10001226 	beq	r2,zero,1000f7f0 <_ZNSs6appendEjc+0xbc>
1000f7a8:	91403fcc 	andi	r5,r18,255
1000f7ac:	2940201c 	xori	r5,r5,128
1000f7b0:	800d883a 	mov	r6,r16
1000f7b4:	297fe004 	addi	r5,r5,-128
1000f7b8:	001591c0 	call	1001591c <memset>
1000f7bc:	88c00017 	ldw	r3,0(r17)
1000f7c0:	008400f4 	movhi	r2,4099
1000f7c4:	10aa7e04 	addi	r2,r2,-22024
1000f7c8:	193ffd04 	addi	r4,r3,-12
1000f7cc:	20800a1e 	bne	r4,r2,1000f7f8 <_ZNSs6appendEjc+0xc4>
1000f7d0:	8805883a 	mov	r2,r17
1000f7d4:	dfc00417 	ldw	ra,16(sp)
1000f7d8:	dcc00317 	ldw	r19,12(sp)
1000f7dc:	dc800217 	ldw	r18,8(sp)
1000f7e0:	dc400117 	ldw	r17,4(sp)
1000f7e4:	dc000017 	ldw	r16,0(sp)
1000f7e8:	dec00504 	addi	sp,sp,20
1000f7ec:	f800283a 	ret
1000f7f0:	24800005 	stb	r18,0(r4)
1000f7f4:	003ff106 	br	1000f7bc <_ZNSs6appendEjc+0x88>
1000f7f8:	1cfffd15 	stw	r19,-12(r3)
1000f7fc:	183fff15 	stw	zero,-4(r3)
1000f800:	1ce7883a 	add	r19,r3,r19
1000f804:	98000005 	stb	zero,0(r19)
1000f808:	003ff106 	br	1000f7d0 <_ZNSs6appendEjc+0x9c>
1000f80c:	010400b4 	movhi	r4,4098
1000f810:	21162c04 	addi	r4,r4,22704
1000f814:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000f818 <_ZNSs6resizeEjc>:
1000f818:	21c00017 	ldw	r7,0(r4)
1000f81c:	00d00034 	movhi	r3,16384
1000f820:	18ffff04 	addi	r3,r3,-4
1000f824:	3a3ffd17 	ldw	r8,-12(r7)
1000f828:	19400b36 	bltu	r3,r5,1000f858 <_ZNSs6resizeEjc+0x40>
1000f82c:	41400536 	bltu	r8,r5,1000f844 <_ZNSs6resizeEjc+0x2c>
1000f830:	2a000136 	bltu	r5,r8,1000f838 <_ZNSs6resizeEjc+0x20>
1000f834:	f800283a 	ret
1000f838:	000f883a 	mov	r7,zero
1000f83c:	414dc83a 	sub	r6,r8,r5
1000f840:	000e4901 	jmpi	1000e490 <_ZNSs9_M_mutateEjjj>
1000f844:	31803fcc 	andi	r6,r6,255
1000f848:	3180201c 	xori	r6,r6,128
1000f84c:	31bfe004 	addi	r6,r6,-128
1000f850:	2a0bc83a 	sub	r5,r5,r8
1000f854:	000f7341 	jmpi	1000f734 <_ZNSs6appendEjc>
1000f858:	010400b4 	movhi	r4,4098
1000f85c:	deffff04 	addi	sp,sp,-4
1000f860:	21163204 	addi	r4,r4,22728
1000f864:	dfc00015 	stw	ra,0(sp)
1000f868:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

1000f86c <_ZNSs6resizeEj>:
1000f86c:	000d883a 	mov	r6,zero
1000f870:	000f8181 	jmpi	1000f818 <_ZNSs6resizeEjc>

1000f874 <_ZNSs9push_backEc>:
1000f874:	20800017 	ldw	r2,0(r4)
1000f878:	defffb04 	addi	sp,sp,-20
1000f87c:	dc800215 	stw	r18,8(sp)
1000f880:	14bffd17 	ldw	r18,-12(r2)
1000f884:	10fffe17 	ldw	r3,-8(r2)
1000f888:	dcc00315 	stw	r19,12(sp)
1000f88c:	dc400115 	stw	r17,4(sp)
1000f890:	dc000015 	stw	r16,0(sp)
1000f894:	dfc00415 	stw	ra,16(sp)
1000f898:	94400044 	addi	r17,r18,1
1000f89c:	2021883a 	mov	r16,r4
1000f8a0:	2827883a 	mov	r19,r5
1000f8a4:	1c400236 	bltu	r3,r17,1000f8b0 <_ZNSs9push_backEc+0x3c>
1000f8a8:	10ffff17 	ldw	r3,-4(r2)
1000f8ac:	00c0130e 	bge	zero,r3,1000f8fc <_ZNSs9push_backEc+0x88>
1000f8b0:	880b883a 	mov	r5,r17
1000f8b4:	8009883a 	mov	r4,r16
1000f8b8:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f8bc:	80800017 	ldw	r2,0(r16)
1000f8c0:	10fffd17 	ldw	r3,-12(r2)
1000f8c4:	10c5883a 	add	r2,r2,r3
1000f8c8:	14c00005 	stb	r19,0(r2)
1000f8cc:	81000017 	ldw	r4,0(r16)
1000f8d0:	008400f4 	movhi	r2,4099
1000f8d4:	10aa7e04 	addi	r2,r2,-22024
1000f8d8:	20fffd04 	addi	r3,r4,-12
1000f8dc:	1880091e 	bne	r3,r2,1000f904 <_ZNSs9push_backEc+0x90>
1000f8e0:	dfc00417 	ldw	ra,16(sp)
1000f8e4:	dcc00317 	ldw	r19,12(sp)
1000f8e8:	dc800217 	ldw	r18,8(sp)
1000f8ec:	dc400117 	ldw	r17,4(sp)
1000f8f0:	dc000017 	ldw	r16,0(sp)
1000f8f4:	dec00504 	addi	sp,sp,20
1000f8f8:	f800283a 	ret
1000f8fc:	9007883a 	mov	r3,r18
1000f900:	003ff006 	br	1000f8c4 <_ZNSs9push_backEc+0x50>
1000f904:	203fff15 	stw	zero,-4(r4)
1000f908:	247ffd15 	stw	r17,-12(r4)
1000f90c:	1ca5883a 	add	r18,r3,r18
1000f910:	90000345 	stb	zero,13(r18)
1000f914:	003ff206 	br	1000f8e0 <_ZNSs9push_backEc+0x6c>

1000f918 <_ZNSspLEc>:
1000f918:	20c00017 	ldw	r3,0(r4)
1000f91c:	defffb04 	addi	sp,sp,-20
1000f920:	dc800215 	stw	r18,8(sp)
1000f924:	1cbffd17 	ldw	r18,-12(r3)
1000f928:	18bffe17 	ldw	r2,-8(r3)
1000f92c:	dcc00315 	stw	r19,12(sp)
1000f930:	dc400115 	stw	r17,4(sp)
1000f934:	dc000015 	stw	r16,0(sp)
1000f938:	dfc00415 	stw	ra,16(sp)
1000f93c:	94400044 	addi	r17,r18,1
1000f940:	2021883a 	mov	r16,r4
1000f944:	2827883a 	mov	r19,r5
1000f948:	14400236 	bltu	r2,r17,1000f954 <_ZNSspLEc+0x3c>
1000f94c:	18bfff17 	ldw	r2,-4(r3)
1000f950:	0080140e 	bge	zero,r2,1000f9a4 <_ZNSspLEc+0x8c>
1000f954:	880b883a 	mov	r5,r17
1000f958:	8009883a 	mov	r4,r16
1000f95c:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000f960:	80c00017 	ldw	r3,0(r16)
1000f964:	18bffd17 	ldw	r2,-12(r3)
1000f968:	1887883a 	add	r3,r3,r2
1000f96c:	1cc00005 	stb	r19,0(r3)
1000f970:	81000017 	ldw	r4,0(r16)
1000f974:	008400f4 	movhi	r2,4099
1000f978:	10aa7e04 	addi	r2,r2,-22024
1000f97c:	20fffd04 	addi	r3,r4,-12
1000f980:	18800a1e 	bne	r3,r2,1000f9ac <_ZNSspLEc+0x94>
1000f984:	8005883a 	mov	r2,r16
1000f988:	dfc00417 	ldw	ra,16(sp)
1000f98c:	dcc00317 	ldw	r19,12(sp)
1000f990:	dc800217 	ldw	r18,8(sp)
1000f994:	dc400117 	ldw	r17,4(sp)
1000f998:	dc000017 	ldw	r16,0(sp)
1000f99c:	dec00504 	addi	sp,sp,20
1000f9a0:	f800283a 	ret
1000f9a4:	9005883a 	mov	r2,r18
1000f9a8:	003fef06 	br	1000f968 <_ZNSspLEc+0x50>
1000f9ac:	203fff15 	stw	zero,-4(r4)
1000f9b0:	247ffd15 	stw	r17,-12(r4)
1000f9b4:	1ca5883a 	add	r18,r3,r18
1000f9b8:	90000345 	stb	zero,13(r18)
1000f9bc:	003ff106 	br	1000f984 <_ZNSspLEc+0x6c>

1000f9c0 <_ZNSs4_Rep7_M_grabERKSaIcES2_>:
1000f9c0:	21800217 	ldw	r6,8(r4)
1000f9c4:	2005883a 	mov	r2,r4
1000f9c8:	30000516 	blt	r6,zero,1000f9e0 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x20>
1000f9cc:	00c400f4 	movhi	r3,4099
1000f9d0:	18ea7e04 	addi	r3,r3,-22024
1000f9d4:	20c0041e 	bne	r4,r3,1000f9e8 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x28>
1000f9d8:	10800304 	addi	r2,r2,12
1000f9dc:	f800283a 	ret
1000f9e0:	000d883a 	mov	r6,zero
1000f9e4:	000f1b41 	jmpi	1000f1b4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000f9e8:	31800044 	addi	r6,r6,1
1000f9ec:	21800215 	stw	r6,8(r4)
1000f9f0:	003ff906 	br	1000f9d8 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x18>

1000f9f4 <_ZNSsC1ERKSs>:
1000f9f4:	28800017 	ldw	r2,0(r5)
1000f9f8:	defffd04 	addi	sp,sp,-12
1000f9fc:	dc000115 	stw	r16,4(sp)
1000fa00:	117fff17 	ldw	r5,-4(r2)
1000fa04:	dfc00215 	stw	ra,8(sp)
1000fa08:	2021883a 	mov	r16,r4
1000fa0c:	113ffd04 	addi	r4,r2,-12
1000fa10:	28000816 	blt	r5,zero,1000fa34 <_ZNSsC1ERKSs+0x40>
1000fa14:	00c400f4 	movhi	r3,4099
1000fa18:	18ea7e04 	addi	r3,r3,-22024
1000fa1c:	20c0091e 	bne	r4,r3,1000fa44 <_ZNSsC1ERKSs+0x50>
1000fa20:	80800015 	stw	r2,0(r16)
1000fa24:	dfc00217 	ldw	ra,8(sp)
1000fa28:	dc000117 	ldw	r16,4(sp)
1000fa2c:	dec00304 	addi	sp,sp,12
1000fa30:	f800283a 	ret
1000fa34:	000d883a 	mov	r6,zero
1000fa38:	d94000c4 	addi	r5,sp,3
1000fa3c:	000f1b40 	call	1000f1b4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000fa40:	003ff706 	br	1000fa20 <_ZNSsC1ERKSs+0x2c>
1000fa44:	29400044 	addi	r5,r5,1
1000fa48:	117fff15 	stw	r5,-4(r2)
1000fa4c:	003ff406 	br	1000fa20 <_ZNSsC1ERKSs+0x2c>

1000fa50 <_ZNSs6assignERKSs>:
1000fa50:	21800017 	ldw	r6,0(r4)
1000fa54:	28800017 	ldw	r2,0(r5)
1000fa58:	defffc04 	addi	sp,sp,-16
1000fa5c:	dc000215 	stw	r16,8(sp)
1000fa60:	dfc00315 	stw	ra,12(sp)
1000fa64:	2021883a 	mov	r16,r4
1000fa68:	30800926 	beq	r6,r2,1000fa90 <_ZNSs6assignERKSs+0x40>
1000fa6c:	117fff17 	ldw	r5,-4(r2)
1000fa70:	113ffd04 	addi	r4,r2,-12
1000fa74:	28000e16 	blt	r5,zero,1000fab0 <_ZNSs6assignERKSs+0x60>
1000fa78:	00c400f4 	movhi	r3,4099
1000fa7c:	18ea7e04 	addi	r3,r3,-22024
1000fa80:	20c0081e 	bne	r4,r3,1000faa4 <_ZNSs6assignERKSs+0x54>
1000fa84:	313ffd04 	addi	r4,r6,-12
1000fa88:	20c0101e 	bne	r4,r3,1000facc <_ZNSs6assignERKSs+0x7c>
1000fa8c:	80800015 	stw	r2,0(r16)
1000fa90:	8005883a 	mov	r2,r16
1000fa94:	dfc00317 	ldw	ra,12(sp)
1000fa98:	dc000217 	ldw	r16,8(sp)
1000fa9c:	dec00404 	addi	sp,sp,16
1000faa0:	f800283a 	ret
1000faa4:	29400044 	addi	r5,r5,1
1000faa8:	117fff15 	stw	r5,-4(r2)
1000faac:	003ff506 	br	1000fa84 <_ZNSs6assignERKSs+0x34>
1000fab0:	000d883a 	mov	r6,zero
1000fab4:	d94001c4 	addi	r5,sp,7
1000fab8:	000f1b40 	call	1000f1b4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000fabc:	00c400f4 	movhi	r3,4099
1000fac0:	81800017 	ldw	r6,0(r16)
1000fac4:	18ea7e04 	addi	r3,r3,-22024
1000fac8:	003fee06 	br	1000fa84 <_ZNSs6assignERKSs+0x34>
1000facc:	30ffff17 	ldw	r3,-4(r6)
1000fad0:	197fffc4 	addi	r5,r3,-1
1000fad4:	317fff15 	stw	r5,-4(r6)
1000fad8:	00ffec16 	blt	zero,r3,1000fa8c <_ZNSs6assignERKSs+0x3c>
1000fadc:	d94001c4 	addi	r5,sp,7
1000fae0:	d8800015 	stw	r2,0(sp)
1000fae4:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000fae8:	d8800017 	ldw	r2,0(sp)
1000faec:	003fe706 	br	1000fa8c <_ZNSs6assignERKSs+0x3c>

1000faf0 <_ZNSsaSERKSs>:
1000faf0:	000fa501 	jmpi	1000fa50 <_ZNSs6assignERKSs>

1000faf4 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_>:
1000faf4:	01c40074 	movhi	r7,4097
1000faf8:	deffec04 	addi	sp,sp,-80
1000fafc:	39e26504 	addi	r7,r7,-30316
1000fb00:	00c400b4 	movhi	r3,4098
1000fb04:	00840074 	movhi	r2,4097
1000fb08:	18d15f04 	addi	r3,r3,17788
1000fb0c:	10beef04 	addi	r2,r2,-1092
1000fb10:	d9000015 	stw	r4,0(sp)
1000fb14:	d9c00a15 	stw	r7,40(sp)
1000fb18:	d9000404 	addi	r4,sp,16
1000fb1c:	d9c01204 	addi	r7,sp,72
1000fb20:	d9400115 	stw	r5,4(sp)
1000fb24:	d8c00b15 	stw	r3,44(sp)
1000fb28:	d9c00c15 	stw	r7,48(sp)
1000fb2c:	dfc01315 	stw	ra,76(sp)
1000fb30:	d8800d15 	stw	r2,52(sp)
1000fb34:	d9800215 	stw	r6,8(sp)
1000fb38:	df001215 	stw	fp,72(sp)
1000fb3c:	dec00e15 	stw	sp,56(sp)
1000fb40:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000fb44:	d9000117 	ldw	r4,4(sp)
1000fb48:	00163ac0 	call	100163ac <strlen>
1000fb4c:	d8c00017 	ldw	r3,0(sp)
1000fb50:	100f883a 	mov	r7,r2
1000fb54:	d9000217 	ldw	r4,8(sp)
1000fb58:	008400f4 	movhi	r2,4099
1000fb5c:	10aa8104 	addi	r2,r2,-22012
1000fb60:	18800015 	stw	r2,0(r3)
1000fb64:	20800017 	ldw	r2,0(r4)
1000fb68:	1809883a 	mov	r4,r3
1000fb6c:	d9c00315 	stw	r7,12(sp)
1000fb70:	117ffd17 	ldw	r5,-12(r2)
1000fb74:	00800044 	movi	r2,1
1000fb78:	d8800515 	stw	r2,20(sp)
1000fb7c:	394b883a 	add	r5,r7,r5
1000fb80:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000fb84:	d9800317 	ldw	r6,12(sp)
1000fb88:	d9400117 	ldw	r5,4(sp)
1000fb8c:	d9000017 	ldw	r4,0(sp)
1000fb90:	000f5b80 	call	1000f5b8 <_ZNSs6appendEPKcj>
1000fb94:	d9400217 	ldw	r5,8(sp)
1000fb98:	d9000017 	ldw	r4,0(sp)
1000fb9c:	000f3e40 	call	1000f3e4 <_ZNSs6appendERKSs>
1000fba0:	d9000404 	addi	r4,sp,16
1000fba4:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000fba8:	d8800017 	ldw	r2,0(sp)
1000fbac:	dfc01317 	ldw	ra,76(sp)
1000fbb0:	df001217 	ldw	fp,72(sp)
1000fbb4:	dec01404 	addi	sp,sp,80
1000fbb8:	f800283a 	ret
1000fbbc:	d8800017 	ldw	r2,0(sp)
1000fbc0:	d8c00617 	ldw	r3,24(sp)
1000fbc4:	11000017 	ldw	r4,0(r2)
1000fbc8:	008400f4 	movhi	r2,4099
1000fbcc:	10aa7e04 	addi	r2,r2,-22024
1000fbd0:	213ffd04 	addi	r4,r4,-12
1000fbd4:	d8c00015 	stw	r3,0(sp)
1000fbd8:	20800226 	beq	r4,r2,1000fbe4 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_+0xf0>
1000fbdc:	d94011c4 	addi	r5,sp,71
1000fbe0:	000e3c00 	call	1000e3c0 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fbe4:	d9000017 	ldw	r4,0(sp)
1000fbe8:	00bfffc4 	movi	r2,-1
1000fbec:	d8800515 	stw	r2,20(sp)
1000fbf0:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000fbf4 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_>:
1000fbf4:	01c40074 	movhi	r7,4097
1000fbf8:	deffed04 	addi	sp,sp,-76
1000fbfc:	39e26504 	addi	r7,r7,-30316
1000fc00:	00c400b4 	movhi	r3,4098
1000fc04:	00840074 	movhi	r2,4097
1000fc08:	18d16084 	addi	r3,r3,17794
1000fc0c:	10bf2b04 	addi	r2,r2,-852
1000fc10:	d9000015 	stw	r4,0(sp)
1000fc14:	d9c00915 	stw	r7,36(sp)
1000fc18:	d9000304 	addi	r4,sp,12
1000fc1c:	d9c01104 	addi	r7,sp,68
1000fc20:	d8c00a15 	stw	r3,40(sp)
1000fc24:	d8800c15 	stw	r2,48(sp)
1000fc28:	d9400215 	stw	r5,8(sp)
1000fc2c:	dfc01215 	stw	ra,72(sp)
1000fc30:	df001115 	stw	fp,68(sp)
1000fc34:	d9c00b15 	stw	r7,44(sp)
1000fc38:	dec00d15 	stw	sp,52(sp)
1000fc3c:	d9800115 	stw	r6,4(sp)
1000fc40:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000fc44:	d8c00017 	ldw	r3,0(sp)
1000fc48:	008400f4 	movhi	r2,4099
1000fc4c:	10aa8104 	addi	r2,r2,-22012
1000fc50:	18800015 	stw	r2,0(r3)
1000fc54:	d8800117 	ldw	r2,4(sp)
1000fc58:	1809883a 	mov	r4,r3
1000fc5c:	10800017 	ldw	r2,0(r2)
1000fc60:	117ffd17 	ldw	r5,-12(r2)
1000fc64:	00800044 	movi	r2,1
1000fc68:	d8800415 	stw	r2,16(sp)
1000fc6c:	29400044 	addi	r5,r5,1
1000fc70:	000f2600 	call	1000f260 <_ZNSs7reserveEj>
1000fc74:	d9800207 	ldb	r6,8(sp)
1000fc78:	d9000017 	ldw	r4,0(sp)
1000fc7c:	01400044 	movi	r5,1
1000fc80:	000f7340 	call	1000f734 <_ZNSs6appendEjc>
1000fc84:	d9400117 	ldw	r5,4(sp)
1000fc88:	d9000017 	ldw	r4,0(sp)
1000fc8c:	000f3e40 	call	1000f3e4 <_ZNSs6appendERKSs>
1000fc90:	d9000304 	addi	r4,sp,12
1000fc94:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000fc98:	d8800017 	ldw	r2,0(sp)
1000fc9c:	dfc01217 	ldw	ra,72(sp)
1000fca0:	df001117 	ldw	fp,68(sp)
1000fca4:	dec01304 	addi	sp,sp,76
1000fca8:	f800283a 	ret
1000fcac:	d8800017 	ldw	r2,0(sp)
1000fcb0:	d8c00517 	ldw	r3,20(sp)
1000fcb4:	11000017 	ldw	r4,0(r2)
1000fcb8:	008400f4 	movhi	r2,4099
1000fcbc:	10aa7e04 	addi	r2,r2,-22024
1000fcc0:	213ffd04 	addi	r4,r4,-12
1000fcc4:	d8c00015 	stw	r3,0(sp)
1000fcc8:	20800226 	beq	r4,r2,1000fcd4 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_+0xe0>
1000fccc:	d94010c4 	addi	r5,sp,67
1000fcd0:	000e3c00 	call	1000e3c0 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fcd4:	d9000017 	ldw	r4,0(sp)
1000fcd8:	00bfffc4 	movi	r2,-1
1000fcdc:	d8800415 	stw	r2,16(sp)
1000fce0:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000fce4 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_>:
1000fce4:	00c400b4 	movhi	r3,4098
1000fce8:	deffed04 	addi	sp,sp,-76
1000fcec:	18d16204 	addi	r3,r3,17800
1000fcf0:	01c40074 	movhi	r7,4097
1000fcf4:	00840074 	movhi	r2,4097
1000fcf8:	39e26504 	addi	r7,r7,-30316
1000fcfc:	10bf5e04 	addi	r2,r2,-648
1000fd00:	d9000015 	stw	r4,0(sp)
1000fd04:	d8c00a15 	stw	r3,40(sp)
1000fd08:	d9000304 	addi	r4,sp,12
1000fd0c:	d8c01104 	addi	r3,sp,68
1000fd10:	dfc01215 	stw	ra,72(sp)
1000fd14:	d9c00915 	stw	r7,36(sp)
1000fd18:	d8c00b15 	stw	r3,44(sp)
1000fd1c:	d8800c15 	stw	r2,48(sp)
1000fd20:	d9800215 	stw	r6,8(sp)
1000fd24:	d9400115 	stw	r5,4(sp)
1000fd28:	df001115 	stw	fp,68(sp)
1000fd2c:	dec00d15 	stw	sp,52(sp)
1000fd30:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1000fd34:	d9400117 	ldw	r5,4(sp)
1000fd38:	d9000017 	ldw	r4,0(sp)
1000fd3c:	00bfffc4 	movi	r2,-1
1000fd40:	d8800415 	stw	r2,16(sp)
1000fd44:	000f9f40 	call	1000f9f4 <_ZNSsC1ERKSs>
1000fd48:	d9400217 	ldw	r5,8(sp)
1000fd4c:	d9000017 	ldw	r4,0(sp)
1000fd50:	00800044 	movi	r2,1
1000fd54:	d8800415 	stw	r2,16(sp)
1000fd58:	000f3e40 	call	1000f3e4 <_ZNSs6appendERKSs>
1000fd5c:	d9000304 	addi	r4,sp,12
1000fd60:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1000fd64:	d8800017 	ldw	r2,0(sp)
1000fd68:	dfc01217 	ldw	ra,72(sp)
1000fd6c:	df001117 	ldw	fp,68(sp)
1000fd70:	dec01304 	addi	sp,sp,76
1000fd74:	f800283a 	ret
1000fd78:	d8800017 	ldw	r2,0(sp)
1000fd7c:	d8c00517 	ldw	r3,20(sp)
1000fd80:	11000017 	ldw	r4,0(r2)
1000fd84:	008400f4 	movhi	r2,4099
1000fd88:	10aa7e04 	addi	r2,r2,-22024
1000fd8c:	213ffd04 	addi	r4,r4,-12
1000fd90:	d8c00015 	stw	r3,0(sp)
1000fd94:	20800226 	beq	r4,r2,1000fda0 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_+0xbc>
1000fd98:	d94010c4 	addi	r5,sp,67
1000fd9c:	000e3c00 	call	1000e3c0 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fda0:	d9000017 	ldw	r4,0(sp)
1000fda4:	00bfffc4 	movi	r2,-1
1000fda8:	d8800415 	stw	r2,16(sp)
1000fdac:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

1000fdb0 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>:
1000fdb0:	29001d26 	beq	r5,r4,1000fe28 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x78>
1000fdb4:	defffc04 	addi	sp,sp,-16
1000fdb8:	dc000015 	stw	r16,0(sp)
1000fdbc:	2921c83a 	sub	r16,r5,r4
1000fdc0:	dc400115 	stw	r17,4(sp)
1000fdc4:	000b883a 	mov	r5,zero
1000fdc8:	2023883a 	mov	r17,r4
1000fdcc:	8009883a 	mov	r4,r16
1000fdd0:	dc800215 	stw	r18,8(sp)
1000fdd4:	dfc00315 	stw	ra,12(sp)
1000fdd8:	000e1680 	call	1000e168 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000fddc:	1025883a 	mov	r18,r2
1000fde0:	80800058 	cmpnei	r2,r16,1
1000fde4:	90c00304 	addi	r3,r18,12
1000fde8:	10001326 	beq	r2,zero,1000fe38 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x88>
1000fdec:	1809883a 	mov	r4,r3
1000fdf0:	800d883a 	mov	r6,r16
1000fdf4:	880b883a 	mov	r5,r17
1000fdf8:	00156f00 	call	100156f0 <memcpy>
1000fdfc:	1007883a 	mov	r3,r2
1000fe00:	008400f4 	movhi	r2,4099
1000fe04:	10aa7e04 	addi	r2,r2,-22024
1000fe08:	90800e1e 	bne	r18,r2,1000fe44 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x94>
1000fe0c:	1805883a 	mov	r2,r3
1000fe10:	dfc00317 	ldw	ra,12(sp)
1000fe14:	dc800217 	ldw	r18,8(sp)
1000fe18:	dc400117 	ldw	r17,4(sp)
1000fe1c:	dc000017 	ldw	r16,0(sp)
1000fe20:	dec00404 	addi	sp,sp,16
1000fe24:	f800283a 	ret
1000fe28:	00c400f4 	movhi	r3,4099
1000fe2c:	18ea8104 	addi	r3,r3,-22012
1000fe30:	1805883a 	mov	r2,r3
1000fe34:	f800283a 	ret
1000fe38:	88800003 	ldbu	r2,0(r17)
1000fe3c:	90800305 	stb	r2,12(r18)
1000fe40:	003fef06 	br	1000fe00 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x50>
1000fe44:	94000015 	stw	r16,0(r18)
1000fe48:	90000215 	stw	zero,8(r18)
1000fe4c:	9421883a 	add	r16,r18,r16
1000fe50:	80000305 	stb	zero,12(r16)
1000fe54:	003fed06 	br	1000fe0c <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x5c>

1000fe58 <_ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE>:
1000fe58:	defffe04 	addi	sp,sp,-8
1000fe5c:	2805883a 	mov	r2,r5
1000fe60:	dc000015 	stw	r16,0(sp)
1000fe64:	300b883a 	mov	r5,r6
1000fe68:	2021883a 	mov	r16,r4
1000fe6c:	380d883a 	mov	r6,r7
1000fe70:	1009883a 	mov	r4,r2
1000fe74:	000f883a 	mov	r7,zero
1000fe78:	dfc00115 	stw	ra,4(sp)
1000fe7c:	000fdb00 	call	1000fdb0 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>
1000fe80:	80800015 	stw	r2,0(r16)
1000fe84:	dfc00117 	ldw	ra,4(sp)
1000fe88:	dc000017 	ldw	r16,0(sp)
1000fe8c:	dec00204 	addi	sp,sp,8
1000fe90:	f800283a 	ret

1000fe94 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>:
1000fe94:	21400226 	beq	r4,r5,1000fea0 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0xc>
1000fe98:	20000426 	beq	r4,zero,1000feac <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0x18>
1000fe9c:	000e3201 	jmpi	1000e320 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
1000fea0:	008400f4 	movhi	r2,4099
1000fea4:	10aa8104 	addi	r2,r2,-22012
1000fea8:	f800283a 	ret
1000feac:	010400b4 	movhi	r4,4098
1000feb0:	deffff04 	addi	sp,sp,-4
1000feb4:	21163804 	addi	r4,r4,22752
1000feb8:	dfc00015 	stw	ra,0(sp)
1000febc:	0009de80 	call	10009de8 <_ZSt19__throw_logic_errorPKc>

1000fec0 <_ZNSsC1ERKSsjRKSaIcE>:
1000fec0:	28800017 	ldw	r2,0(r5)
1000fec4:	defffe04 	addi	sp,sp,-8
1000fec8:	dfc00115 	stw	ra,4(sp)
1000fecc:	10fffd17 	ldw	r3,-12(r2)
1000fed0:	dc000015 	stw	r16,0(sp)
1000fed4:	19800d36 	bltu	r3,r6,1000ff0c <_ZNSsC1ERKSsjRKSaIcE+0x4c>
1000fed8:	3011883a 	mov	r8,r6
1000fedc:	2021883a 	mov	r16,r4
1000fee0:	3809883a 	mov	r4,r7
1000fee4:	200d883a 	mov	r6,r4
1000fee8:	000f883a 	mov	r7,zero
1000feec:	10cb883a 	add	r5,r2,r3
1000fef0:	1209883a 	add	r4,r2,r8
1000fef4:	000fe940 	call	1000fe94 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
1000fef8:	80800015 	stw	r2,0(r16)
1000fefc:	dfc00117 	ldw	ra,4(sp)
1000ff00:	dc000017 	ldw	r16,0(sp)
1000ff04:	dec00204 	addi	sp,sp,8
1000ff08:	f800283a 	ret
1000ff0c:	014400b4 	movhi	r5,4098
1000ff10:	010400b4 	movhi	r4,4098
1000ff14:	180f883a 	mov	r7,r3
1000ff18:	29564304 	addi	r5,r5,22796
1000ff1c:	2115dd04 	addi	r4,r4,22388
1000ff20:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000ff24 <_ZNSsC1ERKSsjj>:
1000ff24:	2a000017 	ldw	r8,0(r5)
1000ff28:	defffd04 	addi	sp,sp,-12
1000ff2c:	dfc00215 	stw	ra,8(sp)
1000ff30:	40bffd17 	ldw	r2,-12(r8)
1000ff34:	dc000115 	stw	r16,4(sp)
1000ff38:	11801136 	bltu	r2,r6,1000ff80 <_ZNSsC1ERKSsjj+0x5c>
1000ff3c:	118bc83a 	sub	r5,r2,r6
1000ff40:	3007883a 	mov	r3,r6
1000ff44:	2021883a 	mov	r16,r4
1000ff48:	39400b36 	bltu	r7,r5,1000ff78 <_ZNSsC1ERKSsjj+0x54>
1000ff4c:	28cb883a 	add	r5,r5,r3
1000ff50:	000f883a 	mov	r7,zero
1000ff54:	d98000c4 	addi	r6,sp,3
1000ff58:	414b883a 	add	r5,r8,r5
1000ff5c:	40c9883a 	add	r4,r8,r3
1000ff60:	000fe940 	call	1000fe94 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
1000ff64:	80800015 	stw	r2,0(r16)
1000ff68:	dfc00217 	ldw	ra,8(sp)
1000ff6c:	dc000117 	ldw	r16,4(sp)
1000ff70:	dec00304 	addi	sp,sp,12
1000ff74:	f800283a 	ret
1000ff78:	380b883a 	mov	r5,r7
1000ff7c:	003ff306 	br	1000ff4c <_ZNSsC1ERKSsjj+0x28>
1000ff80:	014400b4 	movhi	r5,4098
1000ff84:	010400b4 	movhi	r4,4098
1000ff88:	100f883a 	mov	r7,r2
1000ff8c:	29564304 	addi	r5,r5,22796
1000ff90:	2115dd04 	addi	r4,r4,22388
1000ff94:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000ff98 <_ZNKSs6substrEjj>:
1000ff98:	28c00017 	ldw	r3,0(r5)
1000ff9c:	defffe04 	addi	sp,sp,-8
1000ffa0:	dfc00115 	stw	ra,4(sp)
1000ffa4:	18fffd17 	ldw	r3,-12(r3)
1000ffa8:	dc000015 	stw	r16,0(sp)
1000ffac:	19800736 	bltu	r3,r6,1000ffcc <_ZNKSs6substrEjj+0x34>
1000ffb0:	2021883a 	mov	r16,r4
1000ffb4:	000ff240 	call	1000ff24 <_ZNSsC1ERKSsjj>
1000ffb8:	8005883a 	mov	r2,r16
1000ffbc:	dfc00117 	ldw	ra,4(sp)
1000ffc0:	dc000017 	ldw	r16,0(sp)
1000ffc4:	dec00204 	addi	sp,sp,8
1000ffc8:	f800283a 	ret
1000ffcc:	014400b4 	movhi	r5,4098
1000ffd0:	010400b4 	movhi	r4,4098
1000ffd4:	180f883a 	mov	r7,r3
1000ffd8:	29564a04 	addi	r5,r5,22824
1000ffdc:	2115dd04 	addi	r4,r4,22388
1000ffe0:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1000ffe4 <_ZNSsC1ERKSsjjRKSaIcE>:
1000ffe4:	2a000017 	ldw	r8,0(r5)
1000ffe8:	defffe04 	addi	sp,sp,-8
1000ffec:	dfc00115 	stw	ra,4(sp)
1000fff0:	40bffd17 	ldw	r2,-12(r8)
1000fff4:	dc000015 	stw	r16,0(sp)
1000fff8:	11801136 	bltu	r2,r6,10010040 <_ZNSsC1ERKSsjjRKSaIcE+0x5c>
1000fffc:	118bc83a 	sub	r5,r2,r6
10010000:	3007883a 	mov	r3,r6
10010004:	2021883a 	mov	r16,r4
10010008:	39400b36 	bltu	r7,r5,10010038 <_ZNSsC1ERKSsjjRKSaIcE+0x54>
1001000c:	d9800217 	ldw	r6,8(sp)
10010010:	28cb883a 	add	r5,r5,r3
10010014:	000f883a 	mov	r7,zero
10010018:	414b883a 	add	r5,r8,r5
1001001c:	40c9883a 	add	r4,r8,r3
10010020:	000fe940 	call	1000fe94 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010024:	80800015 	stw	r2,0(r16)
10010028:	dfc00117 	ldw	ra,4(sp)
1001002c:	dc000017 	ldw	r16,0(sp)
10010030:	dec00204 	addi	sp,sp,8
10010034:	f800283a 	ret
10010038:	380b883a 	mov	r5,r7
1001003c:	003ff306 	br	1001000c <_ZNSsC1ERKSsjjRKSaIcE+0x28>
10010040:	014400b4 	movhi	r5,4098
10010044:	010400b4 	movhi	r4,4098
10010048:	100f883a 	mov	r7,r2
1001004c:	29564304 	addi	r5,r5,22796
10010050:	2115dd04 	addi	r4,r4,22388
10010054:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10010058 <_ZNSsC1IPcEET_S1_RKSaIcE>:
10010058:	defffe04 	addi	sp,sp,-8
1001005c:	2805883a 	mov	r2,r5
10010060:	dc000015 	stw	r16,0(sp)
10010064:	300b883a 	mov	r5,r6
10010068:	2021883a 	mov	r16,r4
1001006c:	380d883a 	mov	r6,r7
10010070:	1009883a 	mov	r4,r2
10010074:	000f883a 	mov	r7,zero
10010078:	dfc00115 	stw	ra,4(sp)
1001007c:	000fe940 	call	1000fe94 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010080:	80800015 	stw	r2,0(r16)
10010084:	dfc00117 	ldw	ra,4(sp)
10010088:	dc000017 	ldw	r16,0(sp)
1001008c:	dec00204 	addi	sp,sp,8
10010090:	f800283a 	ret

10010094 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>:
10010094:	21400226 	beq	r4,r5,100100a0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0xc>
10010098:	20000426 	beq	r4,zero,100100ac <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x18>
1001009c:	000e3201 	jmpi	1000e320 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
100100a0:	008400f4 	movhi	r2,4099
100100a4:	10aa8104 	addi	r2,r2,-22012
100100a8:	f800283a 	ret
100100ac:	010400b4 	movhi	r4,4098
100100b0:	deffff04 	addi	sp,sp,-4
100100b4:	21163804 	addi	r4,r4,22752
100100b8:	dfc00015 	stw	ra,0(sp)
100100bc:	0009de80 	call	10009de8 <_ZSt19__throw_logic_errorPKc>

100100c0 <_ZNSsC1EPKcjRKSaIcE>:
100100c0:	defffe04 	addi	sp,sp,-8
100100c4:	2805883a 	mov	r2,r5
100100c8:	dc000015 	stw	r16,0(sp)
100100cc:	298b883a 	add	r5,r5,r6
100100d0:	2021883a 	mov	r16,r4
100100d4:	380d883a 	mov	r6,r7
100100d8:	1009883a 	mov	r4,r2
100100dc:	000f883a 	mov	r7,zero
100100e0:	dfc00115 	stw	ra,4(sp)
100100e4:	00100940 	call	10010094 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
100100e8:	80800015 	stw	r2,0(r16)
100100ec:	dfc00117 	ldw	ra,4(sp)
100100f0:	dc000017 	ldw	r16,0(sp)
100100f4:	dec00204 	addi	sp,sp,8
100100f8:	f800283a 	ret

100100fc <_ZNSs7replaceEjjPKcj>:
100100fc:	00c400b4 	movhi	r3,4098
10010100:	deffe904 	addi	sp,sp,-92
10010104:	18d16384 	addi	r3,r3,17806
10010108:	d8c00d15 	stw	r3,52(sp)
1001010c:	d8c01504 	addi	r3,sp,84
10010110:	d8c00e15 	stw	r3,56(sp)
10010114:	02040074 	movhi	r8,4097
10010118:	d8c00604 	addi	r3,sp,24
1001011c:	00840074 	movhi	r2,4097
10010120:	1080dd04 	addi	r2,r2,884
10010124:	42226504 	addi	r8,r8,-30316
10010128:	d9000315 	stw	r4,12(sp)
1001012c:	1809883a 	mov	r4,r3
10010130:	d8800f15 	stw	r2,60(sp)
10010134:	d9c00415 	stw	r7,16(sp)
10010138:	dfc01615 	stw	ra,88(sp)
1001013c:	df001515 	stw	fp,84(sp)
10010140:	da000c15 	stw	r8,48(sp)
10010144:	dec01015 	stw	sp,64(sp)
10010148:	d9400115 	stw	r5,4(sp)
1001014c:	d9800515 	stw	r6,20(sp)
10010150:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10010154:	d8800317 	ldw	r2,12(sp)
10010158:	10c00017 	ldw	r3,0(r2)
1001015c:	d8800117 	ldw	r2,4(sp)
10010160:	19fffd17 	ldw	r7,-12(r3)
10010164:	38807b36 	bltu	r7,r2,10010354 <_ZNSs7replaceEjjPKcj+0x258>
10010168:	d8800117 	ldw	r2,4(sp)
1001016c:	d9000517 	ldw	r4,20(sp)
10010170:	3885c83a 	sub	r2,r7,r2
10010174:	d8800215 	stw	r2,8(sp)
10010178:	20801a36 	bltu	r4,r2,100101e4 <_ZNSs7replaceEjjPKcj+0xe8>
1001017c:	d9000217 	ldw	r4,8(sp)
10010180:	00900034 	movhi	r2,16384
10010184:	10bfff04 	addi	r2,r2,-4
10010188:	11c5c83a 	sub	r2,r2,r7
1001018c:	1105883a 	add	r2,r2,r4
10010190:	d9001717 	ldw	r4,92(sp)
10010194:	11006a36 	bltu	r2,r4,10010340 <_ZNSs7replaceEjjPKcj+0x244>
10010198:	d9000417 	ldw	r4,16(sp)
1001019c:	20c0132e 	bgeu	r4,r3,100101ec <_ZNSs7replaceEjjPKcj+0xf0>
100101a0:	d8801717 	ldw	r2,92(sp)
100101a4:	d9c00417 	ldw	r7,16(sp)
100101a8:	d9800217 	ldw	r6,8(sp)
100101ac:	d9400117 	ldw	r5,4(sp)
100101b0:	d9000317 	ldw	r4,12(sp)
100101b4:	d8800015 	stw	r2,0(sp)
100101b8:	00bfffc4 	movi	r2,-1
100101bc:	d8800715 	stw	r2,28(sp)
100101c0:	000ecb40 	call	1000ecb4 <_ZNSs15_M_replace_safeEjjPKcj>
100101c4:	d8800115 	stw	r2,4(sp)
100101c8:	d9000604 	addi	r4,sp,24
100101cc:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
100101d0:	d8800117 	ldw	r2,4(sp)
100101d4:	dfc01617 	ldw	ra,88(sp)
100101d8:	df001517 	ldw	fp,84(sp)
100101dc:	dec01704 	addi	sp,sp,92
100101e0:	f800283a 	ret
100101e4:	d9000215 	stw	r4,8(sp)
100101e8:	003fe406 	br	1001017c <_ZNSs7replaceEjjPKcj+0x80>
100101ec:	19cf883a 	add	r7,r3,r7
100101f0:	393feb36 	bltu	r7,r4,100101a0 <_ZNSs7replaceEjjPKcj+0xa4>
100101f4:	18bfff17 	ldw	r2,-4(r3)
100101f8:	00bfe916 	blt	zero,r2,100101a0 <_ZNSs7replaceEjjPKcj+0xa4>
100101fc:	d8801717 	ldw	r2,92(sp)
10010200:	2085883a 	add	r2,r4,r2
10010204:	d9000117 	ldw	r4,4(sp)
10010208:	1909883a 	add	r4,r3,r4
1001020c:	2080402e 	bgeu	r4,r2,10010310 <_ZNSs7replaceEjjPKcj+0x214>
10010210:	d8800117 	ldw	r2,4(sp)
10010214:	d9000217 	ldw	r4,8(sp)
10010218:	d9400417 	ldw	r5,16(sp)
1001021c:	1105883a 	add	r2,r2,r4
10010220:	1885883a 	add	r2,r3,r2
10010224:	28801e36 	bltu	r5,r2,100102a0 <_ZNSs7replaceEjjPKcj+0x1a4>
10010228:	d8800417 	ldw	r2,16(sp)
1001022c:	10c7c83a 	sub	r3,r2,r3
10010230:	d8801717 	ldw	r2,92(sp)
10010234:	1887883a 	add	r3,r3,r2
10010238:	d8800217 	ldw	r2,8(sp)
1001023c:	1885c83a 	sub	r2,r3,r2
10010240:	d8800415 	stw	r2,16(sp)
10010244:	d9400117 	ldw	r5,4(sp)
10010248:	d9000317 	ldw	r4,12(sp)
1001024c:	d9c01717 	ldw	r7,92(sp)
10010250:	d9800217 	ldw	r6,8(sp)
10010254:	00bfffc4 	movi	r2,-1
10010258:	d8800715 	stw	r2,28(sp)
1001025c:	000e4900 	call	1000e490 <_ZNSs9_M_mutateEjjj>
10010260:	d8800317 	ldw	r2,12(sp)
10010264:	d8c00117 	ldw	r3,4(sp)
10010268:	11400017 	ldw	r5,0(r2)
1001026c:	d8801717 	ldw	r2,92(sp)
10010270:	28c9883a 	add	r4,r5,r3
10010274:	d8c00417 	ldw	r3,16(sp)
10010278:	10800058 	cmpnei	r2,r2,1
1001027c:	28cb883a 	add	r5,r5,r3
10010280:	10002726 	beq	r2,zero,10010320 <_ZNSs7replaceEjjPKcj+0x224>
10010284:	d8801717 	ldw	r2,92(sp)
10010288:	10002a26 	beq	r2,zero,10010334 <_ZNSs7replaceEjjPKcj+0x238>
1001028c:	100d883a 	mov	r6,r2
10010290:	00156f00 	call	100156f0 <memcpy>
10010294:	d8800317 	ldw	r2,12(sp)
10010298:	d8800115 	stw	r2,4(sp)
1001029c:	003fca06 	br	100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
100102a0:	d9801717 	ldw	r6,92(sp)
100102a4:	00bfffc4 	movi	r2,-1
100102a8:	d9c013c4 	addi	r7,sp,79
100102ac:	d9001404 	addi	r4,sp,80
100102b0:	d8800715 	stw	r2,28(sp)
100102b4:	00100c00 	call	100100c0 <_ZNSsC1EPKcjRKSaIcE>
100102b8:	d8c01717 	ldw	r3,92(sp)
100102bc:	d9c01417 	ldw	r7,80(sp)
100102c0:	d9800217 	ldw	r6,8(sp)
100102c4:	d9400117 	ldw	r5,4(sp)
100102c8:	d9000317 	ldw	r4,12(sp)
100102cc:	00800044 	movi	r2,1
100102d0:	d8c00015 	stw	r3,0(sp)
100102d4:	d8800715 	stw	r2,28(sp)
100102d8:	000ecb40 	call	1000ecb4 <_ZNSs15_M_replace_safeEjjPKcj>
100102dc:	d8c01417 	ldw	r3,80(sp)
100102e0:	d8800115 	stw	r2,4(sp)
100102e4:	008400f4 	movhi	r2,4099
100102e8:	10aa7e04 	addi	r2,r2,-22024
100102ec:	193ffd04 	addi	r4,r3,-12
100102f0:	20bfb526 	beq	r4,r2,100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
100102f4:	18bfff17 	ldw	r2,-4(r3)
100102f8:	117fffc4 	addi	r5,r2,-1
100102fc:	197fff15 	stw	r5,-4(r3)
10010300:	00bfb116 	blt	zero,r2,100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
10010304:	d94013c4 	addi	r5,sp,79
10010308:	000e3bc0 	call	1000e3bc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1001030c:	003fae06 	br	100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
10010310:	d8800417 	ldw	r2,16(sp)
10010314:	10c5c83a 	sub	r2,r2,r3
10010318:	d8800415 	stw	r2,16(sp)
1001031c:	003fc906 	br	10010244 <_ZNSs7replaceEjjPKcj+0x148>
10010320:	28800003 	ldbu	r2,0(r5)
10010324:	d8c00317 	ldw	r3,12(sp)
10010328:	20800005 	stb	r2,0(r4)
1001032c:	d8c00115 	stw	r3,4(sp)
10010330:	003fa506 	br	100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
10010334:	d8800317 	ldw	r2,12(sp)
10010338:	d8800115 	stw	r2,4(sp)
1001033c:	003fa206 	br	100101c8 <_ZNSs7replaceEjjPKcj+0xcc>
10010340:	010400b4 	movhi	r4,4098
10010344:	00bfffc4 	movi	r2,-1
10010348:	21162004 	addi	r4,r4,22656
1001034c:	d8800715 	stw	r2,28(sp)
10010350:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>
10010354:	d9800117 	ldw	r6,4(sp)
10010358:	014400b4 	movhi	r5,4098
1001035c:	010400b4 	movhi	r4,4098
10010360:	00bfffc4 	movi	r2,-1
10010364:	29562004 	addi	r5,r5,22656
10010368:	2115dd04 	addi	r4,r4,22388
1001036c:	d8800715 	stw	r2,28(sp)
10010370:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
10010374:	d9001417 	ldw	r4,80(sp)
10010378:	d8c00817 	ldw	r3,32(sp)
1001037c:	008400f4 	movhi	r2,4099
10010380:	10aa7e04 	addi	r2,r2,-22024
10010384:	213ffd04 	addi	r4,r4,-12
10010388:	d8c00115 	stw	r3,4(sp)
1001038c:	20800226 	beq	r4,r2,10010398 <_ZNSs7replaceEjjPKcj+0x29c>
10010390:	d94013c4 	addi	r5,sp,79
10010394:	000e3c00 	call	1000e3c0 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
10010398:	d9000117 	ldw	r4,4(sp)
1001039c:	00bfffc4 	movi	r2,-1
100103a0:	d8800715 	stw	r2,28(sp)
100103a4:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

100103a8 <_ZNSs7replaceEjjRKSs>:
100103a8:	39c00017 	ldw	r7,0(r7)
100103ac:	defffe04 	addi	sp,sp,-8
100103b0:	dfc00115 	stw	ra,4(sp)
100103b4:	38bffd17 	ldw	r2,-12(r7)
100103b8:	d8800015 	stw	r2,0(sp)
100103bc:	00100fc0 	call	100100fc <_ZNSs7replaceEjjPKcj>
100103c0:	dfc00117 	ldw	ra,4(sp)
100103c4:	dec00204 	addi	sp,sp,8
100103c8:	f800283a 	ret

100103cc <_ZNSs7replaceEjjRKSsjj>:
100103cc:	39c00017 	ldw	r7,0(r7)
100103d0:	deffff04 	addi	sp,sp,-4
100103d4:	d8c00117 	ldw	r3,4(sp)
100103d8:	38bffd17 	ldw	r2,-12(r7)
100103dc:	dfc00015 	stw	ra,0(sp)
100103e0:	da000217 	ldw	r8,8(sp)
100103e4:	10c00c36 	bltu	r2,r3,10010418 <_ZNSs7replaceEjjRKSsjj+0x4c>
100103e8:	10c5c83a 	sub	r2,r2,r3
100103ec:	38cf883a 	add	r7,r7,r3
100103f0:	40800436 	bltu	r8,r2,10010404 <_ZNSs7replaceEjjRKSsjj+0x38>
100103f4:	d8800115 	stw	r2,4(sp)
100103f8:	dfc00017 	ldw	ra,0(sp)
100103fc:	dec00104 	addi	sp,sp,4
10010400:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>
10010404:	4005883a 	mov	r2,r8
10010408:	d8800115 	stw	r2,4(sp)
1001040c:	dfc00017 	ldw	ra,0(sp)
10010410:	dec00104 	addi	sp,sp,4
10010414:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>
10010418:	014400b4 	movhi	r5,4098
1001041c:	010400b4 	movhi	r4,4098
10010420:	100f883a 	mov	r7,r2
10010424:	180d883a 	mov	r6,r3
10010428:	29562004 	addi	r5,r5,22656
1001042c:	2115dd04 	addi	r4,r4,22388
10010430:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10010434 <_ZNSs7replaceEjjPKc>:
10010434:	defffa04 	addi	sp,sp,-24
10010438:	dc000415 	stw	r16,16(sp)
1001043c:	2021883a 	mov	r16,r4
10010440:	3809883a 	mov	r4,r7
10010444:	dfc00515 	stw	ra,20(sp)
10010448:	d9c00315 	stw	r7,12(sp)
1001044c:	d9400215 	stw	r5,8(sp)
10010450:	d9800115 	stw	r6,4(sp)
10010454:	00163ac0 	call	100163ac <strlen>
10010458:	d9c00317 	ldw	r7,12(sp)
1001045c:	d9800117 	ldw	r6,4(sp)
10010460:	d9400217 	ldw	r5,8(sp)
10010464:	d8800015 	stw	r2,0(sp)
10010468:	8009883a 	mov	r4,r16
1001046c:	00100fc0 	call	100100fc <_ZNSs7replaceEjjPKcj>
10010470:	dfc00517 	ldw	ra,20(sp)
10010474:	dc000417 	ldw	r16,16(sp)
10010478:	dec00604 	addi	sp,sp,24
1001047c:	f800283a 	ret

10010480 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj>:
10010480:	20800017 	ldw	r2,0(r4)
10010484:	314dc83a 	sub	r6,r6,r5
10010488:	288bc83a 	sub	r5,r5,r2
1001048c:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

10010490 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs>:
10010490:	39c00017 	ldw	r7,0(r7)
10010494:	20800017 	ldw	r2,0(r4)
10010498:	defffe04 	addi	sp,sp,-8
1001049c:	38fffd17 	ldw	r3,-12(r7)
100104a0:	314dc83a 	sub	r6,r6,r5
100104a4:	288bc83a 	sub	r5,r5,r2
100104a8:	d8c00015 	stw	r3,0(sp)
100104ac:	dfc00115 	stw	ra,4(sp)
100104b0:	00100fc0 	call	100100fc <_ZNSs7replaceEjjPKcj>
100104b4:	dfc00117 	ldw	ra,4(sp)
100104b8:	dec00204 	addi	sp,sp,8
100104bc:	f800283a 	ret

100104c0 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc>:
100104c0:	defffa04 	addi	sp,sp,-24
100104c4:	dc000215 	stw	r16,8(sp)
100104c8:	2021883a 	mov	r16,r4
100104cc:	3809883a 	mov	r4,r7
100104d0:	dfc00515 	stw	ra,20(sp)
100104d4:	dc800415 	stw	r18,16(sp)
100104d8:	dc400315 	stw	r17,12(sp)
100104dc:	d9c00115 	stw	r7,4(sp)
100104e0:	2823883a 	mov	r17,r5
100104e4:	3025883a 	mov	r18,r6
100104e8:	00163ac0 	call	100163ac <strlen>
100104ec:	81400017 	ldw	r5,0(r16)
100104f0:	d9c00117 	ldw	r7,4(sp)
100104f4:	d8800015 	stw	r2,0(sp)
100104f8:	944dc83a 	sub	r6,r18,r17
100104fc:	894bc83a 	sub	r5,r17,r5
10010500:	8009883a 	mov	r4,r16
10010504:	00100fc0 	call	100100fc <_ZNSs7replaceEjjPKcj>
10010508:	dfc00517 	ldw	ra,20(sp)
1001050c:	dc800417 	ldw	r18,16(sp)
10010510:	dc400317 	ldw	r17,12(sp)
10010514:	dc000217 	ldw	r16,8(sp)
10010518:	dec00604 	addi	sp,sp,24
1001051c:	f800283a 	ret

10010520 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_>:
10010520:	d8800017 	ldw	r2,0(sp)
10010524:	20c00017 	ldw	r3,0(r4)
10010528:	314dc83a 	sub	r6,r6,r5
1001052c:	11c5c83a 	sub	r2,r2,r7
10010530:	28cbc83a 	sub	r5,r5,r3
10010534:	d8800015 	stw	r2,0(sp)
10010538:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

1001053c <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_>:
1001053c:	d8800017 	ldw	r2,0(sp)
10010540:	20c00017 	ldw	r3,0(r4)
10010544:	314dc83a 	sub	r6,r6,r5
10010548:	11c5c83a 	sub	r2,r2,r7
1001054c:	28cbc83a 	sub	r5,r5,r3
10010550:	d8800015 	stw	r2,0(sp)
10010554:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

10010558 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE>:
10010558:	20800017 	ldw	r2,0(r4)
1001055c:	deffff04 	addi	sp,sp,-4
10010560:	314dc83a 	sub	r6,r6,r5
10010564:	288bc83a 	sub	r5,r5,r2
10010568:	d9c00015 	stw	r7,0(sp)
1001056c:	dec00104 	addi	sp,sp,4
10010570:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

10010574 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_>:
10010574:	d8800017 	ldw	r2,0(sp)
10010578:	20c00017 	ldw	r3,0(r4)
1001057c:	314dc83a 	sub	r6,r6,r5
10010580:	11c5c83a 	sub	r2,r2,r7
10010584:	28cbc83a 	sub	r5,r5,r3
10010588:	d8800015 	stw	r2,0(sp)
1001058c:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

10010590 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_>:
10010590:	d8800017 	ldw	r2,0(sp)
10010594:	20c00017 	ldw	r3,0(r4)
10010598:	314dc83a 	sub	r6,r6,r5
1001059c:	11c5c83a 	sub	r2,r2,r7
100105a0:	28cbc83a 	sub	r5,r5,r3
100105a4:	d8800015 	stw	r2,0(sp)
100105a8:	00100fc1 	jmpi	100100fc <_ZNSs7replaceEjjPKcj>

100105ac <_ZNSsC1EPKcRKSaIcE>:
100105ac:	defffc04 	addi	sp,sp,-16
100105b0:	dc400215 	stw	r17,8(sp)
100105b4:	dc000115 	stw	r16,4(sp)
100105b8:	dfc00315 	stw	ra,12(sp)
100105bc:	2821883a 	mov	r16,r5
100105c0:	2023883a 	mov	r17,r4
100105c4:	28000e26 	beq	r5,zero,10010600 <_ZNSsC1EPKcRKSaIcE+0x54>
100105c8:	2809883a 	mov	r4,r5
100105cc:	d9800015 	stw	r6,0(sp)
100105d0:	00163ac0 	call	100163ac <strlen>
100105d4:	d9800017 	ldw	r6,0(sp)
100105d8:	808b883a 	add	r5,r16,r2
100105dc:	000f883a 	mov	r7,zero
100105e0:	8009883a 	mov	r4,r16
100105e4:	00100940 	call	10010094 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
100105e8:	88800015 	stw	r2,0(r17)
100105ec:	dfc00317 	ldw	ra,12(sp)
100105f0:	dc400217 	ldw	r17,8(sp)
100105f4:	dc000117 	ldw	r16,4(sp)
100105f8:	dec00404 	addi	sp,sp,16
100105fc:	f800283a 	ret
10010600:	017fffc4 	movi	r5,-1
10010604:	003ff506 	br	100105dc <_ZNSsC1EPKcRKSaIcE+0x30>

10010608 <_ZNSsC1ESt16initializer_listIcERKSaIcE>:
10010608:	defffe04 	addi	sp,sp,-8
1001060c:	2805883a 	mov	r2,r5
10010610:	dc000015 	stw	r16,0(sp)
10010614:	298b883a 	add	r5,r5,r6
10010618:	2021883a 	mov	r16,r4
1001061c:	380d883a 	mov	r6,r7
10010620:	1009883a 	mov	r4,r2
10010624:	000f883a 	mov	r7,zero
10010628:	dfc00115 	stw	ra,4(sp)
1001062c:	00100940 	call	10010094 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10010630:	80800015 	stw	r2,0(r16)
10010634:	dfc00117 	ldw	ra,4(sp)
10010638:	dc000017 	ldw	r16,0(sp)
1001063c:	dec00204 	addi	sp,sp,8
10010640:	f800283a 	ret

10010644 <_ZNSsC1IPKcEET_S2_RKSaIcE>:
10010644:	defffe04 	addi	sp,sp,-8
10010648:	2805883a 	mov	r2,r5
1001064c:	dc000015 	stw	r16,0(sp)
10010650:	300b883a 	mov	r5,r6
10010654:	2021883a 	mov	r16,r4
10010658:	380d883a 	mov	r6,r7
1001065c:	1009883a 	mov	r4,r2
10010660:	000f883a 	mov	r7,zero
10010664:	dfc00115 	stw	ra,4(sp)
10010668:	00100940 	call	10010094 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
1001066c:	80800015 	stw	r2,0(r16)
10010670:	dfc00117 	ldw	ra,4(sp)
10010674:	dc000017 	ldw	r16,0(sp)
10010678:	dec00204 	addi	sp,sp,8
1001067c:	f800283a 	ret

10010680 <_ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_>:
10010680:	20800017 	ldw	r2,0(r4)
10010684:	28c00017 	ldw	r3,0(r5)
10010688:	10c5003a 	cmpeq	r2,r2,r3
1001068c:	f800283a 	ret

10010690 <_ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_>:
10010690:	20800017 	ldw	r2,0(r4)
10010694:	28c00017 	ldw	r3,0(r5)
10010698:	10c5003a 	cmpeq	r2,r2,r3
1001069c:	f800283a 	ret

100106a0 <_ZNSt13random_device7_M_initERKSs>:
100106a0:	defffc04 	addi	sp,sp,-16
100106a4:	dc000015 	stw	r16,0(sp)
100106a8:	2821883a 	mov	r16,r5
100106ac:	014400b4 	movhi	r5,4098
100106b0:	dc800215 	stw	r18,8(sp)
100106b4:	29565404 	addi	r5,r5,22864
100106b8:	2025883a 	mov	r18,r4
100106bc:	8009883a 	mov	r4,r16
100106c0:	dc400115 	stw	r17,4(sp)
100106c4:	dfc00315 	stw	ra,12(sp)
100106c8:	84400017 	ldw	r17,0(r16)
100106cc:	000df440 	call	1000df44 <_ZNKSs7compareEPKc>
100106d0:	10001126 	beq	r2,zero,10010718 <_ZNSt13random_device7_M_initERKSs+0x78>
100106d4:	014400b4 	movhi	r5,4098
100106d8:	29565004 	addi	r5,r5,22848
100106dc:	8009883a 	mov	r4,r16
100106e0:	000df440 	call	1000df44 <_ZNKSs7compareEPKc>
100106e4:	10000f1e 	bne	r2,zero,10010724 <_ZNSt13random_device7_M_initERKSs+0x84>
100106e8:	014400b4 	movhi	r5,4098
100106ec:	29566604 	addi	r5,r5,22936
100106f0:	8809883a 	mov	r4,r17
100106f4:	00146940 	call	10014694 <fopen>
100106f8:	90800015 	stw	r2,0(r18)
100106fc:	10000e26 	beq	r2,zero,10010738 <_ZNSt13random_device7_M_initERKSs+0x98>
10010700:	dfc00317 	ldw	ra,12(sp)
10010704:	dc800217 	ldw	r18,8(sp)
10010708:	dc400117 	ldw	r17,4(sp)
1001070c:	dc000017 	ldw	r16,0(sp)
10010710:	dec00404 	addi	sp,sp,16
10010714:	f800283a 	ret
10010718:	044400b4 	movhi	r17,4098
1001071c:	8c565004 	addi	r17,r17,22848
10010720:	003ff106 	br	100106e8 <_ZNSt13random_device7_M_initERKSs+0x48>
10010724:	014400b4 	movhi	r5,4098
10010728:	29565604 	addi	r5,r5,22872
1001072c:	8009883a 	mov	r4,r16
10010730:	000df440 	call	1000df44 <_ZNKSs7compareEPKc>
10010734:	103fec26 	beq	r2,zero,100106e8 <_ZNSt13random_device7_M_initERKSs+0x48>
10010738:	010400b4 	movhi	r4,4098
1001073c:	21165904 	addi	r4,r4,22884
10010740:	000a2380 	call	1000a238 <_ZSt21__throw_runtime_errorPKc>

10010744 <_ZNSt13random_device14_M_init_pretr1ERKSs>:
10010744:	defffc04 	addi	sp,sp,-16
10010748:	dc400215 	stw	r17,8(sp)
1001074c:	2823883a 	mov	r17,r5
10010750:	014400b4 	movhi	r5,4098
10010754:	dc000115 	stw	r16,4(sp)
10010758:	29566704 	addi	r5,r5,22940
1001075c:	2021883a 	mov	r16,r4
10010760:	8809883a 	mov	r4,r17
10010764:	dfc00315 	stw	ra,12(sp)
10010768:	000df440 	call	1000df44 <_ZNKSs7compareEPKc>
1001076c:	1000161e 	bne	r2,zero,100107c8 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x84>
10010770:	01055c44 	movi	r4,5489
10010774:	019b0234 	movhi	r6,27656
10010778:	81000015 	stw	r4,0(r16)
1001077c:	81400104 	addi	r5,r16,4
10010780:	00c00044 	movi	r3,1
10010784:	31a25944 	addi	r6,r6,-30363
10010788:	00000106 	br	10010790 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x4c>
1001078c:	29400104 	addi	r5,r5,4
10010790:	2004d7ba 	srli	r2,r4,30
10010794:	1104f03a 	xor	r2,r2,r4
10010798:	1185383a 	mul	r2,r2,r6
1001079c:	10c9883a 	add	r4,r2,r3
100107a0:	18c00044 	addi	r3,r3,1
100107a4:	29000015 	stw	r4,0(r5)
100107a8:	18809c20 	cmpeqi	r2,r3,624
100107ac:	103ff726 	beq	r2,zero,1001078c <_ZNSt13random_device14_M_init_pretr1ERKSs+0x48>
100107b0:	80c27015 	stw	r3,2496(r16)
100107b4:	dfc00317 	ldw	ra,12(sp)
100107b8:	dc400217 	ldw	r17,8(sp)
100107bc:	dc000117 	ldw	r16,4(sp)
100107c0:	dec00404 	addi	sp,sp,16
100107c4:	f800283a 	ret
100107c8:	8c400017 	ldw	r17,0(r17)
100107cc:	000d883a 	mov	r6,zero
100107d0:	d80b883a 	mov	r5,sp
100107d4:	8809883a 	mov	r4,r17
100107d8:	00166b00 	call	100166b0 <strtoul>
100107dc:	1009883a 	mov	r4,r2
100107e0:	88800007 	ldb	r2,0(r17)
100107e4:	10000326 	beq	r2,zero,100107f4 <_ZNSt13random_device14_M_init_pretr1ERKSs+0xb0>
100107e8:	d8800017 	ldw	r2,0(sp)
100107ec:	10800007 	ldb	r2,0(r2)
100107f0:	103fe026 	beq	r2,zero,10010774 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x30>
100107f4:	010400b4 	movhi	r4,4098
100107f8:	21165904 	addi	r4,r4,22884
100107fc:	000a2380 	call	1000a238 <_ZSt21__throw_runtime_errorPKc>

10010800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
10010800:	21400015 	stw	r5,0(r4)
10010804:	f800283a 	ret

10010808 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj>:
10010808:	21400115 	stw	r5,4(r4)
1001080c:	f800283a 	ret

10010810 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
10010810:	20800017 	ldw	r2,0(r4)
10010814:	f800283a 	ret

10010818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10010818:	20800204 	addi	r2,r4,8
1001081c:	f800283a 	ret

10010820 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10010820:	20800204 	addi	r2,r4,8
10010824:	f800283a 	ret

10010828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
10010828:	21400215 	stw	r5,8(r4)
1001082c:	f800283a 	ret

10010830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
10010830:	20800017 	ldw	r2,0(r4)
10010834:	21400115 	stw	r5,4(r4)
10010838:	1145883a 	add	r2,r2,r5
1001083c:	10000005 	stb	zero,0(r2)
10010840:	f800283a 	ret

10010844 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
10010844:	20800017 	ldw	r2,0(r4)
10010848:	21000204 	addi	r4,r4,8
1001084c:	1105003a 	cmpeq	r2,r2,r4
10010850:	f800283a 	ret

10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
10010854:	29000017 	ldw	r4,0(r5)
10010858:	20000e16 	blt	r4,zero,10010894 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>
1001085c:	3100062e 	bgeu	r6,r4,10010878 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
10010860:	318d883a 	add	r6,r6,r6
10010864:	2180042e 	bgeu	r4,r6,10010878 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
10010868:	30000516 	blt	r6,zero,10010880 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
1001086c:	29800015 	stw	r6,0(r5)
10010870:	31000044 	addi	r4,r6,1
10010874:	0007ea81 	jmpi	10007ea8 <_Znwj>
10010878:	21000044 	addi	r4,r4,1
1001087c:	0007ea81 	jmpi	10007ea8 <_Znwj>
10010880:	00a00034 	movhi	r2,32768
10010884:	10bfffc4 	addi	r2,r2,-1
10010888:	28800015 	stw	r2,0(r5)
1001088c:	01200034 	movhi	r4,32768
10010890:	0007ea81 	jmpi	10007ea8 <_Znwj>
10010894:	010400b4 	movhi	r4,4098
10010898:	deffff04 	addi	sp,sp,-4
1001089c:	21166904 	addi	r4,r4,22948
100108a0:	dfc00015 	stw	ra,0(sp)
100108a4:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100108a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
100108a8:	20c00017 	ldw	r3,0(r4)
100108ac:	20800204 	addi	r2,r4,8
100108b0:	18800226 	beq	r3,r2,100108bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x14>
100108b4:	1809883a 	mov	r4,r3
100108b8:	00083fc1 	jmpi	100083fc <_ZdlPv>
100108bc:	f800283a 	ret

100108c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj>:
100108c0:	21000017 	ldw	r4,0(r4)
100108c4:	00083fc1 	jmpi	100083fc <_ZdlPv>

100108c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>:
100108c8:	defffc04 	addi	sp,sp,-16
100108cc:	dc400215 	stw	r17,8(sp)
100108d0:	dc000115 	stw	r16,4(sp)
100108d4:	dfc00315 	stw	ra,12(sp)
100108d8:	d9400015 	stw	r5,0(sp)
100108dc:	28800428 	cmpgeui	r2,r5,16
100108e0:	2021883a 	mov	r16,r4
100108e4:	3023883a 	mov	r17,r6
100108e8:	1000151e 	bne	r2,zero,10010940 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x78>
100108ec:	20800017 	ldw	r2,0(r4)
100108f0:	2807883a 	mov	r3,r5
100108f4:	18000a26 	beq	r3,zero,10010920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>
100108f8:	19000058 	cmpnei	r4,r3,1
100108fc:	20001726 	beq	r4,zero,1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x94>
10010900:	89403fcc 	andi	r5,r17,255
10010904:	2940201c 	xori	r5,r5,128
10010908:	180d883a 	mov	r6,r3
1001090c:	1009883a 	mov	r4,r2
10010910:	297fe004 	addi	r5,r5,-128
10010914:	001591c0 	call	1001591c <memset>
10010918:	d8c00017 	ldw	r3,0(sp)
1001091c:	80800017 	ldw	r2,0(r16)
10010920:	80c00115 	stw	r3,4(r16)
10010924:	10c5883a 	add	r2,r2,r3
10010928:	10000005 	stb	zero,0(r2)
1001092c:	dfc00317 	ldw	ra,12(sp)
10010930:	dc400217 	ldw	r17,8(sp)
10010934:	dc000117 	ldw	r16,4(sp)
10010938:	dec00404 	addi	sp,sp,16
1001093c:	f800283a 	ret
10010940:	000d883a 	mov	r6,zero
10010944:	d80b883a 	mov	r5,sp
10010948:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
1001094c:	d8c00017 	ldw	r3,0(sp)
10010950:	80800015 	stw	r2,0(r16)
10010954:	80c00215 	stw	r3,8(r16)
10010958:	003fe606 	br	100108f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x2c>
1001095c:	14400005 	stb	r17,0(r2)
10010960:	d8c00017 	ldw	r3,0(sp)
10010964:	80800017 	ldw	r2,0(r16)
10010968:	003fed06 	br	10010920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>

1001096c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc>:
1001096c:	31803fcc 	andi	r6,r6,255
10010970:	3180201c 	xori	r6,r6,128
10010974:	31bfe004 	addi	r6,r6,-128
10010978:	00108c81 	jmpi	100108c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

1001097c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
1001097c:	2005883a 	mov	r2,r4
10010980:	f800283a 	ret

10010984 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
10010984:	2005883a 	mov	r2,r4
10010988:	f800283a 	ret

1001098c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
1001098c:	21c00117 	ldw	r7,4(r4)
10010990:	2805883a 	mov	r2,r5
10010994:	39400136 	bltu	r7,r5,1001099c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x10>
10010998:	f800283a 	ret
1001099c:	010400b4 	movhi	r4,4098
100109a0:	deffff04 	addi	sp,sp,-4
100109a4:	300b883a 	mov	r5,r6
100109a8:	2115dd04 	addi	r4,r4,22388
100109ac:	100d883a 	mov	r6,r2
100109b0:	dfc00015 	stw	ra,0(sp)
100109b4:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100109b8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
100109b8:	00a00034 	movhi	r2,32768
100109bc:	20c00117 	ldw	r3,4(r4)
100109c0:	10bfffc4 	addi	r2,r2,-1
100109c4:	288b883a 	add	r5,r5,r2
100109c8:	28cbc83a 	sub	r5,r5,r3
100109cc:	29800136 	bltu	r5,r6,100109d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x1c>
100109d0:	f800283a 	ret
100109d4:	deffff04 	addi	sp,sp,-4
100109d8:	3809883a 	mov	r4,r7
100109dc:	dfc00015 	stw	ra,0(sp)
100109e0:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100109e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj>:
100109e4:	20800117 	ldw	r2,4(r4)
100109e8:	1145c83a 	sub	r2,r2,r5
100109ec:	3080012e 	bgeu	r6,r2,100109f4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj+0x10>
100109f0:	3005883a 	mov	r2,r6
100109f4:	f800283a 	ret

100109f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
100109f8:	20800017 	ldw	r2,0(r4)
100109fc:	28800436 	bltu	r5,r2,10010a10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x18>
10010a00:	20c00117 	ldw	r3,4(r4)
10010a04:	10c5883a 	add	r2,r2,r3
10010a08:	1145803a 	cmpltu	r2,r2,r5
10010a0c:	f800283a 	ret
10010a10:	00800044 	movi	r2,1
10010a14:	f800283a 	ret

10010a18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
10010a18:	30c00058 	cmpnei	r3,r6,1
10010a1c:	18000326 	beq	r3,zero,10010a2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x14>
10010a20:	3000011e 	bne	r6,zero,10010a28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
10010a24:	f800283a 	ret
10010a28:	00156f01 	jmpi	100156f0 <memcpy>
10010a2c:	28800003 	ldbu	r2,0(r5)
10010a30:	20800005 	stb	r2,0(r4)
10010a34:	f800283a 	ret

10010a38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
10010a38:	30c00058 	cmpnei	r3,r6,1
10010a3c:	18000326 	beq	r3,zero,10010a4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x14>
10010a40:	3000011e 	bne	r6,zero,10010a48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x10>
10010a44:	f800283a 	ret
10010a48:	00157f01 	jmpi	100157f0 <memmove>
10010a4c:	28800003 	ldbu	r2,0(r5)
10010a50:	20800005 	stb	r2,0(r4)
10010a54:	f800283a 	ret

10010a58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>:
10010a58:	28800058 	cmpnei	r2,r5,1
10010a5c:	200f883a 	mov	r7,r4
10010a60:	3007883a 	mov	r3,r6
10010a64:	10000726 	beq	r2,zero,10010a84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x2c>
10010a68:	2800011e 	bne	r5,zero,10010a70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x18>
10010a6c:	f800283a 	ret
10010a70:	280d883a 	mov	r6,r5
10010a74:	19403fcc 	andi	r5,r3,255
10010a78:	2940201c 	xori	r5,r5,128
10010a7c:	297fe004 	addi	r5,r5,-128
10010a80:	001591c1 	jmpi	1001591c <memset>
10010a84:	39800005 	stb	r6,0(r7)
10010a88:	f800283a 	ret

10010a8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_>:
10010a8c:	314dc83a 	sub	r6,r6,r5
10010a90:	30c00058 	cmpnei	r3,r6,1
10010a94:	18000326 	beq	r3,zero,10010aa4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x18>
10010a98:	3000011e 	bne	r6,zero,10010aa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x14>
10010a9c:	f800283a 	ret
10010aa0:	00156f01 	jmpi	100156f0 <memcpy>
10010aa4:	28800003 	ldbu	r2,0(r5)
10010aa8:	20800005 	stb	r2,0(r4)
10010aac:	f800283a 	ret

10010ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_>:
10010ab0:	314dc83a 	sub	r6,r6,r5
10010ab4:	30c00058 	cmpnei	r3,r6,1
10010ab8:	18000326 	beq	r3,zero,10010ac8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x18>
10010abc:	3000011e 	bne	r6,zero,10010ac4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x14>
10010ac0:	f800283a 	ret
10010ac4:	00156f01 	jmpi	100156f0 <memcpy>
10010ac8:	28800003 	ldbu	r2,0(r5)
10010acc:	20800005 	stb	r2,0(r4)
10010ad0:	f800283a 	ret

10010ad4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
10010ad4:	314dc83a 	sub	r6,r6,r5
10010ad8:	30c00058 	cmpnei	r3,r6,1
10010adc:	18000326 	beq	r3,zero,10010aec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x18>
10010ae0:	3000011e 	bne	r6,zero,10010ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x14>
10010ae4:	f800283a 	ret
10010ae8:	00156f01 	jmpi	100156f0 <memcpy>
10010aec:	28800003 	ldbu	r2,0(r5)
10010af0:	20800005 	stb	r2,0(r4)
10010af4:	f800283a 	ret

10010af8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
10010af8:	314dc83a 	sub	r6,r6,r5
10010afc:	30c00058 	cmpnei	r3,r6,1
10010b00:	18000326 	beq	r3,zero,10010b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x18>
10010b04:	3000011e 	bne	r6,zero,10010b0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x14>
10010b08:	f800283a 	ret
10010b0c:	00156f01 	jmpi	100156f0 <memcpy>
10010b10:	28800003 	ldbu	r2,0(r5)
10010b14:	20800005 	stb	r2,0(r4)
10010b18:	f800283a 	ret

10010b1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj>:
10010b1c:	2145c83a 	sub	r2,r4,r5
10010b20:	f800283a 	ret

10010b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
10010b24:	21402e26 	beq	r4,r5,10010be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xbc>
10010b28:	defff904 	addi	sp,sp,-28
10010b2c:	dd000515 	stw	r20,20(sp)
10010b30:	dfc00615 	stw	ra,24(sp)
10010b34:	dcc00415 	stw	r19,16(sp)
10010b38:	dc800315 	stw	r18,12(sp)
10010b3c:	dc400215 	stw	r17,8(sp)
10010b40:	dc000115 	stw	r16,4(sp)
10010b44:	24400017 	ldw	r17,0(r4)
10010b48:	25000204 	addi	r20,r4,8
10010b4c:	2cc00117 	ldw	r19,4(r5)
10010b50:	a4402426 	beq	r20,r17,10010be4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc0>
10010b54:	21800217 	ldw	r6,8(r4)
10010b58:	2825883a 	mov	r18,r5
10010b5c:	2021883a 	mov	r16,r4
10010b60:	34c01336 	bltu	r6,r19,10010bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x8c>
10010b64:	98000726 	beq	r19,zero,10010b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
10010b68:	98800058 	cmpnei	r2,r19,1
10010b6c:	91400017 	ldw	r5,0(r18)
10010b70:	10001e26 	beq	r2,zero,10010bec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc8>
10010b74:	8809883a 	mov	r4,r17
10010b78:	980d883a 	mov	r6,r19
10010b7c:	00156f00 	call	100156f0 <memcpy>
10010b80:	84400017 	ldw	r17,0(r16)
10010b84:	84c00115 	stw	r19,4(r16)
10010b88:	8ce3883a 	add	r17,r17,r19
10010b8c:	88000005 	stb	zero,0(r17)
10010b90:	dfc00617 	ldw	ra,24(sp)
10010b94:	dd000517 	ldw	r20,20(sp)
10010b98:	dcc00417 	ldw	r19,16(sp)
10010b9c:	dc800317 	ldw	r18,12(sp)
10010ba0:	dc400217 	ldw	r17,8(sp)
10010ba4:	dc000117 	ldw	r16,4(sp)
10010ba8:	dec00704 	addi	sp,sp,28
10010bac:	f800283a 	ret
10010bb0:	d80b883a 	mov	r5,sp
10010bb4:	dcc00015 	stw	r19,0(sp)
10010bb8:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10010bbc:	81000017 	ldw	r4,0(r16)
10010bc0:	1023883a 	mov	r17,r2
10010bc4:	a1000126 	beq	r20,r4,10010bcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xa8>
10010bc8:	00083fc0 	call	100083fc <_ZdlPv>
10010bcc:	d8800017 	ldw	r2,0(sp)
10010bd0:	84400015 	stw	r17,0(r16)
10010bd4:	80800215 	stw	r2,8(r16)
10010bd8:	983fea26 	beq	r19,zero,10010b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
10010bdc:	003fe206 	br	10010b68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x44>
10010be0:	f800283a 	ret
10010be4:	018003c4 	movi	r6,15
10010be8:	003fdb06 	br	10010b58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
10010bec:	28800003 	ldbu	r2,0(r5)
10010bf0:	88800005 	stb	r2,0(r17)
10010bf4:	84400017 	ldw	r17,0(r16)
10010bf8:	003fe206 	br	10010b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>

10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
10010bfc:	defff604 	addi	sp,sp,-40
10010c00:	ddc00815 	stw	r23,32(sp)
10010c04:	dd400615 	stw	r21,24(sp)
10010c08:	dd000515 	stw	r20,20(sp)
10010c0c:	dcc00415 	stw	r19,16(sp)
10010c10:	dc400215 	stw	r17,8(sp)
10010c14:	dc000115 	stw	r16,4(sp)
10010c18:	dfc00915 	stw	ra,36(sp)
10010c1c:	dd800715 	stw	r22,28(sp)
10010c20:	dc800315 	stw	r18,12(sp)
10010c24:	dd400a17 	ldw	r21,40(sp)
10010c28:	24800117 	ldw	r18,4(r4)
10010c2c:	20c00017 	ldw	r3,0(r4)
10010c30:	a985c83a 	sub	r2,r21,r6
10010c34:	1485883a 	add	r2,r2,r18
10010c38:	29a7883a 	add	r19,r5,r6
10010c3c:	d8800015 	stw	r2,0(sp)
10010c40:	25000204 	addi	r20,r4,8
10010c44:	2021883a 	mov	r16,r4
10010c48:	2823883a 	mov	r17,r5
10010c4c:	382f883a 	mov	r23,r7
10010c50:	94e5c83a 	sub	r18,r18,r19
10010c54:	a0c03626 	beq	r20,r3,10010d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x134>
10010c58:	21800217 	ldw	r6,8(r4)
10010c5c:	d80b883a 	mov	r5,sp
10010c60:	8009883a 	mov	r4,r16
10010c64:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10010c68:	102d883a 	mov	r22,r2
10010c6c:	88000626 	beq	r17,zero,10010c88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
10010c70:	88800058 	cmpnei	r2,r17,1
10010c74:	81400017 	ldw	r5,0(r16)
10010c78:	10002a26 	beq	r2,zero,10010d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x128>
10010c7c:	880d883a 	mov	r6,r17
10010c80:	b009883a 	mov	r4,r22
10010c84:	00156f00 	call	100156f0 <memcpy>
10010c88:	b8000726 	beq	r23,zero,10010ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
10010c8c:	a8000626 	beq	r21,zero,10010ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
10010c90:	a8800058 	cmpnei	r2,r21,1
10010c94:	b449883a 	add	r4,r22,r17
10010c98:	10002726 	beq	r2,zero,10010d38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x13c>
10010c9c:	a80d883a 	mov	r6,r21
10010ca0:	b80b883a 	mov	r5,r23
10010ca4:	00156f00 	call	100156f0 <memcpy>
10010ca8:	81000017 	ldw	r4,0(r16)
10010cac:	90000926 	beq	r18,zero,10010cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
10010cb0:	8d63883a 	add	r17,r17,r21
10010cb4:	90800058 	cmpnei	r2,r18,1
10010cb8:	b463883a 	add	r17,r22,r17
10010cbc:	24cb883a 	add	r5,r4,r19
10010cc0:	10001426 	beq	r2,zero,10010d14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x118>
10010cc4:	8809883a 	mov	r4,r17
10010cc8:	900d883a 	mov	r6,r18
10010ccc:	00156f00 	call	100156f0 <memcpy>
10010cd0:	81000017 	ldw	r4,0(r16)
10010cd4:	a1000126 	beq	r20,r4,10010cdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xe0>
10010cd8:	00083fc0 	call	100083fc <_ZdlPv>
10010cdc:	d8800017 	ldw	r2,0(sp)
10010ce0:	85800015 	stw	r22,0(r16)
10010ce4:	80800215 	stw	r2,8(r16)
10010ce8:	dfc00917 	ldw	ra,36(sp)
10010cec:	ddc00817 	ldw	r23,32(sp)
10010cf0:	dd800717 	ldw	r22,28(sp)
10010cf4:	dd400617 	ldw	r21,24(sp)
10010cf8:	dd000517 	ldw	r20,20(sp)
10010cfc:	dcc00417 	ldw	r19,16(sp)
10010d00:	dc800317 	ldw	r18,12(sp)
10010d04:	dc400217 	ldw	r17,8(sp)
10010d08:	dc000117 	ldw	r16,4(sp)
10010d0c:	dec00a04 	addi	sp,sp,40
10010d10:	f800283a 	ret
10010d14:	28800003 	ldbu	r2,0(r5)
10010d18:	88800005 	stb	r2,0(r17)
10010d1c:	81000017 	ldw	r4,0(r16)
10010d20:	003fec06 	br	10010cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
10010d24:	28800003 	ldbu	r2,0(r5)
10010d28:	b0800005 	stb	r2,0(r22)
10010d2c:	003fd606 	br	10010c88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
10010d30:	018003c4 	movi	r6,15
10010d34:	003fc906 	br	10010c5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x60>
10010d38:	b8800003 	ldbu	r2,0(r23)
10010d3c:	20800005 	stb	r2,0(r4)
10010d40:	003fd906 	br	10010ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>

10010d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
10010d44:	defffd04 	addi	sp,sp,-12
10010d48:	dc400115 	stw	r17,4(sp)
10010d4c:	dc000015 	stw	r16,0(sp)
10010d50:	dfc00215 	stw	ra,8(sp)
10010d54:	20800117 	ldw	r2,4(r4)
10010d58:	298f883a 	add	r7,r5,r6
10010d5c:	3023883a 	mov	r17,r6
10010d60:	11cdc83a 	sub	r6,r2,r7
10010d64:	2021883a 	mov	r16,r4
10010d68:	20c00017 	ldw	r3,0(r4)
10010d6c:	30000826 	beq	r6,zero,10010d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
10010d70:	88000726 	beq	r17,zero,10010d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
10010d74:	30800058 	cmpnei	r2,r6,1
10010d78:	1949883a 	add	r4,r3,r5
10010d7c:	19cb883a 	add	r5,r3,r7
10010d80:	10000c26 	beq	r2,zero,10010db4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x70>
10010d84:	00157f00 	call	100157f0 <memmove>
10010d88:	80800117 	ldw	r2,4(r16)
10010d8c:	80c00017 	ldw	r3,0(r16)
10010d90:	1445c83a 	sub	r2,r2,r17
10010d94:	80800115 	stw	r2,4(r16)
10010d98:	1885883a 	add	r2,r3,r2
10010d9c:	10000005 	stb	zero,0(r2)
10010da0:	dfc00217 	ldw	ra,8(sp)
10010da4:	dc400117 	ldw	r17,4(sp)
10010da8:	dc000017 	ldw	r16,0(sp)
10010dac:	dec00304 	addi	sp,sp,12
10010db0:	f800283a 	ret
10010db4:	28800003 	ldbu	r2,0(r5)
10010db8:	20800005 	stb	r2,0(r4)
10010dbc:	80800117 	ldw	r2,4(r16)
10010dc0:	80c00017 	ldw	r3,0(r16)
10010dc4:	003ff206 	br	10010d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>

10010dc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
10010dc8:	20800204 	addi	r2,r4,8
10010dcc:	20800015 	stw	r2,0(r4)
10010dd0:	20000115 	stw	zero,4(r4)
10010dd4:	20000205 	stb	zero,8(r4)
10010dd8:	f800283a 	ret

10010ddc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>:
10010ddc:	20800204 	addi	r2,r4,8
10010de0:	20800015 	stw	r2,0(r4)
10010de4:	20000115 	stw	zero,4(r4)
10010de8:	20000205 	stb	zero,8(r4)
10010dec:	f800283a 	ret

10010df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_>:
10010df0:	31803fcc 	andi	r6,r6,255
10010df4:	3180201c 	xori	r6,r6,128
10010df8:	20c00204 	addi	r3,r4,8
10010dfc:	31bfe004 	addi	r6,r6,-128
10010e00:	20c00015 	stw	r3,0(r4)
10010e04:	00108c81 	jmpi	100108c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

10010e08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
10010e08:	defffc04 	addi	sp,sp,-16
10010e0c:	dc800215 	stw	r18,8(sp)
10010e10:	dc400115 	stw	r17,4(sp)
10010e14:	dc000015 	stw	r16,0(sp)
10010e18:	dfc00315 	stw	ra,12(sp)
10010e1c:	2023883a 	mov	r17,r4
10010e20:	21000204 	addi	r4,r4,8
10010e24:	89000015 	stw	r4,0(r17)
10010e28:	28800017 	ldw	r2,0(r5)
10010e2c:	2c800204 	addi	r18,r5,8
10010e30:	2821883a 	mov	r16,r5
10010e34:	90800e26 	beq	r18,r2,10010e70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x68>
10010e38:	88800015 	stw	r2,0(r17)
10010e3c:	28800217 	ldw	r2,8(r5)
10010e40:	88800215 	stw	r2,8(r17)
10010e44:	80800117 	ldw	r2,4(r16)
10010e48:	88800115 	stw	r2,4(r17)
10010e4c:	84800015 	stw	r18,0(r16)
10010e50:	80000115 	stw	zero,4(r16)
10010e54:	80000205 	stb	zero,8(r16)
10010e58:	dfc00317 	ldw	ra,12(sp)
10010e5c:	dc800217 	ldw	r18,8(sp)
10010e60:	dc400117 	ldw	r17,4(sp)
10010e64:	dc000017 	ldw	r16,0(sp)
10010e68:	dec00404 	addi	sp,sp,16
10010e6c:	f800283a 	ret
10010e70:	01800404 	movi	r6,16
10010e74:	900b883a 	mov	r5,r18
10010e78:	00156f00 	call	100156f0 <memcpy>
10010e7c:	003ff106 	br	10010e44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x3c>

10010e80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_>:
10010e80:	21c00204 	addi	r7,r4,8
10010e84:	21c00015 	stw	r7,0(r4)
10010e88:	28c00017 	ldw	r3,0(r5)
10010e8c:	28800204 	addi	r2,r5,8
10010e90:	10c00926 	beq	r2,r3,10010eb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_+0x38>
10010e94:	20c00015 	stw	r3,0(r4)
10010e98:	28c00117 	ldw	r3,4(r5)
10010e9c:	20c00115 	stw	r3,4(r4)
10010ea0:	28c00217 	ldw	r3,8(r5)
10010ea4:	20c00215 	stw	r3,8(r4)
10010ea8:	28800015 	stw	r2,0(r5)
10010eac:	28000115 	stw	zero,4(r5)
10010eb0:	28000205 	stb	zero,8(r5)
10010eb4:	f800283a 	ret
10010eb8:	defffd04 	addi	sp,sp,-12
10010ebc:	dc400115 	stw	r17,4(sp)
10010ec0:	dc000015 	stw	r16,0(sp)
10010ec4:	2023883a 	mov	r17,r4
10010ec8:	2821883a 	mov	r16,r5
10010ecc:	01800404 	movi	r6,16
10010ed0:	100b883a 	mov	r5,r2
10010ed4:	3809883a 	mov	r4,r7
10010ed8:	dfc00215 	stw	ra,8(sp)
10010edc:	00156f00 	call	100156f0 <memcpy>
10010ee0:	80800117 	ldw	r2,4(r16)
10010ee4:	88800115 	stw	r2,4(r17)
10010ee8:	80800017 	ldw	r2,0(r16)
10010eec:	80000115 	stw	zero,4(r16)
10010ef0:	10000005 	stb	zero,0(r2)
10010ef4:	dfc00217 	ldw	ra,8(sp)
10010ef8:	dc400117 	ldw	r17,4(sp)
10010efc:	dc000017 	ldw	r16,0(sp)
10010f00:	dec00304 	addi	sp,sp,12
10010f04:	f800283a 	ret

10010f08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
10010f08:	20c00017 	ldw	r3,0(r4)
10010f0c:	20800204 	addi	r2,r4,8
10010f10:	18800226 	beq	r3,r2,10010f1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev+0x14>
10010f14:	1809883a 	mov	r4,r3
10010f18:	00083fc1 	jmpi	100083fc <_ZdlPv>
10010f1c:	f800283a 	ret

10010f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
10010f20:	defffe04 	addi	sp,sp,-8
10010f24:	dc000015 	stw	r16,0(sp)
10010f28:	dfc00115 	stw	ra,4(sp)
10010f2c:	2021883a 	mov	r16,r4
10010f30:	0010b240 	call	10010b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
10010f34:	8005883a 	mov	r2,r16
10010f38:	dfc00117 	ldw	ra,4(sp)
10010f3c:	dc000017 	ldw	r16,0(sp)
10010f40:	dec00204 	addi	sp,sp,8
10010f44:	f800283a 	ret

10010f48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
10010f48:	defffd04 	addi	sp,sp,-12
10010f4c:	dc400115 	stw	r17,4(sp)
10010f50:	dc000015 	stw	r16,0(sp)
10010f54:	dfc00215 	stw	ra,8(sp)
10010f58:	28800017 	ldw	r2,0(r5)
10010f5c:	2821883a 	mov	r16,r5
10010f60:	29400204 	addi	r5,r5,8
10010f64:	2023883a 	mov	r17,r4
10010f68:	21000017 	ldw	r4,0(r4)
10010f6c:	28801a26 	beq	r5,r2,10010fd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x90>
10010f70:	88c00204 	addi	r3,r17,8
10010f74:	88800015 	stw	r2,0(r17)
10010f78:	20c01026 	beq	r4,r3,10010fbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x74>
10010f7c:	80c00117 	ldw	r3,4(r16)
10010f80:	88800217 	ldw	r2,8(r17)
10010f84:	88c00115 	stw	r3,4(r17)
10010f88:	80c00217 	ldw	r3,8(r16)
10010f8c:	88c00215 	stw	r3,8(r17)
10010f90:	20000e26 	beq	r4,zero,10010fcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x84>
10010f94:	81000015 	stw	r4,0(r16)
10010f98:	80800215 	stw	r2,8(r16)
10010f9c:	80000115 	stw	zero,4(r16)
10010fa0:	8805883a 	mov	r2,r17
10010fa4:	20000005 	stb	zero,0(r4)
10010fa8:	dfc00217 	ldw	ra,8(sp)
10010fac:	dc400117 	ldw	r17,4(sp)
10010fb0:	dc000017 	ldw	r16,0(sp)
10010fb4:	dec00304 	addi	sp,sp,12
10010fb8:	f800283a 	ret
10010fbc:	80800117 	ldw	r2,4(r16)
10010fc0:	88800115 	stw	r2,4(r17)
10010fc4:	80800217 	ldw	r2,8(r16)
10010fc8:	88800215 	stw	r2,8(r17)
10010fcc:	81400015 	stw	r5,0(r16)
10010fd0:	2809883a 	mov	r4,r5
10010fd4:	003ff106 	br	10010f9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
10010fd8:	81800117 	ldw	r6,4(r16)
10010fdc:	30000526 	beq	r6,zero,10010ff4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>
10010fe0:	30800058 	cmpnei	r2,r6,1
10010fe4:	10000826 	beq	r2,zero,10011008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xc0>
10010fe8:	00156f00 	call	100156f0 <memcpy>
10010fec:	89000017 	ldw	r4,0(r17)
10010ff0:	81800117 	ldw	r6,4(r16)
10010ff4:	89800115 	stw	r6,4(r17)
10010ff8:	2189883a 	add	r4,r4,r6
10010ffc:	20000005 	stb	zero,0(r4)
10011000:	81000017 	ldw	r4,0(r16)
10011004:	003fe506 	br	10010f9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
10011008:	80800203 	ldbu	r2,8(r16)
1001100c:	20800005 	stb	r2,0(r4)
10011010:	89000017 	ldw	r4,0(r17)
10011014:	81800117 	ldw	r6,4(r16)
10011018:	003ff606 	br	10010ff4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>

1001101c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
1001101c:	20800017 	ldw	r2,0(r4)
10011020:	f800283a 	ret

10011024 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
10011024:	20800017 	ldw	r2,0(r4)
10011028:	f800283a 	ret

1001102c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
1001102c:	20c00017 	ldw	r3,0(r4)
10011030:	20800117 	ldw	r2,4(r4)
10011034:	1885883a 	add	r2,r3,r2
10011038:	f800283a 	ret

1001103c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
1001103c:	20c00017 	ldw	r3,0(r4)
10011040:	20800117 	ldw	r2,4(r4)
10011044:	1885883a 	add	r2,r3,r2
10011048:	f800283a 	ret

1001104c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
1001104c:	28c00017 	ldw	r3,0(r5)
10011050:	29400117 	ldw	r5,4(r5)
10011054:	2005883a 	mov	r2,r4
10011058:	1947883a 	add	r3,r3,r5
1001105c:	20c00015 	stw	r3,0(r4)
10011060:	f800283a 	ret

10011064 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
10011064:	28c00017 	ldw	r3,0(r5)
10011068:	29400117 	ldw	r5,4(r5)
1001106c:	2005883a 	mov	r2,r4
10011070:	1947883a 	add	r3,r3,r5
10011074:	20c00015 	stw	r3,0(r4)
10011078:	f800283a 	ret

1001107c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
1001107c:	28c00017 	ldw	r3,0(r5)
10011080:	2005883a 	mov	r2,r4
10011084:	20c00015 	stw	r3,0(r4)
10011088:	f800283a 	ret

1001108c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
1001108c:	28c00017 	ldw	r3,0(r5)
10011090:	2005883a 	mov	r2,r4
10011094:	20c00015 	stw	r3,0(r4)
10011098:	f800283a 	ret

1001109c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv>:
1001109c:	20800017 	ldw	r2,0(r4)
100110a0:	f800283a 	ret

100110a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv>:
100110a4:	20c00017 	ldw	r3,0(r4)
100110a8:	20800117 	ldw	r2,4(r4)
100110ac:	1885883a 	add	r2,r3,r2
100110b0:	f800283a 	ret

100110b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv>:
100110b4:	28c00017 	ldw	r3,0(r5)
100110b8:	29400117 	ldw	r5,4(r5)
100110bc:	2005883a 	mov	r2,r4
100110c0:	1947883a 	add	r3,r3,r5
100110c4:	20c00015 	stw	r3,0(r4)
100110c8:	f800283a 	ret

100110cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv>:
100110cc:	28c00017 	ldw	r3,0(r5)
100110d0:	2005883a 	mov	r2,r4
100110d4:	20c00015 	stw	r3,0(r4)
100110d8:	f800283a 	ret

100110dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
100110dc:	20800117 	ldw	r2,4(r4)
100110e0:	f800283a 	ret

100110e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
100110e4:	20800117 	ldw	r2,4(r4)
100110e8:	f800283a 	ret

100110ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
100110ec:	00a00034 	movhi	r2,32768
100110f0:	10bfffc4 	addi	r2,r2,-1
100110f4:	f800283a 	ret

100110f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
100110f8:	20c00017 	ldw	r3,0(r4)
100110fc:	20800204 	addi	r2,r4,8
10011100:	18800226 	beq	r3,r2,1001110c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x14>
10011104:	20800217 	ldw	r2,8(r4)
10011108:	f800283a 	ret
1001110c:	008003c4 	movi	r2,15
10011110:	f800283a 	ret

10011114 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
10011114:	defffb04 	addi	sp,sp,-20
10011118:	dc000115 	stw	r16,4(sp)
1001111c:	dfc00415 	stw	ra,16(sp)
10011120:	dc800315 	stw	r18,12(sp)
10011124:	dc400215 	stw	r17,8(sp)
10011128:	20800117 	ldw	r2,4(r4)
1001112c:	d9400015 	stw	r5,0(sp)
10011130:	2021883a 	mov	r16,r4
10011134:	2880022e 	bgeu	r5,r2,10011140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2c>
10011138:	d8800015 	stw	r2,0(sp)
1001113c:	100b883a 	mov	r5,r2
10011140:	84800017 	ldw	r18,0(r16)
10011144:	84400204 	addi	r17,r16,8
10011148:	8c802926 	beq	r17,r18,100111f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xdc>
1001114c:	81800217 	ldw	r6,8(r16)
10011150:	31400d26 	beq	r6,r5,10011188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
10011154:	31401236 	bltu	r6,r5,100111a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011158:	29400430 	cmpltui	r5,r5,16
1001115c:	28001026 	beq	r5,zero,100111a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011160:	8c800926 	beq	r17,r18,10011188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
10011164:	11800044 	addi	r6,r2,1
10011168:	10002726 	beq	r2,zero,10011208 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xf4>
1001116c:	30000326 	beq	r6,zero,1001117c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>
10011170:	900b883a 	mov	r5,r18
10011174:	8809883a 	mov	r4,r17
10011178:	00156f00 	call	100156f0 <memcpy>
1001117c:	9009883a 	mov	r4,r18
10011180:	00083fc0 	call	100083fc <_ZdlPv>
10011184:	84400015 	stw	r17,0(r16)
10011188:	dfc00417 	ldw	ra,16(sp)
1001118c:	dc800317 	ldw	r18,12(sp)
10011190:	dc400217 	ldw	r17,8(sp)
10011194:	dc000117 	ldw	r16,4(sp)
10011198:	dec00504 	addi	sp,sp,20
1001119c:	f800283a 	ret
100111a0:	8009883a 	mov	r4,r16
100111a4:	d80b883a 	mov	r5,sp
100111a8:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100111ac:	1025883a 	mov	r18,r2
100111b0:	80800117 	ldw	r2,4(r16)
100111b4:	81000017 	ldw	r4,0(r16)
100111b8:	11800044 	addi	r6,r2,1
100111bc:	10000e26 	beq	r2,zero,100111f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xe4>
100111c0:	3000061e 	bne	r6,zero,100111dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xc8>
100111c4:	89000126 	beq	r17,r4,100111cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb8>
100111c8:	00083fc0 	call	100083fc <_ZdlPv>
100111cc:	d8800017 	ldw	r2,0(sp)
100111d0:	84800015 	stw	r18,0(r16)
100111d4:	80800215 	stw	r2,8(r16)
100111d8:	003feb06 	br	10011188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
100111dc:	200b883a 	mov	r5,r4
100111e0:	9009883a 	mov	r4,r18
100111e4:	00156f00 	call	100156f0 <memcpy>
100111e8:	81000017 	ldw	r4,0(r16)
100111ec:	003ff506 	br	100111c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
100111f0:	018003c4 	movi	r6,15
100111f4:	003fd606 	br	10011150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x3c>
100111f8:	20800003 	ldbu	r2,0(r4)
100111fc:	90800005 	stb	r2,0(r18)
10011200:	81000017 	ldw	r4,0(r16)
10011204:	003fef06 	br	100111c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
10011208:	90800003 	ldbu	r2,0(r18)
1001120c:	80800205 	stb	r2,8(r16)
10011210:	003fda06 	br	1001117c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>

10011214 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv>:
10011214:	deffe704 	addi	sp,sp,-100
10011218:	00c400b4 	movhi	r3,4098
1001121c:	d9800204 	addi	r6,sp,8
10011220:	18d16504 	addi	r3,r3,17812
10011224:	01440074 	movhi	r5,4097
10011228:	00840074 	movhi	r2,4097
1001122c:	1084bf04 	addi	r2,r2,4860
10011230:	29626504 	addi	r5,r5,-30316
10011234:	d9000015 	stw	r4,0(sp)
10011238:	d8c00915 	stw	r3,36(sp)
1001123c:	3009883a 	mov	r4,r6
10011240:	d8c00f04 	addi	r3,sp,60
10011244:	d8c00a15 	stw	r3,40(sp)
10011248:	d8800b15 	stw	r2,44(sp)
1001124c:	dfc01815 	stw	ra,96(sp)
10011250:	df001715 	stw	fp,92(sp)
10011254:	ddc01615 	stw	r23,88(sp)
10011258:	dd801515 	stw	r22,84(sp)
1001125c:	dd401415 	stw	r21,80(sp)
10011260:	dd001315 	stw	r20,76(sp)
10011264:	dcc01215 	stw	r19,72(sp)
10011268:	dc801115 	stw	r18,68(sp)
1001126c:	dc401015 	stw	r17,64(sp)
10011270:	dc000f15 	stw	r16,60(sp)
10011274:	d9800115 	stw	r6,4(sp)
10011278:	d9400815 	stw	r5,32(sp)
1001127c:	dec00c15 	stw	sp,48(sp)
10011280:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10011284:	d9000017 	ldw	r4,0(sp)
10011288:	20c00017 	ldw	r3,0(r4)
1001128c:	20800204 	addi	r2,r4,8
10011290:	18801826 	beq	r3,r2,100112f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xe0>
10011294:	20c00217 	ldw	r3,8(r4)
10011298:	d8800017 	ldw	r2,0(sp)
1001129c:	10800117 	ldw	r2,4(r2)
100112a0:	10c00e36 	bltu	r2,r3,100112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xc8>
100112a4:	d9000117 	ldw	r4,4(sp)
100112a8:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
100112ac:	dfc01817 	ldw	ra,96(sp)
100112b0:	df001717 	ldw	fp,92(sp)
100112b4:	ddc01617 	ldw	r23,88(sp)
100112b8:	dd801517 	ldw	r22,84(sp)
100112bc:	dd401417 	ldw	r21,80(sp)
100112c0:	dd001317 	ldw	r20,76(sp)
100112c4:	dcc01217 	ldw	r19,72(sp)
100112c8:	dc801117 	ldw	r18,68(sp)
100112cc:	dc401017 	ldw	r17,64(sp)
100112d0:	dc000f17 	ldw	r16,60(sp)
100112d4:	dec01904 	addi	sp,sp,100
100112d8:	f800283a 	ret
100112dc:	d9000017 	ldw	r4,0(sp)
100112e0:	00800044 	movi	r2,1
100112e4:	000b883a 	mov	r5,zero
100112e8:	d8800315 	stw	r2,12(sp)
100112ec:	00111140 	call	10011114 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
100112f0:	003fec06 	br	100112a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>
100112f4:	00c003c4 	movi	r3,15
100112f8:	003fe706 	br	10011298 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x84>
100112fc:	d9000417 	ldw	r4,16(sp)
10011300:	d8800204 	addi	r2,sp,8
10011304:	d8800115 	stw	r2,4(sp)
10011308:	0007f400 	call	10007f40 <__cxa_begin_catch>
1001130c:	d8000315 	stw	zero,12(sp)
10011310:	0007fec0 	call	10007fec <__cxa_end_catch>
10011314:	003fe306 	br	100112a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>

10011318 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>:
10011318:	20800017 	ldw	r2,0(r4)
1001131c:	20000115 	stw	zero,4(r4)
10011320:	10000005 	stb	zero,0(r2)
10011324:	f800283a 	ret

10011328 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
10011328:	20800117 	ldw	r2,4(r4)
1001132c:	1005003a 	cmpeq	r2,r2,zero
10011330:	f800283a 	ret

10011334 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
10011334:	20800017 	ldw	r2,0(r4)
10011338:	1145883a 	add	r2,r2,r5
1001133c:	f800283a 	ret

10011340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
10011340:	20800017 	ldw	r2,0(r4)
10011344:	1145883a 	add	r2,r2,r5
10011348:	f800283a 	ret

1001134c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
1001134c:	21800117 	ldw	r6,4(r4)
10011350:	2980032e 	bgeu	r5,r6,10011360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
10011354:	20c00017 	ldw	r3,0(r4)
10011358:	1945883a 	add	r2,r3,r5
1001135c:	f800283a 	ret
10011360:	010400b4 	movhi	r4,4098
10011364:	deffff04 	addi	sp,sp,-4
10011368:	2115eb04 	addi	r4,r4,22444
1001136c:	dfc00015 	stw	ra,0(sp)
10011370:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011374 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
10011374:	21800117 	ldw	r6,4(r4)
10011378:	2980032e 	bgeu	r5,r6,10011388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
1001137c:	20c00017 	ldw	r3,0(r4)
10011380:	1945883a 	add	r2,r3,r5
10011384:	f800283a 	ret
10011388:	010400b4 	movhi	r4,4098
1001138c:	deffff04 	addi	sp,sp,-4
10011390:	2115eb04 	addi	r4,r4,22444
10011394:	dfc00015 	stw	ra,0(sp)
10011398:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1001139c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
1001139c:	20800017 	ldw	r2,0(r4)
100113a0:	f800283a 	ret

100113a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
100113a4:	20800017 	ldw	r2,0(r4)
100113a8:	f800283a 	ret

100113ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
100113ac:	20c00117 	ldw	r3,4(r4)
100113b0:	20800017 	ldw	r2,0(r4)
100113b4:	18ffffc4 	addi	r3,r3,-1
100113b8:	10c5883a 	add	r2,r2,r3
100113bc:	f800283a 	ret

100113c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
100113c0:	20c00117 	ldw	r3,4(r4)
100113c4:	20800017 	ldw	r2,0(r4)
100113c8:	18ffffc4 	addi	r3,r3,-1
100113cc:	10c5883a 	add	r2,r2,r3
100113d0:	f800283a 	ret

100113d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
100113d4:	defffa04 	addi	sp,sp,-24
100113d8:	dc800415 	stw	r18,16(sp)
100113dc:	dc000215 	stw	r16,8(sp)
100113e0:	dfc00515 	stw	ra,20(sp)
100113e4:	dc400315 	stw	r17,12(sp)
100113e8:	24400117 	ldw	r17,4(r4)
100113ec:	20c00017 	ldw	r3,0(r4)
100113f0:	2005883a 	mov	r2,r4
100113f4:	21000204 	addi	r4,r4,8
100113f8:	2825883a 	mov	r18,r5
100113fc:	8c000044 	addi	r16,r17,1
10011400:	19001926 	beq	r3,r4,10011468 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x94>
10011404:	11000217 	ldw	r4,8(r2)
10011408:	24000c36 	bltu	r4,r16,1001143c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x68>
1001140c:	1c47883a 	add	r3,r3,r17
10011410:	1c800005 	stb	r18,0(r3)
10011414:	10c00017 	ldw	r3,0(r2)
10011418:	14000115 	stw	r16,4(r2)
1001141c:	1c07883a 	add	r3,r3,r16
10011420:	18000005 	stb	zero,0(r3)
10011424:	dfc00517 	ldw	ra,20(sp)
10011428:	dc800417 	ldw	r18,16(sp)
1001142c:	dc400317 	ldw	r17,12(sp)
10011430:	dc000217 	ldw	r16,8(sp)
10011434:	dec00604 	addi	sp,sp,24
10011438:	f800283a 	ret
1001143c:	00c00044 	movi	r3,1
10011440:	d8c00015 	stw	r3,0(sp)
10011444:	1009883a 	mov	r4,r2
10011448:	000f883a 	mov	r7,zero
1001144c:	000d883a 	mov	r6,zero
10011450:	880b883a 	mov	r5,r17
10011454:	d8800115 	stw	r2,4(sp)
10011458:	0010bfc0 	call	10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
1001145c:	d8800117 	ldw	r2,4(sp)
10011460:	10c00017 	ldw	r3,0(r2)
10011464:	003fe906 	br	1001140c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x38>
10011468:	010003c4 	movi	r4,15
1001146c:	003fe606 	br	10011408 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x34>

10011470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
10011470:	defffa04 	addi	sp,sp,-24
10011474:	dcc00415 	stw	r19,16(sp)
10011478:	dc400215 	stw	r17,8(sp)
1001147c:	dc000115 	stw	r16,4(sp)
10011480:	dfc00515 	stw	ra,20(sp)
10011484:	dc800315 	stw	r18,12(sp)
10011488:	24800117 	ldw	r18,4(r4)
1001148c:	20800017 	ldw	r2,0(r4)
10011490:	20c00204 	addi	r3,r4,8
10011494:	2021883a 	mov	r16,r4
10011498:	2827883a 	mov	r19,r5
1001149c:	94400044 	addi	r17,r18,1
100114a0:	10c01826 	beq	r2,r3,10011504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x94>
100114a4:	20c00217 	ldw	r3,8(r4)
100114a8:	1c400d36 	bltu	r3,r17,100114e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x70>
100114ac:	1485883a 	add	r2,r2,r18
100114b0:	14c00005 	stb	r19,0(r2)
100114b4:	80800017 	ldw	r2,0(r16)
100114b8:	84400115 	stw	r17,4(r16)
100114bc:	1445883a 	add	r2,r2,r17
100114c0:	10000005 	stb	zero,0(r2)
100114c4:	dfc00517 	ldw	ra,20(sp)
100114c8:	dcc00417 	ldw	r19,16(sp)
100114cc:	dc800317 	ldw	r18,12(sp)
100114d0:	dc400217 	ldw	r17,8(sp)
100114d4:	dc000117 	ldw	r16,4(sp)
100114d8:	dec00604 	addi	sp,sp,24
100114dc:	f800283a 	ret
100114e0:	00800044 	movi	r2,1
100114e4:	d8800015 	stw	r2,0(sp)
100114e8:	000f883a 	mov	r7,zero
100114ec:	000d883a 	mov	r6,zero
100114f0:	900b883a 	mov	r5,r18
100114f4:	8009883a 	mov	r4,r16
100114f8:	0010bfc0 	call	10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
100114fc:	80800017 	ldw	r2,0(r16)
10011500:	003fea06 	br	100114ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x3c>
10011504:	00c003c4 	movi	r3,15
10011508:	003fe706 	br	100114a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x38>

1001150c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>:
1001150c:	defffe04 	addi	sp,sp,-8
10011510:	dc000015 	stw	r16,0(sp)
10011514:	dfc00115 	stw	ra,4(sp)
10011518:	2021883a 	mov	r16,r4
1001151c:	0010b240 	call	10010b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
10011520:	8005883a 	mov	r2,r16
10011524:	dfc00117 	ldw	ra,4(sp)
10011528:	dc000017 	ldw	r16,0(sp)
1001152c:	dec00204 	addi	sp,sp,8
10011530:	f800283a 	ret

10011534 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_>:
10011534:	defffd04 	addi	sp,sp,-12
10011538:	dc400115 	stw	r17,4(sp)
1001153c:	dc000015 	stw	r16,0(sp)
10011540:	dfc00215 	stw	ra,8(sp)
10011544:	2821883a 	mov	r16,r5
10011548:	29400017 	ldw	r5,0(r5)
1001154c:	80800204 	addi	r2,r16,8
10011550:	2023883a 	mov	r17,r4
10011554:	21000017 	ldw	r4,0(r4)
10011558:	28801a26 	beq	r5,r2,100115c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x90>
1001155c:	88c00204 	addi	r3,r17,8
10011560:	89400015 	stw	r5,0(r17)
10011564:	20c01026 	beq	r4,r3,100115a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x74>
10011568:	81400117 	ldw	r5,4(r16)
1001156c:	88c00217 	ldw	r3,8(r17)
10011570:	89400115 	stw	r5,4(r17)
10011574:	81400217 	ldw	r5,8(r16)
10011578:	89400215 	stw	r5,8(r17)
1001157c:	20000e26 	beq	r4,zero,100115b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x84>
10011580:	81000015 	stw	r4,0(r16)
10011584:	80c00215 	stw	r3,8(r16)
10011588:	80000115 	stw	zero,4(r16)
1001158c:	8805883a 	mov	r2,r17
10011590:	20000005 	stb	zero,0(r4)
10011594:	dfc00217 	ldw	ra,8(sp)
10011598:	dc400117 	ldw	r17,4(sp)
1001159c:	dc000017 	ldw	r16,0(sp)
100115a0:	dec00304 	addi	sp,sp,12
100115a4:	f800283a 	ret
100115a8:	80c00117 	ldw	r3,4(r16)
100115ac:	88c00115 	stw	r3,4(r17)
100115b0:	80c00217 	ldw	r3,8(r16)
100115b4:	88c00215 	stw	r3,8(r17)
100115b8:	80800015 	stw	r2,0(r16)
100115bc:	1009883a 	mov	r4,r2
100115c0:	003ff106 	br	10011588 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
100115c4:	81800117 	ldw	r6,4(r16)
100115c8:	30000526 	beq	r6,zero,100115e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>
100115cc:	30800058 	cmpnei	r2,r6,1
100115d0:	10000826 	beq	r2,zero,100115f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xc0>
100115d4:	00156f00 	call	100156f0 <memcpy>
100115d8:	81800117 	ldw	r6,4(r16)
100115dc:	89000017 	ldw	r4,0(r17)
100115e0:	89800115 	stw	r6,4(r17)
100115e4:	2189883a 	add	r4,r4,r6
100115e8:	20000005 	stb	zero,0(r4)
100115ec:	81000017 	ldw	r4,0(r16)
100115f0:	003fe506 	br	10011588 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
100115f4:	80800203 	ldbu	r2,8(r16)
100115f8:	20800005 	stb	r2,0(r4)
100115fc:	81800117 	ldw	r6,4(r16)
10011600:	89000017 	ldw	r4,0(r17)
10011604:	003ff606 	br	100115e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>

10011608 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj>:
10011608:	defffe04 	addi	sp,sp,-8
1001160c:	dfc00115 	stw	ra,4(sp)
10011610:	21c00117 	ldw	r7,4(r4)
10011614:	2807883a 	mov	r3,r5
10011618:	39401836 	bltu	r7,r5,1001167c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x74>
1001161c:	2005883a 	mov	r2,r4
10011620:	313fffd8 	cmpnei	r4,r6,-1
10011624:	20000c26 	beq	r4,zero,10011658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x50>
10011628:	30000826 	beq	r6,zero,1001164c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x44>
1001162c:	394fc83a 	sub	r7,r7,r5
10011630:	31c01036 	bltu	r6,r7,10011674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x6c>
10011634:	1009883a 	mov	r4,r2
10011638:	380d883a 	mov	r6,r7
1001163c:	180b883a 	mov	r5,r3
10011640:	d8800015 	stw	r2,0(sp)
10011644:	0010d440 	call	10010d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
10011648:	d8800017 	ldw	r2,0(sp)
1001164c:	dfc00117 	ldw	ra,4(sp)
10011650:	dec00204 	addi	sp,sp,8
10011654:	f800283a 	ret
10011658:	11000017 	ldw	r4,0(r2)
1001165c:	11400115 	stw	r5,4(r2)
10011660:	2147883a 	add	r3,r4,r5
10011664:	18000005 	stb	zero,0(r3)
10011668:	dfc00117 	ldw	ra,4(sp)
1001166c:	dec00204 	addi	sp,sp,8
10011670:	f800283a 	ret
10011674:	300f883a 	mov	r7,r6
10011678:	003fee06 	br	10011634 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x2c>
1001167c:	014400b4 	movhi	r5,4098
10011680:	010400b4 	movhi	r4,4098
10011684:	180d883a 	mov	r6,r3
10011688:	29560d04 	addi	r5,r5,22580
1001168c:	2115dd04 	addi	r4,r4,22388
10011690:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE>:
10011694:	defffd04 	addi	sp,sp,-12
10011698:	dc000015 	stw	r16,0(sp)
1001169c:	24000017 	ldw	r16,0(r4)
100116a0:	01800044 	movi	r6,1
100116a4:	dc400115 	stw	r17,4(sp)
100116a8:	2c21c83a 	sub	r16,r5,r16
100116ac:	800b883a 	mov	r5,r16
100116b0:	dfc00215 	stw	ra,8(sp)
100116b4:	2023883a 	mov	r17,r4
100116b8:	0010d440 	call	10010d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
100116bc:	88800017 	ldw	r2,0(r17)
100116c0:	1405883a 	add	r2,r2,r16
100116c4:	dfc00217 	ldw	ra,8(sp)
100116c8:	dc400117 	ldw	r17,4(sp)
100116cc:	dc000017 	ldw	r16,0(sp)
100116d0:	dec00304 	addi	sp,sp,12
100116d4:	f800283a 	ret

100116d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_>:
100116d8:	20800017 	ldw	r2,0(r4)
100116dc:	20c00117 	ldw	r3,4(r4)
100116e0:	defffd04 	addi	sp,sp,-12
100116e4:	dc400115 	stw	r17,4(sp)
100116e8:	dc000015 	stw	r16,0(sp)
100116ec:	dfc00215 	stw	ra,8(sp)
100116f0:	10c7883a 	add	r3,r2,r3
100116f4:	2023883a 	mov	r17,r4
100116f8:	28a1c83a 	sub	r16,r5,r2
100116fc:	30c00a26 	beq	r6,r3,10011728 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x50>
10011700:	314dc83a 	sub	r6,r6,r5
10011704:	800b883a 	mov	r5,r16
10011708:	0010d440 	call	10010d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
1001170c:	88800017 	ldw	r2,0(r17)
10011710:	1405883a 	add	r2,r2,r16
10011714:	dfc00217 	ldw	ra,8(sp)
10011718:	dc400117 	ldw	r17,4(sp)
1001171c:	dc000017 	ldw	r16,0(sp)
10011720:	dec00304 	addi	sp,sp,12
10011724:	f800283a 	ret
10011728:	24000115 	stw	r16,4(r4)
1001172c:	28000005 	stb	zero,0(r5)
10011730:	003ff606 	br	1001170c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x34>

10011734 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
10011734:	defff104 	addi	sp,sp,-60
10011738:	00c40074 	movhi	r3,4097
1001173c:	008400b4 	movhi	r2,4098
10011740:	dc000d15 	stw	r16,52(sp)
10011744:	18e26504 	addi	r3,r3,-30316
10011748:	10916904 	addi	r2,r2,17828
1001174c:	2021883a 	mov	r16,r4
10011750:	d809883a 	mov	r4,sp
10011754:	dfc00e15 	stw	ra,56(sp)
10011758:	d8c00615 	stw	r3,24(sp)
1001175c:	d8800715 	stw	r2,28(sp)
10011760:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10011764:	81400117 	ldw	r5,4(r16)
10011768:	01800044 	movi	r6,1
1001176c:	8009883a 	mov	r4,r16
10011770:	297fffc4 	addi	r5,r5,-1
10011774:	d8000115 	stw	zero,4(sp)
10011778:	0010d440 	call	10010d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
1001177c:	d809883a 	mov	r4,sp
10011780:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10011784:	dfc00e17 	ldw	ra,56(sp)
10011788:	dc000d17 	ldw	r16,52(sp)
1001178c:	dec00f04 	addi	sp,sp,60
10011790:	f800283a 	ret

10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>:
10011794:	defff904 	addi	sp,sp,-28
10011798:	dd000515 	stw	r20,20(sp)
1001179c:	dfc00615 	stw	ra,24(sp)
100117a0:	dcc00415 	stw	r19,16(sp)
100117a4:	dc800315 	stw	r18,12(sp)
100117a8:	dc400215 	stw	r17,8(sp)
100117ac:	dc000115 	stw	r16,4(sp)
100117b0:	20c00117 	ldw	r3,4(r4)
100117b4:	00a00034 	movhi	r2,32768
100117b8:	10bfffc4 	addi	r2,r2,-1
100117bc:	3085883a 	add	r2,r6,r2
100117c0:	10c5c83a 	sub	r2,r2,r3
100117c4:	dd000717 	ldw	r20,28(sp)
100117c8:	11c03e36 	bltu	r2,r7,100118c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x130>
100117cc:	2021883a 	mov	r16,r4
100117d0:	21000017 	ldw	r4,0(r4)
100117d4:	39a3c83a 	sub	r17,r7,r6
100117d8:	80800204 	addi	r2,r16,8
100117dc:	3825883a 	mov	r18,r7
100117e0:	2827883a 	mov	r19,r5
100117e4:	88e3883a 	add	r17,r17,r3
100117e8:	20803126 	beq	r4,r2,100118b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x11c>
100117ec:	80800217 	ldw	r2,8(r16)
100117f0:	14402236 	bltu	r2,r17,1001187c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xe8>
100117f4:	34c5883a 	add	r2,r6,r19
100117f8:	1887c83a 	sub	r3,r3,r2
100117fc:	18000926 	beq	r3,zero,10011824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
10011800:	34800826 	beq	r6,r18,10011824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
10011804:	24cb883a 	add	r5,r4,r19
10011808:	18800058 	cmpnei	r2,r3,1
1001180c:	2c89883a 	add	r4,r5,r18
10011810:	298b883a 	add	r5,r5,r6
10011814:	10002126 	beq	r2,zero,1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x108>
10011818:	180d883a 	mov	r6,r3
1001181c:	00157f00 	call	100157f0 <memmove>
10011820:	81000017 	ldw	r4,0(r16)
10011824:	90000926 	beq	r18,zero,1001184c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
10011828:	90800058 	cmpnei	r2,r18,1
1001182c:	24c9883a 	add	r4,r4,r19
10011830:	10002126 	beq	r2,zero,100118b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x124>
10011834:	a1403fcc 	andi	r5,r20,255
10011838:	2940201c 	xori	r5,r5,128
1001183c:	900d883a 	mov	r6,r18
10011840:	297fe004 	addi	r5,r5,-128
10011844:	001591c0 	call	1001591c <memset>
10011848:	81000017 	ldw	r4,0(r16)
1001184c:	84400115 	stw	r17,4(r16)
10011850:	2449883a 	add	r4,r4,r17
10011854:	8005883a 	mov	r2,r16
10011858:	20000005 	stb	zero,0(r4)
1001185c:	dfc00617 	ldw	ra,24(sp)
10011860:	dd000517 	ldw	r20,20(sp)
10011864:	dcc00417 	ldw	r19,16(sp)
10011868:	dc800317 	ldw	r18,12(sp)
1001186c:	dc400217 	ldw	r17,8(sp)
10011870:	dc000117 	ldw	r16,4(sp)
10011874:	dec00704 	addi	sp,sp,28
10011878:	f800283a 	ret
1001187c:	8009883a 	mov	r4,r16
10011880:	dc800015 	stw	r18,0(sp)
10011884:	000f883a 	mov	r7,zero
10011888:	980b883a 	mov	r5,r19
1001188c:	0010bfc0 	call	10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011890:	81000017 	ldw	r4,0(r16)
10011894:	903fed26 	beq	r18,zero,1001184c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
10011898:	003fe306 	br	10011828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
1001189c:	28800003 	ldbu	r2,0(r5)
100118a0:	20800005 	stb	r2,0(r4)
100118a4:	81000017 	ldw	r4,0(r16)
100118a8:	903fe826 	beq	r18,zero,1001184c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100118ac:	003fde06 	br	10011828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
100118b0:	008003c4 	movi	r2,15
100118b4:	003fce06 	br	100117f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x5c>
100118b8:	25000005 	stb	r20,0(r4)
100118bc:	81000017 	ldw	r4,0(r16)
100118c0:	003fe206 	br	1001184c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100118c4:	010400b4 	movhi	r4,4098
100118c8:	21161204 	addi	r4,r4,22600
100118cc:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100118d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc>:
100118d0:	31803fcc 	andi	r6,r6,255
100118d4:	3180201c 	xori	r6,r6,128
100118d8:	defffe04 	addi	sp,sp,-8
100118dc:	31bfe004 	addi	r6,r6,-128
100118e0:	dfc00115 	stw	ra,4(sp)
100118e4:	d9800015 	stw	r6,0(sp)
100118e8:	280f883a 	mov	r7,r5
100118ec:	21400117 	ldw	r5,4(r4)
100118f0:	000d883a 	mov	r6,zero
100118f4:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
100118f8:	dfc00117 	ldw	ra,4(sp)
100118fc:	dec00204 	addi	sp,sp,8
10011900:	f800283a 	ret

10011904 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>:
10011904:	20800117 	ldw	r2,4(r4)
10011908:	11400736 	bltu	r2,r5,10011928 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x24>
1001190c:	2880052e 	bgeu	r5,r2,10011924 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x20>
10011910:	21c00017 	ldw	r7,0(r4)
10011914:	21400115 	stw	r5,4(r4)
10011918:	394b883a 	add	r5,r7,r5
1001191c:	28000005 	stb	zero,0(r5)
10011920:	f800283a 	ret
10011924:	f800283a 	ret
10011928:	31803fcc 	andi	r6,r6,255
1001192c:	3180201c 	xori	r6,r6,128
10011930:	defffe04 	addi	sp,sp,-8
10011934:	31bfe004 	addi	r6,r6,-128
10011938:	d9800015 	stw	r6,0(sp)
1001193c:	288fc83a 	sub	r7,r5,r2
10011940:	000d883a 	mov	r6,zero
10011944:	100b883a 	mov	r5,r2
10011948:	dfc00115 	stw	ra,4(sp)
1001194c:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011950:	dfc00117 	ldw	ra,4(sp)
10011954:	dec00204 	addi	sp,sp,8
10011958:	f800283a 	ret

1001195c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj>:
1001195c:	000d883a 	mov	r6,zero
10011960:	00119041 	jmpi	10011904 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>

10011964 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc>:
10011964:	31803fcc 	andi	r6,r6,255
10011968:	3180201c 	xori	r6,r6,128
1001196c:	defffe04 	addi	sp,sp,-8
10011970:	31bfe004 	addi	r6,r6,-128
10011974:	dfc00115 	stw	ra,4(sp)
10011978:	d9800015 	stw	r6,0(sp)
1001197c:	21800117 	ldw	r6,4(r4)
10011980:	280f883a 	mov	r7,r5
10011984:	000b883a 	mov	r5,zero
10011988:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
1001198c:	dfc00117 	ldw	ra,4(sp)
10011990:	dec00204 	addi	sp,sp,8
10011994:	f800283a 	ret

10011998 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc>:
10011998:	29403fcc 	andi	r5,r5,255
1001199c:	21800117 	ldw	r6,4(r4)
100119a0:	2940201c 	xori	r5,r5,128
100119a4:	defffd04 	addi	sp,sp,-12
100119a8:	297fe004 	addi	r5,r5,-128
100119ac:	d9400015 	stw	r5,0(sp)
100119b0:	01c00044 	movi	r7,1
100119b4:	000b883a 	mov	r5,zero
100119b8:	dc000115 	stw	r16,4(sp)
100119bc:	dfc00215 	stw	ra,8(sp)
100119c0:	2021883a 	mov	r16,r4
100119c4:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
100119c8:	8005883a 	mov	r2,r16
100119cc:	dfc00217 	ldw	ra,8(sp)
100119d0:	dc000117 	ldw	r16,4(sp)
100119d4:	dec00304 	addi	sp,sp,12
100119d8:	f800283a 	ret

100119dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc>:
100119dc:	defffe04 	addi	sp,sp,-8
100119e0:	dfc00115 	stw	ra,4(sp)
100119e4:	20c00117 	ldw	r3,4(r4)
100119e8:	19400a36 	bltu	r3,r5,10011a14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc+0x38>
100119ec:	39c03fcc 	andi	r7,r7,255
100119f0:	39c0201c 	xori	r7,r7,128
100119f4:	39ffe004 	addi	r7,r7,-128
100119f8:	d9c00015 	stw	r7,0(sp)
100119fc:	300f883a 	mov	r7,r6
10011a00:	000d883a 	mov	r6,zero
10011a04:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011a08:	dfc00117 	ldw	ra,4(sp)
10011a0c:	dec00204 	addi	sp,sp,8
10011a10:	f800283a 	ret
10011a14:	2805883a 	mov	r2,r5
10011a18:	010400b4 	movhi	r4,4098
10011a1c:	014400b4 	movhi	r5,4098
10011a20:	180f883a 	mov	r7,r3
10011a24:	100d883a 	mov	r6,r2
10011a28:	29561a04 	addi	r5,r5,22632
10011a2c:	2115dd04 	addi	r4,r4,22388
10011a30:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>:
10011a34:	defffc04 	addi	sp,sp,-16
10011a38:	dc000115 	stw	r16,4(sp)
10011a3c:	24000017 	ldw	r16,0(r4)
10011a40:	31803fcc 	andi	r6,r6,255
10011a44:	3180201c 	xori	r6,r6,128
10011a48:	2c21c83a 	sub	r16,r5,r16
10011a4c:	31bfe004 	addi	r6,r6,-128
10011a50:	d9800015 	stw	r6,0(sp)
10011a54:	01c00044 	movi	r7,1
10011a58:	000d883a 	mov	r6,zero
10011a5c:	800b883a 	mov	r5,r16
10011a60:	dc400215 	stw	r17,8(sp)
10011a64:	dfc00315 	stw	ra,12(sp)
10011a68:	2023883a 	mov	r17,r4
10011a6c:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011a70:	88800017 	ldw	r2,0(r17)
10011a74:	1405883a 	add	r2,r2,r16
10011a78:	dfc00317 	ldw	ra,12(sp)
10011a7c:	dc400217 	ldw	r17,8(sp)
10011a80:	dc000117 	ldw	r16,4(sp)
10011a84:	dec00404 	addi	sp,sp,16
10011a88:	f800283a 	ret

10011a8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc>:
10011a8c:	deffff04 	addi	sp,sp,-4
10011a90:	dfc00015 	stw	ra,0(sp)
10011a94:	20800117 	ldw	r2,4(r4)
10011a98:	d8c00117 	ldw	r3,4(sp)
10011a9c:	11400c36 	bltu	r2,r5,10011ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x44>
10011aa0:	1145c83a 	sub	r2,r2,r5
10011aa4:	30800836 	bltu	r6,r2,10011ac8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x3c>
10011aa8:	18c03fcc 	andi	r3,r3,255
10011aac:	18c0201c 	xori	r3,r3,128
10011ab0:	18ffe004 	addi	r3,r3,-128
10011ab4:	100d883a 	mov	r6,r2
10011ab8:	d8c00115 	stw	r3,4(sp)
10011abc:	dfc00017 	ldw	ra,0(sp)
10011ac0:	dec00104 	addi	sp,sp,4
10011ac4:	00117941 	jmpi	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011ac8:	3005883a 	mov	r2,r6
10011acc:	003ff606 	br	10011aa8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x1c>
10011ad0:	280d883a 	mov	r6,r5
10011ad4:	010400b4 	movhi	r4,4098
10011ad8:	014400b4 	movhi	r5,4098
10011adc:	100f883a 	mov	r7,r2
10011ae0:	29562004 	addi	r5,r5,22656
10011ae4:	2115dd04 	addi	r4,r4,22388
10011ae8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011aec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc>:
10011aec:	20800017 	ldw	r2,0(r4)
10011af0:	d8c00007 	ldb	r3,0(sp)
10011af4:	314dc83a 	sub	r6,r6,r5
10011af8:	288bc83a 	sub	r5,r5,r2
10011afc:	d8c00015 	stw	r3,0(sp)
10011b00:	00117941 	jmpi	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>

10011b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc>:
10011b04:	defffc04 	addi	sp,sp,-16
10011b08:	dc000115 	stw	r16,4(sp)
10011b0c:	24000017 	ldw	r16,0(r4)
10011b10:	39c03fcc 	andi	r7,r7,255
10011b14:	39c0201c 	xori	r7,r7,128
10011b18:	2c21c83a 	sub	r16,r5,r16
10011b1c:	39ffe004 	addi	r7,r7,-128
10011b20:	d9c00015 	stw	r7,0(sp)
10011b24:	800b883a 	mov	r5,r16
10011b28:	300f883a 	mov	r7,r6
10011b2c:	000d883a 	mov	r6,zero
10011b30:	dc400215 	stw	r17,8(sp)
10011b34:	dfc00315 	stw	ra,12(sp)
10011b38:	2023883a 	mov	r17,r4
10011b3c:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011b40:	88800017 	ldw	r2,0(r17)
10011b44:	1405883a 	add	r2,r2,r16
10011b48:	dfc00317 	ldw	ra,12(sp)
10011b4c:	dc400217 	ldw	r17,8(sp)
10011b50:	dc000117 	ldw	r16,4(sp)
10011b54:	dec00404 	addi	sp,sp,16
10011b58:	f800283a 	ret

10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
10011b5c:	defff504 	addi	sp,sp,-44
10011b60:	dc400315 	stw	r17,12(sp)
10011b64:	dfc00a15 	stw	ra,40(sp)
10011b68:	ddc00915 	stw	r23,36(sp)
10011b6c:	dd800815 	stw	r22,32(sp)
10011b70:	dd400715 	stw	r21,28(sp)
10011b74:	dd000615 	stw	r20,24(sp)
10011b78:	dcc00515 	stw	r19,20(sp)
10011b7c:	dc800415 	stw	r18,16(sp)
10011b80:	dc000215 	stw	r16,8(sp)
10011b84:	20c00117 	ldw	r3,4(r4)
10011b88:	00a00034 	movhi	r2,32768
10011b8c:	10bfffc4 	addi	r2,r2,-1
10011b90:	dc400b17 	ldw	r17,44(sp)
10011b94:	3085883a 	add	r2,r6,r2
10011b98:	10c5c83a 	sub	r2,r2,r3
10011b9c:	14408836 	bltu	r2,r17,10011dc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x264>
10011ba0:	20800017 	ldw	r2,0(r4)
10011ba4:	89adc83a 	sub	r22,r17,r6
10011ba8:	3025883a 	mov	r18,r6
10011bac:	21800204 	addi	r6,r4,8
10011bb0:	2021883a 	mov	r16,r4
10011bb4:	1dab883a 	add	r21,r3,r22
10011bb8:	11803e26 	beq	r2,r6,10011cb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x158>
10011bbc:	21000217 	ldw	r4,8(r4)
10011bc0:	25403436 	bltu	r4,r21,10011c94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x138>
10011bc4:	9167883a 	add	r19,r18,r5
10011bc8:	1169883a 	add	r20,r2,r5
10011bcc:	1ce7c83a 	sub	r19,r3,r19
10011bd0:	3880212e 	bgeu	r7,r2,10011c58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xfc>
10011bd4:	98000926 	beq	r19,zero,10011bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
10011bd8:	94400826 	beq	r18,r17,10011bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
10011bdc:	98800058 	cmpnei	r2,r19,1
10011be0:	a449883a 	add	r4,r20,r17
10011be4:	a48b883a 	add	r5,r20,r18
10011be8:	10004926 	beq	r2,zero,10011d10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1b4>
10011bec:	980d883a 	mov	r6,r19
10011bf0:	d9c00115 	stw	r7,4(sp)
10011bf4:	00157f00 	call	100157f0 <memmove>
10011bf8:	d9c00117 	ldw	r7,4(sp)
10011bfc:	88000626 	beq	r17,zero,10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011c00:	88800058 	cmpnei	r2,r17,1
10011c04:	10002826 	beq	r2,zero,10011ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
10011c08:	880d883a 	mov	r6,r17
10011c0c:	380b883a 	mov	r5,r7
10011c10:	a009883a 	mov	r4,r20
10011c14:	00156f00 	call	100156f0 <memcpy>
10011c18:	80800017 	ldw	r2,0(r16)
10011c1c:	85400115 	stw	r21,4(r16)
10011c20:	1545883a 	add	r2,r2,r21
10011c24:	10000005 	stb	zero,0(r2)
10011c28:	8005883a 	mov	r2,r16
10011c2c:	dfc00a17 	ldw	ra,40(sp)
10011c30:	ddc00917 	ldw	r23,36(sp)
10011c34:	dd800817 	ldw	r22,32(sp)
10011c38:	dd400717 	ldw	r21,28(sp)
10011c3c:	dd000617 	ldw	r20,24(sp)
10011c40:	dcc00517 	ldw	r19,20(sp)
10011c44:	dc800417 	ldw	r18,16(sp)
10011c48:	dc400317 	ldw	r17,12(sp)
10011c4c:	dc000217 	ldw	r16,8(sp)
10011c50:	dec00b04 	addi	sp,sp,44
10011c54:	f800283a 	ret
10011c58:	10c5883a 	add	r2,r2,r3
10011c5c:	11ffdd36 	bltu	r2,r7,10011bd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x78>
10011c60:	88001e26 	beq	r17,zero,10011cdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
10011c64:	9440152e 	bgeu	r18,r17,10011cbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x160>
10011c68:	a4af883a 	add	r23,r20,r18
10011c6c:	98001d1e 	bne	r19,zero,10011ce4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x188>
10011c70:	3c45883a 	add	r2,r7,r17
10011c74:	b8802e36 	bltu	r23,r2,10011d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1d4>
10011c78:	88800058 	cmpnei	r2,r17,1
10011c7c:	10000a26 	beq	r2,zero,10011ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
10011c80:	880d883a 	mov	r6,r17
10011c84:	380b883a 	mov	r5,r7
10011c88:	a009883a 	mov	r4,r20
10011c8c:	00157f00 	call	100157f0 <memmove>
10011c90:	003fe106 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011c94:	dc400015 	stw	r17,0(sp)
10011c98:	900d883a 	mov	r6,r18
10011c9c:	8009883a 	mov	r4,r16
10011ca0:	0010bfc0 	call	10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011ca4:	003fdc06 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011ca8:	38800003 	ldbu	r2,0(r7)
10011cac:	a0800005 	stb	r2,0(r20)
10011cb0:	003fd906 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011cb4:	010003c4 	movi	r4,15
10011cb8:	003fc106 	br	10011bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x64>
10011cbc:	88800058 	cmpnei	r2,r17,1
10011cc0:	10003326 	beq	r2,zero,10011d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x234>
10011cc4:	380b883a 	mov	r5,r7
10011cc8:	880d883a 	mov	r6,r17
10011ccc:	a009883a 	mov	r4,r20
10011cd0:	d9c00115 	stw	r7,4(sp)
10011cd4:	00157f00 	call	100157f0 <memmove>
10011cd8:	d9c00117 	ldw	r7,4(sp)
10011cdc:	983fce26 	beq	r19,zero,10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011ce0:	947fcd26 	beq	r18,r17,10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011ce4:	98800058 	cmpnei	r2,r19,1
10011ce8:	a449883a 	add	r4,r20,r17
10011cec:	a4af883a 	add	r23,r20,r18
10011cf0:	10000b26 	beq	r2,zero,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1c4>
10011cf4:	980d883a 	mov	r6,r19
10011cf8:	b80b883a 	mov	r5,r23
10011cfc:	d9c00115 	stw	r7,4(sp)
10011d00:	00157f00 	call	100157f0 <memmove>
10011d04:	d9c00117 	ldw	r7,4(sp)
10011d08:	947fd936 	bltu	r18,r17,10011c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
10011d0c:	003fc206 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d10:	28800003 	ldbu	r2,0(r5)
10011d14:	20800005 	stb	r2,0(r4)
10011d18:	883fbf26 	beq	r17,zero,10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d1c:	003fb806 	br	10011c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa4>
10011d20:	b8800003 	ldbu	r2,0(r23)
10011d24:	20800005 	stb	r2,0(r4)
10011d28:	947fd136 	bltu	r18,r17,10011c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
10011d2c:	003fba06 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d30:	3dc00736 	bltu	r7,r23,10011d50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1f4>
10011d34:	88800058 	cmpnei	r2,r17,1
10011d38:	3d8b883a 	add	r5,r7,r22
10011d3c:	10001a26 	beq	r2,zero,10011da8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x24c>
10011d40:	880d883a 	mov	r6,r17
10011d44:	a009883a 	mov	r4,r20
10011d48:	00156f00 	call	100156f0 <memcpy>
10011d4c:	003fb206 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d50:	b9efc83a 	sub	r23,r23,r7
10011d54:	b8800058 	cmpnei	r2,r23,1
10011d58:	10001026 	beq	r2,zero,10011d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x240>
10011d5c:	b8000426 	beq	r23,zero,10011d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
10011d60:	b80d883a 	mov	r6,r23
10011d64:	380b883a 	mov	r5,r7
10011d68:	a009883a 	mov	r4,r20
10011d6c:	00157f00 	call	100157f0 <memmove>
10011d70:	8dcdc83a 	sub	r6,r17,r23
10011d74:	30800058 	cmpnei	r2,r6,1
10011d78:	a5c9883a 	add	r4,r20,r23
10011d7c:	a44b883a 	add	r5,r20,r17
10011d80:	10000c26 	beq	r2,zero,10011db4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x258>
10011d84:	303fa426 	beq	r6,zero,10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d88:	00156f00 	call	100156f0 <memcpy>
10011d8c:	003fa206 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d90:	38800003 	ldbu	r2,0(r7)
10011d94:	a0800005 	stb	r2,0(r20)
10011d98:	003fd006 	br	10011cdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
10011d9c:	38800003 	ldbu	r2,0(r7)
10011da0:	a0800005 	stb	r2,0(r20)
10011da4:	003ff206 	br	10011d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
10011da8:	28800003 	ldbu	r2,0(r5)
10011dac:	a0800005 	stb	r2,0(r20)
10011db0:	003f9906 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011db4:	28800003 	ldbu	r2,0(r5)
10011db8:	20800005 	stb	r2,0(r4)
10011dbc:	003f9606 	br	10011c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011dc0:	010400b4 	movhi	r4,4098
10011dc4:	21166f04 	addi	r4,r4,22972
10011dc8:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

10011dcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj>:
10011dcc:	defffe04 	addi	sp,sp,-8
10011dd0:	dfc00115 	stw	ra,4(sp)
10011dd4:	28800117 	ldw	r2,4(r5)
10011dd8:	22000117 	ldw	r8,4(r4)
10011ddc:	29400017 	ldw	r5,0(r5)
10011de0:	11800d36 	bltu	r2,r6,10011e18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x4c>
10011de4:	1185c83a 	sub	r2,r2,r6
10011de8:	2987883a 	add	r3,r5,r6
10011dec:	38800836 	bltu	r7,r2,10011e10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x44>
10011df0:	d8800015 	stw	r2,0(sp)
10011df4:	180f883a 	mov	r7,r3
10011df8:	400d883a 	mov	r6,r8
10011dfc:	000b883a 	mov	r5,zero
10011e00:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011e04:	dfc00117 	ldw	ra,4(sp)
10011e08:	dec00204 	addi	sp,sp,8
10011e0c:	f800283a 	ret
10011e10:	3805883a 	mov	r2,r7
10011e14:	003ff606 	br	10011df0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x24>
10011e18:	014400b4 	movhi	r5,4098
10011e1c:	010400b4 	movhi	r4,4098
10011e20:	100f883a 	mov	r7,r2
10011e24:	29562604 	addi	r5,r5,22680
10011e28:	2115dd04 	addi	r4,r4,22388
10011e2c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011e30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj>:
10011e30:	defffe04 	addi	sp,sp,-8
10011e34:	dfc00115 	stw	ra,4(sp)
10011e38:	d9800015 	stw	r6,0(sp)
10011e3c:	21800117 	ldw	r6,4(r4)
10011e40:	280f883a 	mov	r7,r5
10011e44:	000b883a 	mov	r5,zero
10011e48:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011e4c:	dfc00117 	ldw	ra,4(sp)
10011e50:	dec00204 	addi	sp,sp,8
10011e54:	f800283a 	ret

10011e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE>:
10011e58:	defffd04 	addi	sp,sp,-12
10011e5c:	d9800015 	stw	r6,0(sp)
10011e60:	21800117 	ldw	r6,4(r4)
10011e64:	280f883a 	mov	r7,r5
10011e68:	000b883a 	mov	r5,zero
10011e6c:	dc000115 	stw	r16,4(sp)
10011e70:	dfc00215 	stw	ra,8(sp)
10011e74:	2021883a 	mov	r16,r4
10011e78:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011e7c:	8005883a 	mov	r2,r16
10011e80:	dfc00217 	ldw	ra,8(sp)
10011e84:	dc000117 	ldw	r16,4(sp)
10011e88:	dec00304 	addi	sp,sp,12
10011e8c:	f800283a 	ret

10011e90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE>:
10011e90:	defffe04 	addi	sp,sp,-8
10011e94:	dfc00115 	stw	ra,4(sp)
10011e98:	d9800015 	stw	r6,0(sp)
10011e9c:	21800117 	ldw	r6,4(r4)
10011ea0:	280f883a 	mov	r7,r5
10011ea4:	000b883a 	mov	r5,zero
10011ea8:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011eac:	dfc00117 	ldw	ra,4(sp)
10011eb0:	dec00204 	addi	sp,sp,8
10011eb4:	f800283a 	ret

10011eb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
10011eb8:	defffc04 	addi	sp,sp,-16
10011ebc:	dc000115 	stw	r16,4(sp)
10011ec0:	2021883a 	mov	r16,r4
10011ec4:	2809883a 	mov	r4,r5
10011ec8:	dfc00315 	stw	ra,12(sp)
10011ecc:	dc400215 	stw	r17,8(sp)
10011ed0:	2823883a 	mov	r17,r5
10011ed4:	00163ac0 	call	100163ac <strlen>
10011ed8:	81800117 	ldw	r6,4(r16)
10011edc:	880f883a 	mov	r7,r17
10011ee0:	d8800015 	stw	r2,0(sp)
10011ee4:	000b883a 	mov	r5,zero
10011ee8:	8009883a 	mov	r4,r16
10011eec:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011ef0:	dfc00317 	ldw	ra,12(sp)
10011ef4:	dc400217 	ldw	r17,8(sp)
10011ef8:	dc000117 	ldw	r16,4(sp)
10011efc:	dec00404 	addi	sp,sp,16
10011f00:	f800283a 	ret

10011f04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
10011f04:	deffff04 	addi	sp,sp,-4
10011f08:	dfc00015 	stw	ra,0(sp)
10011f0c:	20800117 	ldw	r2,4(r4)
10011f10:	d8c00117 	ldw	r3,4(sp)
10011f14:	11400936 	bltu	r2,r5,10011f3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x38>
10011f18:	1145c83a 	sub	r2,r2,r5
10011f1c:	30800536 	bltu	r6,r2,10011f34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x30>
10011f20:	100d883a 	mov	r6,r2
10011f24:	d8c00115 	stw	r3,4(sp)
10011f28:	dfc00017 	ldw	ra,0(sp)
10011f2c:	dec00104 	addi	sp,sp,4
10011f30:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011f34:	3005883a 	mov	r2,r6
10011f38:	003ff906 	br	10011f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x1c>
10011f3c:	280d883a 	mov	r6,r5
10011f40:	010400b4 	movhi	r4,4098
10011f44:	014400b4 	movhi	r5,4098
10011f48:	100f883a 	mov	r7,r2
10011f4c:	29562004 	addi	r5,r5,22656
10011f50:	2115dd04 	addi	r4,r4,22388
10011f54:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011f58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
10011f58:	defffc04 	addi	sp,sp,-16
10011f5c:	dc000115 	stw	r16,4(sp)
10011f60:	2021883a 	mov	r16,r4
10011f64:	2809883a 	mov	r4,r5
10011f68:	dfc00315 	stw	ra,12(sp)
10011f6c:	dc400215 	stw	r17,8(sp)
10011f70:	2823883a 	mov	r17,r5
10011f74:	00163ac0 	call	100163ac <strlen>
10011f78:	81800117 	ldw	r6,4(r16)
10011f7c:	880f883a 	mov	r7,r17
10011f80:	d8800015 	stw	r2,0(sp)
10011f84:	000b883a 	mov	r5,zero
10011f88:	8009883a 	mov	r4,r16
10011f8c:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011f90:	dfc00317 	ldw	ra,12(sp)
10011f94:	dc400217 	ldw	r17,8(sp)
10011f98:	dc000117 	ldw	r16,4(sp)
10011f9c:	dec00404 	addi	sp,sp,16
10011fa0:	f800283a 	ret

10011fa4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj>:
10011fa4:	defffe04 	addi	sp,sp,-8
10011fa8:	dfc00115 	stw	ra,4(sp)
10011fac:	20c00117 	ldw	r3,4(r4)
10011fb0:	19400736 	bltu	r3,r5,10011fd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj+0x2c>
10011fb4:	d9c00015 	stw	r7,0(sp)
10011fb8:	300f883a 	mov	r7,r6
10011fbc:	000d883a 	mov	r6,zero
10011fc0:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011fc4:	dfc00117 	ldw	ra,4(sp)
10011fc8:	dec00204 	addi	sp,sp,8
10011fcc:	f800283a 	ret
10011fd0:	2805883a 	mov	r2,r5
10011fd4:	010400b4 	movhi	r4,4098
10011fd8:	014400b4 	movhi	r5,4098
10011fdc:	180f883a 	mov	r7,r3
10011fe0:	100d883a 	mov	r6,r2
10011fe4:	29562004 	addi	r5,r5,22656
10011fe8:	2115dd04 	addi	r4,r4,22388
10011fec:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10011ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_>:
10011ff0:	defffe04 	addi	sp,sp,-8
10011ff4:	dfc00115 	stw	ra,4(sp)
10011ff8:	20800117 	ldw	r2,4(r4)
10011ffc:	2807883a 	mov	r3,r5
10012000:	39400017 	ldw	r5,0(r7)
10012004:	39c00117 	ldw	r7,4(r7)
10012008:	10c00c36 	bltu	r2,r3,1001203c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x4c>
1001200c:	10c5c83a 	sub	r2,r2,r3
10012010:	30800836 	bltu	r6,r2,10012034 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x44>
10012014:	d9c00015 	stw	r7,0(sp)
10012018:	100d883a 	mov	r6,r2
1001201c:	280f883a 	mov	r7,r5
10012020:	180b883a 	mov	r5,r3
10012024:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012028:	dfc00117 	ldw	ra,4(sp)
1001202c:	dec00204 	addi	sp,sp,8
10012030:	f800283a 	ret
10012034:	3005883a 	mov	r2,r6
10012038:	003ff606 	br	10012014 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x24>
1001203c:	014400b4 	movhi	r5,4098
10012040:	010400b4 	movhi	r4,4098
10012044:	100f883a 	mov	r7,r2
10012048:	180d883a 	mov	r6,r3
1001204c:	29562004 	addi	r5,r5,22656
10012050:	2115dd04 	addi	r4,r4,22388
10012054:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012058 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
10012058:	defffe04 	addi	sp,sp,-8
1001205c:	dfc00115 	stw	ra,4(sp)
10012060:	20c00117 	ldw	r3,4(r4)
10012064:	31c00017 	ldw	r7,0(r6)
10012068:	31800117 	ldw	r6,4(r6)
1001206c:	19400636 	bltu	r3,r5,10012088 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_+0x30>
10012070:	d9800015 	stw	r6,0(sp)
10012074:	000d883a 	mov	r6,zero
10012078:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001207c:	dfc00117 	ldw	ra,4(sp)
10012080:	dec00204 	addi	sp,sp,8
10012084:	f800283a 	ret
10012088:	2805883a 	mov	r2,r5
1001208c:	010400b4 	movhi	r4,4098
10012090:	014400b4 	movhi	r5,4098
10012094:	180f883a 	mov	r7,r3
10012098:	100d883a 	mov	r6,r2
1001209c:	29562004 	addi	r5,r5,22656
100120a0:	2115dd04 	addi	r4,r4,22388
100120a4:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100120a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc>:
100120a8:	defffa04 	addi	sp,sp,-24
100120ac:	dc400215 	stw	r17,8(sp)
100120b0:	2023883a 	mov	r17,r4
100120b4:	3809883a 	mov	r4,r7
100120b8:	dcc00415 	stw	r19,16(sp)
100120bc:	dc800315 	stw	r18,12(sp)
100120c0:	dc000115 	stw	r16,4(sp)
100120c4:	3025883a 	mov	r18,r6
100120c8:	dfc00515 	stw	ra,20(sp)
100120cc:	3827883a 	mov	r19,r7
100120d0:	2821883a 	mov	r16,r5
100120d4:	00163ac0 	call	100163ac <strlen>
100120d8:	89800117 	ldw	r6,4(r17)
100120dc:	34001036 	bltu	r6,r16,10012120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x78>
100120e0:	340dc83a 	sub	r6,r6,r16
100120e4:	91800c36 	bltu	r18,r6,10012118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x70>
100120e8:	d8800015 	stw	r2,0(sp)
100120ec:	980f883a 	mov	r7,r19
100120f0:	800b883a 	mov	r5,r16
100120f4:	8809883a 	mov	r4,r17
100120f8:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100120fc:	dfc00517 	ldw	ra,20(sp)
10012100:	dcc00417 	ldw	r19,16(sp)
10012104:	dc800317 	ldw	r18,12(sp)
10012108:	dc400217 	ldw	r17,8(sp)
1001210c:	dc000117 	ldw	r16,4(sp)
10012110:	dec00604 	addi	sp,sp,24
10012114:	f800283a 	ret
10012118:	900d883a 	mov	r6,r18
1001211c:	003ff206 	br	100120e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x40>
10012120:	014400b4 	movhi	r5,4098
10012124:	010400b4 	movhi	r4,4098
10012128:	300f883a 	mov	r7,r6
1001212c:	29562004 	addi	r5,r5,22656
10012130:	800d883a 	mov	r6,r16
10012134:	2115dd04 	addi	r4,r4,22388
10012138:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

1001213c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
1001213c:	defffb04 	addi	sp,sp,-20
10012140:	dc400215 	stw	r17,8(sp)
10012144:	2023883a 	mov	r17,r4
10012148:	3009883a 	mov	r4,r6
1001214c:	dc800315 	stw	r18,12(sp)
10012150:	dc000115 	stw	r16,4(sp)
10012154:	dfc00415 	stw	ra,16(sp)
10012158:	3025883a 	mov	r18,r6
1001215c:	2821883a 	mov	r16,r5
10012160:	00163ac0 	call	100163ac <strlen>
10012164:	89c00117 	ldw	r7,4(r17)
10012168:	3c000c36 	bltu	r7,r16,1001219c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc+0x60>
1001216c:	d8800015 	stw	r2,0(sp)
10012170:	900f883a 	mov	r7,r18
10012174:	000d883a 	mov	r6,zero
10012178:	800b883a 	mov	r5,r16
1001217c:	8809883a 	mov	r4,r17
10012180:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012184:	dfc00417 	ldw	ra,16(sp)
10012188:	dc800317 	ldw	r18,12(sp)
1001218c:	dc400217 	ldw	r17,8(sp)
10012190:	dc000117 	ldw	r16,4(sp)
10012194:	dec00504 	addi	sp,sp,20
10012198:	f800283a 	ret
1001219c:	014400b4 	movhi	r5,4098
100121a0:	010400b4 	movhi	r4,4098
100121a4:	800d883a 	mov	r6,r16
100121a8:	29562004 	addi	r5,r5,22656
100121ac:	2115dd04 	addi	r4,r4,22388
100121b0:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100121b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j>:
100121b4:	deffff04 	addi	sp,sp,-4
100121b8:	dfc00015 	stw	ra,0(sp)
100121bc:	20c00017 	ldw	r3,0(r4)
100121c0:	20800117 	ldw	r2,4(r4)
100121c4:	da000117 	ldw	r8,4(sp)
100121c8:	28c7c83a 	sub	r3,r5,r3
100121cc:	314bc83a 	sub	r5,r6,r5
100121d0:	10c00936 	bltu	r2,r3,100121f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x44>
100121d4:	10cdc83a 	sub	r6,r2,r3
100121d8:	29800536 	bltu	r5,r6,100121f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x3c>
100121dc:	180b883a 	mov	r5,r3
100121e0:	da000115 	stw	r8,4(sp)
100121e4:	dfc00017 	ldw	ra,0(sp)
100121e8:	dec00104 	addi	sp,sp,4
100121ec:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100121f0:	280d883a 	mov	r6,r5
100121f4:	003ff906 	br	100121dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x28>
100121f8:	014400b4 	movhi	r5,4098
100121fc:	010400b4 	movhi	r4,4098
10012200:	100f883a 	mov	r7,r2
10012204:	180d883a 	mov	r6,r3
10012208:	29562004 	addi	r5,r5,22656
1001220c:	2115dd04 	addi	r4,r4,22388
10012210:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012214 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_>:
10012214:	deffff04 	addi	sp,sp,-4
10012218:	dfc00015 	stw	ra,0(sp)
1001221c:	20c00017 	ldw	r3,0(r4)
10012220:	20800117 	ldw	r2,4(r4)
10012224:	28c7c83a 	sub	r3,r5,r3
10012228:	314bc83a 	sub	r5,r6,r5
1001222c:	d9800117 	ldw	r6,4(sp)
10012230:	31d1c83a 	sub	r8,r6,r7
10012234:	10c00936 	bltu	r2,r3,1001225c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x48>
10012238:	10cdc83a 	sub	r6,r2,r3
1001223c:	29800536 	bltu	r5,r6,10012254 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x40>
10012240:	180b883a 	mov	r5,r3
10012244:	da000115 	stw	r8,4(sp)
10012248:	dfc00017 	ldw	ra,0(sp)
1001224c:	dec00104 	addi	sp,sp,4
10012250:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012254:	280d883a 	mov	r6,r5
10012258:	003ff906 	br	10012240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x2c>
1001225c:	014400b4 	movhi	r5,4098
10012260:	010400b4 	movhi	r4,4098
10012264:	100f883a 	mov	r7,r2
10012268:	180d883a 	mov	r6,r3
1001226c:	29562004 	addi	r5,r5,22656
10012270:	2115dd04 	addi	r4,r4,22388
10012274:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_>:
10012278:	deffff04 	addi	sp,sp,-4
1001227c:	dfc00015 	stw	ra,0(sp)
10012280:	20c00017 	ldw	r3,0(r4)
10012284:	20800117 	ldw	r2,4(r4)
10012288:	28c7c83a 	sub	r3,r5,r3
1001228c:	314bc83a 	sub	r5,r6,r5
10012290:	d9800117 	ldw	r6,4(sp)
10012294:	31d1c83a 	sub	r8,r6,r7
10012298:	10c00936 	bltu	r2,r3,100122c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x48>
1001229c:	10cdc83a 	sub	r6,r2,r3
100122a0:	29800536 	bltu	r5,r6,100122b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x40>
100122a4:	180b883a 	mov	r5,r3
100122a8:	da000115 	stw	r8,4(sp)
100122ac:	dfc00017 	ldw	ra,0(sp)
100122b0:	dec00104 	addi	sp,sp,4
100122b4:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100122b8:	280d883a 	mov	r6,r5
100122bc:	003ff906 	br	100122a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x2c>
100122c0:	014400b4 	movhi	r5,4098
100122c4:	010400b4 	movhi	r4,4098
100122c8:	100f883a 	mov	r7,r2
100122cc:	180d883a 	mov	r6,r3
100122d0:	29562004 	addi	r5,r5,22656
100122d4:	2115dd04 	addi	r4,r4,22388
100122d8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100122dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE>:
100122dc:	defffe04 	addi	sp,sp,-8
100122e0:	dfc00015 	stw	ra,0(sp)
100122e4:	20c00017 	ldw	r3,0(r4)
100122e8:	20800117 	ldw	r2,4(r4)
100122ec:	d9c00115 	stw	r7,4(sp)
100122f0:	28c7c83a 	sub	r3,r5,r3
100122f4:	da000217 	ldw	r8,8(sp)
100122f8:	314bc83a 	sub	r5,r6,r5
100122fc:	10c00936 	bltu	r2,r3,10012324 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x48>
10012300:	10cdc83a 	sub	r6,r2,r3
10012304:	29800536 	bltu	r5,r6,1001231c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x40>
10012308:	180b883a 	mov	r5,r3
1001230c:	da000215 	stw	r8,8(sp)
10012310:	dfc00017 	ldw	ra,0(sp)
10012314:	dec00204 	addi	sp,sp,8
10012318:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001231c:	280d883a 	mov	r6,r5
10012320:	003ff906 	br	10012308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x2c>
10012324:	014400b4 	movhi	r5,4098
10012328:	010400b4 	movhi	r4,4098
1001232c:	100f883a 	mov	r7,r2
10012330:	180d883a 	mov	r6,r3
10012334:	29562004 	addi	r5,r5,22656
10012338:	2115dd04 	addi	r4,r4,22388
1001233c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_>:
10012340:	defffe04 	addi	sp,sp,-8
10012344:	dfc00115 	stw	ra,4(sp)
10012348:	20c00017 	ldw	r3,0(r4)
1001234c:	20800117 	ldw	r2,4(r4)
10012350:	3a000017 	ldw	r8,0(r7)
10012354:	28c7c83a 	sub	r3,r5,r3
10012358:	39c00117 	ldw	r7,4(r7)
1001235c:	314bc83a 	sub	r5,r6,r5
10012360:	10c00b36 	bltu	r2,r3,10012390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x50>
10012364:	10cdc83a 	sub	r6,r2,r3
10012368:	29800736 	bltu	r5,r6,10012388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x48>
1001236c:	d9c00015 	stw	r7,0(sp)
10012370:	180b883a 	mov	r5,r3
10012374:	400f883a 	mov	r7,r8
10012378:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001237c:	dfc00117 	ldw	ra,4(sp)
10012380:	dec00204 	addi	sp,sp,8
10012384:	f800283a 	ret
10012388:	280d883a 	mov	r6,r5
1001238c:	003ff706 	br	1001236c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x2c>
10012390:	014400b4 	movhi	r5,4098
10012394:	010400b4 	movhi	r4,4098
10012398:	100f883a 	mov	r7,r2
1001239c:	180d883a 	mov	r6,r3
100123a0:	29562004 	addi	r5,r5,22656
100123a4:	2115dd04 	addi	r4,r4,22388
100123a8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100123ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_>:
100123ac:	deffff04 	addi	sp,sp,-4
100123b0:	dfc00015 	stw	ra,0(sp)
100123b4:	20c00017 	ldw	r3,0(r4)
100123b8:	20800117 	ldw	r2,4(r4)
100123bc:	28c7c83a 	sub	r3,r5,r3
100123c0:	314bc83a 	sub	r5,r6,r5
100123c4:	d9800117 	ldw	r6,4(sp)
100123c8:	31d1c83a 	sub	r8,r6,r7
100123cc:	10c00936 	bltu	r2,r3,100123f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x48>
100123d0:	10cdc83a 	sub	r6,r2,r3
100123d4:	29800536 	bltu	r5,r6,100123ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x40>
100123d8:	180b883a 	mov	r5,r3
100123dc:	da000115 	stw	r8,4(sp)
100123e0:	dfc00017 	ldw	ra,0(sp)
100123e4:	dec00104 	addi	sp,sp,4
100123e8:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100123ec:	280d883a 	mov	r6,r5
100123f0:	003ff906 	br	100123d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x2c>
100123f4:	014400b4 	movhi	r5,4098
100123f8:	010400b4 	movhi	r4,4098
100123fc:	100f883a 	mov	r7,r2
10012400:	180d883a 	mov	r6,r3
10012404:	29562004 	addi	r5,r5,22656
10012408:	2115dd04 	addi	r4,r4,22388
1001240c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_>:
10012410:	deffff04 	addi	sp,sp,-4
10012414:	dfc00015 	stw	ra,0(sp)
10012418:	20c00017 	ldw	r3,0(r4)
1001241c:	20800117 	ldw	r2,4(r4)
10012420:	28c7c83a 	sub	r3,r5,r3
10012424:	314bc83a 	sub	r5,r6,r5
10012428:	d9800117 	ldw	r6,4(sp)
1001242c:	31d1c83a 	sub	r8,r6,r7
10012430:	10c00936 	bltu	r2,r3,10012458 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x48>
10012434:	10cdc83a 	sub	r6,r2,r3
10012438:	29800536 	bltu	r5,r6,10012450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x40>
1001243c:	180b883a 	mov	r5,r3
10012440:	da000115 	stw	r8,4(sp)
10012444:	dfc00017 	ldw	ra,0(sp)
10012448:	dec00104 	addi	sp,sp,4
1001244c:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012450:	280d883a 	mov	r6,r5
10012454:	003ff906 	br	1001243c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x2c>
10012458:	014400b4 	movhi	r5,4098
1001245c:	010400b4 	movhi	r4,4098
10012460:	100f883a 	mov	r7,r2
10012464:	180d883a 	mov	r6,r3
10012468:	29562004 	addi	r5,r5,22656
1001246c:	2115dd04 	addi	r4,r4,22388
10012470:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012474 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_>:
10012474:	defffa04 	addi	sp,sp,-24
10012478:	dc800315 	stw	r18,12(sp)
1001247c:	2025883a 	mov	r18,r4
10012480:	3809883a 	mov	r4,r7
10012484:	dcc00415 	stw	r19,16(sp)
10012488:	dc400215 	stw	r17,8(sp)
1001248c:	dc000115 	stw	r16,4(sp)
10012490:	3023883a 	mov	r17,r6
10012494:	2821883a 	mov	r16,r5
10012498:	dfc00515 	stw	ra,20(sp)
1001249c:	3827883a 	mov	r19,r7
100124a0:	00163ac0 	call	100163ac <strlen>
100124a4:	90c00017 	ldw	r3,0(r18)
100124a8:	91800117 	ldw	r6,4(r18)
100124ac:	8c09c83a 	sub	r4,r17,r16
100124b0:	80c7c83a 	sub	r3,r16,r3
100124b4:	30c01036 	bltu	r6,r3,100124f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x84>
100124b8:	30cdc83a 	sub	r6,r6,r3
100124bc:	21800c36 	bltu	r4,r6,100124f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x7c>
100124c0:	d8800015 	stw	r2,0(sp)
100124c4:	980f883a 	mov	r7,r19
100124c8:	180b883a 	mov	r5,r3
100124cc:	9009883a 	mov	r4,r18
100124d0:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100124d4:	dfc00517 	ldw	ra,20(sp)
100124d8:	dcc00417 	ldw	r19,16(sp)
100124dc:	dc800317 	ldw	r18,12(sp)
100124e0:	dc400217 	ldw	r17,8(sp)
100124e4:	dc000117 	ldw	r16,4(sp)
100124e8:	dec00604 	addi	sp,sp,24
100124ec:	f800283a 	ret
100124f0:	200d883a 	mov	r6,r4
100124f4:	003ff206 	br	100124c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x4c>
100124f8:	014400b4 	movhi	r5,4098
100124fc:	010400b4 	movhi	r4,4098
10012500:	300f883a 	mov	r7,r6
10012504:	29562004 	addi	r5,r5,22656
10012508:	180d883a 	mov	r6,r3
1001250c:	2115dd04 	addi	r4,r4,22388
10012510:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012514 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE>:
10012514:	defffe04 	addi	sp,sp,-8
10012518:	dfc00115 	stw	ra,4(sp)
1001251c:	20800017 	ldw	r2,0(r4)
10012520:	20c00117 	ldw	r3,4(r4)
10012524:	2885c83a 	sub	r2,r5,r2
10012528:	18800836 	bltu	r3,r2,1001254c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE+0x38>
1001252c:	d9c00015 	stw	r7,0(sp)
10012530:	100b883a 	mov	r5,r2
10012534:	300f883a 	mov	r7,r6
10012538:	000d883a 	mov	r6,zero
1001253c:	0011b5c0 	call	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012540:	dfc00117 	ldw	ra,4(sp)
10012544:	dec00204 	addi	sp,sp,8
10012548:	f800283a 	ret
1001254c:	014400b4 	movhi	r5,4098
10012550:	010400b4 	movhi	r4,4098
10012554:	180f883a 	mov	r7,r3
10012558:	100d883a 	mov	r6,r2
1001255c:	29562004 	addi	r5,r5,22656
10012560:	2115dd04 	addi	r4,r4,22388
10012564:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012568 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj>:
10012568:	deffff04 	addi	sp,sp,-4
1001256c:	dfc00015 	stw	ra,0(sp)
10012570:	30800117 	ldw	r2,4(r6)
10012574:	3807883a 	mov	r3,r7
10012578:	2811883a 	mov	r8,r5
1001257c:	31c00017 	ldw	r7,0(r6)
10012580:	d9400117 	ldw	r5,4(sp)
10012584:	10c00d36 	bltu	r2,r3,100125bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x54>
10012588:	10c5c83a 	sub	r2,r2,r3
1001258c:	38cf883a 	add	r7,r7,r3
10012590:	28800836 	bltu	r5,r2,100125b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x4c>
10012594:	20c00117 	ldw	r3,4(r4)
10012598:	1a000f36 	bltu	r3,r8,100125d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x70>
1001259c:	000d883a 	mov	r6,zero
100125a0:	400b883a 	mov	r5,r8
100125a4:	d8800115 	stw	r2,4(sp)
100125a8:	dfc00017 	ldw	ra,0(sp)
100125ac:	dec00104 	addi	sp,sp,4
100125b0:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100125b4:	2805883a 	mov	r2,r5
100125b8:	003ff606 	br	10012594 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x2c>
100125bc:	014400b4 	movhi	r5,4098
100125c0:	010400b4 	movhi	r4,4098
100125c4:	100f883a 	mov	r7,r2
100125c8:	180d883a 	mov	r6,r3
100125cc:	29561a04 	addi	r5,r5,22632
100125d0:	2115dd04 	addi	r4,r4,22388
100125d4:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
100125d8:	014400b4 	movhi	r5,4098
100125dc:	010400b4 	movhi	r4,4098
100125e0:	180f883a 	mov	r7,r3
100125e4:	400d883a 	mov	r6,r8
100125e8:	29562004 	addi	r5,r5,22656
100125ec:	2115dd04 	addi	r4,r4,22388
100125f0:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100125f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj>:
100125f4:	deffff04 	addi	sp,sp,-4
100125f8:	dfc00015 	stw	ra,0(sp)
100125fc:	38800117 	ldw	r2,4(r7)
10012600:	d8c00117 	ldw	r3,4(sp)
10012604:	2811883a 	mov	r8,r5
10012608:	39c00017 	ldw	r7,0(r7)
1001260c:	d9400217 	ldw	r5,8(sp)
10012610:	10c01136 	bltu	r2,r3,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x64>
10012614:	10c5c83a 	sub	r2,r2,r3
10012618:	38cf883a 	add	r7,r7,r3
1001261c:	28800a36 	bltu	r5,r2,10012648 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x54>
10012620:	20c00117 	ldw	r3,4(r4)
10012624:	1a001336 	bltu	r3,r8,10012674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x80>
10012628:	1a07c83a 	sub	r3,r3,r8
1001262c:	30c00836 	bltu	r6,r3,10012650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x5c>
10012630:	180d883a 	mov	r6,r3
10012634:	400b883a 	mov	r5,r8
10012638:	d8800115 	stw	r2,4(sp)
1001263c:	dfc00017 	ldw	ra,0(sp)
10012640:	dec00104 	addi	sp,sp,4
10012644:	0011b5c1 	jmpi	10011b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012648:	2805883a 	mov	r2,r5
1001264c:	003ff406 	br	10012620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x2c>
10012650:	3007883a 	mov	r3,r6
10012654:	003ff606 	br	10012630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x3c>
10012658:	014400b4 	movhi	r5,4098
1001265c:	010400b4 	movhi	r4,4098
10012660:	100f883a 	mov	r7,r2
10012664:	180d883a 	mov	r6,r3
10012668:	29562004 	addi	r5,r5,22656
1001266c:	2115dd04 	addi	r4,r4,22388
10012670:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
10012674:	014400b4 	movhi	r5,4098
10012678:	010400b4 	movhi	r4,4098
1001267c:	180f883a 	mov	r7,r3
10012680:	400d883a 	mov	r6,r8
10012684:	29562004 	addi	r5,r5,22656
10012688:	2115dd04 	addi	r4,r4,22388
1001268c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
10012690:	defffc04 	addi	sp,sp,-16
10012694:	dc400215 	stw	r17,8(sp)
10012698:	dc000115 	stw	r16,4(sp)
1001269c:	dfc00315 	stw	ra,12(sp)
100126a0:	2021883a 	mov	r16,r4
100126a4:	20800117 	ldw	r2,4(r4)
100126a8:	21000017 	ldw	r4,0(r4)
100126ac:	80c00204 	addi	r3,r16,8
100126b0:	11a3883a 	add	r17,r2,r6
100126b4:	20c01926 	beq	r4,r3,1001271c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x8c>
100126b8:	80c00217 	ldw	r3,8(r16)
100126bc:	1c400f36 	bltu	r3,r17,100126fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x6c>
100126c0:	30000526 	beq	r6,zero,100126d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
100126c4:	30c00058 	cmpnei	r3,r6,1
100126c8:	2089883a 	add	r4,r4,r2
100126cc:	18001526 	beq	r3,zero,10012724 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x94>
100126d0:	00156f00 	call	100156f0 <memcpy>
100126d4:	81000017 	ldw	r4,0(r16)
100126d8:	84400115 	stw	r17,4(r16)
100126dc:	2449883a 	add	r4,r4,r17
100126e0:	8005883a 	mov	r2,r16
100126e4:	20000005 	stb	zero,0(r4)
100126e8:	dfc00317 	ldw	ra,12(sp)
100126ec:	dc400217 	ldw	r17,8(sp)
100126f0:	dc000117 	ldw	r16,4(sp)
100126f4:	dec00404 	addi	sp,sp,16
100126f8:	f800283a 	ret
100126fc:	d9800015 	stw	r6,0(sp)
10012700:	280f883a 	mov	r7,r5
10012704:	8009883a 	mov	r4,r16
10012708:	000d883a 	mov	r6,zero
1001270c:	100b883a 	mov	r5,r2
10012710:	0010bfc0 	call	10010bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10012714:	81000017 	ldw	r4,0(r16)
10012718:	003fef06 	br	100126d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
1001271c:	00c003c4 	movi	r3,15
10012720:	003fe606 	br	100126bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x2c>
10012724:	28800003 	ldbu	r2,0(r5)
10012728:	20800005 	stb	r2,0(r4)
1001272c:	81000017 	ldw	r4,0(r16)
10012730:	003fe906 	br	100126d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>

10012734 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
10012734:	29800117 	ldw	r6,4(r5)
10012738:	29400017 	ldw	r5,0(r5)
1001273c:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

10012740 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
10012740:	29800117 	ldw	r6,4(r5)
10012744:	29400017 	ldw	r5,0(r5)
10012748:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

1001274c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj>:
1001274c:	28800117 	ldw	r2,4(r5)
10012750:	29400017 	ldw	r5,0(r5)
10012754:	11800836 	bltu	r2,r6,10012778 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x2c>
10012758:	3007883a 	mov	r3,r6
1001275c:	118dc83a 	sub	r6,r2,r6
10012760:	39800236 	bltu	r7,r6,1001276c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x20>
10012764:	28cb883a 	add	r5,r5,r3
10012768:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
1001276c:	380d883a 	mov	r6,r7
10012770:	28cb883a 	add	r5,r5,r3
10012774:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012778:	014400b4 	movhi	r5,4098
1001277c:	010400b4 	movhi	r4,4098
10012780:	deffff04 	addi	sp,sp,-4
10012784:	100f883a 	mov	r7,r2
10012788:	29562c04 	addi	r5,r5,22704
1001278c:	2115dd04 	addi	r4,r4,22388
10012790:	dfc00015 	stw	ra,0(sp)
10012794:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
10012798:	20c00117 	ldw	r3,4(r4)
1001279c:	00a00034 	movhi	r2,32768
100127a0:	10bfffc4 	addi	r2,r2,-1
100127a4:	10c5c83a 	sub	r2,r2,r3
100127a8:	11800136 	bltu	r2,r6,100127b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x18>
100127ac:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100127b0:	010400b4 	movhi	r4,4098
100127b4:	deffff04 	addi	sp,sp,-4
100127b8:	21162c04 	addi	r4,r4,22704
100127bc:	dfc00015 	stw	ra,0(sp)
100127c0:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100127c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
100127c4:	defffd04 	addi	sp,sp,-12
100127c8:	dc000015 	stw	r16,0(sp)
100127cc:	2021883a 	mov	r16,r4
100127d0:	2809883a 	mov	r4,r5
100127d4:	dc400115 	stw	r17,4(sp)
100127d8:	dfc00215 	stw	ra,8(sp)
100127dc:	2823883a 	mov	r17,r5
100127e0:	00163ac0 	call	100163ac <strlen>
100127e4:	81000117 	ldw	r4,4(r16)
100127e8:	00e00034 	movhi	r3,32768
100127ec:	18ffffc4 	addi	r3,r3,-1
100127f0:	1907c83a 	sub	r3,r3,r4
100127f4:	18800836 	bltu	r3,r2,10012818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x54>
100127f8:	100d883a 	mov	r6,r2
100127fc:	880b883a 	mov	r5,r17
10012800:	8009883a 	mov	r4,r16
10012804:	dfc00217 	ldw	ra,8(sp)
10012808:	dc400117 	ldw	r17,4(sp)
1001280c:	dc000017 	ldw	r16,0(sp)
10012810:	dec00304 	addi	sp,sp,12
10012814:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012818:	010400b4 	movhi	r4,4098
1001281c:	21162c04 	addi	r4,r4,22704
10012820:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

10012824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
10012824:	defffd04 	addi	sp,sp,-12
10012828:	dc000015 	stw	r16,0(sp)
1001282c:	2021883a 	mov	r16,r4
10012830:	2809883a 	mov	r4,r5
10012834:	dc400115 	stw	r17,4(sp)
10012838:	dfc00215 	stw	ra,8(sp)
1001283c:	2823883a 	mov	r17,r5
10012840:	00163ac0 	call	100163ac <strlen>
10012844:	81000117 	ldw	r4,4(r16)
10012848:	00e00034 	movhi	r3,32768
1001284c:	18ffffc4 	addi	r3,r3,-1
10012850:	1907c83a 	sub	r3,r3,r4
10012854:	18800836 	bltu	r3,r2,10012878 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc+0x54>
10012858:	100d883a 	mov	r6,r2
1001285c:	880b883a 	mov	r5,r17
10012860:	8009883a 	mov	r4,r16
10012864:	dfc00217 	ldw	ra,8(sp)
10012868:	dc400117 	ldw	r17,4(sp)
1001286c:	dc000017 	ldw	r16,0(sp)
10012870:	dec00304 	addi	sp,sp,12
10012874:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012878:	010400b4 	movhi	r4,4098
1001287c:	21162c04 	addi	r4,r4,22704
10012880:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

10012884 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE>:
10012884:	20c00117 	ldw	r3,4(r4)
10012888:	00a00034 	movhi	r2,32768
1001288c:	10bfffc4 	addi	r2,r2,-1
10012890:	10c5c83a 	sub	r2,r2,r3
10012894:	11800136 	bltu	r2,r6,1001289c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE+0x18>
10012898:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
1001289c:	010400b4 	movhi	r4,4098
100128a0:	deffff04 	addi	sp,sp,-4
100128a4:	21162c04 	addi	r4,r4,22704
100128a8:	dfc00015 	stw	ra,0(sp)
100128ac:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100128b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE>:
100128b0:	20c00117 	ldw	r3,4(r4)
100128b4:	00a00034 	movhi	r2,32768
100128b8:	10bfffc4 	addi	r2,r2,-1
100128bc:	10c5c83a 	sub	r2,r2,r3
100128c0:	11800136 	bltu	r2,r6,100128c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE+0x18>
100128c4:	00126901 	jmpi	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100128c8:	010400b4 	movhi	r4,4098
100128cc:	deffff04 	addi	sp,sp,-4
100128d0:	21162c04 	addi	r4,r4,22704
100128d4:	dfc00015 	stw	ra,0(sp)
100128d8:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>

100128dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj>:
100128dc:	defffe04 	addi	sp,sp,-8
100128e0:	dfc00115 	stw	ra,4(sp)
100128e4:	dc000015 	stw	r16,0(sp)
100128e8:	24000117 	ldw	r16,4(r4)
100128ec:	3805883a 	mov	r2,r7
100128f0:	81c01636 	bltu	r16,r7,1001294c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x70>
100128f4:	80a1c83a 	sub	r16,r16,r2
100128f8:	280f883a 	mov	r7,r5
100128fc:	34000d36 	bltu	r6,r16,10012934 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x58>
10012900:	80000726 	beq	r16,zero,10012920 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
10012904:	21400017 	ldw	r5,0(r4)
10012908:	80c00058 	cmpnei	r3,r16,1
1001290c:	288b883a 	add	r5,r5,r2
10012910:	18000b26 	beq	r3,zero,10012940 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x64>
10012914:	800d883a 	mov	r6,r16
10012918:	3809883a 	mov	r4,r7
1001291c:	00156f00 	call	100156f0 <memcpy>
10012920:	8005883a 	mov	r2,r16
10012924:	dfc00117 	ldw	ra,4(sp)
10012928:	dc000017 	ldw	r16,0(sp)
1001292c:	dec00204 	addi	sp,sp,8
10012930:	f800283a 	ret
10012934:	3021883a 	mov	r16,r6
10012938:	803ff926 	beq	r16,zero,10012920 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
1001293c:	003ff106 	br	10012904 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x28>
10012940:	28800003 	ldbu	r2,0(r5)
10012944:	38800005 	stb	r2,0(r7)
10012948:	003ff506 	br	10012920 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
1001294c:	014400b4 	movhi	r5,4098
10012950:	010400b4 	movhi	r4,4098
10012954:	800f883a 	mov	r7,r16
10012958:	100d883a 	mov	r6,r2
1001295c:	2955fc04 	addi	r5,r5,22512
10012960:	2115dd04 	addi	r4,r4,22388
10012964:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10012968 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>:
10012968:	21404626 	beq	r4,r5,10012a84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x11c>
1001296c:	defff404 	addi	sp,sp,-48
10012970:	dd400915 	stw	r21,36(sp)
10012974:	dd000815 	stw	r20,32(sp)
10012978:	dc400515 	stw	r17,20(sp)
1001297c:	dc000415 	stw	r16,16(sp)
10012980:	dfc00b15 	stw	ra,44(sp)
10012984:	dd800a15 	stw	r22,40(sp)
10012988:	dcc00715 	stw	r19,28(sp)
1001298c:	dc800615 	stw	r18,24(sp)
10012990:	24c00017 	ldw	r19,0(r4)
10012994:	25400204 	addi	r21,r4,8
10012998:	2823883a 	mov	r17,r5
1001299c:	2021883a 	mov	r16,r4
100129a0:	2c800017 	ldw	r18,0(r5)
100129a4:	2d000204 	addi	r20,r5,8
100129a8:	acc01526 	beq	r21,r19,10012a00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x98>
100129ac:	25800217 	ldw	r22,8(r4)
100129b0:	a4802d26 	beq	r20,r18,10012a68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x100>
100129b4:	24800015 	stw	r18,0(r4)
100129b8:	28800217 	ldw	r2,8(r5)
100129bc:	2cc00015 	stw	r19,0(r5)
100129c0:	20800215 	stw	r2,8(r4)
100129c4:	8d800215 	stw	r22,8(r17)
100129c8:	88800117 	ldw	r2,4(r17)
100129cc:	80c00117 	ldw	r3,4(r16)
100129d0:	80800115 	stw	r2,4(r16)
100129d4:	88c00115 	stw	r3,4(r17)
100129d8:	dfc00b17 	ldw	ra,44(sp)
100129dc:	dd800a17 	ldw	r22,40(sp)
100129e0:	dd400917 	ldw	r21,36(sp)
100129e4:	dd000817 	ldw	r20,32(sp)
100129e8:	dcc00717 	ldw	r19,28(sp)
100129ec:	dc800617 	ldw	r18,24(sp)
100129f0:	dc400517 	ldw	r17,20(sp)
100129f4:	dc000417 	ldw	r16,16(sp)
100129f8:	dec00c04 	addi	sp,sp,48
100129fc:	f800283a 	ret
10012a00:	a4800b26 	beq	r20,r18,10012a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xc8>
10012a04:	2cc00217 	ldw	r19,8(r5)
10012a08:	01800404 	movi	r6,16
10012a0c:	a80b883a 	mov	r5,r21
10012a10:	a009883a 	mov	r4,r20
10012a14:	00156f00 	call	100156f0 <memcpy>
10012a18:	84800015 	stw	r18,0(r16)
10012a1c:	8d000015 	stw	r20,0(r17)
10012a20:	84c00215 	stw	r19,8(r16)
10012a24:	88800117 	ldw	r2,4(r17)
10012a28:	80c00117 	ldw	r3,4(r16)
10012a2c:	003fe806 	br	100129d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012a30:	20c00117 	ldw	r3,4(r4)
10012a34:	28800117 	ldw	r2,4(r5)
10012a38:	18001326 	beq	r3,zero,10012a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x120>
10012a3c:	01800404 	movi	r6,16
10012a40:	1000141e 	bne	r2,zero,10012a94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x12c>
10012a44:	a80b883a 	mov	r5,r21
10012a48:	a009883a 	mov	r4,r20
10012a4c:	00156f00 	call	100156f0 <memcpy>
10012a50:	80800117 	ldw	r2,4(r16)
10012a54:	88800115 	stw	r2,4(r17)
10012a58:	80800017 	ldw	r2,0(r16)
10012a5c:	80000115 	stw	zero,4(r16)
10012a60:	10000005 	stb	zero,0(r2)
10012a64:	003fdc06 	br	100129d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>
10012a68:	01800404 	movi	r6,16
10012a6c:	a00b883a 	mov	r5,r20
10012a70:	a809883a 	mov	r4,r21
10012a74:	00156f00 	call	100156f0 <memcpy>
10012a78:	8cc00015 	stw	r19,0(r17)
10012a7c:	85400015 	stw	r21,0(r16)
10012a80:	003fd006 	br	100129c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x5c>
10012a84:	f800283a 	ret
10012a88:	1000101e 	bne	r2,zero,10012acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x164>
10012a8c:	0007883a 	mov	r3,zero
10012a90:	003fcf06 	br	100129d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012a94:	a00b883a 	mov	r5,r20
10012a98:	d809883a 	mov	r4,sp
10012a9c:	00156f00 	call	100156f0 <memcpy>
10012aa0:	01800404 	movi	r6,16
10012aa4:	a80b883a 	mov	r5,r21
10012aa8:	a009883a 	mov	r4,r20
10012aac:	00156f00 	call	100156f0 <memcpy>
10012ab0:	01800404 	movi	r6,16
10012ab4:	d80b883a 	mov	r5,sp
10012ab8:	a809883a 	mov	r4,r21
10012abc:	00156f00 	call	100156f0 <memcpy>
10012ac0:	88800117 	ldw	r2,4(r17)
10012ac4:	80c00117 	ldw	r3,4(r16)
10012ac8:	003fc106 	br	100129d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012acc:	01800404 	movi	r6,16
10012ad0:	a00b883a 	mov	r5,r20
10012ad4:	a809883a 	mov	r4,r21
10012ad8:	00156f00 	call	100156f0 <memcpy>
10012adc:	88800117 	ldw	r2,4(r17)
10012ae0:	80800115 	stw	r2,4(r16)
10012ae4:	88800017 	ldw	r2,0(r17)
10012ae8:	88000115 	stw	zero,4(r17)
10012aec:	10000005 	stb	zero,0(r2)
10012af0:	003fb906 	br	100129d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>

10012af4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
10012af4:	20800017 	ldw	r2,0(r4)
10012af8:	f800283a 	ret

10012afc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
10012afc:	20800017 	ldw	r2,0(r4)
10012b00:	f800283a 	ret

10012b04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
10012b04:	2005883a 	mov	r2,r4
10012b08:	f800283a 	ret

10012b0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>:
10012b0c:	defff804 	addi	sp,sp,-32
10012b10:	dfc00715 	stw	ra,28(sp)
10012b14:	dd800615 	stw	r22,24(sp)
10012b18:	dd400515 	stw	r21,20(sp)
10012b1c:	dd000415 	stw	r20,16(sp)
10012b20:	dcc00315 	stw	r19,12(sp)
10012b24:	dc800215 	stw	r18,8(sp)
10012b28:	dc400115 	stw	r17,4(sp)
10012b2c:	dc000015 	stw	r16,0(sp)
10012b30:	24800117 	ldw	r18,4(r4)
10012b34:	38002626 	beq	r7,zero,10012bd0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xc4>
10012b38:	34801a2e 	bgeu	r6,r18,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012b3c:	25000017 	ldw	r20,0(r4)
10012b40:	9185c83a 	sub	r2,r18,r6
10012b44:	a189883a 	add	r4,r20,r6
10012b48:	a4a5883a 	add	r18,r20,r18
10012b4c:	11c01536 	bltu	r2,r7,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012b50:	05400044 	movi	r21,1
10012b54:	a9ebc83a 	sub	r21,r21,r7
10012b58:	a88d883a 	add	r6,r21,r2
10012b5c:	30001126 	beq	r6,zero,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012b60:	2d800007 	ldb	r22,0(r5)
10012b64:	2827883a 	mov	r19,r5
10012b68:	3821883a 	mov	r16,r7
10012b6c:	b00b883a 	mov	r5,r22
10012b70:	001557c0 	call	1001557c <memchr>
10012b74:	1023883a 	mov	r17,r2
10012b78:	800d883a 	mov	r6,r16
10012b7c:	980b883a 	mov	r5,r19
10012b80:	1009883a 	mov	r4,r2
10012b84:	10000726 	beq	r2,zero,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012b88:	00156640 	call	10015664 <memcmp>
10012b8c:	89000044 	addi	r4,r17,1
10012b90:	9107c83a 	sub	r3,r18,r4
10012b94:	a8cd883a 	add	r6,r21,r3
10012b98:	10001026 	beq	r2,zero,10012bdc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xd0>
10012b9c:	1c000136 	bltu	r3,r16,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012ba0:	303ff21e 	bne	r6,zero,10012b6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x60>
10012ba4:	00bfffc4 	movi	r2,-1
10012ba8:	dfc00717 	ldw	ra,28(sp)
10012bac:	dd800617 	ldw	r22,24(sp)
10012bb0:	dd400517 	ldw	r21,20(sp)
10012bb4:	dd000417 	ldw	r20,16(sp)
10012bb8:	dcc00317 	ldw	r19,12(sp)
10012bbc:	dc800217 	ldw	r18,8(sp)
10012bc0:	dc400117 	ldw	r17,4(sp)
10012bc4:	dc000017 	ldw	r16,0(sp)
10012bc8:	dec00804 	addi	sp,sp,32
10012bcc:	f800283a 	ret
10012bd0:	91bff436 	bltu	r18,r6,10012ba4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012bd4:	3005883a 	mov	r2,r6
10012bd8:	003ff306 	br	10012ba8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>
10012bdc:	8d05c83a 	sub	r2,r17,r20
10012be0:	003ff106 	br	10012ba8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>

10012be4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j>:
10012be4:	29c00117 	ldw	r7,4(r5)
10012be8:	29400017 	ldw	r5,0(r5)
10012bec:	0012b0c1 	jmpi	10012b0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10012bf0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj>:
10012bf0:	defffc04 	addi	sp,sp,-16
10012bf4:	dc000215 	stw	r16,8(sp)
10012bf8:	2021883a 	mov	r16,r4
10012bfc:	2809883a 	mov	r4,r5
10012c00:	dfc00315 	stw	ra,12(sp)
10012c04:	d9800115 	stw	r6,4(sp)
10012c08:	d9400015 	stw	r5,0(sp)
10012c0c:	00163ac0 	call	100163ac <strlen>
10012c10:	d9800117 	ldw	r6,4(sp)
10012c14:	d9400017 	ldw	r5,0(sp)
10012c18:	100f883a 	mov	r7,r2
10012c1c:	8009883a 	mov	r4,r16
10012c20:	dfc00317 	ldw	ra,12(sp)
10012c24:	dc000217 	ldw	r16,8(sp)
10012c28:	dec00404 	addi	sp,sp,16
10012c2c:	0012b0c1 	jmpi	10012b0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10012c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>:
10012c30:	20800117 	ldw	r2,4(r4)
10012c34:	3080112e 	bgeu	r6,r2,10012c7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x4c>
10012c38:	defffe04 	addi	sp,sp,-8
10012c3c:	dfc00115 	stw	ra,4(sp)
10012c40:	dc000015 	stw	r16,0(sp)
10012c44:	24000017 	ldw	r16,0(r4)
10012c48:	29403fcc 	andi	r5,r5,255
10012c4c:	3007883a 	mov	r3,r6
10012c50:	2940201c 	xori	r5,r5,128
10012c54:	118dc83a 	sub	r6,r2,r6
10012c58:	297fe004 	addi	r5,r5,-128
10012c5c:	80c9883a 	add	r4,r16,r3
10012c60:	001557c0 	call	1001557c <memchr>
10012c64:	10000726 	beq	r2,zero,10012c84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x54>
10012c68:	1405c83a 	sub	r2,r2,r16
10012c6c:	dfc00117 	ldw	ra,4(sp)
10012c70:	dc000017 	ldw	r16,0(sp)
10012c74:	dec00204 	addi	sp,sp,8
10012c78:	f800283a 	ret
10012c7c:	00bfffc4 	movi	r2,-1
10012c80:	f800283a 	ret
10012c84:	00bfffc4 	movi	r2,-1
10012c88:	dfc00117 	ldw	ra,4(sp)
10012c8c:	dc000017 	ldw	r16,0(sp)
10012c90:	dec00204 	addi	sp,sp,8
10012c94:	f800283a 	ret

10012c98 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>:
10012c98:	defffb04 	addi	sp,sp,-20
10012c9c:	dfc00415 	stw	ra,16(sp)
10012ca0:	dcc00315 	stw	r19,12(sp)
10012ca4:	dc800215 	stw	r18,8(sp)
10012ca8:	dc400115 	stw	r17,4(sp)
10012cac:	dc000015 	stw	r16,0(sp)
10012cb0:	24000117 	ldw	r16,4(r4)
10012cb4:	81c01c36 	bltu	r16,r7,10012d28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
10012cb8:	81e1c83a 	sub	r16,r16,r7
10012cbc:	34001836 	bltu	r6,r16,10012d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x88>
10012cc0:	24c00017 	ldw	r19,0(r4)
10012cc4:	2825883a 	mov	r18,r5
10012cc8:	3823883a 	mov	r17,r7
10012ccc:	9c09883a 	add	r4,r19,r16
10012cd0:	880d883a 	mov	r6,r17
10012cd4:	900b883a 	mov	r5,r18
10012cd8:	88000926 	beq	r17,zero,10012d00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
10012cdc:	00156640 	call	10015664 <memcmp>
10012ce0:	10000726 	beq	r2,zero,10012d00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
10012ce4:	80bfffc4 	addi	r2,r16,-1
10012ce8:	80000f26 	beq	r16,zero,10012d28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
10012cec:	1021883a 	mov	r16,r2
10012cf0:	9c09883a 	add	r4,r19,r16
10012cf4:	880d883a 	mov	r6,r17
10012cf8:	900b883a 	mov	r5,r18
10012cfc:	883ff71e 	bne	r17,zero,10012cdc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x44>
10012d00:	8005883a 	mov	r2,r16
10012d04:	dfc00417 	ldw	ra,16(sp)
10012d08:	dcc00317 	ldw	r19,12(sp)
10012d0c:	dc800217 	ldw	r18,8(sp)
10012d10:	dc400117 	ldw	r17,4(sp)
10012d14:	dc000017 	ldw	r16,0(sp)
10012d18:	dec00504 	addi	sp,sp,20
10012d1c:	f800283a 	ret
10012d20:	3021883a 	mov	r16,r6
10012d24:	003fe606 	br	10012cc0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x28>
10012d28:	043fffc4 	movi	r16,-1
10012d2c:	003ff406 	br	10012d00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>

10012d30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j>:
10012d30:	29c00117 	ldw	r7,4(r5)
10012d34:	29400017 	ldw	r5,0(r5)
10012d38:	0012c981 	jmpi	10012c98 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

10012d3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj>:
10012d3c:	defffc04 	addi	sp,sp,-16
10012d40:	dc000215 	stw	r16,8(sp)
10012d44:	2021883a 	mov	r16,r4
10012d48:	2809883a 	mov	r4,r5
10012d4c:	dfc00315 	stw	ra,12(sp)
10012d50:	d9800115 	stw	r6,4(sp)
10012d54:	d9400015 	stw	r5,0(sp)
10012d58:	00163ac0 	call	100163ac <strlen>
10012d5c:	d9800117 	ldw	r6,4(sp)
10012d60:	d9400017 	ldw	r5,0(sp)
10012d64:	100f883a 	mov	r7,r2
10012d68:	8009883a 	mov	r4,r16
10012d6c:	dfc00317 	ldw	ra,12(sp)
10012d70:	dc000217 	ldw	r16,8(sp)
10012d74:	dec00404 	addi	sp,sp,16
10012d78:	0012c981 	jmpi	10012c98 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

10012d7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>:
10012d7c:	20800117 	ldw	r2,4(r4)
10012d80:	10000f26 	beq	r2,zero,10012dc0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x44>
10012d84:	10bfffc4 	addi	r2,r2,-1
10012d88:	30800b36 	bltu	r6,r2,10012db8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x3c>
10012d8c:	29403fcc 	andi	r5,r5,255
10012d90:	21000017 	ldw	r4,0(r4)
10012d94:	2940201c 	xori	r5,r5,128
10012d98:	297fe004 	addi	r5,r5,-128
10012d9c:	2087883a 	add	r3,r4,r2
10012da0:	18c00007 	ldb	r3,0(r3)
10012da4:	19400826 	beq	r3,r5,10012dc8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x4c>
10012da8:	10bfffc4 	addi	r2,r2,-1
10012dac:	10ffffe0 	cmpeqi	r3,r2,-1
10012db0:	183ffa26 	beq	r3,zero,10012d9c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x20>
10012db4:	f800283a 	ret
10012db8:	3005883a 	mov	r2,r6
10012dbc:	003ff306 	br	10012d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x10>
10012dc0:	00bfffc4 	movi	r2,-1
10012dc4:	f800283a 	ret
10012dc8:	f800283a 	ret

10012dcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>:
10012dcc:	38002126 	beq	r7,zero,10012e54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x88>
10012dd0:	defffa04 	addi	sp,sp,-24
10012dd4:	dc000015 	stw	r16,0(sp)
10012dd8:	dfc00515 	stw	ra,20(sp)
10012ddc:	dd000415 	stw	r20,16(sp)
10012de0:	dcc00315 	stw	r19,12(sp)
10012de4:	dc800215 	stw	r18,8(sp)
10012de8:	dc400115 	stw	r17,4(sp)
10012dec:	24800117 	ldw	r18,4(r4)
10012df0:	3021883a 	mov	r16,r6
10012df4:	3480152e 	bgeu	r6,r18,10012e4c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10012df8:	3823883a 	mov	r17,r7
10012dfc:	2827883a 	mov	r19,r5
10012e00:	25000017 	ldw	r20,0(r4)
10012e04:	00000206 	br	10012e10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x44>
10012e08:	84000044 	addi	r16,r16,1
10012e0c:	84800f26 	beq	r16,r18,10012e4c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10012e10:	a405883a 	add	r2,r20,r16
10012e14:	11400007 	ldb	r5,0(r2)
10012e18:	880d883a 	mov	r6,r17
10012e1c:	9809883a 	mov	r4,r19
10012e20:	001557c0 	call	1001557c <memchr>
10012e24:	103ff826 	beq	r2,zero,10012e08 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x3c>
10012e28:	8005883a 	mov	r2,r16
10012e2c:	dfc00517 	ldw	ra,20(sp)
10012e30:	dd000417 	ldw	r20,16(sp)
10012e34:	dcc00317 	ldw	r19,12(sp)
10012e38:	dc800217 	ldw	r18,8(sp)
10012e3c:	dc400117 	ldw	r17,4(sp)
10012e40:	dc000017 	ldw	r16,0(sp)
10012e44:	dec00604 	addi	sp,sp,24
10012e48:	f800283a 	ret
10012e4c:	00bfffc4 	movi	r2,-1
10012e50:	003ff606 	br	10012e2c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x60>
10012e54:	00bfffc4 	movi	r2,-1
10012e58:	f800283a 	ret

10012e5c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j>:
10012e5c:	29c00117 	ldw	r7,4(r5)
10012e60:	29400017 	ldw	r5,0(r5)
10012e64:	0012dcc1 	jmpi	10012dcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

10012e68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj>:
10012e68:	defffc04 	addi	sp,sp,-16
10012e6c:	dc000215 	stw	r16,8(sp)
10012e70:	2021883a 	mov	r16,r4
10012e74:	2809883a 	mov	r4,r5
10012e78:	dfc00315 	stw	ra,12(sp)
10012e7c:	d9800115 	stw	r6,4(sp)
10012e80:	d9400015 	stw	r5,0(sp)
10012e84:	00163ac0 	call	100163ac <strlen>
10012e88:	d9800117 	ldw	r6,4(sp)
10012e8c:	d9400017 	ldw	r5,0(sp)
10012e90:	100f883a 	mov	r7,r2
10012e94:	8009883a 	mov	r4,r16
10012e98:	dfc00317 	ldw	ra,12(sp)
10012e9c:	dc000217 	ldw	r16,8(sp)
10012ea0:	dec00404 	addi	sp,sp,16
10012ea4:	0012dcc1 	jmpi	10012dcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

10012ea8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj>:
10012ea8:	29403fcc 	andi	r5,r5,255
10012eac:	2940201c 	xori	r5,r5,128
10012eb0:	297fe004 	addi	r5,r5,-128
10012eb4:	0012c301 	jmpi	10012c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>

10012eb8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>:
10012eb8:	defffb04 	addi	sp,sp,-20
10012ebc:	dfc00415 	stw	ra,16(sp)
10012ec0:	dcc00315 	stw	r19,12(sp)
10012ec4:	dc800215 	stw	r18,8(sp)
10012ec8:	dc400115 	stw	r17,4(sp)
10012ecc:	dc000015 	stw	r16,0(sp)
10012ed0:	24000117 	ldw	r16,4(r4)
10012ed4:	80001226 	beq	r16,zero,10012f20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
10012ed8:	38001126 	beq	r7,zero,10012f20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
10012edc:	843fffc4 	addi	r16,r16,-1
10012ee0:	3400012e 	bgeu	r6,r16,10012ee8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x30>
10012ee4:	3021883a 	mov	r16,r6
10012ee8:	3823883a 	mov	r17,r7
10012eec:	2825883a 	mov	r18,r5
10012ef0:	24c00017 	ldw	r19,0(r4)
10012ef4:	00000306 	br	10012f04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x4c>
10012ef8:	843fffc4 	addi	r16,r16,-1
10012efc:	80bfffd8 	cmpnei	r2,r16,-1
10012f00:	10000826 	beq	r2,zero,10012f24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
10012f04:	9c05883a 	add	r2,r19,r16
10012f08:	11400007 	ldb	r5,0(r2)
10012f0c:	880d883a 	mov	r6,r17
10012f10:	9009883a 	mov	r4,r18
10012f14:	001557c0 	call	1001557c <memchr>
10012f18:	103ff726 	beq	r2,zero,10012ef8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x40>
10012f1c:	00000106 	br	10012f24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
10012f20:	043fffc4 	movi	r16,-1
10012f24:	8005883a 	mov	r2,r16
10012f28:	dfc00417 	ldw	ra,16(sp)
10012f2c:	dcc00317 	ldw	r19,12(sp)
10012f30:	dc800217 	ldw	r18,8(sp)
10012f34:	dc400117 	ldw	r17,4(sp)
10012f38:	dc000017 	ldw	r16,0(sp)
10012f3c:	dec00504 	addi	sp,sp,20
10012f40:	f800283a 	ret

10012f44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j>:
10012f44:	29c00117 	ldw	r7,4(r5)
10012f48:	29400017 	ldw	r5,0(r5)
10012f4c:	0012eb81 	jmpi	10012eb8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

10012f50 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj>:
10012f50:	defffc04 	addi	sp,sp,-16
10012f54:	dc000215 	stw	r16,8(sp)
10012f58:	2021883a 	mov	r16,r4
10012f5c:	2809883a 	mov	r4,r5
10012f60:	dfc00315 	stw	ra,12(sp)
10012f64:	d9800115 	stw	r6,4(sp)
10012f68:	d9400015 	stw	r5,0(sp)
10012f6c:	00163ac0 	call	100163ac <strlen>
10012f70:	d9800117 	ldw	r6,4(sp)
10012f74:	d9400017 	ldw	r5,0(sp)
10012f78:	100f883a 	mov	r7,r2
10012f7c:	8009883a 	mov	r4,r16
10012f80:	dfc00317 	ldw	ra,12(sp)
10012f84:	dc000217 	ldw	r16,8(sp)
10012f88:	dec00404 	addi	sp,sp,16
10012f8c:	0012eb81 	jmpi	10012eb8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

10012f90 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj>:
10012f90:	29403fcc 	andi	r5,r5,255
10012f94:	2940201c 	xori	r5,r5,128
10012f98:	297fe004 	addi	r5,r5,-128
10012f9c:	0012d7c1 	jmpi	10012d7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>

10012fa0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>:
10012fa0:	defffa04 	addi	sp,sp,-24
10012fa4:	dfc00515 	stw	ra,20(sp)
10012fa8:	dd000415 	stw	r20,16(sp)
10012fac:	dcc00315 	stw	r19,12(sp)
10012fb0:	dc800215 	stw	r18,8(sp)
10012fb4:	dc400115 	stw	r17,4(sp)
10012fb8:	dc000015 	stw	r16,0(sp)
10012fbc:	24800117 	ldw	r18,4(r4)
10012fc0:	3480172e 	bgeu	r6,r18,10013020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
10012fc4:	3021883a 	mov	r16,r6
10012fc8:	2827883a 	mov	r19,r5
10012fcc:	3823883a 	mov	r17,r7
10012fd0:	25000017 	ldw	r20,0(r4)
10012fd4:	3800031e 	bne	r7,zero,10012fe4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x44>
10012fd8:	00000806 	br	10012ffc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x5c>
10012fdc:	84000044 	addi	r16,r16,1
10012fe0:	94000f26 	beq	r18,r16,10013020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
10012fe4:	a405883a 	add	r2,r20,r16
10012fe8:	11400007 	ldb	r5,0(r2)
10012fec:	880d883a 	mov	r6,r17
10012ff0:	9809883a 	mov	r4,r19
10012ff4:	001557c0 	call	1001557c <memchr>
10012ff8:	103ff81e 	bne	r2,zero,10012fdc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x3c>
10012ffc:	8005883a 	mov	r2,r16
10013000:	dfc00517 	ldw	ra,20(sp)
10013004:	dd000417 	ldw	r20,16(sp)
10013008:	dcc00317 	ldw	r19,12(sp)
1001300c:	dc800217 	ldw	r18,8(sp)
10013010:	dc400117 	ldw	r17,4(sp)
10013014:	dc000017 	ldw	r16,0(sp)
10013018:	dec00604 	addi	sp,sp,24
1001301c:	f800283a 	ret
10013020:	00bfffc4 	movi	r2,-1
10013024:	003ff606 	br	10013000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x60>

10013028 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j>:
10013028:	29c00117 	ldw	r7,4(r5)
1001302c:	29400017 	ldw	r5,0(r5)
10013030:	0012fa01 	jmpi	10012fa0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

10013034 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj>:
10013034:	defffc04 	addi	sp,sp,-16
10013038:	dc000215 	stw	r16,8(sp)
1001303c:	2021883a 	mov	r16,r4
10013040:	2809883a 	mov	r4,r5
10013044:	dfc00315 	stw	ra,12(sp)
10013048:	d9800115 	stw	r6,4(sp)
1001304c:	d9400015 	stw	r5,0(sp)
10013050:	00163ac0 	call	100163ac <strlen>
10013054:	d9800117 	ldw	r6,4(sp)
10013058:	d9400017 	ldw	r5,0(sp)
1001305c:	100f883a 	mov	r7,r2
10013060:	8009883a 	mov	r4,r16
10013064:	dfc00317 	ldw	ra,12(sp)
10013068:	dc000217 	ldw	r16,8(sp)
1001306c:	dec00404 	addi	sp,sp,16
10013070:	0012fa01 	jmpi	10012fa0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

10013074 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>:
10013074:	21c00117 	ldw	r7,4(r4)
10013078:	31c00e2e 	bgeu	r6,r7,100130b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x40>
1001307c:	21000017 	ldw	r4,0(r4)
10013080:	29403fcc 	andi	r5,r5,255
10013084:	2940201c 	xori	r5,r5,128
10013088:	2185883a 	add	r2,r4,r6
1001308c:	10800007 	ldb	r2,0(r2)
10013090:	297fe004 	addi	r5,r5,-128
10013094:	2880091e 	bne	r5,r2,100130bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
10013098:	2807883a 	mov	r3,r5
1001309c:	00000206 	br	100130a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x34>
100130a0:	10800007 	ldb	r2,0(r2)
100130a4:	10c0051e 	bne	r2,r3,100130bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
100130a8:	31800044 	addi	r6,r6,1
100130ac:	2185883a 	add	r2,r4,r6
100130b0:	31fffb1e 	bne	r6,r7,100130a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x2c>
100130b4:	00bfffc4 	movi	r2,-1
100130b8:	f800283a 	ret
100130bc:	3005883a 	mov	r2,r6
100130c0:	f800283a 	ret

100130c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>:
100130c4:	defffb04 	addi	sp,sp,-20
100130c8:	dfc00415 	stw	ra,16(sp)
100130cc:	dcc00315 	stw	r19,12(sp)
100130d0:	dc800215 	stw	r18,8(sp)
100130d4:	dc400115 	stw	r17,4(sp)
100130d8:	dc000015 	stw	r16,0(sp)
100130dc:	24000117 	ldw	r16,4(r4)
100130e0:	80001926 	beq	r16,zero,10013148 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x84>
100130e4:	843fffc4 	addi	r16,r16,-1
100130e8:	34001536 	bltu	r6,r16,10013140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x7c>
100130ec:	24c00017 	ldw	r19,0(r4)
100130f0:	3823883a 	mov	r17,r7
100130f4:	2825883a 	mov	r18,r5
100130f8:	9c05883a 	add	r2,r19,r16
100130fc:	880d883a 	mov	r6,r17
10013100:	9009883a 	mov	r4,r18
10013104:	88000626 	beq	r17,zero,10013120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
10013108:	11400007 	ldb	r5,0(r2)
1001310c:	001557c0 	call	1001557c <memchr>
10013110:	10000326 	beq	r2,zero,10013120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
10013114:	843fffc4 	addi	r16,r16,-1
10013118:	80bfffd8 	cmpnei	r2,r16,-1
1001311c:	103ff61e 	bne	r2,zero,100130f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x34>
10013120:	8005883a 	mov	r2,r16
10013124:	dfc00417 	ldw	ra,16(sp)
10013128:	dcc00317 	ldw	r19,12(sp)
1001312c:	dc800217 	ldw	r18,8(sp)
10013130:	dc400117 	ldw	r17,4(sp)
10013134:	dc000017 	ldw	r16,0(sp)
10013138:	dec00504 	addi	sp,sp,20
1001313c:	f800283a 	ret
10013140:	3021883a 	mov	r16,r6
10013144:	003fe906 	br	100130ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x28>
10013148:	043fffc4 	movi	r16,-1
1001314c:	003ff406 	br	10013120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>

10013150 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j>:
10013150:	29c00117 	ldw	r7,4(r5)
10013154:	29400017 	ldw	r5,0(r5)
10013158:	00130c41 	jmpi	100130c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

1001315c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj>:
1001315c:	defffc04 	addi	sp,sp,-16
10013160:	dc000215 	stw	r16,8(sp)
10013164:	2021883a 	mov	r16,r4
10013168:	2809883a 	mov	r4,r5
1001316c:	dfc00315 	stw	ra,12(sp)
10013170:	d9800115 	stw	r6,4(sp)
10013174:	d9400015 	stw	r5,0(sp)
10013178:	00163ac0 	call	100163ac <strlen>
1001317c:	d9800117 	ldw	r6,4(sp)
10013180:	d9400017 	ldw	r5,0(sp)
10013184:	100f883a 	mov	r7,r2
10013188:	8009883a 	mov	r4,r16
1001318c:	dfc00317 	ldw	ra,12(sp)
10013190:	dc000217 	ldw	r16,8(sp)
10013194:	dec00404 	addi	sp,sp,16
10013198:	00130c41 	jmpi	100130c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

1001319c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj>:
1001319c:	20800117 	ldw	r2,4(r4)
100131a0:	10001026 	beq	r2,zero,100131e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x48>
100131a4:	10bfffc4 	addi	r2,r2,-1
100131a8:	30800c36 	bltu	r6,r2,100131dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x40>
100131ac:	29403fcc 	andi	r5,r5,255
100131b0:	2940201c 	xori	r5,r5,128
100131b4:	21000017 	ldw	r4,0(r4)
100131b8:	297fe004 	addi	r5,r5,-128
100131bc:	00000306 	br	100131cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x30>
100131c0:	10bfffc4 	addi	r2,r2,-1
100131c4:	10ffffd8 	cmpnei	r3,r2,-1
100131c8:	18000826 	beq	r3,zero,100131ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x50>
100131cc:	2087883a 	add	r3,r4,r2
100131d0:	18c00007 	ldb	r3,0(r3)
100131d4:	197ffa26 	beq	r3,r5,100131c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x24>
100131d8:	f800283a 	ret
100131dc:	3005883a 	mov	r2,r6
100131e0:	003ff206 	br	100131ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x10>
100131e4:	00bfffc4 	movi	r2,-1
100131e8:	f800283a 	ret
100131ec:	f800283a 	ret

100131f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
100131f0:	defffd04 	addi	sp,sp,-12
100131f4:	dfc00215 	stw	ra,8(sp)
100131f8:	dc400115 	stw	r17,4(sp)
100131fc:	dc000015 	stw	r16,0(sp)
10013200:	2c000117 	ldw	r16,4(r5)
10013204:	24400117 	ldw	r17,4(r4)
10013208:	8c000c2e 	bgeu	r17,r16,1001323c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x4c>
1001320c:	880d883a 	mov	r6,r17
10013210:	30000426 	beq	r6,zero,10013224 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x34>
10013214:	29400017 	ldw	r5,0(r5)
10013218:	21000017 	ldw	r4,0(r4)
1001321c:	00156640 	call	10015664 <memcmp>
10013220:	1000011e 	bne	r2,zero,10013228 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x38>
10013224:	8c05c83a 	sub	r2,r17,r16
10013228:	dfc00217 	ldw	ra,8(sp)
1001322c:	dc400117 	ldw	r17,4(sp)
10013230:	dc000017 	ldw	r16,0(sp)
10013234:	dec00304 	addi	sp,sp,12
10013238:	f800283a 	ret
1001323c:	800d883a 	mov	r6,r16
10013240:	003ff306 	br	10013210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x20>

10013244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_>:
10013244:	defffd04 	addi	sp,sp,-12
10013248:	dfc00215 	stw	ra,8(sp)
1001324c:	dc400115 	stw	r17,4(sp)
10013250:	dc000015 	stw	r16,0(sp)
10013254:	24000117 	ldw	r16,4(r4)
10013258:	2805883a 	mov	r2,r5
1001325c:	81401836 	bltu	r16,r5,100132c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x7c>
10013260:	8161c83a 	sub	r16,r16,r5
10013264:	34001136 	bltu	r6,r16,100132ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x68>
10013268:	3c400117 	ldw	r17,4(r7)
1001326c:	880d883a 	mov	r6,r17
10013270:	84400c36 	bltu	r16,r17,100132a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
10013274:	30000526 	beq	r6,zero,1001328c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x48>
10013278:	21000017 	ldw	r4,0(r4)
1001327c:	39400017 	ldw	r5,0(r7)
10013280:	2089883a 	add	r4,r4,r2
10013284:	00156640 	call	10015664 <memcmp>
10013288:	1000011e 	bne	r2,zero,10013290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x4c>
1001328c:	8445c83a 	sub	r2,r16,r17
10013290:	dfc00217 	ldw	ra,8(sp)
10013294:	dc400117 	ldw	r17,4(sp)
10013298:	dc000017 	ldw	r16,0(sp)
1001329c:	dec00304 	addi	sp,sp,12
100132a0:	f800283a 	ret
100132a4:	800d883a 	mov	r6,r16
100132a8:	003ff206 	br	10013274 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
100132ac:	3c400117 	ldw	r17,4(r7)
100132b0:	3021883a 	mov	r16,r6
100132b4:	880d883a 	mov	r6,r17
100132b8:	847fee2e 	bgeu	r16,r17,10013274 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
100132bc:	003ff906 	br	100132a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
100132c0:	014400b4 	movhi	r5,4098
100132c4:	010400b4 	movhi	r4,4098
100132c8:	800f883a 	mov	r7,r16
100132cc:	100d883a 	mov	r6,r2
100132d0:	29560104 	addi	r5,r5,22532
100132d4:	2115dd04 	addi	r4,r4,22388
100132d8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100132dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj>:
100132dc:	defffd04 	addi	sp,sp,-12
100132e0:	dfc00215 	stw	ra,8(sp)
100132e4:	dc400115 	stw	r17,4(sp)
100132e8:	dc000015 	stw	r16,0(sp)
100132ec:	24400117 	ldw	r17,4(r4)
100132f0:	2805883a 	mov	r2,r5
100132f4:	d8c00317 	ldw	r3,12(sp)
100132f8:	d9400417 	ldw	r5,16(sp)
100132fc:	88802636 	bltu	r17,r2,10013398 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xbc>
10013300:	3c000117 	ldw	r16,4(r7)
10013304:	80c01d36 	bltu	r16,r3,1001337c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xa0>
10013308:	88a3c83a 	sub	r17,r17,r2
1001330c:	34401736 	bltu	r6,r17,1001336c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x90>
10013310:	80e1c83a 	sub	r16,r16,r3
10013314:	2c001136 	bltu	r5,r16,1001335c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
10013318:	800d883a 	mov	r6,r16
1001331c:	8c000d36 	bltu	r17,r16,10013354 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
10013320:	30000626 	beq	r6,zero,1001333c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x60>
10013324:	39400017 	ldw	r5,0(r7)
10013328:	21000017 	ldw	r4,0(r4)
1001332c:	28cb883a 	add	r5,r5,r3
10013330:	2089883a 	add	r4,r4,r2
10013334:	00156640 	call	10015664 <memcmp>
10013338:	1000011e 	bne	r2,zero,10013340 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x64>
1001333c:	8c05c83a 	sub	r2,r17,r16
10013340:	dfc00217 	ldw	ra,8(sp)
10013344:	dc400117 	ldw	r17,4(sp)
10013348:	dc000017 	ldw	r16,0(sp)
1001334c:	dec00304 	addi	sp,sp,12
10013350:	f800283a 	ret
10013354:	880d883a 	mov	r6,r17
10013358:	003ff106 	br	10013320 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
1001335c:	2821883a 	mov	r16,r5
10013360:	800d883a 	mov	r6,r16
10013364:	8c3fee2e 	bgeu	r17,r16,10013320 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
10013368:	003ffa06 	br	10013354 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
1001336c:	80e1c83a 	sub	r16,r16,r3
10013370:	3023883a 	mov	r17,r6
10013374:	2c3fe82e 	bgeu	r5,r16,10013318 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x3c>
10013378:	003ff806 	br	1001335c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
1001337c:	014400b4 	movhi	r5,4098
10013380:	010400b4 	movhi	r4,4098
10013384:	800f883a 	mov	r7,r16
10013388:	180d883a 	mov	r6,r3
1001338c:	29560104 	addi	r5,r5,22532
10013390:	2115dd04 	addi	r4,r4,22388
10013394:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
10013398:	014400b4 	movhi	r5,4098
1001339c:	010400b4 	movhi	r4,4098
100133a0:	880f883a 	mov	r7,r17
100133a4:	100d883a 	mov	r6,r2
100133a8:	29560104 	addi	r5,r5,22532
100133ac:	2115dd04 	addi	r4,r4,22388
100133b0:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100133b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
100133b4:	defffb04 	addi	sp,sp,-20
100133b8:	dcc00315 	stw	r19,12(sp)
100133bc:	dc800215 	stw	r18,8(sp)
100133c0:	dc000015 	stw	r16,0(sp)
100133c4:	dfc00415 	stw	ra,16(sp)
100133c8:	dc400115 	stw	r17,4(sp)
100133cc:	24400117 	ldw	r17,4(r4)
100133d0:	2027883a 	mov	r19,r4
100133d4:	2809883a 	mov	r4,r5
100133d8:	2825883a 	mov	r18,r5
100133dc:	00163ac0 	call	100163ac <strlen>
100133e0:	1021883a 	mov	r16,r2
100133e4:	88800e2e 	bgeu	r17,r2,10013420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x6c>
100133e8:	880d883a 	mov	r6,r17
100133ec:	30000426 	beq	r6,zero,10013400 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x4c>
100133f0:	99000017 	ldw	r4,0(r19)
100133f4:	900b883a 	mov	r5,r18
100133f8:	00156640 	call	10015664 <memcmp>
100133fc:	1000011e 	bne	r2,zero,10013404 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x50>
10013400:	8c05c83a 	sub	r2,r17,r16
10013404:	dfc00417 	ldw	ra,16(sp)
10013408:	dcc00317 	ldw	r19,12(sp)
1001340c:	dc800217 	ldw	r18,8(sp)
10013410:	dc400117 	ldw	r17,4(sp)
10013414:	dc000017 	ldw	r16,0(sp)
10013418:	dec00504 	addi	sp,sp,20
1001341c:	f800283a 	ret
10013420:	100d883a 	mov	r6,r2
10013424:	003ff106 	br	100133ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x38>

10013428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc>:
10013428:	defffa04 	addi	sp,sp,-24
1001342c:	dc800215 	stw	r18,8(sp)
10013430:	dfc00515 	stw	ra,20(sp)
10013434:	dd000415 	stw	r20,16(sp)
10013438:	dcc00315 	stw	r19,12(sp)
1001343c:	dc400115 	stw	r17,4(sp)
10013440:	dc000015 	stw	r16,0(sp)
10013444:	24000117 	ldw	r16,4(r4)
10013448:	2825883a 	mov	r18,r5
1001344c:	81401c36 	bltu	r16,r5,100134c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x98>
10013450:	8161c83a 	sub	r16,r16,r5
10013454:	2027883a 	mov	r19,r4
10013458:	3829883a 	mov	r20,r7
1001345c:	34001636 	bltu	r6,r16,100134b8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x90>
10013460:	a009883a 	mov	r4,r20
10013464:	00163ac0 	call	100163ac <strlen>
10013468:	1023883a 	mov	r17,r2
1001346c:	100d883a 	mov	r6,r2
10013470:	80800f36 	bltu	r16,r2,100134b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x88>
10013474:	30000526 	beq	r6,zero,1001348c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x64>
10013478:	99000017 	ldw	r4,0(r19)
1001347c:	a00b883a 	mov	r5,r20
10013480:	2489883a 	add	r4,r4,r18
10013484:	00156640 	call	10015664 <memcmp>
10013488:	1000011e 	bne	r2,zero,10013490 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x68>
1001348c:	8445c83a 	sub	r2,r16,r17
10013490:	dfc00517 	ldw	ra,20(sp)
10013494:	dd000417 	ldw	r20,16(sp)
10013498:	dcc00317 	ldw	r19,12(sp)
1001349c:	dc800217 	ldw	r18,8(sp)
100134a0:	dc400117 	ldw	r17,4(sp)
100134a4:	dc000017 	ldw	r16,0(sp)
100134a8:	dec00604 	addi	sp,sp,24
100134ac:	f800283a 	ret
100134b0:	800d883a 	mov	r6,r16
100134b4:	003fef06 	br	10013474 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x4c>
100134b8:	3021883a 	mov	r16,r6
100134bc:	003fe806 	br	10013460 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x38>
100134c0:	014400b4 	movhi	r5,4098
100134c4:	010400b4 	movhi	r4,4098
100134c8:	800f883a 	mov	r7,r16
100134cc:	900d883a 	mov	r6,r18
100134d0:	29560104 	addi	r5,r5,22532
100134d4:	2115dd04 	addi	r4,r4,22388
100134d8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

100134dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj>:
100134dc:	defffd04 	addi	sp,sp,-12
100134e0:	dc400115 	stw	r17,4(sp)
100134e4:	dfc00215 	stw	ra,8(sp)
100134e8:	dc000015 	stw	r16,0(sp)
100134ec:	24000117 	ldw	r16,4(r4)
100134f0:	2805883a 	mov	r2,r5
100134f4:	dc400317 	ldw	r17,12(sp)
100134f8:	81401636 	bltu	r16,r5,10013554 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x78>
100134fc:	8161c83a 	sub	r16,r16,r5
10013500:	34001036 	bltu	r6,r16,10013544 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x68>
10013504:	800d883a 	mov	r6,r16
10013508:	8c000c36 	bltu	r17,r16,1001353c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
1001350c:	30000526 	beq	r6,zero,10013524 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x48>
10013510:	21000017 	ldw	r4,0(r4)
10013514:	380b883a 	mov	r5,r7
10013518:	2089883a 	add	r4,r4,r2
1001351c:	00156640 	call	10015664 <memcmp>
10013520:	1000011e 	bne	r2,zero,10013528 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x4c>
10013524:	8445c83a 	sub	r2,r16,r17
10013528:	dfc00217 	ldw	ra,8(sp)
1001352c:	dc400117 	ldw	r17,4(sp)
10013530:	dc000017 	ldw	r16,0(sp)
10013534:	dec00304 	addi	sp,sp,12
10013538:	f800283a 	ret
1001353c:	880d883a 	mov	r6,r17
10013540:	003ff206 	br	1001350c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
10013544:	3021883a 	mov	r16,r6
10013548:	800d883a 	mov	r6,r16
1001354c:	8c3fef2e 	bgeu	r17,r16,1001350c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
10013550:	003ffa06 	br	1001353c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
10013554:	014400b4 	movhi	r5,4098
10013558:	010400b4 	movhi	r4,4098
1001355c:	800f883a 	mov	r7,r16
10013560:	100d883a 	mov	r6,r2
10013564:	29560104 	addi	r5,r5,22532
10013568:	2115dd04 	addi	r4,r4,22388
1001356c:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10013570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
10013570:	21400015 	stw	r5,0(r4)
10013574:	f800283a 	ret

10013578 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
10013578:	21400015 	stw	r5,0(r4)
1001357c:	f800283a 	ret

10013580 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
10013580:	00c400b4 	movhi	r3,4098
10013584:	00840074 	movhi	r2,4097
10013588:	deffec04 	addi	sp,sp,-80
1001358c:	2011883a 	mov	r8,r4
10013590:	18d16a04 	addi	r3,r3,17832
10013594:	108da304 	addi	r2,r2,13964
10013598:	01c40074 	movhi	r7,4097
1001359c:	39e26504 	addi	r7,r7,-30316
100135a0:	d8c00c15 	stw	r3,48(sp)
100135a4:	d8800e15 	stw	r2,56(sp)
100135a8:	d8c01204 	addi	r3,sp,72
100135ac:	40800204 	addi	r2,r8,8
100135b0:	d9000504 	addi	r4,sp,20
100135b4:	d9400215 	stw	r5,8(sp)
100135b8:	d8c00d15 	stw	r3,52(sp)
100135bc:	dfc01315 	stw	ra,76(sp)
100135c0:	d9c00b15 	stw	r7,44(sp)
100135c4:	d9800315 	stw	r6,12(sp)
100135c8:	da000015 	stw	r8,0(sp)
100135cc:	d8800415 	stw	r2,16(sp)
100135d0:	df001215 	stw	fp,72(sp)
100135d4:	dec00f15 	stw	sp,60(sp)
100135d8:	00142740 	call	10014274 <_Unwind_SjLj_Register>
100135dc:	d9000217 	ldw	r4,8(sp)
100135e0:	00163ac0 	call	100163ac <strlen>
100135e4:	1009883a 	mov	r4,r2
100135e8:	d8c00017 	ldw	r3,0(sp)
100135ec:	d8800417 	ldw	r2,16(sp)
100135f0:	d9000115 	stw	r4,4(sp)
100135f4:	18000115 	stw	zero,4(r3)
100135f8:	18800015 	stw	r2,0(r3)
100135fc:	d8800317 	ldw	r2,12(sp)
10013600:	18000205 	stb	zero,8(r3)
10013604:	11400117 	ldw	r5,4(r2)
10013608:	00800044 	movi	r2,1
1001360c:	d8800615 	stw	r2,24(sp)
10013610:	214b883a 	add	r5,r4,r5
10013614:	1809883a 	mov	r4,r3
10013618:	00111140 	call	10011114 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
1001361c:	d8c00017 	ldw	r3,0(sp)
10013620:	00a00034 	movhi	r2,32768
10013624:	d9000117 	ldw	r4,4(sp)
10013628:	18c00117 	ldw	r3,4(r3)
1001362c:	10bfffc4 	addi	r2,r2,-1
10013630:	10c5c83a 	sub	r2,r2,r3
10013634:	11001236 	bltu	r2,r4,10013680 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x100>
10013638:	d9800117 	ldw	r6,4(sp)
1001363c:	d9400217 	ldw	r5,8(sp)
10013640:	d9000017 	ldw	r4,0(sp)
10013644:	00800044 	movi	r2,1
10013648:	d8800615 	stw	r2,24(sp)
1001364c:	00126900 	call	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013650:	d8800317 	ldw	r2,12(sp)
10013654:	d9000017 	ldw	r4,0(sp)
10013658:	11800117 	ldw	r6,4(r2)
1001365c:	11400017 	ldw	r5,0(r2)
10013660:	00126900 	call	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013664:	d9000504 	addi	r4,sp,20
10013668:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
1001366c:	d8800017 	ldw	r2,0(sp)
10013670:	dfc01317 	ldw	ra,76(sp)
10013674:	df001217 	ldw	fp,72(sp)
10013678:	dec01404 	addi	sp,sp,80
1001367c:	f800283a 	ret
10013680:	010400b4 	movhi	r4,4098
10013684:	21162c04 	addi	r4,r4,22704
10013688:	0009fec0 	call	10009fec <_ZSt20__throw_length_errorPKc>
1001368c:	d8c00717 	ldw	r3,28(sp)
10013690:	d8800017 	ldw	r2,0(sp)
10013694:	d8c00115 	stw	r3,4(sp)
10013698:	10800017 	ldw	r2,0(r2)
1001369c:	d8c00417 	ldw	r3,16(sp)
100136a0:	18800326 	beq	r3,r2,100136b0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x130>
100136a4:	d8800017 	ldw	r2,0(sp)
100136a8:	11000017 	ldw	r4,0(r2)
100136ac:	00083fc0 	call	100083fc <_ZdlPv>
100136b0:	d9000117 	ldw	r4,4(sp)
100136b4:	00bfffc4 	movi	r2,-1
100136b8:	d8800615 	stw	r2,24(sp)
100136bc:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

100136c0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_>:
100136c0:	00c400b4 	movhi	r3,4098
100136c4:	00840074 	movhi	r2,4097
100136c8:	deffec04 	addi	sp,sp,-80
100136cc:	2011883a 	mov	r8,r4
100136d0:	18d16b84 	addi	r3,r3,17838
100136d4:	108de704 	addi	r2,r2,14236
100136d8:	01c40074 	movhi	r7,4097
100136dc:	39e26504 	addi	r7,r7,-30316
100136e0:	d9000504 	addi	r4,sp,20
100136e4:	d8c00c15 	stw	r3,48(sp)
100136e8:	d8800e15 	stw	r2,56(sp)
100136ec:	d8c01204 	addi	r3,sp,72
100136f0:	40800204 	addi	r2,r8,8
100136f4:	d8c00d15 	stw	r3,52(sp)
100136f8:	d8800315 	stw	r2,12(sp)
100136fc:	d9400415 	stw	r5,16(sp)
10013700:	dfc01315 	stw	ra,76(sp)
10013704:	df001215 	stw	fp,72(sp)
10013708:	d9c00b15 	stw	r7,44(sp)
1001370c:	dec00f15 	stw	sp,60(sp)
10013710:	da000115 	stw	r8,4(sp)
10013714:	d9800215 	stw	r6,8(sp)
10013718:	00142740 	call	10014274 <_Unwind_SjLj_Register>
1001371c:	d8c00117 	ldw	r3,4(sp)
10013720:	d9000317 	ldw	r4,12(sp)
10013724:	d8800217 	ldw	r2,8(sp)
10013728:	18000115 	stw	zero,4(r3)
1001372c:	19000015 	stw	r4,0(r3)
10013730:	18000205 	stb	zero,8(r3)
10013734:	11400117 	ldw	r5,4(r2)
10013738:	1809883a 	mov	r4,r3
1001373c:	00800044 	movi	r2,1
10013740:	29400044 	addi	r5,r5,1
10013744:	d8800615 	stw	r2,24(sp)
10013748:	00111140 	call	10011114 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
1001374c:	d8c00117 	ldw	r3,4(sp)
10013750:	d8800407 	ldb	r2,16(sp)
10013754:	01c00044 	movi	r7,1
10013758:	19400117 	ldw	r5,4(r3)
1001375c:	000d883a 	mov	r6,zero
10013760:	d8800015 	stw	r2,0(sp)
10013764:	1809883a 	mov	r4,r3
10013768:	00117940 	call	10011794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
1001376c:	d8800217 	ldw	r2,8(sp)
10013770:	d9000117 	ldw	r4,4(sp)
10013774:	11800117 	ldw	r6,4(r2)
10013778:	11400017 	ldw	r5,0(r2)
1001377c:	00126900 	call	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013780:	d9000504 	addi	r4,sp,20
10013784:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10013788:	d8800117 	ldw	r2,4(sp)
1001378c:	dfc01317 	ldw	ra,76(sp)
10013790:	df001217 	ldw	fp,72(sp)
10013794:	dec01404 	addi	sp,sp,80
10013798:	f800283a 	ret
1001379c:	d8c00117 	ldw	r3,4(sp)
100137a0:	d9000717 	ldw	r4,28(sp)
100137a4:	18800017 	ldw	r2,0(r3)
100137a8:	d9000115 	stw	r4,4(sp)
100137ac:	d9000317 	ldw	r4,12(sp)
100137b0:	20800226 	beq	r4,r2,100137bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_+0xfc>
100137b4:	1009883a 	mov	r4,r2
100137b8:	00083fc0 	call	100083fc <_ZdlPv>
100137bc:	d9000117 	ldw	r4,4(sp)
100137c0:	00bfffc4 	movi	r2,-1
100137c4:	d8800615 	stw	r2,24(sp)
100137c8:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

100137cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>:
100137cc:	defffb04 	addi	sp,sp,-20
100137d0:	dc000115 	stw	r16,4(sp)
100137d4:	3161c83a 	sub	r16,r6,r5
100137d8:	dc800315 	stw	r18,12(sp)
100137dc:	dc400215 	stw	r17,8(sp)
100137e0:	dfc00415 	stw	ra,16(sp)
100137e4:	dc000015 	stw	r16,0(sp)
100137e8:	80800430 	cmpltui	r2,r16,16
100137ec:	2825883a 	mov	r18,r5
100137f0:	2023883a 	mov	r17,r4
100137f4:	10001226 	beq	r2,zero,10013840 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x74>
100137f8:	80c00058 	cmpnei	r3,r16,1
100137fc:	20800017 	ldw	r2,0(r4)
10013800:	18000d1e 	bne	r3,zero,10013838 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x6c>
10013804:	28c00003 	ldbu	r3,0(r5)
10013808:	10c00005 	stb	r3,0(r2)
1001380c:	dc000017 	ldw	r16,0(sp)
10013810:	20800017 	ldw	r2,0(r4)
10013814:	8c000115 	stw	r16,4(r17)
10013818:	1405883a 	add	r2,r2,r16
1001381c:	10000005 	stb	zero,0(r2)
10013820:	dfc00417 	ldw	ra,16(sp)
10013824:	dc800317 	ldw	r18,12(sp)
10013828:	dc400217 	ldw	r17,8(sp)
1001382c:	dc000117 	ldw	r16,4(sp)
10013830:	dec00504 	addi	sp,sp,20
10013834:	f800283a 	ret
10013838:	803ff626 	beq	r16,zero,10013814 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>
1001383c:	00000606 	br	10013858 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x8c>
10013840:	000d883a 	mov	r6,zero
10013844:	d80b883a 	mov	r5,sp
10013848:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
1001384c:	d8c00017 	ldw	r3,0(sp)
10013850:	88800015 	stw	r2,0(r17)
10013854:	88c00215 	stw	r3,8(r17)
10013858:	800d883a 	mov	r6,r16
1001385c:	1009883a 	mov	r4,r2
10013860:	900b883a 	mov	r5,r18
10013864:	00156f00 	call	100156f0 <memcpy>
10013868:	88800017 	ldw	r2,0(r17)
1001386c:	dc000017 	ldw	r16,0(sp)
10013870:	003fe806 	br	10013814 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>

10013874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_>:
10013874:	20c00204 	addi	r3,r4,8
10013878:	000f883a 	mov	r7,zero
1001387c:	20c00015 	stw	r3,0(r4)
10013880:	00137cc1 	jmpi	100137cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>

10013884 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>:
10013884:	defffb04 	addi	sp,sp,-20
10013888:	dc000115 	stw	r16,4(sp)
1001388c:	3161c83a 	sub	r16,r6,r5
10013890:	dc800315 	stw	r18,12(sp)
10013894:	dc400215 	stw	r17,8(sp)
10013898:	dfc00415 	stw	ra,16(sp)
1001389c:	dc000015 	stw	r16,0(sp)
100138a0:	80800430 	cmpltui	r2,r16,16
100138a4:	2825883a 	mov	r18,r5
100138a8:	2023883a 	mov	r17,r4
100138ac:	10001226 	beq	r2,zero,100138f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x74>
100138b0:	80c00058 	cmpnei	r3,r16,1
100138b4:	20800017 	ldw	r2,0(r4)
100138b8:	18000d1e 	bne	r3,zero,100138f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x6c>
100138bc:	28c00003 	ldbu	r3,0(r5)
100138c0:	10c00005 	stb	r3,0(r2)
100138c4:	dc000017 	ldw	r16,0(sp)
100138c8:	20800017 	ldw	r2,0(r4)
100138cc:	8c000115 	stw	r16,4(r17)
100138d0:	1405883a 	add	r2,r2,r16
100138d4:	10000005 	stb	zero,0(r2)
100138d8:	dfc00417 	ldw	ra,16(sp)
100138dc:	dc800317 	ldw	r18,12(sp)
100138e0:	dc400217 	ldw	r17,8(sp)
100138e4:	dc000117 	ldw	r16,4(sp)
100138e8:	dec00504 	addi	sp,sp,20
100138ec:	f800283a 	ret
100138f0:	803ff626 	beq	r16,zero,100138cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>
100138f4:	00000606 	br	10013910 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x8c>
100138f8:	000d883a 	mov	r6,zero
100138fc:	d80b883a 	mov	r5,sp
10013900:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013904:	d8c00017 	ldw	r3,0(sp)
10013908:	88800015 	stw	r2,0(r17)
1001390c:	88c00215 	stw	r3,8(r17)
10013910:	800d883a 	mov	r6,r16
10013914:	1009883a 	mov	r4,r2
10013918:	900b883a 	mov	r5,r18
1001391c:	00156f00 	call	100156f0 <memcpy>
10013920:	88800017 	ldw	r2,0(r17)
10013924:	dc000017 	ldw	r16,0(sp)
10013928:	003fe806 	br	100138cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>

1001392c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_>:
1001392c:	20c00204 	addi	r3,r4,8
10013930:	20c00015 	stw	r3,0(r4)
10013934:	28800017 	ldw	r2,0(r5)
10013938:	29800117 	ldw	r6,4(r5)
1001393c:	000f883a 	mov	r7,zero
10013940:	100b883a 	mov	r5,r2
10013944:	118d883a 	add	r6,r2,r6
10013948:	00138841 	jmpi	10013884 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>

1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
1001394c:	defffb04 	addi	sp,sp,-20
10013950:	dc400215 	stw	r17,8(sp)
10013954:	dfc00415 	stw	ra,16(sp)
10013958:	dc800315 	stw	r18,12(sp)
1001395c:	dc000115 	stw	r16,4(sp)
10013960:	2023883a 	mov	r17,r4
10013964:	28002226 	beq	r5,zero,100139f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa4>
10013968:	3161c83a 	sub	r16,r6,r5
1001396c:	dc000015 	stw	r16,0(sp)
10013970:	80800430 	cmpltui	r2,r16,16
10013974:	2825883a 	mov	r18,r5
10013978:	10001026 	beq	r2,zero,100139bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x70>
1001397c:	80c00058 	cmpnei	r3,r16,1
10013980:	20800017 	ldw	r2,0(r4)
10013984:	18001e1e 	bne	r3,zero,10013a00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xb4>
10013988:	28c00003 	ldbu	r3,0(r5)
1001398c:	10c00005 	stb	r3,0(r2)
10013990:	dc000017 	ldw	r16,0(sp)
10013994:	20800017 	ldw	r2,0(r4)
10013998:	8c000115 	stw	r16,4(r17)
1001399c:	1405883a 	add	r2,r2,r16
100139a0:	10000005 	stb	zero,0(r2)
100139a4:	dfc00417 	ldw	ra,16(sp)
100139a8:	dc800317 	ldw	r18,12(sp)
100139ac:	dc400217 	ldw	r17,8(sp)
100139b0:	dc000117 	ldw	r16,4(sp)
100139b4:	dec00504 	addi	sp,sp,20
100139b8:	f800283a 	ret
100139bc:	000d883a 	mov	r6,zero
100139c0:	d80b883a 	mov	r5,sp
100139c4:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100139c8:	d8c00017 	ldw	r3,0(sp)
100139cc:	88800015 	stw	r2,0(r17)
100139d0:	88c00215 	stw	r3,8(r17)
100139d4:	800d883a 	mov	r6,r16
100139d8:	1009883a 	mov	r4,r2
100139dc:	900b883a 	mov	r5,r18
100139e0:	00156f00 	call	100156f0 <memcpy>
100139e4:	88800017 	ldw	r2,0(r17)
100139e8:	dc000017 	ldw	r16,0(sp)
100139ec:	003fea06 	br	10013998 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
100139f0:	3000051e 	bne	r6,zero,10013a08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xbc>
100139f4:	20800017 	ldw	r2,0(r4)
100139f8:	0021883a 	mov	r16,zero
100139fc:	003fe606 	br	10013998 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10013a00:	803fe526 	beq	r16,zero,10013998 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10013a04:	003ff306 	br	100139d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x88>
10013a08:	010400b4 	movhi	r4,4098
10013a0c:	21167604 	addi	r4,r4,23000
10013a10:	0009de80 	call	10009de8 <_ZSt19__throw_logic_errorPKc>

10013a14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
10013a14:	20c00204 	addi	r3,r4,8
10013a18:	20c00015 	stw	r3,0(r4)
10013a1c:	28800017 	ldw	r2,0(r5)
10013a20:	29800117 	ldw	r6,4(r5)
10013a24:	000f883a 	mov	r7,zero
10013a28:	100b883a 	mov	r5,r2
10013a2c:	118d883a 	add	r6,r2,r6
10013a30:	001394c1 	jmpi	1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

10013a34 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
10013a34:	00c400b4 	movhi	r3,4098
10013a38:	00840074 	movhi	r2,4097
10013a3c:	deffed04 	addi	sp,sp,-76
10013a40:	2011883a 	mov	r8,r4
10013a44:	18d16d04 	addi	r3,r3,17844
10013a48:	108ebf04 	addi	r2,r2,15100
10013a4c:	01c40074 	movhi	r7,4097
10013a50:	39e26504 	addi	r7,r7,-30316
10013a54:	d9000404 	addi	r4,sp,16
10013a58:	d8c00b15 	stw	r3,44(sp)
10013a5c:	d8800d15 	stw	r2,52(sp)
10013a60:	d8c01104 	addi	r3,sp,68
10013a64:	40800204 	addi	r2,r8,8
10013a68:	dfc01215 	stw	ra,72(sp)
10013a6c:	d9c00a15 	stw	r7,40(sp)
10013a70:	d8c00c15 	stw	r3,48(sp)
10013a74:	da000015 	stw	r8,0(sp)
10013a78:	d8800115 	stw	r2,4(sp)
10013a7c:	d9400215 	stw	r5,8(sp)
10013a80:	d9800315 	stw	r6,12(sp)
10013a84:	df001115 	stw	fp,68(sp)
10013a88:	dec00e15 	stw	sp,56(sp)
10013a8c:	00142740 	call	10014274 <_Unwind_SjLj_Register>
10013a90:	d8c00017 	ldw	r3,0(sp)
10013a94:	d8800117 	ldw	r2,4(sp)
10013a98:	d9000217 	ldw	r4,8(sp)
10013a9c:	000f883a 	mov	r7,zero
10013aa0:	18800015 	stw	r2,0(r3)
10013aa4:	20800017 	ldw	r2,0(r4)
10013aa8:	21800117 	ldw	r6,4(r4)
10013aac:	1809883a 	mov	r4,r3
10013ab0:	100b883a 	mov	r5,r2
10013ab4:	118d883a 	add	r6,r2,r6
10013ab8:	00bfffc4 	movi	r2,-1
10013abc:	d8800515 	stw	r2,20(sp)
10013ac0:	001394c0 	call	1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
10013ac4:	00800044 	movi	r2,1
10013ac8:	d8800515 	stw	r2,20(sp)
10013acc:	d8800317 	ldw	r2,12(sp)
10013ad0:	d9000017 	ldw	r4,0(sp)
10013ad4:	11800117 	ldw	r6,4(r2)
10013ad8:	11400017 	ldw	r5,0(r2)
10013adc:	00126900 	call	10012690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013ae0:	d9000404 	addi	r4,sp,16
10013ae4:	001428c0 	call	1001428c <_Unwind_SjLj_Unregister>
10013ae8:	d8800017 	ldw	r2,0(sp)
10013aec:	dfc01217 	ldw	ra,72(sp)
10013af0:	df001117 	ldw	fp,68(sp)
10013af4:	dec01304 	addi	sp,sp,76
10013af8:	f800283a 	ret
10013afc:	d8c00017 	ldw	r3,0(sp)
10013b00:	d9000617 	ldw	r4,24(sp)
10013b04:	18800017 	ldw	r2,0(r3)
10013b08:	d9000015 	stw	r4,0(sp)
10013b0c:	d9000117 	ldw	r4,4(sp)
10013b10:	20800226 	beq	r4,r2,10013b1c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_+0xe8>
10013b14:	1009883a 	mov	r4,r2
10013b18:	00083fc0 	call	100083fc <_ZdlPv>
10013b1c:	d9000017 	ldw	r4,0(sp)
10013b20:	00bfffc4 	movi	r2,-1
10013b24:	d8800515 	stw	r2,20(sp)
10013b28:	001445c0 	call	1001445c <_Unwind_SjLj_Resume>

10013b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
10013b2c:	20c00204 	addi	r3,r4,8
10013b30:	000f883a 	mov	r7,zero
10013b34:	20c00015 	stw	r3,0(r4)
10013b38:	001394c1 	jmpi	1001394c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
10013b3c:	defffb04 	addi	sp,sp,-20
10013b40:	dc400215 	stw	r17,8(sp)
10013b44:	dfc00415 	stw	ra,16(sp)
10013b48:	dc800315 	stw	r18,12(sp)
10013b4c:	dc000115 	stw	r16,4(sp)
10013b50:	2023883a 	mov	r17,r4
10013b54:	28002226 	beq	r5,zero,10013be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa4>
10013b58:	3161c83a 	sub	r16,r6,r5
10013b5c:	dc000015 	stw	r16,0(sp)
10013b60:	80800430 	cmpltui	r2,r16,16
10013b64:	2825883a 	mov	r18,r5
10013b68:	10001026 	beq	r2,zero,10013bac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x70>
10013b6c:	80c00058 	cmpnei	r3,r16,1
10013b70:	20800017 	ldw	r2,0(r4)
10013b74:	18001e1e 	bne	r3,zero,10013bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xb4>
10013b78:	28c00003 	ldbu	r3,0(r5)
10013b7c:	10c00005 	stb	r3,0(r2)
10013b80:	dc000017 	ldw	r16,0(sp)
10013b84:	20800017 	ldw	r2,0(r4)
10013b88:	8c000115 	stw	r16,4(r17)
10013b8c:	1405883a 	add	r2,r2,r16
10013b90:	10000005 	stb	zero,0(r2)
10013b94:	dfc00417 	ldw	ra,16(sp)
10013b98:	dc800317 	ldw	r18,12(sp)
10013b9c:	dc400217 	ldw	r17,8(sp)
10013ba0:	dc000117 	ldw	r16,4(sp)
10013ba4:	dec00504 	addi	sp,sp,20
10013ba8:	f800283a 	ret
10013bac:	000d883a 	mov	r6,zero
10013bb0:	d80b883a 	mov	r5,sp
10013bb4:	00108540 	call	10010854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013bb8:	d8c00017 	ldw	r3,0(sp)
10013bbc:	88800015 	stw	r2,0(r17)
10013bc0:	88c00215 	stw	r3,8(r17)
10013bc4:	800d883a 	mov	r6,r16
10013bc8:	1009883a 	mov	r4,r2
10013bcc:	900b883a 	mov	r5,r18
10013bd0:	00156f00 	call	100156f0 <memcpy>
10013bd4:	88800017 	ldw	r2,0(r17)
10013bd8:	dc000017 	ldw	r16,0(sp)
10013bdc:	003fea06 	br	10013b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013be0:	3000051e 	bne	r6,zero,10013bf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbc>
10013be4:	20800017 	ldw	r2,0(r4)
10013be8:	0021883a 	mov	r16,zero
10013bec:	003fe606 	br	10013b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013bf0:	803fe526 	beq	r16,zero,10013b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013bf4:	003ff306 	br	10013bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x88>
10013bf8:	010400b4 	movhi	r4,4098
10013bfc:	21167604 	addi	r4,r4,23000
10013c00:	0009de80 	call	10009de8 <_ZSt19__throw_logic_errorPKc>

10013c04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_>:
10013c04:	20c00204 	addi	r3,r4,8
10013c08:	20c00015 	stw	r3,0(r4)
10013c0c:	28800117 	ldw	r2,4(r5)
10013c10:	29400017 	ldw	r5,0(r5)
10013c14:	11800536 	bltu	r2,r6,10013c2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_+0x28>
10013c18:	3007883a 	mov	r3,r6
10013c1c:	000f883a 	mov	r7,zero
10013c20:	288d883a 	add	r6,r5,r2
10013c24:	28cb883a 	add	r5,r5,r3
10013c28:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013c2c:	014400b4 	movhi	r5,4098
10013c30:	010400b4 	movhi	r4,4098
10013c34:	deffff04 	addi	sp,sp,-4
10013c38:	100f883a 	mov	r7,r2
10013c3c:	29564304 	addi	r5,r5,22796
10013c40:	2115dd04 	addi	r4,r4,22388
10013c44:	dfc00015 	stw	ra,0(sp)
10013c48:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10013c4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj>:
10013c4c:	20800204 	addi	r2,r4,8
10013c50:	20800015 	stw	r2,0(r4)
10013c54:	28800117 	ldw	r2,4(r5)
10013c58:	29400017 	ldw	r5,0(r5)
10013c5c:	11800b36 	bltu	r2,r6,10013c8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x40>
10013c60:	3007883a 	mov	r3,r6
10013c64:	118dc83a 	sub	r6,r2,r6
10013c68:	28cb883a 	add	r5,r5,r3
10013c6c:	39800336 	bltu	r7,r6,10013c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x30>
10013c70:	000f883a 	mov	r7,zero
10013c74:	298d883a 	add	r6,r5,r6
10013c78:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013c7c:	380d883a 	mov	r6,r7
10013c80:	298d883a 	add	r6,r5,r6
10013c84:	000f883a 	mov	r7,zero
10013c88:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013c8c:	014400b4 	movhi	r5,4098
10013c90:	010400b4 	movhi	r4,4098
10013c94:	deffff04 	addi	sp,sp,-4
10013c98:	100f883a 	mov	r7,r2
10013c9c:	29564304 	addi	r5,r5,22796
10013ca0:	2115dd04 	addi	r4,r4,22388
10013ca4:	dfc00015 	stw	ra,0(sp)
10013ca8:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10013cac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_>:
10013cac:	20800204 	addi	r2,r4,8
10013cb0:	20800015 	stw	r2,0(r4)
10013cb4:	28800117 	ldw	r2,4(r5)
10013cb8:	29400017 	ldw	r5,0(r5)
10013cbc:	11800b36 	bltu	r2,r6,10013cec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x40>
10013cc0:	3007883a 	mov	r3,r6
10013cc4:	118dc83a 	sub	r6,r2,r6
10013cc8:	28cb883a 	add	r5,r5,r3
10013ccc:	39800336 	bltu	r7,r6,10013cdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x30>
10013cd0:	000f883a 	mov	r7,zero
10013cd4:	298d883a 	add	r6,r5,r6
10013cd8:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013cdc:	380d883a 	mov	r6,r7
10013ce0:	298d883a 	add	r6,r5,r6
10013ce4:	000f883a 	mov	r7,zero
10013ce8:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013cec:	014400b4 	movhi	r5,4098
10013cf0:	010400b4 	movhi	r4,4098
10013cf4:	deffff04 	addi	sp,sp,-4
10013cf8:	100f883a 	mov	r7,r2
10013cfc:	29568104 	addi	r5,r5,23044
10013d00:	2115dd04 	addi	r4,r4,22388
10013d04:	dfc00015 	stw	ra,0(sp)
10013d08:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10013d0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_>:
10013d0c:	20c00204 	addi	r3,r4,8
10013d10:	000f883a 	mov	r7,zero
10013d14:	298d883a 	add	r6,r5,r6
10013d18:	20c00015 	stw	r3,0(r4)
10013d1c:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
10013d20:	defffd04 	addi	sp,sp,-12
10013d24:	dc000115 	stw	r16,4(sp)
10013d28:	dfc00215 	stw	ra,8(sp)
10013d2c:	20800204 	addi	r2,r4,8
10013d30:	20800015 	stw	r2,0(r4)
10013d34:	2021883a 	mov	r16,r4
10013d38:	28000b26 	beq	r5,zero,10013d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x48>
10013d3c:	2809883a 	mov	r4,r5
10013d40:	d9400015 	stw	r5,0(sp)
10013d44:	00163ac0 	call	100163ac <strlen>
10013d48:	d9400017 	ldw	r5,0(sp)
10013d4c:	288d883a 	add	r6,r5,r2
10013d50:	000f883a 	mov	r7,zero
10013d54:	8009883a 	mov	r4,r16
10013d58:	dfc00217 	ldw	ra,8(sp)
10013d5c:	dc000117 	ldw	r16,4(sp)
10013d60:	dec00304 	addi	sp,sp,12
10013d64:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013d68:	01bfffc4 	movi	r6,-1
10013d6c:	003ff806 	br	10013d50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x30>

10013d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_>:
10013d70:	20c00204 	addi	r3,r4,8
10013d74:	000f883a 	mov	r7,zero
10013d78:	298d883a 	add	r6,r5,r6
10013d7c:	20c00015 	stw	r3,0(r4)
10013d80:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_>:
10013d84:	20c00204 	addi	r3,r4,8
10013d88:	000f883a 	mov	r7,zero
10013d8c:	20c00015 	stw	r3,0(r4)
10013d90:	0013b3c1 	jmpi	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013d94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj>:
10013d94:	defffe04 	addi	sp,sp,-8
10013d98:	dfc00115 	stw	ra,4(sp)
10013d9c:	dc000015 	stw	r16,0(sp)
10013da0:	28800117 	ldw	r2,4(r5)
10013da4:	11801b36 	bltu	r2,r6,10013e14 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x80>
10013da8:	20800204 	addi	r2,r4,8
10013dac:	20800015 	stw	r2,0(r4)
10013db0:	28c00117 	ldw	r3,4(r5)
10013db4:	3011883a 	mov	r8,r6
10013db8:	2021883a 	mov	r16,r4
10013dbc:	29400017 	ldw	r5,0(r5)
10013dc0:	19800e36 	bltu	r3,r6,10013dfc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x68>
10013dc4:	198dc83a 	sub	r6,r3,r6
10013dc8:	2a0b883a 	add	r5,r5,r8
10013dcc:	39800936 	bltu	r7,r6,10013df4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x60>
10013dd0:	000f883a 	mov	r7,zero
10013dd4:	298d883a 	add	r6,r5,r6
10013dd8:	8009883a 	mov	r4,r16
10013ddc:	0013b3c0 	call	10013b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013de0:	8005883a 	mov	r2,r16
10013de4:	dfc00117 	ldw	ra,4(sp)
10013de8:	dc000017 	ldw	r16,0(sp)
10013dec:	dec00204 	addi	sp,sp,8
10013df0:	f800283a 	ret
10013df4:	380d883a 	mov	r6,r7
10013df8:	003ff506 	br	10013dd0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x3c>
10013dfc:	014400b4 	movhi	r5,4098
10013e00:	010400b4 	movhi	r4,4098
10013e04:	180f883a 	mov	r7,r3
10013e08:	29564304 	addi	r5,r5,22796
10013e0c:	2115dd04 	addi	r4,r4,22388
10013e10:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>
10013e14:	014400b4 	movhi	r5,4098
10013e18:	010400b4 	movhi	r4,4098
10013e1c:	100f883a 	mov	r7,r2
10013e20:	29564a04 	addi	r5,r5,22824
10013e24:	2115dd04 	addi	r4,r4,22388
10013e28:	000a1440 	call	1000a144 <_ZSt24__throw_out_of_range_fmtPKcz>

10013e2c <_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
10013e2c:	20800017 	ldw	r2,0(r4)
10013e30:	28c00017 	ldw	r3,0(r5)
10013e34:	10c5003a 	cmpeq	r2,r2,r3
10013e38:	f800283a 	ret

10013e3c <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_>:
10013e3c:	20800017 	ldw	r2,0(r4)
10013e40:	28c00017 	ldw	r3,0(r5)
10013e44:	10c5003a 	cmpeq	r2,r2,r3
10013e48:	f800283a 	ret

10013e4c <__muldi3>:
10013e4c:	20bfffcc 	andi	r2,r4,65535
10013e50:	2012d43a 	srli	r9,r4,16
10013e54:	32bfffcc 	andi	r10,r6,65535
10013e58:	3018d43a 	srli	r12,r6,16
10013e5c:	1297383a 	mul	r11,r2,r10
10013e60:	4a95383a 	mul	r10,r9,r10
10013e64:	1311383a 	mul	r8,r2,r12
10013e68:	5804d43a 	srli	r2,r11,16
10013e6c:	4b13383a 	mul	r9,r9,r12
10013e70:	4291883a 	add	r8,r8,r10
10013e74:	1205883a 	add	r2,r2,r8
10013e78:	1280022e 	bgeu	r2,r10,10013e84 <__muldi3+0x38>
10013e7c:	00c00074 	movhi	r3,1
10013e80:	48d3883a 	add	r9,r9,r3
10013e84:	1010d43a 	srli	r8,r2,16
10013e88:	21c9383a 	mul	r4,r4,r7
10013e8c:	314d383a 	mul	r6,r6,r5
10013e90:	1004943a 	slli	r2,r2,16
10013e94:	4253883a 	add	r9,r8,r9
10013e98:	5affffcc 	andi	r11,r11,65535
10013e9c:	2249883a 	add	r4,r4,r9
10013ea0:	12c5883a 	add	r2,r2,r11
10013ea4:	2187883a 	add	r3,r4,r6
10013ea8:	f800283a 	ret

10013eac <__divsi3>:
10013eac:	20001a16 	blt	r4,zero,10013f18 <__divsi3+0x6c>
10013eb0:	000f883a 	mov	r7,zero
10013eb4:	2800020e 	bge	r5,zero,10013ec0 <__divsi3+0x14>
10013eb8:	014bc83a 	sub	r5,zero,r5
10013ebc:	39c0005c 	xori	r7,r7,1
10013ec0:	200d883a 	mov	r6,r4
10013ec4:	00c00044 	movi	r3,1
10013ec8:	2900092e 	bgeu	r5,r4,10013ef0 <__divsi3+0x44>
10013ecc:	00800804 	movi	r2,32
10013ed0:	00c00044 	movi	r3,1
10013ed4:	00000106 	br	10013edc <__divsi3+0x30>
10013ed8:	10001226 	beq	r2,zero,10013f24 <__divsi3+0x78>
10013edc:	294b883a 	add	r5,r5,r5
10013ee0:	10bfffc4 	addi	r2,r2,-1
10013ee4:	18c7883a 	add	r3,r3,r3
10013ee8:	293ffb36 	bltu	r5,r4,10013ed8 <__divsi3+0x2c>
10013eec:	18000d26 	beq	r3,zero,10013f24 <__divsi3+0x78>
10013ef0:	0005883a 	mov	r2,zero
10013ef4:	31400236 	bltu	r6,r5,10013f00 <__divsi3+0x54>
10013ef8:	314dc83a 	sub	r6,r6,r5
10013efc:	10c4b03a 	or	r2,r2,r3
10013f00:	1806d07a 	srli	r3,r3,1
10013f04:	280ad07a 	srli	r5,r5,1
10013f08:	183ffa1e 	bne	r3,zero,10013ef4 <__divsi3+0x48>
10013f0c:	38000126 	beq	r7,zero,10013f14 <__divsi3+0x68>
10013f10:	0085c83a 	sub	r2,zero,r2
10013f14:	f800283a 	ret
10013f18:	0109c83a 	sub	r4,zero,r4
10013f1c:	01c00044 	movi	r7,1
10013f20:	003fe406 	br	10013eb4 <__divsi3+0x8>
10013f24:	0005883a 	mov	r2,zero
10013f28:	003ff806 	br	10013f0c <__divsi3+0x60>

10013f2c <__modsi3>:
10013f2c:	20001a16 	blt	r4,zero,10013f98 <__modsi3+0x6c>
10013f30:	000f883a 	mov	r7,zero
10013f34:	2005883a 	mov	r2,r4
10013f38:	2800010e 	bge	r5,zero,10013f40 <__modsi3+0x14>
10013f3c:	014bc83a 	sub	r5,zero,r5
10013f40:	00c00044 	movi	r3,1
10013f44:	2900092e 	bgeu	r5,r4,10013f6c <__modsi3+0x40>
10013f48:	01800804 	movi	r6,32
10013f4c:	00c00044 	movi	r3,1
10013f50:	00000106 	br	10013f58 <__modsi3+0x2c>
10013f54:	30000d26 	beq	r6,zero,10013f8c <__modsi3+0x60>
10013f58:	294b883a 	add	r5,r5,r5
10013f5c:	31bfffc4 	addi	r6,r6,-1
10013f60:	18c7883a 	add	r3,r3,r3
10013f64:	293ffb36 	bltu	r5,r4,10013f54 <__modsi3+0x28>
10013f68:	18000826 	beq	r3,zero,10013f8c <__modsi3+0x60>
10013f6c:	1806d07a 	srli	r3,r3,1
10013f70:	11400136 	bltu	r2,r5,10013f78 <__modsi3+0x4c>
10013f74:	1145c83a 	sub	r2,r2,r5
10013f78:	280ad07a 	srli	r5,r5,1
10013f7c:	183ffb1e 	bne	r3,zero,10013f6c <__modsi3+0x40>
10013f80:	38000126 	beq	r7,zero,10013f88 <__modsi3+0x5c>
10013f84:	0085c83a 	sub	r2,zero,r2
10013f88:	f800283a 	ret
10013f8c:	2005883a 	mov	r2,r4
10013f90:	383ffd26 	beq	r7,zero,10013f88 <__modsi3+0x5c>
10013f94:	003ffb06 	br	10013f84 <__modsi3+0x58>
10013f98:	0109c83a 	sub	r4,zero,r4
10013f9c:	01c00044 	movi	r7,1
10013fa0:	003fe406 	br	10013f34 <__modsi3+0x8>

10013fa4 <__udivsi3>:
10013fa4:	200d883a 	mov	r6,r4
10013fa8:	2900152e 	bgeu	r5,r4,10014000 <__udivsi3+0x5c>
10013fac:	28001416 	blt	r5,zero,10014000 <__udivsi3+0x5c>
10013fb0:	00800804 	movi	r2,32
10013fb4:	00c00044 	movi	r3,1
10013fb8:	00000206 	br	10013fc4 <__udivsi3+0x20>
10013fbc:	10000e26 	beq	r2,zero,10013ff8 <__udivsi3+0x54>
10013fc0:	28000516 	blt	r5,zero,10013fd8 <__udivsi3+0x34>
10013fc4:	294b883a 	add	r5,r5,r5
10013fc8:	10bfffc4 	addi	r2,r2,-1
10013fcc:	18c7883a 	add	r3,r3,r3
10013fd0:	293ffa36 	bltu	r5,r4,10013fbc <__udivsi3+0x18>
10013fd4:	18000826 	beq	r3,zero,10013ff8 <__udivsi3+0x54>
10013fd8:	0005883a 	mov	r2,zero
10013fdc:	31400236 	bltu	r6,r5,10013fe8 <__udivsi3+0x44>
10013fe0:	314dc83a 	sub	r6,r6,r5
10013fe4:	10c4b03a 	or	r2,r2,r3
10013fe8:	1806d07a 	srli	r3,r3,1
10013fec:	280ad07a 	srli	r5,r5,1
10013ff0:	183ffa1e 	bne	r3,zero,10013fdc <__udivsi3+0x38>
10013ff4:	f800283a 	ret
10013ff8:	0005883a 	mov	r2,zero
10013ffc:	f800283a 	ret
10014000:	00c00044 	movi	r3,1
10014004:	003ff406 	br	10013fd8 <__udivsi3+0x34>

10014008 <__umodsi3>:
10014008:	2005883a 	mov	r2,r4
1001400c:	2900132e 	bgeu	r5,r4,1001405c <__umodsi3+0x54>
10014010:	28001216 	blt	r5,zero,1001405c <__umodsi3+0x54>
10014014:	01800804 	movi	r6,32
10014018:	00c00044 	movi	r3,1
1001401c:	00000206 	br	10014028 <__umodsi3+0x20>
10014020:	30000c26 	beq	r6,zero,10014054 <__umodsi3+0x4c>
10014024:	28000516 	blt	r5,zero,1001403c <__umodsi3+0x34>
10014028:	294b883a 	add	r5,r5,r5
1001402c:	31bfffc4 	addi	r6,r6,-1
10014030:	18c7883a 	add	r3,r3,r3
10014034:	293ffa36 	bltu	r5,r4,10014020 <__umodsi3+0x18>
10014038:	18000626 	beq	r3,zero,10014054 <__umodsi3+0x4c>
1001403c:	1806d07a 	srli	r3,r3,1
10014040:	11400136 	bltu	r2,r5,10014048 <__umodsi3+0x40>
10014044:	1145c83a 	sub	r2,r2,r5
10014048:	280ad07a 	srli	r5,r5,1
1001404c:	183ffb1e 	bne	r3,zero,1001403c <__umodsi3+0x34>
10014050:	f800283a 	ret
10014054:	2005883a 	mov	r2,r4
10014058:	f800283a 	ret
1001405c:	00c00044 	movi	r3,1
10014060:	003ff606 	br	1001403c <__umodsi3+0x34>

10014064 <_Unwind_ForcedUnwind_Phase2>:
10014064:	28800017 	ldw	r2,0(r5)
10014068:	defff504 	addi	sp,sp,-44
1001406c:	dd400815 	stw	r21,32(sp)
10014070:	dd000715 	stw	r20,28(sp)
10014074:	dcc00615 	stw	r19,24(sp)
10014078:	dc800515 	stw	r18,20(sp)
1001407c:	dc400415 	stw	r17,16(sp)
10014080:	dc000315 	stw	r16,12(sp)
10014084:	dfc00a15 	stw	ra,40(sp)
10014088:	dd800915 	stw	r22,36(sp)
1001408c:	302b883a 	mov	r21,r6
10014090:	2823883a 	mov	r17,r5
10014094:	2021883a 	mov	r16,r4
10014098:	24c00317 	ldw	r19,12(r4)
1001409c:	25000417 	ldw	r20,16(r4)
100140a0:	21800017 	ldw	r6,0(r4)
100140a4:	21c00117 	ldw	r7,4(r4)
100140a8:	04800044 	movi	r18,1
100140ac:	10001d26 	beq	r2,zero,10014124 <_Unwind_ForcedUnwind_Phase2+0xc0>
100140b0:	15800617 	ldw	r22,24(r2)
100140b4:	01400284 	movi	r5,10
100140b8:	01000044 	movi	r4,1
100140bc:	dd000215 	stw	r20,8(sp)
100140c0:	dc400115 	stw	r17,4(sp)
100140c4:	dc000015 	stw	r16,0(sp)
100140c8:	983ee83a 	callr	r19
100140cc:	01400284 	movi	r5,10
100140d0:	01000044 	movi	r4,1
100140d4:	10001a1e 	bne	r2,zero,10014140 <_Unwind_ForcedUnwind_Phase2+0xdc>
100140d8:	81800017 	ldw	r6,0(r16)
100140dc:	81c00117 	ldw	r7,4(r16)
100140e0:	b0000926 	beq	r22,zero,10014108 <_Unwind_ForcedUnwind_Phase2+0xa4>
100140e4:	dc400115 	stw	r17,4(sp)
100140e8:	dc000015 	stw	r16,0(sp)
100140ec:	b03ee83a 	callr	r22
100140f0:	10c001e0 	cmpeqi	r3,r2,7
100140f4:	11000218 	cmpnei	r4,r2,8
100140f8:	18001d1e 	bne	r3,zero,10014170 <_Unwind_ForcedUnwind_Phase2+0x10c>
100140fc:	2000101e 	bne	r4,zero,10014140 <_Unwind_ForcedUnwind_Phase2+0xdc>
10014100:	81800017 	ldw	r6,0(r16)
10014104:	81c00117 	ldw	r7,4(r16)
10014108:	88800017 	ldw	r2,0(r17)
1001410c:	00c400f4 	movhi	r3,4099
10014110:	94800044 	addi	r18,r18,1
10014114:	10800017 	ldw	r2,0(r2)
10014118:	18aa6715 	stw	r2,-22116(r3)
1001411c:	88800015 	stw	r2,0(r17)
10014120:	103fe31e 	bne	r2,zero,100140b0 <_Unwind_ForcedUnwind_Phase2+0x4c>
10014124:	dd000215 	stw	r20,8(sp)
10014128:	dc400115 	stw	r17,4(sp)
1001412c:	dc000015 	stw	r16,0(sp)
10014130:	01400684 	movi	r5,26
10014134:	01000044 	movi	r4,1
10014138:	983ee83a 	callr	r19
1001413c:	10000b26 	beq	r2,zero,1001416c <_Unwind_ForcedUnwind_Phase2+0x108>
10014140:	00800084 	movi	r2,2
10014144:	dfc00a17 	ldw	ra,40(sp)
10014148:	dd800917 	ldw	r22,36(sp)
1001414c:	dd400817 	ldw	r21,32(sp)
10014150:	dd000717 	ldw	r20,28(sp)
10014154:	dcc00617 	ldw	r19,24(sp)
10014158:	dc800517 	ldw	r18,20(sp)
1001415c:	dc400417 	ldw	r17,16(sp)
10014160:	dc000317 	ldw	r16,12(sp)
10014164:	dec00b04 	addi	sp,sp,44
10014168:	f800283a 	ret
1001416c:	00800144 	movi	r2,5
10014170:	ac800015 	stw	r18,0(r21)
10014174:	003ff306 	br	10014144 <_Unwind_ForcedUnwind_Phase2+0xe0>

10014178 <_Unwind_RaiseException_Phase2>:
10014178:	28800017 	ldw	r2,0(r5)
1001417c:	10002f26 	beq	r2,zero,1001423c <_Unwind_RaiseException_Phase2+0xc4>
10014180:	defff804 	addi	sp,sp,-32
10014184:	dcc00515 	stw	r19,20(sp)
10014188:	dc800415 	stw	r18,16(sp)
1001418c:	dc400315 	stw	r17,12(sp)
10014190:	dc000215 	stw	r16,8(sp)
10014194:	dfc00715 	stw	ra,28(sp)
10014198:	dd000615 	stw	r20,24(sp)
1001419c:	3025883a 	mov	r18,r6
100141a0:	2021883a 	mov	r16,r4
100141a4:	2823883a 	mov	r17,r5
100141a8:	04c00044 	movi	r19,1
100141ac:	00001306 	br	100141fc <_Unwind_RaiseException_Phase2+0x84>
100141b0:	18000e26 	beq	r3,zero,100141ec <_Unwind_RaiseException_Phase2+0x74>
100141b4:	01400084 	movi	r5,2
100141b8:	0029883a 	mov	r20,zero
100141bc:	81800017 	ldw	r6,0(r16)
100141c0:	81c00117 	ldw	r7,4(r16)
100141c4:	01000044 	movi	r4,1
100141c8:	dc400115 	stw	r17,4(sp)
100141cc:	dc000015 	stw	r16,0(sp)
100141d0:	183ee83a 	callr	r3
100141d4:	10c001e0 	cmpeqi	r3,r2,7
100141d8:	18001a1e 	bne	r3,zero,10014244 <_Unwind_RaiseException_Phase2+0xcc>
100141dc:	10800218 	cmpnei	r2,r2,8
100141e0:	10000d1e 	bne	r2,zero,10014218 <_Unwind_RaiseException_Phase2+0xa0>
100141e4:	a000191e 	bne	r20,zero,1001424c <_Unwind_RaiseException_Phase2+0xd4>
100141e8:	88800017 	ldw	r2,0(r17)
100141ec:	10800017 	ldw	r2,0(r2)
100141f0:	9cc00044 	addi	r19,r19,1
100141f4:	88800015 	stw	r2,0(r17)
100141f8:	10000726 	beq	r2,zero,10014218 <_Unwind_RaiseException_Phase2+0xa0>
100141fc:	81000417 	ldw	r4,16(r16)
10014200:	10c00617 	ldw	r3,24(r2)
10014204:	113fea1e 	bne	r2,r4,100141b0 <_Unwind_RaiseException_Phase2+0x38>
10014208:	18001026 	beq	r3,zero,1001424c <_Unwind_RaiseException_Phase2+0xd4>
1001420c:	01400184 	movi	r5,6
10014210:	05000104 	movi	r20,4
10014214:	003fe906 	br	100141bc <_Unwind_RaiseException_Phase2+0x44>
10014218:	00800084 	movi	r2,2
1001421c:	dfc00717 	ldw	ra,28(sp)
10014220:	dd000617 	ldw	r20,24(sp)
10014224:	dcc00517 	ldw	r19,20(sp)
10014228:	dc800417 	ldw	r18,16(sp)
1001422c:	dc400317 	ldw	r17,12(sp)
10014230:	dc000217 	ldw	r16,8(sp)
10014234:	dec00804 	addi	sp,sp,32
10014238:	f800283a 	ret
1001423c:	00800084 	movi	r2,2
10014240:	f800283a 	ret
10014244:	94c00015 	stw	r19,0(r18)
10014248:	003ff406 	br	1001421c <_Unwind_RaiseException_Phase2+0xa4>
1001424c:	001458c0 	call	1001458c <abort>

10014250 <uw_install_context.isra.4>:
10014250:	20c00917 	ldw	r3,36(r4)
10014254:	deffff04 	addi	sp,sp,-4
10014258:	df000015 	stw	fp,0(sp)
1001425c:	014400f4 	movhi	r5,4099
10014260:	d839883a 	mov	fp,sp
10014264:	292a6715 	stw	r4,-22116(r5)
10014268:	27000817 	ldw	fp,32(r4)
1001426c:	26c00a17 	ldw	sp,40(r4)
10014270:	1800683a 	jmp	r3

10014274 <_Unwind_SjLj_Register>:
10014274:	008400f4 	movhi	r2,4099
10014278:	10aa6717 	ldw	r2,-22116(r2)
1001427c:	20800015 	stw	r2,0(r4)
10014280:	008400f4 	movhi	r2,4099
10014284:	112a6715 	stw	r4,-22116(r2)
10014288:	f800283a 	ret

1001428c <_Unwind_SjLj_Unregister>:
1001428c:	20c00017 	ldw	r3,0(r4)
10014290:	008400f4 	movhi	r2,4099
10014294:	10ea6715 	stw	r3,-22116(r2)
10014298:	f800283a 	ret

1001429c <_Unwind_GetGR>:
1001429c:	29400084 	addi	r5,r5,2
100142a0:	20800017 	ldw	r2,0(r4)
100142a4:	280a90ba 	slli	r5,r5,2
100142a8:	1145883a 	add	r2,r2,r5
100142ac:	10800017 	ldw	r2,0(r2)
100142b0:	f800283a 	ret

100142b4 <_Unwind_GetCFA>:
100142b4:	20800017 	ldw	r2,0(r4)
100142b8:	10000226 	beq	r2,zero,100142c4 <_Unwind_GetCFA+0x10>
100142bc:	10800a17 	ldw	r2,40(r2)
100142c0:	f800283a 	ret
100142c4:	0005883a 	mov	r2,zero
100142c8:	f800283a 	ret

100142cc <_Unwind_SetGR>:
100142cc:	29400084 	addi	r5,r5,2
100142d0:	20800017 	ldw	r2,0(r4)
100142d4:	280a90ba 	slli	r5,r5,2
100142d8:	1145883a 	add	r2,r2,r5
100142dc:	11800015 	stw	r6,0(r2)
100142e0:	f800283a 	ret

100142e4 <_Unwind_GetIP>:
100142e4:	20800017 	ldw	r2,0(r4)
100142e8:	10800117 	ldw	r2,4(r2)
100142ec:	10800044 	addi	r2,r2,1
100142f0:	f800283a 	ret

100142f4 <_Unwind_GetIPInfo>:
100142f4:	20800017 	ldw	r2,0(r4)
100142f8:	28000015 	stw	zero,0(r5)
100142fc:	10000326 	beq	r2,zero,1001430c <_Unwind_GetIPInfo+0x18>
10014300:	10800117 	ldw	r2,4(r2)
10014304:	10800044 	addi	r2,r2,1
10014308:	f800283a 	ret
1001430c:	0005883a 	mov	r2,zero
10014310:	f800283a 	ret

10014314 <_Unwind_SetIP>:
10014314:	20800017 	ldw	r2,0(r4)
10014318:	297fffc4 	addi	r5,r5,-1
1001431c:	11400115 	stw	r5,4(r2)
10014320:	f800283a 	ret

10014324 <_Unwind_GetLanguageSpecificData>:
10014324:	20800017 	ldw	r2,0(r4)
10014328:	10800717 	ldw	r2,28(r2)
1001432c:	f800283a 	ret

10014330 <_Unwind_GetRegionStart>:
10014330:	0005883a 	mov	r2,zero
10014334:	f800283a 	ret

10014338 <_Unwind_FindEnclosingFunction>:
10014338:	0005883a 	mov	r2,zero
1001433c:	f800283a 	ret

10014340 <_Unwind_GetDataRelBase>:
10014340:	0005883a 	mov	r2,zero
10014344:	f800283a 	ret

10014348 <_Unwind_GetTextRelBase>:
10014348:	0005883a 	mov	r2,zero
1001434c:	f800283a 	ret

10014350 <_Unwind_SjLj_RaiseException>:
10014350:	defff804 	addi	sp,sp,-32
10014354:	008400f4 	movhi	r2,4099
10014358:	dc400515 	stw	r17,20(sp)
1001435c:	146a6717 	ldw	r17,-22116(r2)
10014360:	dfc00715 	stw	ra,28(sp)
10014364:	dc800615 	stw	r18,24(sp)
10014368:	dc000415 	stw	r16,16(sp)
1001436c:	dc400215 	stw	r17,8(sp)
10014370:	88001426 	beq	r17,zero,100143c4 <_Unwind_SjLj_RaiseException+0x74>
10014374:	2021883a 	mov	r16,r4
10014378:	8805883a 	mov	r2,r17
1001437c:	dc800204 	addi	r18,sp,8
10014380:	10800617 	ldw	r2,24(r2)
10014384:	10000b26 	beq	r2,zero,100143b4 <_Unwind_SjLj_RaiseException+0x64>
10014388:	81800017 	ldw	r6,0(r16)
1001438c:	81c00117 	ldw	r7,4(r16)
10014390:	01400044 	movi	r5,1
10014394:	dc800115 	stw	r18,4(sp)
10014398:	dc000015 	stw	r16,0(sp)
1001439c:	01000044 	movi	r4,1
100143a0:	103ee83a 	callr	r2
100143a4:	10c001a0 	cmpeqi	r3,r2,6
100143a8:	18000d1e 	bne	r3,zero,100143e0 <_Unwind_SjLj_RaiseException+0x90>
100143ac:	10800218 	cmpnei	r2,r2,8
100143b0:	1000171e 	bne	r2,zero,10014410 <_Unwind_SjLj_RaiseException+0xc0>
100143b4:	d8800217 	ldw	r2,8(sp)
100143b8:	10800017 	ldw	r2,0(r2)
100143bc:	d8800215 	stw	r2,8(sp)
100143c0:	103fef1e 	bne	r2,zero,10014380 <_Unwind_SjLj_RaiseException+0x30>
100143c4:	00800144 	movi	r2,5
100143c8:	dfc00717 	ldw	ra,28(sp)
100143cc:	dc800617 	ldw	r18,24(sp)
100143d0:	dc400517 	ldw	r17,20(sp)
100143d4:	dc000417 	ldw	r16,16(sp)
100143d8:	dec00804 	addi	sp,sp,32
100143dc:	f800283a 	ret
100143e0:	d8800217 	ldw	r2,8(sp)
100143e4:	80000315 	stw	zero,12(r16)
100143e8:	d9800304 	addi	r6,sp,12
100143ec:	80800415 	stw	r2,16(r16)
100143f0:	900b883a 	mov	r5,r18
100143f4:	8009883a 	mov	r4,r16
100143f8:	dc400215 	stw	r17,8(sp)
100143fc:	00141780 	call	10014178 <_Unwind_RaiseException_Phase2>
10014400:	10c001d8 	cmpnei	r3,r2,7
10014404:	183ff01e 	bne	r3,zero,100143c8 <_Unwind_SjLj_RaiseException+0x78>
10014408:	d9000217 	ldw	r4,8(sp)
1001440c:	00142500 	call	10014250 <uw_install_context.isra.4>
10014410:	008000c4 	movi	r2,3
10014414:	003fec06 	br	100143c8 <_Unwind_SjLj_RaiseException+0x78>

10014418 <_Unwind_SjLj_ForcedUnwind>:
10014418:	008400f4 	movhi	r2,4099
1001441c:	defffd04 	addi	sp,sp,-12
10014420:	10ea6717 	ldw	r3,-22116(r2)
10014424:	dfc00215 	stw	ra,8(sp)
10014428:	21400315 	stw	r5,12(r4)
1001442c:	21800415 	stw	r6,16(r4)
10014430:	d80b883a 	mov	r5,sp
10014434:	d9800104 	addi	r6,sp,4
10014438:	d8c00015 	stw	r3,0(sp)
1001443c:	00140640 	call	10014064 <_Unwind_ForcedUnwind_Phase2>
10014440:	10c001e0 	cmpeqi	r3,r2,7
10014444:	1800031e 	bne	r3,zero,10014454 <_Unwind_SjLj_ForcedUnwind+0x3c>
10014448:	dfc00217 	ldw	ra,8(sp)
1001444c:	dec00304 	addi	sp,sp,12
10014450:	f800283a 	ret
10014454:	d9000017 	ldw	r4,0(sp)
10014458:	00142500 	call	10014250 <uw_install_context.isra.4>

1001445c <_Unwind_SjLj_Resume>:
1001445c:	008400f4 	movhi	r2,4099
10014460:	10ea6717 	ldw	r3,-22116(r2)
10014464:	20800317 	ldw	r2,12(r4)
10014468:	defffd04 	addi	sp,sp,-12
1001446c:	dfc00215 	stw	ra,8(sp)
10014470:	d8c00015 	stw	r3,0(sp)
10014474:	d9800104 	addi	r6,sp,4
10014478:	d80b883a 	mov	r5,sp
1001447c:	1000051e 	bne	r2,zero,10014494 <_Unwind_SjLj_Resume+0x38>
10014480:	00141780 	call	10014178 <_Unwind_RaiseException_Phase2>
10014484:	108001e0 	cmpeqi	r2,r2,7
10014488:	10000426 	beq	r2,zero,1001449c <_Unwind_SjLj_Resume+0x40>
1001448c:	d9000017 	ldw	r4,0(sp)
10014490:	00142500 	call	10014250 <uw_install_context.isra.4>
10014494:	00140640 	call	10014064 <_Unwind_ForcedUnwind_Phase2>
10014498:	003ffa06 	br	10014484 <_Unwind_SjLj_Resume+0x28>
1001449c:	001458c0 	call	1001458c <abort>

100144a0 <_Unwind_SjLj_Resume_or_Rethrow>:
100144a0:	20800317 	ldw	r2,12(r4)
100144a4:	defffd04 	addi	sp,sp,-12
100144a8:	dfc00215 	stw	ra,8(sp)
100144ac:	10000a26 	beq	r2,zero,100144d8 <_Unwind_SjLj_Resume_or_Rethrow+0x38>
100144b0:	008400f4 	movhi	r2,4099
100144b4:	10aa6717 	ldw	r2,-22116(r2)
100144b8:	d9800104 	addi	r6,sp,4
100144bc:	d80b883a 	mov	r5,sp
100144c0:	d8800015 	stw	r2,0(sp)
100144c4:	00140640 	call	10014064 <_Unwind_ForcedUnwind_Phase2>
100144c8:	108001e0 	cmpeqi	r2,r2,7
100144cc:	10000626 	beq	r2,zero,100144e8 <_Unwind_SjLj_Resume_or_Rethrow+0x48>
100144d0:	d9000017 	ldw	r4,0(sp)
100144d4:	00142500 	call	10014250 <uw_install_context.isra.4>
100144d8:	00143500 	call	10014350 <_Unwind_SjLj_RaiseException>
100144dc:	dfc00217 	ldw	ra,8(sp)
100144e0:	dec00304 	addi	sp,sp,12
100144e4:	f800283a 	ret
100144e8:	001458c0 	call	1001458c <abort>

100144ec <_Unwind_DeleteException>:
100144ec:	20800217 	ldw	r2,8(r4)
100144f0:	10000326 	beq	r2,zero,10014500 <_Unwind_DeleteException+0x14>
100144f4:	200b883a 	mov	r5,r4
100144f8:	01000044 	movi	r4,1
100144fc:	1000683a 	jmp	r2
10014500:	f800283a 	ret

10014504 <_Unwind_Backtrace>:
10014504:	008400f4 	movhi	r2,4099
10014508:	10aa6717 	ldw	r2,-22116(r2)
1001450c:	defffb04 	addi	sp,sp,-20
10014510:	dc800315 	stw	r18,12(sp)
10014514:	dc400215 	stw	r17,8(sp)
10014518:	dc000115 	stw	r16,4(sp)
1001451c:	dfc00415 	stw	ra,16(sp)
10014520:	d8800015 	stw	r2,0(sp)
10014524:	2021883a 	mov	r16,r4
10014528:	2823883a 	mov	r17,r5
1001452c:	d825883a 	mov	r18,sp
10014530:	10000826 	beq	r2,zero,10014554 <_Unwind_Backtrace+0x50>
10014534:	880b883a 	mov	r5,r17
10014538:	9009883a 	mov	r4,r18
1001453c:	803ee83a 	callr	r16
10014540:	1000101e 	bne	r2,zero,10014584 <_Unwind_Backtrace+0x80>
10014544:	d8800017 	ldw	r2,0(sp)
10014548:	10800017 	ldw	r2,0(r2)
1001454c:	d8800015 	stw	r2,0(sp)
10014550:	103ff81e 	bne	r2,zero,10014534 <_Unwind_Backtrace+0x30>
10014554:	880b883a 	mov	r5,r17
10014558:	9009883a 	mov	r4,r18
1001455c:	803ee83a 	callr	r16
10014560:	00c00144 	movi	r3,5
10014564:	1000071e 	bne	r2,zero,10014584 <_Unwind_Backtrace+0x80>
10014568:	1805883a 	mov	r2,r3
1001456c:	dfc00417 	ldw	ra,16(sp)
10014570:	dc800317 	ldw	r18,12(sp)
10014574:	dc400217 	ldw	r17,8(sp)
10014578:	dc000117 	ldw	r16,4(sp)
1001457c:	dec00504 	addi	sp,sp,20
10014580:	f800283a 	ret
10014584:	00c000c4 	movi	r3,3
10014588:	003ff706 	br	10014568 <_Unwind_Backtrace+0x64>

1001458c <abort>:
1001458c:	deffff04 	addi	sp,sp,-4
10014590:	01000184 	movi	r4,6
10014594:	dfc00015 	stw	ra,0(sp)
10014598:	00160e00 	call	100160e0 <raise>
1001459c:	01000044 	movi	r4,1
100145a0:	0021c780 	call	10021c78 <_exit>

100145a4 <_fopen_r>:
100145a4:	defffa04 	addi	sp,sp,-24
100145a8:	3005883a 	mov	r2,r6
100145ac:	dcc00415 	stw	r19,16(sp)
100145b0:	d80d883a 	mov	r6,sp
100145b4:	2827883a 	mov	r19,r5
100145b8:	100b883a 	mov	r5,r2
100145bc:	dc800315 	stw	r18,12(sp)
100145c0:	dfc00515 	stw	ra,20(sp)
100145c4:	dc400215 	stw	r17,8(sp)
100145c8:	dc000115 	stw	r16,4(sp)
100145cc:	2025883a 	mov	r18,r4
100145d0:	001a9e80 	call	1001a9e8 <__sflags>
100145d4:	10002726 	beq	r2,zero,10014674 <_fopen_r+0xd0>
100145d8:	9009883a 	mov	r4,r18
100145dc:	1023883a 	mov	r17,r2
100145e0:	001a8900 	call	1001a890 <__sfp>
100145e4:	1021883a 	mov	r16,r2
100145e8:	10002226 	beq	r2,zero,10014674 <_fopen_r+0xd0>
100145ec:	d9800017 	ldw	r6,0(sp)
100145f0:	01c06d84 	movi	r7,438
100145f4:	980b883a 	mov	r5,r19
100145f8:	9009883a 	mov	r4,r18
100145fc:	0015a0c0 	call	10015a0c <_open_r>
10014600:	10001916 	blt	r2,zero,10014668 <_fopen_r+0xc4>
10014604:	01840074 	movhi	r6,4097
10014608:	01440074 	movhi	r5,4097
1001460c:	01040074 	movhi	r4,4097
10014610:	00c40074 	movhi	r3,4097
10014614:	31986504 	addi	r6,r6,24980
10014618:	29587c04 	addi	r5,r5,25072
1001461c:	21189c04 	addi	r4,r4,25200
10014620:	18d8b304 	addi	r3,r3,25292
10014624:	8440030d 	sth	r17,12(r16)
10014628:	8080038d 	sth	r2,14(r16)
1001462c:	84000715 	stw	r16,28(r16)
10014630:	81800815 	stw	r6,32(r16)
10014634:	81400915 	stw	r5,36(r16)
10014638:	81000a15 	stw	r4,40(r16)
1001463c:	80c00b15 	stw	r3,44(r16)
10014640:	8c40400c 	andi	r17,r17,256
10014644:	88000d1e 	bne	r17,zero,1001467c <_fopen_r+0xd8>
10014648:	8005883a 	mov	r2,r16
1001464c:	dfc00517 	ldw	ra,20(sp)
10014650:	dcc00417 	ldw	r19,16(sp)
10014654:	dc800317 	ldw	r18,12(sp)
10014658:	dc400217 	ldw	r17,8(sp)
1001465c:	dc000117 	ldw	r16,4(sp)
10014660:	dec00604 	addi	sp,sp,24
10014664:	f800283a 	ret
10014668:	001a9b00 	call	1001a9b0 <__sfp_lock_acquire>
1001466c:	8000030d 	sth	zero,12(r16)
10014670:	001a9b40 	call	1001a9b4 <__sfp_lock_release>
10014674:	0021883a 	mov	r16,zero
10014678:	003ff306 	br	10014648 <_fopen_r+0xa4>
1001467c:	01c00084 	movi	r7,2
10014680:	000d883a 	mov	r6,zero
10014684:	800b883a 	mov	r5,r16
10014688:	9009883a 	mov	r4,r18
1001468c:	00146a80 	call	100146a8 <_fseek_r>
10014690:	003fed06 	br	10014648 <_fopen_r+0xa4>

10014694 <fopen>:
10014694:	008400f4 	movhi	r2,4099
10014698:	280d883a 	mov	r6,r5
1001469c:	200b883a 	mov	r5,r4
100146a0:	11211717 	ldw	r4,-31652(r2)
100146a4:	00145a41 	jmpi	100145a4 <_fopen_r>

100146a8 <_fseek_r>:
100146a8:	00146c41 	jmpi	100146c4 <_fseeko_r>

100146ac <fseek>:
100146ac:	008400f4 	movhi	r2,4099
100146b0:	300f883a 	mov	r7,r6
100146b4:	280d883a 	mov	r6,r5
100146b8:	200b883a 	mov	r5,r4
100146bc:	11211717 	ldw	r4,-31652(r2)
100146c0:	00146c41 	jmpi	100146c4 <_fseeko_r>

100146c4 <_fseeko_r>:
100146c4:	deffe504 	addi	sp,sp,-108
100146c8:	dd401715 	stw	r21,92(sp)
100146cc:	dc801415 	stw	r18,80(sp)
100146d0:	dc401315 	stw	r17,76(sp)
100146d4:	dc001215 	stw	r16,72(sp)
100146d8:	dfc01a15 	stw	ra,104(sp)
100146dc:	ddc01915 	stw	r23,100(sp)
100146e0:	dd801815 	stw	r22,96(sp)
100146e4:	dd001615 	stw	r20,88(sp)
100146e8:	dcc01515 	stw	r19,84(sp)
100146ec:	2023883a 	mov	r17,r4
100146f0:	2821883a 	mov	r16,r5
100146f4:	302b883a 	mov	r21,r6
100146f8:	3825883a 	mov	r18,r7
100146fc:	20000226 	beq	r4,zero,10014708 <_fseeko_r+0x44>
10014700:	20800e17 	ldw	r2,56(r4)
10014704:	10001a26 	beq	r2,zero,10014770 <_fseeko_r+0xac>
10014708:	8080030b 	ldhu	r2,12(r16)
1001470c:	1080420c 	andi	r2,r2,264
10014710:	10804218 	cmpnei	r2,r2,264
10014714:	10001b26 	beq	r2,zero,10014784 <_fseeko_r+0xc0>
10014718:	84c00a17 	ldw	r19,40(r16)
1001471c:	9800fb26 	beq	r19,zero,10014b0c <_fseeko_r+0x448>
10014720:	90800060 	cmpeqi	r2,r18,1
10014724:	10004b1e 	bne	r2,zero,10014854 <_fseeko_r+0x190>
10014728:	908000a0 	cmpeqi	r2,r18,2
1001472c:	1000191e 	bne	r2,zero,10014794 <_fseeko_r+0xd0>
10014730:	90001826 	beq	r18,zero,10014794 <_fseeko_r+0xd0>
10014734:	00800584 	movi	r2,22
10014738:	88800015 	stw	r2,0(r17)
1001473c:	053fffc4 	movi	r20,-1
10014740:	a005883a 	mov	r2,r20
10014744:	dfc01a17 	ldw	ra,104(sp)
10014748:	ddc01917 	ldw	r23,100(sp)
1001474c:	dd801817 	ldw	r22,96(sp)
10014750:	dd401717 	ldw	r21,92(sp)
10014754:	dd001617 	ldw	r20,88(sp)
10014758:	dcc01517 	ldw	r19,84(sp)
1001475c:	dc801417 	ldw	r18,80(sp)
10014760:	dc401317 	ldw	r17,76(sp)
10014764:	dc001217 	ldw	r16,72(sp)
10014768:	dec01b04 	addi	sp,sp,108
1001476c:	f800283a 	ret
10014770:	001a9a00 	call	1001a9a0 <__sinit>
10014774:	8080030b 	ldhu	r2,12(r16)
10014778:	1080420c 	andi	r2,r2,264
1001477c:	10804218 	cmpnei	r2,r2,264
10014780:	103fe51e 	bne	r2,zero,10014718 <_fseeko_r+0x54>
10014784:	800b883a 	mov	r5,r16
10014788:	8809883a 	mov	r4,r17
1001478c:	001a61c0 	call	1001a61c <_fflush_r>
10014790:	003fe106 	br	10014718 <_fseeko_r+0x54>
10014794:	81000417 	ldw	r4,16(r16)
10014798:	002f883a 	mov	r23,zero
1001479c:	0029883a 	mov	r20,zero
100147a0:	20004826 	beq	r4,zero,100148c4 <_fseeko_r+0x200>
100147a4:	8080030b 	ldhu	r2,12(r16)
100147a8:	10c2068c 	andi	r3,r2,2074
100147ac:	1800071e 	bne	r3,zero,100147cc <_fseeko_r+0x108>
100147b0:	10c1000c 	andi	r3,r2,1024
100147b4:	1800561e 	bne	r3,zero,10014910 <_fseeko_r+0x24c>
100147b8:	00c40074 	movhi	r3,4097
100147bc:	18d89c04 	addi	r3,r3,25200
100147c0:	98c04426 	beq	r19,r3,100148d4 <_fseeko_r+0x210>
100147c4:	10820014 	ori	r2,r2,2048
100147c8:	8080030d 	sth	r2,12(r16)
100147cc:	800b883a 	mov	r5,r16
100147d0:	8809883a 	mov	r4,r17
100147d4:	001a61c0 	call	1001a61c <_fflush_r>
100147d8:	1029883a 	mov	r20,r2
100147dc:	103fd71e 	bne	r2,zero,1001473c <_fseeko_r+0x78>
100147e0:	81400717 	ldw	r5,28(r16)
100147e4:	900f883a 	mov	r7,r18
100147e8:	a80d883a 	mov	r6,r21
100147ec:	8809883a 	mov	r4,r17
100147f0:	983ee83a 	callr	r19
100147f4:	10bfffe0 	cmpeqi	r2,r2,-1
100147f8:	103fd01e 	bne	r2,zero,1001473c <_fseeko_r+0x78>
100147fc:	81400c17 	ldw	r5,48(r16)
10014800:	28000526 	beq	r5,zero,10014818 <_fseeko_r+0x154>
10014804:	80801004 	addi	r2,r16,64
10014808:	28800226 	beq	r5,r2,10014814 <_fseeko_r+0x150>
1001480c:	8809883a 	mov	r4,r17
10014810:	001aba80 	call	1001aba8 <_free_r>
10014814:	80000c15 	stw	zero,48(r16)
10014818:	8080030b 	ldhu	r2,12(r16)
1001481c:	80c00417 	ldw	r3,16(r16)
10014820:	80000115 	stw	zero,4(r16)
10014824:	10bdf7cc 	andi	r2,r2,63455
10014828:	80c00015 	stw	r3,0(r16)
1001482c:	8080030d 	sth	r2,12(r16)
10014830:	80001705 	stb	zero,92(r16)
10014834:	80001745 	stb	zero,93(r16)
10014838:	80001785 	stb	zero,94(r16)
1001483c:	800017c5 	stb	zero,95(r16)
10014840:	80001805 	stb	zero,96(r16)
10014844:	80001845 	stb	zero,97(r16)
10014848:	80001885 	stb	zero,98(r16)
1001484c:	800018c5 	stb	zero,99(r16)
10014850:	003fbb06 	br	10014740 <_fseeko_r+0x7c>
10014854:	800b883a 	mov	r5,r16
10014858:	8809883a 	mov	r4,r17
1001485c:	001a61c0 	call	1001a61c <_fflush_r>
10014860:	8080030b 	ldhu	r2,12(r16)
10014864:	10c4000c 	andi	r3,r2,4096
10014868:	18006e1e 	bne	r3,zero,10014a24 <_fseeko_r+0x360>
1001486c:	81400717 	ldw	r5,28(r16)
10014870:	01c00044 	movi	r7,1
10014874:	000d883a 	mov	r6,zero
10014878:	8809883a 	mov	r4,r17
1001487c:	983ee83a 	callr	r19
10014880:	1029883a 	mov	r20,r2
10014884:	10bfffd8 	cmpnei	r2,r2,-1
10014888:	103fac26 	beq	r2,zero,1001473c <_fseeko_r+0x78>
1001488c:	8080030b 	ldhu	r2,12(r16)
10014890:	81000417 	ldw	r4,16(r16)
10014894:	10c0010c 	andi	r3,r2,4
10014898:	18006626 	beq	r3,zero,10014a34 <_fseeko_r+0x370>
1001489c:	80c00117 	ldw	r3,4(r16)
100148a0:	80800c17 	ldw	r2,48(r16)
100148a4:	a0e9c83a 	sub	r20,r20,r3
100148a8:	10000226 	beq	r2,zero,100148b4 <_fseeko_r+0x1f0>
100148ac:	81800f17 	ldw	r6,60(r16)
100148b0:	a1a9c83a 	sub	r20,r20,r6
100148b4:	ad2b883a 	add	r21,r21,r20
100148b8:	05c00044 	movi	r23,1
100148bc:	0025883a 	mov	r18,zero
100148c0:	203fb81e 	bne	r4,zero,100147a4 <_fseeko_r+0xe0>
100148c4:	800b883a 	mov	r5,r16
100148c8:	8809883a 	mov	r4,r17
100148cc:	0014c2c0 	call	10014c2c <__smakebuf_r>
100148d0:	003fb406 	br	100147a4 <_fseeko_r+0xe0>
100148d4:	8140038f 	ldh	r5,14(r16)
100148d8:	283fba16 	blt	r5,zero,100147c4 <_fseeko_r+0x100>
100148dc:	d80d883a 	mov	r6,sp
100148e0:	8809883a 	mov	r4,r17
100148e4:	0014b340 	call	10014b34 <_fstat_r>
100148e8:	1000761e 	bne	r2,zero,10014ac4 <_fseeko_r+0x400>
100148ec:	d8c00117 	ldw	r3,4(sp)
100148f0:	01200014 	movui	r4,32768
100148f4:	8080030b 	ldhu	r2,12(r16)
100148f8:	18fc000c 	andi	r3,r3,61440
100148fc:	193fb11e 	bne	r3,r4,100147c4 <_fseeko_r+0x100>
10014900:	10810014 	ori	r2,r2,1024
10014904:	00c10004 	movi	r3,1024
10014908:	80c01315 	stw	r3,76(r16)
1001490c:	8080030d 	sth	r2,12(r16)
10014910:	90004f1e 	bne	r18,zero,10014a50 <_fseeko_r+0x38c>
10014914:	a82d883a 	mov	r22,r21
10014918:	b800551e 	bne	r23,zero,10014a70 <_fseeko_r+0x3ac>
1001491c:	8080030b 	ldhu	r2,12(r16)
10014920:	1084000c 	andi	r2,r2,4096
10014924:	10005f26 	beq	r2,zero,10014aa4 <_fseeko_r+0x3e0>
10014928:	80801417 	ldw	r2,80(r16)
1001492c:	80c00117 	ldw	r3,4(r16)
10014930:	81400c17 	ldw	r5,48(r16)
10014934:	1809883a 	mov	r4,r3
10014938:	10e9c83a 	sub	r20,r2,r3
1001493c:	28005226 	beq	r5,zero,10014a88 <_fseeko_r+0x3c4>
10014940:	81800f17 	ldw	r6,60(r16)
10014944:	a1a9c83a 	sub	r20,r20,r6
10014948:	80800e17 	ldw	r2,56(r16)
1001494c:	81c00417 	ldw	r7,16(r16)
10014950:	a0e9883a 	add	r20,r20,r3
10014954:	11c5c83a 	sub	r2,r2,r7
10014958:	a0a9c83a 	sub	r20,r20,r2
1001495c:	1185883a 	add	r2,r2,r6
10014960:	b5000216 	blt	r22,r20,1001496c <_fseeko_r+0x2a8>
10014964:	a087883a 	add	r3,r20,r2
10014968:	b0c05836 	bltu	r22,r3,10014acc <_fseeko_r+0x408>
1001496c:	85001317 	ldw	r20,76(r16)
10014970:	81400717 	ldw	r5,28(r16)
10014974:	000f883a 	mov	r7,zero
10014978:	0529c83a 	sub	r20,zero,r20
1001497c:	a5a8703a 	and	r20,r20,r22
10014980:	a00d883a 	mov	r6,r20
10014984:	8809883a 	mov	r4,r17
10014988:	983ee83a 	callr	r19
1001498c:	10bfffe0 	cmpeqi	r2,r2,-1
10014990:	103f8e1e 	bne	r2,zero,100147cc <_fseeko_r+0x108>
10014994:	80800417 	ldw	r2,16(r16)
10014998:	81400c17 	ldw	r5,48(r16)
1001499c:	80000115 	stw	zero,4(r16)
100149a0:	80800015 	stw	r2,0(r16)
100149a4:	28000526 	beq	r5,zero,100149bc <_fseeko_r+0x2f8>
100149a8:	80801004 	addi	r2,r16,64
100149ac:	28800226 	beq	r5,r2,100149b8 <_fseeko_r+0x2f4>
100149b0:	8809883a 	mov	r4,r17
100149b4:	001aba80 	call	1001aba8 <_free_r>
100149b8:	80000c15 	stw	zero,48(r16)
100149bc:	8080030b 	ldhu	r2,12(r16)
100149c0:	b529c83a 	sub	r20,r22,r20
100149c4:	10bff7cc 	andi	r2,r2,65503
100149c8:	8080030d 	sth	r2,12(r16)
100149cc:	a0000b26 	beq	r20,zero,100149fc <_fseeko_r+0x338>
100149d0:	800b883a 	mov	r5,r16
100149d4:	8809883a 	mov	r4,r17
100149d8:	0015c640 	call	10015c64 <__srefill_r>
100149dc:	103f7b1e 	bne	r2,zero,100147cc <_fseeko_r+0x108>
100149e0:	80800117 	ldw	r2,4(r16)
100149e4:	153f7936 	bltu	r2,r20,100147cc <_fseeko_r+0x108>
100149e8:	85800017 	ldw	r22,0(r16)
100149ec:	1505c83a 	sub	r2,r2,r20
100149f0:	80800115 	stw	r2,4(r16)
100149f4:	b529883a 	add	r20,r22,r20
100149f8:	85000015 	stw	r20,0(r16)
100149fc:	80001705 	stb	zero,92(r16)
10014a00:	80001745 	stb	zero,93(r16)
10014a04:	80001785 	stb	zero,94(r16)
10014a08:	800017c5 	stb	zero,95(r16)
10014a0c:	80001805 	stb	zero,96(r16)
10014a10:	80001845 	stb	zero,97(r16)
10014a14:	80001885 	stb	zero,98(r16)
10014a18:	800018c5 	stb	zero,99(r16)
10014a1c:	0029883a 	mov	r20,zero
10014a20:	003f4706 	br	10014740 <_fseeko_r+0x7c>
10014a24:	10c0010c 	andi	r3,r2,4
10014a28:	85001417 	ldw	r20,80(r16)
10014a2c:	81000417 	ldw	r4,16(r16)
10014a30:	183f9a1e 	bne	r3,zero,1001489c <_fseeko_r+0x1d8>
10014a34:	1080020c 	andi	r2,r2,8
10014a38:	103f9e26 	beq	r2,zero,100148b4 <_fseeko_r+0x1f0>
10014a3c:	80800017 	ldw	r2,0(r16)
10014a40:	103f9c26 	beq	r2,zero,100148b4 <_fseeko_r+0x1f0>
10014a44:	1105c83a 	sub	r2,r2,r4
10014a48:	a0a9883a 	add	r20,r20,r2
10014a4c:	003f9906 	br	100148b4 <_fseeko_r+0x1f0>
10014a50:	8140038f 	ldh	r5,14(r16)
10014a54:	d80d883a 	mov	r6,sp
10014a58:	8809883a 	mov	r4,r17
10014a5c:	0014b340 	call	10014b34 <_fstat_r>
10014a60:	103f5a1e 	bne	r2,zero,100147cc <_fseeko_r+0x108>
10014a64:	dd800417 	ldw	r22,16(sp)
10014a68:	adad883a 	add	r22,r21,r22
10014a6c:	b83fab26 	beq	r23,zero,1001491c <_fseeko_r+0x258>
10014a70:	81400c17 	ldw	r5,48(r16)
10014a74:	28000326 	beq	r5,zero,10014a84 <_fseeko_r+0x3c0>
10014a78:	80c00117 	ldw	r3,4(r16)
10014a7c:	81800f17 	ldw	r6,60(r16)
10014a80:	003fb106 	br	10014948 <_fseeko_r+0x284>
10014a84:	81000117 	ldw	r4,4(r16)
10014a88:	80800017 	ldw	r2,0(r16)
10014a8c:	81c00417 	ldw	r7,16(r16)
10014a90:	000b883a 	mov	r5,zero
10014a94:	11c5c83a 	sub	r2,r2,r7
10014a98:	a0a9c83a 	sub	r20,r20,r2
10014a9c:	2085883a 	add	r2,r4,r2
10014aa0:	003faf06 	br	10014960 <_fseeko_r+0x29c>
10014aa4:	81400717 	ldw	r5,28(r16)
10014aa8:	01c00044 	movi	r7,1
10014aac:	000d883a 	mov	r6,zero
10014ab0:	8809883a 	mov	r4,r17
10014ab4:	983ee83a 	callr	r19
10014ab8:	10ffffe0 	cmpeqi	r3,r2,-1
10014abc:	183f9b26 	beq	r3,zero,1001492c <_fseeko_r+0x268>
10014ac0:	003f4206 	br	100147cc <_fseeko_r+0x108>
10014ac4:	8080030b 	ldhu	r2,12(r16)
10014ac8:	003f3e06 	br	100147c4 <_fseeko_r+0x100>
10014acc:	b529c83a 	sub	r20,r22,r20
10014ad0:	3d0f883a 	add	r7,r7,r20
10014ad4:	1529c83a 	sub	r20,r2,r20
10014ad8:	81c00015 	stw	r7,0(r16)
10014adc:	85000115 	stw	r20,4(r16)
10014ae0:	28000526 	beq	r5,zero,10014af8 <_fseeko_r+0x434>
10014ae4:	80801004 	addi	r2,r16,64
10014ae8:	28800226 	beq	r5,r2,10014af4 <_fseeko_r+0x430>
10014aec:	8809883a 	mov	r4,r17
10014af0:	001aba80 	call	1001aba8 <_free_r>
10014af4:	80000c15 	stw	zero,48(r16)
10014af8:	80c0030b 	ldhu	r3,12(r16)
10014afc:	80001705 	stb	zero,92(r16)
10014b00:	18fff7cc 	andi	r3,r3,65503
10014b04:	80c0030d 	sth	r3,12(r16)
10014b08:	003fbd06 	br	10014a00 <_fseeko_r+0x33c>
10014b0c:	00800744 	movi	r2,29
10014b10:	88800015 	stw	r2,0(r17)
10014b14:	053fffc4 	movi	r20,-1
10014b18:	003f0906 	br	10014740 <_fseeko_r+0x7c>

10014b1c <fseeko>:
10014b1c:	008400f4 	movhi	r2,4099
10014b20:	300f883a 	mov	r7,r6
10014b24:	280d883a 	mov	r6,r5
10014b28:	200b883a 	mov	r5,r4
10014b2c:	11211717 	ldw	r4,-31652(r2)
10014b30:	00146c41 	jmpi	100146c4 <_fseeko_r>

10014b34 <_fstat_r>:
10014b34:	defffe04 	addi	sp,sp,-8
10014b38:	2805883a 	mov	r2,r5
10014b3c:	dc000015 	stw	r16,0(sp)
10014b40:	300b883a 	mov	r5,r6
10014b44:	2021883a 	mov	r16,r4
10014b48:	1009883a 	mov	r4,r2
10014b4c:	008400f4 	movhi	r2,4099
10014b50:	dfc00115 	stw	ra,4(sp)
10014b54:	102a6815 	stw	zero,-22112(r2)
10014b58:	0021ce80 	call	10021ce8 <fstat>
10014b5c:	10ffffd8 	cmpnei	r3,r2,-1
10014b60:	18000426 	beq	r3,zero,10014b74 <_fstat_r+0x40>
10014b64:	dfc00117 	ldw	ra,4(sp)
10014b68:	dc000017 	ldw	r16,0(sp)
10014b6c:	dec00204 	addi	sp,sp,8
10014b70:	f800283a 	ret
10014b74:	00c400f4 	movhi	r3,4099
10014b78:	18ea6817 	ldw	r3,-22112(r3)
10014b7c:	183ff926 	beq	r3,zero,10014b64 <_fstat_r+0x30>
10014b80:	80c00015 	stw	r3,0(r16)
10014b84:	dfc00117 	ldw	ra,4(sp)
10014b88:	dc000017 	ldw	r16,0(sp)
10014b8c:	dec00204 	addi	sp,sp,8
10014b90:	f800283a 	ret

10014b94 <__swhatbuf_r>:
10014b94:	deffea04 	addi	sp,sp,-88
10014b98:	dc001215 	stw	r16,72(sp)
10014b9c:	2821883a 	mov	r16,r5
10014ba0:	2940038f 	ldh	r5,14(r5)
10014ba4:	dc801415 	stw	r18,80(sp)
10014ba8:	dc401315 	stw	r17,76(sp)
10014bac:	dfc01515 	stw	ra,84(sp)
10014bb0:	3023883a 	mov	r17,r6
10014bb4:	3825883a 	mov	r18,r7
10014bb8:	28001016 	blt	r5,zero,10014bfc <__swhatbuf_r+0x68>
10014bbc:	d80d883a 	mov	r6,sp
10014bc0:	0014b340 	call	10014b34 <_fstat_r>
10014bc4:	10000d16 	blt	r2,zero,10014bfc <__swhatbuf_r+0x68>
10014bc8:	d8c00117 	ldw	r3,4(sp)
10014bcc:	00820004 	movi	r2,2048
10014bd0:	18fc000c 	andi	r3,r3,61440
10014bd4:	18c80020 	cmpeqi	r3,r3,8192
10014bd8:	90c00015 	stw	r3,0(r18)
10014bdc:	00c10004 	movi	r3,1024
10014be0:	88c00015 	stw	r3,0(r17)
10014be4:	dfc01517 	ldw	ra,84(sp)
10014be8:	dc801417 	ldw	r18,80(sp)
10014bec:	dc401317 	ldw	r17,76(sp)
10014bf0:	dc001217 	ldw	r16,72(sp)
10014bf4:	dec01604 	addi	sp,sp,88
10014bf8:	f800283a 	ret
10014bfc:	8080030b 	ldhu	r2,12(r16)
10014c00:	90000015 	stw	zero,0(r18)
10014c04:	1080200c 	andi	r2,r2,128
10014c08:	10000426 	beq	r2,zero,10014c1c <__swhatbuf_r+0x88>
10014c0c:	00801004 	movi	r2,64
10014c10:	88800015 	stw	r2,0(r17)
10014c14:	0005883a 	mov	r2,zero
10014c18:	003ff206 	br	10014be4 <__swhatbuf_r+0x50>
10014c1c:	00810004 	movi	r2,1024
10014c20:	88800015 	stw	r2,0(r17)
10014c24:	0005883a 	mov	r2,zero
10014c28:	003fee06 	br	10014be4 <__swhatbuf_r+0x50>

10014c2c <__smakebuf_r>:
10014c2c:	28c0030b 	ldhu	r3,12(r5)
10014c30:	defffa04 	addi	sp,sp,-24
10014c34:	dc000215 	stw	r16,8(sp)
10014c38:	dfc00515 	stw	ra,20(sp)
10014c3c:	dc800415 	stw	r18,16(sp)
10014c40:	dc400315 	stw	r17,12(sp)
10014c44:	18c0008c 	andi	r3,r3,2
10014c48:	2821883a 	mov	r16,r5
10014c4c:	18000b26 	beq	r3,zero,10014c7c <__smakebuf_r+0x50>
10014c50:	28c010c4 	addi	r3,r5,67
10014c54:	28c00015 	stw	r3,0(r5)
10014c58:	28c00415 	stw	r3,16(r5)
10014c5c:	00c00044 	movi	r3,1
10014c60:	28c00515 	stw	r3,20(r5)
10014c64:	dfc00517 	ldw	ra,20(sp)
10014c68:	dc800417 	ldw	r18,16(sp)
10014c6c:	dc400317 	ldw	r17,12(sp)
10014c70:	dc000217 	ldw	r16,8(sp)
10014c74:	dec00604 	addi	sp,sp,24
10014c78:	f800283a 	ret
10014c7c:	d9c00104 	addi	r7,sp,4
10014c80:	d80d883a 	mov	r6,sp
10014c84:	2023883a 	mov	r17,r4
10014c88:	0014b940 	call	10014b94 <__swhatbuf_r>
10014c8c:	1025883a 	mov	r18,r2
10014c90:	d8800117 	ldw	r2,4(sp)
10014c94:	1000131e 	bne	r2,zero,10014ce4 <__smakebuf_r+0xb8>
10014c98:	d9400017 	ldw	r5,0(sp)
10014c9c:	8809883a 	mov	r4,r17
10014ca0:	0014d880 	call	10014d88 <_malloc_r>
10014ca4:	10001c26 	beq	r2,zero,10014d18 <__smakebuf_r+0xec>
10014ca8:	010400b4 	movhi	r4,4098
10014cac:	2129ab04 	addi	r4,r4,-22868
10014cb0:	80c0030b 	ldhu	r3,12(r16)
10014cb4:	89000f15 	stw	r4,60(r17)
10014cb8:	80800015 	stw	r2,0(r16)
10014cbc:	80800415 	stw	r2,16(r16)
10014cc0:	d8800017 	ldw	r2,0(sp)
10014cc4:	d9400117 	ldw	r5,4(sp)
10014cc8:	18c02014 	ori	r3,r3,128
10014ccc:	80c0030d 	sth	r3,12(r16)
10014cd0:	80800515 	stw	r2,20(r16)
10014cd4:	28001c1e 	bne	r5,zero,10014d48 <__smakebuf_r+0x11c>
10014cd8:	90c6b03a 	or	r3,r18,r3
10014cdc:	80c0030d 	sth	r3,12(r16)
10014ce0:	003fe006 	br	10014c64 <__smakebuf_r+0x38>
10014ce4:	8140038f 	ldh	r5,14(r16)
10014ce8:	8809883a 	mov	r4,r17
10014cec:	001b4c00 	call	1001b4c0 <_isatty_r>
10014cf0:	103fe926 	beq	r2,zero,10014c98 <__smakebuf_r+0x6c>
10014cf4:	8080030b 	ldhu	r2,12(r16)
10014cf8:	80c010c4 	addi	r3,r16,67
10014cfc:	80c00015 	stw	r3,0(r16)
10014d00:	10800054 	ori	r2,r2,1
10014d04:	8080030d 	sth	r2,12(r16)
10014d08:	00800044 	movi	r2,1
10014d0c:	80c00415 	stw	r3,16(r16)
10014d10:	80800515 	stw	r2,20(r16)
10014d14:	003fe006 	br	10014c98 <__smakebuf_r+0x6c>
10014d18:	8080030b 	ldhu	r2,12(r16)
10014d1c:	10c0800c 	andi	r3,r2,512
10014d20:	183fd01e 	bne	r3,zero,10014c64 <__smakebuf_r+0x38>
10014d24:	10bfff0c 	andi	r2,r2,65532
10014d28:	10800094 	ori	r2,r2,2
10014d2c:	80c010c4 	addi	r3,r16,67
10014d30:	8080030d 	sth	r2,12(r16)
10014d34:	00800044 	movi	r2,1
10014d38:	80c00015 	stw	r3,0(r16)
10014d3c:	80c00415 	stw	r3,16(r16)
10014d40:	80800515 	stw	r2,20(r16)
10014d44:	003fc706 	br	10014c64 <__smakebuf_r+0x38>
10014d48:	8140038f 	ldh	r5,14(r16)
10014d4c:	8809883a 	mov	r4,r17
10014d50:	001b4c00 	call	1001b4c0 <_isatty_r>
10014d54:	80c0030b 	ldhu	r3,12(r16)
10014d58:	103fdf26 	beq	r2,zero,10014cd8 <__smakebuf_r+0xac>
10014d5c:	18ffff0c 	andi	r3,r3,65532
10014d60:	18c00054 	ori	r3,r3,1
10014d64:	003fdc06 	br	10014cd8 <__smakebuf_r+0xac>

10014d68 <malloc>:
10014d68:	008400f4 	movhi	r2,4099
10014d6c:	200b883a 	mov	r5,r4
10014d70:	11211717 	ldw	r4,-31652(r2)
10014d74:	0014d881 	jmpi	10014d88 <_malloc_r>

10014d78 <free>:
10014d78:	008400f4 	movhi	r2,4099
10014d7c:	200b883a 	mov	r5,r4
10014d80:	11211717 	ldw	r4,-31652(r2)
10014d84:	001aba81 	jmpi	1001aba8 <_free_r>

10014d88 <_malloc_r>:
10014d88:	defff604 	addi	sp,sp,-40
10014d8c:	dc400115 	stw	r17,4(sp)
10014d90:	2c4002c4 	addi	r17,r5,11
10014d94:	dc800215 	stw	r18,8(sp)
10014d98:	dfc00915 	stw	ra,36(sp)
10014d9c:	df000815 	stw	fp,32(sp)
10014da0:	ddc00715 	stw	r23,28(sp)
10014da4:	dd800615 	stw	r22,24(sp)
10014da8:	dd400515 	stw	r21,20(sp)
10014dac:	dd000415 	stw	r20,16(sp)
10014db0:	dcc00315 	stw	r19,12(sp)
10014db4:	dc000015 	stw	r16,0(sp)
10014db8:	888005e8 	cmpgeui	r2,r17,23
10014dbc:	2025883a 	mov	r18,r4
10014dc0:	10001b1e 	bne	r2,zero,10014e30 <_malloc_r+0xa8>
10014dc4:	29400468 	cmpgeui	r5,r5,17
10014dc8:	2800951e 	bne	r5,zero,10015020 <_malloc_r+0x298>
10014dcc:	00222780 	call	10022278 <__malloc_lock>
10014dd0:	04400404 	movi	r17,16
10014dd4:	00800604 	movi	r2,24
10014dd8:	01800084 	movi	r6,2
10014ddc:	04c400b4 	movhi	r19,4098
10014de0:	9cdb2704 	addi	r19,r19,27804
10014de4:	9885883a 	add	r2,r19,r2
10014de8:	14000117 	ldw	r16,4(r2)
10014dec:	10fffe04 	addi	r3,r2,-8
10014df0:	80c09e26 	beq	r16,r3,1001506c <_malloc_r+0x2e4>
10014df4:	80800117 	ldw	r2,4(r16)
10014df8:	81000317 	ldw	r4,12(r16)
10014dfc:	00ffff04 	movi	r3,-4
10014e00:	10c4703a 	and	r2,r2,r3
10014e04:	81400217 	ldw	r5,8(r16)
10014e08:	8085883a 	add	r2,r16,r2
10014e0c:	10c00117 	ldw	r3,4(r2)
10014e10:	29000315 	stw	r4,12(r5)
10014e14:	21400215 	stw	r5,8(r4)
10014e18:	18c00054 	ori	r3,r3,1
10014e1c:	10c00115 	stw	r3,4(r2)
10014e20:	9009883a 	mov	r4,r18
10014e24:	002229c0 	call	1002229c <__malloc_unlock>
10014e28:	80800204 	addi	r2,r16,8
10014e2c:	00007f06 	br	1001502c <_malloc_r+0x2a4>
10014e30:	00bffe04 	movi	r2,-8
10014e34:	88a2703a 	and	r17,r17,r2
10014e38:	88007916 	blt	r17,zero,10015020 <_malloc_r+0x298>
10014e3c:	89407836 	bltu	r17,r5,10015020 <_malloc_r+0x298>
10014e40:	00222780 	call	10022278 <__malloc_lock>
10014e44:	88807e28 	cmpgeui	r2,r17,504
10014e48:	10013326 	beq	r2,zero,10015318 <_malloc_r+0x590>
10014e4c:	8804d27a 	srli	r2,r17,9
10014e50:	10008226 	beq	r2,zero,1001505c <_malloc_r+0x2d4>
10014e54:	10c00168 	cmpgeui	r3,r2,5
10014e58:	1801151e 	bne	r3,zero,100152b0 <_malloc_r+0x528>
10014e5c:	8804d1ba 	srli	r2,r17,6
10014e60:	11800e44 	addi	r6,r2,57
10014e64:	300a90fa 	slli	r5,r6,3
10014e68:	12000e04 	addi	r8,r2,56
10014e6c:	04c400b4 	movhi	r19,4098
10014e70:	9cdb2704 	addi	r19,r19,27804
10014e74:	994b883a 	add	r5,r19,r5
10014e78:	2c000117 	ldw	r16,4(r5)
10014e7c:	297ffe04 	addi	r5,r5,-8
10014e80:	2c001126 	beq	r5,r16,10014ec8 <_malloc_r+0x140>
10014e84:	80800117 	ldw	r2,4(r16)
10014e88:	00ffff04 	movi	r3,-4
10014e8c:	10c4703a 	and	r2,r2,r3
10014e90:	1447c83a 	sub	r3,r2,r17
10014e94:	19000408 	cmpgei	r4,r3,16
10014e98:	2000e81e 	bne	r4,zero,1001523c <_malloc_r+0x4b4>
10014e9c:	1800e90e 	bge	r3,zero,10015244 <_malloc_r+0x4bc>
10014ea0:	01ffff04 	movi	r7,-4
10014ea4:	00000606 	br	10014ec0 <_malloc_r+0x138>
10014ea8:	80800117 	ldw	r2,4(r16)
10014eac:	11c4703a 	and	r2,r2,r7
10014eb0:	1447c83a 	sub	r3,r2,r17
10014eb4:	19000408 	cmpgei	r4,r3,16
10014eb8:	2000e01e 	bne	r4,zero,1001523c <_malloc_r+0x4b4>
10014ebc:	1800e10e 	bge	r3,zero,10015244 <_malloc_r+0x4bc>
10014ec0:	84000317 	ldw	r16,12(r16)
10014ec4:	2c3ff81e 	bne	r5,r16,10014ea8 <_malloc_r+0x120>
10014ec8:	9c000417 	ldw	r16,16(r19)
10014ecc:	020400b4 	movhi	r8,4098
10014ed0:	421b2904 	addi	r8,r8,27812
10014ed4:	82006c26 	beq	r16,r8,10015088 <_malloc_r+0x300>
10014ed8:	80c00117 	ldw	r3,4(r16)
10014edc:	00bfff04 	movi	r2,-4
10014ee0:	1884703a 	and	r2,r3,r2
10014ee4:	1447c83a 	sub	r3,r2,r17
10014ee8:	19000410 	cmplti	r4,r3,16
10014eec:	20011526 	beq	r4,zero,10015344 <_malloc_r+0x5bc>
10014ef0:	9a000515 	stw	r8,20(r19)
10014ef4:	9a000415 	stw	r8,16(r19)
10014ef8:	18010a0e 	bge	r3,zero,10015324 <_malloc_r+0x59c>
10014efc:	10c08028 	cmpgeui	r3,r2,512
10014f00:	1800d21e 	bne	r3,zero,1001524c <_malloc_r+0x4c4>
10014f04:	1004d0fa 	srli	r2,r2,3
10014f08:	99400117 	ldw	r5,4(r19)
10014f0c:	10c00044 	addi	r3,r2,1
10014f10:	1009d0ba 	srai	r4,r2,2
10014f14:	180690fa 	slli	r3,r3,3
10014f18:	00800044 	movi	r2,1
10014f1c:	1104983a 	sll	r2,r2,r4
10014f20:	98c7883a 	add	r3,r19,r3
10014f24:	19000017 	ldw	r4,0(r3)
10014f28:	1144b03a 	or	r2,r2,r5
10014f2c:	197ffe04 	addi	r5,r3,-8
10014f30:	81400315 	stw	r5,12(r16)
10014f34:	81000215 	stw	r4,8(r16)
10014f38:	98800115 	stw	r2,4(r19)
10014f3c:	1c000015 	stw	r16,0(r3)
10014f40:	24000315 	stw	r16,12(r4)
10014f44:	3007d0ba 	srai	r3,r6,2
10014f48:	01000044 	movi	r4,1
10014f4c:	20c8983a 	sll	r4,r4,r3
10014f50:	11005236 	bltu	r2,r4,1001509c <_malloc_r+0x314>
10014f54:	2086703a 	and	r3,r4,r2
10014f58:	18000a1e 	bne	r3,zero,10014f84 <_malloc_r+0x1fc>
10014f5c:	00ffff04 	movi	r3,-4
10014f60:	2109883a 	add	r4,r4,r4
10014f64:	30cc703a 	and	r6,r6,r3
10014f68:	2086703a 	and	r3,r4,r2
10014f6c:	31800104 	addi	r6,r6,4
10014f70:	1800041e 	bne	r3,zero,10014f84 <_malloc_r+0x1fc>
10014f74:	2109883a 	add	r4,r4,r4
10014f78:	2086703a 	and	r3,r4,r2
10014f7c:	31800104 	addi	r6,r6,4
10014f80:	183ffc26 	beq	r3,zero,10014f74 <_malloc_r+0x1ec>
10014f84:	027fff04 	movi	r9,-4
10014f88:	301490fa 	slli	r10,r6,3
10014f8c:	3017883a 	mov	r11,r6
10014f90:	9a95883a 	add	r10,r19,r10
10014f94:	500f883a 	mov	r7,r10
10014f98:	3c000317 	ldw	r16,12(r7)
10014f9c:	3c00cd26 	beq	r7,r16,100152d4 <_malloc_r+0x54c>
10014fa0:	80800117 	ldw	r2,4(r16)
10014fa4:	1244703a 	and	r2,r2,r9
10014fa8:	1447c83a 	sub	r3,r2,r17
10014fac:	19400408 	cmpgei	r5,r3,16
10014fb0:	2800081e 	bne	r5,zero,10014fd4 <_malloc_r+0x24c>
10014fb4:	1800cc0e 	bge	r3,zero,100152e8 <_malloc_r+0x560>
10014fb8:	84000317 	ldw	r16,12(r16)
10014fbc:	3c00c526 	beq	r7,r16,100152d4 <_malloc_r+0x54c>
10014fc0:	80800117 	ldw	r2,4(r16)
10014fc4:	1244703a 	and	r2,r2,r9
10014fc8:	1447c83a 	sub	r3,r2,r17
10014fcc:	19400410 	cmplti	r5,r3,16
10014fd0:	283ff81e 	bne	r5,zero,10014fb4 <_malloc_r+0x22c>
10014fd4:	81000317 	ldw	r4,12(r16)
10014fd8:	81400217 	ldw	r5,8(r16)
10014fdc:	89800054 	ori	r6,r17,1
10014fe0:	81800115 	stw	r6,4(r16)
10014fe4:	29000315 	stw	r4,12(r5)
10014fe8:	21400215 	stw	r5,8(r4)
10014fec:	8463883a 	add	r17,r16,r17
10014ff0:	9c400515 	stw	r17,20(r19)
10014ff4:	9c400415 	stw	r17,16(r19)
10014ff8:	19000054 	ori	r4,r3,1
10014ffc:	89000115 	stw	r4,4(r17)
10015000:	8085883a 	add	r2,r16,r2
10015004:	8a000315 	stw	r8,12(r17)
10015008:	8a000215 	stw	r8,8(r17)
1001500c:	10c00015 	stw	r3,0(r2)
10015010:	9009883a 	mov	r4,r18
10015014:	002229c0 	call	1002229c <__malloc_unlock>
10015018:	80800204 	addi	r2,r16,8
1001501c:	00000306 	br	1001502c <_malloc_r+0x2a4>
10015020:	00800304 	movi	r2,12
10015024:	90800015 	stw	r2,0(r18)
10015028:	0005883a 	mov	r2,zero
1001502c:	dfc00917 	ldw	ra,36(sp)
10015030:	df000817 	ldw	fp,32(sp)
10015034:	ddc00717 	ldw	r23,28(sp)
10015038:	dd800617 	ldw	r22,24(sp)
1001503c:	dd400517 	ldw	r21,20(sp)
10015040:	dd000417 	ldw	r20,16(sp)
10015044:	dcc00317 	ldw	r19,12(sp)
10015048:	dc800217 	ldw	r18,8(sp)
1001504c:	dc400117 	ldw	r17,4(sp)
10015050:	dc000017 	ldw	r16,0(sp)
10015054:	dec00a04 	addi	sp,sp,40
10015058:	f800283a 	ret
1001505c:	01408004 	movi	r5,512
10015060:	01801004 	movi	r6,64
10015064:	02000fc4 	movi	r8,63
10015068:	003f8006 	br	10014e6c <_malloc_r+0xe4>
1001506c:	14000317 	ldw	r16,12(r2)
10015070:	31800084 	addi	r6,r6,2
10015074:	143f5f1e 	bne	r2,r16,10014df4 <_malloc_r+0x6c>
10015078:	9c000417 	ldw	r16,16(r19)
1001507c:	020400b4 	movhi	r8,4098
10015080:	421b2904 	addi	r8,r8,27812
10015084:	823f941e 	bne	r16,r8,10014ed8 <_malloc_r+0x150>
10015088:	3007d0ba 	srai	r3,r6,2
1001508c:	01000044 	movi	r4,1
10015090:	98800117 	ldw	r2,4(r19)
10015094:	20c8983a 	sll	r4,r4,r3
10015098:	113fae2e 	bgeu	r2,r4,10014f54 <_malloc_r+0x1cc>
1001509c:	9c000217 	ldw	r16,8(r19)
100150a0:	00bfff04 	movi	r2,-4
100150a4:	85000117 	ldw	r20,4(r16)
100150a8:	a0ac703a 	and	r22,r20,r2
100150ac:	b4400336 	bltu	r22,r17,100150bc <_malloc_r+0x334>
100150b0:	b445c83a 	sub	r2,r22,r17
100150b4:	10c00408 	cmpgei	r3,r2,16
100150b8:	1800561e 	bne	r3,zero,10015214 <_malloc_r+0x48c>
100150bc:	008400f4 	movhi	r2,4099
100150c0:	10a11817 	ldw	r2,-31648(r2)
100150c4:	00c400f4 	movhi	r3,4099
100150c8:	1d2a6b17 	ldw	r20,-22100(r3)
100150cc:	10bfffd8 	cmpnei	r2,r2,-1
100150d0:	85ab883a 	add	r21,r16,r22
100150d4:	8d29883a 	add	r20,r17,r20
100150d8:	1000c826 	beq	r2,zero,100153fc <_malloc_r+0x674>
100150dc:	a50403c4 	addi	r20,r20,4111
100150e0:	00bc0004 	movi	r2,-4096
100150e4:	a0a8703a 	and	r20,r20,r2
100150e8:	a00b883a 	mov	r5,r20
100150ec:	9009883a 	mov	r4,r18
100150f0:	0015e300 	call	10015e30 <_sbrk_r>
100150f4:	102f883a 	mov	r23,r2
100150f8:	10bfffd8 	cmpnei	r2,r2,-1
100150fc:	10009a26 	beq	r2,zero,10015368 <_malloc_r+0x5e0>
10015100:	bd409836 	bltu	r23,r21,10015364 <_malloc_r+0x5dc>
10015104:	008400f4 	movhi	r2,4099
10015108:	10aa8217 	ldw	r2,-22008(r2)
1001510c:	00c400f4 	movhi	r3,4099
10015110:	a085883a 	add	r2,r20,r2
10015114:	18aa8215 	stw	r2,-22008(r3)
10015118:	1007883a 	mov	r3,r2
1001511c:	adc0dd26 	beq	r21,r23,10015494 <_malloc_r+0x70c>
10015120:	008400f4 	movhi	r2,4099
10015124:	10a11817 	ldw	r2,-31648(r2)
10015128:	10bfffd8 	cmpnei	r2,r2,-1
1001512c:	1000e026 	beq	r2,zero,100154b0 <_malloc_r+0x728>
10015130:	bd6bc83a 	sub	r21,r23,r21
10015134:	a8c7883a 	add	r3,r21,r3
10015138:	008400f4 	movhi	r2,4099
1001513c:	10ea8215 	stw	r3,-22008(r2)
10015140:	bf0001cc 	andi	fp,r23,7
10015144:	e000b626 	beq	fp,zero,10015420 <_malloc_r+0x698>
10015148:	bf2fc83a 	sub	r23,r23,fp
1001514c:	bdc00204 	addi	r23,r23,8
10015150:	00840204 	movi	r2,4104
10015154:	1705c83a 	sub	r2,r2,fp
10015158:	bd29883a 	add	r20,r23,r20
1001515c:	1505c83a 	sub	r2,r2,r20
10015160:	1543ffcc 	andi	r21,r2,4095
10015164:	a80b883a 	mov	r5,r21
10015168:	9009883a 	mov	r4,r18
1001516c:	0015e300 	call	10015e30 <_sbrk_r>
10015170:	10ffffe0 	cmpeqi	r3,r2,-1
10015174:	1800e41e 	bne	r3,zero,10015508 <_malloc_r+0x780>
10015178:	15c5c83a 	sub	r2,r2,r23
1001517c:	1569883a 	add	r20,r2,r21
10015180:	008400f4 	movhi	r2,4099
10015184:	10aa8217 	ldw	r2,-22008(r2)
10015188:	9dc00215 	stw	r23,8(r19)
1001518c:	a5000054 	ori	r20,r20,1
10015190:	a885883a 	add	r2,r21,r2
10015194:	00c400f4 	movhi	r3,4099
10015198:	18aa8215 	stw	r2,-22008(r3)
1001519c:	bd000115 	stw	r20,4(r23)
100151a0:	84c0c626 	beq	r16,r19,100154bc <_malloc_r+0x734>
100151a4:	b0c00428 	cmpgeui	r3,r22,16
100151a8:	1800c626 	beq	r3,zero,100154c4 <_malloc_r+0x73c>
100151ac:	81000117 	ldw	r4,4(r16)
100151b0:	017ffe04 	movi	r5,-8
100151b4:	b0fffd04 	addi	r3,r22,-12
100151b8:	1946703a 	and	r3,r3,r5
100151bc:	2100004c 	andi	r4,r4,1
100151c0:	20c8b03a 	or	r4,r4,r3
100151c4:	81000115 	stw	r4,4(r16)
100151c8:	01400144 	movi	r5,5
100151cc:	80c9883a 	add	r4,r16,r3
100151d0:	21400115 	stw	r5,4(r4)
100151d4:	21400215 	stw	r5,8(r4)
100151d8:	18c00428 	cmpgeui	r3,r3,16
100151dc:	1800cf1e 	bne	r3,zero,1001551c <_malloc_r+0x794>
100151e0:	bd000117 	ldw	r20,4(r23)
100151e4:	b821883a 	mov	r16,r23
100151e8:	00c400f4 	movhi	r3,4099
100151ec:	18ea6a17 	ldw	r3,-22104(r3)
100151f0:	1880022e 	bgeu	r3,r2,100151fc <_malloc_r+0x474>
100151f4:	00c400f4 	movhi	r3,4099
100151f8:	18aa6a15 	stw	r2,-22104(r3)
100151fc:	00c400f4 	movhi	r3,4099
10015200:	18ea6917 	ldw	r3,-22108(r3)
10015204:	18805a2e 	bgeu	r3,r2,10015370 <_malloc_r+0x5e8>
10015208:	00c400f4 	movhi	r3,4099
1001520c:	18aa6915 	stw	r2,-22108(r3)
10015210:	00005706 	br	10015370 <_malloc_r+0x5e8>
10015214:	88c00054 	ori	r3,r17,1
10015218:	80c00115 	stw	r3,4(r16)
1001521c:	8463883a 	add	r17,r16,r17
10015220:	10800054 	ori	r2,r2,1
10015224:	9c400215 	stw	r17,8(r19)
10015228:	88800115 	stw	r2,4(r17)
1001522c:	9009883a 	mov	r4,r18
10015230:	002229c0 	call	1002229c <__malloc_unlock>
10015234:	80800204 	addi	r2,r16,8
10015238:	003f7c06 	br	1001502c <_malloc_r+0x2a4>
1001523c:	400d883a 	mov	r6,r8
10015240:	003f2106 	br	10014ec8 <_malloc_r+0x140>
10015244:	81000317 	ldw	r4,12(r16)
10015248:	003eee06 	br	10014e04 <_malloc_r+0x7c>
1001524c:	1006d27a 	srli	r3,r2,9
10015250:	19000168 	cmpgeui	r4,r3,5
10015254:	20003e26 	beq	r4,zero,10015350 <_malloc_r+0x5c8>
10015258:	19000568 	cmpgeui	r4,r3,21
1001525c:	20007a1e 	bne	r4,zero,10015448 <_malloc_r+0x6c0>
10015260:	19401704 	addi	r5,r3,92
10015264:	280a90fa 	slli	r5,r5,3
10015268:	190016c4 	addi	r4,r3,91
1001526c:	994b883a 	add	r5,r19,r5
10015270:	28c00017 	ldw	r3,0(r5)
10015274:	297ffe04 	addi	r5,r5,-8
10015278:	28c06226 	beq	r5,r3,10015404 <_malloc_r+0x67c>
1001527c:	01ffff04 	movi	r7,-4
10015280:	19000117 	ldw	r4,4(r3)
10015284:	21c8703a 	and	r4,r4,r7
10015288:	1100022e 	bgeu	r2,r4,10015294 <_malloc_r+0x50c>
1001528c:	18c00217 	ldw	r3,8(r3)
10015290:	28fffb1e 	bne	r5,r3,10015280 <_malloc_r+0x4f8>
10015294:	19400317 	ldw	r5,12(r3)
10015298:	98800117 	ldw	r2,4(r19)
1001529c:	81400315 	stw	r5,12(r16)
100152a0:	80c00215 	stw	r3,8(r16)
100152a4:	2c000215 	stw	r16,8(r5)
100152a8:	1c000315 	stw	r16,12(r3)
100152ac:	003f2506 	br	10014f44 <_malloc_r+0x1bc>
100152b0:	10c00568 	cmpgeui	r3,r2,21
100152b4:	18003826 	beq	r3,zero,10015398 <_malloc_r+0x610>
100152b8:	10c01568 	cmpgeui	r3,r2,85
100152bc:	1800691e 	bne	r3,zero,10015464 <_malloc_r+0x6dc>
100152c0:	8804d33a 	srli	r2,r17,12
100152c4:	11801bc4 	addi	r6,r2,111
100152c8:	12001b84 	addi	r8,r2,110
100152cc:	300a90fa 	slli	r5,r6,3
100152d0:	003ee606 	br	10014e6c <_malloc_r+0xe4>
100152d4:	5ac00044 	addi	r11,r11,1
100152d8:	588000cc 	andi	r2,r11,3
100152dc:	39c00204 	addi	r7,r7,8
100152e0:	103f2d1e 	bne	r2,zero,10014f98 <_malloc_r+0x210>
100152e4:	00003306 	br	100153b4 <_malloc_r+0x62c>
100152e8:	8085883a 	add	r2,r16,r2
100152ec:	10c00117 	ldw	r3,4(r2)
100152f0:	81000317 	ldw	r4,12(r16)
100152f4:	81400217 	ldw	r5,8(r16)
100152f8:	18c00054 	ori	r3,r3,1
100152fc:	10c00115 	stw	r3,4(r2)
10015300:	29000315 	stw	r4,12(r5)
10015304:	21400215 	stw	r5,8(r4)
10015308:	9009883a 	mov	r4,r18
1001530c:	002229c0 	call	1002229c <__malloc_unlock>
10015310:	80800204 	addi	r2,r16,8
10015314:	003f4506 	br	1001502c <_malloc_r+0x2a4>
10015318:	880cd0fa 	srli	r6,r17,3
1001531c:	88800204 	addi	r2,r17,8
10015320:	003eae06 	br	10014ddc <_malloc_r+0x54>
10015324:	8085883a 	add	r2,r16,r2
10015328:	10c00117 	ldw	r3,4(r2)
1001532c:	9009883a 	mov	r4,r18
10015330:	18c00054 	ori	r3,r3,1
10015334:	10c00115 	stw	r3,4(r2)
10015338:	002229c0 	call	1002229c <__malloc_unlock>
1001533c:	80800204 	addi	r2,r16,8
10015340:	003f3a06 	br	1001502c <_malloc_r+0x2a4>
10015344:	89000054 	ori	r4,r17,1
10015348:	81000115 	stw	r4,4(r16)
1001534c:	003f2706 	br	10014fec <_malloc_r+0x264>
10015350:	1006d1ba 	srli	r3,r2,6
10015354:	19400e44 	addi	r5,r3,57
10015358:	19000e04 	addi	r4,r3,56
1001535c:	280a90fa 	slli	r5,r5,3
10015360:	003fc206 	br	1001526c <_malloc_r+0x4e4>
10015364:	84c04626 	beq	r16,r19,10015480 <_malloc_r+0x6f8>
10015368:	9c000217 	ldw	r16,8(r19)
1001536c:	85000117 	ldw	r20,4(r16)
10015370:	00bfff04 	movi	r2,-4
10015374:	a0a8703a 	and	r20,r20,r2
10015378:	a445c83a 	sub	r2,r20,r17
1001537c:	a4400236 	bltu	r20,r17,10015388 <_malloc_r+0x600>
10015380:	10c00408 	cmpgei	r3,r2,16
10015384:	183fa31e 	bne	r3,zero,10015214 <_malloc_r+0x48c>
10015388:	9009883a 	mov	r4,r18
1001538c:	002229c0 	call	1002229c <__malloc_unlock>
10015390:	0005883a 	mov	r2,zero
10015394:	003f2506 	br	1001502c <_malloc_r+0x2a4>
10015398:	11801704 	addi	r6,r2,92
1001539c:	120016c4 	addi	r8,r2,91
100153a0:	300a90fa 	slli	r5,r6,3
100153a4:	003eb106 	br	10014e6c <_malloc_r+0xe4>
100153a8:	50800217 	ldw	r2,8(r10)
100153ac:	31bfffc4 	addi	r6,r6,-1
100153b0:	1280701e 	bne	r2,r10,10015574 <_malloc_r+0x7ec>
100153b4:	308000cc 	andi	r2,r6,3
100153b8:	52bffe04 	addi	r10,r10,-8
100153bc:	103ffa1e 	bne	r2,zero,100153a8 <_malloc_r+0x620>
100153c0:	98c00117 	ldw	r3,4(r19)
100153c4:	0104303a 	nor	r2,zero,r4
100153c8:	10c4703a 	and	r2,r2,r3
100153cc:	98800115 	stw	r2,4(r19)
100153d0:	2109883a 	add	r4,r4,r4
100153d4:	113f3136 	bltu	r2,r4,1001509c <_malloc_r+0x314>
100153d8:	203f3026 	beq	r4,zero,1001509c <_malloc_r+0x314>
100153dc:	2086703a 	and	r3,r4,r2
100153e0:	1800041e 	bne	r3,zero,100153f4 <_malloc_r+0x66c>
100153e4:	2109883a 	add	r4,r4,r4
100153e8:	2086703a 	and	r3,r4,r2
100153ec:	5ac00104 	addi	r11,r11,4
100153f0:	183ffc26 	beq	r3,zero,100153e4 <_malloc_r+0x65c>
100153f4:	580d883a 	mov	r6,r11
100153f8:	003ee306 	br	10014f88 <_malloc_r+0x200>
100153fc:	a5000404 	addi	r20,r20,16
10015400:	003f3906 	br	100150e8 <_malloc_r+0x360>
10015404:	2009d0ba 	srai	r4,r4,2
10015408:	00800044 	movi	r2,1
1001540c:	99c00117 	ldw	r7,4(r19)
10015410:	1104983a 	sll	r2,r2,r4
10015414:	11c4b03a 	or	r2,r2,r7
10015418:	98800115 	stw	r2,4(r19)
1001541c:	003f9f06 	br	1001529c <_malloc_r+0x514>
10015420:	bd05883a 	add	r2,r23,r20
10015424:	0085c83a 	sub	r2,zero,r2
10015428:	1543ffcc 	andi	r21,r2,4095
1001542c:	a80b883a 	mov	r5,r21
10015430:	9009883a 	mov	r4,r18
10015434:	0015e300 	call	10015e30 <_sbrk_r>
10015438:	10ffffe0 	cmpeqi	r3,r2,-1
1001543c:	183f4e26 	beq	r3,zero,10015178 <_malloc_r+0x3f0>
10015440:	002b883a 	mov	r21,zero
10015444:	003f4e06 	br	10015180 <_malloc_r+0x3f8>
10015448:	19001568 	cmpgeui	r4,r3,85
1001544c:	2000201e 	bne	r4,zero,100154d0 <_malloc_r+0x748>
10015450:	1006d33a 	srli	r3,r2,12
10015454:	19401bc4 	addi	r5,r3,111
10015458:	19001b84 	addi	r4,r3,110
1001545c:	280a90fa 	slli	r5,r5,3
10015460:	003f8206 	br	1001526c <_malloc_r+0x4e4>
10015464:	10c05568 	cmpgeui	r3,r2,341
10015468:	1800201e 	bne	r3,zero,100154ec <_malloc_r+0x764>
1001546c:	8804d3fa 	srli	r2,r17,15
10015470:	11801e04 	addi	r6,r2,120
10015474:	12001dc4 	addi	r8,r2,119
10015478:	300a90fa 	slli	r5,r6,3
1001547c:	003e7b06 	br	10014e6c <_malloc_r+0xe4>
10015480:	008400f4 	movhi	r2,4099
10015484:	10ea8217 	ldw	r3,-22008(r2)
10015488:	a0c7883a 	add	r3,r20,r3
1001548c:	10ea8215 	stw	r3,-22008(r2)
10015490:	003f2306 	br	10015120 <_malloc_r+0x398>
10015494:	a903ffcc 	andi	r4,r21,4095
10015498:	203f211e 	bne	r4,zero,10015120 <_malloc_r+0x398>
1001549c:	9c000217 	ldw	r16,8(r19)
100154a0:	b529883a 	add	r20,r22,r20
100154a4:	a5000054 	ori	r20,r20,1
100154a8:	85000115 	stw	r20,4(r16)
100154ac:	003f4e06 	br	100151e8 <_malloc_r+0x460>
100154b0:	008400f4 	movhi	r2,4099
100154b4:	15e11815 	stw	r23,-31648(r2)
100154b8:	003f2106 	br	10015140 <_malloc_r+0x3b8>
100154bc:	b821883a 	mov	r16,r23
100154c0:	003f4906 	br	100151e8 <_malloc_r+0x460>
100154c4:	00800044 	movi	r2,1
100154c8:	b8800115 	stw	r2,4(r23)
100154cc:	003fae06 	br	10015388 <_malloc_r+0x600>
100154d0:	19005568 	cmpgeui	r4,r3,341
100154d4:	2000191e 	bne	r4,zero,1001553c <_malloc_r+0x7b4>
100154d8:	1006d3fa 	srli	r3,r2,15
100154dc:	19401e04 	addi	r5,r3,120
100154e0:	19001dc4 	addi	r4,r3,119
100154e4:	280a90fa 	slli	r5,r5,3
100154e8:	003f6006 	br	1001526c <_malloc_r+0x4e4>
100154ec:	10815568 	cmpgeui	r2,r2,1365
100154f0:	1000191e 	bne	r2,zero,10015558 <_malloc_r+0x7d0>
100154f4:	8804d4ba 	srli	r2,r17,18
100154f8:	11801f44 	addi	r6,r2,125
100154fc:	12001f04 	addi	r8,r2,124
10015500:	300a90fa 	slli	r5,r6,3
10015504:	003e5906 	br	10014e6c <_malloc_r+0xe4>
10015508:	e73ffe04 	addi	fp,fp,-8
1001550c:	a729883a 	add	r20,r20,fp
10015510:	a5e9c83a 	sub	r20,r20,r23
10015514:	002b883a 	mov	r21,zero
10015518:	003f1906 	br	10015180 <_malloc_r+0x3f8>
1001551c:	81400204 	addi	r5,r16,8
10015520:	9009883a 	mov	r4,r18
10015524:	001aba80 	call	1001aba8 <_free_r>
10015528:	9c000217 	ldw	r16,8(r19)
1001552c:	008400f4 	movhi	r2,4099
10015530:	10aa8217 	ldw	r2,-22008(r2)
10015534:	85000117 	ldw	r20,4(r16)
10015538:	003f2b06 	br	100151e8 <_malloc_r+0x460>
1001553c:	18c15568 	cmpgeui	r3,r3,1365
10015540:	1800091e 	bne	r3,zero,10015568 <_malloc_r+0x7e0>
10015544:	1006d4ba 	srli	r3,r2,18
10015548:	19401f44 	addi	r5,r3,125
1001554c:	19001f04 	addi	r4,r3,124
10015550:	280a90fa 	slli	r5,r5,3
10015554:	003f4506 	br	1001526c <_malloc_r+0x4e4>
10015558:	0140fe04 	movi	r5,1016
1001555c:	01801fc4 	movi	r6,127
10015560:	02001f84 	movi	r8,126
10015564:	003e4106 	br	10014e6c <_malloc_r+0xe4>
10015568:	0140fe04 	movi	r5,1016
1001556c:	01001f84 	movi	r4,126
10015570:	003f3e06 	br	1001526c <_malloc_r+0x4e4>
10015574:	98800117 	ldw	r2,4(r19)
10015578:	003f9506 	br	100153d0 <_malloc_r+0x648>

1001557c <memchr>:
1001557c:	208000cc 	andi	r2,r4,3
10015580:	280f883a 	mov	r7,r5
10015584:	10003526 	beq	r2,zero,1001565c <memchr+0xe0>
10015588:	30bfffc4 	addi	r2,r6,-1
1001558c:	30001926 	beq	r6,zero,100155f4 <memchr+0x78>
10015590:	20c00003 	ldbu	r3,0(r4)
10015594:	29803fcc 	andi	r6,r5,255
10015598:	30c0061e 	bne	r6,r3,100155b4 <memchr+0x38>
1001559c:	00001706 	br	100155fc <memchr+0x80>
100155a0:	10bfffc4 	addi	r2,r2,-1
100155a4:	10ffffe0 	cmpeqi	r3,r2,-1
100155a8:	1800121e 	bne	r3,zero,100155f4 <memchr+0x78>
100155ac:	20c00003 	ldbu	r3,0(r4)
100155b0:	19801226 	beq	r3,r6,100155fc <memchr+0x80>
100155b4:	21000044 	addi	r4,r4,1
100155b8:	20c000cc 	andi	r3,r4,3
100155bc:	183ff81e 	bne	r3,zero,100155a0 <memchr+0x24>
100155c0:	10c00128 	cmpgeui	r3,r2,4
100155c4:	18000f1e 	bne	r3,zero,10015604 <memchr+0x88>
100155c8:	10000a26 	beq	r2,zero,100155f4 <memchr+0x78>
100155cc:	20c00003 	ldbu	r3,0(r4)
100155d0:	29403fcc 	andi	r5,r5,255
100155d4:	19400926 	beq	r3,r5,100155fc <memchr+0x80>
100155d8:	2085883a 	add	r2,r4,r2
100155dc:	39403fcc 	andi	r5,r7,255
100155e0:	00000206 	br	100155ec <memchr+0x70>
100155e4:	20c00003 	ldbu	r3,0(r4)
100155e8:	19400426 	beq	r3,r5,100155fc <memchr+0x80>
100155ec:	21000044 	addi	r4,r4,1
100155f0:	113ffc1e 	bne	r2,r4,100155e4 <memchr+0x68>
100155f4:	0005883a 	mov	r2,zero
100155f8:	f800283a 	ret
100155fc:	2005883a 	mov	r2,r4
10015600:	f800283a 	ret
10015604:	280c923a 	slli	r6,r5,8
10015608:	2a403fcc 	andi	r9,r5,255
1001560c:	02bfbff4 	movhi	r10,65279
10015610:	31bfffcc 	andi	r6,r6,65535
10015614:	3246b03a 	or	r3,r6,r9
10015618:	1812943a 	slli	r9,r3,16
1001561c:	02202074 	movhi	r8,32897
10015620:	52bfbfc4 	addi	r10,r10,-257
10015624:	48d2b03a 	or	r9,r9,r3
10015628:	42202004 	addi	r8,r8,-32640
1001562c:	20c00017 	ldw	r3,0(r4)
10015630:	48c6f03a 	xor	r3,r9,r3
10015634:	1a8d883a 	add	r6,r3,r10
10015638:	00c6303a 	nor	r3,zero,r3
1001563c:	30c6703a 	and	r3,r6,r3
10015640:	1a06703a 	and	r3,r3,r8
10015644:	183fe11e 	bne	r3,zero,100155cc <memchr+0x50>
10015648:	10bfff04 	addi	r2,r2,-4
1001564c:	10c00128 	cmpgeui	r3,r2,4
10015650:	21000104 	addi	r4,r4,4
10015654:	183ff51e 	bne	r3,zero,1001562c <memchr+0xb0>
10015658:	003fdb06 	br	100155c8 <memchr+0x4c>
1001565c:	3005883a 	mov	r2,r6
10015660:	003fd706 	br	100155c0 <memchr+0x44>

10015664 <memcmp>:
10015664:	30800130 	cmpltui	r2,r6,4
10015668:	10000b1e 	bne	r2,zero,10015698 <memcmp+0x34>
1001566c:	2144b03a 	or	r2,r4,r5
10015670:	108000cc 	andi	r2,r2,3
10015674:	10001a1e 	bne	r2,zero,100156e0 <memcmp+0x7c>
10015678:	20c00017 	ldw	r3,0(r4)
1001567c:	28800017 	ldw	r2,0(r5)
10015680:	1880171e 	bne	r3,r2,100156e0 <memcmp+0x7c>
10015684:	31bfff04 	addi	r6,r6,-4
10015688:	30800128 	cmpgeui	r2,r6,4
1001568c:	21000104 	addi	r4,r4,4
10015690:	29400104 	addi	r5,r5,4
10015694:	103ff81e 	bne	r2,zero,10015678 <memcmp+0x14>
10015698:	30ffffc4 	addi	r3,r6,-1
1001569c:	30000e26 	beq	r6,zero,100156d8 <memcmp+0x74>
100156a0:	29800003 	ldbu	r6,0(r5)
100156a4:	20800003 	ldbu	r2,0(r4)
100156a8:	30800f1e 	bne	r6,r2,100156e8 <memcmp+0x84>
100156ac:	18800044 	addi	r2,r3,1
100156b0:	20c00044 	addi	r3,r4,1
100156b4:	2089883a 	add	r4,r4,r2
100156b8:	00000506 	br	100156d0 <memcmp+0x6c>
100156bc:	18800003 	ldbu	r2,0(r3)
100156c0:	29800003 	ldbu	r6,0(r5)
100156c4:	18c00044 	addi	r3,r3,1
100156c8:	10803fcc 	andi	r2,r2,255
100156cc:	1180061e 	bne	r2,r6,100156e8 <memcmp+0x84>
100156d0:	29400044 	addi	r5,r5,1
100156d4:	193ff91e 	bne	r3,r4,100156bc <memcmp+0x58>
100156d8:	0005883a 	mov	r2,zero
100156dc:	f800283a 	ret
100156e0:	30ffffc4 	addi	r3,r6,-1
100156e4:	003fee06 	br	100156a0 <memcmp+0x3c>
100156e8:	1185c83a 	sub	r2,r2,r6
100156ec:	f800283a 	ret

100156f0 <memcpy>:
100156f0:	30c00430 	cmpltui	r3,r6,16
100156f4:	2005883a 	mov	r2,r4
100156f8:	18002d1e 	bne	r3,zero,100157b0 <memcpy+0xc0>
100156fc:	2906b03a 	or	r3,r5,r4
10015700:	18c000cc 	andi	r3,r3,3
10015704:	1800351e 	bne	r3,zero,100157dc <memcpy+0xec>
10015708:	32fffc04 	addi	r11,r6,-16
1001570c:	5816d13a 	srli	r11,r11,4
10015710:	2007883a 	mov	r3,r4
10015714:	280f883a 	mov	r7,r5
10015718:	5ac00044 	addi	r11,r11,1
1001571c:	5816913a 	slli	r11,r11,4
10015720:	22c9883a 	add	r4,r4,r11
10015724:	3a000017 	ldw	r8,0(r7)
10015728:	3a800117 	ldw	r10,4(r7)
1001572c:	3a400217 	ldw	r9,8(r7)
10015730:	39c00404 	addi	r7,r7,16
10015734:	1a000015 	stw	r8,0(r3)
10015738:	3a3fff17 	ldw	r8,-4(r7)
1001573c:	1a800115 	stw	r10,4(r3)
10015740:	1a400215 	stw	r9,8(r3)
10015744:	18c00404 	addi	r3,r3,16
10015748:	1a3fff15 	stw	r8,-4(r3)
1001574c:	20fff51e 	bne	r4,r3,10015724 <memcpy+0x34>
10015750:	3100030c 	andi	r4,r6,12
10015754:	2acb883a 	add	r5,r5,r11
10015758:	320003cc 	andi	r8,r6,15
1001575c:	20002226 	beq	r4,zero,100157e8 <memcpy+0xf8>
10015760:	2809883a 	mov	r4,r5
10015764:	1813883a 	mov	r9,r3
10015768:	21000104 	addi	r4,r4,4
1001576c:	22bfff17 	ldw	r10,-4(r4)
10015770:	410fc83a 	sub	r7,r8,r4
10015774:	4a400104 	addi	r9,r9,4
10015778:	29cf883a 	add	r7,r5,r7
1001577c:	4abfff15 	stw	r10,-4(r9)
10015780:	39c00128 	cmpgeui	r7,r7,4
10015784:	383ff81e 	bne	r7,zero,10015768 <memcpy+0x78>
10015788:	413fff04 	addi	r4,r8,-4
1001578c:	2008d0ba 	srli	r4,r4,2
10015790:	318000cc 	andi	r6,r6,3
10015794:	31ffffc4 	addi	r7,r6,-1
10015798:	21000044 	addi	r4,r4,1
1001579c:	200890ba 	slli	r4,r4,2
100157a0:	1907883a 	add	r3,r3,r4
100157a4:	290b883a 	add	r5,r5,r4
100157a8:	3000041e 	bne	r6,zero,100157bc <memcpy+0xcc>
100157ac:	f800283a 	ret
100157b0:	2007883a 	mov	r3,r4
100157b4:	31ffffc4 	addi	r7,r6,-1
100157b8:	303ffc26 	beq	r6,zero,100157ac <memcpy+0xbc>
100157bc:	39c00044 	addi	r7,r7,1
100157c0:	19cf883a 	add	r7,r3,r7
100157c4:	29400044 	addi	r5,r5,1
100157c8:	29bfffc3 	ldbu	r6,-1(r5)
100157cc:	18c00044 	addi	r3,r3,1
100157d0:	19bfffc5 	stb	r6,-1(r3)
100157d4:	19fffb1e 	bne	r3,r7,100157c4 <memcpy+0xd4>
100157d8:	f800283a 	ret
100157dc:	31ffffc4 	addi	r7,r6,-1
100157e0:	2007883a 	mov	r3,r4
100157e4:	003ff506 	br	100157bc <memcpy+0xcc>
100157e8:	400d883a 	mov	r6,r8
100157ec:	003ff106 	br	100157b4 <memcpy+0xc4>

100157f0 <memmove>:
100157f0:	2005883a 	mov	r2,r4
100157f4:	29000a2e 	bgeu	r5,r4,10015820 <memmove+0x30>
100157f8:	2989883a 	add	r4,r5,r6
100157fc:	1100082e 	bgeu	r2,r4,10015820 <memmove+0x30>
10015800:	1187883a 	add	r3,r2,r6
10015804:	30003e26 	beq	r6,zero,10015900 <memmove+0x110>
10015808:	213fffc4 	addi	r4,r4,-1
1001580c:	21400003 	ldbu	r5,0(r4)
10015810:	18ffffc4 	addi	r3,r3,-1
10015814:	19400005 	stb	r5,0(r3)
10015818:	10fffb1e 	bne	r2,r3,10015808 <memmove+0x18>
1001581c:	f800283a 	ret
10015820:	30c00430 	cmpltui	r3,r6,16
10015824:	18000b26 	beq	r3,zero,10015854 <memmove+0x64>
10015828:	1007883a 	mov	r3,r2
1001582c:	31ffffc4 	addi	r7,r6,-1
10015830:	30003726 	beq	r6,zero,10015910 <memmove+0x120>
10015834:	39c00044 	addi	r7,r7,1
10015838:	29cf883a 	add	r7,r5,r7
1001583c:	29400044 	addi	r5,r5,1
10015840:	29bfffc3 	ldbu	r6,-1(r5)
10015844:	18c00044 	addi	r3,r3,1
10015848:	19bfffc5 	stb	r6,-1(r3)
1001584c:	29fffb1e 	bne	r5,r7,1001583c <memmove+0x4c>
10015850:	f800283a 	ret
10015854:	2886b03a 	or	r3,r5,r2
10015858:	18c000cc 	andi	r3,r3,3
1001585c:	1800291e 	bne	r3,zero,10015904 <memmove+0x114>
10015860:	327ffc04 	addi	r9,r6,-16
10015864:	4812d13a 	srli	r9,r9,4
10015868:	280f883a 	mov	r7,r5
1001586c:	1007883a 	mov	r3,r2
10015870:	4a400044 	addi	r9,r9,1
10015874:	4812913a 	slli	r9,r9,4
10015878:	1251883a 	add	r8,r2,r9
1001587c:	39000017 	ldw	r4,0(r7)
10015880:	18c00404 	addi	r3,r3,16
10015884:	39c00404 	addi	r7,r7,16
10015888:	193ffc15 	stw	r4,-16(r3)
1001588c:	393ffd17 	ldw	r4,-12(r7)
10015890:	193ffd15 	stw	r4,-12(r3)
10015894:	393ffe17 	ldw	r4,-8(r7)
10015898:	193ffe15 	stw	r4,-8(r3)
1001589c:	393fff17 	ldw	r4,-4(r7)
100158a0:	193fff15 	stw	r4,-4(r3)
100158a4:	40fff51e 	bne	r8,r3,1001587c <memmove+0x8c>
100158a8:	3100030c 	andi	r4,r6,12
100158ac:	2a4b883a 	add	r5,r5,r9
100158b0:	320003cc 	andi	r8,r6,15
100158b4:	20001726 	beq	r4,zero,10015914 <memmove+0x124>
100158b8:	2813883a 	mov	r9,r5
100158bc:	180f883a 	mov	r7,r3
100158c0:	4a400104 	addi	r9,r9,4
100158c4:	39c00104 	addi	r7,r7,4
100158c8:	4abfff17 	ldw	r10,-4(r9)
100158cc:	41c9c83a 	sub	r4,r8,r7
100158d0:	1909883a 	add	r4,r3,r4
100158d4:	3abfff15 	stw	r10,-4(r7)
100158d8:	21000128 	cmpgeui	r4,r4,4
100158dc:	203ff81e 	bne	r4,zero,100158c0 <memmove+0xd0>
100158e0:	413fff04 	addi	r4,r8,-4
100158e4:	2008d0ba 	srli	r4,r4,2
100158e8:	318000cc 	andi	r6,r6,3
100158ec:	21000044 	addi	r4,r4,1
100158f0:	200890ba 	slli	r4,r4,2
100158f4:	1907883a 	add	r3,r3,r4
100158f8:	290b883a 	add	r5,r5,r4
100158fc:	003fcb06 	br	1001582c <memmove+0x3c>
10015900:	f800283a 	ret
10015904:	31ffffc4 	addi	r7,r6,-1
10015908:	1007883a 	mov	r3,r2
1001590c:	003fc906 	br	10015834 <memmove+0x44>
10015910:	f800283a 	ret
10015914:	400d883a 	mov	r6,r8
10015918:	003fc406 	br	1001582c <memmove+0x3c>

1001591c <memset>:
1001591c:	20c000cc 	andi	r3,r4,3
10015920:	2005883a 	mov	r2,r4
10015924:	18003626 	beq	r3,zero,10015a00 <memset+0xe4>
10015928:	31ffffc4 	addi	r7,r6,-1
1001592c:	30003326 	beq	r6,zero,100159fc <memset+0xe0>
10015930:	2811883a 	mov	r8,r5
10015934:	2007883a 	mov	r3,r4
10015938:	00000306 	br	10015948 <memset+0x2c>
1001593c:	39ffffc4 	addi	r7,r7,-1
10015940:	39bfffe0 	cmpeqi	r6,r7,-1
10015944:	30002d1e 	bne	r6,zero,100159fc <memset+0xe0>
10015948:	18c00044 	addi	r3,r3,1
1001594c:	1a3fffc5 	stb	r8,-1(r3)
10015950:	198000cc 	andi	r6,r3,3
10015954:	303ff91e 	bne	r6,zero,1001593c <memset+0x20>
10015958:	39000130 	cmpltui	r4,r7,4
1001595c:	2000221e 	bne	r4,zero,100159e8 <memset+0xcc>
10015960:	29003fcc 	andi	r4,r5,255
10015964:	200c923a 	slli	r6,r4,8
10015968:	3a000430 	cmpltui	r8,r7,16
1001596c:	3108b03a 	or	r4,r6,r4
10015970:	200c943a 	slli	r6,r4,16
10015974:	310cb03a 	or	r6,r6,r4
10015978:	40000e1e 	bne	r8,zero,100159b4 <memset+0x98>
1001597c:	3a3ffc04 	addi	r8,r7,-16
10015980:	4010d13a 	srli	r8,r8,4
10015984:	42000044 	addi	r8,r8,1
10015988:	4010913a 	slli	r8,r8,4
1001598c:	1a11883a 	add	r8,r3,r8
10015990:	19800015 	stw	r6,0(r3)
10015994:	19800115 	stw	r6,4(r3)
10015998:	19800215 	stw	r6,8(r3)
1001599c:	18c00404 	addi	r3,r3,16
100159a0:	19bfff15 	stw	r6,-4(r3)
100159a4:	40fffa1e 	bne	r8,r3,10015990 <memset+0x74>
100159a8:	3900030c 	andi	r4,r7,12
100159ac:	39c003cc 	andi	r7,r7,15
100159b0:	20000d26 	beq	r4,zero,100159e8 <memset+0xcc>
100159b4:	1809883a 	mov	r4,r3
100159b8:	21000104 	addi	r4,r4,4
100159bc:	3911c83a 	sub	r8,r7,r4
100159c0:	1a11883a 	add	r8,r3,r8
100159c4:	21bfff15 	stw	r6,-4(r4)
100159c8:	42000128 	cmpgeui	r8,r8,4
100159cc:	403ffa1e 	bne	r8,zero,100159b8 <memset+0x9c>
100159d0:	393fff04 	addi	r4,r7,-4
100159d4:	2008d0ba 	srli	r4,r4,2
100159d8:	39c000cc 	andi	r7,r7,3
100159dc:	21000044 	addi	r4,r4,1
100159e0:	200890ba 	slli	r4,r4,2
100159e4:	1907883a 	add	r3,r3,r4
100159e8:	38000426 	beq	r7,zero,100159fc <memset+0xe0>
100159ec:	19cf883a 	add	r7,r3,r7
100159f0:	18c00044 	addi	r3,r3,1
100159f4:	197fffc5 	stb	r5,-1(r3)
100159f8:	38fffd1e 	bne	r7,r3,100159f0 <memset+0xd4>
100159fc:	f800283a 	ret
10015a00:	2007883a 	mov	r3,r4
10015a04:	300f883a 	mov	r7,r6
10015a08:	003fd306 	br	10015958 <memset+0x3c>

10015a0c <_open_r>:
10015a0c:	defffe04 	addi	sp,sp,-8
10015a10:	2805883a 	mov	r2,r5
10015a14:	dc000015 	stw	r16,0(sp)
10015a18:	300b883a 	mov	r5,r6
10015a1c:	2021883a 	mov	r16,r4
10015a20:	380d883a 	mov	r6,r7
10015a24:	1009883a 	mov	r4,r2
10015a28:	008400f4 	movhi	r2,4099
10015a2c:	dfc00115 	stw	ra,4(sp)
10015a30:	102a6815 	stw	zero,-22112(r2)
10015a34:	00223b40 	call	100223b4 <open>
10015a38:	10ffffd8 	cmpnei	r3,r2,-1
10015a3c:	18000426 	beq	r3,zero,10015a50 <_open_r+0x44>
10015a40:	dfc00117 	ldw	ra,4(sp)
10015a44:	dc000017 	ldw	r16,0(sp)
10015a48:	dec00204 	addi	sp,sp,8
10015a4c:	f800283a 	ret
10015a50:	00c400f4 	movhi	r3,4099
10015a54:	18ea6817 	ldw	r3,-22112(r3)
10015a58:	183ff926 	beq	r3,zero,10015a40 <_open_r+0x34>
10015a5c:	80c00015 	stw	r3,0(r16)
10015a60:	dfc00117 	ldw	ra,4(sp)
10015a64:	dc000017 	ldw	r16,0(sp)
10015a68:	dec00204 	addi	sp,sp,8
10015a6c:	f800283a 	ret

10015a70 <_printf_r>:
10015a70:	defffd04 	addi	sp,sp,-12
10015a74:	2805883a 	mov	r2,r5
10015a78:	dfc00015 	stw	ra,0(sp)
10015a7c:	d9800115 	stw	r6,4(sp)
10015a80:	d9c00215 	stw	r7,8(sp)
10015a84:	21400217 	ldw	r5,8(r4)
10015a88:	d9c00104 	addi	r7,sp,4
10015a8c:	100d883a 	mov	r6,r2
10015a90:	00166c80 	call	100166c8 <___vfprintf_internal_r>
10015a94:	dfc00017 	ldw	ra,0(sp)
10015a98:	dec00304 	addi	sp,sp,12
10015a9c:	f800283a 	ret

10015aa0 <printf>:
10015aa0:	defffc04 	addi	sp,sp,-16
10015aa4:	dfc00015 	stw	ra,0(sp)
10015aa8:	d9400115 	stw	r5,4(sp)
10015aac:	d9800215 	stw	r6,8(sp)
10015ab0:	d9c00315 	stw	r7,12(sp)
10015ab4:	008400f4 	movhi	r2,4099
10015ab8:	10a11717 	ldw	r2,-31652(r2)
10015abc:	200b883a 	mov	r5,r4
10015ac0:	d9800104 	addi	r6,sp,4
10015ac4:	11000217 	ldw	r4,8(r2)
10015ac8:	00188280 	call	10018828 <__vfprintf_internal>
10015acc:	dfc00017 	ldw	ra,0(sp)
10015ad0:	dec00404 	addi	sp,sp,16
10015ad4:	f800283a 	ret

10015ad8 <_putchar_r>:
10015ad8:	21800217 	ldw	r6,8(r4)
10015adc:	001c4d81 	jmpi	1001c4d8 <_putc_r>

10015ae0 <putchar>:
10015ae0:	008400f4 	movhi	r2,4099
10015ae4:	10a11717 	ldw	r2,-31652(r2)
10015ae8:	200b883a 	mov	r5,r4
10015aec:	11800217 	ldw	r6,8(r2)
10015af0:	1009883a 	mov	r4,r2
10015af4:	001c4d81 	jmpi	1001c4d8 <_putc_r>

10015af8 <_puts_r>:
10015af8:	defff504 	addi	sp,sp,-44
10015afc:	dc000815 	stw	r16,32(sp)
10015b00:	2021883a 	mov	r16,r4
10015b04:	2809883a 	mov	r4,r5
10015b08:	dc400915 	stw	r17,36(sp)
10015b0c:	dfc00a15 	stw	ra,40(sp)
10015b10:	2823883a 	mov	r17,r5
10015b14:	00163ac0 	call	100163ac <strlen>
10015b18:	11000044 	addi	r4,r2,1
10015b1c:	d8800515 	stw	r2,20(sp)
10015b20:	00800044 	movi	r2,1
10015b24:	00c400b4 	movhi	r3,4098
10015b28:	d8800715 	stw	r2,28(sp)
10015b2c:	d8800404 	addi	r2,sp,16
10015b30:	18d68504 	addi	r3,r3,23060
10015b34:	d8800115 	stw	r2,4(sp)
10015b38:	00800084 	movi	r2,2
10015b3c:	dc400415 	stw	r17,16(sp)
10015b40:	d8c00615 	stw	r3,24(sp)
10015b44:	d9000315 	stw	r4,12(sp)
10015b48:	d8800215 	stw	r2,8(sp)
10015b4c:	81400217 	ldw	r5,8(r16)
10015b50:	80000226 	beq	r16,zero,10015b5c <_puts_r+0x64>
10015b54:	80800e17 	ldw	r2,56(r16)
10015b58:	10001326 	beq	r2,zero,10015ba8 <_puts_r+0xb0>
10015b5c:	2880030b 	ldhu	r2,12(r5)
10015b60:	10c8000c 	andi	r3,r2,8192
10015b64:	1800061e 	bne	r3,zero,10015b80 <_puts_r+0x88>
10015b68:	28c01917 	ldw	r3,100(r5)
10015b6c:	0137ffc4 	movi	r4,-8193
10015b70:	10880014 	ori	r2,r2,8192
10015b74:	1906703a 	and	r3,r3,r4
10015b78:	2880030d 	sth	r2,12(r5)
10015b7c:	28c01915 	stw	r3,100(r5)
10015b80:	d9800104 	addi	r6,sp,4
10015b84:	8009883a 	mov	r4,r16
10015b88:	001aea40 	call	1001aea4 <__sfvwrite_r>
10015b8c:	10000b1e 	bne	r2,zero,10015bbc <_puts_r+0xc4>
10015b90:	00800284 	movi	r2,10
10015b94:	dfc00a17 	ldw	ra,40(sp)
10015b98:	dc400917 	ldw	r17,36(sp)
10015b9c:	dc000817 	ldw	r16,32(sp)
10015ba0:	dec00b04 	addi	sp,sp,44
10015ba4:	f800283a 	ret
10015ba8:	8009883a 	mov	r4,r16
10015bac:	d9400015 	stw	r5,0(sp)
10015bb0:	001a9a00 	call	1001a9a0 <__sinit>
10015bb4:	d9400017 	ldw	r5,0(sp)
10015bb8:	003fe806 	br	10015b5c <_puts_r+0x64>
10015bbc:	00bfffc4 	movi	r2,-1
10015bc0:	003ff406 	br	10015b94 <_puts_r+0x9c>

10015bc4 <puts>:
10015bc4:	008400f4 	movhi	r2,4099
10015bc8:	200b883a 	mov	r5,r4
10015bcc:	11211717 	ldw	r4,-31652(r2)
10015bd0:	0015af81 	jmpi	10015af8 <_puts_r>

10015bd4 <srand>:
10015bd4:	008400f4 	movhi	r2,4099
10015bd8:	10a11717 	ldw	r2,-31652(r2)
10015bdc:	11002915 	stw	r4,164(r2)
10015be0:	10002a15 	stw	zero,168(r2)
10015be4:	f800283a 	ret

10015be8 <rand>:
10015be8:	defffe04 	addi	sp,sp,-8
10015bec:	008400f4 	movhi	r2,4099
10015bf0:	dc000015 	stw	r16,0(sp)
10015bf4:	14211717 	ldw	r16,-31652(r2)
10015bf8:	dfc00115 	stw	ra,4(sp)
10015bfc:	01932574 	movhi	r6,19605
10015c00:	81002917 	ldw	r4,164(r16)
10015c04:	81402a17 	ldw	r5,168(r16)
10015c08:	01d614b4 	movhi	r7,22610
10015c0c:	319fcb44 	addi	r6,r6,32557
10015c10:	39fd0b44 	addi	r7,r7,-3027
10015c14:	0013e4c0 	call	10013e4c <__muldi3>
10015c18:	11400044 	addi	r5,r2,1
10015c1c:	2885803a 	cmpltu	r2,r5,r2
10015c20:	01200034 	movhi	r4,32768
10015c24:	10c5883a 	add	r2,r2,r3
10015c28:	213fffc4 	addi	r4,r4,-1
10015c2c:	80802a15 	stw	r2,168(r16)
10015c30:	1104703a 	and	r2,r2,r4
10015c34:	81402915 	stw	r5,164(r16)
10015c38:	dfc00117 	ldw	ra,4(sp)
10015c3c:	dc000017 	ldw	r16,0(sp)
10015c40:	dec00204 	addi	sp,sp,8
10015c44:	f800283a 	ret

10015c48 <lflush>:
10015c48:	2080030b 	ldhu	r2,12(r4)
10015c4c:	1080024c 	andi	r2,r2,9
10015c50:	10800258 	cmpnei	r2,r2,9
10015c54:	10000226 	beq	r2,zero,10015c60 <lflush+0x18>
10015c58:	0005883a 	mov	r2,zero
10015c5c:	f800283a 	ret
10015c60:	001a67c1 	jmpi	1001a67c <fflush>

10015c64 <__srefill_r>:
10015c64:	defffc04 	addi	sp,sp,-16
10015c68:	dc400115 	stw	r17,4(sp)
10015c6c:	dc000015 	stw	r16,0(sp)
10015c70:	dfc00315 	stw	ra,12(sp)
10015c74:	dc800215 	stw	r18,8(sp)
10015c78:	2023883a 	mov	r17,r4
10015c7c:	2821883a 	mov	r16,r5
10015c80:	20000226 	beq	r4,zero,10015c8c <__srefill_r+0x28>
10015c84:	20800e17 	ldw	r2,56(r4)
10015c88:	10003a26 	beq	r2,zero,10015d74 <__srefill_r+0x110>
10015c8c:	80c0030b 	ldhu	r3,12(r16)
10015c90:	1908000c 	andi	r4,r3,8192
10015c94:	1805883a 	mov	r2,r3
10015c98:	2000071e 	bne	r4,zero,10015cb8 <__srefill_r+0x54>
10015c9c:	81001917 	ldw	r4,100(r16)
10015ca0:	18880014 	ori	r2,r3,8192
10015ca4:	00f7ffc4 	movi	r3,-8193
10015ca8:	20c8703a 	and	r4,r4,r3
10015cac:	8080030d 	sth	r2,12(r16)
10015cb0:	1007883a 	mov	r3,r2
10015cb4:	81001915 	stw	r4,100(r16)
10015cb8:	80000115 	stw	zero,4(r16)
10015cbc:	1100080c 	andi	r4,r2,32
10015cc0:	20004d1e 	bne	r4,zero,10015df8 <__srefill_r+0x194>
10015cc4:	1100010c 	andi	r4,r2,4
10015cc8:	20001c1e 	bne	r4,zero,10015d3c <__srefill_r+0xd8>
10015ccc:	1100040c 	andi	r4,r2,16
10015cd0:	20005126 	beq	r4,zero,10015e18 <__srefill_r+0x1b4>
10015cd4:	1080020c 	andi	r2,r2,8
10015cd8:	1000371e 	bne	r2,zero,10015db8 <__srefill_r+0x154>
10015cdc:	18c00114 	ori	r3,r3,4
10015ce0:	80c0030d 	sth	r3,12(r16)
10015ce4:	80800417 	ldw	r2,16(r16)
10015ce8:	10003c26 	beq	r2,zero,10015ddc <__srefill_r+0x178>
10015cec:	8480030b 	ldhu	r18,12(r16)
10015cf0:	908000cc 	andi	r2,r18,3
10015cf4:	1000211e 	bne	r2,zero,10015d7c <__srefill_r+0x118>
10015cf8:	81800417 	ldw	r6,16(r16)
10015cfc:	80800817 	ldw	r2,32(r16)
10015d00:	81c00517 	ldw	r7,20(r16)
10015d04:	81400717 	ldw	r5,28(r16)
10015d08:	81800015 	stw	r6,0(r16)
10015d0c:	8809883a 	mov	r4,r17
10015d10:	103ee83a 	callr	r2
10015d14:	1007883a 	mov	r3,r2
10015d18:	80800115 	stw	r2,4(r16)
10015d1c:	0005883a 	mov	r2,zero
10015d20:	00c0370e 	bge	zero,r3,10015e00 <__srefill_r+0x19c>
10015d24:	dfc00317 	ldw	ra,12(sp)
10015d28:	dc800217 	ldw	r18,8(sp)
10015d2c:	dc400117 	ldw	r17,4(sp)
10015d30:	dc000017 	ldw	r16,0(sp)
10015d34:	dec00404 	addi	sp,sp,16
10015d38:	f800283a 	ret
10015d3c:	81400c17 	ldw	r5,48(r16)
10015d40:	283fe826 	beq	r5,zero,10015ce4 <__srefill_r+0x80>
10015d44:	80801004 	addi	r2,r16,64
10015d48:	28800226 	beq	r5,r2,10015d54 <__srefill_r+0xf0>
10015d4c:	8809883a 	mov	r4,r17
10015d50:	001aba80 	call	1001aba8 <_free_r>
10015d54:	80800f17 	ldw	r2,60(r16)
10015d58:	80000c15 	stw	zero,48(r16)
10015d5c:	80800115 	stw	r2,4(r16)
10015d60:	103fe026 	beq	r2,zero,10015ce4 <__srefill_r+0x80>
10015d64:	80c00e17 	ldw	r3,56(r16)
10015d68:	0005883a 	mov	r2,zero
10015d6c:	80c00015 	stw	r3,0(r16)
10015d70:	003fec06 	br	10015d24 <__srefill_r+0xc0>
10015d74:	001a9a00 	call	1001a9a0 <__sinit>
10015d78:	003fc406 	br	10015c8c <__srefill_r+0x28>
10015d7c:	008400f4 	movhi	r2,4099
10015d80:	11211617 	ldw	r4,-31656(r2)
10015d84:	01440074 	movhi	r5,4097
10015d88:	00800044 	movi	r2,1
10015d8c:	8080030d 	sth	r2,12(r16)
10015d90:	29571204 	addi	r5,r5,23624
10015d94:	001b3680 	call	1001b368 <_fwalk>
10015d98:	9080024c 	andi	r2,r18,9
10015d9c:	8480030d 	sth	r18,12(r16)
10015da0:	10800258 	cmpnei	r2,r2,9
10015da4:	103fd41e 	bne	r2,zero,10015cf8 <__srefill_r+0x94>
10015da8:	800b883a 	mov	r5,r16
10015dac:	8809883a 	mov	r4,r17
10015db0:	001a3f40 	call	1001a3f4 <__sflush_r>
10015db4:	003fd006 	br	10015cf8 <__srefill_r+0x94>
10015db8:	800b883a 	mov	r5,r16
10015dbc:	8809883a 	mov	r4,r17
10015dc0:	001a61c0 	call	1001a61c <_fflush_r>
10015dc4:	10000c1e 	bne	r2,zero,10015df8 <__srefill_r+0x194>
10015dc8:	80c0030b 	ldhu	r3,12(r16)
10015dcc:	80000215 	stw	zero,8(r16)
10015dd0:	80000615 	stw	zero,24(r16)
10015dd4:	18fffdcc 	andi	r3,r3,65527
10015dd8:	003fc006 	br	10015cdc <__srefill_r+0x78>
10015ddc:	800b883a 	mov	r5,r16
10015de0:	8809883a 	mov	r4,r17
10015de4:	0014c2c0 	call	10014c2c <__smakebuf_r>
10015de8:	003fc006 	br	10015cec <__srefill_r+0x88>
10015dec:	10801014 	ori	r2,r2,64
10015df0:	80000115 	stw	zero,4(r16)
10015df4:	8080030d 	sth	r2,12(r16)
10015df8:	00bfffc4 	movi	r2,-1
10015dfc:	003fc906 	br	10015d24 <__srefill_r+0xc0>
10015e00:	8080030b 	ldhu	r2,12(r16)
10015e04:	183ff91e 	bne	r3,zero,10015dec <__srefill_r+0x188>
10015e08:	10800814 	ori	r2,r2,32
10015e0c:	8080030d 	sth	r2,12(r16)
10015e10:	00bfffc4 	movi	r2,-1
10015e14:	003fc306 	br	10015d24 <__srefill_r+0xc0>
10015e18:	00800244 	movi	r2,9
10015e1c:	88800015 	stw	r2,0(r17)
10015e20:	18c01014 	ori	r3,r3,64
10015e24:	80c0030d 	sth	r3,12(r16)
10015e28:	00bfffc4 	movi	r2,-1
10015e2c:	003fbd06 	br	10015d24 <__srefill_r+0xc0>

10015e30 <_sbrk_r>:
10015e30:	defffe04 	addi	sp,sp,-8
10015e34:	dc000015 	stw	r16,0(sp)
10015e38:	008400f4 	movhi	r2,4099
10015e3c:	2021883a 	mov	r16,r4
10015e40:	2809883a 	mov	r4,r5
10015e44:	dfc00115 	stw	ra,4(sp)
10015e48:	102a6815 	stw	zero,-22112(r2)
10015e4c:	00226980 	call	10022698 <sbrk>
10015e50:	10ffffd8 	cmpnei	r3,r2,-1
10015e54:	18000426 	beq	r3,zero,10015e68 <_sbrk_r+0x38>
10015e58:	dfc00117 	ldw	ra,4(sp)
10015e5c:	dc000017 	ldw	r16,0(sp)
10015e60:	dec00204 	addi	sp,sp,8
10015e64:	f800283a 	ret
10015e68:	00c400f4 	movhi	r3,4099
10015e6c:	18ea6817 	ldw	r3,-22112(r3)
10015e70:	183ff926 	beq	r3,zero,10015e58 <_sbrk_r+0x28>
10015e74:	80c00015 	stw	r3,0(r16)
10015e78:	dfc00117 	ldw	ra,4(sp)
10015e7c:	dc000017 	ldw	r16,0(sp)
10015e80:	dec00204 	addi	sp,sp,8
10015e84:	f800283a 	ret

10015e88 <_init_signal_r.part.0>:
10015e88:	defffe04 	addi	sp,sp,-8
10015e8c:	01402004 	movi	r5,128
10015e90:	dc000015 	stw	r16,0(sp)
10015e94:	dfc00115 	stw	ra,4(sp)
10015e98:	2021883a 	mov	r16,r4
10015e9c:	0014d880 	call	10014d88 <_malloc_r>
10015ea0:	8080b715 	stw	r2,732(r16)
10015ea4:	10000926 	beq	r2,zero,10015ecc <_init_signal_r.part.0+0x44>
10015ea8:	10c02004 	addi	r3,r2,128
10015eac:	10000015 	stw	zero,0(r2)
10015eb0:	10800104 	addi	r2,r2,4
10015eb4:	10fffd1e 	bne	r2,r3,10015eac <_init_signal_r.part.0+0x24>
10015eb8:	0005883a 	mov	r2,zero
10015ebc:	dfc00117 	ldw	ra,4(sp)
10015ec0:	dc000017 	ldw	r16,0(sp)
10015ec4:	dec00204 	addi	sp,sp,8
10015ec8:	f800283a 	ret
10015ecc:	00bfffc4 	movi	r2,-1
10015ed0:	003ffa06 	br	10015ebc <_init_signal_r.part.0+0x34>

10015ed4 <_init_signal_r>:
10015ed4:	2080b717 	ldw	r2,732(r4)
10015ed8:	10000226 	beq	r2,zero,10015ee4 <_init_signal_r+0x10>
10015edc:	0005883a 	mov	r2,zero
10015ee0:	f800283a 	ret
10015ee4:	0015e881 	jmpi	10015e88 <_init_signal_r.part.0>

10015ee8 <_signal_r>:
10015ee8:	defffc04 	addi	sp,sp,-16
10015eec:	dc000215 	stw	r16,8(sp)
10015ef0:	dfc00315 	stw	ra,12(sp)
10015ef4:	28c00830 	cmpltui	r3,r5,32
10015ef8:	2021883a 	mov	r16,r4
10015efc:	18000a26 	beq	r3,zero,10015f28 <_signal_r+0x40>
10015f00:	2080b717 	ldw	r2,732(r4)
10015f04:	10000f26 	beq	r2,zero,10015f44 <_signal_r+0x5c>
10015f08:	280a90ba 	slli	r5,r5,2
10015f0c:	114b883a 	add	r5,r2,r5
10015f10:	28800017 	ldw	r2,0(r5)
10015f14:	29800015 	stw	r6,0(r5)
10015f18:	dfc00317 	ldw	ra,12(sp)
10015f1c:	dc000217 	ldw	r16,8(sp)
10015f20:	dec00404 	addi	sp,sp,16
10015f24:	f800283a 	ret
10015f28:	00c00584 	movi	r3,22
10015f2c:	00bfffc4 	movi	r2,-1
10015f30:	20c00015 	stw	r3,0(r4)
10015f34:	dfc00317 	ldw	ra,12(sp)
10015f38:	dc000217 	ldw	r16,8(sp)
10015f3c:	dec00404 	addi	sp,sp,16
10015f40:	f800283a 	ret
10015f44:	d9800115 	stw	r6,4(sp)
10015f48:	d9400015 	stw	r5,0(sp)
10015f4c:	0015e880 	call	10015e88 <_init_signal_r.part.0>
10015f50:	1000041e 	bne	r2,zero,10015f64 <_signal_r+0x7c>
10015f54:	8080b717 	ldw	r2,732(r16)
10015f58:	d9800117 	ldw	r6,4(sp)
10015f5c:	d9400017 	ldw	r5,0(sp)
10015f60:	003fe906 	br	10015f08 <_signal_r+0x20>
10015f64:	00bfffc4 	movi	r2,-1
10015f68:	003feb06 	br	10015f18 <_signal_r+0x30>

10015f6c <_raise_r>:
10015f6c:	28800830 	cmpltui	r2,r5,32
10015f70:	10002926 	beq	r2,zero,10016018 <_raise_r+0xac>
10015f74:	2080b717 	ldw	r2,732(r4)
10015f78:	defffd04 	addi	sp,sp,-12
10015f7c:	dc400115 	stw	r17,4(sp)
10015f80:	dc000015 	stw	r16,0(sp)
10015f84:	dfc00215 	stw	ra,8(sp)
10015f88:	2021883a 	mov	r16,r4
10015f8c:	2823883a 	mov	r17,r5
10015f90:	10001126 	beq	r2,zero,10015fd8 <_raise_r+0x6c>
10015f94:	280690ba 	slli	r3,r5,2
10015f98:	10c5883a 	add	r2,r2,r3
10015f9c:	10c00017 	ldw	r3,0(r2)
10015fa0:	18000d26 	beq	r3,zero,10015fd8 <_raise_r+0x6c>
10015fa4:	19000060 	cmpeqi	r4,r3,1
10015fa8:	2000191e 	bne	r4,zero,10016010 <_raise_r+0xa4>
10015fac:	193fffd8 	cmpnei	r4,r3,-1
10015fb0:	20001326 	beq	r4,zero,10016000 <_raise_r+0x94>
10015fb4:	10000015 	stw	zero,0(r2)
10015fb8:	2809883a 	mov	r4,r5
10015fbc:	183ee83a 	callr	r3
10015fc0:	0005883a 	mov	r2,zero
10015fc4:	dfc00217 	ldw	ra,8(sp)
10015fc8:	dc400117 	ldw	r17,4(sp)
10015fcc:	dc000017 	ldw	r16,0(sp)
10015fd0:	dec00304 	addi	sp,sp,12
10015fd4:	f800283a 	ret
10015fd8:	8009883a 	mov	r4,r16
10015fdc:	00161900 	call	10016190 <_getpid_r>
10015fe0:	880d883a 	mov	r6,r17
10015fe4:	100b883a 	mov	r5,r2
10015fe8:	8009883a 	mov	r4,r16
10015fec:	dfc00217 	ldw	ra,8(sp)
10015ff0:	dc400117 	ldw	r17,4(sp)
10015ff4:	dc000017 	ldw	r16,0(sp)
10015ff8:	dec00304 	addi	sp,sp,12
10015ffc:	00161301 	jmpi	10016130 <_kill_r>
10016000:	00800584 	movi	r2,22
10016004:	80800015 	stw	r2,0(r16)
10016008:	00800044 	movi	r2,1
1001600c:	003fed06 	br	10015fc4 <_raise_r+0x58>
10016010:	0005883a 	mov	r2,zero
10016014:	003feb06 	br	10015fc4 <_raise_r+0x58>
10016018:	00800584 	movi	r2,22
1001601c:	20800015 	stw	r2,0(r4)
10016020:	00bfffc4 	movi	r2,-1
10016024:	f800283a 	ret

10016028 <__sigtramp_r>:
10016028:	28800830 	cmpltui	r2,r5,32
1001602c:	10002a26 	beq	r2,zero,100160d8 <__sigtramp_r+0xb0>
10016030:	2080b717 	ldw	r2,732(r4)
10016034:	defffd04 	addi	sp,sp,-12
10016038:	dc000115 	stw	r16,4(sp)
1001603c:	dfc00215 	stw	ra,8(sp)
10016040:	2021883a 	mov	r16,r4
10016044:	10001526 	beq	r2,zero,1001609c <__sigtramp_r+0x74>
10016048:	280690ba 	slli	r3,r5,2
1001604c:	10c5883a 	add	r2,r2,r3
10016050:	10c00017 	ldw	r3,0(r2)
10016054:	18000c26 	beq	r3,zero,10016088 <__sigtramp_r+0x60>
10016058:	193fffe0 	cmpeqi	r4,r3,-1
1001605c:	20001a1e 	bne	r4,zero,100160c8 <__sigtramp_r+0xa0>
10016060:	19000060 	cmpeqi	r4,r3,1
10016064:	2000131e 	bne	r4,zero,100160b4 <__sigtramp_r+0x8c>
10016068:	10000015 	stw	zero,0(r2)
1001606c:	2809883a 	mov	r4,r5
10016070:	183ee83a 	callr	r3
10016074:	0005883a 	mov	r2,zero
10016078:	dfc00217 	ldw	ra,8(sp)
1001607c:	dc000117 	ldw	r16,4(sp)
10016080:	dec00304 	addi	sp,sp,12
10016084:	f800283a 	ret
10016088:	00800044 	movi	r2,1
1001608c:	dfc00217 	ldw	ra,8(sp)
10016090:	dc000117 	ldw	r16,4(sp)
10016094:	dec00304 	addi	sp,sp,12
10016098:	f800283a 	ret
1001609c:	d9400015 	stw	r5,0(sp)
100160a0:	0015e880 	call	10015e88 <_init_signal_r.part.0>
100160a4:	10000a1e 	bne	r2,zero,100160d0 <__sigtramp_r+0xa8>
100160a8:	8080b717 	ldw	r2,732(r16)
100160ac:	d9400017 	ldw	r5,0(sp)
100160b0:	003fe506 	br	10016048 <__sigtramp_r+0x20>
100160b4:	008000c4 	movi	r2,3
100160b8:	dfc00217 	ldw	ra,8(sp)
100160bc:	dc000117 	ldw	r16,4(sp)
100160c0:	dec00304 	addi	sp,sp,12
100160c4:	f800283a 	ret
100160c8:	00800084 	movi	r2,2
100160cc:	003fea06 	br	10016078 <__sigtramp_r+0x50>
100160d0:	00bfffc4 	movi	r2,-1
100160d4:	003fe806 	br	10016078 <__sigtramp_r+0x50>
100160d8:	00bfffc4 	movi	r2,-1
100160dc:	f800283a 	ret

100160e0 <raise>:
100160e0:	008400f4 	movhi	r2,4099
100160e4:	200b883a 	mov	r5,r4
100160e8:	11211717 	ldw	r4,-31652(r2)
100160ec:	0015f6c1 	jmpi	10015f6c <_raise_r>

100160f0 <signal>:
100160f0:	008400f4 	movhi	r2,4099
100160f4:	280d883a 	mov	r6,r5
100160f8:	200b883a 	mov	r5,r4
100160fc:	11211717 	ldw	r4,-31652(r2)
10016100:	0015ee81 	jmpi	10015ee8 <_signal_r>

10016104 <_init_signal>:
10016104:	008400f4 	movhi	r2,4099
10016108:	11211717 	ldw	r4,-31652(r2)
1001610c:	2080b717 	ldw	r2,732(r4)
10016110:	10000226 	beq	r2,zero,1001611c <_init_signal+0x18>
10016114:	0005883a 	mov	r2,zero
10016118:	f800283a 	ret
1001611c:	0015e881 	jmpi	10015e88 <_init_signal_r.part.0>

10016120 <__sigtramp>:
10016120:	008400f4 	movhi	r2,4099
10016124:	200b883a 	mov	r5,r4
10016128:	11211717 	ldw	r4,-31652(r2)
1001612c:	00160281 	jmpi	10016028 <__sigtramp_r>

10016130 <_kill_r>:
10016130:	defffe04 	addi	sp,sp,-8
10016134:	2805883a 	mov	r2,r5
10016138:	dc000015 	stw	r16,0(sp)
1001613c:	300b883a 	mov	r5,r6
10016140:	2021883a 	mov	r16,r4
10016144:	1009883a 	mov	r4,r2
10016148:	008400f4 	movhi	r2,4099
1001614c:	dfc00115 	stw	ra,4(sp)
10016150:	102a6815 	stw	zero,-22112(r2)
10016154:	0021ed40 	call	10021ed4 <kill>
10016158:	10ffffd8 	cmpnei	r3,r2,-1
1001615c:	18000426 	beq	r3,zero,10016170 <_kill_r+0x40>
10016160:	dfc00117 	ldw	ra,4(sp)
10016164:	dc000017 	ldw	r16,0(sp)
10016168:	dec00204 	addi	sp,sp,8
1001616c:	f800283a 	ret
10016170:	00c400f4 	movhi	r3,4099
10016174:	18ea6817 	ldw	r3,-22112(r3)
10016178:	183ff926 	beq	r3,zero,10016160 <_kill_r+0x30>
1001617c:	80c00015 	stw	r3,0(r16)
10016180:	dfc00117 	ldw	ra,4(sp)
10016184:	dc000017 	ldw	r16,0(sp)
10016188:	dec00204 	addi	sp,sp,8
1001618c:	f800283a 	ret

10016190 <_getpid_r>:
10016190:	0021d981 	jmpi	10021d98 <getpid>

10016194 <__sread>:
10016194:	defffe04 	addi	sp,sp,-8
10016198:	dc000015 	stw	r16,0(sp)
1001619c:	2821883a 	mov	r16,r5
100161a0:	2940038f 	ldh	r5,14(r5)
100161a4:	dfc00115 	stw	ra,4(sp)
100161a8:	001c6840 	call	1001c684 <_read_r>
100161ac:	10000716 	blt	r2,zero,100161cc <__sread+0x38>
100161b0:	80c01417 	ldw	r3,80(r16)
100161b4:	1887883a 	add	r3,r3,r2
100161b8:	80c01415 	stw	r3,80(r16)
100161bc:	dfc00117 	ldw	ra,4(sp)
100161c0:	dc000017 	ldw	r16,0(sp)
100161c4:	dec00204 	addi	sp,sp,8
100161c8:	f800283a 	ret
100161cc:	80c0030b 	ldhu	r3,12(r16)
100161d0:	18fbffcc 	andi	r3,r3,61439
100161d4:	80c0030d 	sth	r3,12(r16)
100161d8:	dfc00117 	ldw	ra,4(sp)
100161dc:	dc000017 	ldw	r16,0(sp)
100161e0:	dec00204 	addi	sp,sp,8
100161e4:	f800283a 	ret

100161e8 <__seofread>:
100161e8:	0005883a 	mov	r2,zero
100161ec:	f800283a 	ret

100161f0 <__swrite>:
100161f0:	2880030b 	ldhu	r2,12(r5)
100161f4:	defffb04 	addi	sp,sp,-20
100161f8:	dcc00315 	stw	r19,12(sp)
100161fc:	dc800215 	stw	r18,8(sp)
10016200:	dc400115 	stw	r17,4(sp)
10016204:	dc000015 	stw	r16,0(sp)
10016208:	dfc00415 	stw	ra,16(sp)
1001620c:	10c0400c 	andi	r3,r2,256
10016210:	2821883a 	mov	r16,r5
10016214:	2023883a 	mov	r17,r4
10016218:	3025883a 	mov	r18,r6
1001621c:	3827883a 	mov	r19,r7
10016220:	2940038f 	ldh	r5,14(r5)
10016224:	18000c1e 	bne	r3,zero,10016258 <__swrite+0x68>
10016228:	10bbffcc 	andi	r2,r2,61439
1001622c:	980f883a 	mov	r7,r19
10016230:	900d883a 	mov	r6,r18
10016234:	8809883a 	mov	r4,r17
10016238:	8080030d 	sth	r2,12(r16)
1001623c:	dfc00417 	ldw	ra,16(sp)
10016240:	dcc00317 	ldw	r19,12(sp)
10016244:	dc800217 	ldw	r18,8(sp)
10016248:	dc400117 	ldw	r17,4(sp)
1001624c:	dc000017 	ldw	r16,0(sp)
10016250:	dec00504 	addi	sp,sp,20
10016254:	00189001 	jmpi	10018900 <_write_r>
10016258:	01c00084 	movi	r7,2
1001625c:	000d883a 	mov	r6,zero
10016260:	001b5380 	call	1001b538 <_lseek_r>
10016264:	8080030b 	ldhu	r2,12(r16)
10016268:	8140038f 	ldh	r5,14(r16)
1001626c:	003fee06 	br	10016228 <__swrite+0x38>

10016270 <__sseek>:
10016270:	defffe04 	addi	sp,sp,-8
10016274:	dc000015 	stw	r16,0(sp)
10016278:	2821883a 	mov	r16,r5
1001627c:	2940038f 	ldh	r5,14(r5)
10016280:	dfc00115 	stw	ra,4(sp)
10016284:	001b5380 	call	1001b538 <_lseek_r>
10016288:	10ffffd8 	cmpnei	r3,r2,-1
1001628c:	18000826 	beq	r3,zero,100162b0 <__sseek+0x40>
10016290:	80c0030b 	ldhu	r3,12(r16)
10016294:	80801415 	stw	r2,80(r16)
10016298:	18c40014 	ori	r3,r3,4096
1001629c:	80c0030d 	sth	r3,12(r16)
100162a0:	dfc00117 	ldw	ra,4(sp)
100162a4:	dc000017 	ldw	r16,0(sp)
100162a8:	dec00204 	addi	sp,sp,8
100162ac:	f800283a 	ret
100162b0:	80c0030b 	ldhu	r3,12(r16)
100162b4:	18fbffcc 	andi	r3,r3,61439
100162b8:	80c0030d 	sth	r3,12(r16)
100162bc:	dfc00117 	ldw	ra,4(sp)
100162c0:	dc000017 	ldw	r16,0(sp)
100162c4:	dec00204 	addi	sp,sp,8
100162c8:	f800283a 	ret

100162cc <__sclose>:
100162cc:	2940038f 	ldh	r5,14(r5)
100162d0:	0018ac41 	jmpi	10018ac4 <_close_r>

100162d4 <strcmp>:
100162d4:	2144b03a 	or	r2,r4,r5
100162d8:	108000cc 	andi	r2,r2,3
100162dc:	1000171e 	bne	r2,zero,1001633c <strcmp+0x68>
100162e0:	20800017 	ldw	r2,0(r4)
100162e4:	28c00017 	ldw	r3,0(r5)
100162e8:	10c0141e 	bne	r2,r3,1001633c <strcmp+0x68>
100162ec:	027fbff4 	movhi	r9,65279
100162f0:	4a7fbfc4 	addi	r9,r9,-257
100162f4:	1247883a 	add	r3,r2,r9
100162f8:	02202074 	movhi	r8,32897
100162fc:	0084303a 	nor	r2,zero,r2
10016300:	1884703a 	and	r2,r3,r2
10016304:	42202004 	addi	r8,r8,-32640
10016308:	1204703a 	and	r2,r2,r8
1001630c:	10000226 	beq	r2,zero,10016318 <strcmp+0x44>
10016310:	00002406 	br	100163a4 <strcmp+0xd0>
10016314:	1000231e 	bne	r2,zero,100163a4 <strcmp+0xd0>
10016318:	21000104 	addi	r4,r4,4
1001631c:	20c00017 	ldw	r3,0(r4)
10016320:	29400104 	addi	r5,r5,4
10016324:	29800017 	ldw	r6,0(r5)
10016328:	1a45883a 	add	r2,r3,r9
1001632c:	00ce303a 	nor	r7,zero,r3
10016330:	11c4703a 	and	r2,r2,r7
10016334:	1204703a 	and	r2,r2,r8
10016338:	19bff626 	beq	r3,r6,10016314 <strcmp+0x40>
1001633c:	20800003 	ldbu	r2,0(r4)
10016340:	10c03fcc 	andi	r3,r2,255
10016344:	18c0201c 	xori	r3,r3,128
10016348:	18ffe004 	addi	r3,r3,-128
1001634c:	18000d26 	beq	r3,zero,10016384 <strcmp+0xb0>
10016350:	29800007 	ldb	r6,0(r5)
10016354:	10803fcc 	andi	r2,r2,255
10016358:	19800326 	beq	r3,r6,10016368 <strcmp+0x94>
1001635c:	00000a06 	br	10016388 <strcmp+0xb4>
10016360:	29800007 	ldb	r6,0(r5)
10016364:	11800b1e 	bne	r2,r6,10016394 <strcmp+0xc0>
10016368:	21000044 	addi	r4,r4,1
1001636c:	20c00003 	ldbu	r3,0(r4)
10016370:	29400044 	addi	r5,r5,1
10016374:	18803fcc 	andi	r2,r3,255
10016378:	1080201c 	xori	r2,r2,128
1001637c:	10bfe004 	addi	r2,r2,-128
10016380:	103ff71e 	bne	r2,zero,10016360 <strcmp+0x8c>
10016384:	0005883a 	mov	r2,zero
10016388:	28c00003 	ldbu	r3,0(r5)
1001638c:	10c5c83a 	sub	r2,r2,r3
10016390:	f800283a 	ret
10016394:	18803fcc 	andi	r2,r3,255
10016398:	28c00003 	ldbu	r3,0(r5)
1001639c:	10c5c83a 	sub	r2,r2,r3
100163a0:	f800283a 	ret
100163a4:	0005883a 	mov	r2,zero
100163a8:	f800283a 	ret

100163ac <strlen>:
100163ac:	208000cc 	andi	r2,r4,3
100163b0:	10002026 	beq	r2,zero,10016434 <strlen+0x88>
100163b4:	20800007 	ldb	r2,0(r4)
100163b8:	10002026 	beq	r2,zero,1001643c <strlen+0x90>
100163bc:	2005883a 	mov	r2,r4
100163c0:	00000206 	br	100163cc <strlen+0x20>
100163c4:	10c00007 	ldb	r3,0(r2)
100163c8:	18001826 	beq	r3,zero,1001642c <strlen+0x80>
100163cc:	10800044 	addi	r2,r2,1
100163d0:	10c000cc 	andi	r3,r2,3
100163d4:	183ffb1e 	bne	r3,zero,100163c4 <strlen+0x18>
100163d8:	11400017 	ldw	r5,0(r2)
100163dc:	01ffbff4 	movhi	r7,65279
100163e0:	39ffbfc4 	addi	r7,r7,-257
100163e4:	29c7883a 	add	r3,r5,r7
100163e8:	01a02074 	movhi	r6,32897
100163ec:	014a303a 	nor	r5,zero,r5
100163f0:	1946703a 	and	r3,r3,r5
100163f4:	31a02004 	addi	r6,r6,-32640
100163f8:	1986703a 	and	r3,r3,r6
100163fc:	1800091e 	bne	r3,zero,10016424 <strlen+0x78>
10016400:	10800104 	addi	r2,r2,4
10016404:	11400017 	ldw	r5,0(r2)
10016408:	29c7883a 	add	r3,r5,r7
1001640c:	014a303a 	nor	r5,zero,r5
10016410:	1946703a 	and	r3,r3,r5
10016414:	1986703a 	and	r3,r3,r6
10016418:	183ff926 	beq	r3,zero,10016400 <strlen+0x54>
1001641c:	00000106 	br	10016424 <strlen+0x78>
10016420:	10800044 	addi	r2,r2,1
10016424:	10c00007 	ldb	r3,0(r2)
10016428:	183ffd1e 	bne	r3,zero,10016420 <strlen+0x74>
1001642c:	1105c83a 	sub	r2,r2,r4
10016430:	f800283a 	ret
10016434:	2005883a 	mov	r2,r4
10016438:	003fe706 	br	100163d8 <strlen+0x2c>
1001643c:	0005883a 	mov	r2,zero
10016440:	f800283a 	ret

10016444 <_strtoul_l.isra.0>:
10016444:	defff704 	addi	sp,sp,-36
10016448:	dd000515 	stw	r20,20(sp)
1001644c:	dcc00415 	stw	r19,16(sp)
10016450:	dc800315 	stw	r18,12(sp)
10016454:	2029883a 	mov	r20,r4
10016458:	dfc00815 	stw	ra,32(sp)
1001645c:	dd800715 	stw	r22,28(sp)
10016460:	dd400615 	stw	r21,24(sp)
10016464:	dc400215 	stw	r17,8(sp)
10016468:	dc000115 	stw	r16,4(sp)
1001646c:	2827883a 	mov	r19,r5
10016470:	3825883a 	mov	r18,r7
10016474:	2809883a 	mov	r4,r5
10016478:	00000106 	br	10016480 <_strtoul_l.isra.0+0x3c>
1001647c:	8009883a 	mov	r4,r16
10016480:	24000044 	addi	r16,r4,1
10016484:	80ffffc3 	ldbu	r3,-1(r16)
10016488:	008400b4 	movhi	r2,4098
1001648c:	1885883a 	add	r2,r3,r2
10016490:	10969ec3 	ldbu	r2,23163(r2)
10016494:	1080020c 	andi	r2,r2,8
10016498:	103ff81e 	bne	r2,zero,1001647c <_strtoul_l.isra.0+0x38>
1001649c:	18800b58 	cmpnei	r2,r3,45
100164a0:	10004f26 	beq	r2,zero,100165e0 <_strtoul_l.isra.0+0x19c>
100164a4:	18800ae0 	cmpeqi	r2,r3,43
100164a8:	1000231e 	bne	r2,zero,10016538 <_strtoul_l.isra.0+0xf4>
100164ac:	1823883a 	mov	r17,r3
100164b0:	002d883a 	mov	r22,zero
100164b4:	90002426 	beq	r18,zero,10016548 <_strtoul_l.isra.0+0x104>
100164b8:	90800420 	cmpeqi	r2,r18,16
100164bc:	10004c1e 	bne	r2,zero,100165f0 <_strtoul_l.isra.0+0x1ac>
100164c0:	013fffc4 	movi	r4,-1
100164c4:	900b883a 	mov	r5,r18
100164c8:	d9800015 	stw	r6,0(sp)
100164cc:	0013fa40 	call	10013fa4 <__udivsi3>
100164d0:	900b883a 	mov	r5,r18
100164d4:	013fffc4 	movi	r4,-1
100164d8:	102b883a 	mov	r21,r2
100164dc:	00140080 	call	10014008 <__umodsi3>
100164e0:	d9800017 	ldw	r6,0(sp)
100164e4:	1011883a 	mov	r8,r2
100164e8:	900f883a 	mov	r7,r18
100164ec:	0009883a 	mov	r4,zero
100164f0:	0005883a 	mov	r2,zero
100164f4:	88fff404 	addi	r3,r17,-48
100164f8:	194002a8 	cmpgeui	r5,r3,10
100164fc:	28000426 	beq	r5,zero,10016510 <_strtoul_l.isra.0+0xcc>
10016500:	88ffefc4 	addi	r3,r17,-65
10016504:	18c006a8 	cmpgeui	r3,r3,26
10016508:	18001a1e 	bne	r3,zero,10016574 <_strtoul_l.isra.0+0x130>
1001650c:	88fff244 	addi	r3,r17,-55
10016510:	1c801d0e 	bge	r3,r18,10016588 <_strtoul_l.isra.0+0x144>
10016514:	20001516 	blt	r4,zero,1001656c <_strtoul_l.isra.0+0x128>
10016518:	a8801436 	bltu	r21,r2,1001656c <_strtoul_l.isra.0+0x128>
1001651c:	15401226 	beq	r2,r21,10016568 <_strtoul_l.isra.0+0x124>
10016520:	3885383a 	mul	r2,r7,r2
10016524:	01000044 	movi	r4,1
10016528:	1885883a 	add	r2,r3,r2
1001652c:	84000044 	addi	r16,r16,1
10016530:	847fffc3 	ldbu	r17,-1(r16)
10016534:	003fef06 	br	100164f4 <_strtoul_l.isra.0+0xb0>
10016538:	84400003 	ldbu	r17,0(r16)
1001653c:	002d883a 	mov	r22,zero
10016540:	24000084 	addi	r16,r4,2
10016544:	903fdc1e 	bne	r18,zero,100164b8 <_strtoul_l.isra.0+0x74>
10016548:	88800c20 	cmpeqi	r2,r17,48
1001654c:	1000361e 	bne	r2,zero,10016628 <_strtoul_l.isra.0+0x1e4>
10016550:	054666b4 	movhi	r21,6554
10016554:	02000144 	movi	r8,5
10016558:	ad666644 	addi	r21,r21,-26215
1001655c:	01c00284 	movi	r7,10
10016560:	04800284 	movi	r18,10
10016564:	003fe106 	br	100164ec <_strtoul_l.isra.0+0xa8>
10016568:	40ffed0e 	bge	r8,r3,10016520 <_strtoul_l.isra.0+0xdc>
1001656c:	013fffc4 	movi	r4,-1
10016570:	003fee06 	br	1001652c <_strtoul_l.isra.0+0xe8>
10016574:	88ffe7c4 	addi	r3,r17,-97
10016578:	18c006a8 	cmpgeui	r3,r3,26
1001657c:	1800021e 	bne	r3,zero,10016588 <_strtoul_l.isra.0+0x144>
10016580:	88ffea44 	addi	r3,r17,-87
10016584:	1cbfe316 	blt	r3,r18,10016514 <_strtoul_l.isra.0+0xd0>
10016588:	20000f16 	blt	r4,zero,100165c8 <_strtoul_l.isra.0+0x184>
1001658c:	b0000126 	beq	r22,zero,10016594 <_strtoul_l.isra.0+0x150>
10016590:	0085c83a 	sub	r2,zero,r2
10016594:	30000226 	beq	r6,zero,100165a0 <_strtoul_l.isra.0+0x15c>
10016598:	20000f1e 	bne	r4,zero,100165d8 <_strtoul_l.isra.0+0x194>
1001659c:	34c00015 	stw	r19,0(r6)
100165a0:	dfc00817 	ldw	ra,32(sp)
100165a4:	dd800717 	ldw	r22,28(sp)
100165a8:	dd400617 	ldw	r21,24(sp)
100165ac:	dd000517 	ldw	r20,20(sp)
100165b0:	dcc00417 	ldw	r19,16(sp)
100165b4:	dc800317 	ldw	r18,12(sp)
100165b8:	dc400217 	ldw	r17,8(sp)
100165bc:	dc000117 	ldw	r16,4(sp)
100165c0:	dec00904 	addi	sp,sp,36
100165c4:	f800283a 	ret
100165c8:	00800884 	movi	r2,34
100165cc:	a0800015 	stw	r2,0(r20)
100165d0:	00bfffc4 	movi	r2,-1
100165d4:	303ff226 	beq	r6,zero,100165a0 <_strtoul_l.isra.0+0x15c>
100165d8:	84ffffc4 	addi	r19,r16,-1
100165dc:	003fef06 	br	1001659c <_strtoul_l.isra.0+0x158>
100165e0:	84400003 	ldbu	r17,0(r16)
100165e4:	05800044 	movi	r22,1
100165e8:	24000084 	addi	r16,r4,2
100165ec:	003fb106 	br	100164b4 <_strtoul_l.isra.0+0x70>
100165f0:	88800c18 	cmpnei	r2,r17,48
100165f4:	1000221e 	bne	r2,zero,10016680 <_strtoul_l.isra.0+0x23c>
100165f8:	80800003 	ldbu	r2,0(r16)
100165fc:	108037cc 	andi	r2,r2,223
10016600:	10801620 	cmpeqi	r2,r2,88
10016604:	10001226 	beq	r2,zero,10016650 <_strtoul_l.isra.0+0x20c>
10016608:	05440034 	movhi	r21,4096
1001660c:	84400043 	ldbu	r17,1(r16)
10016610:	020003c4 	movi	r8,15
10016614:	84000084 	addi	r16,r16,2
10016618:	ad7fffc4 	addi	r21,r21,-1
1001661c:	01c00404 	movi	r7,16
10016620:	04800404 	movi	r18,16
10016624:	003fb106 	br	100164ec <_strtoul_l.isra.0+0xa8>
10016628:	80800003 	ldbu	r2,0(r16)
1001662c:	108037cc 	andi	r2,r2,223
10016630:	10801618 	cmpnei	r2,r2,88
10016634:	103ff426 	beq	r2,zero,10016608 <_strtoul_l.isra.0+0x1c4>
10016638:	05480034 	movhi	r21,8192
1001663c:	020001c4 	movi	r8,7
10016640:	ad7fffc4 	addi	r21,r21,-1
10016644:	01c00204 	movi	r7,8
10016648:	04800204 	movi	r18,8
1001664c:	003fa706 	br	100164ec <_strtoul_l.isra.0+0xa8>
10016650:	01400404 	movi	r5,16
10016654:	013fffc4 	movi	r4,-1
10016658:	d9800015 	stw	r6,0(sp)
1001665c:	0013fa40 	call	10013fa4 <__udivsi3>
10016660:	01400404 	movi	r5,16
10016664:	013fffc4 	movi	r4,-1
10016668:	102b883a 	mov	r21,r2
1001666c:	00140080 	call	10014008 <__umodsi3>
10016670:	1011883a 	mov	r8,r2
10016674:	01c00404 	movi	r7,16
10016678:	d9800017 	ldw	r6,0(sp)
1001667c:	003f9b06 	br	100164ec <_strtoul_l.isra.0+0xa8>
10016680:	05440034 	movhi	r21,4096
10016684:	020003c4 	movi	r8,15
10016688:	ad7fffc4 	addi	r21,r21,-1
1001668c:	01c00404 	movi	r7,16
10016690:	003f9606 	br	100164ec <_strtoul_l.isra.0+0xa8>

10016694 <_strtoul_r>:
10016694:	00164441 	jmpi	10016444 <_strtoul_l.isra.0>

10016698 <strtoul_l>:
10016698:	008400f4 	movhi	r2,4099
1001669c:	300f883a 	mov	r7,r6
100166a0:	280d883a 	mov	r6,r5
100166a4:	200b883a 	mov	r5,r4
100166a8:	11211717 	ldw	r4,-31652(r2)
100166ac:	00164441 	jmpi	10016444 <_strtoul_l.isra.0>

100166b0 <strtoul>:
100166b0:	008400f4 	movhi	r2,4099
100166b4:	300f883a 	mov	r7,r6
100166b8:	280d883a 	mov	r6,r5
100166bc:	200b883a 	mov	r5,r4
100166c0:	11211717 	ldw	r4,-31652(r2)
100166c4:	00164441 	jmpi	10016444 <_strtoul_l.isra.0>

100166c8 <___vfprintf_internal_r>:
100166c8:	deffbd04 	addi	sp,sp,-268
100166cc:	dfc04215 	stw	ra,264(sp)
100166d0:	dd003d15 	stw	r20,244(sp)
100166d4:	dcc03c15 	stw	r19,240(sp)
100166d8:	dc003915 	stw	r16,228(sp)
100166dc:	d9000515 	stw	r4,20(sp)
100166e0:	2021883a 	mov	r16,r4
100166e4:	2827883a 	mov	r19,r5
100166e8:	3029883a 	mov	r20,r6
100166ec:	d9c00615 	stw	r7,24(sp)
100166f0:	df004115 	stw	fp,260(sp)
100166f4:	ddc04015 	stw	r23,256(sp)
100166f8:	dd803f15 	stw	r22,252(sp)
100166fc:	dd403e15 	stw	r21,248(sp)
10016700:	dc803b15 	stw	r18,236(sp)
10016704:	dc403a15 	stw	r17,232(sp)
10016708:	001b5200 	call	1001b520 <_localeconv_r>
1001670c:	10800017 	ldw	r2,0(r2)
10016710:	1009883a 	mov	r4,r2
10016714:	d8800d15 	stw	r2,52(sp)
10016718:	00163ac0 	call	100163ac <strlen>
1001671c:	d8800b15 	stw	r2,44(sp)
10016720:	80000226 	beq	r16,zero,1001672c <___vfprintf_internal_r+0x64>
10016724:	80800e17 	ldw	r2,56(r16)
10016728:	1002da26 	beq	r2,zero,10017294 <___vfprintf_internal_r+0xbcc>
1001672c:	9880030b 	ldhu	r2,12(r19)
10016730:	10c8000c 	andi	r3,r2,8192
10016734:	1800061e 	bne	r3,zero,10016750 <___vfprintf_internal_r+0x88>
10016738:	98c01917 	ldw	r3,100(r19)
1001673c:	0137ffc4 	movi	r4,-8193
10016740:	10880014 	ori	r2,r2,8192
10016744:	1906703a 	and	r3,r3,r4
10016748:	9880030d 	sth	r2,12(r19)
1001674c:	98c01915 	stw	r3,100(r19)
10016750:	10c0020c 	andi	r3,r2,8
10016754:	18009a26 	beq	r3,zero,100169c0 <___vfprintf_internal_r+0x2f8>
10016758:	98c00417 	ldw	r3,16(r19)
1001675c:	18009826 	beq	r3,zero,100169c0 <___vfprintf_internal_r+0x2f8>
10016760:	1080068c 	andi	r2,r2,26
10016764:	10800298 	cmpnei	r2,r2,10
10016768:	10009d26 	beq	r2,zero,100169e0 <___vfprintf_internal_r+0x318>
1001676c:	ddc02904 	addi	r23,sp,164
10016770:	ddc01c15 	stw	r23,112(sp)
10016774:	d8001e15 	stw	zero,120(sp)
10016778:	d8001d15 	stw	zero,116(sp)
1001677c:	d8000815 	stw	zero,32(sp)
10016780:	d8000915 	stw	zero,36(sp)
10016784:	d8000a15 	stw	zero,40(sp)
10016788:	b811883a 	mov	r8,r23
1001678c:	d8000c15 	stw	zero,48(sp)
10016790:	d8001115 	stw	zero,68(sp)
10016794:	d8000415 	stw	zero,16(sp)
10016798:	a02d883a 	mov	r22,r20
1001679c:	b0800007 	ldb	r2,0(r22)
100167a0:	1000a226 	beq	r2,zero,10016a2c <___vfprintf_internal_r+0x364>
100167a4:	10800960 	cmpeqi	r2,r2,37
100167a8:	10052e1e 	bne	r2,zero,10017c64 <___vfprintf_internal_r+0x159c>
100167ac:	b021883a 	mov	r16,r22
100167b0:	00000206 	br	100167bc <___vfprintf_internal_r+0xf4>
100167b4:	18009326 	beq	r3,zero,10016a04 <___vfprintf_internal_r+0x33c>
100167b8:	9021883a 	mov	r16,r18
100167bc:	80800047 	ldb	r2,1(r16)
100167c0:	84800044 	addi	r18,r16,1
100167c4:	10c00958 	cmpnei	r3,r2,37
100167c8:	103ffa1e 	bne	r2,zero,100167b4 <___vfprintf_internal_r+0xec>
100167cc:	95a3c83a 	sub	r17,r18,r22
100167d0:	88009626 	beq	r17,zero,10016a2c <___vfprintf_internal_r+0x364>
100167d4:	d8c01e17 	ldw	r3,120(sp)
100167d8:	d8801d17 	ldw	r2,116(sp)
100167dc:	45800015 	stw	r22,0(r8)
100167e0:	1c47883a 	add	r3,r3,r17
100167e4:	10800044 	addi	r2,r2,1
100167e8:	d8801d15 	stw	r2,116(sp)
100167ec:	44400115 	stw	r17,4(r8)
100167f0:	d8c01e15 	stw	r3,120(sp)
100167f4:	10800208 	cmpgei	r2,r2,8
100167f8:	1000851e 	bne	r2,zero,10016a10 <___vfprintf_internal_r+0x348>
100167fc:	42000204 	addi	r8,r8,8
10016800:	d8c00417 	ldw	r3,16(sp)
10016804:	80800047 	ldb	r2,1(r16)
10016808:	1c47883a 	add	r3,r3,r17
1001680c:	d8c00415 	stw	r3,16(sp)
10016810:	10008626 	beq	r2,zero,10016a2c <___vfprintf_internal_r+0x364>
10016814:	92800047 	ldb	r10,1(r18)
10016818:	95800044 	addi	r22,r18,1
1001681c:	d8001545 	stb	zero,85(sp)
10016820:	0009883a 	mov	r4,zero
10016824:	000b883a 	mov	r5,zero
10016828:	02ffffc4 	movi	r11,-1
1001682c:	0023883a 	mov	r17,zero
10016830:	0019883a 	mov	r12,zero
10016834:	b5800044 	addi	r22,r22,1
10016838:	5039883a 	mov	fp,r10
1001683c:	e0bff804 	addi	r2,fp,-32
10016840:	10c01668 	cmpgeui	r3,r2,89
10016844:	18009b1e 	bne	r3,zero,10016ab4 <___vfprintf_internal_r+0x3ec>
10016848:	100490ba 	slli	r2,r2,2
1001684c:	00c40074 	movhi	r3,4097
10016850:	10c7883a 	add	r3,r2,r3
10016854:	189a1717 	ldw	r2,26716(r3)
10016858:	1000683a 	jmp	r2
1001685c:	10016b84 	addi	zero,r2,1454
10016860:	10016ab4 	orhi	zero,r2,1450
10016864:	10016ab4 	orhi	zero,r2,1450
10016868:	10016b78 	rdprs	zero,r2,1453
1001686c:	10016ab4 	orhi	zero,r2,1450
10016870:	10016ab4 	orhi	zero,r2,1450
10016874:	10016ab4 	orhi	zero,r2,1450
10016878:	10016ab4 	orhi	zero,r2,1450
1001687c:	10016ab4 	orhi	zero,r2,1450
10016880:	10016ab4 	orhi	zero,r2,1450
10016884:	10016b50 	cmplti	zero,r2,1453
10016888:	10016b40 	call	110016b4 <_gp+0xfd129c>
1001688c:	10016ab4 	orhi	zero,r2,1450
10016890:	10016b28 	cmpgeui	zero,r2,1452
10016894:	10016ae4 	muli	zero,r2,1451
10016898:	10016ab4 	orhi	zero,r2,1450
1001689c:	10016ad8 	cmpnei	zero,r2,1451
100168a0:	10016a84 	addi	zero,r2,1450
100168a4:	10016a84 	addi	zero,r2,1450
100168a8:	10016a84 	addi	zero,r2,1450
100168ac:	10016a84 	addi	zero,r2,1450
100168b0:	10016a84 	addi	zero,r2,1450
100168b4:	10016a84 	addi	zero,r2,1450
100168b8:	10016a84 	addi	zero,r2,1450
100168bc:	10016a84 	addi	zero,r2,1450
100168c0:	10016a84 	addi	zero,r2,1450
100168c4:	10016ab4 	orhi	zero,r2,1450
100168c8:	10016ab4 	orhi	zero,r2,1450
100168cc:	10016ab4 	orhi	zero,r2,1450
100168d0:	10016ab4 	orhi	zero,r2,1450
100168d4:	10016ab4 	orhi	zero,r2,1450
100168d8:	10016ab4 	orhi	zero,r2,1450
100168dc:	10016ab4 	orhi	zero,r2,1450
100168e0:	10016ab4 	orhi	zero,r2,1450
100168e4:	10016ab4 	orhi	zero,r2,1450
100168e8:	10016ab4 	orhi	zero,r2,1450
100168ec:	10017098 	cmpnei	zero,r2,1474
100168f0:	10016fb8 	rdprs	zero,r2,1470
100168f4:	10016ab4 	orhi	zero,r2,1450
100168f8:	10016fb8 	rdprs	zero,r2,1470
100168fc:	10016ab4 	orhi	zero,r2,1450
10016900:	10016ab4 	orhi	zero,r2,1450
10016904:	10016ab4 	orhi	zero,r2,1450
10016908:	10016ab4 	orhi	zero,r2,1450
1001690c:	10016fac 	andhi	zero,r2,1470
10016910:	10016ab4 	orhi	zero,r2,1450
10016914:	10016ab4 	orhi	zero,r2,1450
10016918:	10016f78 	rdprs	zero,r2,1469
1001691c:	10016ab4 	orhi	zero,r2,1450
10016920:	10016ab4 	orhi	zero,r2,1450
10016924:	10016ab4 	orhi	zero,r2,1450
10016928:	10016ab4 	orhi	zero,r2,1450
1001692c:	10016ab4 	orhi	zero,r2,1450
10016930:	100171b8 	rdprs	zero,r2,1478
10016934:	10016ab4 	orhi	zero,r2,1450
10016938:	10016ab4 	orhi	zero,r2,1450
1001693c:	10017170 	cmpltui	zero,r2,1477
10016940:	10016ab4 	orhi	zero,r2,1450
10016944:	10016ab4 	orhi	zero,r2,1450
10016948:	10016ab4 	orhi	zero,r2,1450
1001694c:	10016ab4 	orhi	zero,r2,1450
10016950:	10016ab4 	orhi	zero,r2,1450
10016954:	10016ab4 	orhi	zero,r2,1450
10016958:	10016ab4 	orhi	zero,r2,1450
1001695c:	10016ab4 	orhi	zero,r2,1450
10016960:	10016ab4 	orhi	zero,r2,1450
10016964:	10016ab4 	orhi	zero,r2,1450
10016968:	10016d08 	cmpgei	zero,r2,1460
1001696c:	10016c94 	ori	zero,r2,1458
10016970:	10016fb8 	rdprs	zero,r2,1470
10016974:	10016fb8 	rdprs	zero,r2,1470
10016978:	10016fb8 	rdprs	zero,r2,1470
1001697c:	10017288 	cmpgei	zero,r2,1482
10016980:	10016c94 	ori	zero,r2,1458
10016984:	10016ab4 	orhi	zero,r2,1450
10016988:	10016ab4 	orhi	zero,r2,1450
1001698c:	10017274 	orhi	zero,r2,1481
10016990:	10016ab4 	orhi	zero,r2,1450
10016994:	10016f38 	rdprs	zero,r2,1468
10016998:	10016ef8 	rdprs	zero,r2,1467
1001699c:	100171f8 	rdprs	zero,r2,1479
100169a0:	100171ec 	andhi	zero,r2,1479
100169a4:	10016ab4 	orhi	zero,r2,1450
100169a8:	10016c38 	rdprs	zero,r2,1456
100169ac:	10016ab4 	orhi	zero,r2,1450
100169b0:	10016bf8 	rdprs	zero,r2,1455
100169b4:	10016ab4 	orhi	zero,r2,1450
100169b8:	10016ab4 	orhi	zero,r2,1450
100169bc:	10016bb0 	cmpltui	zero,r2,1454
100169c0:	d9000517 	ldw	r4,20(sp)
100169c4:	980b883a 	mov	r5,r19
100169c8:	00189640 	call	10018964 <__swsetup_r>
100169cc:	10074c1e 	bne	r2,zero,10018700 <___vfprintf_internal_r+0x2038>
100169d0:	9880030b 	ldhu	r2,12(r19)
100169d4:	1080068c 	andi	r2,r2,26
100169d8:	10800298 	cmpnei	r2,r2,10
100169dc:	103f631e 	bne	r2,zero,1001676c <___vfprintf_internal_r+0xa4>
100169e0:	9880038f 	ldh	r2,14(r19)
100169e4:	103f6116 	blt	r2,zero,1001676c <___vfprintf_internal_r+0xa4>
100169e8:	d9c00617 	ldw	r7,24(sp)
100169ec:	d9000517 	ldw	r4,20(sp)
100169f0:	a00d883a 	mov	r6,r20
100169f4:	980b883a 	mov	r5,r19
100169f8:	00188400 	call	10018840 <__sbprintf>
100169fc:	d8800415 	stw	r2,16(sp)
10016a00:	00001306 	br	10016a50 <___vfprintf_internal_r+0x388>
10016a04:	95a3c83a 	sub	r17,r18,r22
10016a08:	883f8226 	beq	r17,zero,10016814 <___vfprintf_internal_r+0x14c>
10016a0c:	003f7106 	br	100167d4 <___vfprintf_internal_r+0x10c>
10016a10:	d9000517 	ldw	r4,20(sp)
10016a14:	d9801c04 	addi	r6,sp,112
10016a18:	980b883a 	mov	r5,r19
10016a1c:	001ce080 	call	1001ce08 <__sprint_r>
10016a20:	1000081e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10016a24:	b811883a 	mov	r8,r23
10016a28:	003f7506 	br	10016800 <___vfprintf_internal_r+0x138>
10016a2c:	d8801e17 	ldw	r2,120(sp)
10016a30:	10000426 	beq	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10016a34:	d9000517 	ldw	r4,20(sp)
10016a38:	d9801c04 	addi	r6,sp,112
10016a3c:	980b883a 	mov	r5,r19
10016a40:	001ce080 	call	1001ce08 <__sprint_r>
10016a44:	9880030b 	ldhu	r2,12(r19)
10016a48:	1080100c 	andi	r2,r2,64
10016a4c:	10072c1e 	bne	r2,zero,10018700 <___vfprintf_internal_r+0x2038>
10016a50:	d8800417 	ldw	r2,16(sp)
10016a54:	dfc04217 	ldw	ra,264(sp)
10016a58:	df004117 	ldw	fp,260(sp)
10016a5c:	ddc04017 	ldw	r23,256(sp)
10016a60:	dd803f17 	ldw	r22,252(sp)
10016a64:	dd403e17 	ldw	r21,248(sp)
10016a68:	dd003d17 	ldw	r20,244(sp)
10016a6c:	dcc03c17 	ldw	r19,240(sp)
10016a70:	dc803b17 	ldw	r18,236(sp)
10016a74:	dc403a17 	ldw	r17,232(sp)
10016a78:	dc003917 	ldw	r16,228(sp)
10016a7c:	dec04304 	addi	sp,sp,268
10016a80:	f800283a 	ret
10016a84:	0023883a 	mov	r17,zero
10016a88:	e0bff404 	addi	r2,fp,-48
10016a8c:	b5800044 	addi	r22,r22,1
10016a90:	8c4002a4 	muli	r17,r17,10
10016a94:	b73fffc7 	ldb	fp,-1(r22)
10016a98:	1463883a 	add	r17,r2,r17
10016a9c:	e0bff404 	addi	r2,fp,-48
10016aa0:	10c002b0 	cmpltui	r3,r2,10
10016aa4:	183ff91e 	bne	r3,zero,10016a8c <___vfprintf_internal_r+0x3c4>
10016aa8:	e0bff804 	addi	r2,fp,-32
10016aac:	10c01668 	cmpgeui	r3,r2,89
10016ab0:	183f6526 	beq	r3,zero,10016848 <___vfprintf_internal_r+0x180>
10016ab4:	21003fcc 	andi	r4,r4,255
10016ab8:	20066d1e 	bne	r4,zero,10018470 <___vfprintf_internal_r+0x1da8>
10016abc:	e03fdb26 	beq	fp,zero,10016a2c <___vfprintf_internal_r+0x364>
10016ac0:	df001f05 	stb	fp,124(sp)
10016ac4:	d8001545 	stb	zero,85(sp)
10016ac8:	05400044 	movi	r21,1
10016acc:	05000044 	movi	r20,1
10016ad0:	dc001f04 	addi	r16,sp,124
10016ad4:	00009506 	br	10016d2c <___vfprintf_internal_r+0x664>
10016ad8:	63002014 	ori	r12,r12,128
10016adc:	b2800007 	ldb	r10,0(r22)
10016ae0:	003f5406 	br	10016834 <___vfprintf_internal_r+0x16c>
10016ae4:	b7000007 	ldb	fp,0(r22)
10016ae8:	b0c00044 	addi	r3,r22,1
10016aec:	e0800aa0 	cmpeqi	r2,fp,42
10016af0:	1007411e 	bne	r2,zero,100187f8 <___vfprintf_internal_r+0x2130>
10016af4:	e0bff404 	addi	r2,fp,-48
10016af8:	118002b0 	cmpltui	r6,r2,10
10016afc:	182d883a 	mov	r22,r3
10016b00:	0017883a 	mov	r11,zero
10016b04:	303f4d26 	beq	r6,zero,1001683c <___vfprintf_internal_r+0x174>
10016b08:	b5800044 	addi	r22,r22,1
10016b0c:	5ac002a4 	muli	r11,r11,10
10016b10:	b73fffc7 	ldb	fp,-1(r22)
10016b14:	5897883a 	add	r11,r11,r2
10016b18:	e0bff404 	addi	r2,fp,-48
10016b1c:	10c002b0 	cmpltui	r3,r2,10
10016b20:	183ff91e 	bne	r3,zero,10016b08 <___vfprintf_internal_r+0x440>
10016b24:	003f4506 	br	1001683c <___vfprintf_internal_r+0x174>
10016b28:	b7000003 	ldbu	fp,0(r22)
10016b2c:	e2803fcc 	andi	r10,fp,255
10016b30:	5280201c 	xori	r10,r10,128
10016b34:	63000114 	ori	r12,r12,4
10016b38:	52bfe004 	addi	r10,r10,-128
10016b3c:	003f3d06 	br	10016834 <___vfprintf_internal_r+0x16c>
10016b40:	01000044 	movi	r4,1
10016b44:	01400ac4 	movi	r5,43
10016b48:	b2800007 	ldb	r10,0(r22)
10016b4c:	003f3906 	br	10016834 <___vfprintf_internal_r+0x16c>
10016b50:	d8800617 	ldw	r2,24(sp)
10016b54:	b7000003 	ldbu	fp,0(r22)
10016b58:	14400017 	ldw	r17,0(r2)
10016b5c:	10800104 	addi	r2,r2,4
10016b60:	8804d716 	blt	r17,zero,10017ec0 <___vfprintf_internal_r+0x17f8>
10016b64:	d8800615 	stw	r2,24(sp)
10016b68:	e2803fcc 	andi	r10,fp,255
10016b6c:	5280201c 	xori	r10,r10,128
10016b70:	52bfe004 	addi	r10,r10,-128
10016b74:	003f2f06 	br	10016834 <___vfprintf_internal_r+0x16c>
10016b78:	63000054 	ori	r12,r12,1
10016b7c:	b2800007 	ldb	r10,0(r22)
10016b80:	003f2c06 	br	10016834 <___vfprintf_internal_r+0x16c>
10016b84:	28803fcc 	andi	r2,r5,255
10016b88:	1080201c 	xori	r2,r2,128
10016b8c:	10bfe004 	addi	r2,r2,-128
10016b90:	b7000003 	ldbu	fp,0(r22)
10016b94:	103ff41e 	bne	r2,zero,10016b68 <___vfprintf_internal_r+0x4a0>
10016b98:	e2803fcc 	andi	r10,fp,255
10016b9c:	5280201c 	xori	r10,r10,128
10016ba0:	01000044 	movi	r4,1
10016ba4:	01400804 	movi	r5,32
10016ba8:	52bfe004 	addi	r10,r10,-128
10016bac:	003f2106 	br	10016834 <___vfprintf_internal_r+0x16c>
10016bb0:	21003fcc 	andi	r4,r4,255
10016bb4:	2006b31e 	bne	r4,zero,10018684 <___vfprintf_internal_r+0x1fbc>
10016bb8:	008400b4 	movhi	r2,4098
10016bbc:	10968f04 	addi	r2,r2,23100
10016bc0:	d8800c15 	stw	r2,48(sp)
10016bc4:	6080080c 	andi	r2,r12,32
10016bc8:	10017026 	beq	r2,zero,1001718c <___vfprintf_internal_r+0xac4>
10016bcc:	d8800617 	ldw	r2,24(sp)
10016bd0:	15400017 	ldw	r21,0(r2)
10016bd4:	15000117 	ldw	r20,4(r2)
10016bd8:	10800204 	addi	r2,r2,8
10016bdc:	d8800615 	stw	r2,24(sp)
10016be0:	6080004c 	andi	r2,r12,1
10016be4:	10000226 	beq	r2,zero,10016bf0 <___vfprintf_internal_r+0x528>
10016be8:	ad04b03a 	or	r2,r21,r20
10016bec:	1004a71e 	bne	r2,zero,10017e8c <___vfprintf_internal_r+0x17c4>
10016bf0:	00800084 	movi	r2,2
10016bf4:	00018f06 	br	10017234 <___vfprintf_internal_r+0xb6c>
10016bf8:	21003fcc 	andi	r4,r4,255
10016bfc:	20069f1e 	bne	r4,zero,1001867c <___vfprintf_internal_r+0x1fb4>
10016c00:	6080080c 	andi	r2,r12,32
10016c04:	1001b41e 	bne	r2,zero,100172d8 <___vfprintf_internal_r+0xc10>
10016c08:	d8800617 	ldw	r2,24(sp)
10016c0c:	60c0040c 	andi	r3,r12,16
10016c10:	15400017 	ldw	r21,0(r2)
10016c14:	10800104 	addi	r2,r2,4
10016c18:	18016e1e 	bne	r3,zero,100171d4 <___vfprintf_internal_r+0xb0c>
10016c1c:	60c0100c 	andi	r3,r12,64
10016c20:	18059f26 	beq	r3,zero,100182a0 <___vfprintf_internal_r+0x1bd8>
10016c24:	d8800615 	stw	r2,24(sp)
10016c28:	ad7fffcc 	andi	r21,r21,65535
10016c2c:	0029883a 	mov	r20,zero
10016c30:	00800044 	movi	r2,1
10016c34:	00017f06 	br	10017234 <___vfprintf_internal_r+0xb6c>
10016c38:	d8800617 	ldw	r2,24(sp)
10016c3c:	d8001545 	stb	zero,85(sp)
10016c40:	14000017 	ldw	r16,0(r2)
10016c44:	14800104 	addi	r18,r2,4
10016c48:	8004c726 	beq	r16,zero,10017f68 <___vfprintf_internal_r+0x18a0>
10016c4c:	da000e15 	stw	r8,56(sp)
10016c50:	db000715 	stw	r12,28(sp)
10016c54:	58bfffe0 	cmpeqi	r2,r11,-1
10016c58:	1005691e 	bne	r2,zero,10018200 <___vfprintf_internal_r+0x1b38>
10016c5c:	580d883a 	mov	r6,r11
10016c60:	000b883a 	mov	r5,zero
10016c64:	8009883a 	mov	r4,r16
10016c68:	dac00615 	stw	r11,24(sp)
10016c6c:	001557c0 	call	1001557c <memchr>
10016c70:	dac00617 	ldw	r11,24(sp)
10016c74:	db000717 	ldw	r12,28(sp)
10016c78:	da000e17 	ldw	r8,56(sp)
10016c7c:	10066726 	beq	r2,zero,1001861c <___vfprintf_internal_r+0x1f54>
10016c80:	1429c83a 	sub	r20,r2,r16
10016c84:	a02b883a 	mov	r21,r20
10016c88:	a005f716 	blt	r20,zero,10018468 <___vfprintf_internal_r+0x1da0>
10016c8c:	dc800615 	stw	r18,24(sp)
10016c90:	00002606 	br	10016d2c <___vfprintf_internal_r+0x664>
10016c94:	21003fcc 	andi	r4,r4,255
10016c98:	2006761e 	bne	r4,zero,10018674 <___vfprintf_internal_r+0x1fac>
10016c9c:	6080080c 	andi	r2,r12,32
10016ca0:	10017f1e 	bne	r2,zero,100172a0 <___vfprintf_internal_r+0xbd8>
10016ca4:	d8800617 	ldw	r2,24(sp)
10016ca8:	60c0040c 	andi	r3,r12,16
10016cac:	10800104 	addi	r2,r2,4
10016cb0:	1801001e 	bne	r3,zero,100170b4 <___vfprintf_internal_r+0x9ec>
10016cb4:	60c0100c 	andi	r3,r12,64
10016cb8:	1800fe26 	beq	r3,zero,100170b4 <___vfprintf_internal_r+0x9ec>
10016cbc:	d8c00617 	ldw	r3,24(sp)
10016cc0:	d8800615 	stw	r2,24(sp)
10016cc4:	1d40000f 	ldh	r21,0(r3)
10016cc8:	a829d7fa 	srai	r20,r21,31
10016ccc:	a005883a 	mov	r2,r20
10016cd0:	1000fe16 	blt	r2,zero,100170cc <___vfprintf_internal_r+0xa04>
10016cd4:	58bfffd8 	cmpnei	r2,r11,-1
10016cd8:	db401543 	ldbu	r13,85(sp)
10016cdc:	10018526 	beq	r2,zero,100172f4 <___vfprintf_internal_r+0xc2c>
10016ce0:	00ffdfc4 	movi	r3,-129
10016ce4:	ad04b03a 	or	r2,r21,r20
10016ce8:	60d8703a 	and	r12,r12,r3
10016cec:	1001811e 	bne	r2,zero,100172f4 <___vfprintf_internal_r+0xc2c>
10016cf0:	5801831e 	bne	r11,zero,10017300 <___vfprintf_internal_r+0xc38>
10016cf4:	6025883a 	mov	r18,r12
10016cf8:	0017883a 	mov	r11,zero
10016cfc:	0029883a 	mov	r20,zero
10016d00:	b821883a 	mov	r16,r23
10016d04:	00018306 	br	10017314 <___vfprintf_internal_r+0xc4c>
10016d08:	d8c00617 	ldw	r3,24(sp)
10016d0c:	d8001545 	stb	zero,85(sp)
10016d10:	05400044 	movi	r21,1
10016d14:	18800017 	ldw	r2,0(r3)
10016d18:	18c00104 	addi	r3,r3,4
10016d1c:	d8c00615 	stw	r3,24(sp)
10016d20:	d8801f05 	stb	r2,124(sp)
10016d24:	05000044 	movi	r20,1
10016d28:	dc001f04 	addi	r16,sp,124
10016d2c:	6025883a 	mov	r18,r12
10016d30:	0017883a 	mov	r11,zero
10016d34:	d8000715 	stw	zero,28(sp)
10016d38:	9380008c 	andi	r14,r18,2
10016d3c:	70000126 	beq	r14,zero,10016d44 <___vfprintf_internal_r+0x67c>
10016d40:	ad400084 	addi	r21,r21,2
10016d44:	9340210c 	andi	r13,r18,132
10016d48:	d8c01e17 	ldw	r3,120(sp)
10016d4c:	6800021e 	bne	r13,zero,10016d58 <___vfprintf_internal_r+0x690>
10016d50:	8d4fc83a 	sub	r7,r17,r21
10016d54:	01c2ce16 	blt	zero,r7,10017890 <___vfprintf_internal_r+0x11c8>
10016d58:	d8801547 	ldb	r2,85(sp)
10016d5c:	10000c26 	beq	r2,zero,10016d90 <___vfprintf_internal_r+0x6c8>
10016d60:	d8801d17 	ldw	r2,116(sp)
10016d64:	d9001544 	addi	r4,sp,85
10016d68:	18c00044 	addi	r3,r3,1
10016d6c:	10800044 	addi	r2,r2,1
10016d70:	41000015 	stw	r4,0(r8)
10016d74:	01000044 	movi	r4,1
10016d78:	d8801d15 	stw	r2,116(sp)
10016d7c:	41000115 	stw	r4,4(r8)
10016d80:	d8c01e15 	stw	r3,120(sp)
10016d84:	10800208 	cmpgei	r2,r2,8
10016d88:	1002fb1e 	bne	r2,zero,10017978 <___vfprintf_internal_r+0x12b0>
10016d8c:	42000204 	addi	r8,r8,8
10016d90:	70000c26 	beq	r14,zero,10016dc4 <___vfprintf_internal_r+0x6fc>
10016d94:	d8801d17 	ldw	r2,116(sp)
10016d98:	d9001584 	addi	r4,sp,86
10016d9c:	18c00084 	addi	r3,r3,2
10016da0:	10800044 	addi	r2,r2,1
10016da4:	41000015 	stw	r4,0(r8)
10016da8:	01000084 	movi	r4,2
10016dac:	d8801d15 	stw	r2,116(sp)
10016db0:	41000115 	stw	r4,4(r8)
10016db4:	d8c01e15 	stw	r3,120(sp)
10016db8:	10800208 	cmpgei	r2,r2,8
10016dbc:	1002fc1e 	bne	r2,zero,100179b0 <___vfprintf_internal_r+0x12e8>
10016dc0:	42000204 	addi	r8,r8,8
10016dc4:	6b402018 	cmpnei	r13,r13,128
10016dc8:	6801cf26 	beq	r13,zero,10017508 <___vfprintf_internal_r+0xe40>
10016dcc:	5d0fc83a 	sub	r7,r11,r20
10016dd0:	01c20616 	blt	zero,r7,100175ec <___vfprintf_internal_r+0xf24>
10016dd4:	9080400c 	andi	r2,r18,256
10016dd8:	10017c1e 	bne	r2,zero,100173cc <___vfprintf_internal_r+0xd04>
10016ddc:	d8801d17 	ldw	r2,116(sp)
10016de0:	1d07883a 	add	r3,r3,r20
10016de4:	44000015 	stw	r16,0(r8)
10016de8:	10800044 	addi	r2,r2,1
10016dec:	d8801d15 	stw	r2,116(sp)
10016df0:	45000115 	stw	r20,4(r8)
10016df4:	d8c01e15 	stw	r3,120(sp)
10016df8:	10800208 	cmpgei	r2,r2,8
10016dfc:	1002571e 	bne	r2,zero,1001775c <___vfprintf_internal_r+0x1094>
10016e00:	42000204 	addi	r8,r8,8
10016e04:	9480010c 	andi	r18,r18,4
10016e08:	90000226 	beq	r18,zero,10016e14 <___vfprintf_internal_r+0x74c>
10016e0c:	8d61c83a 	sub	r16,r17,r21
10016e10:	04000916 	blt	zero,r16,10016e38 <___vfprintf_internal_r+0x770>
10016e14:	8d40010e 	bge	r17,r21,10016e1c <___vfprintf_internal_r+0x754>
10016e18:	a823883a 	mov	r17,r21
10016e1c:	d8800417 	ldw	r2,16(sp)
10016e20:	1445883a 	add	r2,r2,r17
10016e24:	d8800415 	stw	r2,16(sp)
10016e28:	1802241e 	bne	r3,zero,100176bc <___vfprintf_internal_r+0xff4>
10016e2c:	d8001d15 	stw	zero,116(sp)
10016e30:	b811883a 	mov	r8,r23
10016e34:	003e5906 	br	1001679c <___vfprintf_internal_r+0xd4>
10016e38:	030400b4 	movhi	r12,4098
10016e3c:	81000450 	cmplti	r4,r16,17
10016e40:	63169a84 	addi	r12,r12,23146
10016e44:	d8801d17 	ldw	r2,116(sp)
10016e48:	20001c1e 	bne	r4,zero,10016ebc <___vfprintf_internal_r+0x7f4>
10016e4c:	04800404 	movi	r18,16
10016e50:	dd000517 	ldw	r20,20(sp)
10016e54:	6039883a 	mov	fp,r12
10016e58:	00000406 	br	10016e6c <___vfprintf_internal_r+0x7a4>
10016e5c:	843ffc04 	addi	r16,r16,-16
10016e60:	81000448 	cmpgei	r4,r16,17
10016e64:	42000204 	addi	r8,r8,8
10016e68:	20001326 	beq	r4,zero,10016eb8 <___vfprintf_internal_r+0x7f0>
10016e6c:	10800044 	addi	r2,r2,1
10016e70:	18c00404 	addi	r3,r3,16
10016e74:	47000015 	stw	fp,0(r8)
10016e78:	44800115 	stw	r18,4(r8)
10016e7c:	d8c01e15 	stw	r3,120(sp)
10016e80:	d8801d15 	stw	r2,116(sp)
10016e84:	11000208 	cmpgei	r4,r2,8
10016e88:	203ff426 	beq	r4,zero,10016e5c <___vfprintf_internal_r+0x794>
10016e8c:	d9801c04 	addi	r6,sp,112
10016e90:	980b883a 	mov	r5,r19
10016e94:	a009883a 	mov	r4,r20
10016e98:	001ce080 	call	1001ce08 <__sprint_r>
10016e9c:	103ee91e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10016ea0:	843ffc04 	addi	r16,r16,-16
10016ea4:	81000448 	cmpgei	r4,r16,17
10016ea8:	d8c01e17 	ldw	r3,120(sp)
10016eac:	d8801d17 	ldw	r2,116(sp)
10016eb0:	b811883a 	mov	r8,r23
10016eb4:	203fed1e 	bne	r4,zero,10016e6c <___vfprintf_internal_r+0x7a4>
10016eb8:	e019883a 	mov	r12,fp
10016ebc:	10800044 	addi	r2,r2,1
10016ec0:	1c07883a 	add	r3,r3,r16
10016ec4:	d8801d15 	stw	r2,116(sp)
10016ec8:	43000015 	stw	r12,0(r8)
10016ecc:	44000115 	stw	r16,4(r8)
10016ed0:	d8c01e15 	stw	r3,120(sp)
10016ed4:	10800210 	cmplti	r2,r2,8
10016ed8:	103fce1e 	bne	r2,zero,10016e14 <___vfprintf_internal_r+0x74c>
10016edc:	d9000517 	ldw	r4,20(sp)
10016ee0:	d9801c04 	addi	r6,sp,112
10016ee4:	980b883a 	mov	r5,r19
10016ee8:	001ce080 	call	1001ce08 <__sprint_r>
10016eec:	103ed51e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10016ef0:	d8c01e17 	ldw	r3,120(sp)
10016ef4:	003fc706 	br	10016e14 <___vfprintf_internal_r+0x74c>
10016ef8:	21003fcc 	andi	r4,r4,255
10016efc:	2005d91e 	bne	r4,zero,10018664 <___vfprintf_internal_r+0x1f9c>
10016f00:	6080080c 	andi	r2,r12,32
10016f04:	1000ed1e 	bne	r2,zero,100172bc <___vfprintf_internal_r+0xbf4>
10016f08:	d8800617 	ldw	r2,24(sp)
10016f0c:	60c0040c 	andi	r3,r12,16
10016f10:	15400017 	ldw	r21,0(r2)
10016f14:	10800104 	addi	r2,r2,4
10016f18:	18001e1e 	bne	r3,zero,10016f94 <___vfprintf_internal_r+0x8cc>
10016f1c:	60c0100c 	andi	r3,r12,64
10016f20:	1804db26 	beq	r3,zero,10018290 <___vfprintf_internal_r+0x1bc8>
10016f24:	d8800615 	stw	r2,24(sp)
10016f28:	ad7fffcc 	andi	r21,r21,65535
10016f2c:	0029883a 	mov	r20,zero
10016f30:	0005883a 	mov	r2,zero
10016f34:	0000bf06 	br	10017234 <___vfprintf_internal_r+0xb6c>
10016f38:	21003fcc 	andi	r4,r4,255
10016f3c:	2005cb1e 	bne	r4,zero,1001866c <___vfprintf_internal_r+0x1fa4>
10016f40:	d9000617 	ldw	r4,24(sp)
10016f44:	6080080c 	andi	r2,r12,32
10016f48:	20c00104 	addi	r3,r4,4
10016f4c:	1003d51e 	bne	r2,zero,10017ea4 <___vfprintf_internal_r+0x17dc>
10016f50:	6080040c 	andi	r2,r12,16
10016f54:	1004301e 	bne	r2,zero,10018018 <___vfprintf_internal_r+0x1950>
10016f58:	6300100c 	andi	r12,r12,64
10016f5c:	60042e26 	beq	r12,zero,10018018 <___vfprintf_internal_r+0x1950>
10016f60:	d8800617 	ldw	r2,24(sp)
10016f64:	d8c00615 	stw	r3,24(sp)
10016f68:	d8c00417 	ldw	r3,16(sp)
10016f6c:	10800017 	ldw	r2,0(r2)
10016f70:	10c0000d 	sth	r3,0(r2)
10016f74:	003e0906 	br	1001679c <___vfprintf_internal_r+0xd4>
10016f78:	21003fcc 	andi	r4,r4,255
10016f7c:	2005c31e 	bne	r4,zero,1001868c <___vfprintf_internal_r+0x1fc4>
10016f80:	6080080c 	andi	r2,r12,32
10016f84:	63000414 	ori	r12,r12,16
10016f88:	1000cc1e 	bne	r2,zero,100172bc <___vfprintf_internal_r+0xbf4>
10016f8c:	d8800617 	ldw	r2,24(sp)
10016f90:	10800104 	addi	r2,r2,4
10016f94:	d8c00617 	ldw	r3,24(sp)
10016f98:	0029883a 	mov	r20,zero
10016f9c:	d8800615 	stw	r2,24(sp)
10016fa0:	1d400017 	ldw	r21,0(r3)
10016fa4:	0005883a 	mov	r2,zero
10016fa8:	0000a206 	br	10017234 <___vfprintf_internal_r+0xb6c>
10016fac:	63000214 	ori	r12,r12,8
10016fb0:	b2800007 	ldb	r10,0(r22)
10016fb4:	003e1f06 	br	10016834 <___vfprintf_internal_r+0x16c>
10016fb8:	21003fcc 	andi	r4,r4,255
10016fbc:	2005b71e 	bne	r4,zero,1001869c <___vfprintf_internal_r+0x1fd4>
10016fc0:	d8c00617 	ldw	r3,24(sp)
10016fc4:	00a00034 	movhi	r2,32768
10016fc8:	10bfffc4 	addi	r2,r2,-1
10016fcc:	1d000117 	ldw	r20,4(r3)
10016fd0:	1c800017 	ldw	r18,0(r3)
10016fd4:	01dffc34 	movhi	r7,32752
10016fd8:	a0a0703a 	and	r16,r20,r2
10016fdc:	01bfffc4 	movi	r6,-1
10016fe0:	18800204 	addi	r2,r3,8
10016fe4:	39ffffc4 	addi	r7,r7,-1
10016fe8:	9009883a 	mov	r4,r18
10016fec:	800b883a 	mov	r5,r16
10016ff0:	da000f15 	stw	r8,60(sp)
10016ff4:	dac00e15 	stw	r11,56(sp)
10016ff8:	db000715 	stw	r12,28(sp)
10016ffc:	dd000a15 	stw	r20,40(sp)
10017000:	dc800915 	stw	r18,36(sp)
10017004:	d8800615 	stw	r2,24(sp)
10017008:	00218b40 	call	100218b4 <__unorddf2>
1001700c:	db000717 	ldw	r12,28(sp)
10017010:	dac00e17 	ldw	r11,56(sp)
10017014:	da000f17 	ldw	r8,60(sp)
10017018:	1003161e 	bne	r2,zero,10017c74 <___vfprintf_internal_r+0x15ac>
1001701c:	01dffc34 	movhi	r7,32752
10017020:	01bfffc4 	movi	r6,-1
10017024:	39ffffc4 	addi	r7,r7,-1
10017028:	9009883a 	mov	r4,r18
1001702c:	800b883a 	mov	r5,r16
10017030:	00207cc0 	call	100207cc <__ledf2>
10017034:	db000717 	ldw	r12,28(sp)
10017038:	dac00e17 	ldw	r11,56(sp)
1001703c:	da000f17 	ldw	r8,60(sp)
10017040:	00830c0e 	bge	zero,r2,10017c74 <___vfprintf_internal_r+0x15ac>
10017044:	000d883a 	mov	r6,zero
10017048:	000f883a 	mov	r7,zero
1001704c:	9009883a 	mov	r4,r18
10017050:	a00b883a 	mov	r5,r20
10017054:	da000e15 	stw	r8,56(sp)
10017058:	00207cc0 	call	100207cc <__ledf2>
1001705c:	db000717 	ldw	r12,28(sp)
10017060:	da000e17 	ldw	r8,56(sp)
10017064:	1004e216 	blt	r2,zero,100183f0 <___vfprintf_internal_r+0x1d28>
10017068:	db401543 	ldbu	r13,85(sp)
1001706c:	e0801210 	cmplti	r2,fp,72
10017070:	1004cb1e 	bne	r2,zero,100183a0 <___vfprintf_internal_r+0x1cd8>
10017074:	040400b4 	movhi	r16,4098
10017078:	84168704 	addi	r16,r16,23068
1001707c:	04bfdfc4 	movi	r18,-129
10017080:	64a4703a 	and	r18,r12,r18
10017084:	054000c4 	movi	r21,3
10017088:	050000c4 	movi	r20,3
1001708c:	0017883a 	mov	r11,zero
10017090:	d8000715 	stw	zero,28(sp)
10017094:	0000a306 	br	10017324 <___vfprintf_internal_r+0xc5c>
10017098:	21003fcc 	andi	r4,r4,255
1001709c:	20057d1e 	bne	r4,zero,10018694 <___vfprintf_internal_r+0x1fcc>
100170a0:	6080080c 	andi	r2,r12,32
100170a4:	63000414 	ori	r12,r12,16
100170a8:	10007d1e 	bne	r2,zero,100172a0 <___vfprintf_internal_r+0xbd8>
100170ac:	d8800617 	ldw	r2,24(sp)
100170b0:	10800104 	addi	r2,r2,4
100170b4:	d8c00617 	ldw	r3,24(sp)
100170b8:	1d400017 	ldw	r21,0(r3)
100170bc:	d8800615 	stw	r2,24(sp)
100170c0:	a829d7fa 	srai	r20,r21,31
100170c4:	a005883a 	mov	r2,r20
100170c8:	103f020e 	bge	r2,zero,10016cd4 <___vfprintf_internal_r+0x60c>
100170cc:	056bc83a 	sub	r21,zero,r21
100170d0:	a804c03a 	cmpne	r2,r21,zero
100170d4:	0529c83a 	sub	r20,zero,r20
100170d8:	a0a9c83a 	sub	r20,r20,r2
100170dc:	00800b44 	movi	r2,45
100170e0:	d8801545 	stb	r2,85(sp)
100170e4:	58ffffe0 	cmpeqi	r3,r11,-1
100170e8:	03400b44 	movi	r13,45
100170ec:	00800044 	movi	r2,1
100170f0:	18005426 	beq	r3,zero,10017244 <___vfprintf_internal_r+0xb7c>
100170f4:	10c00060 	cmpeqi	r3,r2,1
100170f8:	18007e1e 	bne	r3,zero,100172f4 <___vfprintf_internal_r+0xc2c>
100170fc:	108000a0 	cmpeqi	r2,r2,2
10017100:	1002371e 	bne	r2,zero,100179e0 <___vfprintf_internal_r+0x1318>
10017104:	b807883a 	mov	r3,r23
10017108:	00000106 	br	10017110 <___vfprintf_internal_r+0xa48>
1001710c:	8007883a 	mov	r3,r16
10017110:	a808d0fa 	srli	r4,r21,3
10017114:	a00a977a 	slli	r5,r20,29
10017118:	a028d0fa 	srli	r20,r20,3
1001711c:	ad4001cc 	andi	r21,r21,7
10017120:	a8800c04 	addi	r2,r21,48
10017124:	292ab03a 	or	r21,r5,r4
10017128:	18bfffc5 	stb	r2,-1(r3)
1001712c:	ad08b03a 	or	r4,r21,r20
10017130:	1c3fffc4 	addi	r16,r3,-1
10017134:	203ff51e 	bne	r4,zero,1001710c <___vfprintf_internal_r+0xa44>
10017138:	6100004c 	andi	r4,r12,1
1001713c:	2000a026 	beq	r4,zero,100173c0 <___vfprintf_internal_r+0xcf8>
10017140:	10803fcc 	andi	r2,r2,255
10017144:	1080201c 	xori	r2,r2,128
10017148:	10bfe004 	addi	r2,r2,-128
1001714c:	10800c18 	cmpnei	r2,r2,48
10017150:	10009b26 	beq	r2,zero,100173c0 <___vfprintf_internal_r+0xcf8>
10017154:	18ffff84 	addi	r3,r3,-2
10017158:	00800c04 	movi	r2,48
1001715c:	80bfffc5 	stb	r2,-1(r16)
10017160:	b8e9c83a 	sub	r20,r23,r3
10017164:	6025883a 	mov	r18,r12
10017168:	1821883a 	mov	r16,r3
1001716c:	00006906 	br	10017314 <___vfprintf_internal_r+0xc4c>
10017170:	21003fcc 	andi	r4,r4,255
10017174:	2005391e 	bne	r4,zero,1001865c <___vfprintf_internal_r+0x1f94>
10017178:	008400b4 	movhi	r2,4098
1001717c:	10968a04 	addi	r2,r2,23080
10017180:	d8800c15 	stw	r2,48(sp)
10017184:	6080080c 	andi	r2,r12,32
10017188:	103e901e 	bne	r2,zero,10016bcc <___vfprintf_internal_r+0x504>
1001718c:	d8c00617 	ldw	r3,24(sp)
10017190:	6080040c 	andi	r2,r12,16
10017194:	1d400017 	ldw	r21,0(r3)
10017198:	18c00104 	addi	r3,r3,4
1001719c:	d8c00615 	stw	r3,24(sp)
100171a0:	1002ae1e 	bne	r2,zero,10017c5c <___vfprintf_internal_r+0x1594>
100171a4:	6080100c 	andi	r2,r12,64
100171a8:	1002ac26 	beq	r2,zero,10017c5c <___vfprintf_internal_r+0x1594>
100171ac:	ad7fffcc 	andi	r21,r21,65535
100171b0:	0029883a 	mov	r20,zero
100171b4:	003e8a06 	br	10016be0 <___vfprintf_internal_r+0x518>
100171b8:	21003fcc 	andi	r4,r4,255
100171bc:	2005391e 	bne	r4,zero,100186a4 <___vfprintf_internal_r+0x1fdc>
100171c0:	6080080c 	andi	r2,r12,32
100171c4:	63000414 	ori	r12,r12,16
100171c8:	1000431e 	bne	r2,zero,100172d8 <___vfprintf_internal_r+0xc10>
100171cc:	d8800617 	ldw	r2,24(sp)
100171d0:	10800104 	addi	r2,r2,4
100171d4:	d8c00617 	ldw	r3,24(sp)
100171d8:	0029883a 	mov	r20,zero
100171dc:	d8800615 	stw	r2,24(sp)
100171e0:	1d400017 	ldw	r21,0(r3)
100171e4:	00800044 	movi	r2,1
100171e8:	00001206 	br	10017234 <___vfprintf_internal_r+0xb6c>
100171ec:	63000814 	ori	r12,r12,32
100171f0:	b2800007 	ldb	r10,0(r22)
100171f4:	003d8f06 	br	10016834 <___vfprintf_internal_r+0x16c>
100171f8:	d8c00617 	ldw	r3,24(sp)
100171fc:	00800c04 	movi	r2,48
10017200:	d8801585 	stb	r2,86(sp)
10017204:	00801e04 	movi	r2,120
10017208:	010400b4 	movhi	r4,4098
1001720c:	d88015c5 	stb	r2,87(sp)
10017210:	1d400017 	ldw	r21,0(r3)
10017214:	18800104 	addi	r2,r3,4
10017218:	d8800615 	stw	r2,24(sp)
1001721c:	20968f04 	addi	r2,r4,23100
10017220:	d8800c15 	stw	r2,48(sp)
10017224:	0029883a 	mov	r20,zero
10017228:	63000094 	ori	r12,r12,2
1001722c:	00800084 	movi	r2,2
10017230:	07001e04 	movi	fp,120
10017234:	d8001545 	stb	zero,85(sp)
10017238:	58ffffe0 	cmpeqi	r3,r11,-1
1001723c:	001b883a 	mov	r13,zero
10017240:	183fac1e 	bne	r3,zero,100170f4 <___vfprintf_internal_r+0xa2c>
10017244:	04bfdfc4 	movi	r18,-129
10017248:	ad06b03a 	or	r3,r21,r20
1001724c:	64a4703a 	and	r18,r12,r18
10017250:	18018d1e 	bne	r3,zero,10017888 <___vfprintf_internal_r+0x11c0>
10017254:	5803b91e 	bne	r11,zero,1001813c <___vfprintf_internal_r+0x1a74>
10017258:	103ea71e 	bne	r2,zero,10016cf8 <___vfprintf_internal_r+0x630>
1001725c:	6500004c 	andi	r20,r12,1
10017260:	a0028226 	beq	r20,zero,10017c6c <___vfprintf_internal_r+0x15a4>
10017264:	00800c04 	movi	r2,48
10017268:	d88028c5 	stb	r2,163(sp)
1001726c:	dc0028c4 	addi	r16,sp,163
10017270:	00002806 	br	10017314 <___vfprintf_internal_r+0xc4c>
10017274:	b2800007 	ldb	r10,0(r22)
10017278:	50801b18 	cmpnei	r2,r10,108
1001727c:	10032926 	beq	r2,zero,10017f24 <___vfprintf_internal_r+0x185c>
10017280:	63000414 	ori	r12,r12,16
10017284:	003d6b06 	br	10016834 <___vfprintf_internal_r+0x16c>
10017288:	63001014 	ori	r12,r12,64
1001728c:	b2800007 	ldb	r10,0(r22)
10017290:	003d6806 	br	10016834 <___vfprintf_internal_r+0x16c>
10017294:	d9000517 	ldw	r4,20(sp)
10017298:	001a9a00 	call	1001a9a0 <__sinit>
1001729c:	003d2306 	br	1001672c <___vfprintf_internal_r+0x64>
100172a0:	d8c00617 	ldw	r3,24(sp)
100172a4:	18800117 	ldw	r2,4(r3)
100172a8:	1d400017 	ldw	r21,0(r3)
100172ac:	18c00204 	addi	r3,r3,8
100172b0:	d8c00615 	stw	r3,24(sp)
100172b4:	1029883a 	mov	r20,r2
100172b8:	003e8506 	br	10016cd0 <___vfprintf_internal_r+0x608>
100172bc:	d8c00617 	ldw	r3,24(sp)
100172c0:	0005883a 	mov	r2,zero
100172c4:	1d400017 	ldw	r21,0(r3)
100172c8:	1d000117 	ldw	r20,4(r3)
100172cc:	18c00204 	addi	r3,r3,8
100172d0:	d8c00615 	stw	r3,24(sp)
100172d4:	003fd706 	br	10017234 <___vfprintf_internal_r+0xb6c>
100172d8:	d8c00617 	ldw	r3,24(sp)
100172dc:	00800044 	movi	r2,1
100172e0:	1d400017 	ldw	r21,0(r3)
100172e4:	1d000117 	ldw	r20,4(r3)
100172e8:	18c00204 	addi	r3,r3,8
100172ec:	d8c00615 	stw	r3,24(sp)
100172f0:	003fd006 	br	10017234 <___vfprintf_internal_r+0xb6c>
100172f4:	a000111e 	bne	r20,zero,1001733c <___vfprintf_internal_r+0xc74>
100172f8:	a88002a8 	cmpgeui	r2,r21,10
100172fc:	10000f1e 	bne	r2,zero,1001733c <___vfprintf_internal_r+0xc74>
10017300:	ad400c04 	addi	r21,r21,48
10017304:	dd4028c5 	stb	r21,163(sp)
10017308:	6025883a 	mov	r18,r12
1001730c:	05000044 	movi	r20,1
10017310:	dc0028c4 	addi	r16,sp,163
10017314:	582b883a 	mov	r21,r11
10017318:	5d00010e 	bge	r11,r20,10017320 <___vfprintf_internal_r+0xc58>
1001731c:	a02b883a 	mov	r21,r20
10017320:	d8000715 	stw	zero,28(sp)
10017324:	6b403fcc 	andi	r13,r13,255
10017328:	6b40201c 	xori	r13,r13,128
1001732c:	6b7fe004 	addi	r13,r13,-128
10017330:	683e8126 	beq	r13,zero,10016d38 <___vfprintf_internal_r+0x670>
10017334:	ad400044 	addi	r21,r21,1
10017338:	003e7f06 	br	10016d38 <___vfprintf_internal_r+0x670>
1001733c:	dc400e15 	stw	r17,56(sp)
10017340:	b821883a 	mov	r16,r23
10017344:	a023883a 	mov	r17,r20
10017348:	db000715 	stw	r12,28(sp)
1001734c:	9829883a 	mov	r20,r19
10017350:	dac00f15 	stw	r11,60(sp)
10017354:	4025883a 	mov	r18,r8
10017358:	6827883a 	mov	r19,r13
1001735c:	00000206 	br	10017368 <___vfprintf_internal_r+0xca0>
10017360:	102b883a 	mov	r21,r2
10017364:	1823883a 	mov	r17,r3
10017368:	a809883a 	mov	r4,r21
1001736c:	880b883a 	mov	r5,r17
10017370:	01800284 	movi	r6,10
10017374:	000f883a 	mov	r7,zero
10017378:	001eed40 	call	1001eed4 <__umoddi3>
1001737c:	10800c04 	addi	r2,r2,48
10017380:	843fffc4 	addi	r16,r16,-1
10017384:	a809883a 	mov	r4,r21
10017388:	880b883a 	mov	r5,r17
1001738c:	80800005 	stb	r2,0(r16)
10017390:	01800284 	movi	r6,10
10017394:	000f883a 	mov	r7,zero
10017398:	001e93c0 	call	1001e93c <__udivdi3>
1001739c:	883ff01e 	bne	r17,zero,10017360 <___vfprintf_internal_r+0xc98>
100173a0:	ad4002a8 	cmpgeui	r21,r21,10
100173a4:	a83fee1e 	bne	r21,zero,10017360 <___vfprintf_internal_r+0xc98>
100173a8:	db000717 	ldw	r12,28(sp)
100173ac:	dc400e17 	ldw	r17,56(sp)
100173b0:	dac00f17 	ldw	r11,60(sp)
100173b4:	981b883a 	mov	r13,r19
100173b8:	9011883a 	mov	r8,r18
100173bc:	a027883a 	mov	r19,r20
100173c0:	bc29c83a 	sub	r20,r23,r16
100173c4:	6025883a 	mov	r18,r12
100173c8:	003fd206 	br	10017314 <___vfprintf_internal_r+0xc4c>
100173cc:	e2801990 	cmplti	r10,fp,102
100173d0:	5000ea1e 	bne	r10,zero,1001777c <___vfprintf_internal_r+0x10b4>
100173d4:	d9000917 	ldw	r4,36(sp)
100173d8:	d9400a17 	ldw	r5,40(sp)
100173dc:	000d883a 	mov	r6,zero
100173e0:	000f883a 	mov	r7,zero
100173e4:	da000f15 	stw	r8,60(sp)
100173e8:	d8c00e15 	stw	r3,56(sp)
100173ec:	002065c0 	call	1002065c <__eqdf2>
100173f0:	d8c00e17 	ldw	r3,56(sp)
100173f4:	da000f17 	ldw	r8,60(sp)
100173f8:	1001891e 	bne	r2,zero,10017a20 <___vfprintf_internal_r+0x1358>
100173fc:	d8801d17 	ldw	r2,116(sp)
10017400:	010400b4 	movhi	r4,4098
10017404:	21169604 	addi	r4,r4,23128
10017408:	10800044 	addi	r2,r2,1
1001740c:	18c00044 	addi	r3,r3,1
10017410:	41000015 	stw	r4,0(r8)
10017414:	01000044 	movi	r4,1
10017418:	d8801d15 	stw	r2,116(sp)
1001741c:	41000115 	stw	r4,4(r8)
10017420:	d8c01e15 	stw	r3,120(sp)
10017424:	10800208 	cmpgei	r2,r2,8
10017428:	1003331e 	bne	r2,zero,100180f8 <___vfprintf_internal_r+0x1a30>
1001742c:	42000204 	addi	r8,r8,8
10017430:	d8801617 	ldw	r2,88(sp)
10017434:	d8c00817 	ldw	r3,32(sp)
10017438:	10c00416 	blt	r2,r3,1001744c <___vfprintf_internal_r+0xd84>
1001743c:	9080004c 	andi	r2,r18,1
10017440:	1000021e 	bne	r2,zero,1001744c <___vfprintf_internal_r+0xd84>
10017444:	d8c01e17 	ldw	r3,120(sp)
10017448:	003e6e06 	br	10016e04 <___vfprintf_internal_r+0x73c>
1001744c:	d8800d17 	ldw	r2,52(sp)
10017450:	d8c01e17 	ldw	r3,120(sp)
10017454:	d9000b17 	ldw	r4,44(sp)
10017458:	40800015 	stw	r2,0(r8)
1001745c:	d8801d17 	ldw	r2,116(sp)
10017460:	20c7883a 	add	r3,r4,r3
10017464:	41000115 	stw	r4,4(r8)
10017468:	10800044 	addi	r2,r2,1
1001746c:	d8801d15 	stw	r2,116(sp)
10017470:	d8c01e15 	stw	r3,120(sp)
10017474:	10800208 	cmpgei	r2,r2,8
10017478:	1002b11e 	bne	r2,zero,10017f40 <___vfprintf_internal_r+0x1878>
1001747c:	42000204 	addi	r8,r8,8
10017480:	d8800817 	ldw	r2,32(sp)
10017484:	143fffc4 	addi	r16,r2,-1
10017488:	043e5e0e 	bge	zero,r16,10016e04 <___vfprintf_internal_r+0x73c>
1001748c:	030400b4 	movhi	r12,4098
10017490:	81000450 	cmplti	r4,r16,17
10017494:	63169684 	addi	r12,r12,23130
10017498:	d8801d17 	ldw	r2,116(sp)
1001749c:	2003731e 	bne	r4,zero,1001826c <___vfprintf_internal_r+0x1ba4>
100174a0:	dc400715 	stw	r17,28(sp)
100174a4:	05000404 	movi	r20,16
100174a8:	df000517 	ldw	fp,20(sp)
100174ac:	6023883a 	mov	r17,r12
100174b0:	00000406 	br	100174c4 <___vfprintf_internal_r+0xdfc>
100174b4:	42000204 	addi	r8,r8,8
100174b8:	843ffc04 	addi	r16,r16,-16
100174bc:	81000448 	cmpgei	r4,r16,17
100174c0:	20036826 	beq	r4,zero,10018264 <___vfprintf_internal_r+0x1b9c>
100174c4:	10800044 	addi	r2,r2,1
100174c8:	18c00404 	addi	r3,r3,16
100174cc:	44400015 	stw	r17,0(r8)
100174d0:	45000115 	stw	r20,4(r8)
100174d4:	d8c01e15 	stw	r3,120(sp)
100174d8:	d8801d15 	stw	r2,116(sp)
100174dc:	11000208 	cmpgei	r4,r2,8
100174e0:	203ff426 	beq	r4,zero,100174b4 <___vfprintf_internal_r+0xdec>
100174e4:	d9801c04 	addi	r6,sp,112
100174e8:	980b883a 	mov	r5,r19
100174ec:	e009883a 	mov	r4,fp
100174f0:	001ce080 	call	1001ce08 <__sprint_r>
100174f4:	103d531e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100174f8:	d8c01e17 	ldw	r3,120(sp)
100174fc:	d8801d17 	ldw	r2,116(sp)
10017500:	b811883a 	mov	r8,r23
10017504:	003fec06 	br	100174b8 <___vfprintf_internal_r+0xdf0>
10017508:	8d4fc83a 	sub	r7,r17,r21
1001750c:	01fe2f0e 	bge	zero,r7,10016dcc <___vfprintf_internal_r+0x704>
10017510:	030400b4 	movhi	r12,4098
10017514:	39000450 	cmplti	r4,r7,17
10017518:	63169684 	addi	r12,r12,23130
1001751c:	d8801d17 	ldw	r2,116(sp)
10017520:	2000271e 	bne	r4,zero,100175c0 <___vfprintf_internal_r+0xef8>
10017524:	dc000e15 	stw	r16,56(sp)
10017528:	dc800f15 	stw	r18,60(sp)
1001752c:	dc401015 	stw	r17,64(sp)
10017530:	03400404 	movi	r13,16
10017534:	3821883a 	mov	r16,r7
10017538:	dac01215 	stw	r11,72(sp)
1001753c:	dc400517 	ldw	r17,20(sp)
10017540:	6025883a 	mov	r18,r12
10017544:	00000406 	br	10017558 <___vfprintf_internal_r+0xe90>
10017548:	843ffc04 	addi	r16,r16,-16
1001754c:	81000448 	cmpgei	r4,r16,17
10017550:	42000204 	addi	r8,r8,8
10017554:	20001426 	beq	r4,zero,100175a8 <___vfprintf_internal_r+0xee0>
10017558:	10800044 	addi	r2,r2,1
1001755c:	18c00404 	addi	r3,r3,16
10017560:	44800015 	stw	r18,0(r8)
10017564:	43400115 	stw	r13,4(r8)
10017568:	d8c01e15 	stw	r3,120(sp)
1001756c:	d8801d15 	stw	r2,116(sp)
10017570:	11000208 	cmpgei	r4,r2,8
10017574:	203ff426 	beq	r4,zero,10017548 <___vfprintf_internal_r+0xe80>
10017578:	d9801c04 	addi	r6,sp,112
1001757c:	980b883a 	mov	r5,r19
10017580:	8809883a 	mov	r4,r17
10017584:	001ce080 	call	1001ce08 <__sprint_r>
10017588:	103d2e1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
1001758c:	843ffc04 	addi	r16,r16,-16
10017590:	81000448 	cmpgei	r4,r16,17
10017594:	d8c01e17 	ldw	r3,120(sp)
10017598:	d8801d17 	ldw	r2,116(sp)
1001759c:	b811883a 	mov	r8,r23
100175a0:	03400404 	movi	r13,16
100175a4:	203fec1e 	bne	r4,zero,10017558 <___vfprintf_internal_r+0xe90>
100175a8:	800f883a 	mov	r7,r16
100175ac:	9019883a 	mov	r12,r18
100175b0:	dc000e17 	ldw	r16,56(sp)
100175b4:	dc401017 	ldw	r17,64(sp)
100175b8:	dac01217 	ldw	r11,72(sp)
100175bc:	dc800f17 	ldw	r18,60(sp)
100175c0:	10800044 	addi	r2,r2,1
100175c4:	19c7883a 	add	r3,r3,r7
100175c8:	d8801d15 	stw	r2,116(sp)
100175cc:	43000015 	stw	r12,0(r8)
100175d0:	41c00115 	stw	r7,4(r8)
100175d4:	d8c01e15 	stw	r3,120(sp)
100175d8:	10800208 	cmpgei	r2,r2,8
100175dc:	1002cd1e 	bne	r2,zero,10018114 <___vfprintf_internal_r+0x1a4c>
100175e0:	5d0fc83a 	sub	r7,r11,r20
100175e4:	42000204 	addi	r8,r8,8
100175e8:	01fdfa0e 	bge	zero,r7,10016dd4 <___vfprintf_internal_r+0x70c>
100175ec:	030400b4 	movhi	r12,4098
100175f0:	39000450 	cmplti	r4,r7,17
100175f4:	63169684 	addi	r12,r12,23130
100175f8:	d8801d17 	ldw	r2,116(sp)
100175fc:	2000251e 	bne	r4,zero,10017694 <___vfprintf_internal_r+0xfcc>
10017600:	dc000e15 	stw	r16,56(sp)
10017604:	dc800f15 	stw	r18,60(sp)
10017608:	dc401015 	stw	r17,64(sp)
1001760c:	02c00404 	movi	r11,16
10017610:	3821883a 	mov	r16,r7
10017614:	dc400517 	ldw	r17,20(sp)
10017618:	6025883a 	mov	r18,r12
1001761c:	00000406 	br	10017630 <___vfprintf_internal_r+0xf68>
10017620:	843ffc04 	addi	r16,r16,-16
10017624:	81000448 	cmpgei	r4,r16,17
10017628:	42000204 	addi	r8,r8,8
1001762c:	20001426 	beq	r4,zero,10017680 <___vfprintf_internal_r+0xfb8>
10017630:	10800044 	addi	r2,r2,1
10017634:	18c00404 	addi	r3,r3,16
10017638:	44800015 	stw	r18,0(r8)
1001763c:	42c00115 	stw	r11,4(r8)
10017640:	d8c01e15 	stw	r3,120(sp)
10017644:	d8801d15 	stw	r2,116(sp)
10017648:	11000208 	cmpgei	r4,r2,8
1001764c:	203ff426 	beq	r4,zero,10017620 <___vfprintf_internal_r+0xf58>
10017650:	d9801c04 	addi	r6,sp,112
10017654:	980b883a 	mov	r5,r19
10017658:	8809883a 	mov	r4,r17
1001765c:	001ce080 	call	1001ce08 <__sprint_r>
10017660:	103cf81e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017664:	843ffc04 	addi	r16,r16,-16
10017668:	81000448 	cmpgei	r4,r16,17
1001766c:	d8c01e17 	ldw	r3,120(sp)
10017670:	d8801d17 	ldw	r2,116(sp)
10017674:	b811883a 	mov	r8,r23
10017678:	02c00404 	movi	r11,16
1001767c:	203fec1e 	bne	r4,zero,10017630 <___vfprintf_internal_r+0xf68>
10017680:	800f883a 	mov	r7,r16
10017684:	9019883a 	mov	r12,r18
10017688:	dc401017 	ldw	r17,64(sp)
1001768c:	dc000e17 	ldw	r16,56(sp)
10017690:	dc800f17 	ldw	r18,60(sp)
10017694:	10800044 	addi	r2,r2,1
10017698:	19c7883a 	add	r3,r3,r7
1001769c:	d8801d15 	stw	r2,116(sp)
100176a0:	43000015 	stw	r12,0(r8)
100176a4:	41c00115 	stw	r7,4(r8)
100176a8:	d8c01e15 	stw	r3,120(sp)
100176ac:	10800208 	cmpgei	r2,r2,8
100176b0:	1001621e 	bne	r2,zero,10017c3c <___vfprintf_internal_r+0x1574>
100176b4:	42000204 	addi	r8,r8,8
100176b8:	003dc606 	br	10016dd4 <___vfprintf_internal_r+0x70c>
100176bc:	d9000517 	ldw	r4,20(sp)
100176c0:	d9801c04 	addi	r6,sp,112
100176c4:	980b883a 	mov	r5,r19
100176c8:	001ce080 	call	1001ce08 <__sprint_r>
100176cc:	103dd726 	beq	r2,zero,10016e2c <___vfprintf_internal_r+0x764>
100176d0:	003cdc06 	br	10016a44 <___vfprintf_internal_r+0x37c>
100176d4:	d9000517 	ldw	r4,20(sp)
100176d8:	d9801c04 	addi	r6,sp,112
100176dc:	980b883a 	mov	r5,r19
100176e0:	001ce080 	call	1001ce08 <__sprint_r>
100176e4:	103cd71e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100176e8:	d9001617 	ldw	r4,88(sp)
100176ec:	d8c01e17 	ldw	r3,120(sp)
100176f0:	b811883a 	mov	r8,r23
100176f4:	2002951e 	bne	r4,zero,1001814c <___vfprintf_internal_r+0x1a84>
100176f8:	d9000817 	ldw	r4,32(sp)
100176fc:	9080004c 	andi	r2,r18,1
10017700:	1104b03a 	or	r2,r2,r4
10017704:	103dbf26 	beq	r2,zero,10016e04 <___vfprintf_internal_r+0x73c>
10017708:	d8800d17 	ldw	r2,52(sp)
1001770c:	d9000b17 	ldw	r4,44(sp)
10017710:	40800015 	stw	r2,0(r8)
10017714:	d8801d17 	ldw	r2,116(sp)
10017718:	20c7883a 	add	r3,r4,r3
1001771c:	41000115 	stw	r4,4(r8)
10017720:	10800044 	addi	r2,r2,1
10017724:	d8c01e15 	stw	r3,120(sp)
10017728:	d8801d15 	stw	r2,116(sp)
1001772c:	11000208 	cmpgei	r4,r2,8
10017730:	2003641e 	bne	r4,zero,100184c4 <___vfprintf_internal_r+0x1dfc>
10017734:	42000204 	addi	r8,r8,8
10017738:	d9000817 	ldw	r4,32(sp)
1001773c:	10800044 	addi	r2,r2,1
10017740:	d8801d15 	stw	r2,116(sp)
10017744:	20c7883a 	add	r3,r4,r3
10017748:	44000015 	stw	r16,0(r8)
1001774c:	41000115 	stw	r4,4(r8)
10017750:	d8c01e15 	stw	r3,120(sp)
10017754:	10800208 	cmpgei	r2,r2,8
10017758:	103da926 	beq	r2,zero,10016e00 <___vfprintf_internal_r+0x738>
1001775c:	d9000517 	ldw	r4,20(sp)
10017760:	d9801c04 	addi	r6,sp,112
10017764:	980b883a 	mov	r5,r19
10017768:	001ce080 	call	1001ce08 <__sprint_r>
1001776c:	103cb51e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017770:	d8c01e17 	ldw	r3,120(sp)
10017774:	b811883a 	mov	r8,r23
10017778:	003da206 	br	10016e04 <___vfprintf_internal_r+0x73c>
1001777c:	d8800817 	ldw	r2,32(sp)
10017780:	df001d17 	ldw	fp,116(sp)
10017784:	18c00044 	addi	r3,r3,1
10017788:	10800088 	cmpgei	r2,r2,2
1001778c:	e5000044 	addi	r20,fp,1
10017790:	42800204 	addi	r10,r8,8
10017794:	1000fb26 	beq	r2,zero,10017b84 <___vfprintf_internal_r+0x14bc>
10017798:	00800044 	movi	r2,1
1001779c:	40800115 	stw	r2,4(r8)
100177a0:	44000015 	stw	r16,0(r8)
100177a4:	d8c01e15 	stw	r3,120(sp)
100177a8:	dd001d15 	stw	r20,116(sp)
100177ac:	a0800210 	cmplti	r2,r20,8
100177b0:	10022c26 	beq	r2,zero,10018064 <___vfprintf_internal_r+0x199c>
100177b4:	d8800b17 	ldw	r2,44(sp)
100177b8:	d9000d17 	ldw	r4,52(sp)
100177bc:	a5000044 	addi	r20,r20,1
100177c0:	1887883a 	add	r3,r3,r2
100177c4:	50800115 	stw	r2,4(r10)
100177c8:	51000015 	stw	r4,0(r10)
100177cc:	d8c01e15 	stw	r3,120(sp)
100177d0:	dd001d15 	stw	r20,116(sp)
100177d4:	a0800208 	cmpgei	r2,r20,8
100177d8:	1002191e 	bne	r2,zero,10018040 <___vfprintf_internal_r+0x1978>
100177dc:	52800204 	addi	r10,r10,8
100177e0:	d8800817 	ldw	r2,32(sp)
100177e4:	d9000917 	ldw	r4,36(sp)
100177e8:	d9400a17 	ldw	r5,40(sp)
100177ec:	52000204 	addi	r8,r10,8
100177f0:	12ffffc4 	addi	r11,r2,-1
100177f4:	a7000044 	addi	fp,r20,1
100177f8:	000d883a 	mov	r6,zero
100177fc:	000f883a 	mov	r7,zero
10017800:	d8c01215 	stw	r3,72(sp)
10017804:	da800f15 	stw	r10,60(sp)
10017808:	da000e15 	stw	r8,56(sp)
1001780c:	dac00715 	stw	r11,28(sp)
10017810:	df001015 	stw	fp,64(sp)
10017814:	002065c0 	call	1002065c <__eqdf2>
10017818:	dac00717 	ldw	r11,28(sp)
1001781c:	da000e17 	ldw	r8,56(sp)
10017820:	da800f17 	ldw	r10,60(sp)
10017824:	db401017 	ldw	r13,64(sp)
10017828:	d8c01217 	ldw	r3,72(sp)
1001782c:	1000e126 	beq	r2,zero,10017bb4 <___vfprintf_internal_r+0x14ec>
10017830:	84000044 	addi	r16,r16,1
10017834:	1ac7883a 	add	r3,r3,r11
10017838:	df001d15 	stw	fp,116(sp)
1001783c:	54000015 	stw	r16,0(r10)
10017840:	52c00115 	stw	r11,4(r10)
10017844:	d8c01e15 	stw	r3,120(sp)
10017848:	e7000208 	cmpgei	fp,fp,8
1001784c:	e001aa1e 	bne	fp,zero,10017ef8 <___vfprintf_internal_r+0x1830>
10017850:	50800404 	addi	r2,r10,16
10017854:	a7000084 	addi	fp,r20,2
10017858:	4015883a 	mov	r10,r8
1001785c:	1011883a 	mov	r8,r2
10017860:	d9001117 	ldw	r4,68(sp)
10017864:	d8801844 	addi	r2,sp,97
10017868:	df001d15 	stw	fp,116(sp)
1001786c:	20c7883a 	add	r3,r4,r3
10017870:	50800015 	stw	r2,0(r10)
10017874:	51000115 	stw	r4,4(r10)
10017878:	d8c01e15 	stw	r3,120(sp)
1001787c:	e7000210 	cmplti	fp,fp,8
10017880:	e03d601e 	bne	fp,zero,10016e04 <___vfprintf_internal_r+0x73c>
10017884:	003fb506 	br	1001775c <___vfprintf_internal_r+0x1094>
10017888:	9019883a 	mov	r12,r18
1001788c:	003e1906 	br	100170f4 <___vfprintf_internal_r+0xa2c>
10017890:	030400b4 	movhi	r12,4098
10017894:	39000450 	cmplti	r4,r7,17
10017898:	63169a84 	addi	r12,r12,23146
1001789c:	d8801d17 	ldw	r2,116(sp)
100178a0:	20002b1e 	bne	r4,zero,10017950 <___vfprintf_internal_r+0x1288>
100178a4:	dc001015 	stw	r16,64(sp)
100178a8:	dc801215 	stw	r18,72(sp)
100178ac:	dc401315 	stw	r17,76(sp)
100178b0:	03c00404 	movi	r15,16
100178b4:	db800e15 	stw	r14,56(sp)
100178b8:	db400f15 	stw	r13,60(sp)
100178bc:	dac01415 	stw	r11,80(sp)
100178c0:	3821883a 	mov	r16,r7
100178c4:	dc400517 	ldw	r17,20(sp)
100178c8:	6025883a 	mov	r18,r12
100178cc:	00000406 	br	100178e0 <___vfprintf_internal_r+0x1218>
100178d0:	843ffc04 	addi	r16,r16,-16
100178d4:	81000448 	cmpgei	r4,r16,17
100178d8:	42000204 	addi	r8,r8,8
100178dc:	20001426 	beq	r4,zero,10017930 <___vfprintf_internal_r+0x1268>
100178e0:	10800044 	addi	r2,r2,1
100178e4:	18c00404 	addi	r3,r3,16
100178e8:	44800015 	stw	r18,0(r8)
100178ec:	43c00115 	stw	r15,4(r8)
100178f0:	d8c01e15 	stw	r3,120(sp)
100178f4:	d8801d15 	stw	r2,116(sp)
100178f8:	11000208 	cmpgei	r4,r2,8
100178fc:	203ff426 	beq	r4,zero,100178d0 <___vfprintf_internal_r+0x1208>
10017900:	d9801c04 	addi	r6,sp,112
10017904:	980b883a 	mov	r5,r19
10017908:	8809883a 	mov	r4,r17
1001790c:	001ce080 	call	1001ce08 <__sprint_r>
10017910:	103c4c1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017914:	843ffc04 	addi	r16,r16,-16
10017918:	81000448 	cmpgei	r4,r16,17
1001791c:	d8c01e17 	ldw	r3,120(sp)
10017920:	d8801d17 	ldw	r2,116(sp)
10017924:	b811883a 	mov	r8,r23
10017928:	03c00404 	movi	r15,16
1001792c:	203fec1e 	bne	r4,zero,100178e0 <___vfprintf_internal_r+0x1218>
10017930:	800f883a 	mov	r7,r16
10017934:	9019883a 	mov	r12,r18
10017938:	db800e17 	ldw	r14,56(sp)
1001793c:	db400f17 	ldw	r13,60(sp)
10017940:	dc401317 	ldw	r17,76(sp)
10017944:	dac01417 	ldw	r11,80(sp)
10017948:	dc001017 	ldw	r16,64(sp)
1001794c:	dc801217 	ldw	r18,72(sp)
10017950:	10800044 	addi	r2,r2,1
10017954:	19c7883a 	add	r3,r3,r7
10017958:	d8801d15 	stw	r2,116(sp)
1001795c:	43000015 	stw	r12,0(r8)
10017960:	41c00115 	stw	r7,4(r8)
10017964:	d8c01e15 	stw	r3,120(sp)
10017968:	10800208 	cmpgei	r2,r2,8
1001796c:	1001d41e 	bne	r2,zero,100180c0 <___vfprintf_internal_r+0x19f8>
10017970:	42000204 	addi	r8,r8,8
10017974:	003cf806 	br	10016d58 <___vfprintf_internal_r+0x690>
10017978:	d9000517 	ldw	r4,20(sp)
1001797c:	d9801c04 	addi	r6,sp,112
10017980:	980b883a 	mov	r5,r19
10017984:	dac01015 	stw	r11,64(sp)
10017988:	db400f15 	stw	r13,60(sp)
1001798c:	db800e15 	stw	r14,56(sp)
10017990:	001ce080 	call	1001ce08 <__sprint_r>
10017994:	103c2b1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017998:	d8c01e17 	ldw	r3,120(sp)
1001799c:	b811883a 	mov	r8,r23
100179a0:	dac01017 	ldw	r11,64(sp)
100179a4:	db400f17 	ldw	r13,60(sp)
100179a8:	db800e17 	ldw	r14,56(sp)
100179ac:	003cf806 	br	10016d90 <___vfprintf_internal_r+0x6c8>
100179b0:	d9000517 	ldw	r4,20(sp)
100179b4:	d9801c04 	addi	r6,sp,112
100179b8:	980b883a 	mov	r5,r19
100179bc:	dac00f15 	stw	r11,60(sp)
100179c0:	db400e15 	stw	r13,56(sp)
100179c4:	001ce080 	call	1001ce08 <__sprint_r>
100179c8:	103c1e1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100179cc:	d8c01e17 	ldw	r3,120(sp)
100179d0:	b811883a 	mov	r8,r23
100179d4:	dac00f17 	ldw	r11,60(sp)
100179d8:	db400e17 	ldw	r13,56(sp)
100179dc:	003cf906 	br	10016dc4 <___vfprintf_internal_r+0x6fc>
100179e0:	d9000c17 	ldw	r4,48(sp)
100179e4:	b821883a 	mov	r16,r23
100179e8:	a88003cc 	andi	r2,r21,15
100179ec:	a006973a 	slli	r3,r20,28
100179f0:	2085883a 	add	r2,r4,r2
100179f4:	a82ad13a 	srli	r21,r21,4
100179f8:	10800003 	ldbu	r2,0(r2)
100179fc:	a028d13a 	srli	r20,r20,4
10017a00:	843fffc4 	addi	r16,r16,-1
10017a04:	1d6ab03a 	or	r21,r3,r21
10017a08:	80800005 	stb	r2,0(r16)
10017a0c:	ad04b03a 	or	r2,r21,r20
10017a10:	103ff51e 	bne	r2,zero,100179e8 <___vfprintf_internal_r+0x1320>
10017a14:	bc29c83a 	sub	r20,r23,r16
10017a18:	6025883a 	mov	r18,r12
10017a1c:	003e3d06 	br	10017314 <___vfprintf_internal_r+0xc4c>
10017a20:	d9001617 	ldw	r4,88(sp)
10017a24:	0101980e 	bge	zero,r4,10018088 <___vfprintf_internal_r+0x19c0>
10017a28:	d8800717 	ldw	r2,28(sp)
10017a2c:	d9000817 	ldw	r4,32(sp)
10017a30:	1039883a 	mov	fp,r2
10017a34:	20812516 	blt	r4,r2,10017ecc <___vfprintf_internal_r+0x1804>
10017a38:	07000a0e 	bge	zero,fp,10017a64 <___vfprintf_internal_r+0x139c>
10017a3c:	d8801d17 	ldw	r2,116(sp)
10017a40:	1f07883a 	add	r3,r3,fp
10017a44:	44000015 	stw	r16,0(r8)
10017a48:	10800044 	addi	r2,r2,1
10017a4c:	d8801d15 	stw	r2,116(sp)
10017a50:	47000115 	stw	fp,4(r8)
10017a54:	d8c01e15 	stw	r3,120(sp)
10017a58:	10800208 	cmpgei	r2,r2,8
10017a5c:	1002d91e 	bne	r2,zero,100185c4 <___vfprintf_internal_r+0x1efc>
10017a60:	42000204 	addi	r8,r8,8
10017a64:	e0013e16 	blt	fp,zero,10017f60 <___vfprintf_internal_r+0x1898>
10017a68:	d8800717 	ldw	r2,28(sp)
10017a6c:	1739c83a 	sub	fp,r2,fp
10017a70:	07014516 	blt	zero,fp,10017f88 <___vfprintf_internal_r+0x18c0>
10017a74:	d9001617 	ldw	r4,88(sp)
10017a78:	d8800817 	ldw	r2,32(sp)
10017a7c:	2081160e 	bge	r4,r2,10017ed8 <___vfprintf_internal_r+0x1810>
10017a80:	d8800d17 	ldw	r2,52(sp)
10017a84:	d9400b17 	ldw	r5,44(sp)
10017a88:	40800015 	stw	r2,0(r8)
10017a8c:	d8801d17 	ldw	r2,116(sp)
10017a90:	1947883a 	add	r3,r3,r5
10017a94:	41400115 	stw	r5,4(r8)
10017a98:	10800044 	addi	r2,r2,1
10017a9c:	d8801d15 	stw	r2,116(sp)
10017aa0:	d8c01e15 	stw	r3,120(sp)
10017aa4:	10800208 	cmpgei	r2,r2,8
10017aa8:	1002601e 	bne	r2,zero,1001842c <___vfprintf_internal_r+0x1d64>
10017aac:	42000204 	addi	r8,r8,8
10017ab0:	d8800817 	ldw	r2,32(sp)
10017ab4:	d9400717 	ldw	r5,28(sp)
10017ab8:	1105c83a 	sub	r2,r2,r4
10017abc:	29015c0e 	bge	r5,r4,10018030 <___vfprintf_internal_r+0x1968>
10017ac0:	1039883a 	mov	fp,r2
10017ac4:	07000c0e 	bge	zero,fp,10017af8 <___vfprintf_internal_r+0x1430>
10017ac8:	d9000717 	ldw	r4,28(sp)
10017acc:	1f07883a 	add	r3,r3,fp
10017ad0:	47000115 	stw	fp,4(r8)
10017ad4:	8121883a 	add	r16,r16,r4
10017ad8:	d9001d17 	ldw	r4,116(sp)
10017adc:	44000015 	stw	r16,0(r8)
10017ae0:	d8c01e15 	stw	r3,120(sp)
10017ae4:	21000044 	addi	r4,r4,1
10017ae8:	d9001d15 	stw	r4,116(sp)
10017aec:	21000208 	cmpgei	r4,r4,8
10017af0:	2002bf1e 	bne	r4,zero,100185f0 <___vfprintf_internal_r+0x1f28>
10017af4:	42000204 	addi	r8,r8,8
10017af8:	e000010e 	bge	fp,zero,10017b00 <___vfprintf_internal_r+0x1438>
10017afc:	0039883a 	mov	fp,zero
10017b00:	1739c83a 	sub	fp,r2,fp
10017b04:	073cbf0e 	bge	zero,fp,10016e04 <___vfprintf_internal_r+0x73c>
10017b08:	030400b4 	movhi	r12,4098
10017b0c:	e1000450 	cmplti	r4,fp,17
10017b10:	63169684 	addi	r12,r12,23130
10017b14:	d8801d17 	ldw	r2,116(sp)
10017b18:	20023b1e 	bne	r4,zero,10018408 <___vfprintf_internal_r+0x1d40>
10017b1c:	dc400715 	stw	r17,28(sp)
10017b20:	05000404 	movi	r20,16
10017b24:	dc000517 	ldw	r16,20(sp)
10017b28:	6023883a 	mov	r17,r12
10017b2c:	00000406 	br	10017b40 <___vfprintf_internal_r+0x1478>
10017b30:	42000204 	addi	r8,r8,8
10017b34:	e73ffc04 	addi	fp,fp,-16
10017b38:	e1000448 	cmpgei	r4,fp,17
10017b3c:	20023026 	beq	r4,zero,10018400 <___vfprintf_internal_r+0x1d38>
10017b40:	10800044 	addi	r2,r2,1
10017b44:	18c00404 	addi	r3,r3,16
10017b48:	44400015 	stw	r17,0(r8)
10017b4c:	45000115 	stw	r20,4(r8)
10017b50:	d8c01e15 	stw	r3,120(sp)
10017b54:	d8801d15 	stw	r2,116(sp)
10017b58:	11000208 	cmpgei	r4,r2,8
10017b5c:	203ff426 	beq	r4,zero,10017b30 <___vfprintf_internal_r+0x1468>
10017b60:	d9801c04 	addi	r6,sp,112
10017b64:	980b883a 	mov	r5,r19
10017b68:	8009883a 	mov	r4,r16
10017b6c:	001ce080 	call	1001ce08 <__sprint_r>
10017b70:	103bb41e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017b74:	d8c01e17 	ldw	r3,120(sp)
10017b78:	d8801d17 	ldw	r2,116(sp)
10017b7c:	b811883a 	mov	r8,r23
10017b80:	003fec06 	br	10017b34 <___vfprintf_internal_r+0x146c>
10017b84:	9080004c 	andi	r2,r18,1
10017b88:	103f031e 	bne	r2,zero,10017798 <___vfprintf_internal_r+0x10d0>
10017b8c:	00800044 	movi	r2,1
10017b90:	dd001d15 	stw	r20,116(sp)
10017b94:	44000015 	stw	r16,0(r8)
10017b98:	40800115 	stw	r2,4(r8)
10017b9c:	d8c01e15 	stw	r3,120(sp)
10017ba0:	a5000208 	cmpgei	r20,r20,8
10017ba4:	a000d41e 	bne	r20,zero,10017ef8 <___vfprintf_internal_r+0x1830>
10017ba8:	e7000084 	addi	fp,fp,2
10017bac:	42000404 	addi	r8,r8,16
10017bb0:	003f2b06 	br	10017860 <___vfprintf_internal_r+0x1198>
10017bb4:	02ff2a0e 	bge	zero,r11,10017860 <___vfprintf_internal_r+0x1198>
10017bb8:	58800450 	cmplti	r2,r11,17
10017bbc:	030400b4 	movhi	r12,4098
10017bc0:	1002f81e 	bne	r2,zero,100187a4 <___vfprintf_internal_r+0x20dc>
10017bc4:	63169684 	addi	r12,r12,23130
10017bc8:	dc800715 	stw	r18,28(sp)
10017bcc:	dc400e15 	stw	r17,56(sp)
10017bd0:	04000404 	movi	r16,16
10017bd4:	5823883a 	mov	r17,r11
10017bd8:	df000517 	ldw	fp,20(sp)
10017bdc:	6025883a 	mov	r18,r12
10017be0:	6829883a 	mov	r20,r13
10017be4:	00000506 	br	10017bfc <___vfprintf_internal_r+0x1534>
10017be8:	52800204 	addi	r10,r10,8
10017bec:	8c7ffc04 	addi	r17,r17,-16
10017bf0:	88800448 	cmpgei	r2,r17,17
10017bf4:	10018a26 	beq	r2,zero,10018220 <___vfprintf_internal_r+0x1b58>
10017bf8:	a5000044 	addi	r20,r20,1
10017bfc:	18c00404 	addi	r3,r3,16
10017c00:	54800015 	stw	r18,0(r10)
10017c04:	54000115 	stw	r16,4(r10)
10017c08:	d8c01e15 	stw	r3,120(sp)
10017c0c:	dd001d15 	stw	r20,116(sp)
10017c10:	a0800208 	cmpgei	r2,r20,8
10017c14:	103ff426 	beq	r2,zero,10017be8 <___vfprintf_internal_r+0x1520>
10017c18:	d9801c04 	addi	r6,sp,112
10017c1c:	980b883a 	mov	r5,r19
10017c20:	e009883a 	mov	r4,fp
10017c24:	001ce080 	call	1001ce08 <__sprint_r>
10017c28:	103b861e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017c2c:	dd001d17 	ldw	r20,116(sp)
10017c30:	d8c01e17 	ldw	r3,120(sp)
10017c34:	b815883a 	mov	r10,r23
10017c38:	003fec06 	br	10017bec <___vfprintf_internal_r+0x1524>
10017c3c:	d9000517 	ldw	r4,20(sp)
10017c40:	d9801c04 	addi	r6,sp,112
10017c44:	980b883a 	mov	r5,r19
10017c48:	001ce080 	call	1001ce08 <__sprint_r>
10017c4c:	103b7d1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017c50:	d8c01e17 	ldw	r3,120(sp)
10017c54:	b811883a 	mov	r8,r23
10017c58:	003c5e06 	br	10016dd4 <___vfprintf_internal_r+0x70c>
10017c5c:	0029883a 	mov	r20,zero
10017c60:	003bdf06 	br	10016be0 <___vfprintf_internal_r+0x518>
10017c64:	b025883a 	mov	r18,r22
10017c68:	003aea06 	br	10016814 <___vfprintf_internal_r+0x14c>
10017c6c:	b821883a 	mov	r16,r23
10017c70:	003da806 	br	10017314 <___vfprintf_internal_r+0xc4c>
10017c74:	d9000917 	ldw	r4,36(sp)
10017c78:	d9400a17 	ldw	r5,40(sp)
10017c7c:	da000f15 	stw	r8,60(sp)
10017c80:	200d883a 	mov	r6,r4
10017c84:	280f883a 	mov	r7,r5
10017c88:	dac00e15 	stw	r11,56(sp)
10017c8c:	db000715 	stw	r12,28(sp)
10017c90:	00218b40 	call	100218b4 <__unorddf2>
10017c94:	db000717 	ldw	r12,28(sp)
10017c98:	dac00e17 	ldw	r11,56(sp)
10017c9c:	da000f17 	ldw	r8,60(sp)
10017ca0:	1002af1e 	bne	r2,zero,10018760 <___vfprintf_internal_r+0x2098>
10017ca4:	00fff7c4 	movi	r3,-33
10017ca8:	e0c6703a 	and	r3,fp,r3
10017cac:	58bfffe0 	cmpeqi	r2,r11,-1
10017cb0:	d8c00715 	stw	r3,28(sp)
10017cb4:	10024c1e 	bne	r2,zero,100185e8 <___vfprintf_internal_r+0x1f20>
10017cb8:	188011d8 	cmpnei	r2,r3,71
10017cbc:	1001fe26 	beq	r2,zero,100184b8 <___vfprintf_internal_r+0x1df0>
10017cc0:	d8800a17 	ldw	r2,40(sp)
10017cc4:	64804014 	ori	r18,r12,256
10017cc8:	1001e116 	blt	r2,zero,10018450 <___vfprintf_internal_r+0x1d88>
10017ccc:	dd400a17 	ldw	r21,40(sp)
10017cd0:	d8000e05 	stb	zero,56(sp)
10017cd4:	e08019a0 	cmpeqi	r2,fp,102
10017cd8:	d8800f15 	stw	r2,60(sp)
10017cdc:	1001741e 	bne	r2,zero,100182b0 <___vfprintf_internal_r+0x1be8>
10017ce0:	e08011a0 	cmpeqi	r2,fp,70
10017ce4:	1001721e 	bne	r2,zero,100182b0 <___vfprintf_internal_r+0x1be8>
10017ce8:	d8800717 	ldw	r2,28(sp)
10017cec:	da001215 	stw	r8,72(sp)
10017cf0:	db001015 	stw	r12,64(sp)
10017cf4:	10801158 	cmpnei	r2,r2,69
10017cf8:	10020526 	beq	r2,zero,10018510 <___vfprintf_internal_r+0x1e48>
10017cfc:	d8801a04 	addi	r2,sp,104
10017d00:	d8800315 	stw	r2,12(sp)
10017d04:	d9400917 	ldw	r5,36(sp)
10017d08:	d8801704 	addi	r2,sp,92
10017d0c:	d9000517 	ldw	r4,20(sp)
10017d10:	d8800215 	stw	r2,8(sp)
10017d14:	d8801604 	addi	r2,sp,88
10017d18:	dac00015 	stw	r11,0(sp)
10017d1c:	d8800115 	stw	r2,4(sp)
10017d20:	01c00084 	movi	r7,2
10017d24:	a80d883a 	mov	r6,r21
10017d28:	dac00815 	stw	r11,32(sp)
10017d2c:	0018d2c0 	call	10018d2c <_dtoa_r>
10017d30:	dac00817 	ldw	r11,32(sp)
10017d34:	1021883a 	mov	r16,r2
10017d38:	e08019d8 	cmpnei	r2,fp,103
10017d3c:	db001017 	ldw	r12,64(sp)
10017d40:	da001217 	ldw	r8,72(sp)
10017d44:	5829883a 	mov	r20,r11
10017d48:	1002031e 	bne	r2,zero,10018558 <___vfprintf_internal_r+0x1e90>
10017d4c:	6080004c 	andi	r2,r12,1
10017d50:	1002031e 	bne	r2,zero,10018560 <___vfprintf_internal_r+0x1e98>
10017d54:	d8c01617 	ldw	r3,88(sp)
10017d58:	d8800717 	ldw	r2,28(sp)
10017d5c:	d8c00715 	stw	r3,28(sp)
10017d60:	d8c01a17 	ldw	r3,104(sp)
10017d64:	108011e0 	cmpeqi	r2,r2,71
10017d68:	1c07c83a 	sub	r3,r3,r16
10017d6c:	d8c00815 	stw	r3,32(sp)
10017d70:	10000526 	beq	r2,zero,10017d88 <___vfprintf_internal_r+0x16c0>
10017d74:	d8c00717 	ldw	r3,28(sp)
10017d78:	18bfff50 	cmplti	r2,r3,-3
10017d7c:	1000011e 	bne	r2,zero,10017d84 <___vfprintf_internal_r+0x16bc>
10017d80:	58c2050e 	bge	r11,r3,10018598 <___vfprintf_internal_r+0x1ed0>
10017d84:	e73fff84 	addi	fp,fp,-2
10017d88:	d8800717 	ldw	r2,28(sp)
10017d8c:	df001845 	stb	fp,97(sp)
10017d90:	153fffc4 	addi	r20,r2,-1
10017d94:	dd001615 	stw	r20,88(sp)
10017d98:	a0027916 	blt	r20,zero,10018780 <___vfprintf_internal_r+0x20b8>
10017d9c:	00800ac4 	movi	r2,43
10017da0:	d8801885 	stb	r2,98(sp)
10017da4:	a0800290 	cmplti	r2,r20,10
10017da8:	1002581e 	bne	r2,zero,1001870c <___vfprintf_internal_r+0x2044>
10017dac:	dc000715 	stw	r16,28(sp)
10017db0:	dd401bc4 	addi	r21,sp,111
10017db4:	a021883a 	mov	r16,r20
10017db8:	db000f15 	stw	r12,60(sp)
10017dbc:	9829883a 	mov	r20,r19
10017dc0:	4027883a 	mov	r19,r8
10017dc4:	00000206 	br	10017dd0 <___vfprintf_internal_r+0x1708>
10017dc8:	202b883a 	mov	r21,r4
10017dcc:	1021883a 	mov	r16,r2
10017dd0:	8009883a 	mov	r4,r16
10017dd4:	01400284 	movi	r5,10
10017dd8:	0013f2c0 	call	10013f2c <__modsi3>
10017ddc:	10800c04 	addi	r2,r2,48
10017de0:	8009883a 	mov	r4,r16
10017de4:	a8bfffc5 	stb	r2,-1(r21)
10017de8:	01400284 	movi	r5,10
10017dec:	0013eac0 	call	10013eac <__divsi3>
10017df0:	80c01908 	cmpgei	r3,r16,100
10017df4:	a93fffc4 	addi	r4,r21,-1
10017df8:	183ff31e 	bne	r3,zero,10017dc8 <___vfprintf_internal_r+0x1700>
10017dfc:	10800c04 	addi	r2,r2,48
10017e00:	20bfffc5 	stb	r2,-1(r4)
10017e04:	a8ffff84 	addi	r3,r21,-2
10017e08:	d9001bc4 	addi	r4,sp,111
10017e0c:	9811883a 	mov	r8,r19
10017e10:	dc000717 	ldw	r16,28(sp)
10017e14:	db000f17 	ldw	r12,60(sp)
10017e18:	a027883a 	mov	r19,r20
10017e1c:	1902732e 	bgeu	r3,r4,100187ec <___vfprintf_internal_r+0x2124>
10017e20:	d90018c4 	addi	r4,sp,99
10017e24:	00000106 	br	10017e2c <___vfprintf_internal_r+0x1764>
10017e28:	18800003 	ldbu	r2,0(r3)
10017e2c:	21000044 	addi	r4,r4,1
10017e30:	20bfffc5 	stb	r2,-1(r4)
10017e34:	18c00044 	addi	r3,r3,1
10017e38:	d8801bc4 	addi	r2,sp,111
10017e3c:	18bffa1e 	bne	r3,r2,10017e28 <___vfprintf_internal_r+0x1760>
10017e40:	d8801c44 	addi	r2,sp,113
10017e44:	d8c018c4 	addi	r3,sp,99
10017e48:	1545c83a 	sub	r2,r2,r21
10017e4c:	1885883a 	add	r2,r3,r2
10017e50:	d8c01844 	addi	r3,sp,97
10017e54:	10c5c83a 	sub	r2,r2,r3
10017e58:	d8801115 	stw	r2,68(sp)
10017e5c:	d8c00817 	ldw	r3,32(sp)
10017e60:	d9001117 	ldw	r4,68(sp)
10017e64:	18800088 	cmpgei	r2,r3,2
10017e68:	1929883a 	add	r20,r3,r4
10017e6c:	10024926 	beq	r2,zero,10018794 <___vfprintf_internal_r+0x20cc>
10017e70:	d8800b17 	ldw	r2,44(sp)
10017e74:	a0a9883a 	add	r20,r20,r2
10017e78:	a02b883a 	mov	r21,r20
10017e7c:	a000010e 	bge	r20,zero,10017e84 <___vfprintf_internal_r+0x17bc>
10017e80:	002b883a 	mov	r21,zero
10017e84:	d8000715 	stw	zero,28(sp)
10017e88:	00013f06 	br	10018388 <___vfprintf_internal_r+0x1cc0>
10017e8c:	00800c04 	movi	r2,48
10017e90:	d8801585 	stb	r2,86(sp)
10017e94:	df0015c5 	stb	fp,87(sp)
10017e98:	63000094 	ori	r12,r12,2
10017e9c:	00800084 	movi	r2,2
10017ea0:	003ce406 	br	10017234 <___vfprintf_internal_r+0xb6c>
10017ea4:	d9400417 	ldw	r5,16(sp)
10017ea8:	20800017 	ldw	r2,0(r4)
10017eac:	d8c00615 	stw	r3,24(sp)
10017eb0:	2809d7fa 	srai	r4,r5,31
10017eb4:	11400015 	stw	r5,0(r2)
10017eb8:	11000115 	stw	r4,4(r2)
10017ebc:	003a3706 	br	1001679c <___vfprintf_internal_r+0xd4>
10017ec0:	0463c83a 	sub	r17,zero,r17
10017ec4:	d8800615 	stw	r2,24(sp)
10017ec8:	003b1806 	br	10016b2c <___vfprintf_internal_r+0x464>
10017ecc:	2039883a 	mov	fp,r4
10017ed0:	073eda16 	blt	zero,fp,10017a3c <___vfprintf_internal_r+0x1374>
10017ed4:	003ee306 	br	10017a64 <___vfprintf_internal_r+0x139c>
10017ed8:	9080004c 	andi	r2,r18,1
10017edc:	103ee81e 	bne	r2,zero,10017a80 <___vfprintf_internal_r+0x13b8>
10017ee0:	d8800817 	ldw	r2,32(sp)
10017ee4:	d9400717 	ldw	r5,28(sp)
10017ee8:	1105c83a 	sub	r2,r2,r4
10017eec:	2900500e 	bge	r5,r4,10018030 <___vfprintf_internal_r+0x1968>
10017ef0:	1039883a 	mov	fp,r2
10017ef4:	003f0006 	br	10017af8 <___vfprintf_internal_r+0x1430>
10017ef8:	d9000517 	ldw	r4,20(sp)
10017efc:	d9801c04 	addi	r6,sp,112
10017f00:	980b883a 	mov	r5,r19
10017f04:	001ce080 	call	1001ce08 <__sprint_r>
10017f08:	103ace1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017f0c:	df001d17 	ldw	fp,116(sp)
10017f10:	d8c01e17 	ldw	r3,120(sp)
10017f14:	da002b04 	addi	r8,sp,172
10017f18:	e7000044 	addi	fp,fp,1
10017f1c:	b815883a 	mov	r10,r23
10017f20:	003e4f06 	br	10017860 <___vfprintf_internal_r+0x1198>
10017f24:	b7000043 	ldbu	fp,1(r22)
10017f28:	63000814 	ori	r12,r12,32
10017f2c:	b5800044 	addi	r22,r22,1
10017f30:	e2803fcc 	andi	r10,fp,255
10017f34:	5280201c 	xori	r10,r10,128
10017f38:	52bfe004 	addi	r10,r10,-128
10017f3c:	003a3d06 	br	10016834 <___vfprintf_internal_r+0x16c>
10017f40:	d9000517 	ldw	r4,20(sp)
10017f44:	d9801c04 	addi	r6,sp,112
10017f48:	980b883a 	mov	r5,r19
10017f4c:	001ce080 	call	1001ce08 <__sprint_r>
10017f50:	103abc1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10017f54:	d8c01e17 	ldw	r3,120(sp)
10017f58:	b811883a 	mov	r8,r23
10017f5c:	003d4806 	br	10017480 <___vfprintf_internal_r+0xdb8>
10017f60:	0039883a 	mov	fp,zero
10017f64:	003ec006 	br	10017a68 <___vfprintf_internal_r+0x13a0>
10017f68:	588001f0 	cmpltui	r2,r11,7
10017f6c:	5829883a 	mov	r20,r11
10017f70:	10013b26 	beq	r2,zero,10018460 <___vfprintf_internal_r+0x1d98>
10017f74:	040400b4 	movhi	r16,4098
10017f78:	a02b883a 	mov	r21,r20
10017f7c:	dc800615 	stw	r18,24(sp)
10017f80:	84169404 	addi	r16,r16,23120
10017f84:	003b6906 	br	10016d2c <___vfprintf_internal_r+0x664>
10017f88:	030400b4 	movhi	r12,4098
10017f8c:	e1000450 	cmplti	r4,fp,17
10017f90:	63169684 	addi	r12,r12,23130
10017f94:	d8801d17 	ldw	r2,116(sp)
10017f98:	20010b1e 	bne	r4,zero,100183c8 <___vfprintf_internal_r+0x1d00>
10017f9c:	b009883a 	mov	r4,r22
10017fa0:	dc000e15 	stw	r16,56(sp)
10017fa4:	dc800f15 	stw	r18,60(sp)
10017fa8:	882d883a 	mov	r22,r17
10017fac:	05000404 	movi	r20,16
10017fb0:	e023883a 	mov	r17,fp
10017fb4:	dc000517 	ldw	r16,20(sp)
10017fb8:	6025883a 	mov	r18,r12
10017fbc:	2039883a 	mov	fp,r4
10017fc0:	00000406 	br	10017fd4 <___vfprintf_internal_r+0x190c>
10017fc4:	42000204 	addi	r8,r8,8
10017fc8:	8c7ffc04 	addi	r17,r17,-16
10017fcc:	89000448 	cmpgei	r4,r17,17
10017fd0:	2000f626 	beq	r4,zero,100183ac <___vfprintf_internal_r+0x1ce4>
10017fd4:	10800044 	addi	r2,r2,1
10017fd8:	18c00404 	addi	r3,r3,16
10017fdc:	44800015 	stw	r18,0(r8)
10017fe0:	45000115 	stw	r20,4(r8)
10017fe4:	d8c01e15 	stw	r3,120(sp)
10017fe8:	d8801d15 	stw	r2,116(sp)
10017fec:	11000208 	cmpgei	r4,r2,8
10017ff0:	203ff426 	beq	r4,zero,10017fc4 <___vfprintf_internal_r+0x18fc>
10017ff4:	d9801c04 	addi	r6,sp,112
10017ff8:	980b883a 	mov	r5,r19
10017ffc:	8009883a 	mov	r4,r16
10018000:	001ce080 	call	1001ce08 <__sprint_r>
10018004:	103a8f1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018008:	d8c01e17 	ldw	r3,120(sp)
1001800c:	d8801d17 	ldw	r2,116(sp)
10018010:	b811883a 	mov	r8,r23
10018014:	003fec06 	br	10017fc8 <___vfprintf_internal_r+0x1900>
10018018:	d8800617 	ldw	r2,24(sp)
1001801c:	10800017 	ldw	r2,0(r2)
10018020:	d8c00615 	stw	r3,24(sp)
10018024:	d8c00417 	ldw	r3,16(sp)
10018028:	10c00015 	stw	r3,0(r2)
1001802c:	0039db06 	br	1001679c <___vfprintf_internal_r+0xd4>
10018030:	d9000817 	ldw	r4,32(sp)
10018034:	d9400717 	ldw	r5,28(sp)
10018038:	2179c83a 	sub	fp,r4,r5
1001803c:	003ea106 	br	10017ac4 <___vfprintf_internal_r+0x13fc>
10018040:	d9000517 	ldw	r4,20(sp)
10018044:	d9801c04 	addi	r6,sp,112
10018048:	980b883a 	mov	r5,r19
1001804c:	001ce080 	call	1001ce08 <__sprint_r>
10018050:	103a7c1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018054:	d8c01e17 	ldw	r3,120(sp)
10018058:	dd001d17 	ldw	r20,116(sp)
1001805c:	b815883a 	mov	r10,r23
10018060:	003ddf06 	br	100177e0 <___vfprintf_internal_r+0x1118>
10018064:	d9000517 	ldw	r4,20(sp)
10018068:	d9801c04 	addi	r6,sp,112
1001806c:	980b883a 	mov	r5,r19
10018070:	001ce080 	call	1001ce08 <__sprint_r>
10018074:	103a731e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018078:	d8c01e17 	ldw	r3,120(sp)
1001807c:	dd001d17 	ldw	r20,116(sp)
10018080:	b815883a 	mov	r10,r23
10018084:	003dcb06 	br	100177b4 <___vfprintf_internal_r+0x10ec>
10018088:	d8801d17 	ldw	r2,116(sp)
1001808c:	014400b4 	movhi	r5,4098
10018090:	29569604 	addi	r5,r5,23128
10018094:	10800044 	addi	r2,r2,1
10018098:	18c00044 	addi	r3,r3,1
1001809c:	41400015 	stw	r5,0(r8)
100180a0:	01400044 	movi	r5,1
100180a4:	d8801d15 	stw	r2,116(sp)
100180a8:	41400115 	stw	r5,4(r8)
100180ac:	d8c01e15 	stw	r3,120(sp)
100180b0:	10800208 	cmpgei	r2,r2,8
100180b4:	103d871e 	bne	r2,zero,100176d4 <___vfprintf_internal_r+0x100c>
100180b8:	42000204 	addi	r8,r8,8
100180bc:	003d8d06 	br	100176f4 <___vfprintf_internal_r+0x102c>
100180c0:	d9000517 	ldw	r4,20(sp)
100180c4:	d9801c04 	addi	r6,sp,112
100180c8:	980b883a 	mov	r5,r19
100180cc:	dac01015 	stw	r11,64(sp)
100180d0:	db400f15 	stw	r13,60(sp)
100180d4:	db800e15 	stw	r14,56(sp)
100180d8:	001ce080 	call	1001ce08 <__sprint_r>
100180dc:	103a591e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100180e0:	d8c01e17 	ldw	r3,120(sp)
100180e4:	b811883a 	mov	r8,r23
100180e8:	dac01017 	ldw	r11,64(sp)
100180ec:	db400f17 	ldw	r13,60(sp)
100180f0:	db800e17 	ldw	r14,56(sp)
100180f4:	003b1806 	br	10016d58 <___vfprintf_internal_r+0x690>
100180f8:	d9000517 	ldw	r4,20(sp)
100180fc:	d9801c04 	addi	r6,sp,112
10018100:	980b883a 	mov	r5,r19
10018104:	001ce080 	call	1001ce08 <__sprint_r>
10018108:	103a4e1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
1001810c:	b811883a 	mov	r8,r23
10018110:	003cc706 	br	10017430 <___vfprintf_internal_r+0xd68>
10018114:	d9000517 	ldw	r4,20(sp)
10018118:	d9801c04 	addi	r6,sp,112
1001811c:	980b883a 	mov	r5,r19
10018120:	dac00e15 	stw	r11,56(sp)
10018124:	001ce080 	call	1001ce08 <__sprint_r>
10018128:	103a461e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
1001812c:	d8c01e17 	ldw	r3,120(sp)
10018130:	b811883a 	mov	r8,r23
10018134:	dac00e17 	ldw	r11,56(sp)
10018138:	003b2406 	br	10016dcc <___vfprintf_internal_r+0x704>
1001813c:	10c00060 	cmpeqi	r3,r2,1
10018140:	9019883a 	mov	r12,r18
10018144:	183bed26 	beq	r3,zero,100170fc <___vfprintf_internal_r+0xa34>
10018148:	003c6d06 	br	10017300 <___vfprintf_internal_r+0xc38>
1001814c:	d8800d17 	ldw	r2,52(sp)
10018150:	d9400b17 	ldw	r5,44(sp)
10018154:	40800015 	stw	r2,0(r8)
10018158:	d8801d17 	ldw	r2,116(sp)
1001815c:	28c7883a 	add	r3,r5,r3
10018160:	41400115 	stw	r5,4(r8)
10018164:	10800044 	addi	r2,r2,1
10018168:	d8c01e15 	stw	r3,120(sp)
1001816c:	d8801d15 	stw	r2,116(sp)
10018170:	11400208 	cmpgei	r5,r2,8
10018174:	2800d31e 	bne	r5,zero,100184c4 <___vfprintf_internal_r+0x1dfc>
10018178:	42000204 	addi	r8,r8,8
1001817c:	203d6e0e 	bge	r4,zero,10017738 <___vfprintf_internal_r+0x1070>
10018180:	030400b4 	movhi	r12,4098
10018184:	217ffc08 	cmpgei	r5,r4,-16
10018188:	63169684 	addi	r12,r12,23130
1001818c:	0129c83a 	sub	r20,zero,r4
10018190:	28014a1e 	bne	r5,zero,100186bc <___vfprintf_internal_r+0x1ff4>
10018194:	dc000715 	stw	r16,28(sp)
10018198:	07000404 	movi	fp,16
1001819c:	a021883a 	mov	r16,r20
100181a0:	8829883a 	mov	r20,r17
100181a4:	6023883a 	mov	r17,r12
100181a8:	00000406 	br	100181bc <___vfprintf_internal_r+0x1af4>
100181ac:	42000204 	addi	r8,r8,8
100181b0:	843ffc04 	addi	r16,r16,-16
100181b4:	81000448 	cmpgei	r4,r16,17
100181b8:	20013c26 	beq	r4,zero,100186ac <___vfprintf_internal_r+0x1fe4>
100181bc:	10800044 	addi	r2,r2,1
100181c0:	18c00404 	addi	r3,r3,16
100181c4:	44400015 	stw	r17,0(r8)
100181c8:	47000115 	stw	fp,4(r8)
100181cc:	d8c01e15 	stw	r3,120(sp)
100181d0:	d8801d15 	stw	r2,116(sp)
100181d4:	11000208 	cmpgei	r4,r2,8
100181d8:	203ff426 	beq	r4,zero,100181ac <___vfprintf_internal_r+0x1ae4>
100181dc:	d9000517 	ldw	r4,20(sp)
100181e0:	d9801c04 	addi	r6,sp,112
100181e4:	980b883a 	mov	r5,r19
100181e8:	001ce080 	call	1001ce08 <__sprint_r>
100181ec:	103a151e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100181f0:	d8c01e17 	ldw	r3,120(sp)
100181f4:	d8801d17 	ldw	r2,116(sp)
100181f8:	b811883a 	mov	r8,r23
100181fc:	003fec06 	br	100181b0 <___vfprintf_internal_r+0x1ae8>
10018200:	8009883a 	mov	r4,r16
10018204:	00163ac0 	call	100163ac <strlen>
10018208:	1029883a 	mov	r20,r2
1001820c:	102b883a 	mov	r21,r2
10018210:	dc800615 	stw	r18,24(sp)
10018214:	db000717 	ldw	r12,28(sp)
10018218:	da000e17 	ldw	r8,56(sp)
1001821c:	003ac306 	br	10016d2c <___vfprintf_internal_r+0x664>
10018220:	8817883a 	mov	r11,r17
10018224:	9019883a 	mov	r12,r18
10018228:	dc400e17 	ldw	r17,56(sp)
1001822c:	dc800717 	ldw	r18,28(sp)
10018230:	a7000044 	addi	fp,r20,1
10018234:	50800204 	addi	r2,r10,8
10018238:	1ac7883a 	add	r3,r3,r11
1001823c:	53000015 	stw	r12,0(r10)
10018240:	52c00115 	stw	r11,4(r10)
10018244:	d8c01e15 	stw	r3,120(sp)
10018248:	df001d15 	stw	fp,116(sp)
1001824c:	e1000208 	cmpgei	r4,fp,8
10018250:	203f291e 	bne	r4,zero,10017ef8 <___vfprintf_internal_r+0x1830>
10018254:	e7000044 	addi	fp,fp,1
10018258:	12000204 	addi	r8,r2,8
1001825c:	1015883a 	mov	r10,r2
10018260:	003d7f06 	br	10017860 <___vfprintf_internal_r+0x1198>
10018264:	8819883a 	mov	r12,r17
10018268:	dc400717 	ldw	r17,28(sp)
1001826c:	10800044 	addi	r2,r2,1
10018270:	1c07883a 	add	r3,r3,r16
10018274:	d8801d15 	stw	r2,116(sp)
10018278:	43000015 	stw	r12,0(r8)
1001827c:	44000115 	stw	r16,4(r8)
10018280:	d8c01e15 	stw	r3,120(sp)
10018284:	10800208 	cmpgei	r2,r2,8
10018288:	103add26 	beq	r2,zero,10016e00 <___vfprintf_internal_r+0x738>
1001828c:	003d3306 	br	1001775c <___vfprintf_internal_r+0x1094>
10018290:	d8800615 	stw	r2,24(sp)
10018294:	0029883a 	mov	r20,zero
10018298:	0005883a 	mov	r2,zero
1001829c:	003be506 	br	10017234 <___vfprintf_internal_r+0xb6c>
100182a0:	d8800615 	stw	r2,24(sp)
100182a4:	0029883a 	mov	r20,zero
100182a8:	00800044 	movi	r2,1
100182ac:	003be106 	br	10017234 <___vfprintf_internal_r+0xb6c>
100182b0:	d8801a04 	addi	r2,sp,104
100182b4:	d8800315 	stw	r2,12(sp)
100182b8:	d9400917 	ldw	r5,36(sp)
100182bc:	d8801704 	addi	r2,sp,92
100182c0:	d9000517 	ldw	r4,20(sp)
100182c4:	d8800215 	stw	r2,8(sp)
100182c8:	d8801604 	addi	r2,sp,88
100182cc:	dac00015 	stw	r11,0(sp)
100182d0:	d8800115 	stw	r2,4(sp)
100182d4:	01c000c4 	movi	r7,3
100182d8:	a80d883a 	mov	r6,r21
100182dc:	da001215 	stw	r8,72(sp)
100182e0:	db001015 	stw	r12,64(sp)
100182e4:	dac00815 	stw	r11,32(sp)
100182e8:	0018d2c0 	call	10018d2c <_dtoa_r>
100182ec:	dac00817 	ldw	r11,32(sp)
100182f0:	1021883a 	mov	r16,r2
100182f4:	db001017 	ldw	r12,64(sp)
100182f8:	12e9883a 	add	r20,r2,r11
100182fc:	80800007 	ldb	r2,0(r16)
10018300:	da001217 	ldw	r8,72(sp)
10018304:	10800c20 	cmpeqi	r2,r2,48
10018308:	10005b1e 	bne	r2,zero,10018478 <___vfprintf_internal_r+0x1db0>
1001830c:	d8801617 	ldw	r2,88(sp)
10018310:	a0a9883a 	add	r20,r20,r2
10018314:	d9000917 	ldw	r4,36(sp)
10018318:	000d883a 	mov	r6,zero
1001831c:	000f883a 	mov	r7,zero
10018320:	a80b883a 	mov	r5,r21
10018324:	da001215 	stw	r8,72(sp)
10018328:	dac01015 	stw	r11,64(sp)
1001832c:	db000815 	stw	r12,32(sp)
10018330:	002065c0 	call	1002065c <__eqdf2>
10018334:	db000817 	ldw	r12,32(sp)
10018338:	dac01017 	ldw	r11,64(sp)
1001833c:	da001217 	ldw	r8,72(sp)
10018340:	1000891e 	bne	r2,zero,10018568 <___vfprintf_internal_r+0x1ea0>
10018344:	a005883a 	mov	r2,r20
10018348:	1405c83a 	sub	r2,r2,r16
1001834c:	d8c00717 	ldw	r3,28(sp)
10018350:	d8800815 	stw	r2,32(sp)
10018354:	d8801617 	ldw	r2,88(sp)
10018358:	18c011d8 	cmpnei	r3,r3,71
1001835c:	d8800715 	stw	r2,28(sp)
10018360:	183e8426 	beq	r3,zero,10017d74 <___vfprintf_internal_r+0x16ac>
10018364:	d8800f17 	ldw	r2,60(sp)
10018368:	103e8726 	beq	r2,zero,10017d88 <___vfprintf_internal_r+0x16c0>
1001836c:	d8c00717 	ldw	r3,28(sp)
10018370:	6080004c 	andi	r2,r12,1
10018374:	12c4b03a 	or	r2,r2,r11
10018378:	00c10d0e 	bge	zero,r3,100187b0 <___vfprintf_internal_r+0x20e8>
1001837c:	1000f11e 	bne	r2,zero,10018744 <___vfprintf_internal_r+0x207c>
10018380:	dd000717 	ldw	r20,28(sp)
10018384:	a02b883a 	mov	r21,r20
10018388:	d8800e07 	ldb	r2,56(sp)
1001838c:	10007f26 	beq	r2,zero,1001858c <___vfprintf_internal_r+0x1ec4>
10018390:	00800b44 	movi	r2,45
10018394:	d8801545 	stb	r2,85(sp)
10018398:	0017883a 	mov	r11,zero
1001839c:	003be506 	br	10017334 <___vfprintf_internal_r+0xc6c>
100183a0:	040400b4 	movhi	r16,4098
100183a4:	84168604 	addi	r16,r16,23064
100183a8:	003b3406 	br	1001707c <___vfprintf_internal_r+0x9b4>
100183ac:	9019883a 	mov	r12,r18
100183b0:	dc000e17 	ldw	r16,56(sp)
100183b4:	dc800f17 	ldw	r18,60(sp)
100183b8:	e009883a 	mov	r4,fp
100183bc:	8839883a 	mov	fp,r17
100183c0:	b023883a 	mov	r17,r22
100183c4:	202d883a 	mov	r22,r4
100183c8:	10800044 	addi	r2,r2,1
100183cc:	1f07883a 	add	r3,r3,fp
100183d0:	d8801d15 	stw	r2,116(sp)
100183d4:	43000015 	stw	r12,0(r8)
100183d8:	47000115 	stw	fp,4(r8)
100183dc:	d8c01e15 	stw	r3,120(sp)
100183e0:	10800208 	cmpgei	r2,r2,8
100183e4:	1000421e 	bne	r2,zero,100184f0 <___vfprintf_internal_r+0x1e28>
100183e8:	42000204 	addi	r8,r8,8
100183ec:	003da106 	br	10017a74 <___vfprintf_internal_r+0x13ac>
100183f0:	00800b44 	movi	r2,45
100183f4:	d8801545 	stb	r2,85(sp)
100183f8:	03400b44 	movi	r13,45
100183fc:	003b1b06 	br	1001706c <___vfprintf_internal_r+0x9a4>
10018400:	8819883a 	mov	r12,r17
10018404:	dc400717 	ldw	r17,28(sp)
10018408:	10800044 	addi	r2,r2,1
1001840c:	1f07883a 	add	r3,r3,fp
10018410:	d8801d15 	stw	r2,116(sp)
10018414:	43000015 	stw	r12,0(r8)
10018418:	47000115 	stw	fp,4(r8)
1001841c:	d8c01e15 	stw	r3,120(sp)
10018420:	10800208 	cmpgei	r2,r2,8
10018424:	103a7626 	beq	r2,zero,10016e00 <___vfprintf_internal_r+0x738>
10018428:	003ccc06 	br	1001775c <___vfprintf_internal_r+0x1094>
1001842c:	d9000517 	ldw	r4,20(sp)
10018430:	d9801c04 	addi	r6,sp,112
10018434:	980b883a 	mov	r5,r19
10018438:	001ce080 	call	1001ce08 <__sprint_r>
1001843c:	1039811e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018440:	d9001617 	ldw	r4,88(sp)
10018444:	d8c01e17 	ldw	r3,120(sp)
10018448:	b811883a 	mov	r8,r23
1001844c:	003d9806 	br	10017ab0 <___vfprintf_internal_r+0x13e8>
10018450:	1560003c 	xorhi	r21,r2,32768
10018454:	00800b44 	movi	r2,45
10018458:	d8800e05 	stb	r2,56(sp)
1001845c:	003e1d06 	br	10017cd4 <___vfprintf_internal_r+0x160c>
10018460:	05000184 	movi	r20,6
10018464:	003ec306 	br	10017f74 <___vfprintf_internal_r+0x18ac>
10018468:	002b883a 	mov	r21,zero
1001846c:	003a0706 	br	10016c8c <___vfprintf_internal_r+0x5c4>
10018470:	d9401545 	stb	r5,85(sp)
10018474:	00399106 	br	10016abc <___vfprintf_internal_r+0x3f4>
10018478:	d9000917 	ldw	r4,36(sp)
1001847c:	000d883a 	mov	r6,zero
10018480:	000f883a 	mov	r7,zero
10018484:	a80b883a 	mov	r5,r21
10018488:	da001215 	stw	r8,72(sp)
1001848c:	dac01015 	stw	r11,64(sp)
10018490:	db000815 	stw	r12,32(sp)
10018494:	002065c0 	call	1002065c <__eqdf2>
10018498:	db000817 	ldw	r12,32(sp)
1001849c:	dac01017 	ldw	r11,64(sp)
100184a0:	da001217 	ldw	r8,72(sp)
100184a4:	103f9926 	beq	r2,zero,1001830c <___vfprintf_internal_r+0x1c44>
100184a8:	00800044 	movi	r2,1
100184ac:	12c5c83a 	sub	r2,r2,r11
100184b0:	d8801615 	stw	r2,88(sp)
100184b4:	003f9606 	br	10018310 <___vfprintf_internal_r+0x1c48>
100184b8:	583e011e 	bne	r11,zero,10017cc0 <___vfprintf_internal_r+0x15f8>
100184bc:	02c00044 	movi	r11,1
100184c0:	003dff06 	br	10017cc0 <___vfprintf_internal_r+0x15f8>
100184c4:	d9000517 	ldw	r4,20(sp)
100184c8:	d9801c04 	addi	r6,sp,112
100184cc:	980b883a 	mov	r5,r19
100184d0:	001ce080 	call	1001ce08 <__sprint_r>
100184d4:	10395b1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100184d8:	d9001617 	ldw	r4,88(sp)
100184dc:	d8c01e17 	ldw	r3,120(sp)
100184e0:	d8801d17 	ldw	r2,116(sp)
100184e4:	b811883a 	mov	r8,r23
100184e8:	203c930e 	bge	r4,zero,10017738 <___vfprintf_internal_r+0x1070>
100184ec:	003f2406 	br	10018180 <___vfprintf_internal_r+0x1ab8>
100184f0:	d9000517 	ldw	r4,20(sp)
100184f4:	d9801c04 	addi	r6,sp,112
100184f8:	980b883a 	mov	r5,r19
100184fc:	001ce080 	call	1001ce08 <__sprint_r>
10018500:	1039501e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018504:	d8c01e17 	ldw	r3,120(sp)
10018508:	b811883a 	mov	r8,r23
1001850c:	003d5906 	br	10017a74 <___vfprintf_internal_r+0x13ac>
10018510:	d8801a04 	addi	r2,sp,104
10018514:	d8800315 	stw	r2,12(sp)
10018518:	d9400917 	ldw	r5,36(sp)
1001851c:	d8801704 	addi	r2,sp,92
10018520:	d9000517 	ldw	r4,20(sp)
10018524:	5d000044 	addi	r20,r11,1
10018528:	d8800215 	stw	r2,8(sp)
1001852c:	d8801604 	addi	r2,sp,88
10018530:	d8800115 	stw	r2,4(sp)
10018534:	dd000015 	stw	r20,0(sp)
10018538:	01c00084 	movi	r7,2
1001853c:	a80d883a 	mov	r6,r21
10018540:	dac00815 	stw	r11,32(sp)
10018544:	0018d2c0 	call	10018d2c <_dtoa_r>
10018548:	dac00817 	ldw	r11,32(sp)
1001854c:	db001017 	ldw	r12,64(sp)
10018550:	da001217 	ldw	r8,72(sp)
10018554:	1021883a 	mov	r16,r2
10018558:	e08011d8 	cmpnei	r2,fp,71
1001855c:	103dfb26 	beq	r2,zero,10017d4c <___vfprintf_internal_r+0x1684>
10018560:	8529883a 	add	r20,r16,r20
10018564:	003f6b06 	br	10018314 <___vfprintf_internal_r+0x1c4c>
10018568:	d8801a17 	ldw	r2,104(sp)
1001856c:	01000c04 	movi	r4,48
10018570:	153f752e 	bgeu	r2,r20,10018348 <___vfprintf_internal_r+0x1c80>
10018574:	10c00044 	addi	r3,r2,1
10018578:	d8c01a15 	stw	r3,104(sp)
1001857c:	11000005 	stb	r4,0(r2)
10018580:	d8801a17 	ldw	r2,104(sp)
10018584:	153ffb36 	bltu	r2,r20,10018574 <___vfprintf_internal_r+0x1eac>
10018588:	003f6f06 	br	10018348 <___vfprintf_internal_r+0x1c80>
1001858c:	db401543 	ldbu	r13,85(sp)
10018590:	0017883a 	mov	r11,zero
10018594:	003b6306 	br	10017324 <___vfprintf_internal_r+0xc5c>
10018598:	d8800717 	ldw	r2,28(sp)
1001859c:	d8c00817 	ldw	r3,32(sp)
100185a0:	10c02216 	blt	r2,r3,1001862c <___vfprintf_internal_r+0x1f64>
100185a4:	6300004c 	andi	r12,r12,1
100185a8:	60005f1e 	bne	r12,zero,10018728 <___vfprintf_internal_r+0x2060>
100185ac:	102b883a 	mov	r21,r2
100185b0:	1000010e 	bge	r2,zero,100185b8 <___vfprintf_internal_r+0x1ef0>
100185b4:	002b883a 	mov	r21,zero
100185b8:	dd000717 	ldw	r20,28(sp)
100185bc:	070019c4 	movi	fp,103
100185c0:	003f7106 	br	10018388 <___vfprintf_internal_r+0x1cc0>
100185c4:	d9000517 	ldw	r4,20(sp)
100185c8:	d9801c04 	addi	r6,sp,112
100185cc:	980b883a 	mov	r5,r19
100185d0:	001ce080 	call	1001ce08 <__sprint_r>
100185d4:	10391b1e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100185d8:	d8c01e17 	ldw	r3,120(sp)
100185dc:	b811883a 	mov	r8,r23
100185e0:	e03d210e 	bge	fp,zero,10017a68 <___vfprintf_internal_r+0x13a0>
100185e4:	003e5e06 	br	10017f60 <___vfprintf_internal_r+0x1898>
100185e8:	02c00184 	movi	r11,6
100185ec:	003db406 	br	10017cc0 <___vfprintf_internal_r+0x15f8>
100185f0:	d9000517 	ldw	r4,20(sp)
100185f4:	d9801c04 	addi	r6,sp,112
100185f8:	980b883a 	mov	r5,r19
100185fc:	001ce080 	call	1001ce08 <__sprint_r>
10018600:	1039101e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
10018604:	d8801617 	ldw	r2,88(sp)
10018608:	d9000817 	ldw	r4,32(sp)
1001860c:	d8c01e17 	ldw	r3,120(sp)
10018610:	b811883a 	mov	r8,r23
10018614:	2085c83a 	sub	r2,r4,r2
10018618:	003d3706 	br	10017af8 <___vfprintf_internal_r+0x1430>
1001861c:	582b883a 	mov	r21,r11
10018620:	dc800615 	stw	r18,24(sp)
10018624:	5829883a 	mov	r20,r11
10018628:	0039c006 	br	10016d2c <___vfprintf_internal_r+0x664>
1001862c:	d8800817 	ldw	r2,32(sp)
10018630:	d8c00b17 	ldw	r3,44(sp)
10018634:	10e9883a 	add	r20,r2,r3
10018638:	d8800717 	ldw	r2,28(sp)
1001863c:	00800316 	blt	zero,r2,1001864c <___vfprintf_internal_r+0x1f84>
10018640:	d8800717 	ldw	r2,28(sp)
10018644:	a0b9c83a 	sub	fp,r20,r2
10018648:	e5000044 	addi	r20,fp,1
1001864c:	a02b883a 	mov	r21,r20
10018650:	a0003a16 	blt	r20,zero,1001873c <___vfprintf_internal_r+0x2074>
10018654:	070019c4 	movi	fp,103
10018658:	003f4b06 	br	10018388 <___vfprintf_internal_r+0x1cc0>
1001865c:	d9401545 	stb	r5,85(sp)
10018660:	003ac506 	br	10017178 <___vfprintf_internal_r+0xab0>
10018664:	d9401545 	stb	r5,85(sp)
10018668:	003a2506 	br	10016f00 <___vfprintf_internal_r+0x838>
1001866c:	d9401545 	stb	r5,85(sp)
10018670:	003a3306 	br	10016f40 <___vfprintf_internal_r+0x878>
10018674:	d9401545 	stb	r5,85(sp)
10018678:	00398806 	br	10016c9c <___vfprintf_internal_r+0x5d4>
1001867c:	d9401545 	stb	r5,85(sp)
10018680:	00395f06 	br	10016c00 <___vfprintf_internal_r+0x538>
10018684:	d9401545 	stb	r5,85(sp)
10018688:	00394b06 	br	10016bb8 <___vfprintf_internal_r+0x4f0>
1001868c:	d9401545 	stb	r5,85(sp)
10018690:	003a3b06 	br	10016f80 <___vfprintf_internal_r+0x8b8>
10018694:	d9401545 	stb	r5,85(sp)
10018698:	003a8106 	br	100170a0 <___vfprintf_internal_r+0x9d8>
1001869c:	d9401545 	stb	r5,85(sp)
100186a0:	003a4706 	br	10016fc0 <___vfprintf_internal_r+0x8f8>
100186a4:	d9401545 	stb	r5,85(sp)
100186a8:	003ac506 	br	100171c0 <___vfprintf_internal_r+0xaf8>
100186ac:	8819883a 	mov	r12,r17
100186b0:	a023883a 	mov	r17,r20
100186b4:	8029883a 	mov	r20,r16
100186b8:	dc000717 	ldw	r16,28(sp)
100186bc:	10800044 	addi	r2,r2,1
100186c0:	1d07883a 	add	r3,r3,r20
100186c4:	43000015 	stw	r12,0(r8)
100186c8:	45000115 	stw	r20,4(r8)
100186cc:	d8c01e15 	stw	r3,120(sp)
100186d0:	d8801d15 	stw	r2,116(sp)
100186d4:	11000208 	cmpgei	r4,r2,8
100186d8:	203c1626 	beq	r4,zero,10017734 <___vfprintf_internal_r+0x106c>
100186dc:	d9000517 	ldw	r4,20(sp)
100186e0:	d9801c04 	addi	r6,sp,112
100186e4:	980b883a 	mov	r5,r19
100186e8:	001ce080 	call	1001ce08 <__sprint_r>
100186ec:	1038d51e 	bne	r2,zero,10016a44 <___vfprintf_internal_r+0x37c>
100186f0:	d8c01e17 	ldw	r3,120(sp)
100186f4:	d8801d17 	ldw	r2,116(sp)
100186f8:	b811883a 	mov	r8,r23
100186fc:	003c0e06 	br	10017738 <___vfprintf_internal_r+0x1070>
10018700:	00bfffc4 	movi	r2,-1
10018704:	d8800415 	stw	r2,16(sp)
10018708:	0038d106 	br	10016a50 <___vfprintf_internal_r+0x388>
1001870c:	00800c04 	movi	r2,48
10018710:	a0c00c04 	addi	r3,r20,48
10018714:	d88018c5 	stb	r2,99(sp)
10018718:	00800104 	movi	r2,4
1001871c:	d8c01905 	stb	r3,100(sp)
10018720:	d8801115 	stw	r2,68(sp)
10018724:	003dcd06 	br	10017e5c <___vfprintf_internal_r+0x1794>
10018728:	d8800717 	ldw	r2,28(sp)
1001872c:	d8c00b17 	ldw	r3,44(sp)
10018730:	10e9883a 	add	r20,r2,r3
10018734:	a02b883a 	mov	r21,r20
10018738:	a03fc60e 	bge	r20,zero,10018654 <___vfprintf_internal_r+0x1f8c>
1001873c:	002b883a 	mov	r21,zero
10018740:	003fc406 	br	10018654 <___vfprintf_internal_r+0x1f8c>
10018744:	d8800b17 	ldw	r2,44(sp)
10018748:	1885883a 	add	r2,r3,r2
1001874c:	12e9883a 	add	r20,r2,r11
10018750:	a02b883a 	mov	r21,r20
10018754:	a03f0c0e 	bge	r20,zero,10018388 <___vfprintf_internal_r+0x1cc0>
10018758:	002b883a 	mov	r21,zero
1001875c:	003f0a06 	br	10018388 <___vfprintf_internal_r+0x1cc0>
10018760:	d8800a17 	ldw	r2,40(sp)
10018764:	10001d16 	blt	r2,zero,100187dc <___vfprintf_internal_r+0x2114>
10018768:	db401543 	ldbu	r13,85(sp)
1001876c:	e0801210 	cmplti	r2,fp,72
10018770:	1000171e 	bne	r2,zero,100187d0 <___vfprintf_internal_r+0x2108>
10018774:	040400b4 	movhi	r16,4098
10018778:	84168904 	addi	r16,r16,23076
1001877c:	003a3f06 	br	1001707c <___vfprintf_internal_r+0x9b4>
10018780:	00c00044 	movi	r3,1
10018784:	18a9c83a 	sub	r20,r3,r2
10018788:	00800b44 	movi	r2,45
1001878c:	d8801885 	stb	r2,98(sp)
10018790:	003d8406 	br	10017da4 <___vfprintf_internal_r+0x16dc>
10018794:	6080004c 	andi	r2,r12,1
10018798:	d8800715 	stw	r2,28(sp)
1001879c:	103db41e 	bne	r2,zero,10017e70 <___vfprintf_internal_r+0x17a8>
100187a0:	003feb06 	br	10018750 <___vfprintf_internal_r+0x2088>
100187a4:	4005883a 	mov	r2,r8
100187a8:	63169684 	addi	r12,r12,23130
100187ac:	003ea206 	br	10018238 <___vfprintf_internal_r+0x1b70>
100187b0:	1000031e 	bne	r2,zero,100187c0 <___vfprintf_internal_r+0x20f8>
100187b4:	05400044 	movi	r21,1
100187b8:	05000044 	movi	r20,1
100187bc:	003ef206 	br	10018388 <___vfprintf_internal_r+0x1cc0>
100187c0:	d8800b17 	ldw	r2,44(sp)
100187c4:	10800044 	addi	r2,r2,1
100187c8:	12e9883a 	add	r20,r2,r11
100187cc:	003fe006 	br	10018750 <___vfprintf_internal_r+0x2088>
100187d0:	040400b4 	movhi	r16,4098
100187d4:	84168804 	addi	r16,r16,23072
100187d8:	003a2806 	br	1001707c <___vfprintf_internal_r+0x9b4>
100187dc:	00800b44 	movi	r2,45
100187e0:	d8801545 	stb	r2,85(sp)
100187e4:	03400b44 	movi	r13,45
100187e8:	003fe006 	br	1001876c <___vfprintf_internal_r+0x20a4>
100187ec:	00800084 	movi	r2,2
100187f0:	d8801115 	stw	r2,68(sp)
100187f4:	003d9906 	br	10017e5c <___vfprintf_internal_r+0x1794>
100187f8:	d8800617 	ldw	r2,24(sp)
100187fc:	12c00017 	ldw	r11,0(r2)
10018800:	10800104 	addi	r2,r2,4
10018804:	5800010e 	bge	r11,zero,1001880c <___vfprintf_internal_r+0x2144>
10018808:	02ffffc4 	movi	r11,-1
1001880c:	b7000043 	ldbu	fp,1(r22)
10018810:	d8800615 	stw	r2,24(sp)
10018814:	182d883a 	mov	r22,r3
10018818:	e2803fcc 	andi	r10,fp,255
1001881c:	5280201c 	xori	r10,r10,128
10018820:	52bfe004 	addi	r10,r10,-128
10018824:	00380306 	br	10016834 <___vfprintf_internal_r+0x16c>

10018828 <__vfprintf_internal>:
10018828:	008400f4 	movhi	r2,4099
1001882c:	300f883a 	mov	r7,r6
10018830:	280d883a 	mov	r6,r5
10018834:	200b883a 	mov	r5,r4
10018838:	11211717 	ldw	r4,-31652(r2)
1001883c:	00166c81 	jmpi	100166c8 <___vfprintf_internal_r>

10018840 <__sbprintf>:
10018840:	2880030b 	ldhu	r2,12(r5)
10018844:	2b001917 	ldw	r12,100(r5)
10018848:	2ac0038b 	ldhu	r11,14(r5)
1001884c:	2a800717 	ldw	r10,28(r5)
10018850:	2a400917 	ldw	r9,36(r5)
10018854:	defee204 	addi	sp,sp,-1144
10018858:	da001a04 	addi	r8,sp,104
1001885c:	00c10004 	movi	r3,1024
10018860:	dc011a15 	stw	r16,1128(sp)
10018864:	10bfff4c 	andi	r2,r2,65533
10018868:	2821883a 	mov	r16,r5
1001886c:	d80b883a 	mov	r5,sp
10018870:	dc811c15 	stw	r18,1136(sp)
10018874:	dc411b15 	stw	r17,1132(sp)
10018878:	dfc11d15 	stw	ra,1140(sp)
1001887c:	2025883a 	mov	r18,r4
10018880:	d880030d 	sth	r2,12(sp)
10018884:	db001915 	stw	r12,100(sp)
10018888:	dac0038d 	sth	r11,14(sp)
1001888c:	da800715 	stw	r10,28(sp)
10018890:	da400915 	stw	r9,36(sp)
10018894:	da000015 	stw	r8,0(sp)
10018898:	da000415 	stw	r8,16(sp)
1001889c:	d8c00215 	stw	r3,8(sp)
100188a0:	d8c00515 	stw	r3,20(sp)
100188a4:	d8000615 	stw	zero,24(sp)
100188a8:	00166c80 	call	100166c8 <___vfprintf_internal_r>
100188ac:	1023883a 	mov	r17,r2
100188b0:	10000d0e 	bge	r2,zero,100188e8 <__sbprintf+0xa8>
100188b4:	d880030b 	ldhu	r2,12(sp)
100188b8:	1080100c 	andi	r2,r2,64
100188bc:	10000326 	beq	r2,zero,100188cc <__sbprintf+0x8c>
100188c0:	8080030b 	ldhu	r2,12(r16)
100188c4:	10801014 	ori	r2,r2,64
100188c8:	8080030d 	sth	r2,12(r16)
100188cc:	8805883a 	mov	r2,r17
100188d0:	dfc11d17 	ldw	ra,1140(sp)
100188d4:	dc811c17 	ldw	r18,1136(sp)
100188d8:	dc411b17 	ldw	r17,1132(sp)
100188dc:	dc011a17 	ldw	r16,1128(sp)
100188e0:	dec11e04 	addi	sp,sp,1144
100188e4:	f800283a 	ret
100188e8:	d80b883a 	mov	r5,sp
100188ec:	9009883a 	mov	r4,r18
100188f0:	001a61c0 	call	1001a61c <_fflush_r>
100188f4:	103fef26 	beq	r2,zero,100188b4 <__sbprintf+0x74>
100188f8:	047fffc4 	movi	r17,-1
100188fc:	003fed06 	br	100188b4 <__sbprintf+0x74>

10018900 <_write_r>:
10018900:	defffe04 	addi	sp,sp,-8
10018904:	2805883a 	mov	r2,r5
10018908:	dc000015 	stw	r16,0(sp)
1001890c:	300b883a 	mov	r5,r6
10018910:	2021883a 	mov	r16,r4
10018914:	380d883a 	mov	r6,r7
10018918:	1009883a 	mov	r4,r2
1001891c:	008400f4 	movhi	r2,4099
10018920:	dfc00115 	stw	ra,4(sp)
10018924:	102a6815 	stw	zero,-22112(r2)
10018928:	00227b40 	call	100227b4 <write>
1001892c:	10ffffd8 	cmpnei	r3,r2,-1
10018930:	18000426 	beq	r3,zero,10018944 <_write_r+0x44>
10018934:	dfc00117 	ldw	ra,4(sp)
10018938:	dc000017 	ldw	r16,0(sp)
1001893c:	dec00204 	addi	sp,sp,8
10018940:	f800283a 	ret
10018944:	00c400f4 	movhi	r3,4099
10018948:	18ea6817 	ldw	r3,-22112(r3)
1001894c:	183ff926 	beq	r3,zero,10018934 <_write_r+0x34>
10018950:	80c00015 	stw	r3,0(r16)
10018954:	dfc00117 	ldw	ra,4(sp)
10018958:	dc000017 	ldw	r16,0(sp)
1001895c:	dec00204 	addi	sp,sp,8
10018960:	f800283a 	ret

10018964 <__swsetup_r>:
10018964:	008400f4 	movhi	r2,4099
10018968:	10a11717 	ldw	r2,-31652(r2)
1001896c:	defffd04 	addi	sp,sp,-12
10018970:	dc400115 	stw	r17,4(sp)
10018974:	dc000015 	stw	r16,0(sp)
10018978:	dfc00215 	stw	ra,8(sp)
1001897c:	2023883a 	mov	r17,r4
10018980:	2821883a 	mov	r16,r5
10018984:	10000226 	beq	r2,zero,10018990 <__swsetup_r+0x2c>
10018988:	10c00e17 	ldw	r3,56(r2)
1001898c:	18002026 	beq	r3,zero,10018a10 <__swsetup_r+0xac>
10018990:	8080030b 	ldhu	r2,12(r16)
10018994:	10c0020c 	andi	r3,r2,8
10018998:	1009883a 	mov	r4,r2
1001899c:	18002226 	beq	r3,zero,10018a28 <__swsetup_r+0xc4>
100189a0:	80c00417 	ldw	r3,16(r16)
100189a4:	18002826 	beq	r3,zero,10018a48 <__swsetup_r+0xe4>
100189a8:	1100004c 	andi	r4,r2,1
100189ac:	20000b1e 	bne	r4,zero,100189dc <__swsetup_r+0x78>
100189b0:	1080008c 	andi	r2,r2,2
100189b4:	10002d1e 	bne	r2,zero,10018a6c <__swsetup_r+0x108>
100189b8:	80800517 	ldw	r2,20(r16)
100189bc:	80800215 	stw	r2,8(r16)
100189c0:	18000b26 	beq	r3,zero,100189f0 <__swsetup_r+0x8c>
100189c4:	0005883a 	mov	r2,zero
100189c8:	dfc00217 	ldw	ra,8(sp)
100189cc:	dc400117 	ldw	r17,4(sp)
100189d0:	dc000017 	ldw	r16,0(sp)
100189d4:	dec00304 	addi	sp,sp,12
100189d8:	f800283a 	ret
100189dc:	80800517 	ldw	r2,20(r16)
100189e0:	80000215 	stw	zero,8(r16)
100189e4:	0085c83a 	sub	r2,zero,r2
100189e8:	80800615 	stw	r2,24(r16)
100189ec:	183ff51e 	bne	r3,zero,100189c4 <__swsetup_r+0x60>
100189f0:	80c0030b 	ldhu	r3,12(r16)
100189f4:	0005883a 	mov	r2,zero
100189f8:	1900200c 	andi	r4,r3,128
100189fc:	203ff226 	beq	r4,zero,100189c8 <__swsetup_r+0x64>
10018a00:	18c01014 	ori	r3,r3,64
10018a04:	80c0030d 	sth	r3,12(r16)
10018a08:	00bfffc4 	movi	r2,-1
10018a0c:	003fee06 	br	100189c8 <__swsetup_r+0x64>
10018a10:	1009883a 	mov	r4,r2
10018a14:	001a9a00 	call	1001a9a0 <__sinit>
10018a18:	8080030b 	ldhu	r2,12(r16)
10018a1c:	10c0020c 	andi	r3,r2,8
10018a20:	1009883a 	mov	r4,r2
10018a24:	183fde1e 	bne	r3,zero,100189a0 <__swsetup_r+0x3c>
10018a28:	2080040c 	andi	r2,r4,16
10018a2c:	10001f26 	beq	r2,zero,10018aac <__swsetup_r+0x148>
10018a30:	2080010c 	andi	r2,r4,4
10018a34:	10000f1e 	bne	r2,zero,10018a74 <__swsetup_r+0x110>
10018a38:	80c00417 	ldw	r3,16(r16)
10018a3c:	20800214 	ori	r2,r4,8
10018a40:	8080030d 	sth	r2,12(r16)
10018a44:	183fd81e 	bne	r3,zero,100189a8 <__swsetup_r+0x44>
10018a48:	1100a00c 	andi	r4,r2,640
10018a4c:	21008020 	cmpeqi	r4,r4,512
10018a50:	203fd51e 	bne	r4,zero,100189a8 <__swsetup_r+0x44>
10018a54:	800b883a 	mov	r5,r16
10018a58:	8809883a 	mov	r4,r17
10018a5c:	0014c2c0 	call	10014c2c <__smakebuf_r>
10018a60:	8080030b 	ldhu	r2,12(r16)
10018a64:	80c00417 	ldw	r3,16(r16)
10018a68:	003fcf06 	br	100189a8 <__swsetup_r+0x44>
10018a6c:	0005883a 	mov	r2,zero
10018a70:	003fd206 	br	100189bc <__swsetup_r+0x58>
10018a74:	81400c17 	ldw	r5,48(r16)
10018a78:	28000626 	beq	r5,zero,10018a94 <__swsetup_r+0x130>
10018a7c:	80801004 	addi	r2,r16,64
10018a80:	28800326 	beq	r5,r2,10018a90 <__swsetup_r+0x12c>
10018a84:	8809883a 	mov	r4,r17
10018a88:	001aba80 	call	1001aba8 <_free_r>
10018a8c:	8100030b 	ldhu	r4,12(r16)
10018a90:	80000c15 	stw	zero,48(r16)
10018a94:	80c00417 	ldw	r3,16(r16)
10018a98:	00bff6c4 	movi	r2,-37
10018a9c:	1108703a 	and	r4,r2,r4
10018aa0:	80000115 	stw	zero,4(r16)
10018aa4:	80c00015 	stw	r3,0(r16)
10018aa8:	003fe406 	br	10018a3c <__swsetup_r+0xd8>
10018aac:	00800244 	movi	r2,9
10018ab0:	88800015 	stw	r2,0(r17)
10018ab4:	20801014 	ori	r2,r4,64
10018ab8:	8080030d 	sth	r2,12(r16)
10018abc:	00bfffc4 	movi	r2,-1
10018ac0:	003fc106 	br	100189c8 <__swsetup_r+0x64>

10018ac4 <_close_r>:
10018ac4:	defffe04 	addi	sp,sp,-8
10018ac8:	dc000015 	stw	r16,0(sp)
10018acc:	008400f4 	movhi	r2,4099
10018ad0:	2021883a 	mov	r16,r4
10018ad4:	2809883a 	mov	r4,r5
10018ad8:	dfc00115 	stw	ra,4(sp)
10018adc:	102a6815 	stw	zero,-22112(r2)
10018ae0:	0021b7c0 	call	10021b7c <close>
10018ae4:	10ffffd8 	cmpnei	r3,r2,-1
10018ae8:	18000426 	beq	r3,zero,10018afc <_close_r+0x38>
10018aec:	dfc00117 	ldw	ra,4(sp)
10018af0:	dc000017 	ldw	r16,0(sp)
10018af4:	dec00204 	addi	sp,sp,8
10018af8:	f800283a 	ret
10018afc:	00c400f4 	movhi	r3,4099
10018b00:	18ea6817 	ldw	r3,-22112(r3)
10018b04:	183ff926 	beq	r3,zero,10018aec <_close_r+0x28>
10018b08:	80c00015 	stw	r3,0(r16)
10018b0c:	dfc00117 	ldw	ra,4(sp)
10018b10:	dc000017 	ldw	r16,0(sp)
10018b14:	dec00204 	addi	sp,sp,8
10018b18:	f800283a 	ret

10018b1c <quorem>:
10018b1c:	defff504 	addi	sp,sp,-44
10018b20:	dc800315 	stw	r18,12(sp)
10018b24:	20800417 	ldw	r2,16(r4)
10018b28:	2c800417 	ldw	r18,16(r5)
10018b2c:	dfc00a15 	stw	ra,40(sp)
10018b30:	df000915 	stw	fp,36(sp)
10018b34:	ddc00815 	stw	r23,32(sp)
10018b38:	dd800715 	stw	r22,28(sp)
10018b3c:	dd400615 	stw	r21,24(sp)
10018b40:	dd000515 	stw	r20,20(sp)
10018b44:	dcc00415 	stw	r19,16(sp)
10018b48:	dc400215 	stw	r17,8(sp)
10018b4c:	dc000115 	stw	r16,4(sp)
10018b50:	14807416 	blt	r2,r18,10018d24 <quorem+0x208>
10018b54:	94bfffc4 	addi	r18,r18,-1
10018b58:	902e90ba 	slli	r23,r18,2
10018b5c:	2c400504 	addi	r17,r5,20
10018b60:	25400504 	addi	r21,r4,20
10018b64:	8de9883a 	add	r20,r17,r23
10018b68:	a7000017 	ldw	fp,0(r20)
10018b6c:	adef883a 	add	r23,r21,r23
10018b70:	b8c00017 	ldw	r3,0(r23)
10018b74:	e7000044 	addi	fp,fp,1
10018b78:	282d883a 	mov	r22,r5
10018b7c:	2021883a 	mov	r16,r4
10018b80:	e00b883a 	mov	r5,fp
10018b84:	1809883a 	mov	r4,r3
10018b88:	d8c00015 	stw	r3,0(sp)
10018b8c:	0013fa40 	call	10013fa4 <__udivsi3>
10018b90:	d8c00017 	ldw	r3,0(sp)
10018b94:	1027883a 	mov	r19,r2
10018b98:	1f002c36 	bltu	r3,fp,10018c4c <quorem+0x130>
10018b9c:	8811883a 	mov	r8,r17
10018ba0:	a80b883a 	mov	r5,r21
10018ba4:	0013883a 	mov	r9,zero
10018ba8:	0007883a 	mov	r3,zero
10018bac:	42000104 	addi	r8,r8,4
10018bb0:	41ffff17 	ldw	r7,-4(r8)
10018bb4:	29800017 	ldw	r6,0(r5)
10018bb8:	29400104 	addi	r5,r5,4
10018bbc:	38bfffcc 	andi	r2,r7,65535
10018bc0:	14c5383a 	mul	r2,r2,r19
10018bc4:	3808d43a 	srli	r4,r7,16
10018bc8:	32bfffcc 	andi	r10,r6,65535
10018bcc:	1245883a 	add	r2,r2,r9
10018bd0:	1012d43a 	srli	r9,r2,16
10018bd4:	11ffffcc 	andi	r7,r2,65535
10018bd8:	24c9383a 	mul	r4,r4,r19
10018bdc:	19c7c83a 	sub	r3,r3,r7
10018be0:	1a8f883a 	add	r7,r3,r10
10018be4:	3006d43a 	srli	r3,r6,16
10018be8:	2249883a 	add	r4,r4,r9
10018bec:	3805d43a 	srai	r2,r7,16
10018bf0:	21bfffcc 	andi	r6,r4,65535
10018bf4:	1987c83a 	sub	r3,r3,r6
10018bf8:	1887883a 	add	r3,r3,r2
10018bfc:	180c943a 	slli	r6,r3,16
10018c00:	39ffffcc 	andi	r7,r7,65535
10018c04:	2012d43a 	srli	r9,r4,16
10018c08:	31ceb03a 	or	r7,r6,r7
10018c0c:	29ffff15 	stw	r7,-4(r5)
10018c10:	1807d43a 	srai	r3,r3,16
10018c14:	a23fe52e 	bgeu	r20,r8,10018bac <quorem+0x90>
10018c18:	b8800017 	ldw	r2,0(r23)
10018c1c:	10000b1e 	bne	r2,zero,10018c4c <quorem+0x130>
10018c20:	b8bfff04 	addi	r2,r23,-4
10018c24:	a880082e 	bgeu	r21,r2,10018c48 <quorem+0x12c>
10018c28:	b8ffff17 	ldw	r3,-4(r23)
10018c2c:	18000326 	beq	r3,zero,10018c3c <quorem+0x120>
10018c30:	00000506 	br	10018c48 <quorem+0x12c>
10018c34:	10c00017 	ldw	r3,0(r2)
10018c38:	1800031e 	bne	r3,zero,10018c48 <quorem+0x12c>
10018c3c:	10bfff04 	addi	r2,r2,-4
10018c40:	94bfffc4 	addi	r18,r18,-1
10018c44:	a8bffb36 	bltu	r21,r2,10018c34 <quorem+0x118>
10018c48:	84800415 	stw	r18,16(r16)
10018c4c:	b00b883a 	mov	r5,r22
10018c50:	8009883a 	mov	r4,r16
10018c54:	001be200 	call	1001be20 <__mcmp>
10018c58:	10002516 	blt	r2,zero,10018cf0 <quorem+0x1d4>
10018c5c:	9cc00044 	addi	r19,r19,1
10018c60:	a80d883a 	mov	r6,r21
10018c64:	0007883a 	mov	r3,zero
10018c68:	8c400104 	addi	r17,r17,4
10018c6c:	893fff17 	ldw	r4,-4(r17)
10018c70:	31400017 	ldw	r5,0(r6)
10018c74:	31800104 	addi	r6,r6,4
10018c78:	20bfffcc 	andi	r2,r4,65535
10018c7c:	1887c83a 	sub	r3,r3,r2
10018c80:	28bfffcc 	andi	r2,r5,65535
10018c84:	1885883a 	add	r2,r3,r2
10018c88:	2008d43a 	srli	r4,r4,16
10018c8c:	2806d43a 	srli	r3,r5,16
10018c90:	100fd43a 	srai	r7,r2,16
10018c94:	117fffcc 	andi	r5,r2,65535
10018c98:	1907c83a 	sub	r3,r3,r4
10018c9c:	19c7883a 	add	r3,r3,r7
10018ca0:	1804943a 	slli	r2,r3,16
10018ca4:	1807d43a 	srai	r3,r3,16
10018ca8:	1144b03a 	or	r2,r2,r5
10018cac:	30bfff15 	stw	r2,-4(r6)
10018cb0:	a47fed2e 	bgeu	r20,r17,10018c68 <quorem+0x14c>
10018cb4:	900690ba 	slli	r3,r18,2
10018cb8:	a8c7883a 	add	r3,r21,r3
10018cbc:	18800017 	ldw	r2,0(r3)
10018cc0:	10000b1e 	bne	r2,zero,10018cf0 <quorem+0x1d4>
10018cc4:	18bfff04 	addi	r2,r3,-4
10018cc8:	a880082e 	bgeu	r21,r2,10018cec <quorem+0x1d0>
10018ccc:	18ffff17 	ldw	r3,-4(r3)
10018cd0:	18000326 	beq	r3,zero,10018ce0 <quorem+0x1c4>
10018cd4:	00000506 	br	10018cec <quorem+0x1d0>
10018cd8:	10c00017 	ldw	r3,0(r2)
10018cdc:	1800031e 	bne	r3,zero,10018cec <quorem+0x1d0>
10018ce0:	10bfff04 	addi	r2,r2,-4
10018ce4:	94bfffc4 	addi	r18,r18,-1
10018ce8:	a8bffb36 	bltu	r21,r2,10018cd8 <quorem+0x1bc>
10018cec:	84800415 	stw	r18,16(r16)
10018cf0:	9805883a 	mov	r2,r19
10018cf4:	dfc00a17 	ldw	ra,40(sp)
10018cf8:	df000917 	ldw	fp,36(sp)
10018cfc:	ddc00817 	ldw	r23,32(sp)
10018d00:	dd800717 	ldw	r22,28(sp)
10018d04:	dd400617 	ldw	r21,24(sp)
10018d08:	dd000517 	ldw	r20,20(sp)
10018d0c:	dcc00417 	ldw	r19,16(sp)
10018d10:	dc800317 	ldw	r18,12(sp)
10018d14:	dc400217 	ldw	r17,8(sp)
10018d18:	dc000117 	ldw	r16,4(sp)
10018d1c:	dec00b04 	addi	sp,sp,44
10018d20:	f800283a 	ret
10018d24:	0005883a 	mov	r2,zero
10018d28:	003ff206 	br	10018cf4 <quorem+0x1d8>

10018d2c <_dtoa_r>:
10018d2c:	20801017 	ldw	r2,64(r4)
10018d30:	deffe204 	addi	sp,sp,-120
10018d34:	df001c15 	stw	fp,112(sp)
10018d38:	dcc01715 	stw	r19,92(sp)
10018d3c:	dc401515 	stw	r17,84(sp)
10018d40:	dc001415 	stw	r16,80(sp)
10018d44:	dfc01d15 	stw	ra,116(sp)
10018d48:	ddc01b15 	stw	r23,108(sp)
10018d4c:	dd801a15 	stw	r22,104(sp)
10018d50:	dd401915 	stw	r21,100(sp)
10018d54:	dd001815 	stw	r20,96(sp)
10018d58:	dc801615 	stw	r18,88(sp)
10018d5c:	d9400115 	stw	r5,4(sp)
10018d60:	d9c00215 	stw	r7,8(sp)
10018d64:	2039883a 	mov	fp,r4
10018d68:	3027883a 	mov	r19,r6
10018d6c:	dc002017 	ldw	r16,128(sp)
10018d70:	3023883a 	mov	r17,r6
10018d74:	10000826 	beq	r2,zero,10018d98 <_dtoa_r+0x6c>
10018d78:	21801117 	ldw	r6,68(r4)
10018d7c:	00c00044 	movi	r3,1
10018d80:	100b883a 	mov	r5,r2
10018d84:	1986983a 	sll	r3,r3,r6
10018d88:	11800115 	stw	r6,4(r2)
10018d8c:	10c00215 	stw	r3,8(r2)
10018d90:	001b6400 	call	1001b640 <_Bfree>
10018d94:	e0001015 	stw	zero,64(fp)
10018d98:	98018116 	blt	r19,zero,100193a0 <_dtoa_r+0x674>
10018d9c:	80000015 	stw	zero,0(r16)
10018da0:	989ffc2c 	andhi	r2,r19,32752
10018da4:	00dffc34 	movhi	r3,32752
10018da8:	10c18626 	beq	r2,r3,100193c4 <_dtoa_r+0x698>
10018dac:	d9000117 	ldw	r4,4(sp)
10018db0:	000d883a 	mov	r6,zero
10018db4:	000f883a 	mov	r7,zero
10018db8:	880b883a 	mov	r5,r17
10018dbc:	002065c0 	call	1002065c <__eqdf2>
10018dc0:	1000191e 	bne	r2,zero,10018e28 <_dtoa_r+0xfc>
10018dc4:	d8c01f17 	ldw	r3,124(sp)
10018dc8:	00800044 	movi	r2,1
10018dcc:	18800015 	stw	r2,0(r3)
10018dd0:	d8802117 	ldw	r2,132(sp)
10018dd4:	10032426 	beq	r2,zero,10019a68 <_dtoa_r+0xd3c>
10018dd8:	d9002117 	ldw	r4,132(sp)
10018ddc:	008400b4 	movhi	r2,4098
10018de0:	10969644 	addi	r2,r2,23129
10018de4:	00c400b4 	movhi	r3,4098
10018de8:	20800015 	stw	r2,0(r4)
10018dec:	18969604 	addi	r2,r3,23128
10018df0:	d8800315 	stw	r2,12(sp)
10018df4:	d8800317 	ldw	r2,12(sp)
10018df8:	dfc01d17 	ldw	ra,116(sp)
10018dfc:	df001c17 	ldw	fp,112(sp)
10018e00:	ddc01b17 	ldw	r23,108(sp)
10018e04:	dd801a17 	ldw	r22,104(sp)
10018e08:	dd401917 	ldw	r21,100(sp)
10018e0c:	dd001817 	ldw	r20,96(sp)
10018e10:	dcc01717 	ldw	r19,92(sp)
10018e14:	dc801617 	ldw	r18,88(sp)
10018e18:	dc401517 	ldw	r17,84(sp)
10018e1c:	dc001417 	ldw	r16,80(sp)
10018e20:	dec01e04 	addi	sp,sp,120
10018e24:	f800283a 	ret
10018e28:	dc800117 	ldw	r18,4(sp)
10018e2c:	d8801204 	addi	r2,sp,72
10018e30:	9820d53a 	srli	r16,r19,20
10018e34:	d8800015 	stw	r2,0(sp)
10018e38:	d9c01304 	addi	r7,sp,76
10018e3c:	900b883a 	mov	r5,r18
10018e40:	880d883a 	mov	r6,r17
10018e44:	e009883a 	mov	r4,fp
10018e48:	001c1940 	call	1001c194 <__d2b>
10018e4c:	102b883a 	mov	r21,r2
10018e50:	8001701e 	bne	r16,zero,10019414 <_dtoa_r+0x6e8>
10018e54:	dc801217 	ldw	r18,72(sp)
10018e58:	dc001317 	ldw	r16,76(sp)
10018e5c:	9421883a 	add	r16,r18,r16
10018e60:	80810c84 	addi	r2,r16,1074
10018e64:	10c00850 	cmplti	r3,r2,33
10018e68:	18030f1e 	bne	r3,zero,10019aa8 <_dtoa_r+0xd7c>
10018e6c:	01001004 	movi	r4,64
10018e70:	2085c83a 	sub	r2,r4,r2
10018e74:	98a6983a 	sll	r19,r19,r2
10018e78:	d8800117 	ldw	r2,4(sp)
10018e7c:	81010484 	addi	r4,r16,1042
10018e80:	1108d83a 	srl	r4,r2,r4
10018e84:	9908b03a 	or	r4,r19,r4
10018e88:	0021a500 	call	10021a50 <__floatunsidf>
10018e8c:	1009883a 	mov	r4,r2
10018e90:	017f8434 	movhi	r5,65040
10018e94:	00800044 	movi	r2,1
10018e98:	194b883a 	add	r5,r3,r5
10018e9c:	843fffc4 	addi	r16,r16,-1
10018ea0:	d8800a15 	stw	r2,40(sp)
10018ea4:	000d883a 	mov	r6,zero
10018ea8:	01cffe34 	movhi	r7,16376
10018eac:	0020f480 	call	10020f48 <__subdf3>
10018eb0:	0198dbf4 	movhi	r6,25455
10018eb4:	01cff4f4 	movhi	r7,16339
10018eb8:	3190d844 	addi	r6,r6,17249
10018ebc:	39e1e9c4 	addi	r7,r7,-30809
10018ec0:	1009883a 	mov	r4,r2
10018ec4:	180b883a 	mov	r5,r3
10018ec8:	00208bc0 	call	100208bc <__muldf3>
10018ecc:	01a2d874 	movhi	r6,35681
10018ed0:	01cff1f4 	movhi	r7,16327
10018ed4:	31b22cc4 	addi	r6,r6,-14157
10018ed8:	39e28a04 	addi	r7,r7,-30168
10018edc:	180b883a 	mov	r5,r3
10018ee0:	1009883a 	mov	r4,r2
10018ee4:	001f4140 	call	1001f414 <__adddf3>
10018ee8:	8009883a 	mov	r4,r16
10018eec:	1029883a 	mov	r20,r2
10018ef0:	1827883a 	mov	r19,r3
10018ef4:	00219880 	call	10021988 <__floatsidf>
10018ef8:	019427f4 	movhi	r6,20639
10018efc:	01cff4f4 	movhi	r7,16339
10018f00:	319e7ec4 	addi	r6,r6,31227
10018f04:	39d104c4 	addi	r7,r7,17427
10018f08:	1009883a 	mov	r4,r2
10018f0c:	180b883a 	mov	r5,r3
10018f10:	00208bc0 	call	100208bc <__muldf3>
10018f14:	100d883a 	mov	r6,r2
10018f18:	180f883a 	mov	r7,r3
10018f1c:	a009883a 	mov	r4,r20
10018f20:	980b883a 	mov	r5,r19
10018f24:	001f4140 	call	1001f414 <__adddf3>
10018f28:	1009883a 	mov	r4,r2
10018f2c:	180b883a 	mov	r5,r3
10018f30:	1029883a 	mov	r20,r2
10018f34:	1827883a 	mov	r19,r3
10018f38:	00219080 	call	10021908 <__fixdfsi>
10018f3c:	000d883a 	mov	r6,zero
10018f40:	000f883a 	mov	r7,zero
10018f44:	a009883a 	mov	r4,r20
10018f48:	980b883a 	mov	r5,r19
10018f4c:	102d883a 	mov	r22,r2
10018f50:	00207cc0 	call	100207cc <__ledf2>
10018f54:	1002ba16 	blt	r2,zero,10019a40 <_dtoa_r+0xd14>
10018f58:	9421c83a 	sub	r16,r18,r16
10018f5c:	b08005e8 	cmpgeui	r2,r22,23
10018f60:	853fffc4 	addi	r20,r16,-1
10018f64:	1002ae1e 	bne	r2,zero,10019a20 <_dtoa_r+0xcf4>
10018f68:	b00690fa 	slli	r3,r22,3
10018f6c:	008400b4 	movhi	r2,4098
10018f70:	10975a04 	addi	r2,r2,23912
10018f74:	10c5883a 	add	r2,r2,r3
10018f78:	11800017 	ldw	r6,0(r2)
10018f7c:	11c00117 	ldw	r7,4(r2)
10018f80:	d9000117 	ldw	r4,4(sp)
10018f84:	880b883a 	mov	r5,r17
10018f88:	00207cc0 	call	100207cc <__ledf2>
10018f8c:	10026f0e 	bge	r2,zero,1001994c <_dtoa_r+0xc20>
10018f90:	d8000915 	stw	zero,36(sp)
10018f94:	b5bfffc4 	addi	r22,r22,-1
10018f98:	a002a416 	blt	r20,zero,10019a2c <_dtoa_r+0xd00>
10018f9c:	d8000515 	stw	zero,20(sp)
10018fa0:	b0026d0e 	bge	r22,zero,10019958 <_dtoa_r+0xc2c>
10018fa4:	d8800517 	ldw	r2,20(sp)
10018fa8:	d8c00217 	ldw	r3,8(sp)
10018fac:	dd800415 	stw	r22,16(sp)
10018fb0:	1585c83a 	sub	r2,r2,r22
10018fb4:	d8800515 	stw	r2,20(sp)
10018fb8:	0585c83a 	sub	r2,zero,r22
10018fbc:	d8800815 	stw	r2,32(sp)
10018fc0:	188002a8 	cmpgeui	r2,r3,10
10018fc4:	002d883a 	mov	r22,zero
10018fc8:	1002691e 	bne	r2,zero,10019970 <_dtoa_r+0xc44>
10018fcc:	18800190 	cmplti	r2,r3,6
10018fd0:	1002ba1e 	bne	r2,zero,10019abc <_dtoa_r+0xd90>
10018fd4:	18bfff04 	addi	r2,r3,-4
10018fd8:	d8800215 	stw	r2,8(sp)
10018fdc:	0021883a 	mov	r16,zero
10018fe0:	d8c00217 	ldw	r3,8(sp)
10018fe4:	188000e0 	cmpeqi	r2,r3,3
10018fe8:	10039d1e 	bne	r2,zero,10019e60 <_dtoa_r+0x1134>
10018fec:	18800108 	cmpgei	r2,r3,4
10018ff0:	10027a26 	beq	r2,zero,100199dc <_dtoa_r+0xcb0>
10018ff4:	d8c00217 	ldw	r3,8(sp)
10018ff8:	18800120 	cmpeqi	r2,r3,4
10018ffc:	10026926 	beq	r2,zero,100199a4 <_dtoa_r+0xc78>
10019000:	00800044 	movi	r2,1
10019004:	d8800715 	stw	r2,28(sp)
10019008:	d8801e17 	ldw	r2,120(sp)
1001900c:	0083670e 	bge	zero,r2,10019dac <_dtoa_r+0x1080>
10019010:	d8800b15 	stw	r2,44(sp)
10019014:	d8800615 	stw	r2,24(sp)
10019018:	100d883a 	mov	r6,r2
1001901c:	e0001115 	stw	zero,68(fp)
10019020:	30800610 	cmplti	r2,r6,24
10019024:	dc800617 	ldw	r18,24(sp)
10019028:	1004eb1e 	bne	r2,zero,1001a3d8 <_dtoa_r+0x16ac>
1001902c:	00c00044 	movi	r3,1
10019030:	00800104 	movi	r2,4
10019034:	1085883a 	add	r2,r2,r2
10019038:	11000504 	addi	r4,r2,20
1001903c:	180b883a 	mov	r5,r3
10019040:	18c00044 	addi	r3,r3,1
10019044:	313ffb2e 	bgeu	r6,r4,10019034 <_dtoa_r+0x308>
10019048:	e1401115 	stw	r5,68(fp)
1001904c:	e009883a 	mov	r4,fp
10019050:	001b59c0 	call	1001b59c <_Balloc>
10019054:	d8800315 	stw	r2,12(sp)
10019058:	e0801015 	stw	r2,64(fp)
1001905c:	948003e8 	cmpgeui	r18,r18,15
10019060:	9000fe1e 	bne	r18,zero,1001945c <_dtoa_r+0x730>
10019064:	8000fd26 	beq	r16,zero,1001945c <_dtoa_r+0x730>
10019068:	d9000417 	ldw	r4,16(sp)
1001906c:	0103c60e 	bge	zero,r4,10019f88 <_dtoa_r+0x125c>
10019070:	208003cc 	andi	r2,r4,15
10019074:	100690fa 	slli	r3,r2,3
10019078:	202fd13a 	srai	r23,r4,4
1001907c:	008400b4 	movhi	r2,4098
10019080:	10975a04 	addi	r2,r2,23912
10019084:	10c5883a 	add	r2,r2,r3
10019088:	b8c0040c 	andi	r3,r23,16
1001908c:	12800017 	ldw	r10,0(r2)
10019090:	12400117 	ldw	r9,4(r2)
10019094:	1803621e 	bne	r3,zero,10019e20 <_dtoa_r+0x10f4>
10019098:	d8800117 	ldw	r2,4(sp)
1001909c:	8827883a 	mov	r19,r17
100190a0:	04000084 	movi	r16,2
100190a4:	d8800c15 	stw	r2,48(sp)
100190a8:	048400b4 	movhi	r18,4098
100190ac:	94975004 	addi	r18,r18,23872
100190b0:	b8000f26 	beq	r23,zero,100190f0 <_dtoa_r+0x3c4>
100190b4:	5005883a 	mov	r2,r10
100190b8:	4807883a 	mov	r3,r9
100190bc:	b980004c 	andi	r6,r23,1
100190c0:	1009883a 	mov	r4,r2
100190c4:	b82fd07a 	srai	r23,r23,1
100190c8:	180b883a 	mov	r5,r3
100190cc:	30000426 	beq	r6,zero,100190e0 <_dtoa_r+0x3b4>
100190d0:	91800017 	ldw	r6,0(r18)
100190d4:	91c00117 	ldw	r7,4(r18)
100190d8:	84000044 	addi	r16,r16,1
100190dc:	00208bc0 	call	100208bc <__muldf3>
100190e0:	94800204 	addi	r18,r18,8
100190e4:	b83ff51e 	bne	r23,zero,100190bc <_dtoa_r+0x390>
100190e8:	1015883a 	mov	r10,r2
100190ec:	1813883a 	mov	r9,r3
100190f0:	d9000c17 	ldw	r4,48(sp)
100190f4:	980b883a 	mov	r5,r19
100190f8:	500d883a 	mov	r6,r10
100190fc:	480f883a 	mov	r7,r9
10019100:	001fdb40 	call	1001fdb4 <__divdf3>
10019104:	1025883a 	mov	r18,r2
10019108:	1827883a 	mov	r19,r3
1001910c:	d8800917 	ldw	r2,36(sp)
10019110:	10000626 	beq	r2,zero,1001912c <_dtoa_r+0x400>
10019114:	000d883a 	mov	r6,zero
10019118:	01cffc34 	movhi	r7,16368
1001911c:	9009883a 	mov	r4,r18
10019120:	980b883a 	mov	r5,r19
10019124:	00207cc0 	call	100207cc <__ledf2>
10019128:	10042616 	blt	r2,zero,1001a1c4 <_dtoa_r+0x1498>
1001912c:	8009883a 	mov	r4,r16
10019130:	00219880 	call	10021988 <__floatsidf>
10019134:	900d883a 	mov	r6,r18
10019138:	980f883a 	mov	r7,r19
1001913c:	1009883a 	mov	r4,r2
10019140:	180b883a 	mov	r5,r3
10019144:	00208bc0 	call	100208bc <__muldf3>
10019148:	000d883a 	mov	r6,zero
1001914c:	01d00734 	movhi	r7,16412
10019150:	1009883a 	mov	r4,r2
10019154:	180b883a 	mov	r5,r3
10019158:	001f4140 	call	1001f414 <__adddf3>
1001915c:	d8800c15 	stw	r2,48(sp)
10019160:	00bf3034 	movhi	r2,64704
10019164:	1885883a 	add	r2,r3,r2
10019168:	d8800d15 	stw	r2,52(sp)
1001916c:	d8800617 	ldw	r2,24(sp)
10019170:	10036d26 	beq	r2,zero,10019f28 <_dtoa_r+0x11fc>
10019174:	d8800417 	ldw	r2,16(sp)
10019178:	d8800f15 	stw	r2,60(sp)
1001917c:	d8800617 	ldw	r2,24(sp)
10019180:	d8800e15 	stw	r2,56(sp)
10019184:	980b883a 	mov	r5,r19
10019188:	9009883a 	mov	r4,r18
1001918c:	00219080 	call	10021908 <__fixdfsi>
10019190:	1009883a 	mov	r4,r2
10019194:	102f883a 	mov	r23,r2
10019198:	00219880 	call	10021988 <__floatsidf>
1001919c:	100d883a 	mov	r6,r2
100191a0:	180f883a 	mov	r7,r3
100191a4:	9009883a 	mov	r4,r18
100191a8:	980b883a 	mov	r5,r19
100191ac:	0020f480 	call	10020f48 <__subdf3>
100191b0:	1025883a 	mov	r18,r2
100191b4:	d8800e17 	ldw	r2,56(sp)
100191b8:	1821883a 	mov	r16,r3
100191bc:	ba400c04 	addi	r9,r23,48
100191c0:	10bfffc4 	addi	r2,r2,-1
100191c4:	100690fa 	slli	r3,r2,3
100191c8:	008400b4 	movhi	r2,4098
100191cc:	10975a04 	addi	r2,r2,23912
100191d0:	10c5883a 	add	r2,r2,r3
100191d4:	11800017 	ldw	r6,0(r2)
100191d8:	d8c00317 	ldw	r3,12(sp)
100191dc:	11c00117 	ldw	r7,4(r2)
100191e0:	d8800717 	ldw	r2,28(sp)
100191e4:	4811883a 	mov	r8,r9
100191e8:	da001015 	stw	r8,64(sp)
100191ec:	1dc00044 	addi	r23,r3,1
100191f0:	1003a226 	beq	r2,zero,1001a07c <_dtoa_r+0x1350>
100191f4:	0009883a 	mov	r4,zero
100191f8:	014ff834 	movhi	r5,16352
100191fc:	da401115 	stw	r9,68(sp)
10019200:	001fdb40 	call	1001fdb4 <__divdf3>
10019204:	d9800c17 	ldw	r6,48(sp)
10019208:	d9c00d17 	ldw	r7,52(sp)
1001920c:	1009883a 	mov	r4,r2
10019210:	180b883a 	mov	r5,r3
10019214:	0020f480 	call	10020f48 <__subdf3>
10019218:	1827883a 	mov	r19,r3
1001921c:	da401117 	ldw	r9,68(sp)
10019220:	d8c00317 	ldw	r3,12(sp)
10019224:	900d883a 	mov	r6,r18
10019228:	800f883a 	mov	r7,r16
1001922c:	1a400005 	stb	r9,0(r3)
10019230:	1009883a 	mov	r4,r2
10019234:	980b883a 	mov	r5,r19
10019238:	d8800c15 	stw	r2,48(sp)
1001923c:	00206dc0 	call	100206dc <__gedf2>
10019240:	da001017 	ldw	r8,64(sp)
10019244:	00804816 	blt	zero,r2,10019368 <_dtoa_r+0x63c>
10019248:	900d883a 	mov	r6,r18
1001924c:	800f883a 	mov	r7,r16
10019250:	0009883a 	mov	r4,zero
10019254:	014ffc34 	movhi	r5,16368
10019258:	da000d15 	stw	r8,52(sp)
1001925c:	0020f480 	call	10020f48 <__subdf3>
10019260:	d9000c17 	ldw	r4,48(sp)
10019264:	100d883a 	mov	r6,r2
10019268:	180f883a 	mov	r7,r3
1001926c:	980b883a 	mov	r5,r19
10019270:	00206dc0 	call	100206dc <__gedf2>
10019274:	da000d17 	ldw	r8,52(sp)
10019278:	00844e16 	blt	zero,r2,1001a3b4 <_dtoa_r+0x1688>
1001927c:	d8c00e17 	ldw	r3,56(sp)
10019280:	18800060 	cmpeqi	r2,r3,1
10019284:	1000751e 	bne	r2,zero,1001945c <_dtoa_r+0x730>
10019288:	d8800317 	ldw	r2,12(sp)
1001928c:	dd800d15 	stw	r22,52(sp)
10019290:	dd000e15 	stw	r20,56(sp)
10019294:	10c5883a 	add	r2,r2,r3
10019298:	dd000c17 	ldw	r20,48(sp)
1001929c:	102d883a 	mov	r22,r2
100192a0:	dc400c15 	stw	r17,48(sp)
100192a4:	00000806 	br	100192c8 <_dtoa_r+0x59c>
100192a8:	0020f480 	call	10020f48 <__subdf3>
100192ac:	a00d883a 	mov	r6,r20
100192b0:	980f883a 	mov	r7,r19
100192b4:	1009883a 	mov	r4,r2
100192b8:	180b883a 	mov	r5,r3
100192bc:	00207cc0 	call	100207cc <__ledf2>
100192c0:	10042316 	blt	r2,zero,1001a350 <_dtoa_r+0x1624>
100192c4:	bd806226 	beq	r23,r22,10019450 <_dtoa_r+0x724>
100192c8:	a009883a 	mov	r4,r20
100192cc:	980b883a 	mov	r5,r19
100192d0:	000d883a 	mov	r6,zero
100192d4:	01d00934 	movhi	r7,16420
100192d8:	00208bc0 	call	100208bc <__muldf3>
100192dc:	000d883a 	mov	r6,zero
100192e0:	01d00934 	movhi	r7,16420
100192e4:	9009883a 	mov	r4,r18
100192e8:	800b883a 	mov	r5,r16
100192ec:	1029883a 	mov	r20,r2
100192f0:	1827883a 	mov	r19,r3
100192f4:	00208bc0 	call	100208bc <__muldf3>
100192f8:	180b883a 	mov	r5,r3
100192fc:	1009883a 	mov	r4,r2
10019300:	1821883a 	mov	r16,r3
10019304:	1025883a 	mov	r18,r2
10019308:	00219080 	call	10021908 <__fixdfsi>
1001930c:	1009883a 	mov	r4,r2
10019310:	1023883a 	mov	r17,r2
10019314:	00219880 	call	10021988 <__floatsidf>
10019318:	9009883a 	mov	r4,r18
1001931c:	800b883a 	mov	r5,r16
10019320:	100d883a 	mov	r6,r2
10019324:	180f883a 	mov	r7,r3
10019328:	0020f480 	call	10020f48 <__subdf3>
1001932c:	bdc00044 	addi	r23,r23,1
10019330:	8c400c04 	addi	r17,r17,48
10019334:	a00d883a 	mov	r6,r20
10019338:	980f883a 	mov	r7,r19
1001933c:	1009883a 	mov	r4,r2
10019340:	180b883a 	mov	r5,r3
10019344:	bc7fffc5 	stb	r17,-1(r23)
10019348:	1025883a 	mov	r18,r2
1001934c:	1821883a 	mov	r16,r3
10019350:	00207cc0 	call	100207cc <__ledf2>
10019354:	900d883a 	mov	r6,r18
10019358:	800f883a 	mov	r7,r16
1001935c:	0009883a 	mov	r4,zero
10019360:	014ffc34 	movhi	r5,16368
10019364:	103fd00e 	bge	r2,zero,100192a8 <_dtoa_r+0x57c>
10019368:	d8800f17 	ldw	r2,60(sp)
1001936c:	10800044 	addi	r2,r2,1
10019370:	d8800415 	stw	r2,16(sp)
10019374:	a80b883a 	mov	r5,r21
10019378:	e009883a 	mov	r4,fp
1001937c:	001b6400 	call	1001b640 <_Bfree>
10019380:	d8801f17 	ldw	r2,124(sp)
10019384:	d8c00417 	ldw	r3,16(sp)
10019388:	b8000005 	stb	zero,0(r23)
1001938c:	10c00015 	stw	r3,0(r2)
10019390:	d8802117 	ldw	r2,132(sp)
10019394:	103e9726 	beq	r2,zero,10018df4 <_dtoa_r+0xc8>
10019398:	15c00015 	stw	r23,0(r2)
1001939c:	003e9506 	br	10018df4 <_dtoa_r+0xc8>
100193a0:	04600034 	movhi	r17,32768
100193a4:	8c7fffc4 	addi	r17,r17,-1
100193a8:	9c62703a 	and	r17,r19,r17
100193ac:	00800044 	movi	r2,1
100193b0:	8827883a 	mov	r19,r17
100193b4:	80800015 	stw	r2,0(r16)
100193b8:	00dffc34 	movhi	r3,32752
100193bc:	989ffc2c 	andhi	r2,r19,32752
100193c0:	10fe7a1e 	bne	r2,r3,10018dac <_dtoa_r+0x80>
100193c4:	00800434 	movhi	r2,16
100193c8:	d8c01f17 	ldw	r3,124(sp)
100193cc:	10bfffc4 	addi	r2,r2,-1
100193d0:	98a6703a 	and	r19,r19,r2
100193d4:	0089c3c4 	movi	r2,9999
100193d8:	18800015 	stw	r2,0(r3)
100193dc:	d8800117 	ldw	r2,4(sp)
100193e0:	98aab03a 	or	r21,r19,r2
100193e4:	a800141e 	bne	r21,zero,10019438 <_dtoa_r+0x70c>
100193e8:	d8802117 	ldw	r2,132(sp)
100193ec:	1003f626 	beq	r2,zero,1001a3c8 <_dtoa_r+0x169c>
100193f0:	008400b4 	movhi	r2,4098
100193f4:	1007883a 	mov	r3,r2
100193f8:	18d74004 	addi	r3,r3,23808
100193fc:	008400b4 	movhi	r2,4098
10019400:	d8c00315 	stw	r3,12(sp)
10019404:	10974204 	addi	r2,r2,23816
10019408:	d8c02117 	ldw	r3,132(sp)
1001940c:	18800015 	stw	r2,0(r3)
10019410:	003e7806 	br	10018df4 <_dtoa_r+0xc8>
10019414:	01400434 	movhi	r5,16
10019418:	297fffc4 	addi	r5,r5,-1
1001941c:	894a703a 	and	r5,r17,r5
10019420:	9009883a 	mov	r4,r18
10019424:	294ffc34 	orhi	r5,r5,16368
10019428:	843f0044 	addi	r16,r16,-1023
1001942c:	dc801217 	ldw	r18,72(sp)
10019430:	d8000a15 	stw	zero,40(sp)
10019434:	003e9b06 	br	10018ea4 <_dtoa_r+0x178>
10019438:	d8802117 	ldw	r2,132(sp)
1001943c:	1002461e 	bne	r2,zero,10019d58 <_dtoa_r+0x102c>
10019440:	008400b4 	movhi	r2,4098
10019444:	10973f04 	addi	r2,r2,23804
10019448:	d8800315 	stw	r2,12(sp)
1001944c:	003e6906 	br	10018df4 <_dtoa_r+0xc8>
10019450:	dd800d17 	ldw	r22,52(sp)
10019454:	dd000e17 	ldw	r20,56(sp)
10019458:	dc400c17 	ldw	r17,48(sp)
1001945c:	d8801317 	ldw	r2,76(sp)
10019460:	10009f16 	blt	r2,zero,100196e0 <_dtoa_r+0x9b4>
10019464:	d9000417 	ldw	r4,16(sp)
10019468:	20c003c8 	cmpgei	r3,r4,15
1001946c:	18009c1e 	bne	r3,zero,100196e0 <_dtoa_r+0x9b4>
10019470:	200690fa 	slli	r3,r4,3
10019474:	008400b4 	movhi	r2,4098
10019478:	10975a04 	addi	r2,r2,23912
1001947c:	10c5883a 	add	r2,r2,r3
10019480:	14000017 	ldw	r16,0(r2)
10019484:	14800117 	ldw	r18,4(r2)
10019488:	d8801e17 	ldw	r2,120(sp)
1001948c:	1000140e 	bge	r2,zero,100194e0 <_dtoa_r+0x7b4>
10019490:	d8800617 	ldw	r2,24(sp)
10019494:	00801216 	blt	zero,r2,100194e0 <_dtoa_r+0x7b4>
10019498:	1002b81e 	bne	r2,zero,10019f7c <_dtoa_r+0x1250>
1001949c:	8009883a 	mov	r4,r16
100194a0:	900b883a 	mov	r5,r18
100194a4:	000d883a 	mov	r6,zero
100194a8:	01d00534 	movhi	r7,16404
100194ac:	00208bc0 	call	100208bc <__muldf3>
100194b0:	d9800117 	ldw	r6,4(sp)
100194b4:	880f883a 	mov	r7,r17
100194b8:	1009883a 	mov	r4,r2
100194bc:	180b883a 	mov	r5,r3
100194c0:	00206dc0 	call	100206dc <__gedf2>
100194c4:	0025883a 	mov	r18,zero
100194c8:	0021883a 	mov	r16,zero
100194cc:	1001fd16 	blt	r2,zero,10019cc4 <_dtoa_r+0xf98>
100194d0:	d8801e17 	ldw	r2,120(sp)
100194d4:	ddc00317 	ldw	r23,12(sp)
100194d8:	00a2303a 	nor	r17,zero,r2
100194dc:	0001ff06 	br	10019cdc <_dtoa_r+0xfb0>
100194e0:	dcc00117 	ldw	r19,4(sp)
100194e4:	800d883a 	mov	r6,r16
100194e8:	900f883a 	mov	r7,r18
100194ec:	880b883a 	mov	r5,r17
100194f0:	9809883a 	mov	r4,r19
100194f4:	001fdb40 	call	1001fdb4 <__divdf3>
100194f8:	180b883a 	mov	r5,r3
100194fc:	1009883a 	mov	r4,r2
10019500:	00219080 	call	10021908 <__fixdfsi>
10019504:	1009883a 	mov	r4,r2
10019508:	102d883a 	mov	r22,r2
1001950c:	00219880 	call	10021988 <__floatsidf>
10019510:	800d883a 	mov	r6,r16
10019514:	900f883a 	mov	r7,r18
10019518:	1009883a 	mov	r4,r2
1001951c:	180b883a 	mov	r5,r3
10019520:	00208bc0 	call	100208bc <__muldf3>
10019524:	880b883a 	mov	r5,r17
10019528:	100d883a 	mov	r6,r2
1001952c:	180f883a 	mov	r7,r3
10019530:	9809883a 	mov	r4,r19
10019534:	0020f480 	call	10020f48 <__subdf3>
10019538:	dc400317 	ldw	r17,12(sp)
1001953c:	1009883a 	mov	r4,r2
10019540:	d9c00417 	ldw	r7,16(sp)
10019544:	b0800c04 	addi	r2,r22,48
10019548:	88800005 	stb	r2,0(r17)
1001954c:	d8800617 	ldw	r2,24(sp)
10019550:	39c00044 	addi	r7,r7,1
10019554:	d9c00415 	stw	r7,16(sp)
10019558:	11800060 	cmpeqi	r6,r2,1
1001955c:	180b883a 	mov	r5,r3
10019560:	2005883a 	mov	r2,r4
10019564:	8dc00044 	addi	r23,r17,1
10019568:	3000391e 	bne	r6,zero,10019650 <_dtoa_r+0x924>
1001956c:	01d00934 	movhi	r7,16420
10019570:	00208bc0 	call	100208bc <__muldf3>
10019574:	000d883a 	mov	r6,zero
10019578:	000f883a 	mov	r7,zero
1001957c:	1009883a 	mov	r4,r2
10019580:	180b883a 	mov	r5,r3
10019584:	1027883a 	mov	r19,r2
10019588:	1829883a 	mov	r20,r3
1001958c:	002065c0 	call	1002065c <__eqdf2>
10019590:	103f7826 	beq	r2,zero,10019374 <_dtoa_r+0x648>
10019594:	d8c00617 	ldw	r3,24(sp)
10019598:	8805883a 	mov	r2,r17
1001959c:	dd400115 	stw	r21,4(sp)
100195a0:	8c400084 	addi	r17,r17,2
100195a4:	10ed883a 	add	r22,r2,r3
100195a8:	00000a06 	br	100195d4 <_dtoa_r+0x8a8>
100195ac:	00208bc0 	call	100208bc <__muldf3>
100195b0:	000d883a 	mov	r6,zero
100195b4:	000f883a 	mov	r7,zero
100195b8:	1009883a 	mov	r4,r2
100195bc:	180b883a 	mov	r5,r3
100195c0:	1027883a 	mov	r19,r2
100195c4:	1829883a 	mov	r20,r3
100195c8:	8c400044 	addi	r17,r17,1
100195cc:	002065c0 	call	1002065c <__eqdf2>
100195d0:	10029d26 	beq	r2,zero,1001a048 <_dtoa_r+0x131c>
100195d4:	800d883a 	mov	r6,r16
100195d8:	900f883a 	mov	r7,r18
100195dc:	9809883a 	mov	r4,r19
100195e0:	a00b883a 	mov	r5,r20
100195e4:	001fdb40 	call	1001fdb4 <__divdf3>
100195e8:	180b883a 	mov	r5,r3
100195ec:	1009883a 	mov	r4,r2
100195f0:	00219080 	call	10021908 <__fixdfsi>
100195f4:	1009883a 	mov	r4,r2
100195f8:	102b883a 	mov	r21,r2
100195fc:	00219880 	call	10021988 <__floatsidf>
10019600:	800d883a 	mov	r6,r16
10019604:	900f883a 	mov	r7,r18
10019608:	1009883a 	mov	r4,r2
1001960c:	180b883a 	mov	r5,r3
10019610:	00208bc0 	call	100208bc <__muldf3>
10019614:	100d883a 	mov	r6,r2
10019618:	180f883a 	mov	r7,r3
1001961c:	9809883a 	mov	r4,r19
10019620:	a00b883a 	mov	r5,r20
10019624:	0020f480 	call	10020f48 <__subdf3>
10019628:	aa400c04 	addi	r9,r21,48
1001962c:	8a7fffc5 	stb	r9,-1(r17)
10019630:	000d883a 	mov	r6,zero
10019634:	01d00934 	movhi	r7,16420
10019638:	1009883a 	mov	r4,r2
1001963c:	180b883a 	mov	r5,r3
10019640:	882f883a 	mov	r23,r17
10019644:	b47fd91e 	bne	r22,r17,100195ac <_dtoa_r+0x880>
10019648:	a82d883a 	mov	r22,r21
1001964c:	dd400117 	ldw	r21,4(sp)
10019650:	100d883a 	mov	r6,r2
10019654:	180f883a 	mov	r7,r3
10019658:	1009883a 	mov	r4,r2
1001965c:	180b883a 	mov	r5,r3
10019660:	001f4140 	call	1001f414 <__adddf3>
10019664:	800d883a 	mov	r6,r16
10019668:	900f883a 	mov	r7,r18
1001966c:	1009883a 	mov	r4,r2
10019670:	180b883a 	mov	r5,r3
10019674:	1027883a 	mov	r19,r2
10019678:	1823883a 	mov	r17,r3
1001967c:	00206dc0 	call	100206dc <__gedf2>
10019680:	00800816 	blt	zero,r2,100196a4 <_dtoa_r+0x978>
10019684:	800d883a 	mov	r6,r16
10019688:	900f883a 	mov	r7,r18
1001968c:	9809883a 	mov	r4,r19
10019690:	880b883a 	mov	r5,r17
10019694:	002065c0 	call	1002065c <__eqdf2>
10019698:	103f361e 	bne	r2,zero,10019374 <_dtoa_r+0x648>
1001969c:	b580004c 	andi	r22,r22,1
100196a0:	b03f3426 	beq	r22,zero,10019374 <_dtoa_r+0x648>
100196a4:	ba3fffc3 	ldbu	r8,-1(r23)
100196a8:	d9000317 	ldw	r4,12(sp)
100196ac:	00000306 	br	100196bc <_dtoa_r+0x990>
100196b0:	20c30e26 	beq	r4,r3,1001a2ec <_dtoa_r+0x15c0>
100196b4:	1a3fffc3 	ldbu	r8,-1(r3)
100196b8:	182f883a 	mov	r23,r3
100196bc:	40803fcc 	andi	r2,r8,255
100196c0:	1080201c 	xori	r2,r2,128
100196c4:	10bfe004 	addi	r2,r2,-128
100196c8:	10800e60 	cmpeqi	r2,r2,57
100196cc:	b8ffffc4 	addi	r3,r23,-1
100196d0:	103ff71e 	bne	r2,zero,100196b0 <_dtoa_r+0x984>
100196d4:	42000044 	addi	r8,r8,1
100196d8:	1a000005 	stb	r8,0(r3)
100196dc:	003f2506 	br	10019374 <_dtoa_r+0x648>
100196e0:	d8c00717 	ldw	r3,28(sp)
100196e4:	1800e426 	beq	r3,zero,10019a78 <_dtoa_r+0xd4c>
100196e8:	d8c00217 	ldw	r3,8(sp)
100196ec:	18c00088 	cmpgei	r3,r3,2
100196f0:	1801ec26 	beq	r3,zero,10019ea4 <_dtoa_r+0x1178>
100196f4:	d8800617 	ldw	r2,24(sp)
100196f8:	14bfffc4 	addi	r18,r2,-1
100196fc:	d8800817 	ldw	r2,32(sp)
10019700:	1481c50e 	bge	r2,r18,10019e18 <_dtoa_r+0x10ec>
10019704:	d8800817 	ldw	r2,32(sp)
10019708:	dc800815 	stw	r18,32(sp)
1001970c:	9085c83a 	sub	r2,r18,r2
10019710:	b0ad883a 	add	r22,r22,r2
10019714:	0025883a 	mov	r18,zero
10019718:	d8800617 	ldw	r2,24(sp)
1001971c:	10024c16 	blt	r2,zero,1001a050 <_dtoa_r+0x1324>
10019720:	d8c00517 	ldw	r3,20(sp)
10019724:	a0a9883a 	add	r20,r20,r2
10019728:	1885883a 	add	r2,r3,r2
1001972c:	1827883a 	mov	r19,r3
10019730:	d8800515 	stw	r2,20(sp)
10019734:	01400044 	movi	r5,1
10019738:	e009883a 	mov	r4,fp
1001973c:	001b99c0 	call	1001b99c <__i2b>
10019740:	1021883a 	mov	r16,r2
10019744:	04c0080e 	bge	zero,r19,10019768 <_dtoa_r+0xa3c>
10019748:	0500070e 	bge	zero,r20,10019768 <_dtoa_r+0xa3c>
1001974c:	9805883a 	mov	r2,r19
10019750:	a4c1a916 	blt	r20,r19,10019df8 <_dtoa_r+0x10cc>
10019754:	d8c00517 	ldw	r3,20(sp)
10019758:	98a7c83a 	sub	r19,r19,r2
1001975c:	a0a9c83a 	sub	r20,r20,r2
10019760:	1887c83a 	sub	r3,r3,r2
10019764:	d8c00515 	stw	r3,20(sp)
10019768:	d8800817 	ldw	r2,32(sp)
1001976c:	10001426 	beq	r2,zero,100197c0 <_dtoa_r+0xa94>
10019770:	d8800717 	ldw	r2,28(sp)
10019774:	10017226 	beq	r2,zero,10019d40 <_dtoa_r+0x1014>
10019778:	04800e0e 	bge	zero,r18,100197b4 <_dtoa_r+0xa88>
1001977c:	800b883a 	mov	r5,r16
10019780:	900d883a 	mov	r6,r18
10019784:	e009883a 	mov	r4,fp
10019788:	001bbbc0 	call	1001bbbc <__pow5mult>
1001978c:	a80d883a 	mov	r6,r21
10019790:	100b883a 	mov	r5,r2
10019794:	e009883a 	mov	r4,fp
10019798:	1021883a 	mov	r16,r2
1001979c:	001b9d00 	call	1001b9d0 <__multiply>
100197a0:	102f883a 	mov	r23,r2
100197a4:	a80b883a 	mov	r5,r21
100197a8:	e009883a 	mov	r4,fp
100197ac:	001b6400 	call	1001b640 <_Bfree>
100197b0:	b82b883a 	mov	r21,r23
100197b4:	d8800817 	ldw	r2,32(sp)
100197b8:	148dc83a 	sub	r6,r2,r18
100197bc:	3001611e 	bne	r6,zero,10019d44 <_dtoa_r+0x1018>
100197c0:	01400044 	movi	r5,1
100197c4:	e009883a 	mov	r4,fp
100197c8:	001b99c0 	call	1001b99c <__i2b>
100197cc:	1025883a 	mov	r18,r2
100197d0:	0580bc16 	blt	zero,r22,10019ac4 <_dtoa_r+0xd98>
100197d4:	d8800217 	ldw	r2,8(sp)
100197d8:	10800088 	cmpgei	r2,r2,2
100197dc:	10016526 	beq	r2,zero,10019d74 <_dtoa_r+0x1048>
100197e0:	0023883a 	mov	r17,zero
100197e4:	00800044 	movi	r2,1
100197e8:	b000bf1e 	bne	r22,zero,10019ae8 <_dtoa_r+0xdbc>
100197ec:	1505883a 	add	r2,r2,r20
100197f0:	108007cc 	andi	r2,r2,31
100197f4:	1000aa26 	beq	r2,zero,10019aa0 <_dtoa_r+0xd74>
100197f8:	00c00804 	movi	r3,32
100197fc:	1887c83a 	sub	r3,r3,r2
10019800:	19000150 	cmplti	r4,r3,5
10019804:	2002f61e 	bne	r4,zero,1001a3e0 <_dtoa_r+0x16b4>
10019808:	00c00704 	movi	r3,28
1001980c:	1885c83a 	sub	r2,r3,r2
10019810:	d8c00517 	ldw	r3,20(sp)
10019814:	98a7883a 	add	r19,r19,r2
10019818:	a0a9883a 	add	r20,r20,r2
1001981c:	1887883a 	add	r3,r3,r2
10019820:	d8c00515 	stw	r3,20(sp)
10019824:	d8800517 	ldw	r2,20(sp)
10019828:	00809716 	blt	zero,r2,10019a88 <_dtoa_r+0xd5c>
1001982c:	0500050e 	bge	zero,r20,10019844 <_dtoa_r+0xb18>
10019830:	900b883a 	mov	r5,r18
10019834:	a00d883a 	mov	r6,r20
10019838:	e009883a 	mov	r4,fp
1001983c:	001bce40 	call	1001bce4 <__lshift>
10019840:	1025883a 	mov	r18,r2
10019844:	d8800917 	ldw	r2,36(sp)
10019848:	10012b1e 	bne	r2,zero,10019cf8 <_dtoa_r+0xfcc>
1001984c:	d8800617 	ldw	r2,24(sp)
10019850:	00810d0e 	bge	zero,r2,10019c88 <_dtoa_r+0xf5c>
10019854:	d8800417 	ldw	r2,16(sp)
10019858:	10800044 	addi	r2,r2,1
1001985c:	d8800415 	stw	r2,16(sp)
10019860:	d8800717 	ldw	r2,28(sp)
10019864:	1000b21e 	bne	r2,zero,10019b30 <_dtoa_r+0xe04>
10019868:	ddc00317 	ldw	r23,12(sp)
1001986c:	04400044 	movi	r17,1
10019870:	dcc00617 	ldw	r19,24(sp)
10019874:	00000306 	br	10019884 <_dtoa_r+0xb58>
10019878:	001b6640 	call	1001b664 <__multadd>
1001987c:	102b883a 	mov	r21,r2
10019880:	8c400044 	addi	r17,r17,1
10019884:	900b883a 	mov	r5,r18
10019888:	a809883a 	mov	r4,r21
1001988c:	0018b1c0 	call	10018b1c <quorem>
10019890:	10800c04 	addi	r2,r2,48
10019894:	bdc00044 	addi	r23,r23,1
10019898:	b8bfffc5 	stb	r2,-1(r23)
1001989c:	000f883a 	mov	r7,zero
100198a0:	01800284 	movi	r6,10
100198a4:	a80b883a 	mov	r5,r21
100198a8:	e009883a 	mov	r4,fp
100198ac:	8cfff216 	blt	r17,r19,10019878 <_dtoa_r+0xb4c>
100198b0:	1011883a 	mov	r8,r2
100198b4:	0029883a 	mov	r20,zero
100198b8:	a80b883a 	mov	r5,r21
100198bc:	01800044 	movi	r6,1
100198c0:	e009883a 	mov	r4,fp
100198c4:	da000115 	stw	r8,4(sp)
100198c8:	001bce40 	call	1001bce4 <__lshift>
100198cc:	900b883a 	mov	r5,r18
100198d0:	1009883a 	mov	r4,r2
100198d4:	102b883a 	mov	r21,r2
100198d8:	001be200 	call	1001be20 <__mcmp>
100198dc:	b8ffffc3 	ldbu	r3,-1(r23)
100198e0:	0081610e 	bge	zero,r2,10019e68 <_dtoa_r+0x113c>
100198e4:	d9400317 	ldw	r5,12(sp)
100198e8:	00000306 	br	100198f8 <_dtoa_r+0xbcc>
100198ec:	29017726 	beq	r5,r4,10019ecc <_dtoa_r+0x11a0>
100198f0:	20ffffc3 	ldbu	r3,-1(r4)
100198f4:	202f883a 	mov	r23,r4
100198f8:	18803fcc 	andi	r2,r3,255
100198fc:	1080201c 	xori	r2,r2,128
10019900:	10bfe004 	addi	r2,r2,-128
10019904:	10800e60 	cmpeqi	r2,r2,57
10019908:	b93fffc4 	addi	r4,r23,-1
1001990c:	103ff71e 	bne	r2,zero,100198ec <_dtoa_r+0xbc0>
10019910:	18c00044 	addi	r3,r3,1
10019914:	20c00005 	stb	r3,0(r4)
10019918:	900b883a 	mov	r5,r18
1001991c:	e009883a 	mov	r4,fp
10019920:	001b6400 	call	1001b640 <_Bfree>
10019924:	803e9326 	beq	r16,zero,10019374 <_dtoa_r+0x648>
10019928:	a0000426 	beq	r20,zero,1001993c <_dtoa_r+0xc10>
1001992c:	a4000326 	beq	r20,r16,1001993c <_dtoa_r+0xc10>
10019930:	a00b883a 	mov	r5,r20
10019934:	e009883a 	mov	r4,fp
10019938:	001b6400 	call	1001b640 <_Bfree>
1001993c:	800b883a 	mov	r5,r16
10019940:	e009883a 	mov	r4,fp
10019944:	001b6400 	call	1001b640 <_Bfree>
10019948:	003e8a06 	br	10019374 <_dtoa_r+0x648>
1001994c:	d8000915 	stw	zero,36(sp)
10019950:	a0003616 	blt	r20,zero,10019a2c <_dtoa_r+0xd00>
10019954:	d8000515 	stw	zero,20(sp)
10019958:	d8c00217 	ldw	r3,8(sp)
1001995c:	dd800415 	stw	r22,16(sp)
10019960:	d8000815 	stw	zero,32(sp)
10019964:	188002a8 	cmpgeui	r2,r3,10
10019968:	a5a9883a 	add	r20,r20,r22
1001996c:	103d9726 	beq	r2,zero,10018fcc <_dtoa_r+0x2a0>
10019970:	00800044 	movi	r2,1
10019974:	d8800715 	stw	r2,28(sp)
10019978:	00bfffc4 	movi	r2,-1
1001997c:	04bfffc4 	movi	r18,-1
10019980:	04000044 	movi	r16,1
10019984:	d8000215 	stw	zero,8(sp)
10019988:	d8800615 	stw	r2,24(sp)
1001998c:	d8001e15 	stw	zero,120(sp)
10019990:	d8800617 	ldw	r2,24(sp)
10019994:	e0001115 	stw	zero,68(fp)
10019998:	000b883a 	mov	r5,zero
1001999c:	d8800b15 	stw	r2,44(sp)
100199a0:	003daa06 	br	1001904c <_dtoa_r+0x320>
100199a4:	18800160 	cmpeqi	r2,r3,5
100199a8:	00c00044 	movi	r3,1
100199ac:	d8c00715 	stw	r3,28(sp)
100199b0:	10000d26 	beq	r2,zero,100199e8 <_dtoa_r+0xcbc>
100199b4:	d8801e17 	ldw	r2,120(sp)
100199b8:	d8c00417 	ldw	r3,16(sp)
100199bc:	10c5883a 	add	r2,r2,r3
100199c0:	d8800b15 	stw	r2,44(sp)
100199c4:	10800044 	addi	r2,r2,1
100199c8:	d8800615 	stw	r2,24(sp)
100199cc:	100d883a 	mov	r6,r2
100199d0:	00bd9216 	blt	zero,r2,1001901c <_dtoa_r+0x2f0>
100199d4:	01800044 	movi	r6,1
100199d8:	003d9006 	br	1001901c <_dtoa_r+0x2f0>
100199dc:	188000a0 	cmpeqi	r2,r3,2
100199e0:	d8000715 	stw	zero,28(sp)
100199e4:	103d881e 	bne	r2,zero,10019008 <_dtoa_r+0x2dc>
100199e8:	e0001115 	stw	zero,68(fp)
100199ec:	000b883a 	mov	r5,zero
100199f0:	e009883a 	mov	r4,fp
100199f4:	001b59c0 	call	1001b59c <_Balloc>
100199f8:	d8800315 	stw	r2,12(sp)
100199fc:	e0801015 	stw	r2,64(fp)
10019a00:	00bfffc4 	movi	r2,-1
10019a04:	d8800b15 	stw	r2,44(sp)
10019a08:	00800044 	movi	r2,1
10019a0c:	d8800715 	stw	r2,28(sp)
10019a10:	00bfffc4 	movi	r2,-1
10019a14:	d8001e15 	stw	zero,120(sp)
10019a18:	d8800615 	stw	r2,24(sp)
10019a1c:	003e8f06 	br	1001945c <_dtoa_r+0x730>
10019a20:	00800044 	movi	r2,1
10019a24:	d8800915 	stw	r2,36(sp)
10019a28:	a03d5c0e 	bge	r20,zero,10018f9c <_dtoa_r+0x270>
10019a2c:	04800044 	movi	r18,1
10019a30:	9405c83a 	sub	r2,r18,r16
10019a34:	d8800515 	stw	r2,20(sp)
10019a38:	0029883a 	mov	r20,zero
10019a3c:	003d5806 	br	10018fa0 <_dtoa_r+0x274>
10019a40:	b009883a 	mov	r4,r22
10019a44:	00219880 	call	10021988 <__floatsidf>
10019a48:	a00d883a 	mov	r6,r20
10019a4c:	980f883a 	mov	r7,r19
10019a50:	1009883a 	mov	r4,r2
10019a54:	180b883a 	mov	r5,r3
10019a58:	002065c0 	call	1002065c <__eqdf2>
10019a5c:	103d3e26 	beq	r2,zero,10018f58 <_dtoa_r+0x22c>
10019a60:	b5bfffc4 	addi	r22,r22,-1
10019a64:	003d3c06 	br	10018f58 <_dtoa_r+0x22c>
10019a68:	008400b4 	movhi	r2,4098
10019a6c:	10969604 	addi	r2,r2,23128
10019a70:	d8800315 	stw	r2,12(sp)
10019a74:	003cdf06 	br	10018df4 <_dtoa_r+0xc8>
10019a78:	dc800817 	ldw	r18,32(sp)
10019a7c:	dcc00517 	ldw	r19,20(sp)
10019a80:	0021883a 	mov	r16,zero
10019a84:	003f2f06 	br	10019744 <_dtoa_r+0xa18>
10019a88:	a80b883a 	mov	r5,r21
10019a8c:	100d883a 	mov	r6,r2
10019a90:	e009883a 	mov	r4,fp
10019a94:	001bce40 	call	1001bce4 <__lshift>
10019a98:	102b883a 	mov	r21,r2
10019a9c:	003f6306 	br	1001982c <_dtoa_r+0xb00>
10019aa0:	00800704 	movi	r2,28
10019aa4:	003f5a06 	br	10019810 <_dtoa_r+0xae4>
10019aa8:	01000804 	movi	r4,32
10019aac:	2089c83a 	sub	r4,r4,r2
10019ab0:	d8800117 	ldw	r2,4(sp)
10019ab4:	1108983a 	sll	r4,r2,r4
10019ab8:	003cf306 	br	10018e88 <_dtoa_r+0x15c>
10019abc:	04000044 	movi	r16,1
10019ac0:	003d4706 	br	10018fe0 <_dtoa_r+0x2b4>
10019ac4:	b00d883a 	mov	r6,r22
10019ac8:	100b883a 	mov	r5,r2
10019acc:	e009883a 	mov	r4,fp
10019ad0:	001bbbc0 	call	1001bbbc <__pow5mult>
10019ad4:	1025883a 	mov	r18,r2
10019ad8:	d8800217 	ldw	r2,8(sp)
10019adc:	10800090 	cmplti	r2,r2,2
10019ae0:	10012f1e 	bne	r2,zero,10019fa0 <_dtoa_r+0x1274>
10019ae4:	0023883a 	mov	r17,zero
10019ae8:	90800417 	ldw	r2,16(r18)
10019aec:	10800104 	addi	r2,r2,4
10019af0:	100490ba 	slli	r2,r2,2
10019af4:	9085883a 	add	r2,r18,r2
10019af8:	11000017 	ldw	r4,0(r2)
10019afc:	001b8880 	call	1001b888 <__hi0bits>
10019b00:	00c00804 	movi	r3,32
10019b04:	1885c83a 	sub	r2,r3,r2
10019b08:	003f3806 	br	100197ec <_dtoa_r+0xac0>
10019b0c:	800b883a 	mov	r5,r16
10019b10:	000f883a 	mov	r7,zero
10019b14:	01800284 	movi	r6,10
10019b18:	e009883a 	mov	r4,fp
10019b1c:	001b6640 	call	1001b664 <__multadd>
10019b20:	1021883a 	mov	r16,r2
10019b24:	d8800b17 	ldw	r2,44(sp)
10019b28:	00821b0e 	bge	zero,r2,1001a398 <_dtoa_r+0x166c>
10019b2c:	d8800615 	stw	r2,24(sp)
10019b30:	04c0b316 	blt	zero,r19,10019e00 <_dtoa_r+0x10d4>
10019b34:	8801341e 	bne	r17,zero,1001a008 <_dtoa_r+0x12dc>
10019b38:	8027883a 	mov	r19,r16
10019b3c:	dc400317 	ldw	r17,12(sp)
10019b40:	d8c00617 	ldw	r3,24(sp)
10019b44:	d8800117 	ldw	r2,4(sp)
10019b48:	8dffffc4 	addi	r23,r17,-1
10019b4c:	b8c7883a 	add	r3,r23,r3
10019b50:	d8c00615 	stw	r3,24(sp)
10019b54:	d8c00217 	ldw	r3,8(sp)
10019b58:	1080004c 	andi	r2,r2,1
10019b5c:	d8800815 	stw	r2,32(sp)
10019b60:	10c4b03a 	or	r2,r2,r3
10019b64:	d8800715 	stw	r2,28(sp)
10019b68:	00002c06 	br	10019c1c <_dtoa_r+0xef0>
10019b6c:	b80b883a 	mov	r5,r23
10019b70:	a809883a 	mov	r4,r21
10019b74:	da000515 	stw	r8,20(sp)
10019b78:	001be200 	call	1001be20 <__mcmp>
10019b7c:	b80b883a 	mov	r5,r23
10019b80:	e009883a 	mov	r4,fp
10019b84:	d8800115 	stw	r2,4(sp)
10019b88:	001b6400 	call	1001b640 <_Bfree>
10019b8c:	d8800117 	ldw	r2,4(sp)
10019b90:	da000517 	ldw	r8,20(sp)
10019b94:	1000021e 	bne	r2,zero,10019ba0 <_dtoa_r+0xe74>
10019b98:	d8c00717 	ldw	r3,28(sp)
10019b9c:	1801f226 	beq	r3,zero,1001a368 <_dtoa_r+0x163c>
10019ba0:	8dc00044 	addi	r23,r17,1
10019ba4:	a0010516 	blt	r20,zero,10019fbc <_dtoa_r+0x1290>
10019ba8:	d8c00217 	ldw	r3,8(sp)
10019bac:	a0e8b03a 	or	r20,r20,r3
10019bb0:	d8c00817 	ldw	r3,32(sp)
10019bb4:	1d28b03a 	or	r20,r3,r20
10019bb8:	a0010026 	beq	r20,zero,10019fbc <_dtoa_r+0x1290>
10019bbc:	00812816 	blt	zero,r2,1001a060 <_dtoa_r+0x1334>
10019bc0:	d8800617 	ldw	r2,24(sp)
10019bc4:	8a000005 	stb	r8,0(r17)
10019bc8:	14412926 	beq	r2,r17,1001a070 <_dtoa_r+0x1344>
10019bcc:	a80b883a 	mov	r5,r21
10019bd0:	000f883a 	mov	r7,zero
10019bd4:	01800284 	movi	r6,10
10019bd8:	e009883a 	mov	r4,fp
10019bdc:	001b6640 	call	1001b664 <__multadd>
10019be0:	102b883a 	mov	r21,r2
10019be4:	000f883a 	mov	r7,zero
10019be8:	01800284 	movi	r6,10
10019bec:	800b883a 	mov	r5,r16
10019bf0:	e009883a 	mov	r4,fp
10019bf4:	84c02026 	beq	r16,r19,10019c78 <_dtoa_r+0xf4c>
10019bf8:	001b6640 	call	1001b664 <__multadd>
10019bfc:	980b883a 	mov	r5,r19
10019c00:	000f883a 	mov	r7,zero
10019c04:	01800284 	movi	r6,10
10019c08:	e009883a 	mov	r4,fp
10019c0c:	1021883a 	mov	r16,r2
10019c10:	001b6640 	call	1001b664 <__multadd>
10019c14:	1027883a 	mov	r19,r2
10019c18:	b823883a 	mov	r17,r23
10019c1c:	900b883a 	mov	r5,r18
10019c20:	a809883a 	mov	r4,r21
10019c24:	0018b1c0 	call	10018b1c <quorem>
10019c28:	800b883a 	mov	r5,r16
10019c2c:	a809883a 	mov	r4,r21
10019c30:	102d883a 	mov	r22,r2
10019c34:	001be200 	call	1001be20 <__mcmp>
10019c38:	980d883a 	mov	r6,r19
10019c3c:	900b883a 	mov	r5,r18
10019c40:	e009883a 	mov	r4,fp
10019c44:	1029883a 	mov	r20,r2
10019c48:	001be780 	call	1001be78 <__mdiff>
10019c4c:	102f883a 	mov	r23,r2
10019c50:	10800317 	ldw	r2,12(r2)
10019c54:	b2000c04 	addi	r8,r22,48
10019c58:	103fc426 	beq	r2,zero,10019b6c <_dtoa_r+0xe40>
10019c5c:	b80b883a 	mov	r5,r23
10019c60:	e009883a 	mov	r4,fp
10019c64:	da000115 	stw	r8,4(sp)
10019c68:	001b6400 	call	1001b640 <_Bfree>
10019c6c:	00800044 	movi	r2,1
10019c70:	da000117 	ldw	r8,4(sp)
10019c74:	003fca06 	br	10019ba0 <_dtoa_r+0xe74>
10019c78:	001b6640 	call	1001b664 <__multadd>
10019c7c:	1021883a 	mov	r16,r2
10019c80:	1027883a 	mov	r19,r2
10019c84:	003fe406 	br	10019c18 <_dtoa_r+0xeec>
10019c88:	d8800217 	ldw	r2,8(sp)
10019c8c:	108000d0 	cmplti	r2,r2,3
10019c90:	10004b1e 	bne	r2,zero,10019dc0 <_dtoa_r+0x1094>
10019c94:	d8800617 	ldw	r2,24(sp)
10019c98:	103e0d1e 	bne	r2,zero,100194d0 <_dtoa_r+0x7a4>
10019c9c:	900b883a 	mov	r5,r18
10019ca0:	e009883a 	mov	r4,fp
10019ca4:	000f883a 	mov	r7,zero
10019ca8:	01800144 	movi	r6,5
10019cac:	001b6640 	call	1001b664 <__multadd>
10019cb0:	100b883a 	mov	r5,r2
10019cb4:	a809883a 	mov	r4,r21
10019cb8:	1025883a 	mov	r18,r2
10019cbc:	001be200 	call	1001be20 <__mcmp>
10019cc0:	00be030e 	bge	zero,r2,100194d0 <_dtoa_r+0x7a4>
10019cc4:	d8c00317 	ldw	r3,12(sp)
10019cc8:	00800c44 	movi	r2,49
10019ccc:	18800005 	stb	r2,0(r3)
10019cd0:	d8800417 	ldw	r2,16(sp)
10019cd4:	1dc00044 	addi	r23,r3,1
10019cd8:	14400044 	addi	r17,r2,1
10019cdc:	900b883a 	mov	r5,r18
10019ce0:	e009883a 	mov	r4,fp
10019ce4:	001b6400 	call	1001b640 <_Bfree>
10019ce8:	88800044 	addi	r2,r17,1
10019cec:	d8800415 	stw	r2,16(sp)
10019cf0:	803f121e 	bne	r16,zero,1001993c <_dtoa_r+0xc10>
10019cf4:	003d9f06 	br	10019374 <_dtoa_r+0x648>
10019cf8:	900b883a 	mov	r5,r18
10019cfc:	a809883a 	mov	r4,r21
10019d00:	001be200 	call	1001be20 <__mcmp>
10019d04:	103ed10e 	bge	r2,zero,1001984c <_dtoa_r+0xb20>
10019d08:	a80b883a 	mov	r5,r21
10019d0c:	000f883a 	mov	r7,zero
10019d10:	01800284 	movi	r6,10
10019d14:	e009883a 	mov	r4,fp
10019d18:	001b6640 	call	1001b664 <__multadd>
10019d1c:	102b883a 	mov	r21,r2
10019d20:	d8800417 	ldw	r2,16(sp)
10019d24:	153fffc4 	addi	r20,r2,-1
10019d28:	d8800717 	ldw	r2,28(sp)
10019d2c:	103f771e 	bne	r2,zero,10019b0c <_dtoa_r+0xde0>
10019d30:	d8800b17 	ldw	r2,44(sp)
10019d34:	0081910e 	bge	zero,r2,1001a37c <_dtoa_r+0x1650>
10019d38:	d8800615 	stw	r2,24(sp)
10019d3c:	003eca06 	br	10019868 <_dtoa_r+0xb3c>
10019d40:	d9800817 	ldw	r6,32(sp)
10019d44:	a80b883a 	mov	r5,r21
10019d48:	e009883a 	mov	r4,fp
10019d4c:	001bbbc0 	call	1001bbbc <__pow5mult>
10019d50:	102b883a 	mov	r21,r2
10019d54:	003e9a06 	br	100197c0 <_dtoa_r+0xa94>
10019d58:	008400b4 	movhi	r2,4098
10019d5c:	1007883a 	mov	r3,r2
10019d60:	18d73f04 	addi	r3,r3,23804
10019d64:	008400b4 	movhi	r2,4098
10019d68:	d8c00315 	stw	r3,12(sp)
10019d6c:	10973fc4 	addi	r2,r2,23807
10019d70:	003da506 	br	10019408 <_dtoa_r+0x6dc>
10019d74:	d8800117 	ldw	r2,4(sp)
10019d78:	103e991e 	bne	r2,zero,100197e0 <_dtoa_r+0xab4>
10019d7c:	00800434 	movhi	r2,16
10019d80:	10bfffc4 	addi	r2,r2,-1
10019d84:	8884703a 	and	r2,r17,r2
10019d88:	103e951e 	bne	r2,zero,100197e0 <_dtoa_r+0xab4>
10019d8c:	8c5ffc2c 	andhi	r17,r17,32752
10019d90:	883e9326 	beq	r17,zero,100197e0 <_dtoa_r+0xab4>
10019d94:	d8800517 	ldw	r2,20(sp)
10019d98:	a5000044 	addi	r20,r20,1
10019d9c:	04400044 	movi	r17,1
10019da0:	10800044 	addi	r2,r2,1
10019da4:	d8800515 	stw	r2,20(sp)
10019da8:	003e8e06 	br	100197e4 <_dtoa_r+0xab8>
10019dac:	00800044 	movi	r2,1
10019db0:	04800044 	movi	r18,1
10019db4:	d8800615 	stw	r2,24(sp)
10019db8:	d8801e15 	stw	r2,120(sp)
10019dbc:	003ef406 	br	10019990 <_dtoa_r+0xc64>
10019dc0:	d8800417 	ldw	r2,16(sp)
10019dc4:	10800044 	addi	r2,r2,1
10019dc8:	d8800415 	stw	r2,16(sp)
10019dcc:	d8800717 	ldw	r2,28(sp)
10019dd0:	103f571e 	bne	r2,zero,10019b30 <_dtoa_r+0xe04>
10019dd4:	900b883a 	mov	r5,r18
10019dd8:	a809883a 	mov	r4,r21
10019ddc:	0018b1c0 	call	10018b1c <quorem>
10019de0:	12000c04 	addi	r8,r2,48
10019de4:	d8800317 	ldw	r2,12(sp)
10019de8:	0029883a 	mov	r20,zero
10019dec:	15c00044 	addi	r23,r2,1
10019df0:	12000005 	stb	r8,0(r2)
10019df4:	003eb006 	br	100198b8 <_dtoa_r+0xb8c>
10019df8:	a005883a 	mov	r2,r20
10019dfc:	003e5506 	br	10019754 <_dtoa_r+0xa28>
10019e00:	800b883a 	mov	r5,r16
10019e04:	980d883a 	mov	r6,r19
10019e08:	e009883a 	mov	r4,fp
10019e0c:	001bce40 	call	1001bce4 <__lshift>
10019e10:	1021883a 	mov	r16,r2
10019e14:	003f4706 	br	10019b34 <_dtoa_r+0xe08>
10019e18:	14a5c83a 	sub	r18,r2,r18
10019e1c:	003e3e06 	br	10019718 <_dtoa_r+0x9ec>
10019e20:	008400b4 	movhi	r2,4098
10019e24:	10975004 	addi	r2,r2,23872
10019e28:	11800817 	ldw	r6,32(r2)
10019e2c:	11c00917 	ldw	r7,36(r2)
10019e30:	d9000117 	ldw	r4,4(sp)
10019e34:	880b883a 	mov	r5,r17
10019e38:	da400e15 	stw	r9,56(sp)
10019e3c:	da800d15 	stw	r10,52(sp)
10019e40:	001fdb40 	call	1001fdb4 <__divdf3>
10019e44:	d8800c15 	stw	r2,48(sp)
10019e48:	1827883a 	mov	r19,r3
10019e4c:	bdc003cc 	andi	r23,r23,15
10019e50:	040000c4 	movi	r16,3
10019e54:	da800d17 	ldw	r10,52(sp)
10019e58:	da400e17 	ldw	r9,56(sp)
10019e5c:	003c9206 	br	100190a8 <_dtoa_r+0x37c>
10019e60:	d8000715 	stw	zero,28(sp)
10019e64:	003ed306 	br	100199b4 <_dtoa_r+0xc88>
10019e68:	1000031e 	bne	r2,zero,10019e78 <_dtoa_r+0x114c>
10019e6c:	da000117 	ldw	r8,4(sp)
10019e70:	4200004c 	andi	r8,r8,1
10019e74:	403e9b1e 	bne	r8,zero,100198e4 <_dtoa_r+0xbb8>
10019e78:	1805883a 	mov	r2,r3
10019e7c:	00000206 	br	10019e88 <_dtoa_r+0x115c>
10019e80:	b8bfff83 	ldbu	r2,-2(r23)
10019e84:	182f883a 	mov	r23,r3
10019e88:	10803fcc 	andi	r2,r2,255
10019e8c:	1080201c 	xori	r2,r2,128
10019e90:	10bfe004 	addi	r2,r2,-128
10019e94:	10800c18 	cmpnei	r2,r2,48
10019e98:	b8ffffc4 	addi	r3,r23,-1
10019e9c:	103ff826 	beq	r2,zero,10019e80 <_dtoa_r+0x1154>
10019ea0:	003e9d06 	br	10019918 <_dtoa_r+0xbec>
10019ea4:	d8c00a17 	ldw	r3,40(sp)
10019ea8:	1800bc26 	beq	r3,zero,1001a19c <_dtoa_r+0x1470>
10019eac:	d8c00517 	ldw	r3,20(sp)
10019eb0:	10810cc4 	addi	r2,r2,1075
10019eb4:	a0a9883a 	add	r20,r20,r2
10019eb8:	1885883a 	add	r2,r3,r2
10019ebc:	1827883a 	mov	r19,r3
10019ec0:	dc800817 	ldw	r18,32(sp)
10019ec4:	d8800515 	stw	r2,20(sp)
10019ec8:	003e1a06 	br	10019734 <_dtoa_r+0xa08>
10019ecc:	d8c00317 	ldw	r3,12(sp)
10019ed0:	00800c44 	movi	r2,49
10019ed4:	18800005 	stb	r2,0(r3)
10019ed8:	d8800417 	ldw	r2,16(sp)
10019edc:	10800044 	addi	r2,r2,1
10019ee0:	d8800415 	stw	r2,16(sp)
10019ee4:	003e8c06 	br	10019918 <_dtoa_r+0xbec>
10019ee8:	8009883a 	mov	r4,r16
10019eec:	00219880 	call	10021988 <__floatsidf>
10019ef0:	900d883a 	mov	r6,r18
10019ef4:	980f883a 	mov	r7,r19
10019ef8:	1009883a 	mov	r4,r2
10019efc:	180b883a 	mov	r5,r3
10019f00:	00208bc0 	call	100208bc <__muldf3>
10019f04:	000d883a 	mov	r6,zero
10019f08:	01d00734 	movhi	r7,16412
10019f0c:	1009883a 	mov	r4,r2
10019f10:	180b883a 	mov	r5,r3
10019f14:	001f4140 	call	1001f414 <__adddf3>
10019f18:	d8800c15 	stw	r2,48(sp)
10019f1c:	00bf3034 	movhi	r2,64704
10019f20:	1885883a 	add	r2,r3,r2
10019f24:	d8800d15 	stw	r2,52(sp)
10019f28:	9009883a 	mov	r4,r18
10019f2c:	980b883a 	mov	r5,r19
10019f30:	000d883a 	mov	r6,zero
10019f34:	01d00534 	movhi	r7,16404
10019f38:	0020f480 	call	10020f48 <__subdf3>
10019f3c:	ddc00c17 	ldw	r23,48(sp)
10019f40:	dcc00d17 	ldw	r19,52(sp)
10019f44:	1009883a 	mov	r4,r2
10019f48:	b80d883a 	mov	r6,r23
10019f4c:	980f883a 	mov	r7,r19
10019f50:	180b883a 	mov	r5,r3
10019f54:	1025883a 	mov	r18,r2
10019f58:	1821883a 	mov	r16,r3
10019f5c:	00206dc0 	call	100206dc <__gedf2>
10019f60:	0080ee16 	blt	zero,r2,1001a31c <_dtoa_r+0x15f0>
10019f64:	99e0003c 	xorhi	r7,r19,32768
10019f68:	b80d883a 	mov	r6,r23
10019f6c:	9009883a 	mov	r4,r18
10019f70:	800b883a 	mov	r5,r16
10019f74:	00207cc0 	call	100207cc <__ledf2>
10019f78:	103d380e 	bge	r2,zero,1001945c <_dtoa_r+0x730>
10019f7c:	0025883a 	mov	r18,zero
10019f80:	0021883a 	mov	r16,zero
10019f84:	003d5206 	br	100194d0 <_dtoa_r+0x7a4>
10019f88:	d8800417 	ldw	r2,16(sp)
10019f8c:	1000ad1e 	bne	r2,zero,1001a244 <_dtoa_r+0x1518>
10019f90:	dc800117 	ldw	r18,4(sp)
10019f94:	8827883a 	mov	r19,r17
10019f98:	04000084 	movi	r16,2
10019f9c:	003c5b06 	br	1001910c <_dtoa_r+0x3e0>
10019fa0:	d8800117 	ldw	r2,4(sp)
10019fa4:	103ecf1e 	bne	r2,zero,10019ae4 <_dtoa_r+0xdb8>
10019fa8:	00800434 	movhi	r2,16
10019fac:	10bfffc4 	addi	r2,r2,-1
10019fb0:	8884703a 	and	r2,r17,r2
10019fb4:	103f7526 	beq	r2,zero,10019d8c <_dtoa_r+0x1060>
10019fb8:	003eca06 	br	10019ae4 <_dtoa_r+0xdb8>
10019fbc:	00800e0e 	bge	zero,r2,10019ff8 <_dtoa_r+0x12cc>
10019fc0:	a80b883a 	mov	r5,r21
10019fc4:	01800044 	movi	r6,1
10019fc8:	e009883a 	mov	r4,fp
10019fcc:	da000115 	stw	r8,4(sp)
10019fd0:	001bce40 	call	1001bce4 <__lshift>
10019fd4:	900b883a 	mov	r5,r18
10019fd8:	1009883a 	mov	r4,r2
10019fdc:	102b883a 	mov	r21,r2
10019fe0:	001be200 	call	1001be20 <__mcmp>
10019fe4:	da000117 	ldw	r8,4(sp)
10019fe8:	0080d50e 	bge	zero,r2,1001a340 <_dtoa_r+0x1614>
10019fec:	42000e60 	cmpeqi	r8,r8,57
10019ff0:	4000c31e 	bne	r8,zero,1001a300 <_dtoa_r+0x15d4>
10019ff4:	b2000c44 	addi	r8,r22,49
10019ff8:	8029883a 	mov	r20,r16
10019ffc:	8a000005 	stb	r8,0(r17)
1001a000:	9821883a 	mov	r16,r19
1001a004:	003e4406 	br	10019918 <_dtoa_r+0xbec>
1001a008:	81400117 	ldw	r5,4(r16)
1001a00c:	e009883a 	mov	r4,fp
1001a010:	001b59c0 	call	1001b59c <_Balloc>
1001a014:	81800417 	ldw	r6,16(r16)
1001a018:	81400304 	addi	r5,r16,12
1001a01c:	11000304 	addi	r4,r2,12
1001a020:	31800084 	addi	r6,r6,2
1001a024:	300c90ba 	slli	r6,r6,2
1001a028:	1023883a 	mov	r17,r2
1001a02c:	00156f00 	call	100156f0 <memcpy>
1001a030:	01800044 	movi	r6,1
1001a034:	880b883a 	mov	r5,r17
1001a038:	e009883a 	mov	r4,fp
1001a03c:	001bce40 	call	1001bce4 <__lshift>
1001a040:	1027883a 	mov	r19,r2
1001a044:	003ebd06 	br	10019b3c <_dtoa_r+0xe10>
1001a048:	dd400117 	ldw	r21,4(sp)
1001a04c:	003cc906 	br	10019374 <_dtoa_r+0x648>
1001a050:	d8800517 	ldw	r2,20(sp)
1001a054:	d8c00617 	ldw	r3,24(sp)
1001a058:	10e7c83a 	sub	r19,r2,r3
1001a05c:	003db506 	br	10019734 <_dtoa_r+0xa08>
1001a060:	40800e58 	cmpnei	r2,r8,57
1001a064:	1000a626 	beq	r2,zero,1001a300 <_dtoa_r+0x15d4>
1001a068:	42000044 	addi	r8,r8,1
1001a06c:	003fe206 	br	10019ff8 <_dtoa_r+0x12cc>
1001a070:	8029883a 	mov	r20,r16
1001a074:	9821883a 	mov	r16,r19
1001a078:	003e0f06 	br	100198b8 <_dtoa_r+0xb8c>
1001a07c:	d9000c17 	ldw	r4,48(sp)
1001a080:	d9400d17 	ldw	r5,52(sp)
1001a084:	da401015 	stw	r9,64(sp)
1001a088:	00208bc0 	call	100208bc <__muldf3>
1001a08c:	d9000e17 	ldw	r4,56(sp)
1001a090:	d8c00d15 	stw	r3,52(sp)
1001a094:	da401017 	ldw	r9,64(sp)
1001a098:	d8c00317 	ldw	r3,12(sp)
1001a09c:	d8800c15 	stw	r2,48(sp)
1001a0a0:	20800058 	cmpnei	r2,r4,1
1001a0a4:	1a400005 	stb	r9,0(r3)
1001a0a8:	1907883a 	add	r3,r3,r4
1001a0ac:	1809883a 	mov	r4,r3
1001a0b0:	10001d26 	beq	r2,zero,1001a128 <_dtoa_r+0x13fc>
1001a0b4:	8007883a 	mov	r3,r16
1001a0b8:	9005883a 	mov	r2,r18
1001a0bc:	dc400e15 	stw	r17,56(sp)
1001a0c0:	2021883a 	mov	r16,r4
1001a0c4:	000d883a 	mov	r6,zero
1001a0c8:	01d00934 	movhi	r7,16420
1001a0cc:	1009883a 	mov	r4,r2
1001a0d0:	180b883a 	mov	r5,r3
1001a0d4:	00208bc0 	call	100208bc <__muldf3>
1001a0d8:	180b883a 	mov	r5,r3
1001a0dc:	1009883a 	mov	r4,r2
1001a0e0:	1825883a 	mov	r18,r3
1001a0e4:	1023883a 	mov	r17,r2
1001a0e8:	00219080 	call	10021908 <__fixdfsi>
1001a0ec:	1009883a 	mov	r4,r2
1001a0f0:	1027883a 	mov	r19,r2
1001a0f4:	00219880 	call	10021988 <__floatsidf>
1001a0f8:	100d883a 	mov	r6,r2
1001a0fc:	180f883a 	mov	r7,r3
1001a100:	8809883a 	mov	r4,r17
1001a104:	900b883a 	mov	r5,r18
1001a108:	bdc00044 	addi	r23,r23,1
1001a10c:	9cc00c04 	addi	r19,r19,48
1001a110:	0020f480 	call	10020f48 <__subdf3>
1001a114:	bcffffc5 	stb	r19,-1(r23)
1001a118:	bc3fea1e 	bne	r23,r16,1001a0c4 <_dtoa_r+0x1398>
1001a11c:	dc400e17 	ldw	r17,56(sp)
1001a120:	1025883a 	mov	r18,r2
1001a124:	1821883a 	mov	r16,r3
1001a128:	d9000c17 	ldw	r4,48(sp)
1001a12c:	d9400d17 	ldw	r5,52(sp)
1001a130:	000d883a 	mov	r6,zero
1001a134:	01cff834 	movhi	r7,16352
1001a138:	001f4140 	call	1001f414 <__adddf3>
1001a13c:	100d883a 	mov	r6,r2
1001a140:	180f883a 	mov	r7,r3
1001a144:	9009883a 	mov	r4,r18
1001a148:	800b883a 	mov	r5,r16
1001a14c:	00206dc0 	call	100206dc <__gedf2>
1001a150:	00807516 	blt	zero,r2,1001a328 <_dtoa_r+0x15fc>
1001a154:	d9800c17 	ldw	r6,48(sp)
1001a158:	d9c00d17 	ldw	r7,52(sp)
1001a15c:	0009883a 	mov	r4,zero
1001a160:	014ff834 	movhi	r5,16352
1001a164:	0020f480 	call	10020f48 <__subdf3>
1001a168:	100d883a 	mov	r6,r2
1001a16c:	180f883a 	mov	r7,r3
1001a170:	9009883a 	mov	r4,r18
1001a174:	800b883a 	mov	r5,r16
1001a178:	00207cc0 	call	100207cc <__ledf2>
1001a17c:	103cb70e 	bge	r2,zero,1001945c <_dtoa_r+0x730>
1001a180:	00000106 	br	1001a188 <_dtoa_r+0x145c>
1001a184:	182f883a 	mov	r23,r3
1001a188:	b8bfffc7 	ldb	r2,-1(r23)
1001a18c:	b8ffffc4 	addi	r3,r23,-1
1001a190:	10800c20 	cmpeqi	r2,r2,48
1001a194:	103ffb1e 	bne	r2,zero,1001a184 <_dtoa_r+0x1458>
1001a198:	003c7306 	br	10019368 <_dtoa_r+0x63c>
1001a19c:	d8c01217 	ldw	r3,72(sp)
1001a1a0:	d9000517 	ldw	r4,20(sp)
1001a1a4:	00800d84 	movi	r2,54
1001a1a8:	10c5c83a 	sub	r2,r2,r3
1001a1ac:	a0a9883a 	add	r20,r20,r2
1001a1b0:	2085883a 	add	r2,r4,r2
1001a1b4:	2027883a 	mov	r19,r4
1001a1b8:	dc800817 	ldw	r18,32(sp)
1001a1bc:	d8800515 	stw	r2,20(sp)
1001a1c0:	003d5c06 	br	10019734 <_dtoa_r+0xa08>
1001a1c4:	d8800617 	ldw	r2,24(sp)
1001a1c8:	103f4726 	beq	r2,zero,10019ee8 <_dtoa_r+0x11bc>
1001a1cc:	ddc00b17 	ldw	r23,44(sp)
1001a1d0:	05fca20e 	bge	zero,r23,1001945c <_dtoa_r+0x730>
1001a1d4:	980b883a 	mov	r5,r19
1001a1d8:	000d883a 	mov	r6,zero
1001a1dc:	01d00934 	movhi	r7,16420
1001a1e0:	9009883a 	mov	r4,r18
1001a1e4:	00208bc0 	call	100208bc <__muldf3>
1001a1e8:	81000044 	addi	r4,r16,1
1001a1ec:	1025883a 	mov	r18,r2
1001a1f0:	1827883a 	mov	r19,r3
1001a1f4:	00219880 	call	10021988 <__floatsidf>
1001a1f8:	900d883a 	mov	r6,r18
1001a1fc:	980f883a 	mov	r7,r19
1001a200:	1009883a 	mov	r4,r2
1001a204:	180b883a 	mov	r5,r3
1001a208:	00208bc0 	call	100208bc <__muldf3>
1001a20c:	000d883a 	mov	r6,zero
1001a210:	01d00734 	movhi	r7,16412
1001a214:	1009883a 	mov	r4,r2
1001a218:	180b883a 	mov	r5,r3
1001a21c:	001f4140 	call	1001f414 <__adddf3>
1001a220:	d8800c15 	stw	r2,48(sp)
1001a224:	d8800417 	ldw	r2,16(sp)
1001a228:	ddc00e15 	stw	r23,56(sp)
1001a22c:	10bfffc4 	addi	r2,r2,-1
1001a230:	d8800f15 	stw	r2,60(sp)
1001a234:	00bf3034 	movhi	r2,64704
1001a238:	1885883a 	add	r2,r3,r2
1001a23c:	d8800d15 	stw	r2,52(sp)
1001a240:	003bd006 	br	10019184 <_dtoa_r+0x458>
1001a244:	d8800417 	ldw	r2,16(sp)
1001a248:	d9000117 	ldw	r4,4(sp)
1001a24c:	880b883a 	mov	r5,r17
1001a250:	00afc83a 	sub	r23,zero,r2
1001a254:	b88003cc 	andi	r2,r23,15
1001a258:	100690fa 	slli	r3,r2,3
1001a25c:	008400b4 	movhi	r2,4098
1001a260:	10975a04 	addi	r2,r2,23912
1001a264:	10c5883a 	add	r2,r2,r3
1001a268:	11800017 	ldw	r6,0(r2)
1001a26c:	11c00117 	ldw	r7,4(r2)
1001a270:	b82fd13a 	srai	r23,r23,4
1001a274:	00208bc0 	call	100208bc <__muldf3>
1001a278:	1025883a 	mov	r18,r2
1001a27c:	1827883a 	mov	r19,r3
1001a280:	b8004a26 	beq	r23,zero,1001a3ac <_dtoa_r+0x1680>
1001a284:	020400b4 	movhi	r8,4098
1001a288:	04000084 	movi	r16,2
1001a28c:	42175004 	addi	r8,r8,23872
1001a290:	dc400c15 	stw	r17,48(sp)
1001a294:	000f883a 	mov	r7,zero
1001a298:	8023883a 	mov	r17,r16
1001a29c:	4021883a 	mov	r16,r8
1001a2a0:	b980004c 	andi	r6,r23,1
1001a2a4:	1009883a 	mov	r4,r2
1001a2a8:	b82fd07a 	srai	r23,r23,1
1001a2ac:	180b883a 	mov	r5,r3
1001a2b0:	30000526 	beq	r6,zero,1001a2c8 <_dtoa_r+0x159c>
1001a2b4:	81c00117 	ldw	r7,4(r16)
1001a2b8:	81800017 	ldw	r6,0(r16)
1001a2bc:	8c400044 	addi	r17,r17,1
1001a2c0:	00208bc0 	call	100208bc <__muldf3>
1001a2c4:	01c00044 	movi	r7,1
1001a2c8:	84000204 	addi	r16,r16,8
1001a2cc:	b83ff41e 	bne	r23,zero,1001a2a0 <_dtoa_r+0x1574>
1001a2d0:	39c03fcc 	andi	r7,r7,255
1001a2d4:	8821883a 	mov	r16,r17
1001a2d8:	dc400c17 	ldw	r17,48(sp)
1001a2dc:	383b8b26 	beq	r7,zero,1001910c <_dtoa_r+0x3e0>
1001a2e0:	1025883a 	mov	r18,r2
1001a2e4:	1827883a 	mov	r19,r3
1001a2e8:	003b8806 	br	1001910c <_dtoa_r+0x3e0>
1001a2ec:	d8800417 	ldw	r2,16(sp)
1001a2f0:	02000c44 	movi	r8,49
1001a2f4:	10800044 	addi	r2,r2,1
1001a2f8:	d8800415 	stw	r2,16(sp)
1001a2fc:	003cf606 	br	100196d8 <_dtoa_r+0x9ac>
1001a300:	00800e44 	movi	r2,57
1001a304:	8029883a 	mov	r20,r16
1001a308:	88800005 	stb	r2,0(r17)
1001a30c:	9821883a 	mov	r16,r19
1001a310:	00c00e44 	movi	r3,57
1001a314:	d9400317 	ldw	r5,12(sp)
1001a318:	003d7706 	br	100198f8 <_dtoa_r+0xbcc>
1001a31c:	0025883a 	mov	r18,zero
1001a320:	0021883a 	mov	r16,zero
1001a324:	003e6706 	br	10019cc4 <_dtoa_r+0xf98>
1001a328:	d8800f17 	ldw	r2,60(sp)
1001a32c:	ba3fffc3 	ldbu	r8,-1(r23)
1001a330:	d9000317 	ldw	r4,12(sp)
1001a334:	10800044 	addi	r2,r2,1
1001a338:	d8800415 	stw	r2,16(sp)
1001a33c:	003cdf06 	br	100196bc <_dtoa_r+0x990>
1001a340:	103f2d1e 	bne	r2,zero,10019ff8 <_dtoa_r+0x12cc>
1001a344:	4080004c 	andi	r2,r8,1
1001a348:	103f281e 	bne	r2,zero,10019fec <_dtoa_r+0x12c0>
1001a34c:	003f2a06 	br	10019ff8 <_dtoa_r+0x12cc>
1001a350:	d8800f17 	ldw	r2,60(sp)
1001a354:	8811883a 	mov	r8,r17
1001a358:	d9000317 	ldw	r4,12(sp)
1001a35c:	10800044 	addi	r2,r2,1
1001a360:	d8800415 	stw	r2,16(sp)
1001a364:	003cd506 	br	100196bc <_dtoa_r+0x990>
1001a368:	40800e60 	cmpeqi	r2,r8,57
1001a36c:	8dc00044 	addi	r23,r17,1
1001a370:	103fe31e 	bne	r2,zero,1001a300 <_dtoa_r+0x15d4>
1001a374:	053f1f16 	blt	zero,r20,10019ff4 <_dtoa_r+0x12c8>
1001a378:	003f1f06 	br	10019ff8 <_dtoa_r+0x12cc>
1001a37c:	d8800217 	ldw	r2,8(sp)
1001a380:	108000c8 	cmpgei	r2,r2,3
1001a384:	103e9326 	beq	r2,zero,10019dd4 <_dtoa_r+0x10a8>
1001a388:	d8800b17 	ldw	r2,44(sp)
1001a38c:	dd000415 	stw	r20,16(sp)
1001a390:	d8800615 	stw	r2,24(sp)
1001a394:	003e3f06 	br	10019c94 <_dtoa_r+0xf68>
1001a398:	d8800217 	ldw	r2,8(sp)
1001a39c:	108000c8 	cmpgei	r2,r2,3
1001a3a0:	103ff91e 	bne	r2,zero,1001a388 <_dtoa_r+0x165c>
1001a3a4:	d8800b17 	ldw	r2,44(sp)
1001a3a8:	003de006 	br	10019b2c <_dtoa_r+0xe00>
1001a3ac:	04000084 	movi	r16,2
1001a3b0:	003b5606 	br	1001910c <_dtoa_r+0x3e0>
1001a3b4:	d8800f17 	ldw	r2,60(sp)
1001a3b8:	d9000317 	ldw	r4,12(sp)
1001a3bc:	10800044 	addi	r2,r2,1
1001a3c0:	d8800415 	stw	r2,16(sp)
1001a3c4:	003cbd06 	br	100196bc <_dtoa_r+0x990>
1001a3c8:	008400b4 	movhi	r2,4098
1001a3cc:	10974004 	addi	r2,r2,23808
1001a3d0:	d8800315 	stw	r2,12(sp)
1001a3d4:	003a8706 	br	10018df4 <_dtoa_r+0xc8>
1001a3d8:	000b883a 	mov	r5,zero
1001a3dc:	003b1b06 	br	1001904c <_dtoa_r+0x320>
1001a3e0:	18c00120 	cmpeqi	r3,r3,4
1001a3e4:	183d0f1e 	bne	r3,zero,10019824 <_dtoa_r+0xaf8>
1001a3e8:	00c00f04 	movi	r3,60
1001a3ec:	1885c83a 	sub	r2,r3,r2
1001a3f0:	003d0706 	br	10019810 <_dtoa_r+0xae4>

1001a3f4 <__sflush_r>:
1001a3f4:	2880030b 	ldhu	r2,12(r5)
1001a3f8:	defffb04 	addi	sp,sp,-20
1001a3fc:	dcc00315 	stw	r19,12(sp)
1001a400:	dc000015 	stw	r16,0(sp)
1001a404:	dfc00415 	stw	ra,16(sp)
1001a408:	dc800215 	stw	r18,8(sp)
1001a40c:	dc400115 	stw	r17,4(sp)
1001a410:	10c0020c 	andi	r3,r2,8
1001a414:	2821883a 	mov	r16,r5
1001a418:	2027883a 	mov	r19,r4
1001a41c:	18003f1e 	bne	r3,zero,1001a51c <__sflush_r+0x128>
1001a420:	28c00117 	ldw	r3,4(r5)
1001a424:	10820014 	ori	r2,r2,2048
1001a428:	2880030d 	sth	r2,12(r5)
1001a42c:	00c0550e 	bge	zero,r3,1001a584 <__sflush_r+0x190>
1001a430:	82000a17 	ldw	r8,40(r16)
1001a434:	40003126 	beq	r8,zero,1001a4fc <__sflush_r+0x108>
1001a438:	9c400017 	ldw	r17,0(r19)
1001a43c:	1104000c 	andi	r4,r2,4096
1001a440:	98000015 	stw	zero,0(r19)
1001a444:	1007883a 	mov	r3,r2
1001a448:	81400717 	ldw	r5,28(r16)
1001a44c:	2000521e 	bne	r4,zero,1001a598 <__sflush_r+0x1a4>
1001a450:	01c00044 	movi	r7,1
1001a454:	000d883a 	mov	r6,zero
1001a458:	9809883a 	mov	r4,r19
1001a45c:	403ee83a 	callr	r8
1001a460:	10ffffd8 	cmpnei	r3,r2,-1
1001a464:	18005826 	beq	r3,zero,1001a5c8 <__sflush_r+0x1d4>
1001a468:	80c0030b 	ldhu	r3,12(r16)
1001a46c:	82000a17 	ldw	r8,40(r16)
1001a470:	81400717 	ldw	r5,28(r16)
1001a474:	18c0010c 	andi	r3,r3,4
1001a478:	18000626 	beq	r3,zero,1001a494 <__sflush_r+0xa0>
1001a47c:	81000117 	ldw	r4,4(r16)
1001a480:	80c00c17 	ldw	r3,48(r16)
1001a484:	1105c83a 	sub	r2,r2,r4
1001a488:	18000226 	beq	r3,zero,1001a494 <__sflush_r+0xa0>
1001a48c:	80c00f17 	ldw	r3,60(r16)
1001a490:	10c5c83a 	sub	r2,r2,r3
1001a494:	000f883a 	mov	r7,zero
1001a498:	100d883a 	mov	r6,r2
1001a49c:	9809883a 	mov	r4,r19
1001a4a0:	403ee83a 	callr	r8
1001a4a4:	10ffffd8 	cmpnei	r3,r2,-1
1001a4a8:	18003d1e 	bne	r3,zero,1001a5a0 <__sflush_r+0x1ac>
1001a4ac:	99000017 	ldw	r4,0(r19)
1001a4b0:	80c0030b 	ldhu	r3,12(r16)
1001a4b4:	20004e26 	beq	r4,zero,1001a5f0 <__sflush_r+0x1fc>
1001a4b8:	21400760 	cmpeqi	r5,r4,29
1001a4bc:	2800021e 	bne	r5,zero,1001a4c8 <__sflush_r+0xd4>
1001a4c0:	210005a0 	cmpeqi	r4,r4,22
1001a4c4:	20002c26 	beq	r4,zero,1001a578 <__sflush_r+0x184>
1001a4c8:	80800417 	ldw	r2,16(r16)
1001a4cc:	18fdffcc 	andi	r3,r3,63487
1001a4d0:	80c0030d 	sth	r3,12(r16)
1001a4d4:	80000115 	stw	zero,4(r16)
1001a4d8:	80800015 	stw	r2,0(r16)
1001a4dc:	81400c17 	ldw	r5,48(r16)
1001a4e0:	9c400015 	stw	r17,0(r19)
1001a4e4:	28000526 	beq	r5,zero,1001a4fc <__sflush_r+0x108>
1001a4e8:	80801004 	addi	r2,r16,64
1001a4ec:	28800226 	beq	r5,r2,1001a4f8 <__sflush_r+0x104>
1001a4f0:	9809883a 	mov	r4,r19
1001a4f4:	001aba80 	call	1001aba8 <_free_r>
1001a4f8:	80000c15 	stw	zero,48(r16)
1001a4fc:	0005883a 	mov	r2,zero
1001a500:	dfc00417 	ldw	ra,16(sp)
1001a504:	dcc00317 	ldw	r19,12(sp)
1001a508:	dc800217 	ldw	r18,8(sp)
1001a50c:	dc400117 	ldw	r17,4(sp)
1001a510:	dc000017 	ldw	r16,0(sp)
1001a514:	dec00504 	addi	sp,sp,20
1001a518:	f800283a 	ret
1001a51c:	2c800417 	ldw	r18,16(r5)
1001a520:	903ff626 	beq	r18,zero,1001a4fc <__sflush_r+0x108>
1001a524:	2c400017 	ldw	r17,0(r5)
1001a528:	108000cc 	andi	r2,r2,3
1001a52c:	2c800015 	stw	r18,0(r5)
1001a530:	8ca3c83a 	sub	r17,r17,r18
1001a534:	1000161e 	bne	r2,zero,1001a590 <__sflush_r+0x19c>
1001a538:	28800517 	ldw	r2,20(r5)
1001a53c:	80800215 	stw	r2,8(r16)
1001a540:	04400316 	blt	zero,r17,1001a550 <__sflush_r+0x15c>
1001a544:	003fed06 	br	1001a4fc <__sflush_r+0x108>
1001a548:	90a5883a 	add	r18,r18,r2
1001a54c:	047feb0e 	bge	zero,r17,1001a4fc <__sflush_r+0x108>
1001a550:	80800917 	ldw	r2,36(r16)
1001a554:	81400717 	ldw	r5,28(r16)
1001a558:	880f883a 	mov	r7,r17
1001a55c:	900d883a 	mov	r6,r18
1001a560:	9809883a 	mov	r4,r19
1001a564:	103ee83a 	callr	r2
1001a568:	88a3c83a 	sub	r17,r17,r2
1001a56c:	00bff616 	blt	zero,r2,1001a548 <__sflush_r+0x154>
1001a570:	80c0030b 	ldhu	r3,12(r16)
1001a574:	00bfffc4 	movi	r2,-1
1001a578:	18c01014 	ori	r3,r3,64
1001a57c:	80c0030d 	sth	r3,12(r16)
1001a580:	003fdf06 	br	1001a500 <__sflush_r+0x10c>
1001a584:	28c00f17 	ldw	r3,60(r5)
1001a588:	00ffa916 	blt	zero,r3,1001a430 <__sflush_r+0x3c>
1001a58c:	003fdb06 	br	1001a4fc <__sflush_r+0x108>
1001a590:	0005883a 	mov	r2,zero
1001a594:	003fe906 	br	1001a53c <__sflush_r+0x148>
1001a598:	80801417 	ldw	r2,80(r16)
1001a59c:	003fb506 	br	1001a474 <__sflush_r+0x80>
1001a5a0:	80c0030b 	ldhu	r3,12(r16)
1001a5a4:	81000417 	ldw	r4,16(r16)
1001a5a8:	80000115 	stw	zero,4(r16)
1001a5ac:	197dffcc 	andi	r5,r3,63487
1001a5b0:	8140030d 	sth	r5,12(r16)
1001a5b4:	81000015 	stw	r4,0(r16)
1001a5b8:	18c4000c 	andi	r3,r3,4096
1001a5bc:	183fc726 	beq	r3,zero,1001a4dc <__sflush_r+0xe8>
1001a5c0:	80801415 	stw	r2,80(r16)
1001a5c4:	003fc506 	br	1001a4dc <__sflush_r+0xe8>
1001a5c8:	98c00017 	ldw	r3,0(r19)
1001a5cc:	183fa626 	beq	r3,zero,1001a468 <__sflush_r+0x74>
1001a5d0:	19000760 	cmpeqi	r4,r3,29
1001a5d4:	20000e1e 	bne	r4,zero,1001a610 <__sflush_r+0x21c>
1001a5d8:	18c00598 	cmpnei	r3,r3,22
1001a5dc:	18000c26 	beq	r3,zero,1001a610 <__sflush_r+0x21c>
1001a5e0:	80c0030b 	ldhu	r3,12(r16)
1001a5e4:	18c01014 	ori	r3,r3,64
1001a5e8:	80c0030d 	sth	r3,12(r16)
1001a5ec:	003fc406 	br	1001a500 <__sflush_r+0x10c>
1001a5f0:	81000417 	ldw	r4,16(r16)
1001a5f4:	197dffcc 	andi	r5,r3,63487
1001a5f8:	8140030d 	sth	r5,12(r16)
1001a5fc:	80000115 	stw	zero,4(r16)
1001a600:	81000015 	stw	r4,0(r16)
1001a604:	18c4000c 	andi	r3,r3,4096
1001a608:	183fb426 	beq	r3,zero,1001a4dc <__sflush_r+0xe8>
1001a60c:	003fec06 	br	1001a5c0 <__sflush_r+0x1cc>
1001a610:	9c400015 	stw	r17,0(r19)
1001a614:	0005883a 	mov	r2,zero
1001a618:	003fb906 	br	1001a500 <__sflush_r+0x10c>

1001a61c <_fflush_r>:
1001a61c:	defffd04 	addi	sp,sp,-12
1001a620:	dc000115 	stw	r16,4(sp)
1001a624:	dfc00215 	stw	ra,8(sp)
1001a628:	2021883a 	mov	r16,r4
1001a62c:	20000226 	beq	r4,zero,1001a638 <_fflush_r+0x1c>
1001a630:	20800e17 	ldw	r2,56(r4)
1001a634:	10000726 	beq	r2,zero,1001a654 <_fflush_r+0x38>
1001a638:	2880030f 	ldh	r2,12(r5)
1001a63c:	10000a1e 	bne	r2,zero,1001a668 <_fflush_r+0x4c>
1001a640:	0005883a 	mov	r2,zero
1001a644:	dfc00217 	ldw	ra,8(sp)
1001a648:	dc000117 	ldw	r16,4(sp)
1001a64c:	dec00304 	addi	sp,sp,12
1001a650:	f800283a 	ret
1001a654:	d9400015 	stw	r5,0(sp)
1001a658:	001a9a00 	call	1001a9a0 <__sinit>
1001a65c:	d9400017 	ldw	r5,0(sp)
1001a660:	2880030f 	ldh	r2,12(r5)
1001a664:	103ff626 	beq	r2,zero,1001a640 <_fflush_r+0x24>
1001a668:	8009883a 	mov	r4,r16
1001a66c:	dfc00217 	ldw	ra,8(sp)
1001a670:	dc000117 	ldw	r16,4(sp)
1001a674:	dec00304 	addi	sp,sp,12
1001a678:	001a3f41 	jmpi	1001a3f4 <__sflush_r>

1001a67c <fflush>:
1001a67c:	200b883a 	mov	r5,r4
1001a680:	20000326 	beq	r4,zero,1001a690 <fflush+0x14>
1001a684:	008400f4 	movhi	r2,4099
1001a688:	11211717 	ldw	r4,-31652(r2)
1001a68c:	001a61c1 	jmpi	1001a61c <_fflush_r>
1001a690:	008400f4 	movhi	r2,4099
1001a694:	11211617 	ldw	r4,-31656(r2)
1001a698:	014400b4 	movhi	r5,4098
1001a69c:	29698704 	addi	r5,r5,-23012
1001a6a0:	001b40c1 	jmpi	1001b40c <_fwalk_reent>

1001a6a4 <__fp_lock>:
1001a6a4:	0005883a 	mov	r2,zero
1001a6a8:	f800283a 	ret

1001a6ac <_cleanup_r>:
1001a6ac:	014400b4 	movhi	r5,4098
1001a6b0:	29790e04 	addi	r5,r5,-7112
1001a6b4:	001b40c1 	jmpi	1001b40c <_fwalk_reent>

1001a6b8 <__sinit.part.0>:
1001a6b8:	00c400b4 	movhi	r3,4098
1001a6bc:	20800117 	ldw	r2,4(r4)
1001a6c0:	18e9ab04 	addi	r3,r3,-22868
1001a6c4:	20c00f15 	stw	r3,60(r4)
1001a6c8:	2140bb04 	addi	r5,r4,748
1001a6cc:	00c000c4 	movi	r3,3
1001a6d0:	20c0b915 	stw	r3,740(r4)
1001a6d4:	2140ba15 	stw	r5,744(r4)
1001a6d8:	2000b815 	stw	zero,736(r4)
1001a6dc:	10001705 	stb	zero,92(r2)
1001a6e0:	10001745 	stb	zero,93(r2)
1001a6e4:	10001785 	stb	zero,94(r2)
1001a6e8:	100017c5 	stb	zero,95(r2)
1001a6ec:	10001805 	stb	zero,96(r2)
1001a6f0:	10001845 	stb	zero,97(r2)
1001a6f4:	10001885 	stb	zero,98(r2)
1001a6f8:	100018c5 	stb	zero,99(r2)
1001a6fc:	00c00104 	movi	r3,4
1001a700:	10c00315 	stw	r3,12(r2)
1001a704:	02040074 	movhi	r8,4097
1001a708:	20c00217 	ldw	r3,8(r4)
1001a70c:	01c40074 	movhi	r7,4097
1001a710:	01840074 	movhi	r6,4097
1001a714:	01440074 	movhi	r5,4097
1001a718:	42186504 	addi	r8,r8,24980
1001a71c:	39d87c04 	addi	r7,r7,25072
1001a720:	31989c04 	addi	r6,r6,25200
1001a724:	2958b304 	addi	r5,r5,25292
1001a728:	02400074 	movhi	r9,1
1001a72c:	10001915 	stw	zero,100(r2)
1001a730:	10000015 	stw	zero,0(r2)
1001a734:	10000115 	stw	zero,4(r2)
1001a738:	10000215 	stw	zero,8(r2)
1001a73c:	10000415 	stw	zero,16(r2)
1001a740:	10000515 	stw	zero,20(r2)
1001a744:	10000615 	stw	zero,24(r2)
1001a748:	10800715 	stw	r2,28(r2)
1001a74c:	12000815 	stw	r8,32(r2)
1001a750:	11c00915 	stw	r7,36(r2)
1001a754:	11800a15 	stw	r6,40(r2)
1001a758:	11400b15 	stw	r5,44(r2)
1001a75c:	4a400284 	addi	r9,r9,10
1001a760:	1a400315 	stw	r9,12(r3)
1001a764:	18001915 	stw	zero,100(r3)
1001a768:	18000015 	stw	zero,0(r3)
1001a76c:	18000115 	stw	zero,4(r3)
1001a770:	18000215 	stw	zero,8(r3)
1001a774:	18000415 	stw	zero,16(r3)
1001a778:	18001705 	stb	zero,92(r3)
1001a77c:	18001745 	stb	zero,93(r3)
1001a780:	18001785 	stb	zero,94(r3)
1001a784:	180017c5 	stb	zero,95(r3)
1001a788:	18001805 	stb	zero,96(r3)
1001a78c:	18001845 	stb	zero,97(r3)
1001a790:	18001885 	stb	zero,98(r3)
1001a794:	180018c5 	stb	zero,99(r3)
1001a798:	20800317 	ldw	r2,12(r4)
1001a79c:	024000b4 	movhi	r9,2
1001a7a0:	18000515 	stw	zero,20(r3)
1001a7a4:	18000615 	stw	zero,24(r3)
1001a7a8:	18c00715 	stw	r3,28(r3)
1001a7ac:	1a000815 	stw	r8,32(r3)
1001a7b0:	19c00915 	stw	r7,36(r3)
1001a7b4:	19800a15 	stw	r6,40(r3)
1001a7b8:	19400b15 	stw	r5,44(r3)
1001a7bc:	4a400484 	addi	r9,r9,18
1001a7c0:	10001915 	stw	zero,100(r2)
1001a7c4:	10000015 	stw	zero,0(r2)
1001a7c8:	10000115 	stw	zero,4(r2)
1001a7cc:	10000215 	stw	zero,8(r2)
1001a7d0:	12400315 	stw	r9,12(r2)
1001a7d4:	10000415 	stw	zero,16(r2)
1001a7d8:	10000515 	stw	zero,20(r2)
1001a7dc:	10000615 	stw	zero,24(r2)
1001a7e0:	10001705 	stb	zero,92(r2)
1001a7e4:	10001745 	stb	zero,93(r2)
1001a7e8:	10001785 	stb	zero,94(r2)
1001a7ec:	100017c5 	stb	zero,95(r2)
1001a7f0:	10001805 	stb	zero,96(r2)
1001a7f4:	10001845 	stb	zero,97(r2)
1001a7f8:	10001885 	stb	zero,98(r2)
1001a7fc:	100018c5 	stb	zero,99(r2)
1001a800:	10800715 	stw	r2,28(r2)
1001a804:	12000815 	stw	r8,32(r2)
1001a808:	11c00915 	stw	r7,36(r2)
1001a80c:	11800a15 	stw	r6,40(r2)
1001a810:	11400b15 	stw	r5,44(r2)
1001a814:	00800044 	movi	r2,1
1001a818:	20800e15 	stw	r2,56(r4)
1001a81c:	f800283a 	ret

1001a820 <__fp_unlock>:
1001a820:	0005883a 	mov	r2,zero
1001a824:	f800283a 	ret

1001a828 <__sfmoreglue>:
1001a828:	defffc04 	addi	sp,sp,-16
1001a82c:	dc400115 	stw	r17,4(sp)
1001a830:	2c7fffc4 	addi	r17,r5,-1
1001a834:	8c401a24 	muli	r17,r17,104
1001a838:	dc800215 	stw	r18,8(sp)
1001a83c:	2825883a 	mov	r18,r5
1001a840:	89401d04 	addi	r5,r17,116
1001a844:	dc000015 	stw	r16,0(sp)
1001a848:	dfc00315 	stw	ra,12(sp)
1001a84c:	0014d880 	call	10014d88 <_malloc_r>
1001a850:	1021883a 	mov	r16,r2
1001a854:	10000726 	beq	r2,zero,1001a874 <__sfmoreglue+0x4c>
1001a858:	11000304 	addi	r4,r2,12
1001a85c:	10000015 	stw	zero,0(r2)
1001a860:	14800115 	stw	r18,4(r2)
1001a864:	11000215 	stw	r4,8(r2)
1001a868:	89801a04 	addi	r6,r17,104
1001a86c:	000b883a 	mov	r5,zero
1001a870:	001591c0 	call	1001591c <memset>
1001a874:	8005883a 	mov	r2,r16
1001a878:	dfc00317 	ldw	ra,12(sp)
1001a87c:	dc800217 	ldw	r18,8(sp)
1001a880:	dc400117 	ldw	r17,4(sp)
1001a884:	dc000017 	ldw	r16,0(sp)
1001a888:	dec00404 	addi	sp,sp,16
1001a88c:	f800283a 	ret

1001a890 <__sfp>:
1001a890:	defffd04 	addi	sp,sp,-12
1001a894:	008400f4 	movhi	r2,4099
1001a898:	dc000015 	stw	r16,0(sp)
1001a89c:	14211617 	ldw	r16,-31656(r2)
1001a8a0:	dc400115 	stw	r17,4(sp)
1001a8a4:	dfc00215 	stw	ra,8(sp)
1001a8a8:	80800e17 	ldw	r2,56(r16)
1001a8ac:	2023883a 	mov	r17,r4
1001a8b0:	10002b26 	beq	r2,zero,1001a960 <__sfp+0xd0>
1001a8b4:	8400b804 	addi	r16,r16,736
1001a8b8:	80c00117 	ldw	r3,4(r16)
1001a8bc:	80800217 	ldw	r2,8(r16)
1001a8c0:	18ffffc4 	addi	r3,r3,-1
1001a8c4:	1800050e 	bge	r3,zero,1001a8dc <__sfp+0x4c>
1001a8c8:	00002106 	br	1001a950 <__sfp+0xc0>
1001a8cc:	18ffffc4 	addi	r3,r3,-1
1001a8d0:	193fffd8 	cmpnei	r4,r3,-1
1001a8d4:	10801a04 	addi	r2,r2,104
1001a8d8:	20001d26 	beq	r4,zero,1001a950 <__sfp+0xc0>
1001a8dc:	1100030f 	ldh	r4,12(r2)
1001a8e0:	203ffa1e 	bne	r4,zero,1001a8cc <__sfp+0x3c>
1001a8e4:	00fffff4 	movhi	r3,65535
1001a8e8:	18c00044 	addi	r3,r3,1
1001a8ec:	10001915 	stw	zero,100(r2)
1001a8f0:	10000015 	stw	zero,0(r2)
1001a8f4:	10000115 	stw	zero,4(r2)
1001a8f8:	10000215 	stw	zero,8(r2)
1001a8fc:	10c00315 	stw	r3,12(r2)
1001a900:	10000415 	stw	zero,16(r2)
1001a904:	10000515 	stw	zero,20(r2)
1001a908:	10000615 	stw	zero,24(r2)
1001a90c:	10001705 	stb	zero,92(r2)
1001a910:	10001745 	stb	zero,93(r2)
1001a914:	10001785 	stb	zero,94(r2)
1001a918:	100017c5 	stb	zero,95(r2)
1001a91c:	10001805 	stb	zero,96(r2)
1001a920:	10001845 	stb	zero,97(r2)
1001a924:	10001885 	stb	zero,98(r2)
1001a928:	100018c5 	stb	zero,99(r2)
1001a92c:	10000c15 	stw	zero,48(r2)
1001a930:	10000d15 	stw	zero,52(r2)
1001a934:	10001115 	stw	zero,68(r2)
1001a938:	10001215 	stw	zero,72(r2)
1001a93c:	dfc00217 	ldw	ra,8(sp)
1001a940:	dc400117 	ldw	r17,4(sp)
1001a944:	dc000017 	ldw	r16,0(sp)
1001a948:	dec00304 	addi	sp,sp,12
1001a94c:	f800283a 	ret
1001a950:	80800017 	ldw	r2,0(r16)
1001a954:	10000526 	beq	r2,zero,1001a96c <__sfp+0xdc>
1001a958:	1021883a 	mov	r16,r2
1001a95c:	003fd606 	br	1001a8b8 <__sfp+0x28>
1001a960:	8009883a 	mov	r4,r16
1001a964:	001a6b80 	call	1001a6b8 <__sinit.part.0>
1001a968:	003fd206 	br	1001a8b4 <__sfp+0x24>
1001a96c:	01400104 	movi	r5,4
1001a970:	8809883a 	mov	r4,r17
1001a974:	001a8280 	call	1001a828 <__sfmoreglue>
1001a978:	80800015 	stw	r2,0(r16)
1001a97c:	103ff61e 	bne	r2,zero,1001a958 <__sfp+0xc8>
1001a980:	00c00304 	movi	r3,12
1001a984:	88c00015 	stw	r3,0(r17)
1001a988:	003fec06 	br	1001a93c <__sfp+0xac>

1001a98c <_cleanup>:
1001a98c:	008400f4 	movhi	r2,4099
1001a990:	11211617 	ldw	r4,-31656(r2)
1001a994:	014400b4 	movhi	r5,4098
1001a998:	29790e04 	addi	r5,r5,-7112
1001a99c:	001b40c1 	jmpi	1001b40c <_fwalk_reent>

1001a9a0 <__sinit>:
1001a9a0:	20800e17 	ldw	r2,56(r4)
1001a9a4:	10000126 	beq	r2,zero,1001a9ac <__sinit+0xc>
1001a9a8:	f800283a 	ret
1001a9ac:	001a6b81 	jmpi	1001a6b8 <__sinit.part.0>

1001a9b0 <__sfp_lock_acquire>:
1001a9b0:	f800283a 	ret

1001a9b4 <__sfp_lock_release>:
1001a9b4:	f800283a 	ret

1001a9b8 <__sinit_lock_acquire>:
1001a9b8:	f800283a 	ret

1001a9bc <__sinit_lock_release>:
1001a9bc:	f800283a 	ret

1001a9c0 <__fp_lock_all>:
1001a9c0:	008400f4 	movhi	r2,4099
1001a9c4:	11211717 	ldw	r4,-31652(r2)
1001a9c8:	014400b4 	movhi	r5,4098
1001a9cc:	2969a904 	addi	r5,r5,-22876
1001a9d0:	001b3681 	jmpi	1001b368 <_fwalk>

1001a9d4 <__fp_unlock_all>:
1001a9d4:	008400f4 	movhi	r2,4099
1001a9d8:	11211717 	ldw	r4,-31652(r2)
1001a9dc:	014400b4 	movhi	r5,4098
1001a9e0:	296a0804 	addi	r5,r5,-22496
1001a9e4:	001b3681 	jmpi	1001b368 <_fwalk>

1001a9e8 <__sflags>:
1001a9e8:	28800007 	ldb	r2,0(r5)
1001a9ec:	10c01ca0 	cmpeqi	r3,r2,114
1001a9f0:	1800221e 	bne	r3,zero,1001aa7c <__sflags+0x94>
1001a9f4:	10c01de0 	cmpeqi	r3,r2,119
1001a9f8:	1800061e 	bne	r3,zero,1001aa14 <__sflags+0x2c>
1001a9fc:	10801860 	cmpeqi	r2,r2,97
1001aa00:	10001a1e 	bne	r2,zero,1001aa6c <__sflags+0x84>
1001aa04:	00800584 	movi	r2,22
1001aa08:	20800015 	stw	r2,0(r4)
1001aa0c:	0005883a 	mov	r2,zero
1001aa10:	f800283a 	ret
1001aa14:	02c18004 	movi	r11,1536
1001aa18:	01000044 	movi	r4,1
1001aa1c:	00800204 	movi	r2,8
1001aa20:	02bff8c4 	movi	r10,-29
1001aa24:	027fff04 	movi	r9,-4
1001aa28:	29400044 	addi	r5,r5,1
1001aa2c:	28c00007 	ldb	r3,0(r5)
1001aa30:	1a000ae0 	cmpeqi	r8,r3,43
1001aa34:	19c01e20 	cmpeqi	r7,r3,120
1001aa38:	18000926 	beq	r3,zero,1001aa60 <__sflags+0x78>
1001aa3c:	4000031e 	bne	r8,zero,1001aa4c <__sflags+0x64>
1001aa40:	383ff926 	beq	r7,zero,1001aa28 <__sflags+0x40>
1001aa44:	21020014 	ori	r4,r4,2048
1001aa48:	003ff706 	br	1001aa28 <__sflags+0x40>
1001aa4c:	1284703a 	and	r2,r2,r10
1001aa50:	2248703a 	and	r4,r4,r9
1001aa54:	10800414 	ori	r2,r2,16
1001aa58:	21000094 	ori	r4,r4,2
1001aa5c:	003ff206 	br	1001aa28 <__sflags+0x40>
1001aa60:	22c8b03a 	or	r4,r4,r11
1001aa64:	31000015 	stw	r4,0(r6)
1001aa68:	f800283a 	ret
1001aa6c:	02c08204 	movi	r11,520
1001aa70:	01000044 	movi	r4,1
1001aa74:	00804204 	movi	r2,264
1001aa78:	003fe906 	br	1001aa20 <__sflags+0x38>
1001aa7c:	0017883a 	mov	r11,zero
1001aa80:	0009883a 	mov	r4,zero
1001aa84:	00800104 	movi	r2,4
1001aa88:	003fe506 	br	1001aa20 <__sflags+0x38>

1001aa8c <_malloc_trim_r>:
1001aa8c:	defffb04 	addi	sp,sp,-20
1001aa90:	dcc00315 	stw	r19,12(sp)
1001aa94:	04c400b4 	movhi	r19,4098
1001aa98:	dc800215 	stw	r18,8(sp)
1001aa9c:	dc400115 	stw	r17,4(sp)
1001aaa0:	dc000015 	stw	r16,0(sp)
1001aaa4:	dfc00415 	stw	ra,16(sp)
1001aaa8:	2821883a 	mov	r16,r5
1001aaac:	9cdb2704 	addi	r19,r19,27804
1001aab0:	2025883a 	mov	r18,r4
1001aab4:	00222780 	call	10022278 <__malloc_lock>
1001aab8:	98800217 	ldw	r2,8(r19)
1001aabc:	14400117 	ldw	r17,4(r2)
1001aac0:	00bfff04 	movi	r2,-4
1001aac4:	88a2703a 	and	r17,r17,r2
1001aac8:	8c21c83a 	sub	r16,r17,r16
1001aacc:	8403fbc4 	addi	r16,r16,4079
1001aad0:	8020d33a 	srli	r16,r16,12
1001aad4:	843fffc4 	addi	r16,r16,-1
1001aad8:	8020933a 	slli	r16,r16,12
1001aadc:	80840008 	cmpgei	r2,r16,4096
1001aae0:	10000626 	beq	r2,zero,1001aafc <_malloc_trim_r+0x70>
1001aae4:	000b883a 	mov	r5,zero
1001aae8:	9009883a 	mov	r4,r18
1001aaec:	0015e300 	call	10015e30 <_sbrk_r>
1001aaf0:	98c00217 	ldw	r3,8(r19)
1001aaf4:	1c47883a 	add	r3,r3,r17
1001aaf8:	10c00a26 	beq	r2,r3,1001ab24 <_malloc_trim_r+0x98>
1001aafc:	9009883a 	mov	r4,r18
1001ab00:	002229c0 	call	1002229c <__malloc_unlock>
1001ab04:	0005883a 	mov	r2,zero
1001ab08:	dfc00417 	ldw	ra,16(sp)
1001ab0c:	dcc00317 	ldw	r19,12(sp)
1001ab10:	dc800217 	ldw	r18,8(sp)
1001ab14:	dc400117 	ldw	r17,4(sp)
1001ab18:	dc000017 	ldw	r16,0(sp)
1001ab1c:	dec00504 	addi	sp,sp,20
1001ab20:	f800283a 	ret
1001ab24:	040bc83a 	sub	r5,zero,r16
1001ab28:	9009883a 	mov	r4,r18
1001ab2c:	0015e300 	call	10015e30 <_sbrk_r>
1001ab30:	10bfffd8 	cmpnei	r2,r2,-1
1001ab34:	10000d26 	beq	r2,zero,1001ab6c <_malloc_trim_r+0xe0>
1001ab38:	008400f4 	movhi	r2,4099
1001ab3c:	10aa8217 	ldw	r2,-22008(r2)
1001ab40:	98c00217 	ldw	r3,8(r19)
1001ab44:	8c23c83a 	sub	r17,r17,r16
1001ab48:	8c400054 	ori	r17,r17,1
1001ab4c:	1421c83a 	sub	r16,r2,r16
1001ab50:	1c400115 	stw	r17,4(r3)
1001ab54:	008400f4 	movhi	r2,4099
1001ab58:	9009883a 	mov	r4,r18
1001ab5c:	142a8215 	stw	r16,-22008(r2)
1001ab60:	002229c0 	call	1002229c <__malloc_unlock>
1001ab64:	00800044 	movi	r2,1
1001ab68:	003fe706 	br	1001ab08 <_malloc_trim_r+0x7c>
1001ab6c:	000b883a 	mov	r5,zero
1001ab70:	9009883a 	mov	r4,r18
1001ab74:	0015e300 	call	10015e30 <_sbrk_r>
1001ab78:	99000217 	ldw	r4,8(r19)
1001ab7c:	1107c83a 	sub	r3,r2,r4
1001ab80:	19400410 	cmplti	r5,r3,16
1001ab84:	283fdd1e 	bne	r5,zero,1001aafc <_malloc_trim_r+0x70>
1001ab88:	014400f4 	movhi	r5,4099
1001ab8c:	29611817 	ldw	r5,-31648(r5)
1001ab90:	18c00054 	ori	r3,r3,1
1001ab94:	20c00115 	stw	r3,4(r4)
1001ab98:	1145c83a 	sub	r2,r2,r5
1001ab9c:	014400f4 	movhi	r5,4099
1001aba0:	28aa8215 	stw	r2,-22008(r5)
1001aba4:	003fd506 	br	1001aafc <_malloc_trim_r+0x70>

1001aba8 <_free_r>:
1001aba8:	28004f26 	beq	r5,zero,1001ace8 <_free_r+0x140>
1001abac:	defffd04 	addi	sp,sp,-12
1001abb0:	dc400115 	stw	r17,4(sp)
1001abb4:	dc000015 	stw	r16,0(sp)
1001abb8:	2023883a 	mov	r17,r4
1001abbc:	2821883a 	mov	r16,r5
1001abc0:	dfc00215 	stw	ra,8(sp)
1001abc4:	00222780 	call	10022278 <__malloc_lock>
1001abc8:	81ffff17 	ldw	r7,-4(r16)
1001abcc:	00bfff84 	movi	r2,-2
1001abd0:	80fffe04 	addi	r3,r16,-8
1001abd4:	3884703a 	and	r2,r7,r2
1001abd8:	018400b4 	movhi	r6,4098
1001abdc:	1889883a 	add	r4,r3,r2
1001abe0:	319b2704 	addi	r6,r6,27804
1001abe4:	21400117 	ldw	r5,4(r4)
1001abe8:	32000217 	ldw	r8,8(r6)
1001abec:	027fff04 	movi	r9,-4
1001abf0:	2a4a703a 	and	r5,r5,r9
1001abf4:	41006426 	beq	r8,r4,1001ad88 <_free_r+0x1e0>
1001abf8:	21400115 	stw	r5,4(r4)
1001abfc:	39c0004c 	andi	r7,r7,1
1001ac00:	2151883a 	add	r8,r4,r5
1001ac04:	3800281e 	bne	r7,zero,1001aca8 <_free_r+0x100>
1001ac08:	82bffe17 	ldw	r10,-8(r16)
1001ac0c:	42000117 	ldw	r8,4(r8)
1001ac10:	01c400b4 	movhi	r7,4098
1001ac14:	1a87c83a 	sub	r3,r3,r10
1001ac18:	1a400217 	ldw	r9,8(r3)
1001ac1c:	39db2904 	addi	r7,r7,27812
1001ac20:	1285883a 	add	r2,r2,r10
1001ac24:	4200004c 	andi	r8,r8,1
1001ac28:	49c04c26 	beq	r9,r7,1001ad5c <_free_r+0x1b4>
1001ac2c:	1a800317 	ldw	r10,12(r3)
1001ac30:	4a800315 	stw	r10,12(r9)
1001ac34:	52400215 	stw	r9,8(r10)
1001ac38:	40007126 	beq	r8,zero,1001ae00 <_free_r+0x258>
1001ac3c:	11400054 	ori	r5,r2,1
1001ac40:	19400115 	stw	r5,4(r3)
1001ac44:	20800015 	stw	r2,0(r4)
1001ac48:	11008028 	cmpgeui	r4,r2,512
1001ac4c:	20002c1e 	bne	r4,zero,1001ad00 <_free_r+0x158>
1001ac50:	1008d0fa 	srli	r4,r2,3
1001ac54:	31c00117 	ldw	r7,4(r6)
1001ac58:	20800044 	addi	r2,r4,1
1001ac5c:	200bd0ba 	srai	r5,r4,2
1001ac60:	100490fa 	slli	r2,r2,3
1001ac64:	01000044 	movi	r4,1
1001ac68:	2148983a 	sll	r4,r4,r5
1001ac6c:	3085883a 	add	r2,r6,r2
1001ac70:	11400017 	ldw	r5,0(r2)
1001ac74:	21c8b03a 	or	r4,r4,r7
1001ac78:	11fffe04 	addi	r7,r2,-8
1001ac7c:	19c00315 	stw	r7,12(r3)
1001ac80:	19400215 	stw	r5,8(r3)
1001ac84:	31000115 	stw	r4,4(r6)
1001ac88:	10c00015 	stw	r3,0(r2)
1001ac8c:	28c00315 	stw	r3,12(r5)
1001ac90:	8809883a 	mov	r4,r17
1001ac94:	dfc00217 	ldw	ra,8(sp)
1001ac98:	dc400117 	ldw	r17,4(sp)
1001ac9c:	dc000017 	ldw	r16,0(sp)
1001aca0:	dec00304 	addi	sp,sp,12
1001aca4:	002229c1 	jmpi	1002229c <__malloc_unlock>
1001aca8:	41c00117 	ldw	r7,4(r8)
1001acac:	39c0004c 	andi	r7,r7,1
1001acb0:	38000e1e 	bne	r7,zero,1001acec <_free_r+0x144>
1001acb4:	01c400b4 	movhi	r7,4098
1001acb8:	1145883a 	add	r2,r2,r5
1001acbc:	39db2904 	addi	r7,r7,27812
1001acc0:	21400217 	ldw	r5,8(r4)
1001acc4:	12400054 	ori	r9,r2,1
1001acc8:	1891883a 	add	r8,r3,r2
1001accc:	29c05226 	beq	r5,r7,1001ae18 <_free_r+0x270>
1001acd0:	21000317 	ldw	r4,12(r4)
1001acd4:	29000315 	stw	r4,12(r5)
1001acd8:	21400215 	stw	r5,8(r4)
1001acdc:	1a400115 	stw	r9,4(r3)
1001ace0:	40800015 	stw	r2,0(r8)
1001ace4:	003fd806 	br	1001ac48 <_free_r+0xa0>
1001ace8:	f800283a 	ret
1001acec:	11400054 	ori	r5,r2,1
1001acf0:	817fff15 	stw	r5,-4(r16)
1001acf4:	20800015 	stw	r2,0(r4)
1001acf8:	11008028 	cmpgeui	r4,r2,512
1001acfc:	203fd426 	beq	r4,zero,1001ac50 <_free_r+0xa8>
1001ad00:	1008d27a 	srli	r4,r2,9
1001ad04:	21400168 	cmpgeui	r5,r4,5
1001ad08:	2800341e 	bne	r5,zero,1001addc <_free_r+0x234>
1001ad0c:	1008d1ba 	srli	r4,r2,6
1001ad10:	21c00e44 	addi	r7,r4,57
1001ad14:	380e90fa 	slli	r7,r7,3
1001ad18:	21400e04 	addi	r5,r4,56
1001ad1c:	31cf883a 	add	r7,r6,r7
1001ad20:	39000017 	ldw	r4,0(r7)
1001ad24:	39fffe04 	addi	r7,r7,-8
1001ad28:	39004226 	beq	r7,r4,1001ae34 <_free_r+0x28c>
1001ad2c:	01bfff04 	movi	r6,-4
1001ad30:	21400117 	ldw	r5,4(r4)
1001ad34:	298a703a 	and	r5,r5,r6
1001ad38:	1140022e 	bgeu	r2,r5,1001ad44 <_free_r+0x19c>
1001ad3c:	21000217 	ldw	r4,8(r4)
1001ad40:	393ffb1e 	bne	r7,r4,1001ad30 <_free_r+0x188>
1001ad44:	21c00317 	ldw	r7,12(r4)
1001ad48:	19c00315 	stw	r7,12(r3)
1001ad4c:	19000215 	stw	r4,8(r3)
1001ad50:	38c00215 	stw	r3,8(r7)
1001ad54:	20c00315 	stw	r3,12(r4)
1001ad58:	003fcd06 	br	1001ac90 <_free_r+0xe8>
1001ad5c:	40004d1e 	bne	r8,zero,1001ae94 <_free_r+0x2ec>
1001ad60:	21800317 	ldw	r6,12(r4)
1001ad64:	21000217 	ldw	r4,8(r4)
1001ad68:	2885883a 	add	r2,r5,r2
1001ad6c:	11400054 	ori	r5,r2,1
1001ad70:	21800315 	stw	r6,12(r4)
1001ad74:	31000215 	stw	r4,8(r6)
1001ad78:	19400115 	stw	r5,4(r3)
1001ad7c:	1887883a 	add	r3,r3,r2
1001ad80:	18800015 	stw	r2,0(r3)
1001ad84:	003fc206 	br	1001ac90 <_free_r+0xe8>
1001ad88:	39c0004c 	andi	r7,r7,1
1001ad8c:	1145883a 	add	r2,r2,r5
1001ad90:	3800071e 	bne	r7,zero,1001adb0 <_free_r+0x208>
1001ad94:	81fffe17 	ldw	r7,-8(r16)
1001ad98:	19c7c83a 	sub	r3,r3,r7
1001ad9c:	19000317 	ldw	r4,12(r3)
1001ada0:	19400217 	ldw	r5,8(r3)
1001ada4:	11c5883a 	add	r2,r2,r7
1001ada8:	29000315 	stw	r4,12(r5)
1001adac:	21400215 	stw	r5,8(r4)
1001adb0:	010400f4 	movhi	r4,4099
1001adb4:	11400054 	ori	r5,r2,1
1001adb8:	21211917 	ldw	r4,-31644(r4)
1001adbc:	19400115 	stw	r5,4(r3)
1001adc0:	30c00215 	stw	r3,8(r6)
1001adc4:	113fb236 	bltu	r2,r4,1001ac90 <_free_r+0xe8>
1001adc8:	008400f4 	movhi	r2,4099
1001adcc:	116a6b17 	ldw	r5,-22100(r2)
1001add0:	8809883a 	mov	r4,r17
1001add4:	001aa8c0 	call	1001aa8c <_malloc_trim_r>
1001add8:	003fad06 	br	1001ac90 <_free_r+0xe8>
1001addc:	21400568 	cmpgeui	r5,r4,21
1001ade0:	28000926 	beq	r5,zero,1001ae08 <_free_r+0x260>
1001ade4:	21401568 	cmpgeui	r5,r4,85
1001ade8:	2800191e 	bne	r5,zero,1001ae50 <_free_r+0x2a8>
1001adec:	1008d33a 	srli	r4,r2,12
1001adf0:	21c01bc4 	addi	r7,r4,111
1001adf4:	21401b84 	addi	r5,r4,110
1001adf8:	380e90fa 	slli	r7,r7,3
1001adfc:	003fc706 	br	1001ad1c <_free_r+0x174>
1001ae00:	1145883a 	add	r2,r2,r5
1001ae04:	003fae06 	br	1001acc0 <_free_r+0x118>
1001ae08:	21c01704 	addi	r7,r4,92
1001ae0c:	214016c4 	addi	r5,r4,91
1001ae10:	380e90fa 	slli	r7,r7,3
1001ae14:	003fc106 	br	1001ad1c <_free_r+0x174>
1001ae18:	30c00515 	stw	r3,20(r6)
1001ae1c:	30c00415 	stw	r3,16(r6)
1001ae20:	19c00315 	stw	r7,12(r3)
1001ae24:	19c00215 	stw	r7,8(r3)
1001ae28:	1a400115 	stw	r9,4(r3)
1001ae2c:	40800015 	stw	r2,0(r8)
1001ae30:	003f9706 	br	1001ac90 <_free_r+0xe8>
1001ae34:	280bd0ba 	srai	r5,r5,2
1001ae38:	00800044 	movi	r2,1
1001ae3c:	32000117 	ldw	r8,4(r6)
1001ae40:	114a983a 	sll	r5,r2,r5
1001ae44:	2a0ab03a 	or	r5,r5,r8
1001ae48:	31400115 	stw	r5,4(r6)
1001ae4c:	003fbe06 	br	1001ad48 <_free_r+0x1a0>
1001ae50:	21405568 	cmpgeui	r5,r4,341
1001ae54:	2800051e 	bne	r5,zero,1001ae6c <_free_r+0x2c4>
1001ae58:	1008d3fa 	srli	r4,r2,15
1001ae5c:	21c01e04 	addi	r7,r4,120
1001ae60:	21401dc4 	addi	r5,r4,119
1001ae64:	380e90fa 	slli	r7,r7,3
1001ae68:	003fac06 	br	1001ad1c <_free_r+0x174>
1001ae6c:	21015568 	cmpgeui	r4,r4,1365
1001ae70:	2000051e 	bne	r4,zero,1001ae88 <_free_r+0x2e0>
1001ae74:	1008d4ba 	srli	r4,r2,18
1001ae78:	21c01f44 	addi	r7,r4,125
1001ae7c:	21401f04 	addi	r5,r4,124
1001ae80:	380e90fa 	slli	r7,r7,3
1001ae84:	003fa506 	br	1001ad1c <_free_r+0x174>
1001ae88:	01c0fe04 	movi	r7,1016
1001ae8c:	01401f84 	movi	r5,126
1001ae90:	003fa206 	br	1001ad1c <_free_r+0x174>
1001ae94:	11400054 	ori	r5,r2,1
1001ae98:	19400115 	stw	r5,4(r3)
1001ae9c:	20800015 	stw	r2,0(r4)
1001aea0:	003f7b06 	br	1001ac90 <_free_r+0xe8>

1001aea4 <__sfvwrite_r>:
1001aea4:	30800217 	ldw	r2,8(r6)
1001aea8:	1000c926 	beq	r2,zero,1001b1d0 <__sfvwrite_r+0x32c>
1001aeac:	2880030b 	ldhu	r2,12(r5)
1001aeb0:	defff304 	addi	sp,sp,-52
1001aeb4:	dd000715 	stw	r20,28(sp)
1001aeb8:	dc000315 	stw	r16,12(sp)
1001aebc:	dfc00c15 	stw	ra,48(sp)
1001aec0:	df000b15 	stw	fp,44(sp)
1001aec4:	ddc00a15 	stw	r23,40(sp)
1001aec8:	dd800915 	stw	r22,36(sp)
1001aecc:	dd400815 	stw	r21,32(sp)
1001aed0:	dcc00615 	stw	r19,24(sp)
1001aed4:	dc800515 	stw	r18,20(sp)
1001aed8:	dc400415 	stw	r17,16(sp)
1001aedc:	d9000015 	stw	r4,0(sp)
1001aee0:	10c0020c 	andi	r3,r2,8
1001aee4:	2821883a 	mov	r16,r5
1001aee8:	3029883a 	mov	r20,r6
1001aeec:	18002426 	beq	r3,zero,1001af80 <__sfvwrite_r+0xdc>
1001aef0:	28c00417 	ldw	r3,16(r5)
1001aef4:	18002226 	beq	r3,zero,1001af80 <__sfvwrite_r+0xdc>
1001aef8:	10c0008c 	andi	r3,r2,2
1001aefc:	a4400017 	ldw	r17,0(r20)
1001af00:	18002726 	beq	r3,zero,1001afa0 <__sfvwrite_r+0xfc>
1001af04:	80c00917 	ldw	r3,36(r16)
1001af08:	80800717 	ldw	r2,28(r16)
1001af0c:	05600034 	movhi	r21,32768
1001af10:	0027883a 	mov	r19,zero
1001af14:	0025883a 	mov	r18,zero
1001af18:	ad7f0004 	addi	r21,r21,-1024
1001af1c:	980d883a 	mov	r6,r19
1001af20:	100b883a 	mov	r5,r2
1001af24:	d9000017 	ldw	r4,0(sp)
1001af28:	90001126 	beq	r18,zero,1001af70 <__sfvwrite_r+0xcc>
1001af2c:	900f883a 	mov	r7,r18
1001af30:	ac80012e 	bgeu	r21,r18,1001af38 <__sfvwrite_r+0x94>
1001af34:	a80f883a 	mov	r7,r21
1001af38:	183ee83a 	callr	r3
1001af3c:	00809f0e 	bge	zero,r2,1001b1bc <__sfvwrite_r+0x318>
1001af40:	a0c00217 	ldw	r3,8(r20)
1001af44:	98a7883a 	add	r19,r19,r2
1001af48:	90a5c83a 	sub	r18,r18,r2
1001af4c:	1885c83a 	sub	r2,r3,r2
1001af50:	a0800215 	stw	r2,8(r20)
1001af54:	10006326 	beq	r2,zero,1001b0e4 <__sfvwrite_r+0x240>
1001af58:	80800717 	ldw	r2,28(r16)
1001af5c:	80c00917 	ldw	r3,36(r16)
1001af60:	980d883a 	mov	r6,r19
1001af64:	100b883a 	mov	r5,r2
1001af68:	d9000017 	ldw	r4,0(sp)
1001af6c:	903fef1e 	bne	r18,zero,1001af2c <__sfvwrite_r+0x88>
1001af70:	8cc00017 	ldw	r19,0(r17)
1001af74:	8c800117 	ldw	r18,4(r17)
1001af78:	8c400204 	addi	r17,r17,8
1001af7c:	003fe706 	br	1001af1c <__sfvwrite_r+0x78>
1001af80:	d9000017 	ldw	r4,0(sp)
1001af84:	800b883a 	mov	r5,r16
1001af88:	00189640 	call	10018964 <__swsetup_r>
1001af8c:	1000f41e 	bne	r2,zero,1001b360 <__sfvwrite_r+0x4bc>
1001af90:	8080030b 	ldhu	r2,12(r16)
1001af94:	a4400017 	ldw	r17,0(r20)
1001af98:	10c0008c 	andi	r3,r2,2
1001af9c:	183fd91e 	bne	r3,zero,1001af04 <__sfvwrite_r+0x60>
1001afa0:	10c0004c 	andi	r3,r2,1
1001afa4:	84800217 	ldw	r18,8(r16)
1001afa8:	87000017 	ldw	fp,0(r16)
1001afac:	18008a1e 	bne	r3,zero,1001b1d8 <__sfvwrite_r+0x334>
1001afb0:	00e00034 	movhi	r3,32768
1001afb4:	18ffff84 	addi	r3,r3,-2
1001afb8:	01200034 	movhi	r4,32768
1001afbc:	d8c00115 	stw	r3,4(sp)
1001afc0:	20ffffc4 	addi	r3,r4,-1
1001afc4:	002d883a 	mov	r22,zero
1001afc8:	002f883a 	mov	r23,zero
1001afcc:	d8c00215 	stw	r3,8(sp)
1001afd0:	b8004026 	beq	r23,zero,1001b0d4 <__sfvwrite_r+0x230>
1001afd4:	1100800c 	andi	r4,r2,512
1001afd8:	20009026 	beq	r4,zero,1001b21c <__sfvwrite_r+0x378>
1001afdc:	902b883a 	mov	r21,r18
1001afe0:	bc80b436 	bltu	r23,r18,1001b2b4 <__sfvwrite_r+0x410>
1001afe4:	1101200c 	andi	r4,r2,1152
1001afe8:	20002526 	beq	r4,zero,1001b080 <__sfvwrite_r+0x1dc>
1001afec:	81800517 	ldw	r6,20(r16)
1001aff0:	81400417 	ldw	r5,16(r16)
1001aff4:	b9000044 	addi	r4,r23,1
1001aff8:	318000e4 	muli	r6,r6,3
1001affc:	e167c83a 	sub	r19,fp,r5
1001b000:	24c9883a 	add	r4,r4,r19
1001b004:	3024d7fa 	srli	r18,r6,31
1001b008:	91a5883a 	add	r18,r18,r6
1001b00c:	9025d07a 	srai	r18,r18,1
1001b010:	900d883a 	mov	r6,r18
1001b014:	9100022e 	bgeu	r18,r4,1001b020 <__sfvwrite_r+0x17c>
1001b018:	2025883a 	mov	r18,r4
1001b01c:	200d883a 	mov	r6,r4
1001b020:	1081000c 	andi	r2,r2,1024
1001b024:	1000bc26 	beq	r2,zero,1001b318 <__sfvwrite_r+0x474>
1001b028:	d9000017 	ldw	r4,0(sp)
1001b02c:	300b883a 	mov	r5,r6
1001b030:	0014d880 	call	10014d88 <_malloc_r>
1001b034:	1000c526 	beq	r2,zero,1001b34c <__sfvwrite_r+0x4a8>
1001b038:	81400417 	ldw	r5,16(r16)
1001b03c:	980d883a 	mov	r6,r19
1001b040:	1009883a 	mov	r4,r2
1001b044:	00156f00 	call	100156f0 <memcpy>
1001b048:	100f883a 	mov	r7,r2
1001b04c:	8080030b 	ldhu	r2,12(r16)
1001b050:	00fedfc4 	movi	r3,-1153
1001b054:	10c4703a 	and	r2,r2,r3
1001b058:	10802014 	ori	r2,r2,128
1001b05c:	8080030d 	sth	r2,12(r16)
1001b060:	94c5c83a 	sub	r2,r18,r19
1001b064:	3cf9883a 	add	fp,r7,r19
1001b068:	84800515 	stw	r18,20(r16)
1001b06c:	81c00415 	stw	r7,16(r16)
1001b070:	87000015 	stw	fp,0(r16)
1001b074:	b825883a 	mov	r18,r23
1001b078:	80800215 	stw	r2,8(r16)
1001b07c:	b82b883a 	mov	r21,r23
1001b080:	a80d883a 	mov	r6,r21
1001b084:	b00b883a 	mov	r5,r22
1001b088:	e009883a 	mov	r4,fp
1001b08c:	00157f00 	call	100157f0 <memmove>
1001b090:	80800217 	ldw	r2,8(r16)
1001b094:	81800017 	ldw	r6,0(r16)
1001b098:	b827883a 	mov	r19,r23
1001b09c:	14a5c83a 	sub	r18,r2,r18
1001b0a0:	354d883a 	add	r6,r6,r21
1001b0a4:	84800215 	stw	r18,8(r16)
1001b0a8:	81800015 	stw	r6,0(r16)
1001b0ac:	002f883a 	mov	r23,zero
1001b0b0:	a0800217 	ldw	r2,8(r20)
1001b0b4:	b4ed883a 	add	r22,r22,r19
1001b0b8:	14e7c83a 	sub	r19,r2,r19
1001b0bc:	a4c00215 	stw	r19,8(r20)
1001b0c0:	98000826 	beq	r19,zero,1001b0e4 <__sfvwrite_r+0x240>
1001b0c4:	8080030b 	ldhu	r2,12(r16)
1001b0c8:	84800217 	ldw	r18,8(r16)
1001b0cc:	87000017 	ldw	fp,0(r16)
1001b0d0:	b83fc01e 	bne	r23,zero,1001afd4 <__sfvwrite_r+0x130>
1001b0d4:	8d800017 	ldw	r22,0(r17)
1001b0d8:	8dc00117 	ldw	r23,4(r17)
1001b0dc:	8c400204 	addi	r17,r17,8
1001b0e0:	003fbb06 	br	1001afd0 <__sfvwrite_r+0x12c>
1001b0e4:	0005883a 	mov	r2,zero
1001b0e8:	dfc00c17 	ldw	ra,48(sp)
1001b0ec:	df000b17 	ldw	fp,44(sp)
1001b0f0:	ddc00a17 	ldw	r23,40(sp)
1001b0f4:	dd800917 	ldw	r22,36(sp)
1001b0f8:	dd400817 	ldw	r21,32(sp)
1001b0fc:	dd000717 	ldw	r20,28(sp)
1001b100:	dcc00617 	ldw	r19,24(sp)
1001b104:	dc800517 	ldw	r18,20(sp)
1001b108:	dc400417 	ldw	r17,16(sp)
1001b10c:	dc000317 	ldw	r16,12(sp)
1001b110:	dec00d04 	addi	sp,sp,52
1001b114:	f800283a 	ret
1001b118:	b1c06e16 	blt	r22,r7,1001b2d4 <__sfvwrite_r+0x430>
1001b11c:	80800917 	ldw	r2,36(r16)
1001b120:	81400717 	ldw	r5,28(r16)
1001b124:	d9000017 	ldw	r4,0(sp)
1001b128:	b80d883a 	mov	r6,r23
1001b12c:	103ee83a 	callr	r2
1001b130:	1025883a 	mov	r18,r2
1001b134:	0080210e 	bge	zero,r2,1001b1bc <__sfvwrite_r+0x318>
1001b138:	acabc83a 	sub	r21,r21,r18
1001b13c:	a8006026 	beq	r21,zero,1001b2c0 <__sfvwrite_r+0x41c>
1001b140:	00800044 	movi	r2,1
1001b144:	a0c00217 	ldw	r3,8(r20)
1001b148:	bcaf883a 	add	r23,r23,r18
1001b14c:	9ca7c83a 	sub	r19,r19,r18
1001b150:	1ca5c83a 	sub	r18,r3,r18
1001b154:	a4800215 	stw	r18,8(r20)
1001b158:	903fe226 	beq	r18,zero,1001b0e4 <__sfvwrite_r+0x240>
1001b15c:	84800217 	ldw	r18,8(r16)
1001b160:	87000017 	ldw	fp,0(r16)
1001b164:	98002126 	beq	r19,zero,1001b1ec <__sfvwrite_r+0x348>
1001b168:	10002426 	beq	r2,zero,1001b1fc <__sfvwrite_r+0x358>
1001b16c:	a805883a 	mov	r2,r21
1001b170:	982d883a 	mov	r22,r19
1001b174:	14c0012e 	bgeu	r2,r19,1001b17c <__sfvwrite_r+0x2d8>
1001b178:	102d883a 	mov	r22,r2
1001b17c:	80800417 	ldw	r2,16(r16)
1001b180:	81c00517 	ldw	r7,20(r16)
1001b184:	173fe42e 	bgeu	r2,fp,1001b118 <__sfvwrite_r+0x274>
1001b188:	3ca5883a 	add	r18,r7,r18
1001b18c:	95bfe20e 	bge	r18,r22,1001b118 <__sfvwrite_r+0x274>
1001b190:	b80b883a 	mov	r5,r23
1001b194:	e009883a 	mov	r4,fp
1001b198:	900d883a 	mov	r6,r18
1001b19c:	00157f00 	call	100157f0 <memmove>
1001b1a0:	80800017 	ldw	r2,0(r16)
1001b1a4:	d9000017 	ldw	r4,0(sp)
1001b1a8:	800b883a 	mov	r5,r16
1001b1ac:	1485883a 	add	r2,r2,r18
1001b1b0:	80800015 	stw	r2,0(r16)
1001b1b4:	001a61c0 	call	1001a61c <_fflush_r>
1001b1b8:	103fdf26 	beq	r2,zero,1001b138 <__sfvwrite_r+0x294>
1001b1bc:	8080030b 	ldhu	r2,12(r16)
1001b1c0:	10801014 	ori	r2,r2,64
1001b1c4:	8080030d 	sth	r2,12(r16)
1001b1c8:	00bfffc4 	movi	r2,-1
1001b1cc:	003fc606 	br	1001b0e8 <__sfvwrite_r+0x244>
1001b1d0:	0005883a 	mov	r2,zero
1001b1d4:	f800283a 	ret
1001b1d8:	0027883a 	mov	r19,zero
1001b1dc:	002b883a 	mov	r21,zero
1001b1e0:	0005883a 	mov	r2,zero
1001b1e4:	002f883a 	mov	r23,zero
1001b1e8:	983fdf1e 	bne	r19,zero,1001b168 <__sfvwrite_r+0x2c4>
1001b1ec:	8cc00117 	ldw	r19,4(r17)
1001b1f0:	8dc00017 	ldw	r23,0(r17)
1001b1f4:	8c400204 	addi	r17,r17,8
1001b1f8:	983ffc26 	beq	r19,zero,1001b1ec <__sfvwrite_r+0x348>
1001b1fc:	980d883a 	mov	r6,r19
1001b200:	01400284 	movi	r5,10
1001b204:	b809883a 	mov	r4,r23
1001b208:	001557c0 	call	1001557c <memchr>
1001b20c:	10003f26 	beq	r2,zero,1001b30c <__sfvwrite_r+0x468>
1001b210:	10800044 	addi	r2,r2,1
1001b214:	15ebc83a 	sub	r21,r2,r23
1001b218:	003fd406 	br	1001b16c <__sfvwrite_r+0x2c8>
1001b21c:	80800417 	ldw	r2,16(r16)
1001b220:	17001136 	bltu	r2,fp,1001b268 <__sfvwrite_r+0x3c4>
1001b224:	84c00517 	ldw	r19,20(r16)
1001b228:	bcc00f36 	bltu	r23,r19,1001b268 <__sfvwrite_r+0x3c4>
1001b22c:	d8800117 	ldw	r2,4(sp)
1001b230:	15c0342e 	bgeu	r2,r23,1001b304 <__sfvwrite_r+0x460>
1001b234:	d9000217 	ldw	r4,8(sp)
1001b238:	980b883a 	mov	r5,r19
1001b23c:	0013eac0 	call	10013eac <__divsi3>
1001b240:	14cf383a 	mul	r7,r2,r19
1001b244:	81400717 	ldw	r5,28(r16)
1001b248:	80800917 	ldw	r2,36(r16)
1001b24c:	d9000017 	ldw	r4,0(sp)
1001b250:	b00d883a 	mov	r6,r22
1001b254:	103ee83a 	callr	r2
1001b258:	00bfd80e 	bge	zero,r2,1001b1bc <__sfvwrite_r+0x318>
1001b25c:	1027883a 	mov	r19,r2
1001b260:	bcefc83a 	sub	r23,r23,r19
1001b264:	003f9206 	br	1001b0b0 <__sfvwrite_r+0x20c>
1001b268:	9027883a 	mov	r19,r18
1001b26c:	bc80012e 	bgeu	r23,r18,1001b274 <__sfvwrite_r+0x3d0>
1001b270:	b827883a 	mov	r19,r23
1001b274:	e009883a 	mov	r4,fp
1001b278:	980d883a 	mov	r6,r19
1001b27c:	b00b883a 	mov	r5,r22
1001b280:	00157f00 	call	100157f0 <memmove>
1001b284:	80800217 	ldw	r2,8(r16)
1001b288:	81000017 	ldw	r4,0(r16)
1001b28c:	14c5c83a 	sub	r2,r2,r19
1001b290:	24c9883a 	add	r4,r4,r19
1001b294:	80800215 	stw	r2,8(r16)
1001b298:	81000015 	stw	r4,0(r16)
1001b29c:	103ff01e 	bne	r2,zero,1001b260 <__sfvwrite_r+0x3bc>
1001b2a0:	d9000017 	ldw	r4,0(sp)
1001b2a4:	800b883a 	mov	r5,r16
1001b2a8:	001a61c0 	call	1001a61c <_fflush_r>
1001b2ac:	103fec26 	beq	r2,zero,1001b260 <__sfvwrite_r+0x3bc>
1001b2b0:	003fc206 	br	1001b1bc <__sfvwrite_r+0x318>
1001b2b4:	b825883a 	mov	r18,r23
1001b2b8:	b82b883a 	mov	r21,r23
1001b2bc:	003f7006 	br	1001b080 <__sfvwrite_r+0x1dc>
1001b2c0:	d9000017 	ldw	r4,0(sp)
1001b2c4:	800b883a 	mov	r5,r16
1001b2c8:	001a61c0 	call	1001a61c <_fflush_r>
1001b2cc:	103f9d26 	beq	r2,zero,1001b144 <__sfvwrite_r+0x2a0>
1001b2d0:	003fba06 	br	1001b1bc <__sfvwrite_r+0x318>
1001b2d4:	b00d883a 	mov	r6,r22
1001b2d8:	b80b883a 	mov	r5,r23
1001b2dc:	e009883a 	mov	r4,fp
1001b2e0:	00157f00 	call	100157f0 <memmove>
1001b2e4:	80c00217 	ldw	r3,8(r16)
1001b2e8:	80800017 	ldw	r2,0(r16)
1001b2ec:	b025883a 	mov	r18,r22
1001b2f0:	1d87c83a 	sub	r3,r3,r22
1001b2f4:	15ad883a 	add	r22,r2,r22
1001b2f8:	80c00215 	stw	r3,8(r16)
1001b2fc:	85800015 	stw	r22,0(r16)
1001b300:	003f8d06 	br	1001b138 <__sfvwrite_r+0x294>
1001b304:	b809883a 	mov	r4,r23
1001b308:	003fcb06 	br	1001b238 <__sfvwrite_r+0x394>
1001b30c:	98800044 	addi	r2,r19,1
1001b310:	102b883a 	mov	r21,r2
1001b314:	003f9606 	br	1001b170 <__sfvwrite_r+0x2cc>
1001b318:	d9000017 	ldw	r4,0(sp)
1001b31c:	001c6e80 	call	1001c6e8 <_realloc_r>
1001b320:	100f883a 	mov	r7,r2
1001b324:	103f4e1e 	bne	r2,zero,1001b060 <__sfvwrite_r+0x1bc>
1001b328:	dc400017 	ldw	r17,0(sp)
1001b32c:	81400417 	ldw	r5,16(r16)
1001b330:	8809883a 	mov	r4,r17
1001b334:	001aba80 	call	1001aba8 <_free_r>
1001b338:	8080030b 	ldhu	r2,12(r16)
1001b33c:	00c00304 	movi	r3,12
1001b340:	88c00015 	stw	r3,0(r17)
1001b344:	10bfdfcc 	andi	r2,r2,65407
1001b348:	003f9d06 	br	1001b1c0 <__sfvwrite_r+0x31c>
1001b34c:	d8c00017 	ldw	r3,0(sp)
1001b350:	00800304 	movi	r2,12
1001b354:	18800015 	stw	r2,0(r3)
1001b358:	8080030b 	ldhu	r2,12(r16)
1001b35c:	003f9806 	br	1001b1c0 <__sfvwrite_r+0x31c>
1001b360:	00bfffc4 	movi	r2,-1
1001b364:	003f6006 	br	1001b0e8 <__sfvwrite_r+0x244>

1001b368 <_fwalk>:
1001b368:	defffa04 	addi	sp,sp,-24
1001b36c:	dc800215 	stw	r18,8(sp)
1001b370:	dfc00515 	stw	ra,20(sp)
1001b374:	dd000415 	stw	r20,16(sp)
1001b378:	dcc00315 	stw	r19,12(sp)
1001b37c:	dc400115 	stw	r17,4(sp)
1001b380:	dc000015 	stw	r16,0(sp)
1001b384:	2480b804 	addi	r18,r4,736
1001b388:	90001e26 	beq	r18,zero,1001b404 <_fwalk+0x9c>
1001b38c:	2827883a 	mov	r19,r5
1001b390:	0029883a 	mov	r20,zero
1001b394:	94400117 	ldw	r17,4(r18)
1001b398:	94000217 	ldw	r16,8(r18)
1001b39c:	8c7fffc4 	addi	r17,r17,-1
1001b3a0:	88000d16 	blt	r17,zero,1001b3d8 <_fwalk+0x70>
1001b3a4:	8080030b 	ldhu	r2,12(r16)
1001b3a8:	8c7fffc4 	addi	r17,r17,-1
1001b3ac:	108000b0 	cmpltui	r2,r2,2
1001b3b0:	1000061e 	bne	r2,zero,1001b3cc <_fwalk+0x64>
1001b3b4:	8080038f 	ldh	r2,14(r16)
1001b3b8:	8009883a 	mov	r4,r16
1001b3bc:	10bfffe0 	cmpeqi	r2,r2,-1
1001b3c0:	1000021e 	bne	r2,zero,1001b3cc <_fwalk+0x64>
1001b3c4:	983ee83a 	callr	r19
1001b3c8:	a0a8b03a 	or	r20,r20,r2
1001b3cc:	88bfffd8 	cmpnei	r2,r17,-1
1001b3d0:	84001a04 	addi	r16,r16,104
1001b3d4:	103ff31e 	bne	r2,zero,1001b3a4 <_fwalk+0x3c>
1001b3d8:	94800017 	ldw	r18,0(r18)
1001b3dc:	903fed1e 	bne	r18,zero,1001b394 <_fwalk+0x2c>
1001b3e0:	a005883a 	mov	r2,r20
1001b3e4:	dfc00517 	ldw	ra,20(sp)
1001b3e8:	dd000417 	ldw	r20,16(sp)
1001b3ec:	dcc00317 	ldw	r19,12(sp)
1001b3f0:	dc800217 	ldw	r18,8(sp)
1001b3f4:	dc400117 	ldw	r17,4(sp)
1001b3f8:	dc000017 	ldw	r16,0(sp)
1001b3fc:	dec00604 	addi	sp,sp,24
1001b400:	f800283a 	ret
1001b404:	0029883a 	mov	r20,zero
1001b408:	003ff506 	br	1001b3e0 <_fwalk+0x78>

1001b40c <_fwalk_reent>:
1001b40c:	defff904 	addi	sp,sp,-28
1001b410:	dc800215 	stw	r18,8(sp)
1001b414:	dfc00615 	stw	ra,24(sp)
1001b418:	dd400515 	stw	r21,20(sp)
1001b41c:	dd000415 	stw	r20,16(sp)
1001b420:	dcc00315 	stw	r19,12(sp)
1001b424:	dc400115 	stw	r17,4(sp)
1001b428:	dc000015 	stw	r16,0(sp)
1001b42c:	2480b804 	addi	r18,r4,736
1001b430:	90002126 	beq	r18,zero,1001b4b8 <_fwalk_reent+0xac>
1001b434:	2829883a 	mov	r20,r5
1001b438:	2027883a 	mov	r19,r4
1001b43c:	002b883a 	mov	r21,zero
1001b440:	94400117 	ldw	r17,4(r18)
1001b444:	94000217 	ldw	r16,8(r18)
1001b448:	8c7fffc4 	addi	r17,r17,-1
1001b44c:	88000e16 	blt	r17,zero,1001b488 <_fwalk_reent+0x7c>
1001b450:	8080030b 	ldhu	r2,12(r16)
1001b454:	8c7fffc4 	addi	r17,r17,-1
1001b458:	108000b0 	cmpltui	r2,r2,2
1001b45c:	1000071e 	bne	r2,zero,1001b47c <_fwalk_reent+0x70>
1001b460:	8080038f 	ldh	r2,14(r16)
1001b464:	800b883a 	mov	r5,r16
1001b468:	9809883a 	mov	r4,r19
1001b46c:	10bfffe0 	cmpeqi	r2,r2,-1
1001b470:	1000021e 	bne	r2,zero,1001b47c <_fwalk_reent+0x70>
1001b474:	a03ee83a 	callr	r20
1001b478:	a8aab03a 	or	r21,r21,r2
1001b47c:	88bfffd8 	cmpnei	r2,r17,-1
1001b480:	84001a04 	addi	r16,r16,104
1001b484:	103ff21e 	bne	r2,zero,1001b450 <_fwalk_reent+0x44>
1001b488:	94800017 	ldw	r18,0(r18)
1001b48c:	903fec1e 	bne	r18,zero,1001b440 <_fwalk_reent+0x34>
1001b490:	a805883a 	mov	r2,r21
1001b494:	dfc00617 	ldw	ra,24(sp)
1001b498:	dd400517 	ldw	r21,20(sp)
1001b49c:	dd000417 	ldw	r20,16(sp)
1001b4a0:	dcc00317 	ldw	r19,12(sp)
1001b4a4:	dc800217 	ldw	r18,8(sp)
1001b4a8:	dc400117 	ldw	r17,4(sp)
1001b4ac:	dc000017 	ldw	r16,0(sp)
1001b4b0:	dec00704 	addi	sp,sp,28
1001b4b4:	f800283a 	ret
1001b4b8:	002b883a 	mov	r21,zero
1001b4bc:	003ff406 	br	1001b490 <_fwalk_reent+0x84>

1001b4c0 <_isatty_r>:
1001b4c0:	defffe04 	addi	sp,sp,-8
1001b4c4:	dc000015 	stw	r16,0(sp)
1001b4c8:	008400f4 	movhi	r2,4099
1001b4cc:	2021883a 	mov	r16,r4
1001b4d0:	2809883a 	mov	r4,r5
1001b4d4:	dfc00115 	stw	ra,4(sp)
1001b4d8:	102a6815 	stw	zero,-22112(r2)
1001b4dc:	0021df40 	call	10021df4 <isatty>
1001b4e0:	10ffffd8 	cmpnei	r3,r2,-1
1001b4e4:	18000426 	beq	r3,zero,1001b4f8 <_isatty_r+0x38>
1001b4e8:	dfc00117 	ldw	ra,4(sp)
1001b4ec:	dc000017 	ldw	r16,0(sp)
1001b4f0:	dec00204 	addi	sp,sp,8
1001b4f4:	f800283a 	ret
1001b4f8:	00c400f4 	movhi	r3,4099
1001b4fc:	18ea6817 	ldw	r3,-22112(r3)
1001b500:	183ff926 	beq	r3,zero,1001b4e8 <_isatty_r+0x28>
1001b504:	80c00015 	stw	r3,0(r16)
1001b508:	dfc00117 	ldw	ra,4(sp)
1001b50c:	dc000017 	ldw	r16,0(sp)
1001b510:	dec00204 	addi	sp,sp,8
1001b514:	f800283a 	ret

1001b518 <__localeconv_l>:
1001b518:	20803c04 	addi	r2,r4,240
1001b51c:	f800283a 	ret

1001b520 <_localeconv_r>:
1001b520:	008400b4 	movhi	r2,4098
1001b524:	109c6504 	addi	r2,r2,29076
1001b528:	f800283a 	ret

1001b52c <localeconv>:
1001b52c:	008400b4 	movhi	r2,4098
1001b530:	109c6504 	addi	r2,r2,29076
1001b534:	f800283a 	ret

1001b538 <_lseek_r>:
1001b538:	defffe04 	addi	sp,sp,-8
1001b53c:	2805883a 	mov	r2,r5
1001b540:	dc000015 	stw	r16,0(sp)
1001b544:	300b883a 	mov	r5,r6
1001b548:	2021883a 	mov	r16,r4
1001b54c:	380d883a 	mov	r6,r7
1001b550:	1009883a 	mov	r4,r2
1001b554:	008400f4 	movhi	r2,4099
1001b558:	dfc00115 	stw	ra,4(sp)
1001b55c:	102a6815 	stw	zero,-22112(r2)
1001b560:	00221280 	call	10022128 <lseek>
1001b564:	10ffffd8 	cmpnei	r3,r2,-1
1001b568:	18000426 	beq	r3,zero,1001b57c <_lseek_r+0x44>
1001b56c:	dfc00117 	ldw	ra,4(sp)
1001b570:	dc000017 	ldw	r16,0(sp)
1001b574:	dec00204 	addi	sp,sp,8
1001b578:	f800283a 	ret
1001b57c:	00c400f4 	movhi	r3,4099
1001b580:	18ea6817 	ldw	r3,-22112(r3)
1001b584:	183ff926 	beq	r3,zero,1001b56c <_lseek_r+0x34>
1001b588:	80c00015 	stw	r3,0(r16)
1001b58c:	dfc00117 	ldw	ra,4(sp)
1001b590:	dc000017 	ldw	r16,0(sp)
1001b594:	dec00204 	addi	sp,sp,8
1001b598:	f800283a 	ret

1001b59c <_Balloc>:
1001b59c:	20801317 	ldw	r2,76(r4)
1001b5a0:	defffc04 	addi	sp,sp,-16
1001b5a4:	dc400115 	stw	r17,4(sp)
1001b5a8:	dc000015 	stw	r16,0(sp)
1001b5ac:	dfc00315 	stw	ra,12(sp)
1001b5b0:	dc800215 	stw	r18,8(sp)
1001b5b4:	2021883a 	mov	r16,r4
1001b5b8:	2823883a 	mov	r17,r5
1001b5bc:	10000e26 	beq	r2,zero,1001b5f8 <_Balloc+0x5c>
1001b5c0:	880690ba 	slli	r3,r17,2
1001b5c4:	10c7883a 	add	r3,r2,r3
1001b5c8:	18800017 	ldw	r2,0(r3)
1001b5cc:	10001126 	beq	r2,zero,1001b614 <_Balloc+0x78>
1001b5d0:	11000017 	ldw	r4,0(r2)
1001b5d4:	19000015 	stw	r4,0(r3)
1001b5d8:	10000415 	stw	zero,16(r2)
1001b5dc:	10000315 	stw	zero,12(r2)
1001b5e0:	dfc00317 	ldw	ra,12(sp)
1001b5e4:	dc800217 	ldw	r18,8(sp)
1001b5e8:	dc400117 	ldw	r17,4(sp)
1001b5ec:	dc000017 	ldw	r16,0(sp)
1001b5f0:	dec00404 	addi	sp,sp,16
1001b5f4:	f800283a 	ret
1001b5f8:	01800844 	movi	r6,33
1001b5fc:	01400104 	movi	r5,4
1001b600:	001e3800 	call	1001e380 <_calloc_r>
1001b604:	80801315 	stw	r2,76(r16)
1001b608:	103fed1e 	bne	r2,zero,1001b5c0 <_Balloc+0x24>
1001b60c:	0005883a 	mov	r2,zero
1001b610:	003ff306 	br	1001b5e0 <_Balloc+0x44>
1001b614:	04800044 	movi	r18,1
1001b618:	9464983a 	sll	r18,r18,r17
1001b61c:	01400044 	movi	r5,1
1001b620:	8009883a 	mov	r4,r16
1001b624:	91800144 	addi	r6,r18,5
1001b628:	300c90ba 	slli	r6,r6,2
1001b62c:	001e3800 	call	1001e380 <_calloc_r>
1001b630:	103ff626 	beq	r2,zero,1001b60c <_Balloc+0x70>
1001b634:	14400115 	stw	r17,4(r2)
1001b638:	14800215 	stw	r18,8(r2)
1001b63c:	003fe606 	br	1001b5d8 <_Balloc+0x3c>

1001b640 <_Bfree>:
1001b640:	28000726 	beq	r5,zero,1001b660 <_Bfree+0x20>
1001b644:	28c00117 	ldw	r3,4(r5)
1001b648:	20801317 	ldw	r2,76(r4)
1001b64c:	180690ba 	slli	r3,r3,2
1001b650:	10c5883a 	add	r2,r2,r3
1001b654:	10c00017 	ldw	r3,0(r2)
1001b658:	28c00015 	stw	r3,0(r5)
1001b65c:	11400015 	stw	r5,0(r2)
1001b660:	f800283a 	ret

1001b664 <__multadd>:
1001b664:	defffa04 	addi	sp,sp,-24
1001b668:	dc800315 	stw	r18,12(sp)
1001b66c:	dc400215 	stw	r17,8(sp)
1001b670:	dc000115 	stw	r16,4(sp)
1001b674:	2823883a 	mov	r17,r5
1001b678:	2c000417 	ldw	r16,16(r5)
1001b67c:	2025883a 	mov	r18,r4
1001b680:	dfc00515 	stw	ra,20(sp)
1001b684:	29000504 	addi	r4,r5,20
1001b688:	dcc00415 	stw	r19,16(sp)
1001b68c:	000b883a 	mov	r5,zero
1001b690:	20800017 	ldw	r2,0(r4)
1001b694:	21000104 	addi	r4,r4,4
1001b698:	29400044 	addi	r5,r5,1
1001b69c:	10ffffcc 	andi	r3,r2,65535
1001b6a0:	1987383a 	mul	r3,r3,r6
1001b6a4:	1004d43a 	srli	r2,r2,16
1001b6a8:	19cf883a 	add	r7,r3,r7
1001b6ac:	1185383a 	mul	r2,r2,r6
1001b6b0:	3810d43a 	srli	r8,r7,16
1001b6b4:	38ffffcc 	andi	r3,r7,65535
1001b6b8:	120f883a 	add	r7,r2,r8
1001b6bc:	3804943a 	slli	r2,r7,16
1001b6c0:	380ed43a 	srli	r7,r7,16
1001b6c4:	10c7883a 	add	r3,r2,r3
1001b6c8:	20ffff15 	stw	r3,-4(r4)
1001b6cc:	2c3ff016 	blt	r5,r16,1001b690 <__multadd+0x2c>
1001b6d0:	38000826 	beq	r7,zero,1001b6f4 <__multadd+0x90>
1001b6d4:	88800217 	ldw	r2,8(r17)
1001b6d8:	80800e0e 	bge	r16,r2,1001b714 <__multadd+0xb0>
1001b6dc:	80800144 	addi	r2,r16,5
1001b6e0:	100490ba 	slli	r2,r2,2
1001b6e4:	84000044 	addi	r16,r16,1
1001b6e8:	8885883a 	add	r2,r17,r2
1001b6ec:	11c00015 	stw	r7,0(r2)
1001b6f0:	8c000415 	stw	r16,16(r17)
1001b6f4:	8805883a 	mov	r2,r17
1001b6f8:	dfc00517 	ldw	ra,20(sp)
1001b6fc:	dcc00417 	ldw	r19,16(sp)
1001b700:	dc800317 	ldw	r18,12(sp)
1001b704:	dc400217 	ldw	r17,8(sp)
1001b708:	dc000117 	ldw	r16,4(sp)
1001b70c:	dec00604 	addi	sp,sp,24
1001b710:	f800283a 	ret
1001b714:	89400117 	ldw	r5,4(r17)
1001b718:	9009883a 	mov	r4,r18
1001b71c:	d9c00015 	stw	r7,0(sp)
1001b720:	29400044 	addi	r5,r5,1
1001b724:	001b59c0 	call	1001b59c <_Balloc>
1001b728:	89800417 	ldw	r6,16(r17)
1001b72c:	89400304 	addi	r5,r17,12
1001b730:	11000304 	addi	r4,r2,12
1001b734:	31800084 	addi	r6,r6,2
1001b738:	300c90ba 	slli	r6,r6,2
1001b73c:	1027883a 	mov	r19,r2
1001b740:	00156f00 	call	100156f0 <memcpy>
1001b744:	d9c00017 	ldw	r7,0(sp)
1001b748:	88000926 	beq	r17,zero,1001b770 <__multadd+0x10c>
1001b74c:	88c00117 	ldw	r3,4(r17)
1001b750:	90801317 	ldw	r2,76(r18)
1001b754:	180690ba 	slli	r3,r3,2
1001b758:	10c5883a 	add	r2,r2,r3
1001b75c:	10c00017 	ldw	r3,0(r2)
1001b760:	88c00015 	stw	r3,0(r17)
1001b764:	14400015 	stw	r17,0(r2)
1001b768:	9823883a 	mov	r17,r19
1001b76c:	003fdb06 	br	1001b6dc <__multadd+0x78>
1001b770:	9823883a 	mov	r17,r19
1001b774:	003fd906 	br	1001b6dc <__multadd+0x78>

1001b778 <__s2b>:
1001b778:	defff904 	addi	sp,sp,-28
1001b77c:	dc800215 	stw	r18,8(sp)
1001b780:	dc000015 	stw	r16,0(sp)
1001b784:	2025883a 	mov	r18,r4
1001b788:	2821883a 	mov	r16,r5
1001b78c:	39000204 	addi	r4,r7,8
1001b790:	01400244 	movi	r5,9
1001b794:	dcc00315 	stw	r19,12(sp)
1001b798:	dc400115 	stw	r17,4(sp)
1001b79c:	dfc00615 	stw	ra,24(sp)
1001b7a0:	3823883a 	mov	r17,r7
1001b7a4:	dd400515 	stw	r21,20(sp)
1001b7a8:	dd000415 	stw	r20,16(sp)
1001b7ac:	3027883a 	mov	r19,r6
1001b7b0:	0013eac0 	call	10013eac <__divsi3>
1001b7b4:	88c00290 	cmplti	r3,r17,10
1001b7b8:	1800311e 	bne	r3,zero,1001b880 <__s2b+0x108>
1001b7bc:	00c00044 	movi	r3,1
1001b7c0:	000b883a 	mov	r5,zero
1001b7c4:	18c7883a 	add	r3,r3,r3
1001b7c8:	29400044 	addi	r5,r5,1
1001b7cc:	18bffd16 	blt	r3,r2,1001b7c4 <__s2b+0x4c>
1001b7d0:	9009883a 	mov	r4,r18
1001b7d4:	001b59c0 	call	1001b59c <_Balloc>
1001b7d8:	d8c00717 	ldw	r3,28(sp)
1001b7dc:	10c00515 	stw	r3,20(r2)
1001b7e0:	00c00044 	movi	r3,1
1001b7e4:	10c00415 	stw	r3,16(r2)
1001b7e8:	98c00290 	cmplti	r3,r19,10
1001b7ec:	1800211e 	bne	r3,zero,1001b874 <__s2b+0xfc>
1001b7f0:	85400244 	addi	r21,r16,9
1001b7f4:	84e9883a 	add	r20,r16,r19
1001b7f8:	a821883a 	mov	r16,r21
1001b7fc:	84000044 	addi	r16,r16,1
1001b800:	81ffffc7 	ldb	r7,-1(r16)
1001b804:	01800284 	movi	r6,10
1001b808:	100b883a 	mov	r5,r2
1001b80c:	39fff404 	addi	r7,r7,-48
1001b810:	9009883a 	mov	r4,r18
1001b814:	001b6640 	call	1001b664 <__multadd>
1001b818:	a43ff81e 	bne	r20,r16,1001b7fc <__s2b+0x84>
1001b81c:	9c3ffe04 	addi	r16,r19,-8
1001b820:	ac21883a 	add	r16,r21,r16
1001b824:	9c400a0e 	bge	r19,r17,1001b850 <__s2b+0xd8>
1001b828:	8ce3c83a 	sub	r17,r17,r19
1001b82c:	8463883a 	add	r17,r16,r17
1001b830:	84000044 	addi	r16,r16,1
1001b834:	81ffffc7 	ldb	r7,-1(r16)
1001b838:	01800284 	movi	r6,10
1001b83c:	100b883a 	mov	r5,r2
1001b840:	39fff404 	addi	r7,r7,-48
1001b844:	9009883a 	mov	r4,r18
1001b848:	001b6640 	call	1001b664 <__multadd>
1001b84c:	8c3ff81e 	bne	r17,r16,1001b830 <__s2b+0xb8>
1001b850:	dfc00617 	ldw	ra,24(sp)
1001b854:	dd400517 	ldw	r21,20(sp)
1001b858:	dd000417 	ldw	r20,16(sp)
1001b85c:	dcc00317 	ldw	r19,12(sp)
1001b860:	dc800217 	ldw	r18,8(sp)
1001b864:	dc400117 	ldw	r17,4(sp)
1001b868:	dc000017 	ldw	r16,0(sp)
1001b86c:	dec00704 	addi	sp,sp,28
1001b870:	f800283a 	ret
1001b874:	84000284 	addi	r16,r16,10
1001b878:	04c00244 	movi	r19,9
1001b87c:	003fe906 	br	1001b824 <__s2b+0xac>
1001b880:	000b883a 	mov	r5,zero
1001b884:	003fd206 	br	1001b7d0 <__s2b+0x58>

1001b888 <__hi0bits>:
1001b888:	20bfffec 	andhi	r2,r4,65535
1001b88c:	1000131e 	bne	r2,zero,1001b8dc <__hi0bits+0x54>
1001b890:	2008943a 	slli	r4,r4,16
1001b894:	00800404 	movi	r2,16
1001b898:	20ffc02c 	andhi	r3,r4,65280
1001b89c:	1800021e 	bne	r3,zero,1001b8a8 <__hi0bits+0x20>
1001b8a0:	2008923a 	slli	r4,r4,8
1001b8a4:	10800204 	addi	r2,r2,8
1001b8a8:	20fc002c 	andhi	r3,r4,61440
1001b8ac:	1800021e 	bne	r3,zero,1001b8b8 <__hi0bits+0x30>
1001b8b0:	2008913a 	slli	r4,r4,4
1001b8b4:	10800104 	addi	r2,r2,4
1001b8b8:	20f0002c 	andhi	r3,r4,49152
1001b8bc:	1800021e 	bne	r3,zero,1001b8c8 <__hi0bits+0x40>
1001b8c0:	200890ba 	slli	r4,r4,2
1001b8c4:	10800084 	addi	r2,r2,2
1001b8c8:	20000316 	blt	r4,zero,1001b8d8 <__hi0bits+0x50>
1001b8cc:	2110002c 	andhi	r4,r4,16384
1001b8d0:	10800044 	addi	r2,r2,1
1001b8d4:	20000326 	beq	r4,zero,1001b8e4 <__hi0bits+0x5c>
1001b8d8:	f800283a 	ret
1001b8dc:	0005883a 	mov	r2,zero
1001b8e0:	003fed06 	br	1001b898 <__hi0bits+0x10>
1001b8e4:	00800804 	movi	r2,32
1001b8e8:	f800283a 	ret

1001b8ec <__lo0bits>:
1001b8ec:	20c00017 	ldw	r3,0(r4)
1001b8f0:	188001cc 	andi	r2,r3,7
1001b8f4:	10000826 	beq	r2,zero,1001b918 <__lo0bits+0x2c>
1001b8f8:	1880004c 	andi	r2,r3,1
1001b8fc:	10001f1e 	bne	r2,zero,1001b97c <__lo0bits+0x90>
1001b900:	1880008c 	andi	r2,r3,2
1001b904:	10002126 	beq	r2,zero,1001b98c <__lo0bits+0xa0>
1001b908:	1806d07a 	srli	r3,r3,1
1001b90c:	00800044 	movi	r2,1
1001b910:	20c00015 	stw	r3,0(r4)
1001b914:	f800283a 	ret
1001b918:	18bfffcc 	andi	r2,r3,65535
1001b91c:	1000151e 	bne	r2,zero,1001b974 <__lo0bits+0x88>
1001b920:	1806d43a 	srli	r3,r3,16
1001b924:	00800404 	movi	r2,16
1001b928:	19403fcc 	andi	r5,r3,255
1001b92c:	2800021e 	bne	r5,zero,1001b938 <__lo0bits+0x4c>
1001b930:	1806d23a 	srli	r3,r3,8
1001b934:	10800204 	addi	r2,r2,8
1001b938:	194003cc 	andi	r5,r3,15
1001b93c:	2800021e 	bne	r5,zero,1001b948 <__lo0bits+0x5c>
1001b940:	1806d13a 	srli	r3,r3,4
1001b944:	10800104 	addi	r2,r2,4
1001b948:	194000cc 	andi	r5,r3,3
1001b94c:	2800021e 	bne	r5,zero,1001b958 <__lo0bits+0x6c>
1001b950:	1806d0ba 	srli	r3,r3,2
1001b954:	10800084 	addi	r2,r2,2
1001b958:	1940004c 	andi	r5,r3,1
1001b95c:	2800031e 	bne	r5,zero,1001b96c <__lo0bits+0x80>
1001b960:	1806d07a 	srli	r3,r3,1
1001b964:	10800044 	addi	r2,r2,1
1001b968:	18000626 	beq	r3,zero,1001b984 <__lo0bits+0x98>
1001b96c:	20c00015 	stw	r3,0(r4)
1001b970:	f800283a 	ret
1001b974:	0005883a 	mov	r2,zero
1001b978:	003feb06 	br	1001b928 <__lo0bits+0x3c>
1001b97c:	0005883a 	mov	r2,zero
1001b980:	f800283a 	ret
1001b984:	00800804 	movi	r2,32
1001b988:	f800283a 	ret
1001b98c:	1806d0ba 	srli	r3,r3,2
1001b990:	00800084 	movi	r2,2
1001b994:	20c00015 	stw	r3,0(r4)
1001b998:	f800283a 	ret

1001b99c <__i2b>:
1001b99c:	defffe04 	addi	sp,sp,-8
1001b9a0:	dc000015 	stw	r16,0(sp)
1001b9a4:	2821883a 	mov	r16,r5
1001b9a8:	01400044 	movi	r5,1
1001b9ac:	dfc00115 	stw	ra,4(sp)
1001b9b0:	001b59c0 	call	1001b59c <_Balloc>
1001b9b4:	01000044 	movi	r4,1
1001b9b8:	14000515 	stw	r16,20(r2)
1001b9bc:	11000415 	stw	r4,16(r2)
1001b9c0:	dfc00117 	ldw	ra,4(sp)
1001b9c4:	dc000017 	ldw	r16,0(sp)
1001b9c8:	dec00204 	addi	sp,sp,8
1001b9cc:	f800283a 	ret

1001b9d0 <__multiply>:
1001b9d0:	defffa04 	addi	sp,sp,-24
1001b9d4:	dd000415 	stw	r20,16(sp)
1001b9d8:	dcc00315 	stw	r19,12(sp)
1001b9dc:	35000417 	ldw	r20,16(r6)
1001b9e0:	2cc00417 	ldw	r19,16(r5)
1001b9e4:	dc800215 	stw	r18,8(sp)
1001b9e8:	dc400115 	stw	r17,4(sp)
1001b9ec:	dfc00515 	stw	ra,20(sp)
1001b9f0:	dc000015 	stw	r16,0(sp)
1001b9f4:	2823883a 	mov	r17,r5
1001b9f8:	3025883a 	mov	r18,r6
1001b9fc:	9d000516 	blt	r19,r20,1001ba14 <__multiply+0x44>
1001ba00:	a007883a 	mov	r3,r20
1001ba04:	2825883a 	mov	r18,r5
1001ba08:	9829883a 	mov	r20,r19
1001ba0c:	3023883a 	mov	r17,r6
1001ba10:	1827883a 	mov	r19,r3
1001ba14:	90800217 	ldw	r2,8(r18)
1001ba18:	a4e1883a 	add	r16,r20,r19
1001ba1c:	91400117 	ldw	r5,4(r18)
1001ba20:	1400010e 	bge	r2,r16,1001ba28 <__multiply+0x58>
1001ba24:	29400044 	addi	r5,r5,1
1001ba28:	001b59c0 	call	1001b59c <_Balloc>
1001ba2c:	801290ba 	slli	r9,r16,2
1001ba30:	12800504 	addi	r10,r2,20
1001ba34:	5007883a 	mov	r3,r10
1001ba38:	5253883a 	add	r9,r10,r9
1001ba3c:	5240032e 	bgeu	r10,r9,1001ba4c <__multiply+0x7c>
1001ba40:	18000015 	stw	zero,0(r3)
1001ba44:	18c00104 	addi	r3,r3,4
1001ba48:	1a7ffd36 	bltu	r3,r9,1001ba40 <__multiply+0x70>
1001ba4c:	981690ba 	slli	r11,r19,2
1001ba50:	a01090ba 	slli	r8,r20,2
1001ba54:	89400504 	addi	r5,r17,20
1001ba58:	91800504 	addi	r6,r18,20
1001ba5c:	2ad7883a 	add	r11,r5,r11
1001ba60:	3211883a 	add	r8,r6,r8
1001ba64:	2ac00636 	bltu	r5,r11,1001ba80 <__multiply+0xb0>
1001ba68:	00004106 	br	1001bb70 <__multiply+0x1a0>
1001ba6c:	701cd43a 	srli	r14,r14,16
1001ba70:	7000221e 	bne	r14,zero,1001bafc <__multiply+0x12c>
1001ba74:	29400104 	addi	r5,r5,4
1001ba78:	52800104 	addi	r10,r10,4
1001ba7c:	2ac03c2e 	bgeu	r5,r11,1001bb70 <__multiply+0x1a0>
1001ba80:	2b800017 	ldw	r14,0(r5)
1001ba84:	73ffffcc 	andi	r15,r14,65535
1001ba88:	783ff826 	beq	r15,zero,1001ba6c <__multiply+0x9c>
1001ba8c:	501b883a 	mov	r13,r10
1001ba90:	301d883a 	mov	r14,r6
1001ba94:	003f883a 	mov	ra,zero
1001ba98:	71000017 	ldw	r4,0(r14)
1001ba9c:	6b000017 	ldw	r12,0(r13)
1001baa0:	6b400104 	addi	r13,r13,4
1001baa4:	21ffffcc 	andi	r7,r4,65535
1001baa8:	3bcf383a 	mul	r7,r7,r15
1001baac:	2006d43a 	srli	r3,r4,16
1001bab0:	613fffcc 	andi	r4,r12,65535
1001bab4:	390f883a 	add	r7,r7,r4
1001bab8:	3fcf883a 	add	r7,r7,ra
1001babc:	1bc7383a 	mul	r3,r3,r15
1001bac0:	6018d43a 	srli	r12,r12,16
1001bac4:	3808d43a 	srli	r4,r7,16
1001bac8:	39ffffcc 	andi	r7,r7,65535
1001bacc:	1b07883a 	add	r3,r3,r12
1001bad0:	1907883a 	add	r3,r3,r4
1001bad4:	1808943a 	slli	r4,r3,16
1001bad8:	73800104 	addi	r14,r14,4
1001badc:	183ed43a 	srli	ra,r3,16
1001bae0:	21ceb03a 	or	r7,r4,r7
1001bae4:	69ffff15 	stw	r7,-4(r13)
1001bae8:	723feb36 	bltu	r14,r8,1001ba98 <__multiply+0xc8>
1001baec:	6fc00015 	stw	ra,0(r13)
1001baf0:	2b800017 	ldw	r14,0(r5)
1001baf4:	701cd43a 	srli	r14,r14,16
1001baf8:	703fde26 	beq	r14,zero,1001ba74 <__multiply+0xa4>
1001bafc:	50c00017 	ldw	r3,0(r10)
1001bb00:	501b883a 	mov	r13,r10
1001bb04:	3019883a 	mov	r12,r6
1001bb08:	180f883a 	mov	r7,r3
1001bb0c:	001f883a 	mov	r15,zero
1001bb10:	6100000b 	ldhu	r4,0(r12)
1001bb14:	380ed43a 	srli	r7,r7,16
1001bb18:	18ffffcc 	andi	r3,r3,65535
1001bb1c:	2389383a 	mul	r4,r4,r14
1001bb20:	6b400104 	addi	r13,r13,4
1001bb24:	63000104 	addi	r12,r12,4
1001bb28:	21c9883a 	add	r4,r4,r7
1001bb2c:	23c9883a 	add	r4,r4,r15
1001bb30:	201e943a 	slli	r15,r4,16
1001bb34:	69c00017 	ldw	r7,0(r13)
1001bb38:	2008d43a 	srli	r4,r4,16
1001bb3c:	78c6b03a 	or	r3,r15,r3
1001bb40:	68ffff15 	stw	r3,-4(r13)
1001bb44:	60ffff8b 	ldhu	r3,-2(r12)
1001bb48:	3bffffcc 	andi	r15,r7,65535
1001bb4c:	1b87383a 	mul	r3,r3,r14
1001bb50:	1bc7883a 	add	r3,r3,r15
1001bb54:	1907883a 	add	r3,r3,r4
1001bb58:	181ed43a 	srli	r15,r3,16
1001bb5c:	623fec36 	bltu	r12,r8,1001bb10 <__multiply+0x140>
1001bb60:	68c00015 	stw	r3,0(r13)
1001bb64:	29400104 	addi	r5,r5,4
1001bb68:	52800104 	addi	r10,r10,4
1001bb6c:	2affc436 	bltu	r5,r11,1001ba80 <__multiply+0xb0>
1001bb70:	0400090e 	bge	zero,r16,1001bb98 <__multiply+0x1c8>
1001bb74:	48ffff17 	ldw	r3,-4(r9)
1001bb78:	4a7fff04 	addi	r9,r9,-4
1001bb7c:	18000326 	beq	r3,zero,1001bb8c <__multiply+0x1bc>
1001bb80:	00000506 	br	1001bb98 <__multiply+0x1c8>
1001bb84:	48c00017 	ldw	r3,0(r9)
1001bb88:	1800031e 	bne	r3,zero,1001bb98 <__multiply+0x1c8>
1001bb8c:	843fffc4 	addi	r16,r16,-1
1001bb90:	4a7fff04 	addi	r9,r9,-4
1001bb94:	803ffb1e 	bne	r16,zero,1001bb84 <__multiply+0x1b4>
1001bb98:	14000415 	stw	r16,16(r2)
1001bb9c:	dfc00517 	ldw	ra,20(sp)
1001bba0:	dd000417 	ldw	r20,16(sp)
1001bba4:	dcc00317 	ldw	r19,12(sp)
1001bba8:	dc800217 	ldw	r18,8(sp)
1001bbac:	dc400117 	ldw	r17,4(sp)
1001bbb0:	dc000017 	ldw	r16,0(sp)
1001bbb4:	dec00604 	addi	sp,sp,24
1001bbb8:	f800283a 	ret

1001bbbc <__pow5mult>:
1001bbbc:	defffb04 	addi	sp,sp,-20
1001bbc0:	dcc00315 	stw	r19,12(sp)
1001bbc4:	dc000015 	stw	r16,0(sp)
1001bbc8:	dfc00415 	stw	ra,16(sp)
1001bbcc:	dc800215 	stw	r18,8(sp)
1001bbd0:	dc400115 	stw	r17,4(sp)
1001bbd4:	308000cc 	andi	r2,r6,3
1001bbd8:	3021883a 	mov	r16,r6
1001bbdc:	2027883a 	mov	r19,r4
1001bbe0:	10002d1e 	bne	r2,zero,1001bc98 <__pow5mult+0xdc>
1001bbe4:	2825883a 	mov	r18,r5
1001bbe8:	8021d0ba 	srai	r16,r16,2
1001bbec:	80001926 	beq	r16,zero,1001bc54 <__pow5mult+0x98>
1001bbf0:	9c401217 	ldw	r17,72(r19)
1001bbf4:	8800061e 	bne	r17,zero,1001bc10 <__pow5mult+0x54>
1001bbf8:	00002f06 	br	1001bcb8 <__pow5mult+0xfc>
1001bbfc:	8021d07a 	srai	r16,r16,1
1001bc00:	80001426 	beq	r16,zero,1001bc54 <__pow5mult+0x98>
1001bc04:	88800017 	ldw	r2,0(r17)
1001bc08:	10001a26 	beq	r2,zero,1001bc74 <__pow5mult+0xb8>
1001bc0c:	1023883a 	mov	r17,r2
1001bc10:	8080004c 	andi	r2,r16,1
1001bc14:	103ff926 	beq	r2,zero,1001bbfc <__pow5mult+0x40>
1001bc18:	880d883a 	mov	r6,r17
1001bc1c:	900b883a 	mov	r5,r18
1001bc20:	9809883a 	mov	r4,r19
1001bc24:	001b9d00 	call	1001b9d0 <__multiply>
1001bc28:	90001926 	beq	r18,zero,1001bc90 <__pow5mult+0xd4>
1001bc2c:	91000117 	ldw	r4,4(r18)
1001bc30:	98c01317 	ldw	r3,76(r19)
1001bc34:	8021d07a 	srai	r16,r16,1
1001bc38:	200890ba 	slli	r4,r4,2
1001bc3c:	1907883a 	add	r3,r3,r4
1001bc40:	19000017 	ldw	r4,0(r3)
1001bc44:	91000015 	stw	r4,0(r18)
1001bc48:	1c800015 	stw	r18,0(r3)
1001bc4c:	1025883a 	mov	r18,r2
1001bc50:	803fec1e 	bne	r16,zero,1001bc04 <__pow5mult+0x48>
1001bc54:	9005883a 	mov	r2,r18
1001bc58:	dfc00417 	ldw	ra,16(sp)
1001bc5c:	dcc00317 	ldw	r19,12(sp)
1001bc60:	dc800217 	ldw	r18,8(sp)
1001bc64:	dc400117 	ldw	r17,4(sp)
1001bc68:	dc000017 	ldw	r16,0(sp)
1001bc6c:	dec00504 	addi	sp,sp,20
1001bc70:	f800283a 	ret
1001bc74:	880d883a 	mov	r6,r17
1001bc78:	880b883a 	mov	r5,r17
1001bc7c:	9809883a 	mov	r4,r19
1001bc80:	001b9d00 	call	1001b9d0 <__multiply>
1001bc84:	88800015 	stw	r2,0(r17)
1001bc88:	10000015 	stw	zero,0(r2)
1001bc8c:	003fdf06 	br	1001bc0c <__pow5mult+0x50>
1001bc90:	1025883a 	mov	r18,r2
1001bc94:	003fd906 	br	1001bbfc <__pow5mult+0x40>
1001bc98:	100490ba 	slli	r2,r2,2
1001bc9c:	00c400b4 	movhi	r3,4098
1001bca0:	000f883a 	mov	r7,zero
1001bca4:	10c7883a 	add	r3,r2,r3
1001bca8:	19974217 	ldw	r6,23816(r3)
1001bcac:	001b6640 	call	1001b664 <__multadd>
1001bcb0:	1025883a 	mov	r18,r2
1001bcb4:	003fcc06 	br	1001bbe8 <__pow5mult+0x2c>
1001bcb8:	01400044 	movi	r5,1
1001bcbc:	9809883a 	mov	r4,r19
1001bcc0:	001b59c0 	call	1001b59c <_Balloc>
1001bcc4:	1023883a 	mov	r17,r2
1001bcc8:	00809c44 	movi	r2,625
1001bccc:	88800515 	stw	r2,20(r17)
1001bcd0:	00800044 	movi	r2,1
1001bcd4:	88800415 	stw	r2,16(r17)
1001bcd8:	9c401215 	stw	r17,72(r19)
1001bcdc:	88000015 	stw	zero,0(r17)
1001bce0:	003fcb06 	br	1001bc10 <__pow5mult+0x54>

1001bce4 <__lshift>:
1001bce4:	defff904 	addi	sp,sp,-28
1001bce8:	dcc00315 	stw	r19,12(sp)
1001bcec:	dc400115 	stw	r17,4(sp)
1001bcf0:	2cc00417 	ldw	r19,16(r5)
1001bcf4:	3023d17a 	srai	r17,r6,5
1001bcf8:	28800217 	ldw	r2,8(r5)
1001bcfc:	dd400515 	stw	r21,20(sp)
1001bd00:	8ce7883a 	add	r19,r17,r19
1001bd04:	dd000415 	stw	r20,16(sp)
1001bd08:	dc800215 	stw	r18,8(sp)
1001bd0c:	dc000015 	stw	r16,0(sp)
1001bd10:	dfc00615 	stw	ra,24(sp)
1001bd14:	9c000044 	addi	r16,r19,1
1001bd18:	2825883a 	mov	r18,r5
1001bd1c:	302b883a 	mov	r21,r6
1001bd20:	2029883a 	mov	r20,r4
1001bd24:	29400117 	ldw	r5,4(r5)
1001bd28:	1400030e 	bge	r2,r16,1001bd38 <__lshift+0x54>
1001bd2c:	1085883a 	add	r2,r2,r2
1001bd30:	29400044 	addi	r5,r5,1
1001bd34:	143ffd16 	blt	r2,r16,1001bd2c <__lshift+0x48>
1001bd38:	a009883a 	mov	r4,r20
1001bd3c:	001b59c0 	call	1001b59c <_Balloc>
1001bd40:	11000504 	addi	r4,r2,20
1001bd44:	0440090e 	bge	zero,r17,1001bd6c <__lshift+0x88>
1001bd48:	8c400144 	addi	r17,r17,5
1001bd4c:	882290ba 	slli	r17,r17,2
1001bd50:	2007883a 	mov	r3,r4
1001bd54:	144b883a 	add	r5,r2,r17
1001bd58:	18c00104 	addi	r3,r3,4
1001bd5c:	183fff15 	stw	zero,-4(r3)
1001bd60:	28fffd1e 	bne	r5,r3,1001bd58 <__lshift+0x74>
1001bd64:	8c7ffb04 	addi	r17,r17,-20
1001bd68:	2449883a 	add	r4,r4,r17
1001bd6c:	92000417 	ldw	r8,16(r18)
1001bd70:	90c00504 	addi	r3,r18,20
1001bd74:	a98007cc 	andi	r6,r21,31
1001bd78:	401090ba 	slli	r8,r8,2
1001bd7c:	1a11883a 	add	r8,r3,r8
1001bd80:	30002126 	beq	r6,zero,1001be08 <__lshift+0x124>
1001bd84:	02400804 	movi	r9,32
1001bd88:	4993c83a 	sub	r9,r9,r6
1001bd8c:	000f883a 	mov	r7,zero
1001bd90:	19400017 	ldw	r5,0(r3)
1001bd94:	21000104 	addi	r4,r4,4
1001bd98:	18c00104 	addi	r3,r3,4
1001bd9c:	298a983a 	sll	r5,r5,r6
1001bda0:	29cab03a 	or	r5,r5,r7
1001bda4:	217fff15 	stw	r5,-4(r4)
1001bda8:	197fff17 	ldw	r5,-4(r3)
1001bdac:	2a4ed83a 	srl	r7,r5,r9
1001bdb0:	1a3ff736 	bltu	r3,r8,1001bd90 <__lshift+0xac>
1001bdb4:	21c00015 	stw	r7,0(r4)
1001bdb8:	38000126 	beq	r7,zero,1001bdc0 <__lshift+0xdc>
1001bdbc:	8027883a 	mov	r19,r16
1001bdc0:	14c00415 	stw	r19,16(r2)
1001bdc4:	90000726 	beq	r18,zero,1001bde4 <__lshift+0x100>
1001bdc8:	91000117 	ldw	r4,4(r18)
1001bdcc:	a0c01317 	ldw	r3,76(r20)
1001bdd0:	200890ba 	slli	r4,r4,2
1001bdd4:	1907883a 	add	r3,r3,r4
1001bdd8:	19000017 	ldw	r4,0(r3)
1001bddc:	91000015 	stw	r4,0(r18)
1001bde0:	1c800015 	stw	r18,0(r3)
1001bde4:	dfc00617 	ldw	ra,24(sp)
1001bde8:	dd400517 	ldw	r21,20(sp)
1001bdec:	dd000417 	ldw	r20,16(sp)
1001bdf0:	dcc00317 	ldw	r19,12(sp)
1001bdf4:	dc800217 	ldw	r18,8(sp)
1001bdf8:	dc400117 	ldw	r17,4(sp)
1001bdfc:	dc000017 	ldw	r16,0(sp)
1001be00:	dec00704 	addi	sp,sp,28
1001be04:	f800283a 	ret
1001be08:	18c00104 	addi	r3,r3,4
1001be0c:	197fff17 	ldw	r5,-4(r3)
1001be10:	21000104 	addi	r4,r4,4
1001be14:	217fff15 	stw	r5,-4(r4)
1001be18:	1a3ffb36 	bltu	r3,r8,1001be08 <__lshift+0x124>
1001be1c:	003fe806 	br	1001bdc0 <__lshift+0xdc>

1001be20 <__mcmp>:
1001be20:	20800417 	ldw	r2,16(r4)
1001be24:	28c00417 	ldw	r3,16(r5)
1001be28:	10c5c83a 	sub	r2,r2,r3
1001be2c:	10000e1e 	bne	r2,zero,1001be68 <__mcmp+0x48>
1001be30:	180c90ba 	slli	r6,r3,2
1001be34:	21000504 	addi	r4,r4,20
1001be38:	29400504 	addi	r5,r5,20
1001be3c:	2187883a 	add	r3,r4,r6
1001be40:	298b883a 	add	r5,r5,r6
1001be44:	00000106 	br	1001be4c <__mcmp+0x2c>
1001be48:	20c0082e 	bgeu	r4,r3,1001be6c <__mcmp+0x4c>
1001be4c:	18ffff04 	addi	r3,r3,-4
1001be50:	297fff04 	addi	r5,r5,-4
1001be54:	19c00017 	ldw	r7,0(r3)
1001be58:	29800017 	ldw	r6,0(r5)
1001be5c:	39bffa26 	beq	r7,r6,1001be48 <__mcmp+0x28>
1001be60:	3980032e 	bgeu	r7,r6,1001be70 <__mcmp+0x50>
1001be64:	00bfffc4 	movi	r2,-1
1001be68:	f800283a 	ret
1001be6c:	f800283a 	ret
1001be70:	00800044 	movi	r2,1
1001be74:	f800283a 	ret

1001be78 <__mdiff>:
1001be78:	defffa04 	addi	sp,sp,-24
1001be7c:	dc800215 	stw	r18,8(sp)
1001be80:	30c00417 	ldw	r3,16(r6)
1001be84:	2c800417 	ldw	r18,16(r5)
1001be88:	dd000415 	stw	r20,16(sp)
1001be8c:	dcc00315 	stw	r19,12(sp)
1001be90:	dc400115 	stw	r17,4(sp)
1001be94:	dc000015 	stw	r16,0(sp)
1001be98:	dfc00515 	stw	ra,20(sp)
1001be9c:	90e5c83a 	sub	r18,r18,r3
1001bea0:	2827883a 	mov	r19,r5
1001bea4:	3029883a 	mov	r20,r6
1001bea8:	2c000504 	addi	r16,r5,20
1001beac:	34400504 	addi	r17,r6,20
1001beb0:	9000131e 	bne	r18,zero,1001bf00 <__mdiff+0x88>
1001beb4:	180690ba 	slli	r3,r3,2
1001beb8:	80c5883a 	add	r2,r16,r3
1001bebc:	88c7883a 	add	r3,r17,r3
1001bec0:	00000106 	br	1001bec8 <__mdiff+0x50>
1001bec4:	8080552e 	bgeu	r16,r2,1001c01c <__mdiff+0x1a4>
1001bec8:	10bfff04 	addi	r2,r2,-4
1001becc:	18ffff04 	addi	r3,r3,-4
1001bed0:	11c00017 	ldw	r7,0(r2)
1001bed4:	19400017 	ldw	r5,0(r3)
1001bed8:	397ffa26 	beq	r7,r5,1001bec4 <__mdiff+0x4c>
1001bedc:	39400a2e 	bgeu	r7,r5,1001bf08 <__mdiff+0x90>
1001bee0:	8007883a 	mov	r3,r16
1001bee4:	9805883a 	mov	r2,r19
1001bee8:	8821883a 	mov	r16,r17
1001beec:	a027883a 	mov	r19,r20
1001bef0:	1823883a 	mov	r17,r3
1001bef4:	1029883a 	mov	r20,r2
1001bef8:	04800044 	movi	r18,1
1001befc:	00000206 	br	1001bf08 <__mdiff+0x90>
1001bf00:	903ff716 	blt	r18,zero,1001bee0 <__mdiff+0x68>
1001bf04:	0025883a 	mov	r18,zero
1001bf08:	99400117 	ldw	r5,4(r19)
1001bf0c:	001b59c0 	call	1001b59c <_Balloc>
1001bf10:	9a400417 	ldw	r9,16(r19)
1001bf14:	a2c00417 	ldw	r11,16(r20)
1001bf18:	12800504 	addi	r10,r2,20
1001bf1c:	481090ba 	slli	r8,r9,2
1001bf20:	581690ba 	slli	r11,r11,2
1001bf24:	14800315 	stw	r18,12(r2)
1001bf28:	8211883a 	add	r8,r16,r8
1001bf2c:	8ad7883a 	add	r11,r17,r11
1001bf30:	0007883a 	mov	r3,zero
1001bf34:	00000106 	br	1001bf3c <__mdiff+0xc4>
1001bf38:	3815883a 	mov	r10,r7
1001bf3c:	81000017 	ldw	r4,0(r16)
1001bf40:	89800017 	ldw	r6,0(r17)
1001bf44:	51c00104 	addi	r7,r10,4
1001bf48:	217fffcc 	andi	r5,r4,65535
1001bf4c:	28cb883a 	add	r5,r5,r3
1001bf50:	30ffffcc 	andi	r3,r6,65535
1001bf54:	28cbc83a 	sub	r5,r5,r3
1001bf58:	300cd43a 	srli	r6,r6,16
1001bf5c:	2006d43a 	srli	r3,r4,16
1001bf60:	2809d43a 	srai	r4,r5,16
1001bf64:	297fffcc 	andi	r5,r5,65535
1001bf68:	1987c83a 	sub	r3,r3,r6
1001bf6c:	1907883a 	add	r3,r3,r4
1001bf70:	1808943a 	slli	r4,r3,16
1001bf74:	8c400104 	addi	r17,r17,4
1001bf78:	84000104 	addi	r16,r16,4
1001bf7c:	214ab03a 	or	r5,r4,r5
1001bf80:	397fff15 	stw	r5,-4(r7)
1001bf84:	1807d43a 	srai	r3,r3,16
1001bf88:	8affeb36 	bltu	r17,r11,1001bf38 <__mdiff+0xc0>
1001bf8c:	8200152e 	bgeu	r16,r8,1001bfe4 <__mdiff+0x16c>
1001bf90:	3815883a 	mov	r10,r7
1001bf94:	800d883a 	mov	r6,r16
1001bf98:	31000017 	ldw	r4,0(r6)
1001bf9c:	52800104 	addi	r10,r10,4
1001bfa0:	31800104 	addi	r6,r6,4
1001bfa4:	217fffcc 	andi	r5,r4,65535
1001bfa8:	28cb883a 	add	r5,r5,r3
1001bfac:	2817d43a 	srai	r11,r5,16
1001bfb0:	2006d43a 	srli	r3,r4,16
1001bfb4:	293fffcc 	andi	r4,r5,65535
1001bfb8:	1ac7883a 	add	r3,r3,r11
1001bfbc:	180a943a 	slli	r5,r3,16
1001bfc0:	1807d43a 	srai	r3,r3,16
1001bfc4:	290ab03a 	or	r5,r5,r4
1001bfc8:	517fff15 	stw	r5,-4(r10)
1001bfcc:	323ff236 	bltu	r6,r8,1001bf98 <__mdiff+0x120>
1001bfd0:	42bfffc4 	addi	r10,r8,-1
1001bfd4:	5415c83a 	sub	r10,r10,r16
1001bfd8:	5014d0ba 	srli	r10,r10,2
1001bfdc:	501490ba 	slli	r10,r10,2
1001bfe0:	3a95883a 	add	r10,r7,r10
1001bfe4:	2800041e 	bne	r5,zero,1001bff8 <__mdiff+0x180>
1001bfe8:	52bfff04 	addi	r10,r10,-4
1001bfec:	50c00017 	ldw	r3,0(r10)
1001bff0:	4a7fffc4 	addi	r9,r9,-1
1001bff4:	183ffc26 	beq	r3,zero,1001bfe8 <__mdiff+0x170>
1001bff8:	12400415 	stw	r9,16(r2)
1001bffc:	dfc00517 	ldw	ra,20(sp)
1001c000:	dd000417 	ldw	r20,16(sp)
1001c004:	dcc00317 	ldw	r19,12(sp)
1001c008:	dc800217 	ldw	r18,8(sp)
1001c00c:	dc400117 	ldw	r17,4(sp)
1001c010:	dc000017 	ldw	r16,0(sp)
1001c014:	dec00604 	addi	sp,sp,24
1001c018:	f800283a 	ret
1001c01c:	000b883a 	mov	r5,zero
1001c020:	001b59c0 	call	1001b59c <_Balloc>
1001c024:	00c00044 	movi	r3,1
1001c028:	10c00415 	stw	r3,16(r2)
1001c02c:	10000515 	stw	zero,20(r2)
1001c030:	003ff206 	br	1001bffc <__mdiff+0x184>

1001c034 <__ulp>:
1001c034:	295ffc2c 	andhi	r5,r5,32752
1001c038:	00ff3034 	movhi	r3,64704
1001c03c:	28c7883a 	add	r3,r5,r3
1001c040:	00c0020e 	bge	zero,r3,1001c04c <__ulp+0x18>
1001c044:	0005883a 	mov	r2,zero
1001c048:	f800283a 	ret
1001c04c:	00c7c83a 	sub	r3,zero,r3
1001c050:	1807d53a 	srai	r3,r3,20
1001c054:	18800508 	cmpgei	r2,r3,20
1001c058:	1000041e 	bne	r2,zero,1001c06c <__ulp+0x38>
1001c05c:	01400234 	movhi	r5,8
1001c060:	28c7d83a 	sra	r3,r5,r3
1001c064:	0005883a 	mov	r2,zero
1001c068:	f800283a 	ret
1001c06c:	193ffb04 	addi	r4,r3,-20
1001c070:	208007c8 	cmpgei	r2,r4,31
1001c074:	0007883a 	mov	r3,zero
1001c078:	1000031e 	bne	r2,zero,1001c088 <__ulp+0x54>
1001c07c:	00a00034 	movhi	r2,32768
1001c080:	1104d83a 	srl	r2,r2,r4
1001c084:	f800283a 	ret
1001c088:	00800044 	movi	r2,1
1001c08c:	f800283a 	ret

1001c090 <__b2d>:
1001c090:	defffa04 	addi	sp,sp,-24
1001c094:	dc000015 	stw	r16,0(sp)
1001c098:	24000417 	ldw	r16,16(r4)
1001c09c:	dc800215 	stw	r18,8(sp)
1001c0a0:	24800504 	addi	r18,r4,20
1001c0a4:	802090ba 	slli	r16,r16,2
1001c0a8:	dc400115 	stw	r17,4(sp)
1001c0ac:	dd000415 	stw	r20,16(sp)
1001c0b0:	9421883a 	add	r16,r18,r16
1001c0b4:	847fff17 	ldw	r17,-4(r16)
1001c0b8:	dcc00315 	stw	r19,12(sp)
1001c0bc:	2829883a 	mov	r20,r5
1001c0c0:	8809883a 	mov	r4,r17
1001c0c4:	dfc00515 	stw	ra,20(sp)
1001c0c8:	001b8880 	call	1001b888 <__hi0bits>
1001c0cc:	01000804 	movi	r4,32
1001c0d0:	2087c83a 	sub	r3,r4,r2
1001c0d4:	a0c00015 	stw	r3,0(r20)
1001c0d8:	10c002c8 	cmpgei	r3,r2,11
1001c0dc:	84ffff04 	addi	r19,r16,-4
1001c0e0:	18001f26 	beq	r3,zero,1001c160 <__b2d+0xd0>
1001c0e4:	10fffd44 	addi	r3,r2,-11
1001c0e8:	94c00e2e 	bgeu	r18,r19,1001c124 <__b2d+0x94>
1001c0ec:	80bffe17 	ldw	r2,-8(r16)
1001c0f0:	18001226 	beq	r3,zero,1001c13c <__b2d+0xac>
1001c0f4:	20c9c83a 	sub	r4,r4,r3
1001c0f8:	110cd83a 	srl	r6,r2,r4
1001c0fc:	88e2983a 	sll	r17,r17,r3
1001c100:	10c4983a 	sll	r2,r2,r3
1001c104:	817ffe04 	addi	r5,r16,-8
1001c108:	8986b03a 	or	r3,r17,r6
1001c10c:	18cffc34 	orhi	r3,r3,16368
1001c110:	91400b2e 	bgeu	r18,r5,1001c140 <__b2d+0xb0>
1001c114:	817ffd17 	ldw	r5,-12(r16)
1001c118:	2908d83a 	srl	r4,r5,r4
1001c11c:	1104b03a 	or	r2,r2,r4
1001c120:	00000706 	br	1001c140 <__b2d+0xb0>
1001c124:	18000426 	beq	r3,zero,1001c138 <__b2d+0xa8>
1001c128:	88c6983a 	sll	r3,r17,r3
1001c12c:	0005883a 	mov	r2,zero
1001c130:	18cffc34 	orhi	r3,r3,16368
1001c134:	00000206 	br	1001c140 <__b2d+0xb0>
1001c138:	0005883a 	mov	r2,zero
1001c13c:	88cffc34 	orhi	r3,r17,16368
1001c140:	dfc00517 	ldw	ra,20(sp)
1001c144:	dd000417 	ldw	r20,16(sp)
1001c148:	dcc00317 	ldw	r19,12(sp)
1001c14c:	dc800217 	ldw	r18,8(sp)
1001c150:	dc400117 	ldw	r17,4(sp)
1001c154:	dc000017 	ldw	r16,0(sp)
1001c158:	dec00604 	addi	sp,sp,24
1001c15c:	f800283a 	ret
1001c160:	014002c4 	movi	r5,11
1001c164:	2889c83a 	sub	r4,r5,r2
1001c168:	8906d83a 	srl	r3,r17,r4
1001c16c:	18cffc34 	orhi	r3,r3,16368
1001c170:	94c00536 	bltu	r18,r19,1001c188 <__b2d+0xf8>
1001c174:	000b883a 	mov	r5,zero
1001c178:	10800544 	addi	r2,r2,21
1001c17c:	8884983a 	sll	r2,r17,r2
1001c180:	1144b03a 	or	r2,r2,r5
1001c184:	003fee06 	br	1001c140 <__b2d+0xb0>
1001c188:	817ffe17 	ldw	r5,-8(r16)
1001c18c:	290ad83a 	srl	r5,r5,r4
1001c190:	003ff906 	br	1001c178 <__b2d+0xe8>

1001c194 <__d2b>:
1001c194:	defff804 	addi	sp,sp,-32
1001c198:	dc400315 	stw	r17,12(sp)
1001c19c:	3023883a 	mov	r17,r6
1001c1a0:	dd000615 	stw	r20,24(sp)
1001c1a4:	dc000215 	stw	r16,8(sp)
1001c1a8:	2829883a 	mov	r20,r5
1001c1ac:	8820d53a 	srli	r16,r17,20
1001c1b0:	01400044 	movi	r5,1
1001c1b4:	dcc00515 	stw	r19,20(sp)
1001c1b8:	dc800415 	stw	r18,16(sp)
1001c1bc:	dfc00715 	stw	ra,28(sp)
1001c1c0:	3825883a 	mov	r18,r7
1001c1c4:	001b59c0 	call	1001b59c <_Balloc>
1001c1c8:	01800434 	movhi	r6,16
1001c1cc:	31bfffc4 	addi	r6,r6,-1
1001c1d0:	8401ffcc 	andi	r16,r16,2047
1001c1d4:	1027883a 	mov	r19,r2
1001c1d8:	89a2703a 	and	r17,r17,r6
1001c1dc:	80000126 	beq	r16,zero,1001c1e4 <__d2b+0x50>
1001c1e0:	8c400434 	orhi	r17,r17,16
1001c1e4:	dc400115 	stw	r17,4(sp)
1001c1e8:	a0002826 	beq	r20,zero,1001c28c <__d2b+0xf8>
1001c1ec:	d809883a 	mov	r4,sp
1001c1f0:	dd000015 	stw	r20,0(sp)
1001c1f4:	001b8ec0 	call	1001b8ec <__lo0bits>
1001c1f8:	d8c00117 	ldw	r3,4(sp)
1001c1fc:	1000171e 	bne	r2,zero,1001c25c <__d2b+0xc8>
1001c200:	d9000017 	ldw	r4,0(sp)
1001c204:	98c00615 	stw	r3,24(r19)
1001c208:	99000515 	stw	r4,20(r19)
1001c20c:	18001d1e 	bne	r3,zero,1001c284 <__d2b+0xf0>
1001c210:	04400044 	movi	r17,1
1001c214:	9c400415 	stw	r17,16(r19)
1001c218:	80002526 	beq	r16,zero,1001c2b0 <__d2b+0x11c>
1001c21c:	00c00d44 	movi	r3,53
1001c220:	843ef344 	addi	r16,r16,-1075
1001c224:	80a1883a 	add	r16,r16,r2
1001c228:	1885c83a 	sub	r2,r3,r2
1001c22c:	d8c00817 	ldw	r3,32(sp)
1001c230:	94000015 	stw	r16,0(r18)
1001c234:	18800015 	stw	r2,0(r3)
1001c238:	9805883a 	mov	r2,r19
1001c23c:	dfc00717 	ldw	ra,28(sp)
1001c240:	dd000617 	ldw	r20,24(sp)
1001c244:	dcc00517 	ldw	r19,20(sp)
1001c248:	dc800417 	ldw	r18,16(sp)
1001c24c:	dc400317 	ldw	r17,12(sp)
1001c250:	dc000217 	ldw	r16,8(sp)
1001c254:	dec00804 	addi	sp,sp,32
1001c258:	f800283a 	ret
1001c25c:	01000804 	movi	r4,32
1001c260:	2089c83a 	sub	r4,r4,r2
1001c264:	1908983a 	sll	r4,r3,r4
1001c268:	d9400017 	ldw	r5,0(sp)
1001c26c:	1886d83a 	srl	r3,r3,r2
1001c270:	2148b03a 	or	r4,r4,r5
1001c274:	99000515 	stw	r4,20(r19)
1001c278:	d8c00115 	stw	r3,4(sp)
1001c27c:	98c00615 	stw	r3,24(r19)
1001c280:	183fe326 	beq	r3,zero,1001c210 <__d2b+0x7c>
1001c284:	04400084 	movi	r17,2
1001c288:	003fe206 	br	1001c214 <__d2b+0x80>
1001c28c:	d9000104 	addi	r4,sp,4
1001c290:	001b8ec0 	call	1001b8ec <__lo0bits>
1001c294:	00c00044 	movi	r3,1
1001c298:	98c00415 	stw	r3,16(r19)
1001c29c:	d8c00117 	ldw	r3,4(sp)
1001c2a0:	10800804 	addi	r2,r2,32
1001c2a4:	04400044 	movi	r17,1
1001c2a8:	98c00515 	stw	r3,20(r19)
1001c2ac:	803fdb1e 	bne	r16,zero,1001c21c <__d2b+0x88>
1001c2b0:	880690ba 	slli	r3,r17,2
1001c2b4:	10bef384 	addi	r2,r2,-1074
1001c2b8:	8822917a 	slli	r17,r17,5
1001c2bc:	98c7883a 	add	r3,r19,r3
1001c2c0:	19000417 	ldw	r4,16(r3)
1001c2c4:	90800015 	stw	r2,0(r18)
1001c2c8:	001b8880 	call	1001b888 <__hi0bits>
1001c2cc:	88a3c83a 	sub	r17,r17,r2
1001c2d0:	d8800817 	ldw	r2,32(sp)
1001c2d4:	14400015 	stw	r17,0(r2)
1001c2d8:	003fd706 	br	1001c238 <__d2b+0xa4>

1001c2dc <__ratio>:
1001c2dc:	defff904 	addi	sp,sp,-28
1001c2e0:	dc400315 	stw	r17,12(sp)
1001c2e4:	2823883a 	mov	r17,r5
1001c2e8:	d80b883a 	mov	r5,sp
1001c2ec:	dfc00615 	stw	ra,24(sp)
1001c2f0:	dcc00515 	stw	r19,20(sp)
1001c2f4:	dc800415 	stw	r18,16(sp)
1001c2f8:	2027883a 	mov	r19,r4
1001c2fc:	dc000215 	stw	r16,8(sp)
1001c300:	001c0900 	call	1001c090 <__b2d>
1001c304:	d9400104 	addi	r5,sp,4
1001c308:	8809883a 	mov	r4,r17
1001c30c:	1025883a 	mov	r18,r2
1001c310:	1821883a 	mov	r16,r3
1001c314:	001c0900 	call	1001c090 <__b2d>
1001c318:	89400417 	ldw	r5,16(r17)
1001c31c:	99000417 	ldw	r4,16(r19)
1001c320:	d9800117 	ldw	r6,4(sp)
1001c324:	2149c83a 	sub	r4,r4,r5
1001c328:	d9400017 	ldw	r5,0(sp)
1001c32c:	2008917a 	slli	r4,r4,5
1001c330:	298bc83a 	sub	r5,r5,r6
1001c334:	2149883a 	add	r4,r4,r5
1001c338:	01000e0e 	bge	zero,r4,1001c374 <__ratio+0x98>
1001c33c:	2008953a 	slli	r4,r4,20
1001c340:	2421883a 	add	r16,r4,r16
1001c344:	100d883a 	mov	r6,r2
1001c348:	180f883a 	mov	r7,r3
1001c34c:	9009883a 	mov	r4,r18
1001c350:	800b883a 	mov	r5,r16
1001c354:	001fdb40 	call	1001fdb4 <__divdf3>
1001c358:	dfc00617 	ldw	ra,24(sp)
1001c35c:	dcc00517 	ldw	r19,20(sp)
1001c360:	dc800417 	ldw	r18,16(sp)
1001c364:	dc400317 	ldw	r17,12(sp)
1001c368:	dc000217 	ldw	r16,8(sp)
1001c36c:	dec00704 	addi	sp,sp,28
1001c370:	f800283a 	ret
1001c374:	017ffc34 	movhi	r5,65520
1001c378:	2149383a 	mul	r4,r4,r5
1001c37c:	20c7883a 	add	r3,r4,r3
1001c380:	003ff006 	br	1001c344 <__ratio+0x68>

1001c384 <_mprec_log10>:
1001c384:	defffe04 	addi	sp,sp,-8
1001c388:	dc000015 	stw	r16,0(sp)
1001c38c:	dfc00115 	stw	ra,4(sp)
1001c390:	20800608 	cmpgei	r2,r4,24
1001c394:	2021883a 	mov	r16,r4
1001c398:	10000d26 	beq	r2,zero,1001c3d0 <_mprec_log10+0x4c>
1001c39c:	0005883a 	mov	r2,zero
1001c3a0:	00cffc34 	movhi	r3,16368
1001c3a4:	843fffc4 	addi	r16,r16,-1
1001c3a8:	000d883a 	mov	r6,zero
1001c3ac:	01d00934 	movhi	r7,16420
1001c3b0:	1009883a 	mov	r4,r2
1001c3b4:	180b883a 	mov	r5,r3
1001c3b8:	00208bc0 	call	100208bc <__muldf3>
1001c3bc:	803ff91e 	bne	r16,zero,1001c3a4 <_mprec_log10+0x20>
1001c3c0:	dfc00117 	ldw	ra,4(sp)
1001c3c4:	dc000017 	ldw	r16,0(sp)
1001c3c8:	dec00204 	addi	sp,sp,8
1001c3cc:	f800283a 	ret
1001c3d0:	202090fa 	slli	r16,r4,3
1001c3d4:	008400b4 	movhi	r2,4098
1001c3d8:	10975a04 	addi	r2,r2,23912
1001c3dc:	1421883a 	add	r16,r2,r16
1001c3e0:	80800017 	ldw	r2,0(r16)
1001c3e4:	80c00117 	ldw	r3,4(r16)
1001c3e8:	dfc00117 	ldw	ra,4(sp)
1001c3ec:	dc000017 	ldw	r16,0(sp)
1001c3f0:	dec00204 	addi	sp,sp,8
1001c3f4:	f800283a 	ret

1001c3f8 <__copybits>:
1001c3f8:	29ffffc4 	addi	r7,r5,-1
1001c3fc:	380fd17a 	srai	r7,r7,5
1001c400:	31400417 	ldw	r5,16(r6)
1001c404:	30800504 	addi	r2,r6,20
1001c408:	39c00044 	addi	r7,r7,1
1001c40c:	280a90ba 	slli	r5,r5,2
1001c410:	380e90ba 	slli	r7,r7,2
1001c414:	114b883a 	add	r5,r2,r5
1001c418:	21cf883a 	add	r7,r4,r7
1001c41c:	11400c2e 	bgeu	r2,r5,1001c450 <__copybits+0x58>
1001c420:	2007883a 	mov	r3,r4
1001c424:	10800104 	addi	r2,r2,4
1001c428:	123fff17 	ldw	r8,-4(r2)
1001c42c:	18c00104 	addi	r3,r3,4
1001c430:	1a3fff15 	stw	r8,-4(r3)
1001c434:	117ffb36 	bltu	r2,r5,1001c424 <__copybits+0x2c>
1001c438:	2985c83a 	sub	r2,r5,r6
1001c43c:	10bffac4 	addi	r2,r2,-21
1001c440:	1004d0ba 	srli	r2,r2,2
1001c444:	10800044 	addi	r2,r2,1
1001c448:	100490ba 	slli	r2,r2,2
1001c44c:	2089883a 	add	r4,r4,r2
1001c450:	21c0032e 	bgeu	r4,r7,1001c460 <__copybits+0x68>
1001c454:	21000104 	addi	r4,r4,4
1001c458:	203fff15 	stw	zero,-4(r4)
1001c45c:	21fffd36 	bltu	r4,r7,1001c454 <__copybits+0x5c>
1001c460:	f800283a 	ret

1001c464 <__any_on>:
1001c464:	20800417 	ldw	r2,16(r4)
1001c468:	280dd17a 	srai	r6,r5,5
1001c46c:	21000504 	addi	r4,r4,20
1001c470:	11800c0e 	bge	r2,r6,1001c4a4 <__any_on+0x40>
1001c474:	100690ba 	slli	r3,r2,2
1001c478:	20c7883a 	add	r3,r4,r3
1001c47c:	20c0142e 	bgeu	r4,r3,1001c4d0 <__any_on+0x6c>
1001c480:	18bfff17 	ldw	r2,-4(r3)
1001c484:	18ffff04 	addi	r3,r3,-4
1001c488:	1000041e 	bne	r2,zero,1001c49c <__any_on+0x38>
1001c48c:	20c00f2e 	bgeu	r4,r3,1001c4cc <__any_on+0x68>
1001c490:	18ffff04 	addi	r3,r3,-4
1001c494:	19400017 	ldw	r5,0(r3)
1001c498:	283ffc26 	beq	r5,zero,1001c48c <__any_on+0x28>
1001c49c:	00800044 	movi	r2,1
1001c4a0:	f800283a 	ret
1001c4a4:	300690ba 	slli	r3,r6,2
1001c4a8:	20c7883a 	add	r3,r4,r3
1001c4ac:	30bff30e 	bge	r6,r2,1001c47c <__any_on+0x18>
1001c4b0:	294007cc 	andi	r5,r5,31
1001c4b4:	283ff126 	beq	r5,zero,1001c47c <__any_on+0x18>
1001c4b8:	19800017 	ldw	r6,0(r3)
1001c4bc:	3144d83a 	srl	r2,r6,r5
1001c4c0:	114a983a 	sll	r5,r2,r5
1001c4c4:	317ff51e 	bne	r6,r5,1001c49c <__any_on+0x38>
1001c4c8:	003fec06 	br	1001c47c <__any_on+0x18>
1001c4cc:	f800283a 	ret
1001c4d0:	0005883a 	mov	r2,zero
1001c4d4:	f800283a 	ret

1001c4d8 <_putc_r>:
1001c4d8:	defffc04 	addi	sp,sp,-16
1001c4dc:	dc000215 	stw	r16,8(sp)
1001c4e0:	dfc00315 	stw	ra,12(sp)
1001c4e4:	2021883a 	mov	r16,r4
1001c4e8:	20000226 	beq	r4,zero,1001c4f4 <_putc_r+0x1c>
1001c4ec:	20800e17 	ldw	r2,56(r4)
1001c4f0:	10000e26 	beq	r2,zero,1001c52c <_putc_r+0x54>
1001c4f4:	30800217 	ldw	r2,8(r6)
1001c4f8:	10bfffc4 	addi	r2,r2,-1
1001c4fc:	30800215 	stw	r2,8(r6)
1001c500:	10001316 	blt	r2,zero,1001c550 <_putc_r+0x78>
1001c504:	30800017 	ldw	r2,0(r6)
1001c508:	11400005 	stb	r5,0(r2)
1001c50c:	30800017 	ldw	r2,0(r6)
1001c510:	10c00044 	addi	r3,r2,1
1001c514:	30c00015 	stw	r3,0(r6)
1001c518:	10800003 	ldbu	r2,0(r2)
1001c51c:	dfc00317 	ldw	ra,12(sp)
1001c520:	dc000217 	ldw	r16,8(sp)
1001c524:	dec00404 	addi	sp,sp,16
1001c528:	f800283a 	ret
1001c52c:	d9800115 	stw	r6,4(sp)
1001c530:	d9400015 	stw	r5,0(sp)
1001c534:	001a9a00 	call	1001a9a0 <__sinit>
1001c538:	d9800117 	ldw	r6,4(sp)
1001c53c:	d9400017 	ldw	r5,0(sp)
1001c540:	30800217 	ldw	r2,8(r6)
1001c544:	10bfffc4 	addi	r2,r2,-1
1001c548:	30800215 	stw	r2,8(r6)
1001c54c:	103fed0e 	bge	r2,zero,1001c504 <_putc_r+0x2c>
1001c550:	30c00617 	ldw	r3,24(r6)
1001c554:	10c00e16 	blt	r2,r3,1001c590 <_putc_r+0xb8>
1001c558:	30800017 	ldw	r2,0(r6)
1001c55c:	11400005 	stb	r5,0(r2)
1001c560:	30c00017 	ldw	r3,0(r6)
1001c564:	18800003 	ldbu	r2,0(r3)
1001c568:	108002a0 	cmpeqi	r2,r2,10
1001c56c:	1000071e 	bne	r2,zero,1001c58c <_putc_r+0xb4>
1001c570:	18800044 	addi	r2,r3,1
1001c574:	30800015 	stw	r2,0(r6)
1001c578:	18800003 	ldbu	r2,0(r3)
1001c57c:	dfc00317 	ldw	ra,12(sp)
1001c580:	dc000217 	ldw	r16,8(sp)
1001c584:	dec00404 	addi	sp,sp,16
1001c588:	f800283a 	ret
1001c58c:	01400284 	movi	r5,10
1001c590:	8009883a 	mov	r4,r16
1001c594:	dfc00317 	ldw	ra,12(sp)
1001c598:	dc000217 	ldw	r16,8(sp)
1001c59c:	dec00404 	addi	sp,sp,16
1001c5a0:	001e2241 	jmpi	1001e224 <__swbuf_r>

1001c5a4 <putc>:
1001c5a4:	defffc04 	addi	sp,sp,-16
1001c5a8:	008400f4 	movhi	r2,4099
1001c5ac:	dc000115 	stw	r16,4(sp)
1001c5b0:	14211717 	ldw	r16,-31652(r2)
1001c5b4:	dc400215 	stw	r17,8(sp)
1001c5b8:	dfc00315 	stw	ra,12(sp)
1001c5bc:	2023883a 	mov	r17,r4
1001c5c0:	80000226 	beq	r16,zero,1001c5cc <putc+0x28>
1001c5c4:	80800e17 	ldw	r2,56(r16)
1001c5c8:	10000f26 	beq	r2,zero,1001c608 <putc+0x64>
1001c5cc:	28800217 	ldw	r2,8(r5)
1001c5d0:	10bfffc4 	addi	r2,r2,-1
1001c5d4:	28800215 	stw	r2,8(r5)
1001c5d8:	10001316 	blt	r2,zero,1001c628 <putc+0x84>
1001c5dc:	28800017 	ldw	r2,0(r5)
1001c5e0:	14400005 	stb	r17,0(r2)
1001c5e4:	28800017 	ldw	r2,0(r5)
1001c5e8:	10c00044 	addi	r3,r2,1
1001c5ec:	28c00015 	stw	r3,0(r5)
1001c5f0:	10800003 	ldbu	r2,0(r2)
1001c5f4:	dfc00317 	ldw	ra,12(sp)
1001c5f8:	dc400217 	ldw	r17,8(sp)
1001c5fc:	dc000117 	ldw	r16,4(sp)
1001c600:	dec00404 	addi	sp,sp,16
1001c604:	f800283a 	ret
1001c608:	8009883a 	mov	r4,r16
1001c60c:	d9400015 	stw	r5,0(sp)
1001c610:	001a9a00 	call	1001a9a0 <__sinit>
1001c614:	d9400017 	ldw	r5,0(sp)
1001c618:	28800217 	ldw	r2,8(r5)
1001c61c:	10bfffc4 	addi	r2,r2,-1
1001c620:	28800215 	stw	r2,8(r5)
1001c624:	103fed0e 	bge	r2,zero,1001c5dc <putc+0x38>
1001c628:	28c00617 	ldw	r3,24(r5)
1001c62c:	10c00a16 	blt	r2,r3,1001c658 <putc+0xb4>
1001c630:	28800017 	ldw	r2,0(r5)
1001c634:	14400005 	stb	r17,0(r2)
1001c638:	28c00017 	ldw	r3,0(r5)
1001c63c:	18800003 	ldbu	r2,0(r3)
1001c640:	108002a0 	cmpeqi	r2,r2,10
1001c644:	10000c1e 	bne	r2,zero,1001c678 <putc+0xd4>
1001c648:	18800044 	addi	r2,r3,1
1001c64c:	28800015 	stw	r2,0(r5)
1001c650:	18800003 	ldbu	r2,0(r3)
1001c654:	003fe706 	br	1001c5f4 <putc+0x50>
1001c658:	280d883a 	mov	r6,r5
1001c65c:	880b883a 	mov	r5,r17
1001c660:	8009883a 	mov	r4,r16
1001c664:	dfc00317 	ldw	ra,12(sp)
1001c668:	dc400217 	ldw	r17,8(sp)
1001c66c:	dc000117 	ldw	r16,4(sp)
1001c670:	dec00404 	addi	sp,sp,16
1001c674:	001e2241 	jmpi	1001e224 <__swbuf_r>
1001c678:	280d883a 	mov	r6,r5
1001c67c:	01400284 	movi	r5,10
1001c680:	003ff706 	br	1001c660 <putc+0xbc>

1001c684 <_read_r>:
1001c684:	defffe04 	addi	sp,sp,-8
1001c688:	2805883a 	mov	r2,r5
1001c68c:	dc000015 	stw	r16,0(sp)
1001c690:	300b883a 	mov	r5,r6
1001c694:	2021883a 	mov	r16,r4
1001c698:	380d883a 	mov	r6,r7
1001c69c:	1009883a 	mov	r4,r2
1001c6a0:	008400f4 	movhi	r2,4099
1001c6a4:	dfc00115 	stw	ra,4(sp)
1001c6a8:	102a6815 	stw	zero,-22112(r2)
1001c6ac:	00225440 	call	10022544 <read>
1001c6b0:	10ffffd8 	cmpnei	r3,r2,-1
1001c6b4:	18000426 	beq	r3,zero,1001c6c8 <_read_r+0x44>
1001c6b8:	dfc00117 	ldw	ra,4(sp)
1001c6bc:	dc000017 	ldw	r16,0(sp)
1001c6c0:	dec00204 	addi	sp,sp,8
1001c6c4:	f800283a 	ret
1001c6c8:	00c400f4 	movhi	r3,4099
1001c6cc:	18ea6817 	ldw	r3,-22112(r3)
1001c6d0:	183ff926 	beq	r3,zero,1001c6b8 <_read_r+0x34>
1001c6d4:	80c00015 	stw	r3,0(r16)
1001c6d8:	dfc00117 	ldw	ra,4(sp)
1001c6dc:	dc000017 	ldw	r16,0(sp)
1001c6e0:	dec00204 	addi	sp,sp,8
1001c6e4:	f800283a 	ret

1001c6e8 <_realloc_r>:
1001c6e8:	defff504 	addi	sp,sp,-44
1001c6ec:	dcc00415 	stw	r19,16(sp)
1001c6f0:	dfc00a15 	stw	ra,40(sp)
1001c6f4:	df000915 	stw	fp,36(sp)
1001c6f8:	ddc00815 	stw	r23,32(sp)
1001c6fc:	dd800715 	stw	r22,28(sp)
1001c700:	dd400615 	stw	r21,24(sp)
1001c704:	dd000515 	stw	r20,20(sp)
1001c708:	dc800315 	stw	r18,12(sp)
1001c70c:	dc400215 	stw	r17,8(sp)
1001c710:	dc000115 	stw	r16,4(sp)
1001c714:	3027883a 	mov	r19,r6
1001c718:	28008b26 	beq	r5,zero,1001c948 <_realloc_r+0x260>
1001c71c:	282d883a 	mov	r22,r5
1001c720:	202b883a 	mov	r21,r4
1001c724:	9c0002c4 	addi	r16,r19,11
1001c728:	00222780 	call	10022278 <__malloc_lock>
1001c72c:	808005f0 	cmpltui	r2,r16,23
1001c730:	1000521e 	bne	r2,zero,1001c87c <_realloc_r+0x194>
1001c734:	017ffe04 	movi	r5,-8
1001c738:	8160703a 	and	r16,r16,r5
1001c73c:	8007883a 	mov	r3,r16
1001c740:	80005116 	blt	r16,zero,1001c888 <_realloc_r+0x1a0>
1001c744:	84c05036 	bltu	r16,r19,1001c888 <_realloc_r+0x1a0>
1001c748:	b0bfff17 	ldw	r2,-4(r22)
1001c74c:	017fff04 	movi	r5,-4
1001c750:	b4bffe04 	addi	r18,r22,-8
1001c754:	1162703a 	and	r17,r2,r5
1001c758:	9469883a 	add	r20,r18,r17
1001c75c:	88c0390e 	bge	r17,r3,1001c844 <_realloc_r+0x15c>
1001c760:	070400b4 	movhi	fp,4098
1001c764:	e71b2704 	addi	fp,fp,27804
1001c768:	e2000217 	ldw	r8,8(fp)
1001c76c:	a1000117 	ldw	r4,4(r20)
1001c770:	45008e26 	beq	r8,r20,1001c9ac <_realloc_r+0x2c4>
1001c774:	01bfff84 	movi	r6,-2
1001c778:	218c703a 	and	r6,r4,r6
1001c77c:	a18d883a 	add	r6,r20,r6
1001c780:	31800117 	ldw	r6,4(r6)
1001c784:	3180004c 	andi	r6,r6,1
1001c788:	30004f1e 	bne	r6,zero,1001c8c8 <_realloc_r+0x1e0>
1001c78c:	2148703a 	and	r4,r4,r5
1001c790:	890b883a 	add	r5,r17,r4
1001c794:	28c0cb0e 	bge	r5,r3,1001cac4 <_realloc_r+0x3dc>
1001c798:	1080004c 	andi	r2,r2,1
1001c79c:	10004c1e 	bne	r2,zero,1001c8d0 <_realloc_r+0x1e8>
1001c7a0:	b1fffe17 	ldw	r7,-8(r22)
1001c7a4:	00bfff04 	movi	r2,-4
1001c7a8:	91cfc83a 	sub	r7,r18,r7
1001c7ac:	39400117 	ldw	r5,4(r7)
1001c7b0:	288a703a 	and	r5,r5,r2
1001c7b4:	a0000426 	beq	r20,zero,1001c7c8 <_realloc_r+0xe0>
1001c7b8:	896f883a 	add	r23,r17,r5
1001c7bc:	b92f883a 	add	r23,r23,r4
1001c7c0:	4500cb26 	beq	r8,r20,1001caf0 <_realloc_r+0x408>
1001c7c4:	b8c0930e 	bge	r23,r3,1001ca14 <_realloc_r+0x32c>
1001c7c8:	38004126 	beq	r7,zero,1001c8d0 <_realloc_r+0x1e8>
1001c7cc:	896f883a 	add	r23,r17,r5
1001c7d0:	b8c03f16 	blt	r23,r3,1001c8d0 <_realloc_r+0x1e8>
1001c7d4:	38c00217 	ldw	r3,8(r7)
1001c7d8:	38800317 	ldw	r2,12(r7)
1001c7dc:	89bfff04 	addi	r6,r17,-4
1001c7e0:	31000968 	cmpgeui	r4,r6,37
1001c7e4:	18800315 	stw	r2,12(r3)
1001c7e8:	10c00215 	stw	r3,8(r2)
1001c7ec:	3de9883a 	add	r20,r7,r23
1001c7f0:	38c00204 	addi	r3,r7,8
1001c7f4:	2000f81e 	bne	r4,zero,1001cbd8 <_realloc_r+0x4f0>
1001c7f8:	30800530 	cmpltui	r2,r6,20
1001c7fc:	b1000017 	ldw	r4,0(r22)
1001c800:	1000eb1e 	bne	r2,zero,1001cbb0 <_realloc_r+0x4c8>
1001c804:	39000215 	stw	r4,8(r7)
1001c808:	b1000117 	ldw	r4,4(r22)
1001c80c:	30800728 	cmpgeui	r2,r6,28
1001c810:	39000315 	stw	r4,12(r7)
1001c814:	1001041e 	bne	r2,zero,1001cc28 <_realloc_r+0x540>
1001c818:	b1000217 	ldw	r4,8(r22)
1001c81c:	38800404 	addi	r2,r7,16
1001c820:	b5800204 	addi	r22,r22,8
1001c824:	11000015 	stw	r4,0(r2)
1001c828:	b1000117 	ldw	r4,4(r22)
1001c82c:	b823883a 	mov	r17,r23
1001c830:	3825883a 	mov	r18,r7
1001c834:	11000115 	stw	r4,4(r2)
1001c838:	b1000217 	ldw	r4,8(r22)
1001c83c:	182d883a 	mov	r22,r3
1001c840:	11000215 	stw	r4,8(r2)
1001c844:	91800117 	ldw	r6,4(r18)
1001c848:	8c05c83a 	sub	r2,r17,r16
1001c84c:	10c00430 	cmpltui	r3,r2,16
1001c850:	3180004c 	andi	r6,r6,1
1001c854:	18004926 	beq	r3,zero,1001c97c <_realloc_r+0x294>
1001c858:	898cb03a 	or	r6,r17,r6
1001c85c:	91800115 	stw	r6,4(r18)
1001c860:	a0800117 	ldw	r2,4(r20)
1001c864:	10800054 	ori	r2,r2,1
1001c868:	a0800115 	stw	r2,4(r20)
1001c86c:	a809883a 	mov	r4,r21
1001c870:	002229c0 	call	1002229c <__malloc_unlock>
1001c874:	b027883a 	mov	r19,r22
1001c878:	00000606 	br	1001c894 <_realloc_r+0x1ac>
1001c87c:	04000404 	movi	r16,16
1001c880:	00c00404 	movi	r3,16
1001c884:	84ffb02e 	bgeu	r16,r19,1001c748 <_realloc_r+0x60>
1001c888:	00800304 	movi	r2,12
1001c88c:	a8800015 	stw	r2,0(r21)
1001c890:	0027883a 	mov	r19,zero
1001c894:	9805883a 	mov	r2,r19
1001c898:	dfc00a17 	ldw	ra,40(sp)
1001c89c:	df000917 	ldw	fp,36(sp)
1001c8a0:	ddc00817 	ldw	r23,32(sp)
1001c8a4:	dd800717 	ldw	r22,28(sp)
1001c8a8:	dd400617 	ldw	r21,24(sp)
1001c8ac:	dd000517 	ldw	r20,20(sp)
1001c8b0:	dcc00417 	ldw	r19,16(sp)
1001c8b4:	dc800317 	ldw	r18,12(sp)
1001c8b8:	dc400217 	ldw	r17,8(sp)
1001c8bc:	dc000117 	ldw	r16,4(sp)
1001c8c0:	dec00b04 	addi	sp,sp,44
1001c8c4:	f800283a 	ret
1001c8c8:	1080004c 	andi	r2,r2,1
1001c8cc:	10007826 	beq	r2,zero,1001cab0 <_realloc_r+0x3c8>
1001c8d0:	980b883a 	mov	r5,r19
1001c8d4:	a809883a 	mov	r4,r21
1001c8d8:	0014d880 	call	10014d88 <_malloc_r>
1001c8dc:	1027883a 	mov	r19,r2
1001c8e0:	10001626 	beq	r2,zero,1001c93c <_realloc_r+0x254>
1001c8e4:	b0bfff17 	ldw	r2,-4(r22)
1001c8e8:	013fff84 	movi	r4,-2
1001c8ec:	98fffe04 	addi	r3,r19,-8
1001c8f0:	1104703a 	and	r2,r2,r4
1001c8f4:	9085883a 	add	r2,r18,r2
1001c8f8:	10c06726 	beq	r2,r3,1001ca98 <_realloc_r+0x3b0>
1001c8fc:	89bfff04 	addi	r6,r17,-4
1001c900:	30800968 	cmpgeui	r2,r6,37
1001c904:	1000761e 	bne	r2,zero,1001cae0 <_realloc_r+0x3f8>
1001c908:	30800530 	cmpltui	r2,r6,20
1001c90c:	b1000017 	ldw	r4,0(r22)
1001c910:	10003726 	beq	r2,zero,1001c9f0 <_realloc_r+0x308>
1001c914:	9805883a 	mov	r2,r19
1001c918:	b007883a 	mov	r3,r22
1001c91c:	11000015 	stw	r4,0(r2)
1001c920:	19000117 	ldw	r4,4(r3)
1001c924:	11000115 	stw	r4,4(r2)
1001c928:	18c00217 	ldw	r3,8(r3)
1001c92c:	10c00215 	stw	r3,8(r2)
1001c930:	b00b883a 	mov	r5,r22
1001c934:	a809883a 	mov	r4,r21
1001c938:	001aba80 	call	1001aba8 <_free_r>
1001c93c:	a809883a 	mov	r4,r21
1001c940:	002229c0 	call	1002229c <__malloc_unlock>
1001c944:	003fd306 	br	1001c894 <_realloc_r+0x1ac>
1001c948:	300b883a 	mov	r5,r6
1001c94c:	dfc00a17 	ldw	ra,40(sp)
1001c950:	df000917 	ldw	fp,36(sp)
1001c954:	ddc00817 	ldw	r23,32(sp)
1001c958:	dd800717 	ldw	r22,28(sp)
1001c95c:	dd400617 	ldw	r21,24(sp)
1001c960:	dd000517 	ldw	r20,20(sp)
1001c964:	dcc00417 	ldw	r19,16(sp)
1001c968:	dc800317 	ldw	r18,12(sp)
1001c96c:	dc400217 	ldw	r17,8(sp)
1001c970:	dc000117 	ldw	r16,4(sp)
1001c974:	dec00b04 	addi	sp,sp,44
1001c978:	0014d881 	jmpi	10014d88 <_malloc_r>
1001c97c:	340cb03a 	or	r6,r6,r16
1001c980:	91800115 	stw	r6,4(r18)
1001c984:	940b883a 	add	r5,r18,r16
1001c988:	10800054 	ori	r2,r2,1
1001c98c:	28800115 	stw	r2,4(r5)
1001c990:	a0800117 	ldw	r2,4(r20)
1001c994:	29400204 	addi	r5,r5,8
1001c998:	a809883a 	mov	r4,r21
1001c99c:	10800054 	ori	r2,r2,1
1001c9a0:	a0800115 	stw	r2,4(r20)
1001c9a4:	001aba80 	call	1001aba8 <_free_r>
1001c9a8:	003fb006 	br	1001c86c <_realloc_r+0x184>
1001c9ac:	2148703a 	and	r4,r4,r5
1001c9b0:	890b883a 	add	r5,r17,r4
1001c9b4:	81800404 	addi	r6,r16,16
1001c9b8:	29bf7716 	blt	r5,r6,1001c798 <_realloc_r+0xb0>
1001c9bc:	9425883a 	add	r18,r18,r16
1001c9c0:	2c05c83a 	sub	r2,r5,r16
1001c9c4:	e4800215 	stw	r18,8(fp)
1001c9c8:	10800054 	ori	r2,r2,1
1001c9cc:	90800115 	stw	r2,4(r18)
1001c9d0:	b0bfff17 	ldw	r2,-4(r22)
1001c9d4:	a809883a 	mov	r4,r21
1001c9d8:	b027883a 	mov	r19,r22
1001c9dc:	1080004c 	andi	r2,r2,1
1001c9e0:	1420b03a 	or	r16,r2,r16
1001c9e4:	b43fff15 	stw	r16,-4(r22)
1001c9e8:	002229c0 	call	1002229c <__malloc_unlock>
1001c9ec:	003fa906 	br	1001c894 <_realloc_r+0x1ac>
1001c9f0:	99000015 	stw	r4,0(r19)
1001c9f4:	b0c00117 	ldw	r3,4(r22)
1001c9f8:	30800728 	cmpgeui	r2,r6,28
1001c9fc:	98c00115 	stw	r3,4(r19)
1001ca00:	1000611e 	bne	r2,zero,1001cb88 <_realloc_r+0x4a0>
1001ca04:	b0c00204 	addi	r3,r22,8
1001ca08:	98800204 	addi	r2,r19,8
1001ca0c:	b1000217 	ldw	r4,8(r22)
1001ca10:	003fc206 	br	1001c91c <_realloc_r+0x234>
1001ca14:	a0800317 	ldw	r2,12(r20)
1001ca18:	a0c00217 	ldw	r3,8(r20)
1001ca1c:	89bfff04 	addi	r6,r17,-4
1001ca20:	31000968 	cmpgeui	r4,r6,37
1001ca24:	18800315 	stw	r2,12(r3)
1001ca28:	10c00215 	stw	r3,8(r2)
1001ca2c:	38c00217 	ldw	r3,8(r7)
1001ca30:	38800317 	ldw	r2,12(r7)
1001ca34:	3a000204 	addi	r8,r7,8
1001ca38:	3de9883a 	add	r20,r7,r23
1001ca3c:	18800315 	stw	r2,12(r3)
1001ca40:	10c00215 	stw	r3,8(r2)
1001ca44:	20006f1e 	bne	r4,zero,1001cc04 <_realloc_r+0x51c>
1001ca48:	30800530 	cmpltui	r2,r6,20
1001ca4c:	b0c00017 	ldw	r3,0(r22)
1001ca50:	10006a1e 	bne	r2,zero,1001cbfc <_realloc_r+0x514>
1001ca54:	38c00215 	stw	r3,8(r7)
1001ca58:	b0c00117 	ldw	r3,4(r22)
1001ca5c:	30800728 	cmpgeui	r2,r6,28
1001ca60:	38c00315 	stw	r3,12(r7)
1001ca64:	10007a1e 	bne	r2,zero,1001cc50 <_realloc_r+0x568>
1001ca68:	b0c00217 	ldw	r3,8(r22)
1001ca6c:	38800404 	addi	r2,r7,16
1001ca70:	b5800204 	addi	r22,r22,8
1001ca74:	10c00015 	stw	r3,0(r2)
1001ca78:	b0c00117 	ldw	r3,4(r22)
1001ca7c:	b823883a 	mov	r17,r23
1001ca80:	3825883a 	mov	r18,r7
1001ca84:	10c00115 	stw	r3,4(r2)
1001ca88:	b0c00217 	ldw	r3,8(r22)
1001ca8c:	402d883a 	mov	r22,r8
1001ca90:	10c00215 	stw	r3,8(r2)
1001ca94:	003f6b06 	br	1001c844 <_realloc_r+0x15c>
1001ca98:	98bfff17 	ldw	r2,-4(r19)
1001ca9c:	00ffff04 	movi	r3,-4
1001caa0:	10c4703a 	and	r2,r2,r3
1001caa4:	88a3883a 	add	r17,r17,r2
1001caa8:	9469883a 	add	r20,r18,r17
1001caac:	003f6506 	br	1001c844 <_realloc_r+0x15c>
1001cab0:	b1fffe17 	ldw	r7,-8(r22)
1001cab4:	91cfc83a 	sub	r7,r18,r7
1001cab8:	39000117 	ldw	r4,4(r7)
1001cabc:	214a703a 	and	r5,r4,r5
1001cac0:	003f4106 	br	1001c7c8 <_realloc_r+0xe0>
1001cac4:	a0800317 	ldw	r2,12(r20)
1001cac8:	a0c00217 	ldw	r3,8(r20)
1001cacc:	2823883a 	mov	r17,r5
1001cad0:	9169883a 	add	r20,r18,r5
1001cad4:	18800315 	stw	r2,12(r3)
1001cad8:	10c00215 	stw	r3,8(r2)
1001cadc:	003f5906 	br	1001c844 <_realloc_r+0x15c>
1001cae0:	b00b883a 	mov	r5,r22
1001cae4:	9809883a 	mov	r4,r19
1001cae8:	00157f00 	call	100157f0 <memmove>
1001caec:	003f9006 	br	1001c930 <_realloc_r+0x248>
1001caf0:	80800404 	addi	r2,r16,16
1001caf4:	b8bf3416 	blt	r23,r2,1001c7c8 <_realloc_r+0xe0>
1001caf8:	38800317 	ldw	r2,12(r7)
1001cafc:	38c00217 	ldw	r3,8(r7)
1001cb00:	89bfff04 	addi	r6,r17,-4
1001cb04:	31000968 	cmpgeui	r4,r6,37
1001cb08:	18800315 	stw	r2,12(r3)
1001cb0c:	10c00215 	stw	r3,8(r2)
1001cb10:	3cc00204 	addi	r19,r7,8
1001cb14:	20005a1e 	bne	r4,zero,1001cc80 <_realloc_r+0x598>
1001cb18:	30800530 	cmpltui	r2,r6,20
1001cb1c:	b0c00017 	ldw	r3,0(r22)
1001cb20:	1000551e 	bne	r2,zero,1001cc78 <_realloc_r+0x590>
1001cb24:	38c00215 	stw	r3,8(r7)
1001cb28:	b0c00117 	ldw	r3,4(r22)
1001cb2c:	30800728 	cmpgeui	r2,r6,28
1001cb30:	38c00315 	stw	r3,12(r7)
1001cb34:	1000661e 	bne	r2,zero,1001ccd0 <_realloc_r+0x5e8>
1001cb38:	b0c00217 	ldw	r3,8(r22)
1001cb3c:	38800404 	addi	r2,r7,16
1001cb40:	b5800204 	addi	r22,r22,8
1001cb44:	10c00015 	stw	r3,0(r2)
1001cb48:	b0c00117 	ldw	r3,4(r22)
1001cb4c:	10c00115 	stw	r3,4(r2)
1001cb50:	b0c00217 	ldw	r3,8(r22)
1001cb54:	10c00215 	stw	r3,8(r2)
1001cb58:	3c07883a 	add	r3,r7,r16
1001cb5c:	bc05c83a 	sub	r2,r23,r16
1001cb60:	e0c00215 	stw	r3,8(fp)
1001cb64:	10800054 	ori	r2,r2,1
1001cb68:	18800115 	stw	r2,4(r3)
1001cb6c:	38800117 	ldw	r2,4(r7)
1001cb70:	a809883a 	mov	r4,r21
1001cb74:	1080004c 	andi	r2,r2,1
1001cb78:	1420b03a 	or	r16,r2,r16
1001cb7c:	3c000115 	stw	r16,4(r7)
1001cb80:	002229c0 	call	1002229c <__malloc_unlock>
1001cb84:	003f4306 	br	1001c894 <_realloc_r+0x1ac>
1001cb88:	b0800217 	ldw	r2,8(r22)
1001cb8c:	31800920 	cmpeqi	r6,r6,36
1001cb90:	98800215 	stw	r2,8(r19)
1001cb94:	b0800317 	ldw	r2,12(r22)
1001cb98:	98800315 	stw	r2,12(r19)
1001cb9c:	3000061e 	bne	r6,zero,1001cbb8 <_realloc_r+0x4d0>
1001cba0:	b0c00404 	addi	r3,r22,16
1001cba4:	98800404 	addi	r2,r19,16
1001cba8:	b1000417 	ldw	r4,16(r22)
1001cbac:	003f5b06 	br	1001c91c <_realloc_r+0x234>
1001cbb0:	1805883a 	mov	r2,r3
1001cbb4:	003f1b06 	br	1001c824 <_realloc_r+0x13c>
1001cbb8:	b1000417 	ldw	r4,16(r22)
1001cbbc:	b0c00604 	addi	r3,r22,24
1001cbc0:	98800604 	addi	r2,r19,24
1001cbc4:	99000415 	stw	r4,16(r19)
1001cbc8:	b1000517 	ldw	r4,20(r22)
1001cbcc:	99000515 	stw	r4,20(r19)
1001cbd0:	b1000617 	ldw	r4,24(r22)
1001cbd4:	003f5106 	br	1001c91c <_realloc_r+0x234>
1001cbd8:	b00b883a 	mov	r5,r22
1001cbdc:	1809883a 	mov	r4,r3
1001cbe0:	d9c00015 	stw	r7,0(sp)
1001cbe4:	00157f00 	call	100157f0 <memmove>
1001cbe8:	d9c00017 	ldw	r7,0(sp)
1001cbec:	102d883a 	mov	r22,r2
1001cbf0:	b823883a 	mov	r17,r23
1001cbf4:	3825883a 	mov	r18,r7
1001cbf8:	003f1206 	br	1001c844 <_realloc_r+0x15c>
1001cbfc:	4005883a 	mov	r2,r8
1001cc00:	003f9c06 	br	1001ca74 <_realloc_r+0x38c>
1001cc04:	b00b883a 	mov	r5,r22
1001cc08:	4009883a 	mov	r4,r8
1001cc0c:	d9c00015 	stw	r7,0(sp)
1001cc10:	00157f00 	call	100157f0 <memmove>
1001cc14:	d9c00017 	ldw	r7,0(sp)
1001cc18:	102d883a 	mov	r22,r2
1001cc1c:	b823883a 	mov	r17,r23
1001cc20:	3825883a 	mov	r18,r7
1001cc24:	003f0706 	br	1001c844 <_realloc_r+0x15c>
1001cc28:	b0800217 	ldw	r2,8(r22)
1001cc2c:	31800920 	cmpeqi	r6,r6,36
1001cc30:	38800415 	stw	r2,16(r7)
1001cc34:	b0800317 	ldw	r2,12(r22)
1001cc38:	38800515 	stw	r2,20(r7)
1001cc3c:	b1000417 	ldw	r4,16(r22)
1001cc40:	3000151e 	bne	r6,zero,1001cc98 <_realloc_r+0x5b0>
1001cc44:	38800604 	addi	r2,r7,24
1001cc48:	b5800404 	addi	r22,r22,16
1001cc4c:	003ef506 	br	1001c824 <_realloc_r+0x13c>
1001cc50:	b0800217 	ldw	r2,8(r22)
1001cc54:	31800920 	cmpeqi	r6,r6,36
1001cc58:	38800415 	stw	r2,16(r7)
1001cc5c:	b0800317 	ldw	r2,12(r22)
1001cc60:	38800515 	stw	r2,20(r7)
1001cc64:	b0c00417 	ldw	r3,16(r22)
1001cc68:	3000121e 	bne	r6,zero,1001ccb4 <_realloc_r+0x5cc>
1001cc6c:	38800604 	addi	r2,r7,24
1001cc70:	b5800404 	addi	r22,r22,16
1001cc74:	003f7f06 	br	1001ca74 <_realloc_r+0x38c>
1001cc78:	9805883a 	mov	r2,r19
1001cc7c:	003fb106 	br	1001cb44 <_realloc_r+0x45c>
1001cc80:	b00b883a 	mov	r5,r22
1001cc84:	9809883a 	mov	r4,r19
1001cc88:	d9c00015 	stw	r7,0(sp)
1001cc8c:	00157f00 	call	100157f0 <memmove>
1001cc90:	d9c00017 	ldw	r7,0(sp)
1001cc94:	003fb006 	br	1001cb58 <_realloc_r+0x470>
1001cc98:	b5800604 	addi	r22,r22,24
1001cc9c:	39000615 	stw	r4,24(r7)
1001cca0:	b13fff17 	ldw	r4,-4(r22)
1001cca4:	38800804 	addi	r2,r7,32
1001cca8:	39000715 	stw	r4,28(r7)
1001ccac:	b1000017 	ldw	r4,0(r22)
1001ccb0:	003edc06 	br	1001c824 <_realloc_r+0x13c>
1001ccb4:	b5800604 	addi	r22,r22,24
1001ccb8:	38c00615 	stw	r3,24(r7)
1001ccbc:	b0ffff17 	ldw	r3,-4(r22)
1001ccc0:	38800804 	addi	r2,r7,32
1001ccc4:	38c00715 	stw	r3,28(r7)
1001ccc8:	b0c00017 	ldw	r3,0(r22)
1001cccc:	003f6906 	br	1001ca74 <_realloc_r+0x38c>
1001ccd0:	b0800217 	ldw	r2,8(r22)
1001ccd4:	31800920 	cmpeqi	r6,r6,36
1001ccd8:	38800415 	stw	r2,16(r7)
1001ccdc:	b0800317 	ldw	r2,12(r22)
1001cce0:	38800515 	stw	r2,20(r7)
1001cce4:	b0c00417 	ldw	r3,16(r22)
1001cce8:	3000031e 	bne	r6,zero,1001ccf8 <_realloc_r+0x610>
1001ccec:	38800604 	addi	r2,r7,24
1001ccf0:	b5800404 	addi	r22,r22,16
1001ccf4:	003f9306 	br	1001cb44 <_realloc_r+0x45c>
1001ccf8:	b5800604 	addi	r22,r22,24
1001ccfc:	38c00615 	stw	r3,24(r7)
1001cd00:	b0ffff17 	ldw	r3,-4(r22)
1001cd04:	38800804 	addi	r2,r7,32
1001cd08:	38c00715 	stw	r3,28(r7)
1001cd0c:	b0c00017 	ldw	r3,0(r22)
1001cd10:	003f8c06 	br	1001cb44 <_realloc_r+0x45c>

1001cd14 <__sprint_r.part.0>:
1001cd14:	28801917 	ldw	r2,100(r5)
1001cd18:	defff604 	addi	sp,sp,-40
1001cd1c:	dd000415 	stw	r20,16(sp)
1001cd20:	dfc00915 	stw	ra,36(sp)
1001cd24:	df000815 	stw	fp,32(sp)
1001cd28:	ddc00715 	stw	r23,28(sp)
1001cd2c:	dd800615 	stw	r22,24(sp)
1001cd30:	dd400515 	stw	r21,20(sp)
1001cd34:	dcc00315 	stw	r19,12(sp)
1001cd38:	dc800215 	stw	r18,8(sp)
1001cd3c:	dc400115 	stw	r17,4(sp)
1001cd40:	dc000015 	stw	r16,0(sp)
1001cd44:	1088000c 	andi	r2,r2,8192
1001cd48:	3029883a 	mov	r20,r6
1001cd4c:	10002c26 	beq	r2,zero,1001ce00 <__sprint_r.part.0+0xec>
1001cd50:	30800217 	ldw	r2,8(r6)
1001cd54:	2823883a 	mov	r17,r5
1001cd58:	2027883a 	mov	r19,r4
1001cd5c:	35400017 	ldw	r21,0(r6)
1001cd60:	05ffff04 	movi	r23,-4
1001cd64:	10002426 	beq	r2,zero,1001cdf8 <__sprint_r.part.0+0xe4>
1001cd68:	ad800117 	ldw	r22,4(r21)
1001cd6c:	ac000017 	ldw	r16,0(r21)
1001cd70:	b024d0ba 	srli	r18,r22,2
1001cd74:	90001b26 	beq	r18,zero,1001cde4 <__sprint_r.part.0+0xd0>
1001cd78:	0039883a 	mov	fp,zero
1001cd7c:	00000206 	br	1001cd88 <__sprint_r.part.0+0x74>
1001cd80:	84000104 	addi	r16,r16,4
1001cd84:	97001626 	beq	r18,fp,1001cde0 <__sprint_r.part.0+0xcc>
1001cd88:	81400017 	ldw	r5,0(r16)
1001cd8c:	880d883a 	mov	r6,r17
1001cd90:	9809883a 	mov	r4,r19
1001cd94:	001e6900 	call	1001e690 <_fputwc_r>
1001cd98:	10bfffe0 	cmpeqi	r2,r2,-1
1001cd9c:	e7000044 	addi	fp,fp,1
1001cda0:	103ff726 	beq	r2,zero,1001cd80 <__sprint_r.part.0+0x6c>
1001cda4:	00bfffc4 	movi	r2,-1
1001cda8:	a0000215 	stw	zero,8(r20)
1001cdac:	a0000115 	stw	zero,4(r20)
1001cdb0:	dfc00917 	ldw	ra,36(sp)
1001cdb4:	df000817 	ldw	fp,32(sp)
1001cdb8:	ddc00717 	ldw	r23,28(sp)
1001cdbc:	dd800617 	ldw	r22,24(sp)
1001cdc0:	dd400517 	ldw	r21,20(sp)
1001cdc4:	dd000417 	ldw	r20,16(sp)
1001cdc8:	dcc00317 	ldw	r19,12(sp)
1001cdcc:	dc800217 	ldw	r18,8(sp)
1001cdd0:	dc400117 	ldw	r17,4(sp)
1001cdd4:	dc000017 	ldw	r16,0(sp)
1001cdd8:	dec00a04 	addi	sp,sp,40
1001cddc:	f800283a 	ret
1001cde0:	a0800217 	ldw	r2,8(r20)
1001cde4:	b5ec703a 	and	r22,r22,r23
1001cde8:	1585c83a 	sub	r2,r2,r22
1001cdec:	a0800215 	stw	r2,8(r20)
1001cdf0:	ad400204 	addi	r21,r21,8
1001cdf4:	103fdc1e 	bne	r2,zero,1001cd68 <__sprint_r.part.0+0x54>
1001cdf8:	0005883a 	mov	r2,zero
1001cdfc:	003fea06 	br	1001cda8 <__sprint_r.part.0+0x94>
1001ce00:	001aea40 	call	1001aea4 <__sfvwrite_r>
1001ce04:	003fe806 	br	1001cda8 <__sprint_r.part.0+0x94>

1001ce08 <__sprint_r>:
1001ce08:	30c00217 	ldw	r3,8(r6)
1001ce0c:	18000126 	beq	r3,zero,1001ce14 <__sprint_r+0xc>
1001ce10:	001cd141 	jmpi	1001cd14 <__sprint_r.part.0>
1001ce14:	30000115 	stw	zero,4(r6)
1001ce18:	0005883a 	mov	r2,zero
1001ce1c:	f800283a 	ret

1001ce20 <___vfiprintf_internal_r>:
1001ce20:	deffd004 	addi	sp,sp,-192
1001ce24:	df002e15 	stw	fp,184(sp)
1001ce28:	dcc02915 	stw	r19,164(sp)
1001ce2c:	dc802815 	stw	r18,160(sp)
1001ce30:	dfc02f15 	stw	ra,188(sp)
1001ce34:	ddc02d15 	stw	r23,180(sp)
1001ce38:	dd802c15 	stw	r22,176(sp)
1001ce3c:	dd402b15 	stw	r21,172(sp)
1001ce40:	dd002a15 	stw	r20,168(sp)
1001ce44:	dc402715 	stw	r17,156(sp)
1001ce48:	dc002615 	stw	r16,152(sp)
1001ce4c:	d9c00315 	stw	r7,12(sp)
1001ce50:	2027883a 	mov	r19,r4
1001ce54:	2825883a 	mov	r18,r5
1001ce58:	3039883a 	mov	fp,r6
1001ce5c:	20000226 	beq	r4,zero,1001ce68 <___vfiprintf_internal_r+0x48>
1001ce60:	20800e17 	ldw	r2,56(r4)
1001ce64:	1002b626 	beq	r2,zero,1001d940 <___vfiprintf_internal_r+0xb20>
1001ce68:	9080030b 	ldhu	r2,12(r18)
1001ce6c:	10c8000c 	andi	r3,r2,8192
1001ce70:	1800061e 	bne	r3,zero,1001ce8c <___vfiprintf_internal_r+0x6c>
1001ce74:	90c01917 	ldw	r3,100(r18)
1001ce78:	0137ffc4 	movi	r4,-8193
1001ce7c:	10880014 	ori	r2,r2,8192
1001ce80:	1906703a 	and	r3,r3,r4
1001ce84:	9080030d 	sth	r2,12(r18)
1001ce88:	90c01915 	stw	r3,100(r18)
1001ce8c:	10c0020c 	andi	r3,r2,8
1001ce90:	18009426 	beq	r3,zero,1001d0e4 <___vfiprintf_internal_r+0x2c4>
1001ce94:	90c00417 	ldw	r3,16(r18)
1001ce98:	18009226 	beq	r3,zero,1001d0e4 <___vfiprintf_internal_r+0x2c4>
1001ce9c:	1080068c 	andi	r2,r2,26
1001cea0:	10800298 	cmpnei	r2,r2,10
1001cea4:	10009726 	beq	r2,zero,1001d104 <___vfiprintf_internal_r+0x2e4>
1001cea8:	dc401604 	addi	r17,sp,88
1001ceac:	dc400915 	stw	r17,36(sp)
1001ceb0:	d8000b15 	stw	zero,44(sp)
1001ceb4:	d8000a15 	stw	zero,40(sp)
1001ceb8:	8811883a 	mov	r8,r17
1001cebc:	d8000415 	stw	zero,16(sp)
1001cec0:	d8000015 	stw	zero,0(sp)
1001cec4:	e0800007 	ldb	r2,0(fp)
1001cec8:	1000a226 	beq	r2,zero,1001d154 <___vfiprintf_internal_r+0x334>
1001cecc:	10800960 	cmpeqi	r2,r2,37
1001ced0:	1003e71e 	bne	r2,zero,1001de70 <___vfiprintf_internal_r+0x1050>
1001ced4:	e021883a 	mov	r16,fp
1001ced8:	00000206 	br	1001cee4 <___vfiprintf_internal_r+0xc4>
1001cedc:	18009226 	beq	r3,zero,1001d128 <___vfiprintf_internal_r+0x308>
1001cee0:	a021883a 	mov	r16,r20
1001cee4:	80800047 	ldb	r2,1(r16)
1001cee8:	85000044 	addi	r20,r16,1
1001ceec:	10c00958 	cmpnei	r3,r2,37
1001cef0:	103ffa1e 	bne	r2,zero,1001cedc <___vfiprintf_internal_r+0xbc>
1001cef4:	a72bc83a 	sub	r21,r20,fp
1001cef8:	a8009626 	beq	r21,zero,1001d154 <___vfiprintf_internal_r+0x334>
1001cefc:	d8c00b17 	ldw	r3,44(sp)
1001cf00:	d8800a17 	ldw	r2,40(sp)
1001cf04:	47000015 	stw	fp,0(r8)
1001cf08:	a8c7883a 	add	r3,r21,r3
1001cf0c:	10800044 	addi	r2,r2,1
1001cf10:	d8800a15 	stw	r2,40(sp)
1001cf14:	45400115 	stw	r21,4(r8)
1001cf18:	d8c00b15 	stw	r3,44(sp)
1001cf1c:	10800208 	cmpgei	r2,r2,8
1001cf20:	1000841e 	bne	r2,zero,1001d134 <___vfiprintf_internal_r+0x314>
1001cf24:	42000204 	addi	r8,r8,8
1001cf28:	d8c00017 	ldw	r3,0(sp)
1001cf2c:	80800047 	ldb	r2,1(r16)
1001cf30:	1d47883a 	add	r3,r3,r21
1001cf34:	d8c00015 	stw	r3,0(sp)
1001cf38:	10008626 	beq	r2,zero,1001d154 <___vfiprintf_internal_r+0x334>
1001cf3c:	a0800047 	ldb	r2,1(r20)
1001cf40:	a7000044 	addi	fp,r20,1
1001cf44:	d8000845 	stb	zero,33(sp)
1001cf48:	000b883a 	mov	r5,zero
1001cf4c:	000d883a 	mov	r6,zero
1001cf50:	027fffc4 	movi	r9,-1
1001cf54:	0021883a 	mov	r16,zero
1001cf58:	0019883a 	mov	r12,zero
1001cf5c:	e7000044 	addi	fp,fp,1
1001cf60:	10fff804 	addi	r3,r2,-32
1001cf64:	19001668 	cmpgeui	r4,r3,89
1001cf68:	20009c1e 	bne	r4,zero,1001d1dc <___vfiprintf_internal_r+0x3bc>
1001cf6c:	180690ba 	slli	r3,r3,2
1001cf70:	010400b4 	movhi	r4,4098
1001cf74:	1909883a 	add	r4,r3,r4
1001cf78:	20f3e017 	ldw	r3,-12416(r4)
1001cf7c:	1800683a 	jmp	r3
1001cf80:	1001d2ac 	andhi	zero,r2,1866
1001cf84:	1001d1dc 	xori	zero,r2,1863
1001cf88:	1001d1dc 	xori	zero,r2,1863
1001cf8c:	1001d2a0 	cmpeqi	zero,r2,1866
1001cf90:	1001d1dc 	xori	zero,r2,1863
1001cf94:	1001d1dc 	xori	zero,r2,1863
1001cf98:	1001d1dc 	xori	zero,r2,1863
1001cf9c:	1001d1dc 	xori	zero,r2,1863
1001cfa0:	1001d1dc 	xori	zero,r2,1863
1001cfa4:	1001d1dc 	xori	zero,r2,1863
1001cfa8:	1001d278 	rdprs	zero,r2,1865
1001cfac:	1001d268 	cmpgeui	zero,r2,1865
1001cfb0:	1001d1dc 	xori	zero,r2,1863
1001cfb4:	1001d250 	cmplti	zero,r2,1865
1001cfb8:	1001d20c 	andi	zero,r2,1864
1001cfbc:	1001d1dc 	xori	zero,r2,1863
1001cfc0:	1001d200 	call	11001d20 <_gp+0xfd1908>
1001cfc4:	1001d1ac 	andhi	zero,r2,1862
1001cfc8:	1001d1ac 	andhi	zero,r2,1862
1001cfcc:	1001d1ac 	andhi	zero,r2,1862
1001cfd0:	1001d1ac 	andhi	zero,r2,1862
1001cfd4:	1001d1ac 	andhi	zero,r2,1862
1001cfd8:	1001d1ac 	andhi	zero,r2,1862
1001cfdc:	1001d1ac 	andhi	zero,r2,1862
1001cfe0:	1001d1ac 	andhi	zero,r2,1862
1001cfe4:	1001d1ac 	andhi	zero,r2,1862
1001cfe8:	1001d1dc 	xori	zero,r2,1863
1001cfec:	1001d1dc 	xori	zero,r2,1863
1001cff0:	1001d1dc 	xori	zero,r2,1863
1001cff4:	1001d1dc 	xori	zero,r2,1863
1001cff8:	1001d1dc 	xori	zero,r2,1863
1001cffc:	1001d1dc 	xori	zero,r2,1863
1001d000:	1001d1dc 	xori	zero,r2,1863
1001d004:	1001d1dc 	xori	zero,r2,1863
1001d008:	1001d1dc 	xori	zero,r2,1863
1001d00c:	1001d1dc 	xori	zero,r2,1863
1001d010:	1001d868 	cmpgeui	zero,r2,1889
1001d014:	1001d1dc 	xori	zero,r2,1863
1001d018:	1001d1dc 	xori	zero,r2,1863
1001d01c:	1001d1dc 	xori	zero,r2,1863
1001d020:	1001d1dc 	xori	zero,r2,1863
1001d024:	1001d1dc 	xori	zero,r2,1863
1001d028:	1001d1dc 	xori	zero,r2,1863
1001d02c:	1001d1dc 	xori	zero,r2,1863
1001d030:	1001d1dc 	xori	zero,r2,1863
1001d034:	1001d1dc 	xori	zero,r2,1863
1001d038:	1001d1dc 	xori	zero,r2,1863
1001d03c:	1001d800 	call	11001d80 <_gp+0xfd1968>
1001d040:	1001d1dc 	xori	zero,r2,1863
1001d044:	1001d1dc 	xori	zero,r2,1863
1001d048:	1001d1dc 	xori	zero,r2,1863
1001d04c:	1001d1dc 	xori	zero,r2,1863
1001d050:	1001d1dc 	xori	zero,r2,1863
1001d054:	1001d834 	orhi	zero,r2,1888
1001d058:	1001d1dc 	xori	zero,r2,1863
1001d05c:	1001d1dc 	xori	zero,r2,1863
1001d060:	1001d404 	addi	zero,r2,1872
1001d064:	1001d1dc 	xori	zero,r2,1863
1001d068:	1001d1dc 	xori	zero,r2,1863
1001d06c:	1001d1dc 	xori	zero,r2,1863
1001d070:	1001d1dc 	xori	zero,r2,1863
1001d074:	1001d1dc 	xori	zero,r2,1863
1001d078:	1001d1dc 	xori	zero,r2,1863
1001d07c:	1001d1dc 	xori	zero,r2,1863
1001d080:	1001d1dc 	xori	zero,r2,1863
1001d084:	1001d1dc 	xori	zero,r2,1863
1001d088:	1001d1dc 	xori	zero,r2,1863
1001d08c:	1001d5a0 	cmpeqi	zero,r2,1878
1001d090:	1001d52c 	andhi	zero,r2,1876
1001d094:	1001d1dc 	xori	zero,r2,1863
1001d098:	1001d1dc 	xori	zero,r2,1863
1001d09c:	1001d1dc 	xori	zero,r2,1863
1001d0a0:	1001d334 	orhi	zero,r2,1868
1001d0a4:	1001d52c 	andhi	zero,r2,1876
1001d0a8:	1001d1dc 	xori	zero,r2,1863
1001d0ac:	1001d1dc 	xori	zero,r2,1863
1001d0b0:	1001d320 	cmpeqi	zero,r2,1868
1001d0b4:	1001d1dc 	xori	zero,r2,1863
1001d0b8:	1001d4ec 	andhi	zero,r2,1875
1001d0bc:	1001d3c4 	addi	zero,r2,1871
1001d0c0:	1001d34c 	andi	zero,r2,1869
1001d0c4:	1001d340 	call	11001d34 <_gp+0xfd191c>
1001d0c8:	1001d1dc 	xori	zero,r2,1863
1001d0cc:	1001d48c 	andi	zero,r2,1874
1001d0d0:	1001d1dc 	xori	zero,r2,1863
1001d0d4:	1001d44c 	andi	zero,r2,1873
1001d0d8:	1001d1dc 	xori	zero,r2,1863
1001d0dc:	1001d1dc 	xori	zero,r2,1863
1001d0e0:	1001d2d8 	cmpnei	zero,r2,1867
1001d0e4:	900b883a 	mov	r5,r18
1001d0e8:	9809883a 	mov	r4,r19
1001d0ec:	00189640 	call	10018964 <__swsetup_r>
1001d0f0:	1004071e 	bne	r2,zero,1001e110 <___vfiprintf_internal_r+0x12f0>
1001d0f4:	9080030b 	ldhu	r2,12(r18)
1001d0f8:	1080068c 	andi	r2,r2,26
1001d0fc:	10800298 	cmpnei	r2,r2,10
1001d100:	103f691e 	bne	r2,zero,1001cea8 <___vfiprintf_internal_r+0x88>
1001d104:	9080038f 	ldh	r2,14(r18)
1001d108:	103f6716 	blt	r2,zero,1001cea8 <___vfiprintf_internal_r+0x88>
1001d10c:	d9c00317 	ldw	r7,12(sp)
1001d110:	e00d883a 	mov	r6,fp
1001d114:	900b883a 	mov	r5,r18
1001d118:	9809883a 	mov	r4,r19
1001d11c:	001e1640 	call	1001e164 <__sbprintf>
1001d120:	d8800015 	stw	r2,0(sp)
1001d124:	00001406 	br	1001d178 <___vfiprintf_internal_r+0x358>
1001d128:	a72bc83a 	sub	r21,r20,fp
1001d12c:	a83f8326 	beq	r21,zero,1001cf3c <___vfiprintf_internal_r+0x11c>
1001d130:	003f7206 	br	1001cefc <___vfiprintf_internal_r+0xdc>
1001d134:	18032b26 	beq	r3,zero,1001dde4 <___vfiprintf_internal_r+0xfc4>
1001d138:	d9800904 	addi	r6,sp,36
1001d13c:	900b883a 	mov	r5,r18
1001d140:	9809883a 	mov	r4,r19
1001d144:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d148:	1000081e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d14c:	8811883a 	mov	r8,r17
1001d150:	003f7506 	br	1001cf28 <___vfiprintf_internal_r+0x108>
1001d154:	d8800b17 	ldw	r2,44(sp)
1001d158:	10000426 	beq	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d15c:	d9800904 	addi	r6,sp,36
1001d160:	900b883a 	mov	r5,r18
1001d164:	9809883a 	mov	r4,r19
1001d168:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d16c:	9080030b 	ldhu	r2,12(r18)
1001d170:	1080100c 	andi	r2,r2,64
1001d174:	1003e61e 	bne	r2,zero,1001e110 <___vfiprintf_internal_r+0x12f0>
1001d178:	d8800017 	ldw	r2,0(sp)
1001d17c:	dfc02f17 	ldw	ra,188(sp)
1001d180:	df002e17 	ldw	fp,184(sp)
1001d184:	ddc02d17 	ldw	r23,180(sp)
1001d188:	dd802c17 	ldw	r22,176(sp)
1001d18c:	dd402b17 	ldw	r21,172(sp)
1001d190:	dd002a17 	ldw	r20,168(sp)
1001d194:	dcc02917 	ldw	r19,164(sp)
1001d198:	dc802817 	ldw	r18,160(sp)
1001d19c:	dc402717 	ldw	r17,156(sp)
1001d1a0:	dc002617 	ldw	r16,152(sp)
1001d1a4:	dec03004 	addi	sp,sp,192
1001d1a8:	f800283a 	ret
1001d1ac:	0021883a 	mov	r16,zero
1001d1b0:	10fff404 	addi	r3,r2,-48
1001d1b4:	e7000044 	addi	fp,fp,1
1001d1b8:	840002a4 	muli	r16,r16,10
1001d1bc:	e0bfffc7 	ldb	r2,-1(fp)
1001d1c0:	1c21883a 	add	r16,r3,r16
1001d1c4:	10fff404 	addi	r3,r2,-48
1001d1c8:	190002b0 	cmpltui	r4,r3,10
1001d1cc:	203ff91e 	bne	r4,zero,1001d1b4 <___vfiprintf_internal_r+0x394>
1001d1d0:	10fff804 	addi	r3,r2,-32
1001d1d4:	19001668 	cmpgeui	r4,r3,89
1001d1d8:	203f6426 	beq	r4,zero,1001cf6c <___vfiprintf_internal_r+0x14c>
1001d1dc:	29403fcc 	andi	r5,r5,255
1001d1e0:	2803a91e 	bne	r5,zero,1001e088 <___vfiprintf_internal_r+0x1268>
1001d1e4:	103fdb26 	beq	r2,zero,1001d154 <___vfiprintf_internal_r+0x334>
1001d1e8:	d8800c05 	stb	r2,48(sp)
1001d1ec:	d8000845 	stb	zero,33(sp)
1001d1f0:	05400044 	movi	r21,1
1001d1f4:	05800044 	movi	r22,1
1001d1f8:	ddc00c04 	addi	r23,sp,48
1001d1fc:	0000f106 	br	1001d5c4 <___vfiprintf_internal_r+0x7a4>
1001d200:	63002014 	ori	r12,r12,128
1001d204:	e0800007 	ldb	r2,0(fp)
1001d208:	003f5406 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d20c:	e0800007 	ldb	r2,0(fp)
1001d210:	e1000044 	addi	r4,fp,1
1001d214:	10c00aa0 	cmpeqi	r3,r2,42
1001d218:	1803c01e 	bne	r3,zero,1001e11c <___vfiprintf_internal_r+0x12fc>
1001d21c:	10fff404 	addi	r3,r2,-48
1001d220:	19c002b0 	cmpltui	r7,r3,10
1001d224:	2039883a 	mov	fp,r4
1001d228:	0013883a 	mov	r9,zero
1001d22c:	383f4c26 	beq	r7,zero,1001cf60 <___vfiprintf_internal_r+0x140>
1001d230:	e7000044 	addi	fp,fp,1
1001d234:	4a4002a4 	muli	r9,r9,10
1001d238:	e0bfffc7 	ldb	r2,-1(fp)
1001d23c:	48d3883a 	add	r9,r9,r3
1001d240:	10fff404 	addi	r3,r2,-48
1001d244:	190002b0 	cmpltui	r4,r3,10
1001d248:	203ff91e 	bne	r4,zero,1001d230 <___vfiprintf_internal_r+0x410>
1001d24c:	003f4406 	br	1001cf60 <___vfiprintf_internal_r+0x140>
1001d250:	e0800003 	ldbu	r2,0(fp)
1001d254:	10803fcc 	andi	r2,r2,255
1001d258:	1080201c 	xori	r2,r2,128
1001d25c:	63000114 	ori	r12,r12,4
1001d260:	10bfe004 	addi	r2,r2,-128
1001d264:	003f3d06 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d268:	01400044 	movi	r5,1
1001d26c:	01800ac4 	movi	r6,43
1001d270:	e0800007 	ldb	r2,0(fp)
1001d274:	003f3906 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d278:	d8800317 	ldw	r2,12(sp)
1001d27c:	14000017 	ldw	r16,0(r2)
1001d280:	15c00104 	addi	r23,r2,4
1001d284:	e0800003 	ldbu	r2,0(fp)
1001d288:	80031416 	blt	r16,zero,1001dedc <___vfiprintf_internal_r+0x10bc>
1001d28c:	ddc00315 	stw	r23,12(sp)
1001d290:	10803fcc 	andi	r2,r2,255
1001d294:	1080201c 	xori	r2,r2,128
1001d298:	10bfe004 	addi	r2,r2,-128
1001d29c:	003f2f06 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d2a0:	63000054 	ori	r12,r12,1
1001d2a4:	e0800007 	ldb	r2,0(fp)
1001d2a8:	003f2c06 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d2ac:	30c03fcc 	andi	r3,r6,255
1001d2b0:	18c0201c 	xori	r3,r3,128
1001d2b4:	18ffe004 	addi	r3,r3,-128
1001d2b8:	e0800003 	ldbu	r2,0(fp)
1001d2bc:	183ff41e 	bne	r3,zero,1001d290 <___vfiprintf_internal_r+0x470>
1001d2c0:	10803fcc 	andi	r2,r2,255
1001d2c4:	1080201c 	xori	r2,r2,128
1001d2c8:	01400044 	movi	r5,1
1001d2cc:	01800804 	movi	r6,32
1001d2d0:	10bfe004 	addi	r2,r2,-128
1001d2d4:	003f2106 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d2d8:	29403fcc 	andi	r5,r5,255
1001d2dc:	2803741e 	bne	r5,zero,1001e0b0 <___vfiprintf_internal_r+0x1290>
1001d2e0:	00c400b4 	movhi	r3,4098
1001d2e4:	18d68f04 	addi	r3,r3,23100
1001d2e8:	d8c00415 	stw	r3,16(sp)
1001d2ec:	60c0080c 	andi	r3,r12,32
1001d2f0:	18004b26 	beq	r3,zero,1001d420 <___vfiprintf_internal_r+0x600>
1001d2f4:	d8c00317 	ldw	r3,12(sp)
1001d2f8:	1d400017 	ldw	r21,0(r3)
1001d2fc:	1d800117 	ldw	r22,4(r3)
1001d300:	18c00204 	addi	r3,r3,8
1001d304:	d8c00315 	stw	r3,12(sp)
1001d308:	60c0004c 	andi	r3,r12,1
1001d30c:	18000226 	beq	r3,zero,1001d318 <___vfiprintf_internal_r+0x4f8>
1001d310:	ad86b03a 	or	r3,r21,r22
1001d314:	1802df1e 	bne	r3,zero,1001de94 <___vfiprintf_internal_r+0x1074>
1001d318:	00800084 	movi	r2,2
1001d31c:	00001906 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d320:	e0800007 	ldb	r2,0(fp)
1001d324:	10c01b18 	cmpnei	r3,r2,108
1001d328:	18033026 	beq	r3,zero,1001dfec <___vfiprintf_internal_r+0x11cc>
1001d32c:	63000414 	ori	r12,r12,16
1001d330:	003f0a06 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d334:	63001014 	ori	r12,r12,64
1001d338:	e0800007 	ldb	r2,0(fp)
1001d33c:	003f0706 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d340:	63000814 	ori	r12,r12,32
1001d344:	e0800007 	ldb	r2,0(fp)
1001d348:	003f0406 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001d34c:	d8c00317 	ldw	r3,12(sp)
1001d350:	00800c04 	movi	r2,48
1001d354:	d8800885 	stb	r2,34(sp)
1001d358:	00801e04 	movi	r2,120
1001d35c:	010400b4 	movhi	r4,4098
1001d360:	d88008c5 	stb	r2,35(sp)
1001d364:	1d400017 	ldw	r21,0(r3)
1001d368:	18800104 	addi	r2,r3,4
1001d36c:	d8800315 	stw	r2,12(sp)
1001d370:	20968f04 	addi	r2,r4,23100
1001d374:	d8800415 	stw	r2,16(sp)
1001d378:	002d883a 	mov	r22,zero
1001d37c:	63000094 	ori	r12,r12,2
1001d380:	00800084 	movi	r2,2
1001d384:	d8000845 	stb	zero,33(sp)
1001d388:	48ffffe0 	cmpeqi	r3,r9,-1
1001d38c:	001b883a 	mov	r13,zero
1001d390:	18014c1e 	bne	r3,zero,1001d8c4 <___vfiprintf_internal_r+0xaa4>
1001d394:	053fdfc4 	movi	r20,-129
1001d398:	ad86b03a 	or	r3,r21,r22
1001d39c:	6528703a 	and	r20,r12,r20
1001d3a0:	1802411e 	bne	r3,zero,1001dca8 <___vfiprintf_internal_r+0xe88>
1001d3a4:	48030d1e 	bne	r9,zero,1001dfdc <___vfiprintf_internal_r+0x11bc>
1001d3a8:	1000791e 	bne	r2,zero,1001d590 <___vfiprintf_internal_r+0x770>
1001d3ac:	6580004c 	andi	r22,r12,1
1001d3b0:	b002b126 	beq	r22,zero,1001de78 <___vfiprintf_internal_r+0x1058>
1001d3b4:	00800c04 	movi	r2,48
1001d3b8:	d88015c5 	stb	r2,87(sp)
1001d3bc:	ddc015c4 	addi	r23,sp,87
1001d3c0:	00017e06 	br	1001d9bc <___vfiprintf_internal_r+0xb9c>
1001d3c4:	29403fcc 	andi	r5,r5,255
1001d3c8:	2803461e 	bne	r5,zero,1001e0e4 <___vfiprintf_internal_r+0x12c4>
1001d3cc:	6080080c 	andi	r2,r12,32
1001d3d0:	10016b1e 	bne	r2,zero,1001d980 <___vfiprintf_internal_r+0xb60>
1001d3d4:	d8800317 	ldw	r2,12(sp)
1001d3d8:	60c0040c 	andi	r3,r12,16
1001d3dc:	15400017 	ldw	r21,0(r2)
1001d3e0:	10800104 	addi	r2,r2,4
1001d3e4:	18010d1e 	bne	r3,zero,1001d81c <___vfiprintf_internal_r+0x9fc>
1001d3e8:	60c0100c 	andi	r3,r12,64
1001d3ec:	18031326 	beq	r3,zero,1001e03c <___vfiprintf_internal_r+0x121c>
1001d3f0:	d8800315 	stw	r2,12(sp)
1001d3f4:	ad7fffcc 	andi	r21,r21,65535
1001d3f8:	002d883a 	mov	r22,zero
1001d3fc:	0005883a 	mov	r2,zero
1001d400:	003fe006 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d404:	29403fcc 	andi	r5,r5,255
1001d408:	2803251e 	bne	r5,zero,1001e0a0 <___vfiprintf_internal_r+0x1280>
1001d40c:	00c400b4 	movhi	r3,4098
1001d410:	18d68a04 	addi	r3,r3,23080
1001d414:	d8c00415 	stw	r3,16(sp)
1001d418:	60c0080c 	andi	r3,r12,32
1001d41c:	183fb51e 	bne	r3,zero,1001d2f4 <___vfiprintf_internal_r+0x4d4>
1001d420:	d9000317 	ldw	r4,12(sp)
1001d424:	60c0040c 	andi	r3,r12,16
1001d428:	25400017 	ldw	r21,0(r4)
1001d42c:	21000104 	addi	r4,r4,4
1001d430:	d9000315 	stw	r4,12(sp)
1001d434:	18026e1e 	bne	r3,zero,1001ddf0 <___vfiprintf_internal_r+0xfd0>
1001d438:	60c0100c 	andi	r3,r12,64
1001d43c:	18026c26 	beq	r3,zero,1001ddf0 <___vfiprintf_internal_r+0xfd0>
1001d440:	ad7fffcc 	andi	r21,r21,65535
1001d444:	002d883a 	mov	r22,zero
1001d448:	003faf06 	br	1001d308 <___vfiprintf_internal_r+0x4e8>
1001d44c:	29403fcc 	andi	r5,r5,255
1001d450:	2803151e 	bne	r5,zero,1001e0a8 <___vfiprintf_internal_r+0x1288>
1001d454:	6080080c 	andi	r2,r12,32
1001d458:	10013b1e 	bne	r2,zero,1001d948 <___vfiprintf_internal_r+0xb28>
1001d45c:	d8800317 	ldw	r2,12(sp)
1001d460:	60c0040c 	andi	r3,r12,16
1001d464:	15400017 	ldw	r21,0(r2)
1001d468:	10800104 	addi	r2,r2,4
1001d46c:	1800f81e 	bne	r3,zero,1001d850 <___vfiprintf_internal_r+0xa30>
1001d470:	60c0100c 	andi	r3,r12,64
1001d474:	1802ed26 	beq	r3,zero,1001e02c <___vfiprintf_internal_r+0x120c>
1001d478:	d8800315 	stw	r2,12(sp)
1001d47c:	ad7fffcc 	andi	r21,r21,65535
1001d480:	002d883a 	mov	r22,zero
1001d484:	00800044 	movi	r2,1
1001d488:	003fbe06 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d48c:	d8800317 	ldw	r2,12(sp)
1001d490:	d8000845 	stb	zero,33(sp)
1001d494:	15c00017 	ldw	r23,0(r2)
1001d498:	15000104 	addi	r20,r2,4
1001d49c:	b802da26 	beq	r23,zero,1001e008 <___vfiprintf_internal_r+0x11e8>
1001d4a0:	48bfffe0 	cmpeqi	r2,r9,-1
1001d4a4:	1002901e 	bne	r2,zero,1001dee8 <___vfiprintf_internal_r+0x10c8>
1001d4a8:	480d883a 	mov	r6,r9
1001d4ac:	000b883a 	mov	r5,zero
1001d4b0:	b809883a 	mov	r4,r23
1001d4b4:	da000315 	stw	r8,12(sp)
1001d4b8:	db000215 	stw	r12,8(sp)
1001d4bc:	da400115 	stw	r9,4(sp)
1001d4c0:	001557c0 	call	1001557c <memchr>
1001d4c4:	da400117 	ldw	r9,4(sp)
1001d4c8:	db000217 	ldw	r12,8(sp)
1001d4cc:	da000317 	ldw	r8,12(sp)
1001d4d0:	1002ef26 	beq	r2,zero,1001e090 <___vfiprintf_internal_r+0x1270>
1001d4d4:	15edc83a 	sub	r22,r2,r23
1001d4d8:	b02b883a 	mov	r21,r22
1001d4dc:	b000010e 	bge	r22,zero,1001d4e4 <___vfiprintf_internal_r+0x6c4>
1001d4e0:	002b883a 	mov	r21,zero
1001d4e4:	dd000315 	stw	r20,12(sp)
1001d4e8:	00003606 	br	1001d5c4 <___vfiprintf_internal_r+0x7a4>
1001d4ec:	29403fcc 	andi	r5,r5,255
1001d4f0:	2802fa1e 	bne	r5,zero,1001e0dc <___vfiprintf_internal_r+0x12bc>
1001d4f4:	d9000317 	ldw	r4,12(sp)
1001d4f8:	6080080c 	andi	r2,r12,32
1001d4fc:	20c00104 	addi	r3,r4,4
1001d500:	10026a1e 	bne	r2,zero,1001deac <___vfiprintf_internal_r+0x108c>
1001d504:	6080040c 	andi	r2,r12,16
1001d508:	1002891e 	bne	r2,zero,1001df30 <___vfiprintf_internal_r+0x1110>
1001d50c:	6300100c 	andi	r12,r12,64
1001d510:	60028726 	beq	r12,zero,1001df30 <___vfiprintf_internal_r+0x1110>
1001d514:	d8800317 	ldw	r2,12(sp)
1001d518:	d8c00315 	stw	r3,12(sp)
1001d51c:	d8c00017 	ldw	r3,0(sp)
1001d520:	10800017 	ldw	r2,0(r2)
1001d524:	10c0000d 	sth	r3,0(r2)
1001d528:	003e6606 	br	1001cec4 <___vfiprintf_internal_r+0xa4>
1001d52c:	29403fcc 	andi	r5,r5,255
1001d530:	2802e81e 	bne	r5,zero,1001e0d4 <___vfiprintf_internal_r+0x12b4>
1001d534:	6080080c 	andi	r2,r12,32
1001d538:	10010a1e 	bne	r2,zero,1001d964 <___vfiprintf_internal_r+0xb44>
1001d53c:	d8800317 	ldw	r2,12(sp)
1001d540:	60c0040c 	andi	r3,r12,16
1001d544:	10800104 	addi	r2,r2,4
1001d548:	1800ce1e 	bne	r3,zero,1001d884 <___vfiprintf_internal_r+0xa64>
1001d54c:	60c0100c 	andi	r3,r12,64
1001d550:	1800cc26 	beq	r3,zero,1001d884 <___vfiprintf_internal_r+0xa64>
1001d554:	d8c00317 	ldw	r3,12(sp)
1001d558:	d8800315 	stw	r2,12(sp)
1001d55c:	1d40000f 	ldh	r21,0(r3)
1001d560:	a82dd7fa 	srai	r22,r21,31
1001d564:	b005883a 	mov	r2,r22
1001d568:	1000cc16 	blt	r2,zero,1001d89c <___vfiprintf_internal_r+0xa7c>
1001d56c:	48bfffd8 	cmpnei	r2,r9,-1
1001d570:	db400843 	ldbu	r13,33(sp)
1001d574:	10010926 	beq	r2,zero,1001d99c <___vfiprintf_internal_r+0xb7c>
1001d578:	00ffdfc4 	movi	r3,-129
1001d57c:	ad84b03a 	or	r2,r21,r22
1001d580:	60d8703a 	and	r12,r12,r3
1001d584:	1001051e 	bne	r2,zero,1001d99c <___vfiprintf_internal_r+0xb7c>
1001d588:	4801071e 	bne	r9,zero,1001d9a8 <___vfiprintf_internal_r+0xb88>
1001d58c:	6029883a 	mov	r20,r12
1001d590:	0013883a 	mov	r9,zero
1001d594:	002d883a 	mov	r22,zero
1001d598:	882f883a 	mov	r23,r17
1001d59c:	00010706 	br	1001d9bc <___vfiprintf_internal_r+0xb9c>
1001d5a0:	d8c00317 	ldw	r3,12(sp)
1001d5a4:	d8000845 	stb	zero,33(sp)
1001d5a8:	05400044 	movi	r21,1
1001d5ac:	18800017 	ldw	r2,0(r3)
1001d5b0:	18c00104 	addi	r3,r3,4
1001d5b4:	d8c00315 	stw	r3,12(sp)
1001d5b8:	d8800c05 	stb	r2,48(sp)
1001d5bc:	05800044 	movi	r22,1
1001d5c0:	ddc00c04 	addi	r23,sp,48
1001d5c4:	6029883a 	mov	r20,r12
1001d5c8:	0013883a 	mov	r9,zero
1001d5cc:	a340008c 	andi	r13,r20,2
1001d5d0:	68000126 	beq	r13,zero,1001d5d8 <___vfiprintf_internal_r+0x7b8>
1001d5d4:	ad400084 	addi	r21,r21,2
1001d5d8:	d9000a17 	ldw	r4,40(sp)
1001d5dc:	a300210c 	andi	r12,r20,132
1001d5e0:	d8800b17 	ldw	r2,44(sp)
1001d5e4:	21800044 	addi	r6,r4,1
1001d5e8:	300b883a 	mov	r5,r6
1001d5ec:	6000021e 	bne	r12,zero,1001d5f8 <___vfiprintf_internal_r+0x7d8>
1001d5f0:	8547c83a 	sub	r3,r16,r21
1001d5f4:	00c1ae16 	blt	zero,r3,1001dcb0 <___vfiprintf_internal_r+0xe90>
1001d5f8:	d9800847 	ldb	r6,33(sp)
1001d5fc:	40c00204 	addi	r3,r8,8
1001d600:	30000d26 	beq	r6,zero,1001d638 <___vfiprintf_internal_r+0x818>
1001d604:	d9000844 	addi	r4,sp,33
1001d608:	10800044 	addi	r2,r2,1
1001d60c:	41000015 	stw	r4,0(r8)
1001d610:	01000044 	movi	r4,1
1001d614:	41000115 	stw	r4,4(r8)
1001d618:	d8800b15 	stw	r2,44(sp)
1001d61c:	d9400a15 	stw	r5,40(sp)
1001d620:	29000208 	cmpgei	r4,r5,8
1001d624:	2001831e 	bne	r4,zero,1001dc34 <___vfiprintf_internal_r+0xe14>
1001d628:	2809883a 	mov	r4,r5
1001d62c:	1811883a 	mov	r8,r3
1001d630:	29400044 	addi	r5,r5,1
1001d634:	18c00204 	addi	r3,r3,8
1001d638:	68001826 	beq	r13,zero,1001d69c <___vfiprintf_internal_r+0x87c>
1001d63c:	d9000884 	addi	r4,sp,34
1001d640:	10800084 	addi	r2,r2,2
1001d644:	41000015 	stw	r4,0(r8)
1001d648:	01000084 	movi	r4,2
1001d64c:	41000115 	stw	r4,4(r8)
1001d650:	d8800b15 	stw	r2,44(sp)
1001d654:	d9400a15 	stw	r5,40(sp)
1001d658:	29000208 	cmpgei	r4,r5,8
1001d65c:	20018d26 	beq	r4,zero,1001dc94 <___vfiprintf_internal_r+0xe74>
1001d660:	1001ed26 	beq	r2,zero,1001de18 <___vfiprintf_internal_r+0xff8>
1001d664:	d9800904 	addi	r6,sp,36
1001d668:	900b883a 	mov	r5,r18
1001d66c:	9809883a 	mov	r4,r19
1001d670:	da400215 	stw	r9,8(sp)
1001d674:	db000115 	stw	r12,4(sp)
1001d678:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d67c:	103ebb1e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d680:	d9000a17 	ldw	r4,40(sp)
1001d684:	d8800b17 	ldw	r2,44(sp)
1001d688:	da400217 	ldw	r9,8(sp)
1001d68c:	db000117 	ldw	r12,4(sp)
1001d690:	d8c01804 	addi	r3,sp,96
1001d694:	21400044 	addi	r5,r4,1
1001d698:	8811883a 	mov	r8,r17
1001d69c:	63002018 	cmpnei	r12,r12,128
1001d6a0:	6000e326 	beq	r12,zero,1001da30 <___vfiprintf_internal_r+0xc10>
1001d6a4:	4d93c83a 	sub	r9,r9,r22
1001d6a8:	02412216 	blt	zero,r9,1001db34 <___vfiprintf_internal_r+0xd14>
1001d6ac:	b085883a 	add	r2,r22,r2
1001d6b0:	d9400a15 	stw	r5,40(sp)
1001d6b4:	45c00015 	stw	r23,0(r8)
1001d6b8:	45800115 	stw	r22,4(r8)
1001d6bc:	d8800b15 	stw	r2,44(sp)
1001d6c0:	29400210 	cmplti	r5,r5,8
1001d6c4:	2800081e 	bne	r5,zero,1001d6e8 <___vfiprintf_internal_r+0x8c8>
1001d6c8:	10001426 	beq	r2,zero,1001d71c <___vfiprintf_internal_r+0x8fc>
1001d6cc:	d9800904 	addi	r6,sp,36
1001d6d0:	900b883a 	mov	r5,r18
1001d6d4:	9809883a 	mov	r4,r19
1001d6d8:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d6dc:	103ea31e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d6e0:	d8800b17 	ldw	r2,44(sp)
1001d6e4:	8807883a 	mov	r3,r17
1001d6e8:	a500010c 	andi	r20,r20,4
1001d6ec:	a0000226 	beq	r20,zero,1001d6f8 <___vfiprintf_internal_r+0x8d8>
1001d6f0:	8569c83a 	sub	r20,r16,r21
1001d6f4:	05000f16 	blt	zero,r20,1001d734 <___vfiprintf_internal_r+0x914>
1001d6f8:	8540010e 	bge	r16,r21,1001d700 <___vfiprintf_internal_r+0x8e0>
1001d6fc:	a821883a 	mov	r16,r21
1001d700:	d8c00017 	ldw	r3,0(sp)
1001d704:	1c07883a 	add	r3,r3,r16
1001d708:	d8c00015 	stw	r3,0(sp)
1001d70c:	10013f1e 	bne	r2,zero,1001dc0c <___vfiprintf_internal_r+0xdec>
1001d710:	d8000a15 	stw	zero,40(sp)
1001d714:	8811883a 	mov	r8,r17
1001d718:	003dea06 	br	1001cec4 <___vfiprintf_internal_r+0xa4>
1001d71c:	d8000a15 	stw	zero,40(sp)
1001d720:	a500010c 	andi	r20,r20,4
1001d724:	a0019d26 	beq	r20,zero,1001dd9c <___vfiprintf_internal_r+0xf7c>
1001d728:	8569c83a 	sub	r20,r16,r21
1001d72c:	05019b0e 	bge	zero,r20,1001dd9c <___vfiprintf_internal_r+0xf7c>
1001d730:	8807883a 	mov	r3,r17
1001d734:	a1000450 	cmplti	r4,r20,17
1001d738:	01c400b4 	movhi	r7,4098
1001d73c:	d9400a17 	ldw	r5,40(sp)
1001d740:	20026c1e 	bne	r4,zero,1001e0f4 <___vfiprintf_internal_r+0x12d4>
1001d744:	39d79004 	addi	r7,r7,24128
1001d748:	05800404 	movi	r22,16
1001d74c:	00000606 	br	1001d768 <___vfiprintf_internal_r+0x948>
1001d750:	29800084 	addi	r6,r5,2
1001d754:	18c00204 	addi	r3,r3,8
1001d758:	200b883a 	mov	r5,r4
1001d75c:	a53ffc04 	addi	r20,r20,-16
1001d760:	a1000448 	cmpgei	r4,r20,17
1001d764:	20001726 	beq	r4,zero,1001d7c4 <___vfiprintf_internal_r+0x9a4>
1001d768:	29000044 	addi	r4,r5,1
1001d76c:	10800404 	addi	r2,r2,16
1001d770:	19c00015 	stw	r7,0(r3)
1001d774:	1d800115 	stw	r22,4(r3)
1001d778:	d8800b15 	stw	r2,44(sp)
1001d77c:	d9000a15 	stw	r4,40(sp)
1001d780:	21800208 	cmpgei	r6,r4,8
1001d784:	303ff226 	beq	r6,zero,1001d750 <___vfiprintf_internal_r+0x930>
1001d788:	d9800904 	addi	r6,sp,36
1001d78c:	900b883a 	mov	r5,r18
1001d790:	9809883a 	mov	r4,r19
1001d794:	1000a226 	beq	r2,zero,1001da20 <___vfiprintf_internal_r+0xc00>
1001d798:	d9c00115 	stw	r7,4(sp)
1001d79c:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d7a0:	103e721e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d7a4:	d9400a17 	ldw	r5,40(sp)
1001d7a8:	a53ffc04 	addi	r20,r20,-16
1001d7ac:	a1000448 	cmpgei	r4,r20,17
1001d7b0:	d8800b17 	ldw	r2,44(sp)
1001d7b4:	8807883a 	mov	r3,r17
1001d7b8:	29800044 	addi	r6,r5,1
1001d7bc:	d9c00117 	ldw	r7,4(sp)
1001d7c0:	203fe91e 	bne	r4,zero,1001d768 <___vfiprintf_internal_r+0x948>
1001d7c4:	1505883a 	add	r2,r2,r20
1001d7c8:	d9800a15 	stw	r6,40(sp)
1001d7cc:	19c00015 	stw	r7,0(r3)
1001d7d0:	1d000115 	stw	r20,4(r3)
1001d7d4:	d8800b15 	stw	r2,44(sp)
1001d7d8:	31800210 	cmplti	r6,r6,8
1001d7dc:	303fc61e 	bne	r6,zero,1001d6f8 <___vfiprintf_internal_r+0x8d8>
1001d7e0:	10016e26 	beq	r2,zero,1001dd9c <___vfiprintf_internal_r+0xf7c>
1001d7e4:	d9800904 	addi	r6,sp,36
1001d7e8:	900b883a 	mov	r5,r18
1001d7ec:	9809883a 	mov	r4,r19
1001d7f0:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001d7f4:	103e5d1e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001d7f8:	d8800b17 	ldw	r2,44(sp)
1001d7fc:	003fbe06 	br	1001d6f8 <___vfiprintf_internal_r+0x8d8>
1001d800:	29403fcc 	andi	r5,r5,255
1001d804:	28022c1e 	bne	r5,zero,1001e0b8 <___vfiprintf_internal_r+0x1298>
1001d808:	6080080c 	andi	r2,r12,32
1001d80c:	63000414 	ori	r12,r12,16
1001d810:	10005b1e 	bne	r2,zero,1001d980 <___vfiprintf_internal_r+0xb60>
1001d814:	d8800317 	ldw	r2,12(sp)
1001d818:	10800104 	addi	r2,r2,4
1001d81c:	d8c00317 	ldw	r3,12(sp)
1001d820:	002d883a 	mov	r22,zero
1001d824:	d8800315 	stw	r2,12(sp)
1001d828:	1d400017 	ldw	r21,0(r3)
1001d82c:	0005883a 	mov	r2,zero
1001d830:	003ed406 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d834:	29403fcc 	andi	r5,r5,255
1001d838:	2802211e 	bne	r5,zero,1001e0c0 <___vfiprintf_internal_r+0x12a0>
1001d83c:	6080080c 	andi	r2,r12,32
1001d840:	63000414 	ori	r12,r12,16
1001d844:	1000401e 	bne	r2,zero,1001d948 <___vfiprintf_internal_r+0xb28>
1001d848:	d8800317 	ldw	r2,12(sp)
1001d84c:	10800104 	addi	r2,r2,4
1001d850:	d8c00317 	ldw	r3,12(sp)
1001d854:	002d883a 	mov	r22,zero
1001d858:	d8800315 	stw	r2,12(sp)
1001d85c:	1d400017 	ldw	r21,0(r3)
1001d860:	00800044 	movi	r2,1
1001d864:	003ec706 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d868:	29403fcc 	andi	r5,r5,255
1001d86c:	28021f1e 	bne	r5,zero,1001e0ec <___vfiprintf_internal_r+0x12cc>
1001d870:	6080080c 	andi	r2,r12,32
1001d874:	63000414 	ori	r12,r12,16
1001d878:	10003a1e 	bne	r2,zero,1001d964 <___vfiprintf_internal_r+0xb44>
1001d87c:	d8800317 	ldw	r2,12(sp)
1001d880:	10800104 	addi	r2,r2,4
1001d884:	d8c00317 	ldw	r3,12(sp)
1001d888:	1d400017 	ldw	r21,0(r3)
1001d88c:	d8800315 	stw	r2,12(sp)
1001d890:	a82dd7fa 	srai	r22,r21,31
1001d894:	b005883a 	mov	r2,r22
1001d898:	103f340e 	bge	r2,zero,1001d56c <___vfiprintf_internal_r+0x74c>
1001d89c:	056bc83a 	sub	r21,zero,r21
1001d8a0:	a804c03a 	cmpne	r2,r21,zero
1001d8a4:	05adc83a 	sub	r22,zero,r22
1001d8a8:	b0adc83a 	sub	r22,r22,r2
1001d8ac:	00800b44 	movi	r2,45
1001d8b0:	d8800845 	stb	r2,33(sp)
1001d8b4:	48ffffe0 	cmpeqi	r3,r9,-1
1001d8b8:	03400b44 	movi	r13,45
1001d8bc:	00800044 	movi	r2,1
1001d8c0:	183eb426 	beq	r3,zero,1001d394 <___vfiprintf_internal_r+0x574>
1001d8c4:	10c00060 	cmpeqi	r3,r2,1
1001d8c8:	1800341e 	bne	r3,zero,1001d99c <___vfiprintf_internal_r+0xb7c>
1001d8cc:	108000a0 	cmpeqi	r2,r2,2
1001d8d0:	1000431e 	bne	r2,zero,1001d9e0 <___vfiprintf_internal_r+0xbc0>
1001d8d4:	8807883a 	mov	r3,r17
1001d8d8:	00000106 	br	1001d8e0 <___vfiprintf_internal_r+0xac0>
1001d8dc:	b807883a 	mov	r3,r23
1001d8e0:	a808d0fa 	srli	r4,r21,3
1001d8e4:	b00a977a 	slli	r5,r22,29
1001d8e8:	b02cd0fa 	srli	r22,r22,3
1001d8ec:	ad4001cc 	andi	r21,r21,7
1001d8f0:	a8800c04 	addi	r2,r21,48
1001d8f4:	292ab03a 	or	r21,r5,r4
1001d8f8:	18bfffc5 	stb	r2,-1(r3)
1001d8fc:	ad88b03a 	or	r4,r21,r22
1001d900:	1dffffc4 	addi	r23,r3,-1
1001d904:	203ff51e 	bne	r4,zero,1001d8dc <___vfiprintf_internal_r+0xabc>
1001d908:	6100004c 	andi	r4,r12,1
1001d90c:	20004126 	beq	r4,zero,1001da14 <___vfiprintf_internal_r+0xbf4>
1001d910:	10803fcc 	andi	r2,r2,255
1001d914:	1080201c 	xori	r2,r2,128
1001d918:	10bfe004 	addi	r2,r2,-128
1001d91c:	10800c18 	cmpnei	r2,r2,48
1001d920:	10003c26 	beq	r2,zero,1001da14 <___vfiprintf_internal_r+0xbf4>
1001d924:	18ffff84 	addi	r3,r3,-2
1001d928:	00800c04 	movi	r2,48
1001d92c:	b8bfffc5 	stb	r2,-1(r23)
1001d930:	88edc83a 	sub	r22,r17,r3
1001d934:	6029883a 	mov	r20,r12
1001d938:	182f883a 	mov	r23,r3
1001d93c:	00001f06 	br	1001d9bc <___vfiprintf_internal_r+0xb9c>
1001d940:	001a9a00 	call	1001a9a0 <__sinit>
1001d944:	003d4806 	br	1001ce68 <___vfiprintf_internal_r+0x48>
1001d948:	d8c00317 	ldw	r3,12(sp)
1001d94c:	00800044 	movi	r2,1
1001d950:	1d400017 	ldw	r21,0(r3)
1001d954:	1d800117 	ldw	r22,4(r3)
1001d958:	18c00204 	addi	r3,r3,8
1001d95c:	d8c00315 	stw	r3,12(sp)
1001d960:	003e8806 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d964:	d8c00317 	ldw	r3,12(sp)
1001d968:	18800117 	ldw	r2,4(r3)
1001d96c:	1d400017 	ldw	r21,0(r3)
1001d970:	18c00204 	addi	r3,r3,8
1001d974:	d8c00315 	stw	r3,12(sp)
1001d978:	102d883a 	mov	r22,r2
1001d97c:	003efa06 	br	1001d568 <___vfiprintf_internal_r+0x748>
1001d980:	d8c00317 	ldw	r3,12(sp)
1001d984:	0005883a 	mov	r2,zero
1001d988:	1d400017 	ldw	r21,0(r3)
1001d98c:	1d800117 	ldw	r22,4(r3)
1001d990:	18c00204 	addi	r3,r3,8
1001d994:	d8c00315 	stw	r3,12(sp)
1001d998:	003e7a06 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001d99c:	b0016a1e 	bne	r22,zero,1001df48 <___vfiprintf_internal_r+0x1128>
1001d9a0:	a88002a8 	cmpgeui	r2,r21,10
1001d9a4:	1001681e 	bne	r2,zero,1001df48 <___vfiprintf_internal_r+0x1128>
1001d9a8:	ad400c04 	addi	r21,r21,48
1001d9ac:	dd4015c5 	stb	r21,87(sp)
1001d9b0:	6029883a 	mov	r20,r12
1001d9b4:	05800044 	movi	r22,1
1001d9b8:	ddc015c4 	addi	r23,sp,87
1001d9bc:	482b883a 	mov	r21,r9
1001d9c0:	4d80010e 	bge	r9,r22,1001d9c8 <___vfiprintf_internal_r+0xba8>
1001d9c4:	b02b883a 	mov	r21,r22
1001d9c8:	6b403fcc 	andi	r13,r13,255
1001d9cc:	6b40201c 	xori	r13,r13,128
1001d9d0:	6b7fe004 	addi	r13,r13,-128
1001d9d4:	683efd26 	beq	r13,zero,1001d5cc <___vfiprintf_internal_r+0x7ac>
1001d9d8:	ad400044 	addi	r21,r21,1
1001d9dc:	003efb06 	br	1001d5cc <___vfiprintf_internal_r+0x7ac>
1001d9e0:	882f883a 	mov	r23,r17
1001d9e4:	d9000417 	ldw	r4,16(sp)
1001d9e8:	a88003cc 	andi	r2,r21,15
1001d9ec:	b006973a 	slli	r3,r22,28
1001d9f0:	2085883a 	add	r2,r4,r2
1001d9f4:	a82ad13a 	srli	r21,r21,4
1001d9f8:	10800003 	ldbu	r2,0(r2)
1001d9fc:	b02cd13a 	srli	r22,r22,4
1001da00:	bdffffc4 	addi	r23,r23,-1
1001da04:	1d6ab03a 	or	r21,r3,r21
1001da08:	b8800005 	stb	r2,0(r23)
1001da0c:	ad84b03a 	or	r2,r21,r22
1001da10:	103ff41e 	bne	r2,zero,1001d9e4 <___vfiprintf_internal_r+0xbc4>
1001da14:	8dedc83a 	sub	r22,r17,r23
1001da18:	6029883a 	mov	r20,r12
1001da1c:	003fe706 	br	1001d9bc <___vfiprintf_internal_r+0xb9c>
1001da20:	01800044 	movi	r6,1
1001da24:	000b883a 	mov	r5,zero
1001da28:	8807883a 	mov	r3,r17
1001da2c:	003f4b06 	br	1001d75c <___vfiprintf_internal_r+0x93c>
1001da30:	8559c83a 	sub	r12,r16,r21
1001da34:	033f1b0e 	bge	zero,r12,1001d6a4 <___vfiprintf_internal_r+0x884>
1001da38:	61800450 	cmplti	r6,r12,17
1001da3c:	01c400b4 	movhi	r7,4098
1001da40:	3001af1e 	bne	r6,zero,1001e100 <___vfiprintf_internal_r+0x12e0>
1001da44:	39d78c04 	addi	r7,r7,24112
1001da48:	03400404 	movi	r13,16
1001da4c:	00000606 	br	1001da68 <___vfiprintf_internal_r+0xc48>
1001da50:	21800084 	addi	r6,r4,2
1001da54:	42000204 	addi	r8,r8,8
1001da58:	1809883a 	mov	r4,r3
1001da5c:	633ffc04 	addi	r12,r12,-16
1001da60:	60c00448 	cmpgei	r3,r12,17
1001da64:	18001c26 	beq	r3,zero,1001dad8 <___vfiprintf_internal_r+0xcb8>
1001da68:	20c00044 	addi	r3,r4,1
1001da6c:	10800404 	addi	r2,r2,16
1001da70:	41c00015 	stw	r7,0(r8)
1001da74:	43400115 	stw	r13,4(r8)
1001da78:	d8800b15 	stw	r2,44(sp)
1001da7c:	d8c00a15 	stw	r3,40(sp)
1001da80:	19400208 	cmpgei	r5,r3,8
1001da84:	283ff226 	beq	r5,zero,1001da50 <___vfiprintf_internal_r+0xc30>
1001da88:	d9800904 	addi	r6,sp,36
1001da8c:	900b883a 	mov	r5,r18
1001da90:	9809883a 	mov	r4,r19
1001da94:	10006326 	beq	r2,zero,1001dc24 <___vfiprintf_internal_r+0xe04>
1001da98:	d9c00515 	stw	r7,20(sp)
1001da9c:	db000215 	stw	r12,8(sp)
1001daa0:	da400115 	stw	r9,4(sp)
1001daa4:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001daa8:	103db01e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001daac:	db000217 	ldw	r12,8(sp)
1001dab0:	d9000a17 	ldw	r4,40(sp)
1001dab4:	d8800b17 	ldw	r2,44(sp)
1001dab8:	633ffc04 	addi	r12,r12,-16
1001dabc:	60c00448 	cmpgei	r3,r12,17
1001dac0:	8811883a 	mov	r8,r17
1001dac4:	21800044 	addi	r6,r4,1
1001dac8:	d9c00517 	ldw	r7,20(sp)
1001dacc:	03400404 	movi	r13,16
1001dad0:	da400117 	ldw	r9,4(sp)
1001dad4:	183fe41e 	bne	r3,zero,1001da68 <___vfiprintf_internal_r+0xc48>
1001dad8:	43400204 	addi	r13,r8,8
1001dadc:	1305883a 	add	r2,r2,r12
1001dae0:	41c00015 	stw	r7,0(r8)
1001dae4:	43000115 	stw	r12,4(r8)
1001dae8:	d8800b15 	stw	r2,44(sp)
1001daec:	d9800a15 	stw	r6,40(sp)
1001daf0:	30c00208 	cmpgei	r3,r6,8
1001daf4:	1800e226 	beq	r3,zero,1001de80 <___vfiprintf_internal_r+0x1060>
1001daf8:	10015726 	beq	r2,zero,1001e058 <___vfiprintf_internal_r+0x1238>
1001dafc:	d9800904 	addi	r6,sp,36
1001db00:	900b883a 	mov	r5,r18
1001db04:	9809883a 	mov	r4,r19
1001db08:	da400115 	stw	r9,4(sp)
1001db0c:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001db10:	103d961e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001db14:	da400117 	ldw	r9,4(sp)
1001db18:	d9000a17 	ldw	r4,40(sp)
1001db1c:	d8800b17 	ldw	r2,44(sp)
1001db20:	4d93c83a 	sub	r9,r9,r22
1001db24:	d8c01804 	addi	r3,sp,96
1001db28:	21400044 	addi	r5,r4,1
1001db2c:	8811883a 	mov	r8,r17
1001db30:	027ede0e 	bge	zero,r9,1001d6ac <___vfiprintf_internal_r+0x88c>
1001db34:	49800450 	cmplti	r6,r9,17
1001db38:	01c400b4 	movhi	r7,4098
1001db3c:	3001431e 	bne	r6,zero,1001e04c <___vfiprintf_internal_r+0x122c>
1001db40:	39d78c04 	addi	r7,r7,24112
1001db44:	03000404 	movi	r12,16
1001db48:	00000606 	br	1001db64 <___vfiprintf_internal_r+0xd44>
1001db4c:	21400084 	addi	r5,r4,2
1001db50:	42000204 	addi	r8,r8,8
1001db54:	1809883a 	mov	r4,r3
1001db58:	4a7ffc04 	addi	r9,r9,-16
1001db5c:	48c00448 	cmpgei	r3,r9,17
1001db60:	18001a26 	beq	r3,zero,1001dbcc <___vfiprintf_internal_r+0xdac>
1001db64:	20c00044 	addi	r3,r4,1
1001db68:	10800404 	addi	r2,r2,16
1001db6c:	41c00015 	stw	r7,0(r8)
1001db70:	43000115 	stw	r12,4(r8)
1001db74:	d8800b15 	stw	r2,44(sp)
1001db78:	d8c00a15 	stw	r3,40(sp)
1001db7c:	19400208 	cmpgei	r5,r3,8
1001db80:	283ff226 	beq	r5,zero,1001db4c <___vfiprintf_internal_r+0xd2c>
1001db84:	d9800904 	addi	r6,sp,36
1001db88:	900b883a 	mov	r5,r18
1001db8c:	9809883a 	mov	r4,r19
1001db90:	10001a26 	beq	r2,zero,1001dbfc <___vfiprintf_internal_r+0xddc>
1001db94:	d9c00215 	stw	r7,8(sp)
1001db98:	da400115 	stw	r9,4(sp)
1001db9c:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001dba0:	103d721e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001dba4:	da400117 	ldw	r9,4(sp)
1001dba8:	d9000a17 	ldw	r4,40(sp)
1001dbac:	d8800b17 	ldw	r2,44(sp)
1001dbb0:	4a7ffc04 	addi	r9,r9,-16
1001dbb4:	48c00448 	cmpgei	r3,r9,17
1001dbb8:	8811883a 	mov	r8,r17
1001dbbc:	21400044 	addi	r5,r4,1
1001dbc0:	d9c00217 	ldw	r7,8(sp)
1001dbc4:	03000404 	movi	r12,16
1001dbc8:	183fe61e 	bne	r3,zero,1001db64 <___vfiprintf_internal_r+0xd44>
1001dbcc:	41000204 	addi	r4,r8,8
1001dbd0:	1245883a 	add	r2,r2,r9
1001dbd4:	41c00015 	stw	r7,0(r8)
1001dbd8:	42400115 	stw	r9,4(r8)
1001dbdc:	d8800b15 	stw	r2,44(sp)
1001dbe0:	d9400a15 	stw	r5,40(sp)
1001dbe4:	28c00208 	cmpgei	r3,r5,8
1001dbe8:	1800721e 	bne	r3,zero,1001ddb4 <___vfiprintf_internal_r+0xf94>
1001dbec:	29400044 	addi	r5,r5,1
1001dbf0:	20c00204 	addi	r3,r4,8
1001dbf4:	2011883a 	mov	r8,r4
1001dbf8:	003eac06 	br	1001d6ac <___vfiprintf_internal_r+0x88c>
1001dbfc:	01400044 	movi	r5,1
1001dc00:	0009883a 	mov	r4,zero
1001dc04:	8811883a 	mov	r8,r17
1001dc08:	003fd306 	br	1001db58 <___vfiprintf_internal_r+0xd38>
1001dc0c:	d9800904 	addi	r6,sp,36
1001dc10:	900b883a 	mov	r5,r18
1001dc14:	9809883a 	mov	r4,r19
1001dc18:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001dc1c:	103ebc26 	beq	r2,zero,1001d710 <___vfiprintf_internal_r+0x8f0>
1001dc20:	003d5206 	br	1001d16c <___vfiprintf_internal_r+0x34c>
1001dc24:	01800044 	movi	r6,1
1001dc28:	0009883a 	mov	r4,zero
1001dc2c:	8811883a 	mov	r8,r17
1001dc30:	003f8a06 	br	1001da5c <___vfiprintf_internal_r+0xc3c>
1001dc34:	10007026 	beq	r2,zero,1001ddf8 <___vfiprintf_internal_r+0xfd8>
1001dc38:	d9800904 	addi	r6,sp,36
1001dc3c:	900b883a 	mov	r5,r18
1001dc40:	9809883a 	mov	r4,r19
1001dc44:	da400515 	stw	r9,20(sp)
1001dc48:	db000215 	stw	r12,8(sp)
1001dc4c:	db400115 	stw	r13,4(sp)
1001dc50:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001dc54:	103d451e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001dc58:	d9000a17 	ldw	r4,40(sp)
1001dc5c:	d8800b17 	ldw	r2,44(sp)
1001dc60:	d8c01804 	addi	r3,sp,96
1001dc64:	21400044 	addi	r5,r4,1
1001dc68:	8811883a 	mov	r8,r17
1001dc6c:	da400517 	ldw	r9,20(sp)
1001dc70:	db000217 	ldw	r12,8(sp)
1001dc74:	db400117 	ldw	r13,4(sp)
1001dc78:	003e6f06 	br	1001d638 <___vfiprintf_internal_r+0x818>
1001dc7c:	d8800884 	addi	r2,sp,34
1001dc80:	d8801615 	stw	r2,88(sp)
1001dc84:	00800084 	movi	r2,2
1001dc88:	d8801715 	stw	r2,92(sp)
1001dc8c:	d8c01804 	addi	r3,sp,96
1001dc90:	01400044 	movi	r5,1
1001dc94:	1811883a 	mov	r8,r3
1001dc98:	2809883a 	mov	r4,r5
1001dc9c:	21400044 	addi	r5,r4,1
1001dca0:	40c00204 	addi	r3,r8,8
1001dca4:	003e7d06 	br	1001d69c <___vfiprintf_internal_r+0x87c>
1001dca8:	a019883a 	mov	r12,r20
1001dcac:	003f0506 	br	1001d8c4 <___vfiprintf_internal_r+0xaa4>
1001dcb0:	19400450 	cmplti	r5,r3,17
1001dcb4:	01c400b4 	movhi	r7,4098
1001dcb8:	2801031e 	bne	r5,zero,1001e0c8 <___vfiprintf_internal_r+0x12a8>
1001dcbc:	39d79004 	addi	r7,r7,24128
1001dcc0:	03800404 	movi	r14,16
1001dcc4:	00000706 	br	1001dce4 <___vfiprintf_internal_r+0xec4>
1001dcc8:	23c00084 	addi	r15,r4,2
1001dccc:	42000204 	addi	r8,r8,8
1001dcd0:	3009883a 	mov	r4,r6
1001dcd4:	18fffc04 	addi	r3,r3,-16
1001dcd8:	19400448 	cmpgei	r5,r3,17
1001dcdc:	28002026 	beq	r5,zero,1001dd60 <___vfiprintf_internal_r+0xf40>
1001dce0:	21800044 	addi	r6,r4,1
1001dce4:	10800404 	addi	r2,r2,16
1001dce8:	41c00015 	stw	r7,0(r8)
1001dcec:	43800115 	stw	r14,4(r8)
1001dcf0:	d8800b15 	stw	r2,44(sp)
1001dcf4:	d9800a15 	stw	r6,40(sp)
1001dcf8:	31400208 	cmpgei	r5,r6,8
1001dcfc:	283ff226 	beq	r5,zero,1001dcc8 <___vfiprintf_internal_r+0xea8>
1001dd00:	d9800904 	addi	r6,sp,36
1001dd04:	900b883a 	mov	r5,r18
1001dd08:	9809883a 	mov	r4,r19
1001dd0c:	10001f26 	beq	r2,zero,1001dd8c <___vfiprintf_internal_r+0xf6c>
1001dd10:	d9c00715 	stw	r7,28(sp)
1001dd14:	d8c00615 	stw	r3,24(sp)
1001dd18:	da400515 	stw	r9,20(sp)
1001dd1c:	db000215 	stw	r12,8(sp)
1001dd20:	db400115 	stw	r13,4(sp)
1001dd24:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001dd28:	103d101e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001dd2c:	d8c00617 	ldw	r3,24(sp)
1001dd30:	d9000a17 	ldw	r4,40(sp)
1001dd34:	d8800b17 	ldw	r2,44(sp)
1001dd38:	18fffc04 	addi	r3,r3,-16
1001dd3c:	19400448 	cmpgei	r5,r3,17
1001dd40:	8811883a 	mov	r8,r17
1001dd44:	23c00044 	addi	r15,r4,1
1001dd48:	d9c00717 	ldw	r7,28(sp)
1001dd4c:	03800404 	movi	r14,16
1001dd50:	da400517 	ldw	r9,20(sp)
1001dd54:	db000217 	ldw	r12,8(sp)
1001dd58:	db400117 	ldw	r13,4(sp)
1001dd5c:	283fe01e 	bne	r5,zero,1001dce0 <___vfiprintf_internal_r+0xec0>
1001dd60:	10c5883a 	add	r2,r2,r3
1001dd64:	40c00115 	stw	r3,4(r8)
1001dd68:	41c00015 	stw	r7,0(r8)
1001dd6c:	d8800b15 	stw	r2,44(sp)
1001dd70:	dbc00a15 	stw	r15,40(sp)
1001dd74:	78c00208 	cmpgei	r3,r15,8
1001dd78:	18002c1e 	bne	r3,zero,1001de2c <___vfiprintf_internal_r+0x100c>
1001dd7c:	42000204 	addi	r8,r8,8
1001dd80:	79400044 	addi	r5,r15,1
1001dd84:	7809883a 	mov	r4,r15
1001dd88:	003e1b06 	br	1001d5f8 <___vfiprintf_internal_r+0x7d8>
1001dd8c:	0009883a 	mov	r4,zero
1001dd90:	03c00044 	movi	r15,1
1001dd94:	8811883a 	mov	r8,r17
1001dd98:	003fce06 	br	1001dcd4 <___vfiprintf_internal_r+0xeb4>
1001dd9c:	8540010e 	bge	r16,r21,1001dda4 <___vfiprintf_internal_r+0xf84>
1001dda0:	a821883a 	mov	r16,r21
1001dda4:	d8800017 	ldw	r2,0(sp)
1001dda8:	1405883a 	add	r2,r2,r16
1001ddac:	d8800015 	stw	r2,0(sp)
1001ddb0:	003e5706 	br	1001d710 <___vfiprintf_internal_r+0x8f0>
1001ddb4:	10008126 	beq	r2,zero,1001dfbc <___vfiprintf_internal_r+0x119c>
1001ddb8:	d9800904 	addi	r6,sp,36
1001ddbc:	900b883a 	mov	r5,r18
1001ddc0:	9809883a 	mov	r4,r19
1001ddc4:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001ddc8:	103ce81e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001ddcc:	d9400a17 	ldw	r5,40(sp)
1001ddd0:	d8800b17 	ldw	r2,44(sp)
1001ddd4:	d8c01804 	addi	r3,sp,96
1001ddd8:	29400044 	addi	r5,r5,1
1001dddc:	8811883a 	mov	r8,r17
1001dde0:	003e3206 	br	1001d6ac <___vfiprintf_internal_r+0x88c>
1001dde4:	d8000a15 	stw	zero,40(sp)
1001dde8:	8811883a 	mov	r8,r17
1001ddec:	003c4e06 	br	1001cf28 <___vfiprintf_internal_r+0x108>
1001ddf0:	002d883a 	mov	r22,zero
1001ddf4:	003d4406 	br	1001d308 <___vfiprintf_internal_r+0x4e8>
1001ddf8:	68003326 	beq	r13,zero,1001dec8 <___vfiprintf_internal_r+0x10a8>
1001ddfc:	d8800884 	addi	r2,sp,34
1001de00:	d8801615 	stw	r2,88(sp)
1001de04:	00800084 	movi	r2,2
1001de08:	d8801715 	stw	r2,92(sp)
1001de0c:	da001804 	addi	r8,sp,96
1001de10:	01000044 	movi	r4,1
1001de14:	003fa106 	br	1001dc9c <___vfiprintf_internal_r+0xe7c>
1001de18:	d8c01804 	addi	r3,sp,96
1001de1c:	01400044 	movi	r5,1
1001de20:	0009883a 	mov	r4,zero
1001de24:	8811883a 	mov	r8,r17
1001de28:	003e1c06 	br	1001d69c <___vfiprintf_internal_r+0x87c>
1001de2c:	10003826 	beq	r2,zero,1001df10 <___vfiprintf_internal_r+0x10f0>
1001de30:	d9800904 	addi	r6,sp,36
1001de34:	900b883a 	mov	r5,r18
1001de38:	9809883a 	mov	r4,r19
1001de3c:	da400515 	stw	r9,20(sp)
1001de40:	db000215 	stw	r12,8(sp)
1001de44:	db400115 	stw	r13,4(sp)
1001de48:	001cd140 	call	1001cd14 <__sprint_r.part.0>
1001de4c:	103cc71e 	bne	r2,zero,1001d16c <___vfiprintf_internal_r+0x34c>
1001de50:	d9000a17 	ldw	r4,40(sp)
1001de54:	d8800b17 	ldw	r2,44(sp)
1001de58:	8811883a 	mov	r8,r17
1001de5c:	21400044 	addi	r5,r4,1
1001de60:	da400517 	ldw	r9,20(sp)
1001de64:	db000217 	ldw	r12,8(sp)
1001de68:	db400117 	ldw	r13,4(sp)
1001de6c:	003de206 	br	1001d5f8 <___vfiprintf_internal_r+0x7d8>
1001de70:	e029883a 	mov	r20,fp
1001de74:	003c3106 	br	1001cf3c <___vfiprintf_internal_r+0x11c>
1001de78:	882f883a 	mov	r23,r17
1001de7c:	003ecf06 	br	1001d9bc <___vfiprintf_internal_r+0xb9c>
1001de80:	31400044 	addi	r5,r6,1
1001de84:	68c00204 	addi	r3,r13,8
1001de88:	3009883a 	mov	r4,r6
1001de8c:	6811883a 	mov	r8,r13
1001de90:	003e0406 	br	1001d6a4 <___vfiprintf_internal_r+0x884>
1001de94:	00c00c04 	movi	r3,48
1001de98:	d88008c5 	stb	r2,35(sp)
1001de9c:	d8c00885 	stb	r3,34(sp)
1001dea0:	63000094 	ori	r12,r12,2
1001dea4:	00800084 	movi	r2,2
1001dea8:	003d3606 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001deac:	d9400017 	ldw	r5,0(sp)
1001deb0:	20800017 	ldw	r2,0(r4)
1001deb4:	d8c00315 	stw	r3,12(sp)
1001deb8:	2809d7fa 	srai	r4,r5,31
1001debc:	11400015 	stw	r5,0(r2)
1001dec0:	11000115 	stw	r4,4(r2)
1001dec4:	003bff06 	br	1001cec4 <___vfiprintf_internal_r+0xa4>
1001dec8:	0009883a 	mov	r4,zero
1001decc:	d8c01804 	addi	r3,sp,96
1001ded0:	01400044 	movi	r5,1
1001ded4:	8811883a 	mov	r8,r17
1001ded8:	003df006 	br	1001d69c <___vfiprintf_internal_r+0x87c>
1001dedc:	0421c83a 	sub	r16,zero,r16
1001dee0:	ddc00315 	stw	r23,12(sp)
1001dee4:	003cdb06 	br	1001d254 <___vfiprintf_internal_r+0x434>
1001dee8:	b809883a 	mov	r4,r23
1001deec:	da000215 	stw	r8,8(sp)
1001def0:	db000115 	stw	r12,4(sp)
1001def4:	00163ac0 	call	100163ac <strlen>
1001def8:	102d883a 	mov	r22,r2
1001defc:	102b883a 	mov	r21,r2
1001df00:	dd000315 	stw	r20,12(sp)
1001df04:	db000117 	ldw	r12,4(sp)
1001df08:	da000217 	ldw	r8,8(sp)
1001df0c:	003dad06 	br	1001d5c4 <___vfiprintf_internal_r+0x7a4>
1001df10:	d8c00847 	ldb	r3,33(sp)
1001df14:	1800551e 	bne	r3,zero,1001e06c <___vfiprintf_internal_r+0x124c>
1001df18:	683f581e 	bne	r13,zero,1001dc7c <___vfiprintf_internal_r+0xe5c>
1001df1c:	0009883a 	mov	r4,zero
1001df20:	d8c01804 	addi	r3,sp,96
1001df24:	01400044 	movi	r5,1
1001df28:	8811883a 	mov	r8,r17
1001df2c:	003ddd06 	br	1001d6a4 <___vfiprintf_internal_r+0x884>
1001df30:	d8800317 	ldw	r2,12(sp)
1001df34:	10800017 	ldw	r2,0(r2)
1001df38:	d8c00315 	stw	r3,12(sp)
1001df3c:	d8c00017 	ldw	r3,0(sp)
1001df40:	10c00015 	stw	r3,0(r2)
1001df44:	003bdf06 	br	1001cec4 <___vfiprintf_internal_r+0xa4>
1001df48:	882f883a 	mov	r23,r17
1001df4c:	00000206 	br	1001df58 <___vfiprintf_internal_r+0x1138>
1001df50:	102b883a 	mov	r21,r2
1001df54:	182d883a 	mov	r22,r3
1001df58:	a809883a 	mov	r4,r21
1001df5c:	b00b883a 	mov	r5,r22
1001df60:	01800284 	movi	r6,10
1001df64:	000f883a 	mov	r7,zero
1001df68:	db400615 	stw	r13,24(sp)
1001df6c:	da000515 	stw	r8,20(sp)
1001df70:	da400215 	stw	r9,8(sp)
1001df74:	db000115 	stw	r12,4(sp)
1001df78:	001eed40 	call	1001eed4 <__umoddi3>
1001df7c:	10800c04 	addi	r2,r2,48
1001df80:	bdffffc4 	addi	r23,r23,-1
1001df84:	a809883a 	mov	r4,r21
1001df88:	b00b883a 	mov	r5,r22
1001df8c:	b8800005 	stb	r2,0(r23)
1001df90:	01800284 	movi	r6,10
1001df94:	000f883a 	mov	r7,zero
1001df98:	001e93c0 	call	1001e93c <__udivdi3>
1001df9c:	db000117 	ldw	r12,4(sp)
1001dfa0:	da400217 	ldw	r9,8(sp)
1001dfa4:	da000517 	ldw	r8,20(sp)
1001dfa8:	db400617 	ldw	r13,24(sp)
1001dfac:	b03fe81e 	bne	r22,zero,1001df50 <___vfiprintf_internal_r+0x1130>
1001dfb0:	ad4002a8 	cmpgeui	r21,r21,10
1001dfb4:	a83fe61e 	bne	r21,zero,1001df50 <___vfiprintf_internal_r+0x1130>
1001dfb8:	003e9606 	br	1001da14 <___vfiprintf_internal_r+0xbf4>
1001dfbc:	00c00044 	movi	r3,1
1001dfc0:	d8c00a15 	stw	r3,40(sp)
1001dfc4:	b005883a 	mov	r2,r22
1001dfc8:	ddc01615 	stw	r23,88(sp)
1001dfcc:	dd801715 	stw	r22,92(sp)
1001dfd0:	dd800b15 	stw	r22,44(sp)
1001dfd4:	d8c01804 	addi	r3,sp,96
1001dfd8:	003dc306 	br	1001d6e8 <___vfiprintf_internal_r+0x8c8>
1001dfdc:	10c00060 	cmpeqi	r3,r2,1
1001dfe0:	a019883a 	mov	r12,r20
1001dfe4:	183e3926 	beq	r3,zero,1001d8cc <___vfiprintf_internal_r+0xaac>
1001dfe8:	003e6f06 	br	1001d9a8 <___vfiprintf_internal_r+0xb88>
1001dfec:	e0800043 	ldbu	r2,1(fp)
1001dff0:	63000814 	ori	r12,r12,32
1001dff4:	e7000044 	addi	fp,fp,1
1001dff8:	10803fcc 	andi	r2,r2,255
1001dffc:	1080201c 	xori	r2,r2,128
1001e000:	10bfe004 	addi	r2,r2,-128
1001e004:	003bd506 	br	1001cf5c <___vfiprintf_internal_r+0x13c>
1001e008:	488001f0 	cmpltui	r2,r9,7
1001e00c:	482d883a 	mov	r22,r9
1001e010:	1000011e 	bne	r2,zero,1001e018 <___vfiprintf_internal_r+0x11f8>
1001e014:	05800184 	movi	r22,6
1001e018:	05c400b4 	movhi	r23,4098
1001e01c:	b02b883a 	mov	r21,r22
1001e020:	dd000315 	stw	r20,12(sp)
1001e024:	bdd69404 	addi	r23,r23,23120
1001e028:	003d6606 	br	1001d5c4 <___vfiprintf_internal_r+0x7a4>
1001e02c:	d8800315 	stw	r2,12(sp)
1001e030:	002d883a 	mov	r22,zero
1001e034:	00800044 	movi	r2,1
1001e038:	003cd206 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001e03c:	d8800315 	stw	r2,12(sp)
1001e040:	002d883a 	mov	r22,zero
1001e044:	0005883a 	mov	r2,zero
1001e048:	003cce06 	br	1001d384 <___vfiprintf_internal_r+0x564>
1001e04c:	1809883a 	mov	r4,r3
1001e050:	39d78c04 	addi	r7,r7,24112
1001e054:	003ede06 	br	1001dbd0 <___vfiprintf_internal_r+0xdb0>
1001e058:	d8c01804 	addi	r3,sp,96
1001e05c:	01400044 	movi	r5,1
1001e060:	0009883a 	mov	r4,zero
1001e064:	8811883a 	mov	r8,r17
1001e068:	003d8e06 	br	1001d6a4 <___vfiprintf_internal_r+0x884>
1001e06c:	d8800844 	addi	r2,sp,33
1001e070:	d8801615 	stw	r2,88(sp)
1001e074:	00800044 	movi	r2,1
1001e078:	d8801715 	stw	r2,92(sp)
1001e07c:	d8c01804 	addi	r3,sp,96
1001e080:	01400044 	movi	r5,1
1001e084:	003d6806 	br	1001d628 <___vfiprintf_internal_r+0x808>
1001e088:	d9800845 	stb	r6,33(sp)
1001e08c:	003c5506 	br	1001d1e4 <___vfiprintf_internal_r+0x3c4>
1001e090:	482b883a 	mov	r21,r9
1001e094:	dd000315 	stw	r20,12(sp)
1001e098:	482d883a 	mov	r22,r9
1001e09c:	003d4906 	br	1001d5c4 <___vfiprintf_internal_r+0x7a4>
1001e0a0:	d9800845 	stb	r6,33(sp)
1001e0a4:	003cd906 	br	1001d40c <___vfiprintf_internal_r+0x5ec>
1001e0a8:	d9800845 	stb	r6,33(sp)
1001e0ac:	003ce906 	br	1001d454 <___vfiprintf_internal_r+0x634>
1001e0b0:	d9800845 	stb	r6,33(sp)
1001e0b4:	003c8a06 	br	1001d2e0 <___vfiprintf_internal_r+0x4c0>
1001e0b8:	d9800845 	stb	r6,33(sp)
1001e0bc:	003dd206 	br	1001d808 <___vfiprintf_internal_r+0x9e8>
1001e0c0:	d9800845 	stb	r6,33(sp)
1001e0c4:	003ddd06 	br	1001d83c <___vfiprintf_internal_r+0xa1c>
1001e0c8:	301f883a 	mov	r15,r6
1001e0cc:	39d79004 	addi	r7,r7,24128
1001e0d0:	003f2306 	br	1001dd60 <___vfiprintf_internal_r+0xf40>
1001e0d4:	d9800845 	stb	r6,33(sp)
1001e0d8:	003d1606 	br	1001d534 <___vfiprintf_internal_r+0x714>
1001e0dc:	d9800845 	stb	r6,33(sp)
1001e0e0:	003d0406 	br	1001d4f4 <___vfiprintf_internal_r+0x6d4>
1001e0e4:	d9800845 	stb	r6,33(sp)
1001e0e8:	003cb806 	br	1001d3cc <___vfiprintf_internal_r+0x5ac>
1001e0ec:	d9800845 	stb	r6,33(sp)
1001e0f0:	003ddf06 	br	1001d870 <___vfiprintf_internal_r+0xa50>
1001e0f4:	29800044 	addi	r6,r5,1
1001e0f8:	39d79004 	addi	r7,r7,24128
1001e0fc:	003db106 	br	1001d7c4 <___vfiprintf_internal_r+0x9a4>
1001e100:	181b883a 	mov	r13,r3
1001e104:	280d883a 	mov	r6,r5
1001e108:	39d78c04 	addi	r7,r7,24112
1001e10c:	003e7306 	br	1001dadc <___vfiprintf_internal_r+0xcbc>
1001e110:	00bfffc4 	movi	r2,-1
1001e114:	d8800015 	stw	r2,0(sp)
1001e118:	003c1706 	br	1001d178 <___vfiprintf_internal_r+0x358>
1001e11c:	d8800317 	ldw	r2,12(sp)
1001e120:	12400017 	ldw	r9,0(r2)
1001e124:	15c00104 	addi	r23,r2,4
1001e128:	4800010e 	bge	r9,zero,1001e130 <___vfiprintf_internal_r+0x1310>
1001e12c:	027fffc4 	movi	r9,-1
1001e130:	e0800043 	ldbu	r2,1(fp)
1001e134:	ddc00315 	stw	r23,12(sp)
1001e138:	2039883a 	mov	fp,r4
1001e13c:	10803fcc 	andi	r2,r2,255
1001e140:	1080201c 	xori	r2,r2,128
1001e144:	10bfe004 	addi	r2,r2,-128
1001e148:	003b8406 	br	1001cf5c <___vfiprintf_internal_r+0x13c>

1001e14c <__vfiprintf_internal>:
1001e14c:	008400f4 	movhi	r2,4099
1001e150:	300f883a 	mov	r7,r6
1001e154:	280d883a 	mov	r6,r5
1001e158:	200b883a 	mov	r5,r4
1001e15c:	11211717 	ldw	r4,-31652(r2)
1001e160:	001ce201 	jmpi	1001ce20 <___vfiprintf_internal_r>

1001e164 <__sbprintf>:
1001e164:	2880030b 	ldhu	r2,12(r5)
1001e168:	2b001917 	ldw	r12,100(r5)
1001e16c:	2ac0038b 	ldhu	r11,14(r5)
1001e170:	2a800717 	ldw	r10,28(r5)
1001e174:	2a400917 	ldw	r9,36(r5)
1001e178:	defee204 	addi	sp,sp,-1144
1001e17c:	da001a04 	addi	r8,sp,104
1001e180:	00c10004 	movi	r3,1024
1001e184:	dc011a15 	stw	r16,1128(sp)
1001e188:	10bfff4c 	andi	r2,r2,65533
1001e18c:	2821883a 	mov	r16,r5
1001e190:	d80b883a 	mov	r5,sp
1001e194:	dc811c15 	stw	r18,1136(sp)
1001e198:	dc411b15 	stw	r17,1132(sp)
1001e19c:	dfc11d15 	stw	ra,1140(sp)
1001e1a0:	2025883a 	mov	r18,r4
1001e1a4:	d880030d 	sth	r2,12(sp)
1001e1a8:	db001915 	stw	r12,100(sp)
1001e1ac:	dac0038d 	sth	r11,14(sp)
1001e1b0:	da800715 	stw	r10,28(sp)
1001e1b4:	da400915 	stw	r9,36(sp)
1001e1b8:	da000015 	stw	r8,0(sp)
1001e1bc:	da000415 	stw	r8,16(sp)
1001e1c0:	d8c00215 	stw	r3,8(sp)
1001e1c4:	d8c00515 	stw	r3,20(sp)
1001e1c8:	d8000615 	stw	zero,24(sp)
1001e1cc:	001ce200 	call	1001ce20 <___vfiprintf_internal_r>
1001e1d0:	1023883a 	mov	r17,r2
1001e1d4:	10000d0e 	bge	r2,zero,1001e20c <__sbprintf+0xa8>
1001e1d8:	d880030b 	ldhu	r2,12(sp)
1001e1dc:	1080100c 	andi	r2,r2,64
1001e1e0:	10000326 	beq	r2,zero,1001e1f0 <__sbprintf+0x8c>
1001e1e4:	8080030b 	ldhu	r2,12(r16)
1001e1e8:	10801014 	ori	r2,r2,64
1001e1ec:	8080030d 	sth	r2,12(r16)
1001e1f0:	8805883a 	mov	r2,r17
1001e1f4:	dfc11d17 	ldw	ra,1140(sp)
1001e1f8:	dc811c17 	ldw	r18,1136(sp)
1001e1fc:	dc411b17 	ldw	r17,1132(sp)
1001e200:	dc011a17 	ldw	r16,1128(sp)
1001e204:	dec11e04 	addi	sp,sp,1144
1001e208:	f800283a 	ret
1001e20c:	d80b883a 	mov	r5,sp
1001e210:	9009883a 	mov	r4,r18
1001e214:	001a61c0 	call	1001a61c <_fflush_r>
1001e218:	103fef26 	beq	r2,zero,1001e1d8 <__sbprintf+0x74>
1001e21c:	047fffc4 	movi	r17,-1
1001e220:	003fed06 	br	1001e1d8 <__sbprintf+0x74>

1001e224 <__swbuf_r>:
1001e224:	defffb04 	addi	sp,sp,-20
1001e228:	dc800215 	stw	r18,8(sp)
1001e22c:	dc400115 	stw	r17,4(sp)
1001e230:	dc000015 	stw	r16,0(sp)
1001e234:	dfc00415 	stw	ra,16(sp)
1001e238:	dcc00315 	stw	r19,12(sp)
1001e23c:	2023883a 	mov	r17,r4
1001e240:	2825883a 	mov	r18,r5
1001e244:	3021883a 	mov	r16,r6
1001e248:	20000226 	beq	r4,zero,1001e254 <__swbuf_r+0x30>
1001e24c:	20800e17 	ldw	r2,56(r4)
1001e250:	10003e26 	beq	r2,zero,1001e34c <__swbuf_r+0x128>
1001e254:	80800617 	ldw	r2,24(r16)
1001e258:	80c0030b 	ldhu	r3,12(r16)
1001e25c:	80800215 	stw	r2,8(r16)
1001e260:	1880020c 	andi	r2,r3,8
1001e264:	10001f26 	beq	r2,zero,1001e2e4 <__swbuf_r+0xc0>
1001e268:	80800417 	ldw	r2,16(r16)
1001e26c:	10001d26 	beq	r2,zero,1001e2e4 <__swbuf_r+0xc0>
1001e270:	1908000c 	andi	r4,r3,8192
1001e274:	94c03fcc 	andi	r19,r18,255
1001e278:	20002326 	beq	r4,zero,1001e308 <__swbuf_r+0xe4>
1001e27c:	80c00017 	ldw	r3,0(r16)
1001e280:	81000517 	ldw	r4,20(r16)
1001e284:	1885c83a 	sub	r2,r3,r2
1001e288:	1100290e 	bge	r2,r4,1001e330 <__swbuf_r+0x10c>
1001e28c:	10800044 	addi	r2,r2,1
1001e290:	81000217 	ldw	r4,8(r16)
1001e294:	19400044 	addi	r5,r3,1
1001e298:	81400015 	stw	r5,0(r16)
1001e29c:	213fffc4 	addi	r4,r4,-1
1001e2a0:	81000215 	stw	r4,8(r16)
1001e2a4:	1c800005 	stb	r18,0(r3)
1001e2a8:	80c00517 	ldw	r3,20(r16)
1001e2ac:	18802926 	beq	r3,r2,1001e354 <__swbuf_r+0x130>
1001e2b0:	8080030b 	ldhu	r2,12(r16)
1001e2b4:	1080004c 	andi	r2,r2,1
1001e2b8:	10000226 	beq	r2,zero,1001e2c4 <__swbuf_r+0xa0>
1001e2bc:	98800298 	cmpnei	r2,r19,10
1001e2c0:	10002426 	beq	r2,zero,1001e354 <__swbuf_r+0x130>
1001e2c4:	9805883a 	mov	r2,r19
1001e2c8:	dfc00417 	ldw	ra,16(sp)
1001e2cc:	dcc00317 	ldw	r19,12(sp)
1001e2d0:	dc800217 	ldw	r18,8(sp)
1001e2d4:	dc400117 	ldw	r17,4(sp)
1001e2d8:	dc000017 	ldw	r16,0(sp)
1001e2dc:	dec00504 	addi	sp,sp,20
1001e2e0:	f800283a 	ret
1001e2e4:	800b883a 	mov	r5,r16
1001e2e8:	8809883a 	mov	r4,r17
1001e2ec:	00189640 	call	10018964 <__swsetup_r>
1001e2f0:	10001c1e 	bne	r2,zero,1001e364 <__swbuf_r+0x140>
1001e2f4:	80c0030b 	ldhu	r3,12(r16)
1001e2f8:	80800417 	ldw	r2,16(r16)
1001e2fc:	94c03fcc 	andi	r19,r18,255
1001e300:	1908000c 	andi	r4,r3,8192
1001e304:	203fdd1e 	bne	r4,zero,1001e27c <__swbuf_r+0x58>
1001e308:	81001917 	ldw	r4,100(r16)
1001e30c:	18c80014 	ori	r3,r3,8192
1001e310:	0177ffc4 	movi	r5,-8193
1001e314:	2148703a 	and	r4,r4,r5
1001e318:	80c0030d 	sth	r3,12(r16)
1001e31c:	80c00017 	ldw	r3,0(r16)
1001e320:	81001915 	stw	r4,100(r16)
1001e324:	81000517 	ldw	r4,20(r16)
1001e328:	1885c83a 	sub	r2,r3,r2
1001e32c:	113fd716 	blt	r2,r4,1001e28c <__swbuf_r+0x68>
1001e330:	800b883a 	mov	r5,r16
1001e334:	8809883a 	mov	r4,r17
1001e338:	001a61c0 	call	1001a61c <_fflush_r>
1001e33c:	1000091e 	bne	r2,zero,1001e364 <__swbuf_r+0x140>
1001e340:	80c00017 	ldw	r3,0(r16)
1001e344:	00800044 	movi	r2,1
1001e348:	003fd106 	br	1001e290 <__swbuf_r+0x6c>
1001e34c:	001a9a00 	call	1001a9a0 <__sinit>
1001e350:	003fc006 	br	1001e254 <__swbuf_r+0x30>
1001e354:	800b883a 	mov	r5,r16
1001e358:	8809883a 	mov	r4,r17
1001e35c:	001a61c0 	call	1001a61c <_fflush_r>
1001e360:	103fd826 	beq	r2,zero,1001e2c4 <__swbuf_r+0xa0>
1001e364:	04ffffc4 	movi	r19,-1
1001e368:	003fd606 	br	1001e2c4 <__swbuf_r+0xa0>

1001e36c <__swbuf>:
1001e36c:	008400f4 	movhi	r2,4099
1001e370:	280d883a 	mov	r6,r5
1001e374:	200b883a 	mov	r5,r4
1001e378:	11211717 	ldw	r4,-31652(r2)
1001e37c:	001e2241 	jmpi	1001e224 <__swbuf_r>

1001e380 <_calloc_r>:
1001e380:	298b383a 	mul	r5,r5,r6
1001e384:	deffff04 	addi	sp,sp,-4
1001e388:	dfc00015 	stw	ra,0(sp)
1001e38c:	0014d880 	call	10014d88 <_malloc_r>
1001e390:	1007883a 	mov	r3,r2
1001e394:	10000c26 	beq	r2,zero,1001e3c8 <_calloc_r+0x48>
1001e398:	11bfff17 	ldw	r6,-4(r2)
1001e39c:	00bfff04 	movi	r2,-4
1001e3a0:	308c703a 	and	r6,r6,r2
1001e3a4:	31bfff04 	addi	r6,r6,-4
1001e3a8:	30800968 	cmpgeui	r2,r6,37
1001e3ac:	1000141e 	bne	r2,zero,1001e400 <_calloc_r+0x80>
1001e3b0:	30800530 	cmpltui	r2,r6,20
1001e3b4:	10000826 	beq	r2,zero,1001e3d8 <_calloc_r+0x58>
1001e3b8:	1805883a 	mov	r2,r3
1001e3bc:	10000015 	stw	zero,0(r2)
1001e3c0:	10000115 	stw	zero,4(r2)
1001e3c4:	10000215 	stw	zero,8(r2)
1001e3c8:	1805883a 	mov	r2,r3
1001e3cc:	dfc00017 	ldw	ra,0(sp)
1001e3d0:	dec00104 	addi	sp,sp,4
1001e3d4:	f800283a 	ret
1001e3d8:	18000015 	stw	zero,0(r3)
1001e3dc:	18000115 	stw	zero,4(r3)
1001e3e0:	30800728 	cmpgeui	r2,r6,28
1001e3e4:	10000e26 	beq	r2,zero,1001e420 <_calloc_r+0xa0>
1001e3e8:	18000215 	stw	zero,8(r3)
1001e3ec:	18000315 	stw	zero,12(r3)
1001e3f0:	31800920 	cmpeqi	r6,r6,36
1001e3f4:	30000c1e 	bne	r6,zero,1001e428 <_calloc_r+0xa8>
1001e3f8:	18800404 	addi	r2,r3,16
1001e3fc:	003fef06 	br	1001e3bc <_calloc_r+0x3c>
1001e400:	1809883a 	mov	r4,r3
1001e404:	000b883a 	mov	r5,zero
1001e408:	001591c0 	call	1001591c <memset>
1001e40c:	1007883a 	mov	r3,r2
1001e410:	1805883a 	mov	r2,r3
1001e414:	dfc00017 	ldw	ra,0(sp)
1001e418:	dec00104 	addi	sp,sp,4
1001e41c:	f800283a 	ret
1001e420:	18800204 	addi	r2,r3,8
1001e424:	003fe506 	br	1001e3bc <_calloc_r+0x3c>
1001e428:	18000415 	stw	zero,16(r3)
1001e42c:	18800604 	addi	r2,r3,24
1001e430:	18000515 	stw	zero,20(r3)
1001e434:	003fe106 	br	1001e3bc <_calloc_r+0x3c>

1001e438 <_fclose_r>:
1001e438:	defffc04 	addi	sp,sp,-16
1001e43c:	dfc00315 	stw	ra,12(sp)
1001e440:	dc800215 	stw	r18,8(sp)
1001e444:	dc400115 	stw	r17,4(sp)
1001e448:	dc000015 	stw	r16,0(sp)
1001e44c:	28000726 	beq	r5,zero,1001e46c <_fclose_r+0x34>
1001e450:	2023883a 	mov	r17,r4
1001e454:	2821883a 	mov	r16,r5
1001e458:	20000226 	beq	r4,zero,1001e464 <_fclose_r+0x2c>
1001e45c:	20800e17 	ldw	r2,56(r4)
1001e460:	10002726 	beq	r2,zero,1001e500 <_fclose_r+0xc8>
1001e464:	8080030f 	ldh	r2,12(r16)
1001e468:	1000081e 	bne	r2,zero,1001e48c <_fclose_r+0x54>
1001e46c:	0025883a 	mov	r18,zero
1001e470:	9005883a 	mov	r2,r18
1001e474:	dfc00317 	ldw	ra,12(sp)
1001e478:	dc800217 	ldw	r18,8(sp)
1001e47c:	dc400117 	ldw	r17,4(sp)
1001e480:	dc000017 	ldw	r16,0(sp)
1001e484:	dec00404 	addi	sp,sp,16
1001e488:	f800283a 	ret
1001e48c:	800b883a 	mov	r5,r16
1001e490:	8809883a 	mov	r4,r17
1001e494:	001a3f40 	call	1001a3f4 <__sflush_r>
1001e498:	1025883a 	mov	r18,r2
1001e49c:	80800b17 	ldw	r2,44(r16)
1001e4a0:	10000426 	beq	r2,zero,1001e4b4 <_fclose_r+0x7c>
1001e4a4:	81400717 	ldw	r5,28(r16)
1001e4a8:	8809883a 	mov	r4,r17
1001e4ac:	103ee83a 	callr	r2
1001e4b0:	10001716 	blt	r2,zero,1001e510 <_fclose_r+0xd8>
1001e4b4:	8080030b 	ldhu	r2,12(r16)
1001e4b8:	1080200c 	andi	r2,r2,128
1001e4bc:	1000181e 	bne	r2,zero,1001e520 <_fclose_r+0xe8>
1001e4c0:	81400c17 	ldw	r5,48(r16)
1001e4c4:	28000526 	beq	r5,zero,1001e4dc <_fclose_r+0xa4>
1001e4c8:	80801004 	addi	r2,r16,64
1001e4cc:	28800226 	beq	r5,r2,1001e4d8 <_fclose_r+0xa0>
1001e4d0:	8809883a 	mov	r4,r17
1001e4d4:	001aba80 	call	1001aba8 <_free_r>
1001e4d8:	80000c15 	stw	zero,48(r16)
1001e4dc:	81401117 	ldw	r5,68(r16)
1001e4e0:	28000326 	beq	r5,zero,1001e4f0 <_fclose_r+0xb8>
1001e4e4:	8809883a 	mov	r4,r17
1001e4e8:	001aba80 	call	1001aba8 <_free_r>
1001e4ec:	80001115 	stw	zero,68(r16)
1001e4f0:	001a9b00 	call	1001a9b0 <__sfp_lock_acquire>
1001e4f4:	8000030d 	sth	zero,12(r16)
1001e4f8:	001a9b40 	call	1001a9b4 <__sfp_lock_release>
1001e4fc:	003fdc06 	br	1001e470 <_fclose_r+0x38>
1001e500:	001a9a00 	call	1001a9a0 <__sinit>
1001e504:	8080030f 	ldh	r2,12(r16)
1001e508:	103fd826 	beq	r2,zero,1001e46c <_fclose_r+0x34>
1001e50c:	003fdf06 	br	1001e48c <_fclose_r+0x54>
1001e510:	8080030b 	ldhu	r2,12(r16)
1001e514:	04bfffc4 	movi	r18,-1
1001e518:	1080200c 	andi	r2,r2,128
1001e51c:	103fe826 	beq	r2,zero,1001e4c0 <_fclose_r+0x88>
1001e520:	81400417 	ldw	r5,16(r16)
1001e524:	8809883a 	mov	r4,r17
1001e528:	001aba80 	call	1001aba8 <_free_r>
1001e52c:	003fe406 	br	1001e4c0 <_fclose_r+0x88>

1001e530 <fclose>:
1001e530:	008400f4 	movhi	r2,4099
1001e534:	200b883a 	mov	r5,r4
1001e538:	11211717 	ldw	r4,-31652(r2)
1001e53c:	001e4381 	jmpi	1001e438 <_fclose_r>

1001e540 <__fputwc>:
1001e540:	defff904 	addi	sp,sp,-28
1001e544:	dcc00415 	stw	r19,16(sp)
1001e548:	dc800315 	stw	r18,12(sp)
1001e54c:	dc000115 	stw	r16,4(sp)
1001e550:	dfc00615 	stw	ra,24(sp)
1001e554:	dd000515 	stw	r20,20(sp)
1001e558:	dc400215 	stw	r17,8(sp)
1001e55c:	2025883a 	mov	r18,r4
1001e560:	2827883a 	mov	r19,r5
1001e564:	3021883a 	mov	r16,r6
1001e568:	001e7a00 	call	1001e7a0 <__locale_mb_cur_max>
1001e56c:	10800058 	cmpnei	r2,r2,1
1001e570:	1000071e 	bne	r2,zero,1001e590 <__fputwc+0x50>
1001e574:	98bfffc4 	addi	r2,r19,-1
1001e578:	10803fe8 	cmpgeui	r2,r2,255
1001e57c:	1000041e 	bne	r2,zero,1001e590 <__fputwc+0x50>
1001e580:	980b883a 	mov	r5,r19
1001e584:	dcc000c5 	stb	r19,3(sp)
1001e588:	05000044 	movi	r20,1
1001e58c:	00000a06 	br	1001e5b8 <__fputwc+0x78>
1001e590:	81c01704 	addi	r7,r16,92
1001e594:	980d883a 	mov	r6,r19
1001e598:	d94000c4 	addi	r5,sp,3
1001e59c:	9009883a 	mov	r4,r18
1001e5a0:	001e8100 	call	1001e810 <_wcrtomb_r>
1001e5a4:	1029883a 	mov	r20,r2
1001e5a8:	10bfffd8 	cmpnei	r2,r2,-1
1001e5ac:	10003426 	beq	r2,zero,1001e680 <__fputwc+0x140>
1001e5b0:	a0002926 	beq	r20,zero,1001e658 <__fputwc+0x118>
1001e5b4:	d94000c3 	ldbu	r5,3(sp)
1001e5b8:	0023883a 	mov	r17,zero
1001e5bc:	00000a06 	br	1001e5e8 <__fputwc+0xa8>
1001e5c0:	80800017 	ldw	r2,0(r16)
1001e5c4:	11400005 	stb	r5,0(r2)
1001e5c8:	80800017 	ldw	r2,0(r16)
1001e5cc:	10800044 	addi	r2,r2,1
1001e5d0:	80800015 	stw	r2,0(r16)
1001e5d4:	8c400044 	addi	r17,r17,1
1001e5d8:	d88000c4 	addi	r2,sp,3
1001e5dc:	1445883a 	add	r2,r2,r17
1001e5e0:	8d001d2e 	bgeu	r17,r20,1001e658 <__fputwc+0x118>
1001e5e4:	11400003 	ldbu	r5,0(r2)
1001e5e8:	80800217 	ldw	r2,8(r16)
1001e5ec:	10bfffc4 	addi	r2,r2,-1
1001e5f0:	80800215 	stw	r2,8(r16)
1001e5f4:	103ff20e 	bge	r2,zero,1001e5c0 <__fputwc+0x80>
1001e5f8:	80c00617 	ldw	r3,24(r16)
1001e5fc:	10c01016 	blt	r2,r3,1001e640 <__fputwc+0x100>
1001e600:	80800017 	ldw	r2,0(r16)
1001e604:	11400005 	stb	r5,0(r2)
1001e608:	80800017 	ldw	r2,0(r16)
1001e60c:	10c00003 	ldbu	r3,0(r2)
1001e610:	10800044 	addi	r2,r2,1
1001e614:	18c002a0 	cmpeqi	r3,r3,10
1001e618:	183fed26 	beq	r3,zero,1001e5d0 <__fputwc+0x90>
1001e61c:	800d883a 	mov	r6,r16
1001e620:	01400284 	movi	r5,10
1001e624:	9009883a 	mov	r4,r18
1001e628:	001e2240 	call	1001e224 <__swbuf_r>
1001e62c:	10bfffe0 	cmpeqi	r2,r2,-1
1001e630:	10803fcc 	andi	r2,r2,255
1001e634:	103fe726 	beq	r2,zero,1001e5d4 <__fputwc+0x94>
1001e638:	053fffc4 	movi	r20,-1
1001e63c:	00000706 	br	1001e65c <__fputwc+0x11c>
1001e640:	29403fcc 	andi	r5,r5,255
1001e644:	800d883a 	mov	r6,r16
1001e648:	9009883a 	mov	r4,r18
1001e64c:	001e2240 	call	1001e224 <__swbuf_r>
1001e650:	10bfffe0 	cmpeqi	r2,r2,-1
1001e654:	003ff606 	br	1001e630 <__fputwc+0xf0>
1001e658:	9829883a 	mov	r20,r19
1001e65c:	a005883a 	mov	r2,r20
1001e660:	dfc00617 	ldw	ra,24(sp)
1001e664:	dd000517 	ldw	r20,20(sp)
1001e668:	dcc00417 	ldw	r19,16(sp)
1001e66c:	dc800317 	ldw	r18,12(sp)
1001e670:	dc400217 	ldw	r17,8(sp)
1001e674:	dc000117 	ldw	r16,4(sp)
1001e678:	dec00704 	addi	sp,sp,28
1001e67c:	f800283a 	ret
1001e680:	8080030b 	ldhu	r2,12(r16)
1001e684:	10801014 	ori	r2,r2,64
1001e688:	8080030d 	sth	r2,12(r16)
1001e68c:	003ff306 	br	1001e65c <__fputwc+0x11c>

1001e690 <_fputwc_r>:
1001e690:	3080030b 	ldhu	r2,12(r6)
1001e694:	10c8000c 	andi	r3,r2,8192
1001e698:	1800051e 	bne	r3,zero,1001e6b0 <_fputwc_r+0x20>
1001e69c:	30c01917 	ldw	r3,100(r6)
1001e6a0:	10880014 	ori	r2,r2,8192
1001e6a4:	3080030d 	sth	r2,12(r6)
1001e6a8:	18880014 	ori	r2,r3,8192
1001e6ac:	30801915 	stw	r2,100(r6)
1001e6b0:	001e5401 	jmpi	1001e540 <__fputwc>

1001e6b4 <fputwc>:
1001e6b4:	defffc04 	addi	sp,sp,-16
1001e6b8:	008400f4 	movhi	r2,4099
1001e6bc:	dc000115 	stw	r16,4(sp)
1001e6c0:	14211717 	ldw	r16,-31652(r2)
1001e6c4:	dc400215 	stw	r17,8(sp)
1001e6c8:	dfc00315 	stw	ra,12(sp)
1001e6cc:	2023883a 	mov	r17,r4
1001e6d0:	80000226 	beq	r16,zero,1001e6dc <fputwc+0x28>
1001e6d4:	80800e17 	ldw	r2,56(r16)
1001e6d8:	10001026 	beq	r2,zero,1001e71c <fputwc+0x68>
1001e6dc:	2880030b 	ldhu	r2,12(r5)
1001e6e0:	10c8000c 	andi	r3,r2,8192
1001e6e4:	1800051e 	bne	r3,zero,1001e6fc <fputwc+0x48>
1001e6e8:	28c01917 	ldw	r3,100(r5)
1001e6ec:	10880014 	ori	r2,r2,8192
1001e6f0:	2880030d 	sth	r2,12(r5)
1001e6f4:	18880014 	ori	r2,r3,8192
1001e6f8:	28801915 	stw	r2,100(r5)
1001e6fc:	280d883a 	mov	r6,r5
1001e700:	8009883a 	mov	r4,r16
1001e704:	880b883a 	mov	r5,r17
1001e708:	dfc00317 	ldw	ra,12(sp)
1001e70c:	dc400217 	ldw	r17,8(sp)
1001e710:	dc000117 	ldw	r16,4(sp)
1001e714:	dec00404 	addi	sp,sp,16
1001e718:	001e5401 	jmpi	1001e540 <__fputwc>
1001e71c:	8009883a 	mov	r4,r16
1001e720:	d9400015 	stw	r5,0(sp)
1001e724:	001a9a00 	call	1001a9a0 <__sinit>
1001e728:	d9400017 	ldw	r5,0(sp)
1001e72c:	003feb06 	br	1001e6dc <fputwc+0x28>

1001e730 <_setlocale_r>:
1001e730:	30001826 	beq	r6,zero,1001e794 <_setlocale_r+0x64>
1001e734:	014400b4 	movhi	r5,4098
1001e738:	defffe04 	addi	sp,sp,-8
1001e73c:	29579504 	addi	r5,r5,24148
1001e740:	3009883a 	mov	r4,r6
1001e744:	dc000015 	stw	r16,0(sp)
1001e748:	dfc00115 	stw	ra,4(sp)
1001e74c:	3021883a 	mov	r16,r6
1001e750:	00162d40 	call	100162d4 <strcmp>
1001e754:	1000061e 	bne	r2,zero,1001e770 <_setlocale_r+0x40>
1001e758:	008400b4 	movhi	r2,4098
1001e75c:	10979404 	addi	r2,r2,24144
1001e760:	dfc00117 	ldw	ra,4(sp)
1001e764:	dc000017 	ldw	r16,0(sp)
1001e768:	dec00204 	addi	sp,sp,8
1001e76c:	f800283a 	ret
1001e770:	014400b4 	movhi	r5,4098
1001e774:	29579404 	addi	r5,r5,24144
1001e778:	8009883a 	mov	r4,r16
1001e77c:	00162d40 	call	100162d4 <strcmp>
1001e780:	103ff526 	beq	r2,zero,1001e758 <_setlocale_r+0x28>
1001e784:	80800003 	ldbu	r2,0(r16)
1001e788:	103ff326 	beq	r2,zero,1001e758 <_setlocale_r+0x28>
1001e78c:	0005883a 	mov	r2,zero
1001e790:	003ff306 	br	1001e760 <_setlocale_r+0x30>
1001e794:	008400b4 	movhi	r2,4098
1001e798:	10979404 	addi	r2,r2,24144
1001e79c:	f800283a 	ret

1001e7a0 <__locale_mb_cur_max>:
1001e7a0:	008400b4 	movhi	r2,4098
1001e7a4:	109c7307 	ldb	r2,29132(r2)
1001e7a8:	f800283a 	ret

1001e7ac <setlocale>:
1001e7ac:	008400f4 	movhi	r2,4099
1001e7b0:	280d883a 	mov	r6,r5
1001e7b4:	200b883a 	mov	r5,r4
1001e7b8:	11211717 	ldw	r4,-31652(r2)
1001e7bc:	001e7301 	jmpi	1001e730 <_setlocale_r>

1001e7c0 <_mbtowc_r>:
1001e7c0:	008400b4 	movhi	r2,4098
1001e7c4:	109c6217 	ldw	r2,29064(r2)
1001e7c8:	1000683a 	jmp	r2

1001e7cc <__ascii_mbtowc>:
1001e7cc:	deffff04 	addi	sp,sp,-4
1001e7d0:	28000826 	beq	r5,zero,1001e7f4 <__ascii_mbtowc+0x28>
1001e7d4:	30000926 	beq	r6,zero,1001e7fc <__ascii_mbtowc+0x30>
1001e7d8:	38000b26 	beq	r7,zero,1001e808 <__ascii_mbtowc+0x3c>
1001e7dc:	30800003 	ldbu	r2,0(r6)
1001e7e0:	28800015 	stw	r2,0(r5)
1001e7e4:	30800003 	ldbu	r2,0(r6)
1001e7e8:	1004c03a 	cmpne	r2,r2,zero
1001e7ec:	dec00104 	addi	sp,sp,4
1001e7f0:	f800283a 	ret
1001e7f4:	d80b883a 	mov	r5,sp
1001e7f8:	303ff71e 	bne	r6,zero,1001e7d8 <__ascii_mbtowc+0xc>
1001e7fc:	0005883a 	mov	r2,zero
1001e800:	dec00104 	addi	sp,sp,4
1001e804:	f800283a 	ret
1001e808:	00bfff84 	movi	r2,-2
1001e80c:	003ff706 	br	1001e7ec <__ascii_mbtowc+0x20>

1001e810 <_wcrtomb_r>:
1001e810:	defffa04 	addi	sp,sp,-24
1001e814:	dc400415 	stw	r17,16(sp)
1001e818:	dc000315 	stw	r16,12(sp)
1001e81c:	008400b4 	movhi	r2,4098
1001e820:	dfc00515 	stw	ra,20(sp)
1001e824:	2021883a 	mov	r16,r4
1001e828:	3823883a 	mov	r17,r7
1001e82c:	109c6117 	ldw	r2,29060(r2)
1001e830:	28000826 	beq	r5,zero,1001e854 <_wcrtomb_r+0x44>
1001e834:	103ee83a 	callr	r2
1001e838:	10ffffd8 	cmpnei	r3,r2,-1
1001e83c:	18000a26 	beq	r3,zero,1001e868 <_wcrtomb_r+0x58>
1001e840:	dfc00517 	ldw	ra,20(sp)
1001e844:	dc400417 	ldw	r17,16(sp)
1001e848:	dc000317 	ldw	r16,12(sp)
1001e84c:	dec00604 	addi	sp,sp,24
1001e850:	f800283a 	ret
1001e854:	000d883a 	mov	r6,zero
1001e858:	d9400084 	addi	r5,sp,2
1001e85c:	103ee83a 	callr	r2
1001e860:	10ffffd8 	cmpnei	r3,r2,-1
1001e864:	183ff61e 	bne	r3,zero,1001e840 <_wcrtomb_r+0x30>
1001e868:	00802284 	movi	r2,138
1001e86c:	88000015 	stw	zero,0(r17)
1001e870:	80800015 	stw	r2,0(r16)
1001e874:	00bfffc4 	movi	r2,-1
1001e878:	003ff106 	br	1001e840 <_wcrtomb_r+0x30>

1001e87c <wcrtomb>:
1001e87c:	defffa04 	addi	sp,sp,-24
1001e880:	008400f4 	movhi	r2,4099
1001e884:	dc400415 	stw	r17,16(sp)
1001e888:	dc000315 	stw	r16,12(sp)
1001e88c:	dfc00515 	stw	ra,20(sp)
1001e890:	14211717 	ldw	r16,-31652(r2)
1001e894:	008400b4 	movhi	r2,4098
1001e898:	3023883a 	mov	r17,r6
1001e89c:	109c6117 	ldw	r2,29060(r2)
1001e8a0:	300f883a 	mov	r7,r6
1001e8a4:	20000b26 	beq	r4,zero,1001e8d4 <wcrtomb+0x58>
1001e8a8:	280d883a 	mov	r6,r5
1001e8ac:	200b883a 	mov	r5,r4
1001e8b0:	8009883a 	mov	r4,r16
1001e8b4:	103ee83a 	callr	r2
1001e8b8:	10ffffd8 	cmpnei	r3,r2,-1
1001e8bc:	18000b26 	beq	r3,zero,1001e8ec <wcrtomb+0x70>
1001e8c0:	dfc00517 	ldw	ra,20(sp)
1001e8c4:	dc400417 	ldw	r17,16(sp)
1001e8c8:	dc000317 	ldw	r16,12(sp)
1001e8cc:	dec00604 	addi	sp,sp,24
1001e8d0:	f800283a 	ret
1001e8d4:	000d883a 	mov	r6,zero
1001e8d8:	d9400084 	addi	r5,sp,2
1001e8dc:	8009883a 	mov	r4,r16
1001e8e0:	103ee83a 	callr	r2
1001e8e4:	10ffffd8 	cmpnei	r3,r2,-1
1001e8e8:	183ff51e 	bne	r3,zero,1001e8c0 <wcrtomb+0x44>
1001e8ec:	00802284 	movi	r2,138
1001e8f0:	88000015 	stw	zero,0(r17)
1001e8f4:	80800015 	stw	r2,0(r16)
1001e8f8:	00bfffc4 	movi	r2,-1
1001e8fc:	003ff006 	br	1001e8c0 <wcrtomb+0x44>

1001e900 <_wctomb_r>:
1001e900:	008400b4 	movhi	r2,4098
1001e904:	109c6117 	ldw	r2,29060(r2)
1001e908:	1000683a 	jmp	r2

1001e90c <__ascii_wctomb>:
1001e90c:	28000926 	beq	r5,zero,1001e934 <__ascii_wctomb+0x28>
1001e910:	30804030 	cmpltui	r2,r6,256
1001e914:	10000326 	beq	r2,zero,1001e924 <__ascii_wctomb+0x18>
1001e918:	29800005 	stb	r6,0(r5)
1001e91c:	00800044 	movi	r2,1
1001e920:	f800283a 	ret
1001e924:	00802284 	movi	r2,138
1001e928:	20800015 	stw	r2,0(r4)
1001e92c:	00bfffc4 	movi	r2,-1
1001e930:	f800283a 	ret
1001e934:	0005883a 	mov	r2,zero
1001e938:	f800283a 	ret

1001e93c <__udivdi3>:
1001e93c:	defff504 	addi	sp,sp,-44
1001e940:	dd400615 	stw	r21,24(sp)
1001e944:	dc000115 	stw	r16,4(sp)
1001e948:	dfc00a15 	stw	ra,40(sp)
1001e94c:	df000915 	stw	fp,36(sp)
1001e950:	ddc00815 	stw	r23,32(sp)
1001e954:	dd800715 	stw	r22,28(sp)
1001e958:	dd000515 	stw	r20,20(sp)
1001e95c:	dcc00415 	stw	r19,16(sp)
1001e960:	dc800315 	stw	r18,12(sp)
1001e964:	dc400215 	stw	r17,8(sp)
1001e968:	202b883a 	mov	r21,r4
1001e96c:	2821883a 	mov	r16,r5
1001e970:	3800821e 	bne	r7,zero,1001eb7c <__udivdi3+0x240>
1001e974:	3827883a 	mov	r19,r7
1001e978:	3023883a 	mov	r17,r6
1001e97c:	2025883a 	mov	r18,r4
1001e980:	29803d2e 	bgeu	r5,r6,1001ea78 <__udivdi3+0x13c>
1001e984:	00bfffd4 	movui	r2,65535
1001e988:	282d883a 	mov	r22,r5
1001e98c:	1180a52e 	bgeu	r2,r6,1001ec24 <__udivdi3+0x2e8>
1001e990:	00804034 	movhi	r2,256
1001e994:	30813836 	bltu	r6,r2,1001ee78 <__udivdi3+0x53c>
1001e998:	3006d63a 	srli	r3,r6,24
1001e99c:	04c00604 	movi	r19,24
1001e9a0:	008400b4 	movhi	r2,4098
1001e9a4:	1885883a 	add	r2,r3,r2
1001e9a8:	10979803 	ldbu	r2,24160(r2)
1001e9ac:	14e7883a 	add	r19,r2,r19
1001e9b0:	00800804 	movi	r2,32
1001e9b4:	14c5c83a 	sub	r2,r2,r19
1001e9b8:	10000526 	beq	r2,zero,1001e9d0 <__udivdi3+0x94>
1001e9bc:	80a0983a 	sll	r16,r16,r2
1001e9c0:	ace6d83a 	srl	r19,r21,r19
1001e9c4:	30a2983a 	sll	r17,r6,r2
1001e9c8:	a8a4983a 	sll	r18,r21,r2
1001e9cc:	9c2cb03a 	or	r22,r19,r16
1001e9d0:	882ad43a 	srli	r21,r17,16
1001e9d4:	b009883a 	mov	r4,r22
1001e9d8:	8d3fffcc 	andi	r20,r17,65535
1001e9dc:	a80b883a 	mov	r5,r21
1001e9e0:	00140080 	call	10014008 <__umodsi3>
1001e9e4:	a80b883a 	mov	r5,r21
1001e9e8:	b009883a 	mov	r4,r22
1001e9ec:	1027883a 	mov	r19,r2
1001e9f0:	0013fa40 	call	10013fa4 <__udivsi3>
1001e9f4:	1021883a 	mov	r16,r2
1001e9f8:	9826943a 	slli	r19,r19,16
1001e9fc:	9004d43a 	srli	r2,r18,16
1001ea00:	a407383a 	mul	r3,r20,r16
1001ea04:	9884b03a 	or	r2,r19,r2
1001ea08:	10c0052e 	bgeu	r2,r3,1001ea20 <__udivdi3+0xe4>
1001ea0c:	1445883a 	add	r2,r2,r17
1001ea10:	813fffc4 	addi	r4,r16,-1
1001ea14:	14400136 	bltu	r2,r17,1001ea1c <__udivdi3+0xe0>
1001ea18:	10c12836 	bltu	r2,r3,1001eebc <__udivdi3+0x580>
1001ea1c:	2021883a 	mov	r16,r4
1001ea20:	10e7c83a 	sub	r19,r2,r3
1001ea24:	a80b883a 	mov	r5,r21
1001ea28:	9809883a 	mov	r4,r19
1001ea2c:	00140080 	call	10014008 <__umodsi3>
1001ea30:	102d883a 	mov	r22,r2
1001ea34:	a80b883a 	mov	r5,r21
1001ea38:	9809883a 	mov	r4,r19
1001ea3c:	0013fa40 	call	10013fa4 <__udivsi3>
1001ea40:	b02c943a 	slli	r22,r22,16
1001ea44:	a0a9383a 	mul	r20,r20,r2
1001ea48:	94bfffcc 	andi	r18,r18,65535
1001ea4c:	b4a4b03a 	or	r18,r22,r18
1001ea50:	9500052e 	bgeu	r18,r20,1001ea68 <__udivdi3+0x12c>
1001ea54:	8ca5883a 	add	r18,r17,r18
1001ea58:	10ffffc4 	addi	r3,r2,-1
1001ea5c:	94400136 	bltu	r18,r17,1001ea64 <__udivdi3+0x128>
1001ea60:	95011436 	bltu	r18,r20,1001eeb4 <__udivdi3+0x578>
1001ea64:	1805883a 	mov	r2,r3
1001ea68:	800c943a 	slli	r6,r16,16
1001ea6c:	0007883a 	mov	r3,zero
1001ea70:	3084b03a 	or	r2,r6,r2
1001ea74:	00005506 	br	1001ebcc <__udivdi3+0x290>
1001ea78:	3000041e 	bne	r6,zero,1001ea8c <__udivdi3+0x150>
1001ea7c:	000b883a 	mov	r5,zero
1001ea80:	01000044 	movi	r4,1
1001ea84:	0013fa40 	call	10013fa4 <__udivsi3>
1001ea88:	1023883a 	mov	r17,r2
1001ea8c:	00bfffd4 	movui	r2,65535
1001ea90:	14405f2e 	bgeu	r2,r17,1001ec10 <__udivdi3+0x2d4>
1001ea94:	00804034 	movhi	r2,256
1001ea98:	8880f436 	bltu	r17,r2,1001ee6c <__udivdi3+0x530>
1001ea9c:	8806d63a 	srli	r3,r17,24
1001eaa0:	04c00604 	movi	r19,24
1001eaa4:	008400b4 	movhi	r2,4098
1001eaa8:	1885883a 	add	r2,r3,r2
1001eaac:	10979803 	ldbu	r2,24160(r2)
1001eab0:	14e7883a 	add	r19,r2,r19
1001eab4:	00800804 	movi	r2,32
1001eab8:	14c5c83a 	sub	r2,r2,r19
1001eabc:	10005e1e 	bne	r2,zero,1001ec38 <__udivdi3+0x2fc>
1001eac0:	8828d43a 	srli	r20,r17,16
1001eac4:	8461c83a 	sub	r16,r16,r17
1001eac8:	8d7fffcc 	andi	r21,r17,65535
1001eacc:	00c00044 	movi	r3,1
1001ead0:	8009883a 	mov	r4,r16
1001ead4:	a00b883a 	mov	r5,r20
1001ead8:	d8c00015 	stw	r3,0(sp)
1001eadc:	00140080 	call	10014008 <__umodsi3>
1001eae0:	8009883a 	mov	r4,r16
1001eae4:	a00b883a 	mov	r5,r20
1001eae8:	1027883a 	mov	r19,r2
1001eaec:	0013fa40 	call	10013fa4 <__udivsi3>
1001eaf0:	1021883a 	mov	r16,r2
1001eaf4:	9826943a 	slli	r19,r19,16
1001eaf8:	9004d43a 	srli	r2,r18,16
1001eafc:	8549383a 	mul	r4,r16,r21
1001eb00:	d8c00017 	ldw	r3,0(sp)
1001eb04:	9884b03a 	or	r2,r19,r2
1001eb08:	1100052e 	bgeu	r2,r4,1001eb20 <__udivdi3+0x1e4>
1001eb0c:	1445883a 	add	r2,r2,r17
1001eb10:	817fffc4 	addi	r5,r16,-1
1001eb14:	14400136 	bltu	r2,r17,1001eb1c <__udivdi3+0x1e0>
1001eb18:	1100eb36 	bltu	r2,r4,1001eec8 <__udivdi3+0x58c>
1001eb1c:	2821883a 	mov	r16,r5
1001eb20:	1127c83a 	sub	r19,r2,r4
1001eb24:	a00b883a 	mov	r5,r20
1001eb28:	9809883a 	mov	r4,r19
1001eb2c:	d8c00015 	stw	r3,0(sp)
1001eb30:	00140080 	call	10014008 <__umodsi3>
1001eb34:	102d883a 	mov	r22,r2
1001eb38:	a00b883a 	mov	r5,r20
1001eb3c:	9809883a 	mov	r4,r19
1001eb40:	0013fa40 	call	10013fa4 <__udivsi3>
1001eb44:	b02c943a 	slli	r22,r22,16
1001eb48:	156b383a 	mul	r21,r2,r21
1001eb4c:	94bfffcc 	andi	r18,r18,65535
1001eb50:	b4a4b03a 	or	r18,r22,r18
1001eb54:	d8c00017 	ldw	r3,0(sp)
1001eb58:	9540052e 	bgeu	r18,r21,1001eb70 <__udivdi3+0x234>
1001eb5c:	8ca5883a 	add	r18,r17,r18
1001eb60:	113fffc4 	addi	r4,r2,-1
1001eb64:	94400136 	bltu	r18,r17,1001eb6c <__udivdi3+0x230>
1001eb68:	9540d036 	bltu	r18,r21,1001eeac <__udivdi3+0x570>
1001eb6c:	2005883a 	mov	r2,r4
1001eb70:	800c943a 	slli	r6,r16,16
1001eb74:	3084b03a 	or	r2,r6,r2
1001eb78:	00001406 	br	1001ebcc <__udivdi3+0x290>
1001eb7c:	29c01136 	bltu	r5,r7,1001ebc4 <__udivdi3+0x288>
1001eb80:	00bfffd4 	movui	r2,65535
1001eb84:	11c01d2e 	bgeu	r2,r7,1001ebfc <__udivdi3+0x2c0>
1001eb88:	00804034 	movhi	r2,256
1001eb8c:	3880ac36 	bltu	r7,r2,1001ee40 <__udivdi3+0x504>
1001eb90:	3806d63a 	srli	r3,r7,24
1001eb94:	01000604 	movi	r4,24
1001eb98:	008400b4 	movhi	r2,4098
1001eb9c:	1885883a 	add	r2,r3,r2
1001eba0:	10d79803 	ldbu	r3,24160(r2)
1001eba4:	05800804 	movi	r22,32
1001eba8:	1907883a 	add	r3,r3,r4
1001ebac:	b0edc83a 	sub	r22,r22,r3
1001ebb0:	b000531e 	bne	r22,zero,1001ed00 <__udivdi3+0x3c4>
1001ebb4:	3c00a536 	bltu	r7,r16,1001ee4c <__udivdi3+0x510>
1001ebb8:	a985403a 	cmpgeu	r2,r21,r6
1001ebbc:	0007883a 	mov	r3,zero
1001ebc0:	00000206 	br	1001ebcc <__udivdi3+0x290>
1001ebc4:	0007883a 	mov	r3,zero
1001ebc8:	0005883a 	mov	r2,zero
1001ebcc:	dfc00a17 	ldw	ra,40(sp)
1001ebd0:	df000917 	ldw	fp,36(sp)
1001ebd4:	ddc00817 	ldw	r23,32(sp)
1001ebd8:	dd800717 	ldw	r22,28(sp)
1001ebdc:	dd400617 	ldw	r21,24(sp)
1001ebe0:	dd000517 	ldw	r20,20(sp)
1001ebe4:	dcc00417 	ldw	r19,16(sp)
1001ebe8:	dc800317 	ldw	r18,12(sp)
1001ebec:	dc400217 	ldw	r17,8(sp)
1001ebf0:	dc000117 	ldw	r16,4(sp)
1001ebf4:	dec00b04 	addi	sp,sp,44
1001ebf8:	f800283a 	ret
1001ebfc:	38804030 	cmpltui	r2,r7,256
1001ec00:	1000951e 	bne	r2,zero,1001ee58 <__udivdi3+0x51c>
1001ec04:	3806d23a 	srli	r3,r7,8
1001ec08:	01000204 	movi	r4,8
1001ec0c:	003fe206 	br	1001eb98 <__udivdi3+0x25c>
1001ec10:	88804030 	cmpltui	r2,r17,256
1001ec14:	10009b1e 	bne	r2,zero,1001ee84 <__udivdi3+0x548>
1001ec18:	8806d23a 	srli	r3,r17,8
1001ec1c:	04c00204 	movi	r19,8
1001ec20:	003fa006 	br	1001eaa4 <__udivdi3+0x168>
1001ec24:	30804030 	cmpltui	r2,r6,256
1001ec28:	10008e1e 	bne	r2,zero,1001ee64 <__udivdi3+0x528>
1001ec2c:	3006d23a 	srli	r3,r6,8
1001ec30:	04c00204 	movi	r19,8
1001ec34:	003f5a06 	br	1001e9a0 <__udivdi3+0x64>
1001ec38:	88a2983a 	sll	r17,r17,r2
1001ec3c:	84ecd83a 	srl	r22,r16,r19
1001ec40:	80a0983a 	sll	r16,r16,r2
1001ec44:	8828d43a 	srli	r20,r17,16
1001ec48:	b009883a 	mov	r4,r22
1001ec4c:	ace6d83a 	srl	r19,r21,r19
1001ec50:	a00b883a 	mov	r5,r20
1001ec54:	a8a4983a 	sll	r18,r21,r2
1001ec58:	00140080 	call	10014008 <__umodsi3>
1001ec5c:	b009883a 	mov	r4,r22
1001ec60:	a00b883a 	mov	r5,r20
1001ec64:	9c26b03a 	or	r19,r19,r16
1001ec68:	1021883a 	mov	r16,r2
1001ec6c:	0013fa40 	call	10013fa4 <__udivsi3>
1001ec70:	102f883a 	mov	r23,r2
1001ec74:	8d7fffcc 	andi	r21,r17,65535
1001ec78:	8020943a 	slli	r16,r16,16
1001ec7c:	9804d43a 	srli	r2,r19,16
1001ec80:	aded383a 	mul	r22,r21,r23
1001ec84:	8084b03a 	or	r2,r16,r2
1001ec88:	1580062e 	bgeu	r2,r22,1001eca4 <__udivdi3+0x368>
1001ec8c:	1445883a 	add	r2,r2,r17
1001ec90:	b8ffffc4 	addi	r3,r23,-1
1001ec94:	14408336 	bltu	r2,r17,1001eea4 <__udivdi3+0x568>
1001ec98:	1580822e 	bgeu	r2,r22,1001eea4 <__udivdi3+0x568>
1001ec9c:	bdffff84 	addi	r23,r23,-2
1001eca0:	1445883a 	add	r2,r2,r17
1001eca4:	15adc83a 	sub	r22,r2,r22
1001eca8:	a00b883a 	mov	r5,r20
1001ecac:	b009883a 	mov	r4,r22
1001ecb0:	00140080 	call	10014008 <__umodsi3>
1001ecb4:	1021883a 	mov	r16,r2
1001ecb8:	b009883a 	mov	r4,r22
1001ecbc:	a00b883a 	mov	r5,r20
1001ecc0:	0013fa40 	call	10013fa4 <__udivsi3>
1001ecc4:	8020943a 	slli	r16,r16,16
1001ecc8:	a889383a 	mul	r4,r21,r2
1001eccc:	9cffffcc 	andi	r19,r19,65535
1001ecd0:	84e0b03a 	or	r16,r16,r19
1001ecd4:	8100062e 	bgeu	r16,r4,1001ecf0 <__udivdi3+0x3b4>
1001ecd8:	8461883a 	add	r16,r16,r17
1001ecdc:	10ffffc4 	addi	r3,r2,-1
1001ece0:	84406c36 	bltu	r16,r17,1001ee94 <__udivdi3+0x558>
1001ece4:	81006b2e 	bgeu	r16,r4,1001ee94 <__udivdi3+0x558>
1001ece8:	10bfff84 	addi	r2,r2,-2
1001ecec:	8461883a 	add	r16,r16,r17
1001ecf0:	b806943a 	slli	r3,r23,16
1001ecf4:	8121c83a 	sub	r16,r16,r4
1001ecf8:	1886b03a 	or	r3,r3,r2
1001ecfc:	003f7406 	br	1001ead0 <__udivdi3+0x194>
1001ed00:	30f8d83a 	srl	fp,r6,r3
1001ed04:	3d8e983a 	sll	r7,r7,r22
1001ed08:	80eed83a 	srl	r23,r16,r3
1001ed0c:	a8c6d83a 	srl	r3,r21,r3
1001ed10:	e1f8b03a 	or	fp,fp,r7
1001ed14:	e024d43a 	srli	r18,fp,16
1001ed18:	85a0983a 	sll	r16,r16,r22
1001ed1c:	b809883a 	mov	r4,r23
1001ed20:	900b883a 	mov	r5,r18
1001ed24:	1c22b03a 	or	r17,r3,r16
1001ed28:	35a8983a 	sll	r20,r6,r22
1001ed2c:	00140080 	call	10014008 <__umodsi3>
1001ed30:	b809883a 	mov	r4,r23
1001ed34:	900b883a 	mov	r5,r18
1001ed38:	1027883a 	mov	r19,r2
1001ed3c:	0013fa40 	call	10013fa4 <__udivsi3>
1001ed40:	1021883a 	mov	r16,r2
1001ed44:	e0ffffcc 	andi	r3,fp,65535
1001ed48:	9826943a 	slli	r19,r19,16
1001ed4c:	8804d43a 	srli	r2,r17,16
1001ed50:	1c09383a 	mul	r4,r3,r16
1001ed54:	9884b03a 	or	r2,r19,r2
1001ed58:	1100062e 	bgeu	r2,r4,1001ed74 <__udivdi3+0x438>
1001ed5c:	1705883a 	add	r2,r2,fp
1001ed60:	817fffc4 	addi	r5,r16,-1
1001ed64:	17004d36 	bltu	r2,fp,1001ee9c <__udivdi3+0x560>
1001ed68:	11004c2e 	bgeu	r2,r4,1001ee9c <__udivdi3+0x560>
1001ed6c:	843fff84 	addi	r16,r16,-2
1001ed70:	1705883a 	add	r2,r2,fp
1001ed74:	1127c83a 	sub	r19,r2,r4
1001ed78:	900b883a 	mov	r5,r18
1001ed7c:	9809883a 	mov	r4,r19
1001ed80:	d8c00015 	stw	r3,0(sp)
1001ed84:	00140080 	call	10014008 <__umodsi3>
1001ed88:	9809883a 	mov	r4,r19
1001ed8c:	900b883a 	mov	r5,r18
1001ed90:	102f883a 	mov	r23,r2
1001ed94:	0013fa40 	call	10013fa4 <__udivsi3>
1001ed98:	d8c00017 	ldw	r3,0(sp)
1001ed9c:	b82e943a 	slli	r23,r23,16
1001eda0:	8c7fffcc 	andi	r17,r17,65535
1001eda4:	1889383a 	mul	r4,r3,r2
1001eda8:	bc62b03a 	or	r17,r23,r17
1001edac:	8900062e 	bgeu	r17,r4,1001edc8 <__udivdi3+0x48c>
1001edb0:	8f23883a 	add	r17,r17,fp
1001edb4:	10ffffc4 	addi	r3,r2,-1
1001edb8:	8f003436 	bltu	r17,fp,1001ee8c <__udivdi3+0x550>
1001edbc:	8900332e 	bgeu	r17,r4,1001ee8c <__udivdi3+0x550>
1001edc0:	10bfff84 	addi	r2,r2,-2
1001edc4:	8f23883a 	add	r17,r17,fp
1001edc8:	8020943a 	slli	r16,r16,16
1001edcc:	a17fffcc 	andi	r5,r20,65535
1001edd0:	a00cd43a 	srli	r6,r20,16
1001edd4:	8084b03a 	or	r2,r16,r2
1001edd8:	10ffffcc 	andi	r3,r2,65535
1001eddc:	1028d43a 	srli	r20,r2,16
1001ede0:	1951383a 	mul	r8,r3,r5
1001ede4:	1987383a 	mul	r3,r3,r6
1001ede8:	a14b383a 	mul	r5,r20,r5
1001edec:	400ed43a 	srli	r7,r8,16
1001edf0:	8923c83a 	sub	r17,r17,r4
1001edf4:	1947883a 	add	r3,r3,r5
1001edf8:	38c7883a 	add	r3,r7,r3
1001edfc:	a1a9383a 	mul	r20,r20,r6
1001ee00:	1940022e 	bgeu	r3,r5,1001ee0c <__udivdi3+0x4d0>
1001ee04:	01000074 	movhi	r4,1
1001ee08:	a129883a 	add	r20,r20,r4
1001ee0c:	180cd43a 	srli	r6,r3,16
1001ee10:	3529883a 	add	r20,r6,r20
1001ee14:	8d000836 	bltu	r17,r20,1001ee38 <__udivdi3+0x4fc>
1001ee18:	8d000226 	beq	r17,r20,1001ee24 <__udivdi3+0x4e8>
1001ee1c:	0007883a 	mov	r3,zero
1001ee20:	003f6a06 	br	1001ebcc <__udivdi3+0x290>
1001ee24:	1806943a 	slli	r3,r3,16
1001ee28:	ad8c983a 	sll	r6,r21,r22
1001ee2c:	423fffcc 	andi	r8,r8,65535
1001ee30:	1a07883a 	add	r3,r3,r8
1001ee34:	30fff92e 	bgeu	r6,r3,1001ee1c <__udivdi3+0x4e0>
1001ee38:	10bfffc4 	addi	r2,r2,-1
1001ee3c:	003ff706 	br	1001ee1c <__udivdi3+0x4e0>
1001ee40:	3806d43a 	srli	r3,r7,16
1001ee44:	01000404 	movi	r4,16
1001ee48:	003f5306 	br	1001eb98 <__udivdi3+0x25c>
1001ee4c:	0007883a 	mov	r3,zero
1001ee50:	00800044 	movi	r2,1
1001ee54:	003f5d06 	br	1001ebcc <__udivdi3+0x290>
1001ee58:	3807883a 	mov	r3,r7
1001ee5c:	0009883a 	mov	r4,zero
1001ee60:	003f4d06 	br	1001eb98 <__udivdi3+0x25c>
1001ee64:	3007883a 	mov	r3,r6
1001ee68:	003ecd06 	br	1001e9a0 <__udivdi3+0x64>
1001ee6c:	8806d43a 	srli	r3,r17,16
1001ee70:	04c00404 	movi	r19,16
1001ee74:	003f0b06 	br	1001eaa4 <__udivdi3+0x168>
1001ee78:	3006d43a 	srli	r3,r6,16
1001ee7c:	04c00404 	movi	r19,16
1001ee80:	003ec706 	br	1001e9a0 <__udivdi3+0x64>
1001ee84:	8807883a 	mov	r3,r17
1001ee88:	003f0606 	br	1001eaa4 <__udivdi3+0x168>
1001ee8c:	1805883a 	mov	r2,r3
1001ee90:	003fcd06 	br	1001edc8 <__udivdi3+0x48c>
1001ee94:	1805883a 	mov	r2,r3
1001ee98:	003f9506 	br	1001ecf0 <__udivdi3+0x3b4>
1001ee9c:	2821883a 	mov	r16,r5
1001eea0:	003fb406 	br	1001ed74 <__udivdi3+0x438>
1001eea4:	182f883a 	mov	r23,r3
1001eea8:	003f7e06 	br	1001eca4 <__udivdi3+0x368>
1001eeac:	10bfff84 	addi	r2,r2,-2
1001eeb0:	003f2f06 	br	1001eb70 <__udivdi3+0x234>
1001eeb4:	10bfff84 	addi	r2,r2,-2
1001eeb8:	003eeb06 	br	1001ea68 <__udivdi3+0x12c>
1001eebc:	843fff84 	addi	r16,r16,-2
1001eec0:	1445883a 	add	r2,r2,r17
1001eec4:	003ed606 	br	1001ea20 <__udivdi3+0xe4>
1001eec8:	843fff84 	addi	r16,r16,-2
1001eecc:	1445883a 	add	r2,r2,r17
1001eed0:	003f1306 	br	1001eb20 <__udivdi3+0x1e4>

1001eed4 <__umoddi3>:
1001eed4:	defff404 	addi	sp,sp,-48
1001eed8:	dc400315 	stw	r17,12(sp)
1001eedc:	dc000215 	stw	r16,8(sp)
1001eee0:	dfc00b15 	stw	ra,44(sp)
1001eee4:	df000a15 	stw	fp,40(sp)
1001eee8:	ddc00915 	stw	r23,36(sp)
1001eeec:	dd800815 	stw	r22,32(sp)
1001eef0:	dd400715 	stw	r21,28(sp)
1001eef4:	dd000615 	stw	r20,24(sp)
1001eef8:	dcc00515 	stw	r19,20(sp)
1001eefc:	dc800415 	stw	r18,16(sp)
1001ef00:	2823883a 	mov	r17,r5
1001ef04:	2021883a 	mov	r16,r4
1001ef08:	3800701e 	bne	r7,zero,1001f0cc <__umoddi3+0x1f8>
1001ef0c:	382b883a 	mov	r21,r7
1001ef10:	3027883a 	mov	r19,r6
1001ef14:	2029883a 	mov	r20,r4
1001ef18:	2980392e 	bgeu	r5,r6,1001f000 <__umoddi3+0x12c>
1001ef1c:	00bfffd4 	movui	r2,65535
1001ef20:	282f883a 	mov	r23,r5
1001ef24:	11809736 	bltu	r2,r6,1001f184 <__umoddi3+0x2b0>
1001ef28:	30804030 	cmpltui	r2,r6,256
1001ef2c:	1001231e 	bne	r2,zero,1001f3bc <__umoddi3+0x4e8>
1001ef30:	3006d23a 	srli	r3,r6,8
1001ef34:	05400204 	movi	r21,8
1001ef38:	008400b4 	movhi	r2,4098
1001ef3c:	1885883a 	add	r2,r3,r2
1001ef40:	10979803 	ldbu	r2,24160(r2)
1001ef44:	156b883a 	add	r21,r2,r21
1001ef48:	00800804 	movi	r2,32
1001ef4c:	1565c83a 	sub	r18,r2,r21
1001ef50:	90000526 	beq	r18,zero,1001ef68 <__umoddi3+0x94>
1001ef54:	8ca2983a 	sll	r17,r17,r18
1001ef58:	856ad83a 	srl	r21,r16,r21
1001ef5c:	34a6983a 	sll	r19,r6,r18
1001ef60:	84a8983a 	sll	r20,r16,r18
1001ef64:	ac6eb03a 	or	r23,r21,r17
1001ef68:	982cd43a 	srli	r22,r19,16
1001ef6c:	b809883a 	mov	r4,r23
1001ef70:	9c3fffcc 	andi	r16,r19,65535
1001ef74:	b00b883a 	mov	r5,r22
1001ef78:	00140080 	call	10014008 <__umodsi3>
1001ef7c:	b00b883a 	mov	r5,r22
1001ef80:	b809883a 	mov	r4,r23
1001ef84:	102b883a 	mov	r21,r2
1001ef88:	0013fa40 	call	10013fa4 <__udivsi3>
1001ef8c:	a82a943a 	slli	r21,r21,16
1001ef90:	a006d43a 	srli	r3,r20,16
1001ef94:	8085383a 	mul	r2,r16,r2
1001ef98:	a8c6b03a 	or	r3,r21,r3
1001ef9c:	1880032e 	bgeu	r3,r2,1001efac <__umoddi3+0xd8>
1001efa0:	1cc7883a 	add	r3,r3,r19
1001efa4:	1cc00136 	bltu	r3,r19,1001efac <__umoddi3+0xd8>
1001efa8:	18811836 	bltu	r3,r2,1001f40c <__umoddi3+0x538>
1001efac:	18abc83a 	sub	r21,r3,r2
1001efb0:	b00b883a 	mov	r5,r22
1001efb4:	a809883a 	mov	r4,r21
1001efb8:	00140080 	call	10014008 <__umodsi3>
1001efbc:	1023883a 	mov	r17,r2
1001efc0:	b00b883a 	mov	r5,r22
1001efc4:	a809883a 	mov	r4,r21
1001efc8:	0013fa40 	call	10013fa4 <__udivsi3>
1001efcc:	8822943a 	slli	r17,r17,16
1001efd0:	8085383a 	mul	r2,r16,r2
1001efd4:	a0ffffcc 	andi	r3,r20,65535
1001efd8:	88c6b03a 	or	r3,r17,r3
1001efdc:	1880042e 	bgeu	r3,r2,1001eff0 <__umoddi3+0x11c>
1001efe0:	1cc7883a 	add	r3,r3,r19
1001efe4:	1cc00236 	bltu	r3,r19,1001eff0 <__umoddi3+0x11c>
1001efe8:	1880012e 	bgeu	r3,r2,1001eff0 <__umoddi3+0x11c>
1001efec:	1cc7883a 	add	r3,r3,r19
1001eff0:	1885c83a 	sub	r2,r3,r2
1001eff4:	1484d83a 	srl	r2,r2,r18
1001eff8:	0007883a 	mov	r3,zero
1001effc:	00003606 	br	1001f0d8 <__umoddi3+0x204>
1001f000:	3000041e 	bne	r6,zero,1001f014 <__umoddi3+0x140>
1001f004:	000b883a 	mov	r5,zero
1001f008:	01000044 	movi	r4,1
1001f00c:	0013fa40 	call	10013fa4 <__udivsi3>
1001f010:	1027883a 	mov	r19,r2
1001f014:	00bfffd4 	movui	r2,65535
1001f018:	14c0552e 	bgeu	r2,r19,1001f170 <__umoddi3+0x29c>
1001f01c:	00804034 	movhi	r2,256
1001f020:	9880ee36 	bltu	r19,r2,1001f3dc <__umoddi3+0x508>
1001f024:	9806d63a 	srli	r3,r19,24
1001f028:	05400604 	movi	r21,24
1001f02c:	008400b4 	movhi	r2,4098
1001f030:	1885883a 	add	r2,r3,r2
1001f034:	10979803 	ldbu	r2,24160(r2)
1001f038:	156b883a 	add	r21,r2,r21
1001f03c:	00800804 	movi	r2,32
1001f040:	1565c83a 	sub	r18,r2,r21
1001f044:	9000ab1e 	bne	r18,zero,1001f2f4 <__umoddi3+0x420>
1001f048:	982cd43a 	srli	r22,r19,16
1001f04c:	8ce3c83a 	sub	r17,r17,r19
1001f050:	9d7fffcc 	andi	r21,r19,65535
1001f054:	b00b883a 	mov	r5,r22
1001f058:	8809883a 	mov	r4,r17
1001f05c:	00140080 	call	10014008 <__umodsi3>
1001f060:	b00b883a 	mov	r5,r22
1001f064:	8809883a 	mov	r4,r17
1001f068:	1021883a 	mov	r16,r2
1001f06c:	0013fa40 	call	10013fa4 <__udivsi3>
1001f070:	8020943a 	slli	r16,r16,16
1001f074:	a006d43a 	srli	r3,r20,16
1001f078:	1545383a 	mul	r2,r2,r21
1001f07c:	80c6b03a 	or	r3,r16,r3
1001f080:	1880042e 	bgeu	r3,r2,1001f094 <__umoddi3+0x1c0>
1001f084:	1cc7883a 	add	r3,r3,r19
1001f088:	1cc00236 	bltu	r3,r19,1001f094 <__umoddi3+0x1c0>
1001f08c:	1880012e 	bgeu	r3,r2,1001f094 <__umoddi3+0x1c0>
1001f090:	1cc7883a 	add	r3,r3,r19
1001f094:	18a1c83a 	sub	r16,r3,r2
1001f098:	b00b883a 	mov	r5,r22
1001f09c:	8009883a 	mov	r4,r16
1001f0a0:	00140080 	call	10014008 <__umodsi3>
1001f0a4:	1023883a 	mov	r17,r2
1001f0a8:	b00b883a 	mov	r5,r22
1001f0ac:	8009883a 	mov	r4,r16
1001f0b0:	0013fa40 	call	10013fa4 <__udivsi3>
1001f0b4:	8822943a 	slli	r17,r17,16
1001f0b8:	1545383a 	mul	r2,r2,r21
1001f0bc:	a53fffcc 	andi	r20,r20,65535
1001f0c0:	8d06b03a 	or	r3,r17,r20
1001f0c4:	18bfca2e 	bgeu	r3,r2,1001eff0 <__umoddi3+0x11c>
1001f0c8:	003fc506 	br	1001efe0 <__umoddi3+0x10c>
1001f0cc:	2005883a 	mov	r2,r4
1001f0d0:	29c00d2e 	bgeu	r5,r7,1001f108 <__umoddi3+0x234>
1001f0d4:	2807883a 	mov	r3,r5
1001f0d8:	dfc00b17 	ldw	ra,44(sp)
1001f0dc:	df000a17 	ldw	fp,40(sp)
1001f0e0:	ddc00917 	ldw	r23,36(sp)
1001f0e4:	dd800817 	ldw	r22,32(sp)
1001f0e8:	dd400717 	ldw	r21,28(sp)
1001f0ec:	dd000617 	ldw	r20,24(sp)
1001f0f0:	dcc00517 	ldw	r19,20(sp)
1001f0f4:	dc800417 	ldw	r18,16(sp)
1001f0f8:	dc400317 	ldw	r17,12(sp)
1001f0fc:	dc000217 	ldw	r16,8(sp)
1001f100:	dec00c04 	addi	sp,sp,48
1001f104:	f800283a 	ret
1001f108:	013fffd4 	movui	r4,65535
1001f10c:	2807883a 	mov	r3,r5
1001f110:	21c0122e 	bgeu	r4,r7,1001f15c <__umoddi3+0x288>
1001f114:	01004034 	movhi	r4,256
1001f118:	3900ad36 	bltu	r7,r4,1001f3d0 <__umoddi3+0x4fc>
1001f11c:	3810d63a 	srli	r8,r7,24
1001f120:	01400604 	movi	r5,24
1001f124:	010400b4 	movhi	r4,4098
1001f128:	4109883a 	add	r4,r8,r4
1001f12c:	25179803 	ldbu	r20,24160(r4)
1001f130:	04c00804 	movi	r19,32
1001f134:	a169883a 	add	r20,r20,r5
1001f138:	9d27c83a 	sub	r19,r19,r20
1001f13c:	9800161e 	bne	r19,zero,1001f198 <__umoddi3+0x2c4>
1001f140:	3c400136 	bltu	r7,r17,1001f148 <__umoddi3+0x274>
1001f144:	81bfe436 	bltu	r16,r6,1001f0d8 <__umoddi3+0x204>
1001f148:	8185c83a 	sub	r2,r16,r6
1001f14c:	89cfc83a 	sub	r7,r17,r7
1001f150:	8087803a 	cmpltu	r3,r16,r2
1001f154:	38c7c83a 	sub	r3,r7,r3
1001f158:	003fdf06 	br	1001f0d8 <__umoddi3+0x204>
1001f15c:	39004030 	cmpltui	r4,r7,256
1001f160:	2000981e 	bne	r4,zero,1001f3c4 <__umoddi3+0x4f0>
1001f164:	3810d23a 	srli	r8,r7,8
1001f168:	01400204 	movi	r5,8
1001f16c:	003fed06 	br	1001f124 <__umoddi3+0x250>
1001f170:	98804030 	cmpltui	r2,r19,256
1001f174:	10009c1e 	bne	r2,zero,1001f3e8 <__umoddi3+0x514>
1001f178:	9806d23a 	srli	r3,r19,8
1001f17c:	05400204 	movi	r21,8
1001f180:	003faa06 	br	1001f02c <__umoddi3+0x158>
1001f184:	00804034 	movhi	r2,256
1001f188:	30809936 	bltu	r6,r2,1001f3f0 <__umoddi3+0x51c>
1001f18c:	3006d63a 	srli	r3,r6,24
1001f190:	05400604 	movi	r21,24
1001f194:	003f6806 	br	1001ef38 <__umoddi3+0x64>
1001f198:	3504d83a 	srl	r2,r6,r20
1001f19c:	3cce983a 	sll	r7,r7,r19
1001f1a0:	8d38d83a 	srl	fp,r17,r20
1001f1a4:	8ce2983a 	sll	r17,r17,r19
1001f1a8:	11eeb03a 	or	r23,r2,r7
1001f1ac:	b82cd43a 	srli	r22,r23,16
1001f1b0:	8504d83a 	srl	r2,r16,r20
1001f1b4:	e009883a 	mov	r4,fp
1001f1b8:	b00b883a 	mov	r5,r22
1001f1bc:	34e4983a 	sll	r18,r6,r19
1001f1c0:	1462b03a 	or	r17,r2,r17
1001f1c4:	00140080 	call	10014008 <__umodsi3>
1001f1c8:	e009883a 	mov	r4,fp
1001f1cc:	b00b883a 	mov	r5,r22
1001f1d0:	102b883a 	mov	r21,r2
1001f1d4:	0013fa40 	call	10013fa4 <__udivsi3>
1001f1d8:	100d883a 	mov	r6,r2
1001f1dc:	b8ffffcc 	andi	r3,r23,65535
1001f1e0:	a82a943a 	slli	r21,r21,16
1001f1e4:	8804d43a 	srli	r2,r17,16
1001f1e8:	1989383a 	mul	r4,r3,r6
1001f1ec:	84e0983a 	sll	r16,r16,r19
1001f1f0:	a884b03a 	or	r2,r21,r2
1001f1f4:	1100062e 	bgeu	r2,r4,1001f210 <__umoddi3+0x33c>
1001f1f8:	15c5883a 	add	r2,r2,r23
1001f1fc:	317fffc4 	addi	r5,r6,-1
1001f200:	15c08036 	bltu	r2,r23,1001f404 <__umoddi3+0x530>
1001f204:	11007f2e 	bgeu	r2,r4,1001f404 <__umoddi3+0x530>
1001f208:	31bfff84 	addi	r6,r6,-2
1001f20c:	15c5883a 	add	r2,r2,r23
1001f210:	112bc83a 	sub	r21,r2,r4
1001f214:	b00b883a 	mov	r5,r22
1001f218:	a809883a 	mov	r4,r21
1001f21c:	d9800115 	stw	r6,4(sp)
1001f220:	d8c00015 	stw	r3,0(sp)
1001f224:	00140080 	call	10014008 <__umodsi3>
1001f228:	b00b883a 	mov	r5,r22
1001f22c:	a809883a 	mov	r4,r21
1001f230:	1039883a 	mov	fp,r2
1001f234:	0013fa40 	call	10013fa4 <__udivsi3>
1001f238:	d8c00017 	ldw	r3,0(sp)
1001f23c:	e038943a 	slli	fp,fp,16
1001f240:	8c7fffcc 	andi	r17,r17,65535
1001f244:	1887383a 	mul	r3,r3,r2
1001f248:	e462b03a 	or	r17,fp,r17
1001f24c:	d9800117 	ldw	r6,4(sp)
1001f250:	88c0062e 	bgeu	r17,r3,1001f26c <__umoddi3+0x398>
1001f254:	8de3883a 	add	r17,r17,r23
1001f258:	113fffc4 	addi	r4,r2,-1
1001f25c:	8dc06736 	bltu	r17,r23,1001f3fc <__umoddi3+0x528>
1001f260:	88c0662e 	bgeu	r17,r3,1001f3fc <__umoddi3+0x528>
1001f264:	10bfff84 	addi	r2,r2,-2
1001f268:	8de3883a 	add	r17,r17,r23
1001f26c:	300a943a 	slli	r5,r6,16
1001f270:	9010d43a 	srli	r8,r18,16
1001f274:	91bfffcc 	andi	r6,r18,65535
1001f278:	2888b03a 	or	r4,r5,r2
1001f27c:	21ffffcc 	andi	r7,r4,65535
1001f280:	2008d43a 	srli	r4,r4,16
1001f284:	300b883a 	mov	r5,r6
1001f288:	398d383a 	mul	r6,r7,r6
1001f28c:	214b383a 	mul	r5,r4,r5
1001f290:	3a0f383a 	mul	r7,r7,r8
1001f294:	3004d43a 	srli	r2,r6,16
1001f298:	88c7c83a 	sub	r3,r17,r3
1001f29c:	394f883a 	add	r7,r7,r5
1001f2a0:	11c5883a 	add	r2,r2,r7
1001f2a4:	2209383a 	mul	r4,r4,r8
1001f2a8:	1140022e 	bgeu	r2,r5,1001f2b4 <__umoddi3+0x3e0>
1001f2ac:	01400074 	movhi	r5,1
1001f2b0:	2149883a 	add	r4,r4,r5
1001f2b4:	100ad43a 	srli	r5,r2,16
1001f2b8:	1004943a 	slli	r2,r2,16
1001f2bc:	31bfffcc 	andi	r6,r6,65535
1001f2c0:	2909883a 	add	r4,r5,r4
1001f2c4:	1185883a 	add	r2,r2,r6
1001f2c8:	19003636 	bltu	r3,r4,1001f3a4 <__umoddi3+0x4d0>
1001f2cc:	19003426 	beq	r3,r4,1001f3a0 <__umoddi3+0x4cc>
1001f2d0:	8085c83a 	sub	r2,r16,r2
1001f2d4:	80a1803a 	cmpltu	r16,r16,r2
1001f2d8:	1907c83a 	sub	r3,r3,r4
1001f2dc:	1c07c83a 	sub	r3,r3,r16
1001f2e0:	1d20983a 	sll	r16,r3,r20
1001f2e4:	14c4d83a 	srl	r2,r2,r19
1001f2e8:	1cc6d83a 	srl	r3,r3,r19
1001f2ec:	8084b03a 	or	r2,r16,r2
1001f2f0:	003f7906 	br	1001f0d8 <__umoddi3+0x204>
1001f2f4:	9ca6983a 	sll	r19,r19,r18
1001f2f8:	8d68d83a 	srl	r20,r17,r21
1001f2fc:	856ad83a 	srl	r21,r16,r21
1001f300:	982cd43a 	srli	r22,r19,16
1001f304:	a009883a 	mov	r4,r20
1001f308:	8ca2983a 	sll	r17,r17,r18
1001f30c:	b00b883a 	mov	r5,r22
1001f310:	00140080 	call	10014008 <__umodsi3>
1001f314:	a009883a 	mov	r4,r20
1001f318:	b00b883a 	mov	r5,r22
1001f31c:	ac6eb03a 	or	r23,r21,r17
1001f320:	1023883a 	mov	r17,r2
1001f324:	0013fa40 	call	10013fa4 <__udivsi3>
1001f328:	9d7fffcc 	andi	r21,r19,65535
1001f32c:	8822943a 	slli	r17,r17,16
1001f330:	b806d43a 	srli	r3,r23,16
1001f334:	a885383a 	mul	r2,r21,r2
1001f338:	84a8983a 	sll	r20,r16,r18
1001f33c:	88c6b03a 	or	r3,r17,r3
1001f340:	1880042e 	bgeu	r3,r2,1001f354 <__umoddi3+0x480>
1001f344:	1cc7883a 	add	r3,r3,r19
1001f348:	1cc00236 	bltu	r3,r19,1001f354 <__umoddi3+0x480>
1001f34c:	1880012e 	bgeu	r3,r2,1001f354 <__umoddi3+0x480>
1001f350:	1cc7883a 	add	r3,r3,r19
1001f354:	18a3c83a 	sub	r17,r3,r2
1001f358:	8809883a 	mov	r4,r17
1001f35c:	b00b883a 	mov	r5,r22
1001f360:	00140080 	call	10014008 <__umodsi3>
1001f364:	1021883a 	mov	r16,r2
1001f368:	8809883a 	mov	r4,r17
1001f36c:	b00b883a 	mov	r5,r22
1001f370:	0013fa40 	call	10013fa4 <__udivsi3>
1001f374:	8022943a 	slli	r17,r16,16
1001f378:	a885383a 	mul	r2,r21,r2
1001f37c:	bdffffcc 	andi	r23,r23,65535
1001f380:	8de2b03a 	or	r17,r17,r23
1001f384:	8880042e 	bgeu	r17,r2,1001f398 <__umoddi3+0x4c4>
1001f388:	8ce3883a 	add	r17,r17,r19
1001f38c:	8cc00236 	bltu	r17,r19,1001f398 <__umoddi3+0x4c4>
1001f390:	8880012e 	bgeu	r17,r2,1001f398 <__umoddi3+0x4c4>
1001f394:	8ce3883a 	add	r17,r17,r19
1001f398:	88a3c83a 	sub	r17,r17,r2
1001f39c:	003f2d06 	br	1001f054 <__umoddi3+0x180>
1001f3a0:	80bfcb2e 	bgeu	r16,r2,1001f2d0 <__umoddi3+0x3fc>
1001f3a4:	14a5c83a 	sub	r18,r2,r18
1001f3a8:	1485803a 	cmpltu	r2,r2,r18
1001f3ac:	15c5883a 	add	r2,r2,r23
1001f3b0:	2089c83a 	sub	r4,r4,r2
1001f3b4:	9005883a 	mov	r2,r18
1001f3b8:	003fc506 	br	1001f2d0 <__umoddi3+0x3fc>
1001f3bc:	3007883a 	mov	r3,r6
1001f3c0:	003edd06 	br	1001ef38 <__umoddi3+0x64>
1001f3c4:	3811883a 	mov	r8,r7
1001f3c8:	000b883a 	mov	r5,zero
1001f3cc:	003f5506 	br	1001f124 <__umoddi3+0x250>
1001f3d0:	3810d43a 	srli	r8,r7,16
1001f3d4:	01400404 	movi	r5,16
1001f3d8:	003f5206 	br	1001f124 <__umoddi3+0x250>
1001f3dc:	9806d43a 	srli	r3,r19,16
1001f3e0:	05400404 	movi	r21,16
1001f3e4:	003f1106 	br	1001f02c <__umoddi3+0x158>
1001f3e8:	9807883a 	mov	r3,r19
1001f3ec:	003f0f06 	br	1001f02c <__umoddi3+0x158>
1001f3f0:	3006d43a 	srli	r3,r6,16
1001f3f4:	05400404 	movi	r21,16
1001f3f8:	003ecf06 	br	1001ef38 <__umoddi3+0x64>
1001f3fc:	2005883a 	mov	r2,r4
1001f400:	003f9a06 	br	1001f26c <__umoddi3+0x398>
1001f404:	280d883a 	mov	r6,r5
1001f408:	003f8106 	br	1001f210 <__umoddi3+0x33c>
1001f40c:	1cc7883a 	add	r3,r3,r19
1001f410:	003ee606 	br	1001efac <__umoddi3+0xd8>

1001f414 <__adddf3>:
1001f414:	02000434 	movhi	r8,16
1001f418:	defffb04 	addi	sp,sp,-20
1001f41c:	423fffc4 	addi	r8,r8,-1
1001f420:	2a12703a 	and	r9,r5,r8
1001f424:	3a06703a 	and	r3,r7,r8
1001f428:	3804d53a 	srli	r2,r7,20
1001f42c:	dc000015 	stw	r16,0(sp)
1001f430:	2820d53a 	srli	r16,r5,20
1001f434:	2016d77a 	srli	r11,r4,29
1001f438:	3014d77a 	srli	r10,r6,29
1001f43c:	280ad7fa 	srli	r5,r5,31
1001f440:	481290fa 	slli	r9,r9,3
1001f444:	180690fa 	slli	r3,r3,3
1001f448:	380ed7fa 	srli	r7,r7,31
1001f44c:	dc400115 	stw	r17,4(sp)
1001f450:	8401ffcc 	andi	r16,r16,2047
1001f454:	1081ffcc 	andi	r2,r2,2047
1001f458:	dfc00415 	stw	ra,16(sp)
1001f45c:	dcc00315 	stw	r19,12(sp)
1001f460:	dc800215 	stw	r18,8(sp)
1001f464:	5a52b03a 	or	r9,r11,r9
1001f468:	50c6b03a 	or	r3,r10,r3
1001f46c:	2823883a 	mov	r17,r5
1001f470:	201890fa 	slli	r12,r4,3
1001f474:	301690fa 	slli	r11,r6,3
1001f478:	8095c83a 	sub	r10,r16,r2
1001f47c:	29c06a26 	beq	r5,r7,1001f628 <__adddf3+0x214>
1001f480:	0280590e 	bge	zero,r10,1001f5e8 <__adddf3+0x1d4>
1001f484:	10007c26 	beq	r2,zero,1001f678 <__adddf3+0x264>
1001f488:	8081ffd8 	cmpnei	r2,r16,2047
1001f48c:	10010726 	beq	r2,zero,1001f8ac <__adddf3+0x498>
1001f490:	18c02034 	orhi	r3,r3,128
1001f494:	50800e48 	cmpgei	r2,r10,57
1001f498:	1000ed1e 	bne	r2,zero,1001f850 <__adddf3+0x43c>
1001f49c:	50800808 	cmpgei	r2,r10,32
1001f4a0:	1001541e 	bne	r2,zero,1001f9f4 <__adddf3+0x5e0>
1001f4a4:	01000804 	movi	r4,32
1001f4a8:	2289c83a 	sub	r4,r4,r10
1001f4ac:	1926983a 	sll	r19,r3,r4
1001f4b0:	5a84d83a 	srl	r2,r11,r10
1001f4b4:	5908983a 	sll	r4,r11,r4
1001f4b8:	1a86d83a 	srl	r3,r3,r10
1001f4bc:	98a6b03a 	or	r19,r19,r2
1001f4c0:	2016c03a 	cmpne	r11,r4,zero
1001f4c4:	9ae6b03a 	or	r19,r19,r11
1001f4c8:	48d3c83a 	sub	r9,r9,r3
1001f4cc:	64e7c83a 	sub	r19,r12,r19
1001f4d0:	64c9803a 	cmpltu	r4,r12,r19
1001f4d4:	4909c83a 	sub	r4,r9,r4
1001f4d8:	2080202c 	andhi	r2,r4,128
1001f4dc:	10008726 	beq	r2,zero,1001f6fc <__adddf3+0x2e8>
1001f4e0:	02402034 	movhi	r9,128
1001f4e4:	4a7fffc4 	addi	r9,r9,-1
1001f4e8:	2264703a 	and	r18,r4,r9
1001f4ec:	9000cf26 	beq	r18,zero,1001f82c <__adddf3+0x418>
1001f4f0:	9009883a 	mov	r4,r18
1001f4f4:	0021aec0 	call	10021aec <__clzsi2>
1001f4f8:	10fffe04 	addi	r3,r2,-8
1001f4fc:	01000804 	movi	r4,32
1001f500:	20c9c83a 	sub	r4,r4,r3
1001f504:	990ad83a 	srl	r5,r19,r4
1001f508:	90c8983a 	sll	r4,r18,r3
1001f50c:	98e6983a 	sll	r19,r19,r3
1001f510:	2908b03a 	or	r4,r5,r4
1001f514:	1c00be16 	blt	r3,r16,1001f810 <__adddf3+0x3fc>
1001f518:	1c21c83a 	sub	r16,r3,r16
1001f51c:	81400044 	addi	r5,r16,1
1001f520:	28800808 	cmpgei	r2,r5,32
1001f524:	10011b1e 	bne	r2,zero,1001f994 <__adddf3+0x580>
1001f528:	00800804 	movi	r2,32
1001f52c:	1145c83a 	sub	r2,r2,r5
1001f530:	9946d83a 	srl	r3,r19,r5
1001f534:	98a6983a 	sll	r19,r19,r2
1001f538:	2084983a 	sll	r2,r4,r2
1001f53c:	2148d83a 	srl	r4,r4,r5
1001f540:	9826c03a 	cmpne	r19,r19,zero
1001f544:	10c4b03a 	or	r2,r2,r3
1001f548:	14e6b03a 	or	r19,r2,r19
1001f54c:	0021883a 	mov	r16,zero
1001f550:	988001cc 	andi	r2,r19,7
1001f554:	10000726 	beq	r2,zero,1001f574 <__adddf3+0x160>
1001f558:	988003cc 	andi	r2,r19,15
1001f55c:	10800120 	cmpeqi	r2,r2,4
1001f560:	1000041e 	bne	r2,zero,1001f574 <__adddf3+0x160>
1001f564:	99400104 	addi	r5,r19,4
1001f568:	2ce7803a 	cmpltu	r19,r5,r19
1001f56c:	24c9883a 	add	r4,r4,r19
1001f570:	2827883a 	mov	r19,r5
1001f574:	2080202c 	andhi	r2,r4,128
1001f578:	10006226 	beq	r2,zero,1001f704 <__adddf3+0x2f0>
1001f57c:	84000044 	addi	r16,r16,1
1001f580:	8081ffe0 	cmpeqi	r2,r16,2047
1001f584:	8401ffcc 	andi	r16,r16,2047
1001f588:	1000731e 	bne	r2,zero,1001f758 <__adddf3+0x344>
1001f58c:	017fe034 	movhi	r5,65408
1001f590:	297fffc4 	addi	r5,r5,-1
1001f594:	214a703a 	and	r5,r4,r5
1001f598:	2804977a 	slli	r2,r5,29
1001f59c:	280a927a 	slli	r5,r5,9
1001f5a0:	9826d0fa 	srli	r19,r19,3
1001f5a4:	2808d33a 	srli	r4,r5,12
1001f5a8:	14c4b03a 	or	r2,r2,r19
1001f5ac:	8020953a 	slli	r16,r16,20
1001f5b0:	00c00434 	movhi	r3,16
1001f5b4:	8c403fcc 	andi	r17,r17,255
1001f5b8:	882297fa 	slli	r17,r17,31
1001f5bc:	18ffffc4 	addi	r3,r3,-1
1001f5c0:	20c6703a 	and	r3,r4,r3
1001f5c4:	1c06b03a 	or	r3,r3,r16
1001f5c8:	1c46b03a 	or	r3,r3,r17
1001f5cc:	dfc00417 	ldw	ra,16(sp)
1001f5d0:	dcc00317 	ldw	r19,12(sp)
1001f5d4:	dc800217 	ldw	r18,8(sp)
1001f5d8:	dc400117 	ldw	r17,4(sp)
1001f5dc:	dc000017 	ldw	r16,0(sp)
1001f5e0:	dec00504 	addi	sp,sp,20
1001f5e4:	f800283a 	ret
1001f5e8:	50002b1e 	bne	r10,zero,1001f698 <__adddf3+0x284>
1001f5ec:	80800044 	addi	r2,r16,1
1001f5f0:	1081ff8c 	andi	r2,r2,2046
1001f5f4:	1000a11e 	bne	r2,zero,1001f87c <__adddf3+0x468>
1001f5f8:	4b0ab03a 	or	r5,r9,r12
1001f5fc:	1ac4b03a 	or	r2,r3,r11
1001f600:	80015c1e 	bne	r16,zero,1001fb74 <__adddf3+0x760>
1001f604:	28012826 	beq	r5,zero,1001faa8 <__adddf3+0x694>
1001f608:	1001671e 	bne	r2,zero,1001fba8 <__adddf3+0x794>
1001f60c:	4826977a 	slli	r19,r9,29
1001f610:	00c80034 	movhi	r3,8192
1001f614:	18ffffc4 	addi	r3,r3,-1
1001f618:	20c4703a 	and	r2,r4,r3
1001f61c:	9884b03a 	or	r2,r19,r2
1001f620:	4812d0fa 	srli	r9,r9,3
1001f624:	00003d06 	br	1001f71c <__adddf3+0x308>
1001f628:	02804f0e 	bge	zero,r10,1001f768 <__adddf3+0x354>
1001f62c:	10002426 	beq	r2,zero,1001f6c0 <__adddf3+0x2ac>
1001f630:	8081ffd8 	cmpnei	r2,r16,2047
1001f634:	10009d26 	beq	r2,zero,1001f8ac <__adddf3+0x498>
1001f638:	18c02034 	orhi	r3,r3,128
1001f63c:	50800e48 	cmpgei	r2,r10,57
1001f640:	10003b1e 	bne	r2,zero,1001f730 <__adddf3+0x31c>
1001f644:	50800808 	cmpgei	r2,r10,32
1001f648:	10010326 	beq	r2,zero,1001fa58 <__adddf3+0x644>
1001f64c:	54fff804 	addi	r19,r10,-32
1001f650:	51000820 	cmpeqi	r4,r10,32
1001f654:	1cc4d83a 	srl	r2,r3,r19
1001f658:	2000041e 	bne	r4,zero,1001f66c <__adddf3+0x258>
1001f65c:	01001004 	movi	r4,64
1001f660:	2295c83a 	sub	r10,r4,r10
1001f664:	1a86983a 	sll	r3,r3,r10
1001f668:	58d6b03a 	or	r11,r11,r3
1001f66c:	5826c03a 	cmpne	r19,r11,zero
1001f670:	98a6b03a 	or	r19,r19,r2
1001f674:	00003006 	br	1001f738 <__adddf3+0x324>
1001f678:	1ac4b03a 	or	r2,r3,r11
1001f67c:	10007726 	beq	r2,zero,1001f85c <__adddf3+0x448>
1001f680:	50bfffc4 	addi	r2,r10,-1
1001f684:	10011926 	beq	r2,zero,1001faec <__adddf3+0x6d8>
1001f688:	5281ffd8 	cmpnei	r10,r10,2047
1001f68c:	50012026 	beq	r10,zero,1001fb10 <__adddf3+0x6fc>
1001f690:	1015883a 	mov	r10,r2
1001f694:	003f7f06 	br	1001f494 <__adddf3+0x80>
1001f698:	1409c83a 	sub	r4,r2,r16
1001f69c:	8000a61e 	bne	r16,zero,1001f938 <__adddf3+0x524>
1001f6a0:	4b0ab03a 	or	r5,r9,r12
1001f6a4:	2800f726 	beq	r5,zero,1001fa84 <__adddf3+0x670>
1001f6a8:	217fffc4 	addi	r5,r4,-1
1001f6ac:	28017f26 	beq	r5,zero,1001fcac <__adddf3+0x898>
1001f6b0:	2101ffd8 	cmpnei	r4,r4,2047
1001f6b4:	2001a326 	beq	r4,zero,1001fd44 <__adddf3+0x930>
1001f6b8:	2809883a 	mov	r4,r5
1001f6bc:	0000a106 	br	1001f944 <__adddf3+0x530>
1001f6c0:	1ac4b03a 	or	r2,r3,r11
1001f6c4:	10006526 	beq	r2,zero,1001f85c <__adddf3+0x448>
1001f6c8:	50bfffc4 	addi	r2,r10,-1
1001f6cc:	10000426 	beq	r2,zero,1001f6e0 <__adddf3+0x2cc>
1001f6d0:	5281ffd8 	cmpnei	r10,r10,2047
1001f6d4:	50014326 	beq	r10,zero,1001fbe4 <__adddf3+0x7d0>
1001f6d8:	1015883a 	mov	r10,r2
1001f6dc:	003fd706 	br	1001f63c <__adddf3+0x228>
1001f6e0:	62e7883a 	add	r19,r12,r11
1001f6e4:	48d3883a 	add	r9,r9,r3
1001f6e8:	9b09803a 	cmpltu	r4,r19,r12
1001f6ec:	4909883a 	add	r4,r9,r4
1001f6f0:	2080202c 	andhi	r2,r4,128
1001f6f4:	1000b41e 	bne	r2,zero,1001f9c8 <__adddf3+0x5b4>
1001f6f8:	04000044 	movi	r16,1
1001f6fc:	988001cc 	andi	r2,r19,7
1001f700:	103f951e 	bne	r2,zero,1001f558 <__adddf3+0x144>
1001f704:	9826d0fa 	srli	r19,r19,3
1001f708:	2004977a 	slli	r2,r4,29
1001f70c:	2012d0fa 	srli	r9,r4,3
1001f710:	9884b03a 	or	r2,r19,r2
1001f714:	80c1ffe0 	cmpeqi	r3,r16,2047
1001f718:	1800351e 	bne	r3,zero,1001f7f0 <__adddf3+0x3dc>
1001f71c:	01000434 	movhi	r4,16
1001f720:	213fffc4 	addi	r4,r4,-1
1001f724:	4908703a 	and	r4,r9,r4
1001f728:	8401ffcc 	andi	r16,r16,2047
1001f72c:	003f9f06 	br	1001f5ac <__adddf3+0x198>
1001f730:	1ac8b03a 	or	r4,r3,r11
1001f734:	2026c03a 	cmpne	r19,r4,zero
1001f738:	9b27883a 	add	r19,r19,r12
1001f73c:	9b09803a 	cmpltu	r4,r19,r12
1001f740:	2249883a 	add	r4,r4,r9
1001f744:	2080202c 	andhi	r2,r4,128
1001f748:	103fec26 	beq	r2,zero,1001f6fc <__adddf3+0x2e8>
1001f74c:	84000044 	addi	r16,r16,1
1001f750:	8081ffe0 	cmpeqi	r2,r16,2047
1001f754:	10009d26 	beq	r2,zero,1001f9cc <__adddf3+0x5b8>
1001f758:	0401ffc4 	movi	r16,2047
1001f75c:	0009883a 	mov	r4,zero
1001f760:	0005883a 	mov	r2,zero
1001f764:	003f9106 	br	1001f5ac <__adddf3+0x198>
1001f768:	5000571e 	bne	r10,zero,1001f8c8 <__adddf3+0x4b4>
1001f76c:	80800044 	addi	r2,r16,1
1001f770:	1141ff8c 	andi	r5,r2,2046
1001f774:	2800ed1e 	bne	r5,zero,1001fb2c <__adddf3+0x718>
1001f778:	4b04b03a 	or	r2,r9,r12
1001f77c:	8000a826 	beq	r16,zero,1001fa20 <__adddf3+0x60c>
1001f780:	10010226 	beq	r2,zero,1001fb8c <__adddf3+0x778>
1001f784:	1ad6b03a 	or	r11,r3,r11
1001f788:	480a977a 	slli	r5,r9,29
1001f78c:	4812d0fa 	srli	r9,r9,3
1001f790:	58015f26 	beq	r11,zero,1001fd10 <__adddf3+0x8fc>
1001f794:	02080034 	movhi	r8,8192
1001f798:	423fffc4 	addi	r8,r8,-1
1001f79c:	2204703a 	and	r2,r4,r8
1001f7a0:	4900022c 	andhi	r4,r9,8
1001f7a4:	114ab03a 	or	r5,r2,r5
1001f7a8:	20000826 	beq	r4,zero,1001f7cc <__adddf3+0x3b8>
1001f7ac:	1808d0fa 	srli	r4,r3,3
1001f7b0:	2080022c 	andhi	r2,r4,8
1001f7b4:	1000051e 	bne	r2,zero,1001f7cc <__adddf3+0x3b8>
1001f7b8:	1806977a 	slli	r3,r3,29
1001f7bc:	3204703a 	and	r2,r6,r8
1001f7c0:	3823883a 	mov	r17,r7
1001f7c4:	10cab03a 	or	r5,r2,r3
1001f7c8:	2013883a 	mov	r9,r4
1001f7cc:	2804d77a 	srli	r2,r5,29
1001f7d0:	480890fa 	slli	r4,r9,3
1001f7d4:	00c80034 	movhi	r3,8192
1001f7d8:	18ffffc4 	addi	r3,r3,-1
1001f7dc:	1108b03a 	or	r4,r2,r4
1001f7e0:	2004977a 	slli	r2,r4,29
1001f7e4:	2012d0fa 	srli	r9,r4,3
1001f7e8:	28ca703a 	and	r5,r5,r3
1001f7ec:	1144b03a 	or	r2,r2,r5
1001f7f0:	4886b03a 	or	r3,r9,r2
1001f7f4:	18016b26 	beq	r3,zero,1001fda4 <__adddf3+0x990>
1001f7f8:	00c00434 	movhi	r3,16
1001f7fc:	49000234 	orhi	r4,r9,8
1001f800:	18ffffc4 	addi	r3,r3,-1
1001f804:	20c8703a 	and	r4,r4,r3
1001f808:	0401ffc4 	movi	r16,2047
1001f80c:	003f6706 	br	1001f5ac <__adddf3+0x198>
1001f810:	017fe034 	movhi	r5,65408
1001f814:	297fffc4 	addi	r5,r5,-1
1001f818:	988001cc 	andi	r2,r19,7
1001f81c:	80e1c83a 	sub	r16,r16,r3
1001f820:	2148703a 	and	r4,r4,r5
1001f824:	103f4c1e 	bne	r2,zero,1001f558 <__adddf3+0x144>
1001f828:	003fb606 	br	1001f704 <__adddf3+0x2f0>
1001f82c:	9809883a 	mov	r4,r19
1001f830:	0021aec0 	call	10021aec <__clzsi2>
1001f834:	10c00604 	addi	r3,r2,24
1001f838:	19000808 	cmpgei	r4,r3,32
1001f83c:	203f2f26 	beq	r4,zero,1001f4fc <__adddf3+0xe8>
1001f840:	113ffe04 	addi	r4,r2,-8
1001f844:	9908983a 	sll	r4,r19,r4
1001f848:	0027883a 	mov	r19,zero
1001f84c:	003f3106 	br	1001f514 <__adddf3+0x100>
1001f850:	1ac8b03a 	or	r4,r3,r11
1001f854:	2026c03a 	cmpne	r19,r4,zero
1001f858:	003f1c06 	br	1001f4cc <__adddf3+0xb8>
1001f85c:	4826977a 	slli	r19,r9,29
1001f860:	00c80034 	movhi	r3,8192
1001f864:	18ffffc4 	addi	r3,r3,-1
1001f868:	20c4703a 	and	r2,r4,r3
1001f86c:	14c4b03a 	or	r2,r2,r19
1001f870:	4812d0fa 	srli	r9,r9,3
1001f874:	5021883a 	mov	r16,r10
1001f878:	003fa606 	br	1001f714 <__adddf3+0x300>
1001f87c:	62e7c83a 	sub	r19,r12,r11
1001f880:	48e5c83a 	sub	r18,r9,r3
1001f884:	64c9803a 	cmpltu	r4,r12,r19
1001f888:	9125c83a 	sub	r18,r18,r4
1001f88c:	9080202c 	andhi	r2,r18,128
1001f890:	1000b21e 	bne	r2,zero,1001fb5c <__adddf3+0x748>
1001f894:	9c84b03a 	or	r2,r19,r18
1001f898:	103f141e 	bne	r2,zero,1001f4ec <__adddf3+0xd8>
1001f89c:	0013883a 	mov	r9,zero
1001f8a0:	0021883a 	mov	r16,zero
1001f8a4:	0023883a 	mov	r17,zero
1001f8a8:	003f9c06 	br	1001f71c <__adddf3+0x308>
1001f8ac:	4826977a 	slli	r19,r9,29
1001f8b0:	00c80034 	movhi	r3,8192
1001f8b4:	18ffffc4 	addi	r3,r3,-1
1001f8b8:	20c4703a 	and	r2,r4,r3
1001f8bc:	14c4b03a 	or	r2,r2,r19
1001f8c0:	4812d0fa 	srli	r9,r9,3
1001f8c4:	003fca06 	br	1001f7f0 <__adddf3+0x3dc>
1001f8c8:	1409c83a 	sub	r4,r2,r16
1001f8cc:	80005e1e 	bne	r16,zero,1001fa48 <__adddf3+0x634>
1001f8d0:	4b0ab03a 	or	r5,r9,r12
1001f8d4:	28011326 	beq	r5,zero,1001fd24 <__adddf3+0x910>
1001f8d8:	217fffc4 	addi	r5,r4,-1
1001f8dc:	28012c26 	beq	r5,zero,1001fd90 <__adddf3+0x97c>
1001f8e0:	2101ffd8 	cmpnei	r4,r4,2047
1001f8e4:	2000a926 	beq	r4,zero,1001fb8c <__adddf3+0x778>
1001f8e8:	2809883a 	mov	r4,r5
1001f8ec:	21400e48 	cmpgei	r5,r4,57
1001f8f0:	2800b91e 	bne	r5,zero,1001fbd8 <__adddf3+0x7c4>
1001f8f4:	21400808 	cmpgei	r5,r4,32
1001f8f8:	28011a1e 	bne	r5,zero,1001fd64 <__adddf3+0x950>
1001f8fc:	01400804 	movi	r5,32
1001f900:	290bc83a 	sub	r5,r5,r4
1001f904:	4966983a 	sll	r19,r9,r5
1001f908:	610cd83a 	srl	r6,r12,r4
1001f90c:	614a983a 	sll	r5,r12,r5
1001f910:	4912d83a 	srl	r9,r9,r4
1001f914:	99a6b03a 	or	r19,r19,r6
1001f918:	280ac03a 	cmpne	r5,r5,zero
1001f91c:	9966b03a 	or	r19,r19,r5
1001f920:	1a47883a 	add	r3,r3,r9
1001f924:	9ae7883a 	add	r19,r19,r11
1001f928:	9ac9803a 	cmpltu	r4,r19,r11
1001f92c:	20c9883a 	add	r4,r4,r3
1001f930:	1021883a 	mov	r16,r2
1001f934:	003f8306 	br	1001f744 <__adddf3+0x330>
1001f938:	1141ffd8 	cmpnei	r5,r2,2047
1001f93c:	28006326 	beq	r5,zero,1001facc <__adddf3+0x6b8>
1001f940:	4a402034 	orhi	r9,r9,128
1001f944:	21400e48 	cmpgei	r5,r4,57
1001f948:	28006e1e 	bne	r5,zero,1001fb04 <__adddf3+0x6f0>
1001f94c:	21400808 	cmpgei	r5,r4,32
1001f950:	2800ab1e 	bne	r5,zero,1001fc00 <__adddf3+0x7ec>
1001f954:	01400804 	movi	r5,32
1001f958:	290bc83a 	sub	r5,r5,r4
1001f95c:	4966983a 	sll	r19,r9,r5
1001f960:	610cd83a 	srl	r6,r12,r4
1001f964:	614a983a 	sll	r5,r12,r5
1001f968:	4912d83a 	srl	r9,r9,r4
1001f96c:	99a6b03a 	or	r19,r19,r6
1001f970:	280ac03a 	cmpne	r5,r5,zero
1001f974:	9966b03a 	or	r19,r19,r5
1001f978:	1a47c83a 	sub	r3,r3,r9
1001f97c:	5ce7c83a 	sub	r19,r11,r19
1001f980:	5cc9803a 	cmpltu	r4,r11,r19
1001f984:	1909c83a 	sub	r4,r3,r4
1001f988:	3823883a 	mov	r17,r7
1001f98c:	1021883a 	mov	r16,r2
1001f990:	003ed106 	br	1001f4d8 <__adddf3+0xc4>
1001f994:	843ff844 	addi	r16,r16,-31
1001f998:	28800820 	cmpeqi	r2,r5,32
1001f99c:	2420d83a 	srl	r16,r4,r16
1001f9a0:	1000041e 	bne	r2,zero,1001f9b4 <__adddf3+0x5a0>
1001f9a4:	00801004 	movi	r2,64
1001f9a8:	114bc83a 	sub	r5,r2,r5
1001f9ac:	2148983a 	sll	r4,r4,r5
1001f9b0:	9926b03a 	or	r19,r19,r4
1001f9b4:	9826c03a 	cmpne	r19,r19,zero
1001f9b8:	9c26b03a 	or	r19,r19,r16
1001f9bc:	0009883a 	mov	r4,zero
1001f9c0:	0021883a 	mov	r16,zero
1001f9c4:	003f4d06 	br	1001f6fc <__adddf3+0x2e8>
1001f9c8:	04000084 	movi	r16,2
1001f9cc:	00bfe034 	movhi	r2,65408
1001f9d0:	10bfffc4 	addi	r2,r2,-1
1001f9d4:	208a703a 	and	r5,r4,r2
1001f9d8:	9804d07a 	srli	r2,r19,1
1001f9dc:	280697fa 	slli	r3,r5,31
1001f9e0:	9cc0004c 	andi	r19,r19,1
1001f9e4:	14e6b03a 	or	r19,r2,r19
1001f9e8:	2808d07a 	srli	r4,r5,1
1001f9ec:	1ce6b03a 	or	r19,r3,r19
1001f9f0:	003ed706 	br	1001f550 <__adddf3+0x13c>
1001f9f4:	54fff804 	addi	r19,r10,-32
1001f9f8:	50800820 	cmpeqi	r2,r10,32
1001f9fc:	1ce6d83a 	srl	r19,r3,r19
1001fa00:	1000041e 	bne	r2,zero,1001fa14 <__adddf3+0x600>
1001fa04:	00801004 	movi	r2,64
1001fa08:	1295c83a 	sub	r10,r2,r10
1001fa0c:	1a86983a 	sll	r3,r3,r10
1001fa10:	58d6b03a 	or	r11,r11,r3
1001fa14:	5808c03a 	cmpne	r4,r11,zero
1001fa18:	24e6b03a 	or	r19,r4,r19
1001fa1c:	003eab06 	br	1001f4cc <__adddf3+0xb8>
1001fa20:	1000a926 	beq	r2,zero,1001fcc8 <__adddf3+0x8b4>
1001fa24:	1ac4b03a 	or	r2,r3,r11
1001fa28:	1000ae1e 	bne	r2,zero,1001fce4 <__adddf3+0x8d0>
1001fa2c:	4806977a 	slli	r3,r9,29
1001fa30:	00880034 	movhi	r2,8192
1001fa34:	10bfffc4 	addi	r2,r2,-1
1001fa38:	2084703a 	and	r2,r4,r2
1001fa3c:	10c4b03a 	or	r2,r2,r3
1001fa40:	4812d0fa 	srli	r9,r9,3
1001fa44:	003f3506 	br	1001f71c <__adddf3+0x308>
1001fa48:	1141ffd8 	cmpnei	r5,r2,2047
1001fa4c:	28004f26 	beq	r5,zero,1001fb8c <__adddf3+0x778>
1001fa50:	4a402034 	orhi	r9,r9,128
1001fa54:	003fa506 	br	1001f8ec <__adddf3+0x4d8>
1001fa58:	01000804 	movi	r4,32
1001fa5c:	2289c83a 	sub	r4,r4,r10
1001fa60:	1926983a 	sll	r19,r3,r4
1001fa64:	5a84d83a 	srl	r2,r11,r10
1001fa68:	5908983a 	sll	r4,r11,r4
1001fa6c:	1a86d83a 	srl	r3,r3,r10
1001fa70:	98a6b03a 	or	r19,r19,r2
1001fa74:	2016c03a 	cmpne	r11,r4,zero
1001fa78:	9ae6b03a 	or	r19,r19,r11
1001fa7c:	48d3883a 	add	r9,r9,r3
1001fa80:	003f2d06 	br	1001f738 <__adddf3+0x324>
1001fa84:	01480034 	movhi	r5,8192
1001fa88:	1826977a 	slli	r19,r3,29
1001fa8c:	297fffc4 	addi	r5,r5,-1
1001fa90:	3144703a 	and	r2,r6,r5
1001fa94:	14c4b03a 	or	r2,r2,r19
1001fa98:	1812d0fa 	srli	r9,r3,3
1001fa9c:	3823883a 	mov	r17,r7
1001faa0:	2021883a 	mov	r16,r4
1001faa4:	003f1b06 	br	1001f714 <__adddf3+0x300>
1001faa8:	10007d26 	beq	r2,zero,1001fca0 <__adddf3+0x88c>
1001faac:	00880034 	movhi	r2,8192
1001fab0:	1808977a 	slli	r4,r3,29
1001fab4:	10bfffc4 	addi	r2,r2,-1
1001fab8:	3084703a 	and	r2,r6,r2
1001fabc:	1104b03a 	or	r2,r2,r4
1001fac0:	1812d0fa 	srli	r9,r3,3
1001fac4:	3823883a 	mov	r17,r7
1001fac8:	003f1406 	br	1001f71c <__adddf3+0x308>
1001facc:	180a977a 	slli	r5,r3,29
1001fad0:	01080034 	movhi	r4,8192
1001fad4:	213fffc4 	addi	r4,r4,-1
1001fad8:	3104703a 	and	r2,r6,r4
1001fadc:	2884b03a 	or	r2,r5,r2
1001fae0:	1812d0fa 	srli	r9,r3,3
1001fae4:	3823883a 	mov	r17,r7
1001fae8:	003f4106 	br	1001f7f0 <__adddf3+0x3dc>
1001faec:	62e7c83a 	sub	r19,r12,r11
1001faf0:	48d3c83a 	sub	r9,r9,r3
1001faf4:	64c9803a 	cmpltu	r4,r12,r19
1001faf8:	4909c83a 	sub	r4,r9,r4
1001fafc:	04000044 	movi	r16,1
1001fb00:	003e7506 	br	1001f4d8 <__adddf3+0xc4>
1001fb04:	4b12b03a 	or	r9,r9,r12
1001fb08:	4826c03a 	cmpne	r19,r9,zero
1001fb0c:	003f9b06 	br	1001f97c <__adddf3+0x568>
1001fb10:	4826977a 	slli	r19,r9,29
1001fb14:	00c80034 	movhi	r3,8192
1001fb18:	18ffffc4 	addi	r3,r3,-1
1001fb1c:	20c4703a 	and	r2,r4,r3
1001fb20:	9884b03a 	or	r2,r19,r2
1001fb24:	4812d0fa 	srli	r9,r9,3
1001fb28:	003f3106 	br	1001f7f0 <__adddf3+0x3dc>
1001fb2c:	1101ffe0 	cmpeqi	r4,r2,2047
1001fb30:	203f091e 	bne	r4,zero,1001f758 <__adddf3+0x344>
1001fb34:	62d7883a 	add	r11,r12,r11
1001fb38:	5b09803a 	cmpltu	r4,r11,r12
1001fb3c:	48d3883a 	add	r9,r9,r3
1001fb40:	490b883a 	add	r5,r9,r4
1001fb44:	282697fa 	slli	r19,r5,31
1001fb48:	5816d07a 	srli	r11,r11,1
1001fb4c:	2808d07a 	srli	r4,r5,1
1001fb50:	1021883a 	mov	r16,r2
1001fb54:	9ae6b03a 	or	r19,r19,r11
1001fb58:	003ee806 	br	1001f6fc <__adddf3+0x2e8>
1001fb5c:	5b27c83a 	sub	r19,r11,r12
1001fb60:	1a53c83a 	sub	r9,r3,r9
1001fb64:	5cc9803a 	cmpltu	r4,r11,r19
1001fb68:	4925c83a 	sub	r18,r9,r4
1001fb6c:	3823883a 	mov	r17,r7
1001fb70:	003e5e06 	br	1001f4ec <__adddf3+0xd8>
1001fb74:	28002d1e 	bne	r5,zero,1001fc2c <__adddf3+0x818>
1001fb78:	103fd41e 	bne	r2,zero,1001facc <__adddf3+0x6b8>
1001fb7c:	00bfffc4 	movi	r2,-1
1001fb80:	0023883a 	mov	r17,zero
1001fb84:	4013883a 	mov	r9,r8
1001fb88:	003f1b06 	br	1001f7f8 <__adddf3+0x3e4>
1001fb8c:	00880034 	movhi	r2,8192
1001fb90:	1808977a 	slli	r4,r3,29
1001fb94:	10bfffc4 	addi	r2,r2,-1
1001fb98:	3084703a 	and	r2,r6,r2
1001fb9c:	1104b03a 	or	r2,r2,r4
1001fba0:	1812d0fa 	srli	r9,r3,3
1001fba4:	003f1206 	br	1001f7f0 <__adddf3+0x3dc>
1001fba8:	62e7c83a 	sub	r19,r12,r11
1001fbac:	48cbc83a 	sub	r5,r9,r3
1001fbb0:	64c9803a 	cmpltu	r4,r12,r19
1001fbb4:	2909c83a 	sub	r4,r5,r4
1001fbb8:	2080202c 	andhi	r2,r4,128
1001fbbc:	10003626 	beq	r2,zero,1001fc98 <__adddf3+0x884>
1001fbc0:	5b27c83a 	sub	r19,r11,r12
1001fbc4:	1a53c83a 	sub	r9,r3,r9
1001fbc8:	5cc9803a 	cmpltu	r4,r11,r19
1001fbcc:	4909c83a 	sub	r4,r9,r4
1001fbd0:	3823883a 	mov	r17,r7
1001fbd4:	003e5e06 	br	1001f550 <__adddf3+0x13c>
1001fbd8:	4b12b03a 	or	r9,r9,r12
1001fbdc:	4826c03a 	cmpne	r19,r9,zero
1001fbe0:	003f5006 	br	1001f924 <__adddf3+0x510>
1001fbe4:	4806977a 	slli	r3,r9,29
1001fbe8:	00880034 	movhi	r2,8192
1001fbec:	10bfffc4 	addi	r2,r2,-1
1001fbf0:	2084703a 	and	r2,r4,r2
1001fbf4:	10c4b03a 	or	r2,r2,r3
1001fbf8:	4812d0fa 	srli	r9,r9,3
1001fbfc:	003efc06 	br	1001f7f0 <__adddf3+0x3dc>
1001fc00:	217ff804 	addi	r5,r4,-32
1001fc04:	21800820 	cmpeqi	r6,r4,32
1001fc08:	494ad83a 	srl	r5,r9,r5
1001fc0c:	3000041e 	bne	r6,zero,1001fc20 <__adddf3+0x80c>
1001fc10:	01801004 	movi	r6,64
1001fc14:	3109c83a 	sub	r4,r6,r4
1001fc18:	4912983a 	sll	r9,r9,r4
1001fc1c:	6258b03a 	or	r12,r12,r9
1001fc20:	6026c03a 	cmpne	r19,r12,zero
1001fc24:	9966b03a 	or	r19,r19,r5
1001fc28:	003f5406 	br	1001f97c <__adddf3+0x568>
1001fc2c:	480a977a 	slli	r5,r9,29
1001fc30:	4812d0fa 	srli	r9,r9,3
1001fc34:	10003626 	beq	r2,zero,1001fd10 <__adddf3+0x8fc>
1001fc38:	02080034 	movhi	r8,8192
1001fc3c:	423fffc4 	addi	r8,r8,-1
1001fc40:	2204703a 	and	r2,r4,r8
1001fc44:	4900022c 	andhi	r4,r9,8
1001fc48:	114ab03a 	or	r5,r2,r5
1001fc4c:	20000826 	beq	r4,zero,1001fc70 <__adddf3+0x85c>
1001fc50:	1808d0fa 	srli	r4,r3,3
1001fc54:	2080022c 	andhi	r2,r4,8
1001fc58:	1000051e 	bne	r2,zero,1001fc70 <__adddf3+0x85c>
1001fc5c:	1806977a 	slli	r3,r3,29
1001fc60:	3204703a 	and	r2,r6,r8
1001fc64:	3823883a 	mov	r17,r7
1001fc68:	10cab03a 	or	r5,r2,r3
1001fc6c:	2013883a 	mov	r9,r4
1001fc70:	480890fa 	slli	r4,r9,3
1001fc74:	2804d77a 	srli	r2,r5,29
1001fc78:	00c80034 	movhi	r3,8192
1001fc7c:	18ffffc4 	addi	r3,r3,-1
1001fc80:	1108b03a 	or	r4,r2,r4
1001fc84:	200c977a 	slli	r6,r4,29
1001fc88:	28c4703a 	and	r2,r5,r3
1001fc8c:	2012d0fa 	srli	r9,r4,3
1001fc90:	3084b03a 	or	r2,r6,r2
1001fc94:	003ed606 	br	1001f7f0 <__adddf3+0x3dc>
1001fc98:	9904b03a 	or	r2,r19,r4
1001fc9c:	103e971e 	bne	r2,zero,1001f6fc <__adddf3+0x2e8>
1001fca0:	0013883a 	mov	r9,zero
1001fca4:	0023883a 	mov	r17,zero
1001fca8:	003e9c06 	br	1001f71c <__adddf3+0x308>
1001fcac:	5b27c83a 	sub	r19,r11,r12
1001fcb0:	1a53c83a 	sub	r9,r3,r9
1001fcb4:	5cc9803a 	cmpltu	r4,r11,r19
1001fcb8:	4909c83a 	sub	r4,r9,r4
1001fcbc:	3823883a 	mov	r17,r7
1001fcc0:	04000044 	movi	r16,1
1001fcc4:	003e0406 	br	1001f4d8 <__adddf3+0xc4>
1001fcc8:	180a977a 	slli	r5,r3,29
1001fccc:	01080034 	movhi	r4,8192
1001fcd0:	213fffc4 	addi	r4,r4,-1
1001fcd4:	3104703a 	and	r2,r6,r4
1001fcd8:	2884b03a 	or	r2,r5,r2
1001fcdc:	1812d0fa 	srli	r9,r3,3
1001fce0:	003e8e06 	br	1001f71c <__adddf3+0x308>
1001fce4:	62e7883a 	add	r19,r12,r11
1001fce8:	48d3883a 	add	r9,r9,r3
1001fcec:	9b09803a 	cmpltu	r4,r19,r12
1001fcf0:	4909883a 	add	r4,r9,r4
1001fcf4:	2080202c 	andhi	r2,r4,128
1001fcf8:	103e8026 	beq	r2,zero,1001f6fc <__adddf3+0x2e8>
1001fcfc:	00bfe034 	movhi	r2,65408
1001fd00:	10bfffc4 	addi	r2,r2,-1
1001fd04:	2088703a 	and	r4,r4,r2
1001fd08:	04000044 	movi	r16,1
1001fd0c:	003e7b06 	br	1001f6fc <__adddf3+0x2e8>
1001fd10:	00880034 	movhi	r2,8192
1001fd14:	10bfffc4 	addi	r2,r2,-1
1001fd18:	2084703a 	and	r2,r4,r2
1001fd1c:	1144b03a 	or	r2,r2,r5
1001fd20:	003eb306 	br	1001f7f0 <__adddf3+0x3dc>
1001fd24:	180e977a 	slli	r7,r3,29
1001fd28:	01480034 	movhi	r5,8192
1001fd2c:	297fffc4 	addi	r5,r5,-1
1001fd30:	3144703a 	and	r2,r6,r5
1001fd34:	3884b03a 	or	r2,r7,r2
1001fd38:	1812d0fa 	srli	r9,r3,3
1001fd3c:	2021883a 	mov	r16,r4
1001fd40:	003e7406 	br	1001f714 <__adddf3+0x300>
1001fd44:	00880034 	movhi	r2,8192
1001fd48:	1808977a 	slli	r4,r3,29
1001fd4c:	10bfffc4 	addi	r2,r2,-1
1001fd50:	3084703a 	and	r2,r6,r2
1001fd54:	1104b03a 	or	r2,r2,r4
1001fd58:	1812d0fa 	srli	r9,r3,3
1001fd5c:	3823883a 	mov	r17,r7
1001fd60:	003ea306 	br	1001f7f0 <__adddf3+0x3dc>
1001fd64:	217ff804 	addi	r5,r4,-32
1001fd68:	21800820 	cmpeqi	r6,r4,32
1001fd6c:	494ad83a 	srl	r5,r9,r5
1001fd70:	3000041e 	bne	r6,zero,1001fd84 <__adddf3+0x970>
1001fd74:	01801004 	movi	r6,64
1001fd78:	3109c83a 	sub	r4,r6,r4
1001fd7c:	4912983a 	sll	r9,r9,r4
1001fd80:	6258b03a 	or	r12,r12,r9
1001fd84:	6026c03a 	cmpne	r19,r12,zero
1001fd88:	9966b03a 	or	r19,r19,r5
1001fd8c:	003ee506 	br	1001f924 <__adddf3+0x510>
1001fd90:	62e7883a 	add	r19,r12,r11
1001fd94:	48d3883a 	add	r9,r9,r3
1001fd98:	9ac9803a 	cmpltu	r4,r19,r11
1001fd9c:	4909883a 	add	r4,r9,r4
1001fda0:	003e5306 	br	1001f6f0 <__adddf3+0x2dc>
1001fda4:	0005883a 	mov	r2,zero
1001fda8:	0401ffc4 	movi	r16,2047
1001fdac:	0009883a 	mov	r4,zero
1001fdb0:	003dfe06 	br	1001f5ac <__adddf3+0x198>

1001fdb4 <__divdf3>:
1001fdb4:	defff104 	addi	sp,sp,-60
1001fdb8:	2804d53a 	srli	r2,r5,20
1001fdbc:	dd000915 	stw	r20,36(sp)
1001fdc0:	2828d7fa 	srli	r20,r5,31
1001fdc4:	dc000515 	stw	r16,20(sp)
1001fdc8:	04000434 	movhi	r16,16
1001fdcc:	ddc00c15 	stw	r23,48(sp)
1001fdd0:	dc800715 	stw	r18,28(sp)
1001fdd4:	843fffc4 	addi	r16,r16,-1
1001fdd8:	dfc00e15 	stw	ra,56(sp)
1001fddc:	df000d15 	stw	fp,52(sp)
1001fde0:	dd800b15 	stw	r22,44(sp)
1001fde4:	dd400a15 	stw	r21,40(sp)
1001fde8:	dcc00815 	stw	r19,32(sp)
1001fdec:	dc400615 	stw	r17,24(sp)
1001fdf0:	1081ffcc 	andi	r2,r2,2047
1001fdf4:	2025883a 	mov	r18,r4
1001fdf8:	2c20703a 	and	r16,r5,r16
1001fdfc:	a02f883a 	mov	r23,r20
1001fe00:	10008926 	beq	r2,zero,10020028 <__divdf3+0x274>
1001fe04:	10c1ffe0 	cmpeqi	r3,r2,2047
1001fe08:	18009f1e 	bne	r3,zero,10020088 <__divdf3+0x2d4>
1001fe0c:	800a90fa 	slli	r5,r16,3
1001fe10:	2008d77a 	srli	r4,r4,29
1001fe14:	902490fa 	slli	r18,r18,3
1001fe18:	157f0044 	addi	r21,r2,-1023
1001fe1c:	2148b03a 	or	r4,r4,r5
1001fe20:	25802034 	orhi	r22,r4,128
1001fe24:	0023883a 	mov	r17,zero
1001fe28:	0021883a 	mov	r16,zero
1001fe2c:	3806d53a 	srli	r3,r7,20
1001fe30:	01000434 	movhi	r4,16
1001fe34:	213fffc4 	addi	r4,r4,-1
1001fe38:	18c1ffcc 	andi	r3,r3,2047
1001fe3c:	3926703a 	and	r19,r7,r4
1001fe40:	380ed7fa 	srli	r7,r7,31
1001fe44:	18006326 	beq	r3,zero,1001ffd4 <__divdf3+0x220>
1001fe48:	1881ffe0 	cmpeqi	r2,r3,2047
1001fe4c:	1000201e 	bne	r2,zero,1001fed0 <__divdf3+0x11c>
1001fe50:	980890fa 	slli	r4,r19,3
1001fe54:	300ad77a 	srli	r5,r6,29
1001fe58:	301090fa 	slli	r8,r6,3
1001fe5c:	18ff0044 	addi	r3,r3,-1023
1001fe60:	2908b03a 	or	r4,r5,r4
1001fe64:	a8ebc83a 	sub	r21,r21,r3
1001fe68:	24c02034 	orhi	r19,r4,128
1001fe6c:	0007883a 	mov	r3,zero
1001fe70:	89800428 	cmpgeui	r6,r17,16
1001fe74:	a1f8f03a 	xor	fp,r20,r7
1001fe78:	3000ad1e 	bne	r6,zero,10020130 <__divdf3+0x37c>
1001fe7c:	882290ba 	slli	r17,r17,2
1001fe80:	008400b4 	movhi	r2,4098
1001fe84:	8885883a 	add	r2,r17,r2
1001fe88:	10bfa417 	ldw	r2,-368(r2)
1001fe8c:	1000683a 	jmp	r2
1001fe90:	10020130 	cmpltui	zero,r2,2052
1001fe94:	1001ffc4 	addi	zero,r2,2047
1001fe98:	1001ff68 	cmpgeui	zero,r2,2045
1001fe9c:	1001feec 	andhi	zero,r2,2043
1001fea0:	1001ff68 	cmpgeui	zero,r2,2045
1001fea4:	100200ec 	andhi	zero,r2,2051
1001fea8:	1001ff68 	cmpgeui	zero,r2,2045
1001feac:	1001feec 	andhi	zero,r2,2043
1001feb0:	1001ffc4 	addi	zero,r2,2047
1001feb4:	1001ffc4 	addi	zero,r2,2047
1001feb8:	100200ec 	andhi	zero,r2,2051
1001febc:	1001feec 	andhi	zero,r2,2043
1001fec0:	1001fefc 	xorhi	zero,r2,2043
1001fec4:	1001fefc 	xorhi	zero,r2,2043
1001fec8:	1001fefc 	xorhi	zero,r2,2043
1001fecc:	10020104 	addi	zero,r2,2052
1001fed0:	9990b03a 	or	r8,r19,r6
1001fed4:	ad7e0044 	addi	r21,r21,-2047
1001fed8:	4000801e 	bne	r8,zero,100200dc <__divdf3+0x328>
1001fedc:	8c400094 	ori	r17,r17,2
1001fee0:	0027883a 	mov	r19,zero
1001fee4:	00c00084 	movi	r3,2
1001fee8:	003fe106 	br	1001fe70 <__divdf3+0xbc>
1001feec:	382f883a 	mov	r23,r7
1001fef0:	982d883a 	mov	r22,r19
1001fef4:	4025883a 	mov	r18,r8
1001fef8:	1821883a 	mov	r16,r3
1001fefc:	808000a0 	cmpeqi	r2,r16,2
1001ff00:	10017c1e 	bne	r2,zero,100204f4 <__divdf3+0x740>
1001ff04:	808000e0 	cmpeqi	r2,r16,3
1001ff08:	1001ca1e 	bne	r2,zero,10020634 <__divdf3+0x880>
1001ff0c:	80800060 	cmpeqi	r2,r16,1
1001ff10:	1000141e 	bne	r2,zero,1001ff64 <__divdf3+0x1b0>
1001ff14:	ac00ffc4 	addi	r16,r21,1023
1001ff18:	b839883a 	mov	fp,r23
1001ff1c:	0401580e 	bge	zero,r16,10020480 <__divdf3+0x6cc>
1001ff20:	908001cc 	andi	r2,r18,7
1001ff24:	1001921e 	bne	r2,zero,10020570 <__divdf3+0x7bc>
1001ff28:	900ad0fa 	srli	r5,r18,3
1001ff2c:	b080402c 	andhi	r2,r22,256
1001ff30:	10000426 	beq	r2,zero,1001ff44 <__divdf3+0x190>
1001ff34:	00bfc034 	movhi	r2,65280
1001ff38:	10bfffc4 	addi	r2,r2,-1
1001ff3c:	b0ac703a 	and	r22,r22,r2
1001ff40:	ac010004 	addi	r16,r21,1024
1001ff44:	8081ffc8 	cmpgei	r2,r16,2047
1001ff48:	10001e1e 	bne	r2,zero,1001ffc4 <__divdf3+0x210>
1001ff4c:	b024977a 	slli	r18,r22,29
1001ff50:	b008927a 	slli	r4,r22,9
1001ff54:	8081ffcc 	andi	r2,r16,2047
1001ff58:	9164b03a 	or	r18,r18,r5
1001ff5c:	2008d33a 	srli	r4,r4,12
1001ff60:	00000406 	br	1001ff74 <__divdf3+0x1c0>
1001ff64:	b839883a 	mov	fp,r23
1001ff68:	0005883a 	mov	r2,zero
1001ff6c:	0009883a 	mov	r4,zero
1001ff70:	0025883a 	mov	r18,zero
1001ff74:	1004953a 	slli	r2,r2,20
1001ff78:	00c00434 	movhi	r3,16
1001ff7c:	e03897fa 	slli	fp,fp,31
1001ff80:	18ffffc4 	addi	r3,r3,-1
1001ff84:	20c6703a 	and	r3,r4,r3
1001ff88:	1886b03a 	or	r3,r3,r2
1001ff8c:	1f06b03a 	or	r3,r3,fp
1001ff90:	9005883a 	mov	r2,r18
1001ff94:	dfc00e17 	ldw	ra,56(sp)
1001ff98:	df000d17 	ldw	fp,52(sp)
1001ff9c:	ddc00c17 	ldw	r23,48(sp)
1001ffa0:	dd800b17 	ldw	r22,44(sp)
1001ffa4:	dd400a17 	ldw	r21,40(sp)
1001ffa8:	dd000917 	ldw	r20,36(sp)
1001ffac:	dcc00817 	ldw	r19,32(sp)
1001ffb0:	dc800717 	ldw	r18,28(sp)
1001ffb4:	dc400617 	ldw	r17,24(sp)
1001ffb8:	dc000517 	ldw	r16,20(sp)
1001ffbc:	dec00f04 	addi	sp,sp,60
1001ffc0:	f800283a 	ret
1001ffc4:	0081ffc4 	movi	r2,2047
1001ffc8:	0009883a 	mov	r4,zero
1001ffcc:	0025883a 	mov	r18,zero
1001ffd0:	003fe806 	br	1001ff74 <__divdf3+0x1c0>
1001ffd4:	9990b03a 	or	r8,r19,r6
1001ffd8:	40003c26 	beq	r8,zero,100200cc <__divdf3+0x318>
1001ffdc:	98011826 	beq	r19,zero,10020440 <__divdf3+0x68c>
1001ffe0:	9809883a 	mov	r4,r19
1001ffe4:	d9800115 	stw	r6,4(sp)
1001ffe8:	d9c00015 	stw	r7,0(sp)
1001ffec:	0021aec0 	call	10021aec <__clzsi2>
1001fff0:	d9c00017 	ldw	r7,0(sp)
1001fff4:	d9800117 	ldw	r6,4(sp)
1001fff8:	117ffd44 	addi	r5,r2,-11
1001fffc:	00c00744 	movi	r3,29
10020000:	123ffe04 	addi	r8,r2,-8
10020004:	1947c83a 	sub	r3,r3,r5
10020008:	9a08983a 	sll	r4,r19,r8
1002000c:	30c6d83a 	srl	r3,r6,r3
10020010:	3210983a 	sll	r8,r6,r8
10020014:	1926b03a 	or	r19,r3,r4
10020018:	1545883a 	add	r2,r2,r21
1002001c:	1540fcc4 	addi	r21,r2,1011
10020020:	0007883a 	mov	r3,zero
10020024:	003f9206 	br	1001fe70 <__divdf3+0xbc>
10020028:	242cb03a 	or	r22,r4,r16
1002002c:	2023883a 	mov	r17,r4
10020030:	b0002126 	beq	r22,zero,100200b8 <__divdf3+0x304>
10020034:	d9c00115 	stw	r7,4(sp)
10020038:	d9800015 	stw	r6,0(sp)
1002003c:	8000f526 	beq	r16,zero,10020414 <__divdf3+0x660>
10020040:	8009883a 	mov	r4,r16
10020044:	0021aec0 	call	10021aec <__clzsi2>
10020048:	d9800017 	ldw	r6,0(sp)
1002004c:	d9c00117 	ldw	r7,4(sp)
10020050:	102b883a 	mov	r21,r2
10020054:	113ffd44 	addi	r4,r2,-11
10020058:	05800744 	movi	r22,29
1002005c:	acbffe04 	addi	r18,r21,-8
10020060:	b12dc83a 	sub	r22,r22,r4
10020064:	848a983a 	sll	r5,r16,r18
10020068:	8d88d83a 	srl	r4,r17,r22
1002006c:	8ca4983a 	sll	r18,r17,r18
10020070:	216cb03a 	or	r22,r4,r5
10020074:	00bf0344 	movi	r2,-1011
10020078:	156bc83a 	sub	r21,r2,r21
1002007c:	0023883a 	mov	r17,zero
10020080:	0021883a 	mov	r16,zero
10020084:	003f6906 	br	1001fe2c <__divdf3+0x78>
10020088:	242cb03a 	or	r22,r4,r16
1002008c:	b000051e 	bne	r22,zero,100200a4 <__divdf3+0x2f0>
10020090:	0025883a 	mov	r18,zero
10020094:	04400204 	movi	r17,8
10020098:	0541ffc4 	movi	r21,2047
1002009c:	04000084 	movi	r16,2
100200a0:	003f6206 	br	1001fe2c <__divdf3+0x78>
100200a4:	802d883a 	mov	r22,r16
100200a8:	04400304 	movi	r17,12
100200ac:	0541ffc4 	movi	r21,2047
100200b0:	040000c4 	movi	r16,3
100200b4:	003f5d06 	br	1001fe2c <__divdf3+0x78>
100200b8:	0025883a 	mov	r18,zero
100200bc:	04400104 	movi	r17,4
100200c0:	002b883a 	mov	r21,zero
100200c4:	04000044 	movi	r16,1
100200c8:	003f5806 	br	1001fe2c <__divdf3+0x78>
100200cc:	8c400054 	ori	r17,r17,1
100200d0:	0027883a 	mov	r19,zero
100200d4:	00c00044 	movi	r3,1
100200d8:	003f6506 	br	1001fe70 <__divdf3+0xbc>
100200dc:	8c4000d4 	ori	r17,r17,3
100200e0:	3011883a 	mov	r8,r6
100200e4:	00c000c4 	movi	r3,3
100200e8:	003f6106 	br	1001fe70 <__divdf3+0xbc>
100200ec:	01000434 	movhi	r4,16
100200f0:	0039883a 	mov	fp,zero
100200f4:	213fffc4 	addi	r4,r4,-1
100200f8:	04bfffc4 	movi	r18,-1
100200fc:	0081ffc4 	movi	r2,2047
10020100:	003f9c06 	br	1001ff74 <__divdf3+0x1c0>
10020104:	b080022c 	andhi	r2,r22,8
10020108:	1000a126 	beq	r2,zero,10020390 <__divdf3+0x5dc>
1002010c:	9880022c 	andhi	r2,r19,8
10020110:	10009f1e 	bne	r2,zero,10020390 <__divdf3+0x5dc>
10020114:	00800434 	movhi	r2,16
10020118:	99000234 	orhi	r4,r19,8
1002011c:	10bfffc4 	addi	r2,r2,-1
10020120:	2088703a 	and	r4,r4,r2
10020124:	3839883a 	mov	fp,r7
10020128:	4025883a 	mov	r18,r8
1002012c:	003ff306 	br	100200fc <__divdf3+0x348>
10020130:	9d80b236 	bltu	r19,r22,100203fc <__divdf3+0x648>
10020134:	9d80b026 	beq	r19,r22,100203f8 <__divdf3+0x644>
10020138:	ad7fffc4 	addi	r21,r21,-1
1002013c:	b007883a 	mov	r3,r22
10020140:	0021883a 	mov	r16,zero
10020144:	400cd63a 	srli	r6,r8,24
10020148:	9826923a 	slli	r19,r19,8
1002014c:	4004923a 	slli	r2,r8,8
10020150:	1809883a 	mov	r4,r3
10020154:	34e2b03a 	or	r17,r6,r19
10020158:	8828d43a 	srli	r20,r17,16
1002015c:	d8c00115 	stw	r3,4(sp)
10020160:	d8800015 	stw	r2,0(sp)
10020164:	a00b883a 	mov	r5,r20
10020168:	0013fa40 	call	10013fa4 <__udivsi3>
1002016c:	d8c00117 	ldw	r3,4(sp)
10020170:	a00b883a 	mov	r5,r20
10020174:	102d883a 	mov	r22,r2
10020178:	1809883a 	mov	r4,r3
1002017c:	00140080 	call	10014008 <__umodsi3>
10020180:	1006943a 	slli	r3,r2,16
10020184:	8dffffcc 	andi	r23,r17,65535
10020188:	9004d43a 	srli	r2,r18,16
1002018c:	bda7383a 	mul	r19,r23,r22
10020190:	10c4b03a 	or	r2,r2,r3
10020194:	14c0042e 	bgeu	r2,r19,100201a8 <__divdf3+0x3f4>
10020198:	1445883a 	add	r2,r2,r17
1002019c:	b0ffffc4 	addi	r3,r22,-1
100201a0:	1440e12e 	bgeu	r2,r17,10020528 <__divdf3+0x774>
100201a4:	182d883a 	mov	r22,r3
100201a8:	14e7c83a 	sub	r19,r2,r19
100201ac:	a00b883a 	mov	r5,r20
100201b0:	9809883a 	mov	r4,r19
100201b4:	0013fa40 	call	10013fa4 <__udivsi3>
100201b8:	a00b883a 	mov	r5,r20
100201bc:	9809883a 	mov	r4,r19
100201c0:	d8800115 	stw	r2,4(sp)
100201c4:	00140080 	call	10014008 <__umodsi3>
100201c8:	d8c00117 	ldw	r3,4(sp)
100201cc:	1004943a 	slli	r2,r2,16
100201d0:	94bfffcc 	andi	r18,r18,65535
100201d4:	b8cb383a 	mul	r5,r23,r3
100201d8:	9084b03a 	or	r2,r18,r2
100201dc:	1140042e 	bgeu	r2,r5,100201f0 <__divdf3+0x43c>
100201e0:	1445883a 	add	r2,r2,r17
100201e4:	193fffc4 	addi	r4,r3,-1
100201e8:	1440cb2e 	bgeu	r2,r17,10020518 <__divdf3+0x764>
100201ec:	2007883a 	mov	r3,r4
100201f0:	b008943a 	slli	r4,r22,16
100201f4:	d9800017 	ldw	r6,0(sp)
100201f8:	1145c83a 	sub	r2,r2,r5
100201fc:	20ecb03a 	or	r22,r4,r3
10020200:	b0ffffcc 	andi	r3,r22,65535
10020204:	300ed43a 	srli	r7,r6,16
10020208:	323fffcc 	andi	r8,r6,65535
1002020c:	b026d43a 	srli	r19,r22,16
10020210:	40e5383a 	mul	r18,r8,r3
10020214:	38c9383a 	mul	r4,r7,r3
10020218:	9a13383a 	mul	r9,r19,r8
1002021c:	9006d43a 	srli	r3,r18,16
10020220:	2249883a 	add	r4,r4,r9
10020224:	1907883a 	add	r3,r3,r4
10020228:	99c9383a 	mul	r4,r19,r7
1002022c:	1a40022e 	bgeu	r3,r9,10020238 <__divdf3+0x484>
10020230:	01400074 	movhi	r5,1
10020234:	2149883a 	add	r4,r4,r5
10020238:	1826d43a 	srli	r19,r3,16
1002023c:	1806943a 	slli	r3,r3,16
10020240:	94bfffcc 	andi	r18,r18,65535
10020244:	9927883a 	add	r19,r19,r4
10020248:	1ca5883a 	add	r18,r3,r18
1002024c:	14c05f36 	bltu	r2,r19,100203cc <__divdf3+0x618>
10020250:	14c05d26 	beq	r2,r19,100203c8 <__divdf3+0x614>
10020254:	84a5c83a 	sub	r18,r16,r18
10020258:	14c5c83a 	sub	r2,r2,r19
1002025c:	84a7803a 	cmpltu	r19,r16,r18
10020260:	da000215 	stw	r8,8(sp)
10020264:	d9c00115 	stw	r7,4(sp)
10020268:	14e7c83a 	sub	r19,r2,r19
1002026c:	ac00ffc4 	addi	r16,r21,1023
10020270:	8cc0b626 	beq	r17,r19,1002054c <__divdf3+0x798>
10020274:	9809883a 	mov	r4,r19
10020278:	a00b883a 	mov	r5,r20
1002027c:	0013fa40 	call	10013fa4 <__udivsi3>
10020280:	9809883a 	mov	r4,r19
10020284:	a00b883a 	mov	r5,r20
10020288:	d8800315 	stw	r2,12(sp)
1002028c:	00140080 	call	10014008 <__umodsi3>
10020290:	d8c00317 	ldw	r3,12(sp)
10020294:	1008943a 	slli	r4,r2,16
10020298:	9004d43a 	srli	r2,r18,16
1002029c:	b8e7383a 	mul	r19,r23,r3
100202a0:	d9c00117 	ldw	r7,4(sp)
100202a4:	1104b03a 	or	r2,r2,r4
100202a8:	da000217 	ldw	r8,8(sp)
100202ac:	14c0062e 	bgeu	r2,r19,100202c8 <__divdf3+0x514>
100202b0:	1445883a 	add	r2,r2,r17
100202b4:	193fffc4 	addi	r4,r3,-1
100202b8:	1440ab36 	bltu	r2,r17,10020568 <__divdf3+0x7b4>
100202bc:	14c0aa2e 	bgeu	r2,r19,10020568 <__divdf3+0x7b4>
100202c0:	18ffff84 	addi	r3,r3,-2
100202c4:	1445883a 	add	r2,r2,r17
100202c8:	14e7c83a 	sub	r19,r2,r19
100202cc:	a00b883a 	mov	r5,r20
100202d0:	9809883a 	mov	r4,r19
100202d4:	da000415 	stw	r8,16(sp)
100202d8:	d8c00315 	stw	r3,12(sp)
100202dc:	d9c00215 	stw	r7,8(sp)
100202e0:	0013fa40 	call	10013fa4 <__udivsi3>
100202e4:	a00b883a 	mov	r5,r20
100202e8:	9809883a 	mov	r4,r19
100202ec:	d8800115 	stw	r2,4(sp)
100202f0:	00140080 	call	10014008 <__umodsi3>
100202f4:	da400117 	ldw	r9,4(sp)
100202f8:	1004943a 	slli	r2,r2,16
100202fc:	94bfffcc 	andi	r18,r18,65535
10020300:	ba6f383a 	mul	r23,r23,r9
10020304:	9084b03a 	or	r2,r18,r2
10020308:	d9c00217 	ldw	r7,8(sp)
1002030c:	d8c00317 	ldw	r3,12(sp)
10020310:	da000417 	ldw	r8,16(sp)
10020314:	15c0062e 	bgeu	r2,r23,10020330 <__divdf3+0x57c>
10020318:	1445883a 	add	r2,r2,r17
1002031c:	493fffc4 	addi	r4,r9,-1
10020320:	14408f36 	bltu	r2,r17,10020560 <__divdf3+0x7ac>
10020324:	15c08e2e 	bgeu	r2,r23,10020560 <__divdf3+0x7ac>
10020328:	4a7fff84 	addi	r9,r9,-2
1002032c:	1445883a 	add	r2,r2,r17
10020330:	180a943a 	slli	r5,r3,16
10020334:	15c5c83a 	sub	r2,r2,r23
10020338:	2a64b03a 	or	r18,r5,r9
1002033c:	9012d43a 	srli	r9,r18,16
10020340:	913fffcc 	andi	r4,r18,65535
10020344:	220b383a 	mul	r5,r4,r8
10020348:	3909383a 	mul	r4,r7,r4
1002034c:	4a11383a 	mul	r8,r9,r8
10020350:	2806d43a 	srli	r3,r5,16
10020354:	3a4f383a 	mul	r7,r7,r9
10020358:	2209883a 	add	r4,r4,r8
1002035c:	1907883a 	add	r3,r3,r4
10020360:	1a00022e 	bgeu	r3,r8,1002036c <__divdf3+0x5b8>
10020364:	01000074 	movhi	r4,1
10020368:	390f883a 	add	r7,r7,r4
1002036c:	1808d43a 	srli	r4,r3,16
10020370:	1806943a 	slli	r3,r3,16
10020374:	297fffcc 	andi	r5,r5,65535
10020378:	21cf883a 	add	r7,r4,r7
1002037c:	1947883a 	add	r3,r3,r5
10020380:	11c00a36 	bltu	r2,r7,100203ac <__divdf3+0x5f8>
10020384:	11c00826 	beq	r2,r7,100203a8 <__divdf3+0x5f4>
10020388:	94800054 	ori	r18,r18,1
1002038c:	003ee306 	br	1001ff1c <__divdf3+0x168>
10020390:	00800434 	movhi	r2,16
10020394:	b1000234 	orhi	r4,r22,8
10020398:	10bfffc4 	addi	r2,r2,-1
1002039c:	2088703a 	and	r4,r4,r2
100203a0:	a039883a 	mov	fp,r20
100203a4:	003f5506 	br	100200fc <__divdf3+0x348>
100203a8:	183edc26 	beq	r3,zero,1001ff1c <__divdf3+0x168>
100203ac:	8885883a 	add	r2,r17,r2
100203b0:	913fffc4 	addi	r4,r18,-1
100203b4:	14406036 	bltu	r2,r17,10020538 <__divdf3+0x784>
100203b8:	11c07d36 	bltu	r2,r7,100205b0 <__divdf3+0x7fc>
100203bc:	11c0a326 	beq	r2,r7,1002064c <__divdf3+0x898>
100203c0:	2025883a 	mov	r18,r4
100203c4:	003ff006 	br	10020388 <__divdf3+0x5d4>
100203c8:	84bfa22e 	bgeu	r16,r18,10020254 <__divdf3+0x4a0>
100203cc:	d8c00017 	ldw	r3,0(sp)
100203d0:	80e1883a 	add	r16,r16,r3
100203d4:	80c7803a 	cmpltu	r3,r16,r3
100203d8:	1c47883a 	add	r3,r3,r17
100203dc:	10c5883a 	add	r2,r2,r3
100203e0:	b0ffffc4 	addi	r3,r22,-1
100203e4:	8880482e 	bgeu	r17,r2,10020508 <__divdf3+0x754>
100203e8:	14c06a36 	bltu	r2,r19,10020594 <__divdf3+0x7e0>
100203ec:	98806826 	beq	r19,r2,10020590 <__divdf3+0x7dc>
100203f0:	182d883a 	mov	r22,r3
100203f4:	003f9706 	br	10020254 <__divdf3+0x4a0>
100203f8:	923f4f36 	bltu	r18,r8,10020138 <__divdf3+0x384>
100203fc:	b00a97fa 	slli	r5,r22,31
10020400:	9004d07a 	srli	r2,r18,1
10020404:	902097fa 	slli	r16,r18,31
10020408:	b006d07a 	srli	r3,r22,1
1002040c:	28a4b03a 	or	r18,r5,r2
10020410:	003f4c06 	br	10020144 <__divdf3+0x390>
10020414:	0021aec0 	call	10021aec <__clzsi2>
10020418:	11000544 	addi	r4,r2,21
1002041c:	21400748 	cmpgei	r5,r4,29
10020420:	15400804 	addi	r21,r2,32
10020424:	d9800017 	ldw	r6,0(sp)
10020428:	d9c00117 	ldw	r7,4(sp)
1002042c:	283f0a26 	beq	r5,zero,10020058 <__divdf3+0x2a4>
10020430:	113ffe04 	addi	r4,r2,-8
10020434:	912c983a 	sll	r22,r18,r4
10020438:	0025883a 	mov	r18,zero
1002043c:	003f0d06 	br	10020074 <__divdf3+0x2c0>
10020440:	3009883a 	mov	r4,r6
10020444:	d9c00115 	stw	r7,4(sp)
10020448:	d9800015 	stw	r6,0(sp)
1002044c:	0021aec0 	call	10021aec <__clzsi2>
10020450:	11400544 	addi	r5,r2,21
10020454:	28c00748 	cmpgei	r3,r5,29
10020458:	1009883a 	mov	r4,r2
1002045c:	d9800017 	ldw	r6,0(sp)
10020460:	10800804 	addi	r2,r2,32
10020464:	d9c00117 	ldw	r7,4(sp)
10020468:	183ee426 	beq	r3,zero,1001fffc <__divdf3+0x248>
1002046c:	213ffe04 	addi	r4,r4,-8
10020470:	3126983a 	sll	r19,r6,r4
10020474:	0011883a 	mov	r8,zero
10020478:	003ee706 	br	10020018 <__divdf3+0x264>
1002047c:	04bfffc4 	movi	r18,-1
10020480:	01000044 	movi	r4,1
10020484:	2409c83a 	sub	r4,r4,r16
10020488:	20800e48 	cmpgei	r2,r4,57
1002048c:	103eb61e 	bne	r2,zero,1001ff68 <__divdf3+0x1b4>
10020490:	20800808 	cmpgei	r2,r4,32
10020494:	10004e1e 	bne	r2,zero,100205d0 <__divdf3+0x81c>
10020498:	a8810784 	addi	r2,r21,1054
1002049c:	b086983a 	sll	r3,r22,r2
100204a0:	910ad83a 	srl	r5,r18,r4
100204a4:	9084983a 	sll	r2,r18,r2
100204a8:	b108d83a 	srl	r4,r22,r4
100204ac:	1964b03a 	or	r18,r3,r5
100204b0:	1004c03a 	cmpne	r2,r2,zero
100204b4:	90a4b03a 	or	r18,r18,r2
100204b8:	908001cc 	andi	r2,r18,7
100204bc:	10000726 	beq	r2,zero,100204dc <__divdf3+0x728>
100204c0:	908003cc 	andi	r2,r18,15
100204c4:	10800120 	cmpeqi	r2,r2,4
100204c8:	1000041e 	bne	r2,zero,100204dc <__divdf3+0x728>
100204cc:	90800104 	addi	r2,r18,4
100204d0:	14a5803a 	cmpltu	r18,r2,r18
100204d4:	2489883a 	add	r4,r4,r18
100204d8:	1025883a 	mov	r18,r2
100204dc:	2080202c 	andhi	r2,r4,128
100204e0:	10005026 	beq	r2,zero,10020624 <__divdf3+0x870>
100204e4:	00800044 	movi	r2,1
100204e8:	0009883a 	mov	r4,zero
100204ec:	0025883a 	mov	r18,zero
100204f0:	003ea006 	br	1001ff74 <__divdf3+0x1c0>
100204f4:	b839883a 	mov	fp,r23
100204f8:	0081ffc4 	movi	r2,2047
100204fc:	0009883a 	mov	r4,zero
10020500:	0025883a 	mov	r18,zero
10020504:	003e9b06 	br	1001ff74 <__divdf3+0x1c0>
10020508:	88bfb91e 	bne	r17,r2,100203f0 <__divdf3+0x63c>
1002050c:	d9000017 	ldw	r4,0(sp)
10020510:	813fb736 	bltu	r16,r4,100203f0 <__divdf3+0x63c>
10020514:	003fb406 	br	100203e8 <__divdf3+0x634>
10020518:	117f342e 	bgeu	r2,r5,100201ec <__divdf3+0x438>
1002051c:	18ffff84 	addi	r3,r3,-2
10020520:	1445883a 	add	r2,r2,r17
10020524:	003f3206 	br	100201f0 <__divdf3+0x43c>
10020528:	14ff1e2e 	bgeu	r2,r19,100201a4 <__divdf3+0x3f0>
1002052c:	b5bfff84 	addi	r22,r22,-2
10020530:	1445883a 	add	r2,r2,r17
10020534:	003f1c06 	br	100201a8 <__divdf3+0x3f4>
10020538:	2025883a 	mov	r18,r4
1002053c:	11ff921e 	bne	r2,r7,10020388 <__divdf3+0x5d4>
10020540:	d8800017 	ldw	r2,0(sp)
10020544:	10ff901e 	bne	r2,r3,10020388 <__divdf3+0x5d4>
10020548:	003e7406 	br	1001ff1c <__divdf3+0x168>
1002054c:	043fcb0e 	bge	zero,r16,1002047c <__divdf3+0x6c8>
10020550:	000b883a 	mov	r5,zero
10020554:	04800044 	movi	r18,1
10020558:	b4ad883a 	add	r22,r22,r18
1002055c:	003e7306 	br	1001ff2c <__divdf3+0x178>
10020560:	2013883a 	mov	r9,r4
10020564:	003f7206 	br	10020330 <__divdf3+0x57c>
10020568:	2007883a 	mov	r3,r4
1002056c:	003f5606 	br	100202c8 <__divdf3+0x514>
10020570:	908003cc 	andi	r2,r18,15
10020574:	10800118 	cmpnei	r2,r2,4
10020578:	103e6b26 	beq	r2,zero,1001ff28 <__divdf3+0x174>
1002057c:	91400104 	addi	r5,r18,4
10020580:	00bffec4 	movi	r2,-5
10020584:	14a5803a 	cmpltu	r18,r2,r18
10020588:	280ad0fa 	srli	r5,r5,3
1002058c:	003ff206 	br	10020558 <__divdf3+0x7a4>
10020590:	84bf972e 	bgeu	r16,r18,100203f0 <__divdf3+0x63c>
10020594:	d8c00017 	ldw	r3,0(sp)
10020598:	b5bfff84 	addi	r22,r22,-2
1002059c:	80e1883a 	add	r16,r16,r3
100205a0:	80c7803a 	cmpltu	r3,r16,r3
100205a4:	1c47883a 	add	r3,r3,r17
100205a8:	10c5883a 	add	r2,r2,r3
100205ac:	003f2906 	br	10020254 <__divdf3+0x4a0>
100205b0:	d9400017 	ldw	r5,0(sp)
100205b4:	94bfff84 	addi	r18,r18,-2
100205b8:	2949883a 	add	r4,r5,r5
100205bc:	214b803a 	cmpltu	r5,r4,r5
100205c0:	2c4d883a 	add	r6,r5,r17
100205c4:	1185883a 	add	r2,r2,r6
100205c8:	d9000015 	stw	r4,0(sp)
100205cc:	003fdb06 	br	1002053c <__divdf3+0x788>
100205d0:	00bff844 	movi	r2,-31
100205d4:	1421c83a 	sub	r16,r2,r16
100205d8:	21000820 	cmpeqi	r4,r4,32
100205dc:	b420d83a 	srl	r16,r22,r16
100205e0:	2000031e 	bne	r4,zero,100205f0 <__divdf3+0x83c>
100205e4:	a8810f84 	addi	r2,r21,1086
100205e8:	b088983a 	sll	r4,r22,r2
100205ec:	9124b03a 	or	r18,r18,r4
100205f0:	9024c03a 	cmpne	r18,r18,zero
100205f4:	9424b03a 	or	r18,r18,r16
100205f8:	914001cc 	andi	r5,r18,7
100205fc:	2800051e 	bne	r5,zero,10020614 <__divdf3+0x860>
10020600:	0009883a 	mov	r4,zero
10020604:	9024d0fa 	srli	r18,r18,3
10020608:	0005883a 	mov	r2,zero
1002060c:	9164b03a 	or	r18,r18,r5
10020610:	003e5806 	br	1001ff74 <__divdf3+0x1c0>
10020614:	908003cc 	andi	r2,r18,15
10020618:	10800118 	cmpnei	r2,r2,4
1002061c:	0009883a 	mov	r4,zero
10020620:	103faa1e 	bne	r2,zero,100204cc <__divdf3+0x718>
10020624:	2004927a 	slli	r2,r4,9
10020628:	200a977a 	slli	r5,r4,29
1002062c:	1008d33a 	srli	r4,r2,12
10020630:	003ff406 	br	10020604 <__divdf3+0x850>
10020634:	00800434 	movhi	r2,16
10020638:	b1000234 	orhi	r4,r22,8
1002063c:	10bfffc4 	addi	r2,r2,-1
10020640:	2088703a 	and	r4,r4,r2
10020644:	b839883a 	mov	fp,r23
10020648:	003eac06 	br	100200fc <__divdf3+0x348>
1002064c:	d9400017 	ldw	r5,0(sp)
10020650:	28ffd736 	bltu	r5,r3,100205b0 <__divdf3+0x7fc>
10020654:	2025883a 	mov	r18,r4
10020658:	003fb906 	br	10020540 <__divdf3+0x78c>

1002065c <__eqdf2>:
1002065c:	2810d53a 	srli	r8,r5,20
10020660:	3806d53a 	srli	r3,r7,20
10020664:	00800434 	movhi	r2,16
10020668:	4201ffcc 	andi	r8,r8,2047
1002066c:	10bfffc4 	addi	r2,r2,-1
10020670:	4281ffd8 	cmpnei	r10,r8,2047
10020674:	2892703a 	and	r9,r5,r2
10020678:	18c1ffcc 	andi	r3,r3,2047
1002067c:	3884703a 	and	r2,r7,r2
10020680:	280ad7fa 	srli	r5,r5,31
10020684:	380ed7fa 	srli	r7,r7,31
10020688:	50000626 	beq	r10,zero,100206a4 <__eqdf2+0x48>
1002068c:	1a81ffe0 	cmpeqi	r10,r3,2047
10020690:	5000021e 	bne	r10,zero,1002069c <__eqdf2+0x40>
10020694:	40c0011e 	bne	r8,r3,1002069c <__eqdf2+0x40>
10020698:	48800826 	beq	r9,r2,100206bc <__eqdf2+0x60>
1002069c:	00800044 	movi	r2,1
100206a0:	f800283a 	ret
100206a4:	4914b03a 	or	r10,r9,r4
100206a8:	503ffc1e 	bne	r10,zero,1002069c <__eqdf2+0x40>
100206ac:	18c1ffd8 	cmpnei	r3,r3,2047
100206b0:	183ffa1e 	bne	r3,zero,1002069c <__eqdf2+0x40>
100206b4:	1184b03a 	or	r2,r2,r6
100206b8:	103ff81e 	bne	r2,zero,1002069c <__eqdf2+0x40>
100206bc:	21bff71e 	bne	r4,r6,1002069c <__eqdf2+0x40>
100206c0:	29c00426 	beq	r5,r7,100206d4 <__eqdf2+0x78>
100206c4:	403ff51e 	bne	r8,zero,1002069c <__eqdf2+0x40>
100206c8:	4904b03a 	or	r2,r9,r4
100206cc:	1004c03a 	cmpne	r2,r2,zero
100206d0:	f800283a 	ret
100206d4:	0005883a 	mov	r2,zero
100206d8:	f800283a 	ret

100206dc <__gedf2>:
100206dc:	2810d53a 	srli	r8,r5,20
100206e0:	3812d53a 	srli	r9,r7,20
100206e4:	00800434 	movhi	r2,16
100206e8:	4201ffcc 	andi	r8,r8,2047
100206ec:	10bfffc4 	addi	r2,r2,-1
100206f0:	4281ffd8 	cmpnei	r10,r8,2047
100206f4:	2896703a 	and	r11,r5,r2
100206f8:	3886703a 	and	r3,r7,r2
100206fc:	280ad7fa 	srli	r5,r5,31
10020700:	4a41ffcc 	andi	r9,r9,2047
10020704:	3804d7fa 	srli	r2,r7,31
10020708:	50000b26 	beq	r10,zero,10020738 <__gedf2+0x5c>
1002070c:	49c1ffd8 	cmpnei	r7,r9,2047
10020710:	38000d26 	beq	r7,zero,10020748 <__gedf2+0x6c>
10020714:	4000191e 	bne	r8,zero,1002077c <__gedf2+0xa0>
10020718:	5914b03a 	or	r10,r11,r4
1002071c:	500f003a 	cmpeq	r7,r10,zero
10020720:	4800131e 	bne	r9,zero,10020770 <__gedf2+0x94>
10020724:	1998b03a 	or	r12,r3,r6
10020728:	6000111e 	bne	r12,zero,10020770 <__gedf2+0x94>
1002072c:	50000a1e 	bne	r10,zero,10020758 <__gedf2+0x7c>
10020730:	0005883a 	mov	r2,zero
10020734:	f800283a 	ret
10020738:	590eb03a 	or	r7,r11,r4
1002073c:	38001e1e 	bne	r7,zero,100207b8 <__gedf2+0xdc>
10020740:	49c1ffe0 	cmpeqi	r7,r9,2047
10020744:	38000d26 	beq	r7,zero,1002077c <__gedf2+0xa0>
10020748:	198eb03a 	or	r7,r3,r6
1002074c:	38001a1e 	bne	r7,zero,100207b8 <__gedf2+0xdc>
10020750:	40000526 	beq	r8,zero,10020768 <__gedf2+0x8c>
10020754:	28800d26 	beq	r5,r2,1002078c <__gedf2+0xb0>
10020758:	00800044 	movi	r2,1
1002075c:	28000626 	beq	r5,zero,10020778 <__gedf2+0x9c>
10020760:	00bfffc4 	movi	r2,-1
10020764:	f800283a 	ret
10020768:	590eb03a 	or	r7,r11,r4
1002076c:	380f003a 	cmpeq	r7,r7,zero
10020770:	383ff826 	beq	r7,zero,10020754 <__gedf2+0x78>
10020774:	103ffa26 	beq	r2,zero,10020760 <__gedf2+0x84>
10020778:	f800283a 	ret
1002077c:	483ff51e 	bne	r9,zero,10020754 <__gedf2+0x78>
10020780:	198eb03a 	or	r7,r3,r6
10020784:	383ff31e 	bne	r7,zero,10020754 <__gedf2+0x78>
10020788:	003ff306 	br	10020758 <__gedf2+0x7c>
1002078c:	4a000716 	blt	r9,r8,100207ac <__gedf2+0xd0>
10020790:	427ff816 	blt	r8,r9,10020774 <__gedf2+0x98>
10020794:	1afff036 	bltu	r3,r11,10020758 <__gedf2+0x7c>
10020798:	58c00926 	beq	r11,r3,100207c0 <__gedf2+0xe4>
1002079c:	58ffe42e 	bgeu	r11,r3,10020730 <__gedf2+0x54>
100207a0:	283fef26 	beq	r5,zero,10020760 <__gedf2+0x84>
100207a4:	2805883a 	mov	r2,r5
100207a8:	f800283a 	ret
100207ac:	103fec1e 	bne	r2,zero,10020760 <__gedf2+0x84>
100207b0:	00800044 	movi	r2,1
100207b4:	f800283a 	ret
100207b8:	00bfff84 	movi	r2,-2
100207bc:	f800283a 	ret
100207c0:	313fe536 	bltu	r6,r4,10020758 <__gedf2+0x7c>
100207c4:	21bfda2e 	bgeu	r4,r6,10020730 <__gedf2+0x54>
100207c8:	003ff506 	br	100207a0 <__gedf2+0xc4>

100207cc <__ledf2>:
100207cc:	2810d53a 	srli	r8,r5,20
100207d0:	3812d53a 	srli	r9,r7,20
100207d4:	00800434 	movhi	r2,16
100207d8:	4201ffcc 	andi	r8,r8,2047
100207dc:	10bfffc4 	addi	r2,r2,-1
100207e0:	4281ffd8 	cmpnei	r10,r8,2047
100207e4:	2896703a 	and	r11,r5,r2
100207e8:	3886703a 	and	r3,r7,r2
100207ec:	280ad7fa 	srli	r5,r5,31
100207f0:	4a41ffcc 	andi	r9,r9,2047
100207f4:	3804d7fa 	srli	r2,r7,31
100207f8:	50000b26 	beq	r10,zero,10020828 <__ledf2+0x5c>
100207fc:	49c1ffd8 	cmpnei	r7,r9,2047
10020800:	38000d26 	beq	r7,zero,10020838 <__ledf2+0x6c>
10020804:	40001b1e 	bne	r8,zero,10020874 <__ledf2+0xa8>
10020808:	5914b03a 	or	r10,r11,r4
1002080c:	500f003a 	cmpeq	r7,r10,zero
10020810:	48000e1e 	bne	r9,zero,1002084c <__ledf2+0x80>
10020814:	1998b03a 	or	r12,r3,r6
10020818:	60000c1e 	bne	r12,zero,1002084c <__ledf2+0x80>
1002081c:	50000d1e 	bne	r10,zero,10020854 <__ledf2+0x88>
10020820:	0005883a 	mov	r2,zero
10020824:	f800283a 	ret
10020828:	590eb03a 	or	r7,r11,r4
1002082c:	38000d1e 	bne	r7,zero,10020864 <__ledf2+0x98>
10020830:	49c1ffe0 	cmpeqi	r7,r9,2047
10020834:	38000f26 	beq	r7,zero,10020874 <__ledf2+0xa8>
10020838:	198eb03a 	or	r7,r3,r6
1002083c:	3800091e 	bne	r7,zero,10020864 <__ledf2+0x98>
10020840:	4000031e 	bne	r8,zero,10020850 <__ledf2+0x84>
10020844:	590eb03a 	or	r7,r11,r4
10020848:	380f003a 	cmpeq	r7,r7,zero
1002084c:	3800071e 	bne	r7,zero,1002086c <__ledf2+0xa0>
10020850:	28800c26 	beq	r5,r2,10020884 <__ledf2+0xb8>
10020854:	00800044 	movi	r2,1
10020858:	28000526 	beq	r5,zero,10020870 <__ledf2+0xa4>
1002085c:	00bfffc4 	movi	r2,-1
10020860:	f800283a 	ret
10020864:	00800084 	movi	r2,2
10020868:	f800283a 	ret
1002086c:	103ffb26 	beq	r2,zero,1002085c <__ledf2+0x90>
10020870:	f800283a 	ret
10020874:	483ff61e 	bne	r9,zero,10020850 <__ledf2+0x84>
10020878:	198eb03a 	or	r7,r3,r6
1002087c:	383ff41e 	bne	r7,zero,10020850 <__ledf2+0x84>
10020880:	003ff406 	br	10020854 <__ledf2+0x88>
10020884:	4a00030e 	bge	r9,r8,10020894 <__ledf2+0xc8>
10020888:	103ff41e 	bne	r2,zero,1002085c <__ledf2+0x90>
1002088c:	00800044 	movi	r2,1
10020890:	f800283a 	ret
10020894:	427ff516 	blt	r8,r9,1002086c <__ledf2+0xa0>
10020898:	1affee36 	bltu	r3,r11,10020854 <__ledf2+0x88>
1002089c:	58c00426 	beq	r11,r3,100208b0 <__ledf2+0xe4>
100208a0:	58ffdf2e 	bgeu	r11,r3,10020820 <__ledf2+0x54>
100208a4:	283fed26 	beq	r5,zero,1002085c <__ledf2+0x90>
100208a8:	2805883a 	mov	r2,r5
100208ac:	f800283a 	ret
100208b0:	313fe836 	bltu	r6,r4,10020854 <__ledf2+0x88>
100208b4:	21bfda2e 	bgeu	r4,r6,10020820 <__ledf2+0x54>
100208b8:	003ffa06 	br	100208a4 <__ledf2+0xd8>

100208bc <__muldf3>:
100208bc:	2806d53a 	srli	r3,r5,20
100208c0:	defff504 	addi	sp,sp,-44
100208c4:	dc000215 	stw	r16,8(sp)
100208c8:	04000434 	movhi	r16,16
100208cc:	dd000615 	stw	r20,24(sp)
100208d0:	dc800415 	stw	r18,16(sp)
100208d4:	843fffc4 	addi	r16,r16,-1
100208d8:	dfc00a15 	stw	ra,40(sp)
100208dc:	ddc00915 	stw	r23,36(sp)
100208e0:	dd800815 	stw	r22,32(sp)
100208e4:	dd400715 	stw	r21,28(sp)
100208e8:	dcc00515 	stw	r19,20(sp)
100208ec:	dc400315 	stw	r17,12(sp)
100208f0:	18c1ffcc 	andi	r3,r3,2047
100208f4:	2025883a 	mov	r18,r4
100208f8:	2c20703a 	and	r16,r5,r16
100208fc:	2828d7fa 	srli	r20,r5,31
10020900:	18005c26 	beq	r3,zero,10020a74 <__muldf3+0x1b8>
10020904:	1881ffe0 	cmpeqi	r2,r3,2047
10020908:	1000711e 	bne	r2,zero,10020ad0 <__muldf3+0x214>
1002090c:	800490fa 	slli	r2,r16,3
10020910:	2020d77a 	srli	r16,r4,29
10020914:	202290fa 	slli	r17,r4,3
10020918:	1cff0044 	addi	r19,r3,-1023
1002091c:	80a0b03a 	or	r16,r16,r2
10020920:	84002034 	orhi	r16,r16,128
10020924:	002d883a 	mov	r22,zero
10020928:	002f883a 	mov	r23,zero
1002092c:	3806d53a 	srli	r3,r7,20
10020930:	01000434 	movhi	r4,16
10020934:	213fffc4 	addi	r4,r4,-1
10020938:	18c1ffcc 	andi	r3,r3,2047
1002093c:	3924703a 	and	r18,r7,r4
10020940:	382ad7fa 	srli	r21,r7,31
10020944:	18006926 	beq	r3,zero,10020aec <__muldf3+0x230>
10020948:	1881ffe0 	cmpeqi	r2,r3,2047
1002094c:	1000211e 	bne	r2,zero,100209d4 <__muldf3+0x118>
10020950:	900890fa 	slli	r4,r18,3
10020954:	300ad77a 	srli	r5,r6,29
10020958:	301090fa 	slli	r8,r6,3
1002095c:	18ff0044 	addi	r3,r3,-1023
10020960:	2908b03a 	or	r4,r5,r4
10020964:	98e7883a 	add	r19,r19,r3
10020968:	24802034 	orhi	r18,r4,128
1002096c:	0007883a 	mov	r3,zero
10020970:	b1000428 	cmpgeui	r4,r22,16
10020974:	a54cf03a 	xor	r6,r20,r21
10020978:	99400044 	addi	r5,r19,1
1002097c:	2000981e 	bne	r4,zero,10020be0 <__muldf3+0x324>
10020980:	b00890ba 	slli	r4,r22,2
10020984:	008400b4 	movhi	r2,4098
10020988:	2085883a 	add	r2,r4,r2
1002098c:	10826517 	ldw	r2,2452(r2)
10020990:	1000683a 	jmp	r2
10020994:	10020be0 	cmpeqi	zero,r2,2095
10020998:	100209f4 	orhi	zero,r2,2087
1002099c:	100209f4 	orhi	zero,r2,2087
100209a0:	100209f0 	cmpltui	zero,r2,2087
100209a4:	10020a00 	call	110020a0 <_gp+0xfd1c88>
100209a8:	10020a00 	call	110020a0 <_gp+0xfd1c88>
100209ac:	10020b9c 	xori	zero,r2,2094
100209b0:	100209f0 	cmpltui	zero,r2,2087
100209b4:	10020a00 	call	110020a0 <_gp+0xfd1c88>
100209b8:	10020b9c 	xori	zero,r2,2094
100209bc:	10020a00 	call	110020a0 <_gp+0xfd1c88>
100209c0:	100209f0 	cmpltui	zero,r2,2087
100209c4:	10020b94 	ori	zero,r2,2094
100209c8:	10020b94 	ori	zero,r2,2094
100209cc:	10020b94 	ori	zero,r2,2094
100209d0:	10020bb4 	orhi	zero,r2,2094
100209d4:	3490b03a 	or	r8,r6,r18
100209d8:	9cc1ffc4 	addi	r19,r19,2047
100209dc:	4000691e 	bne	r8,zero,10020b84 <__muldf3+0x2c8>
100209e0:	b5800094 	ori	r22,r22,2
100209e4:	0025883a 	mov	r18,zero
100209e8:	00c00084 	movi	r3,2
100209ec:	003fe006 	br	10020970 <__muldf3+0xb4>
100209f0:	a80d883a 	mov	r6,r21
100209f4:	9021883a 	mov	r16,r18
100209f8:	4023883a 	mov	r17,r8
100209fc:	182f883a 	mov	r23,r3
10020a00:	b88000a0 	cmpeqi	r2,r23,2
10020a04:	10004d1e 	bne	r2,zero,10020b3c <__muldf3+0x280>
10020a08:	b88000e0 	cmpeqi	r2,r23,3
10020a0c:	1001491e 	bne	r2,zero,10020f34 <__muldf3+0x678>
10020a10:	b8800060 	cmpeqi	r2,r23,1
10020a14:	1000d826 	beq	r2,zero,10020d78 <__muldf3+0x4bc>
10020a18:	0007883a 	mov	r3,zero
10020a1c:	0021883a 	mov	r16,zero
10020a20:	0023883a 	mov	r17,zero
10020a24:	30803fcc 	andi	r2,r6,255
10020a28:	01000434 	movhi	r4,16
10020a2c:	1806953a 	slli	r3,r3,20
10020a30:	213fffc4 	addi	r4,r4,-1
10020a34:	100497fa 	slli	r2,r2,31
10020a38:	8120703a 	and	r16,r16,r4
10020a3c:	80c6b03a 	or	r3,r16,r3
10020a40:	1886b03a 	or	r3,r3,r2
10020a44:	8805883a 	mov	r2,r17
10020a48:	dfc00a17 	ldw	ra,40(sp)
10020a4c:	ddc00917 	ldw	r23,36(sp)
10020a50:	dd800817 	ldw	r22,32(sp)
10020a54:	dd400717 	ldw	r21,28(sp)
10020a58:	dd000617 	ldw	r20,24(sp)
10020a5c:	dcc00517 	ldw	r19,20(sp)
10020a60:	dc800417 	ldw	r18,16(sp)
10020a64:	dc400317 	ldw	r17,12(sp)
10020a68:	dc000217 	ldw	r16,8(sp)
10020a6c:	dec00b04 	addi	sp,sp,44
10020a70:	f800283a 	ret
10020a74:	8122b03a 	or	r17,r16,r4
10020a78:	88003d26 	beq	r17,zero,10020b70 <__muldf3+0x2b4>
10020a7c:	d9c00115 	stw	r7,4(sp)
10020a80:	d9800015 	stw	r6,0(sp)
10020a84:	8000e826 	beq	r16,zero,10020e28 <__muldf3+0x56c>
10020a88:	8009883a 	mov	r4,r16
10020a8c:	0021aec0 	call	10021aec <__clzsi2>
10020a90:	d9800017 	ldw	r6,0(sp)
10020a94:	d9c00117 	ldw	r7,4(sp)
10020a98:	1007883a 	mov	r3,r2
10020a9c:	117ffd44 	addi	r5,r2,-11
10020aa0:	01000744 	movi	r4,29
10020aa4:	1c7ffe04 	addi	r17,r3,-8
10020aa8:	2149c83a 	sub	r4,r4,r5
10020aac:	8460983a 	sll	r16,r16,r17
10020ab0:	9108d83a 	srl	r4,r18,r4
10020ab4:	9462983a 	sll	r17,r18,r17
10020ab8:	2420b03a 	or	r16,r4,r16
10020abc:	04ff0344 	movi	r19,-1011
10020ac0:	98e7c83a 	sub	r19,r19,r3
10020ac4:	002d883a 	mov	r22,zero
10020ac8:	002f883a 	mov	r23,zero
10020acc:	003f9706 	br	1002092c <__muldf3+0x70>
10020ad0:	8122b03a 	or	r17,r16,r4
10020ad4:	8800211e 	bne	r17,zero,10020b5c <__muldf3+0x2a0>
10020ad8:	0021883a 	mov	r16,zero
10020adc:	05800204 	movi	r22,8
10020ae0:	04c1ffc4 	movi	r19,2047
10020ae4:	05c00084 	movi	r23,2
10020ae8:	003f9006 	br	1002092c <__muldf3+0x70>
10020aec:	3490b03a 	or	r8,r6,r18
10020af0:	40001626 	beq	r8,zero,10020b4c <__muldf3+0x290>
10020af4:	9000c026 	beq	r18,zero,10020df8 <__muldf3+0x53c>
10020af8:	9009883a 	mov	r4,r18
10020afc:	d9800015 	stw	r6,0(sp)
10020b00:	0021aec0 	call	10021aec <__clzsi2>
10020b04:	d9800017 	ldw	r6,0(sp)
10020b08:	1007883a 	mov	r3,r2
10020b0c:	113ffd44 	addi	r4,r2,-11
10020b10:	01400744 	movi	r5,29
10020b14:	1a3ffe04 	addi	r8,r3,-8
10020b18:	290bc83a 	sub	r5,r5,r4
10020b1c:	314ad83a 	srl	r5,r6,r5
10020b20:	9208983a 	sll	r4,r18,r8
10020b24:	3210983a 	sll	r8,r6,r8
10020b28:	2924b03a 	or	r18,r5,r4
10020b2c:	98c7c83a 	sub	r3,r19,r3
10020b30:	1cff0344 	addi	r19,r3,-1011
10020b34:	0007883a 	mov	r3,zero
10020b38:	003f8d06 	br	10020970 <__muldf3+0xb4>
10020b3c:	00c1ffc4 	movi	r3,2047
10020b40:	0021883a 	mov	r16,zero
10020b44:	0023883a 	mov	r17,zero
10020b48:	003fb606 	br	10020a24 <__muldf3+0x168>
10020b4c:	b5800054 	ori	r22,r22,1
10020b50:	0025883a 	mov	r18,zero
10020b54:	00c00044 	movi	r3,1
10020b58:	003f8506 	br	10020970 <__muldf3+0xb4>
10020b5c:	2023883a 	mov	r17,r4
10020b60:	05800304 	movi	r22,12
10020b64:	04c1ffc4 	movi	r19,2047
10020b68:	05c000c4 	movi	r23,3
10020b6c:	003f6f06 	br	1002092c <__muldf3+0x70>
10020b70:	0021883a 	mov	r16,zero
10020b74:	05800104 	movi	r22,4
10020b78:	0027883a 	mov	r19,zero
10020b7c:	05c00044 	movi	r23,1
10020b80:	003f6a06 	br	1002092c <__muldf3+0x70>
10020b84:	b58000d4 	ori	r22,r22,3
10020b88:	3011883a 	mov	r8,r6
10020b8c:	00c000c4 	movi	r3,3
10020b90:	003f7706 	br	10020970 <__muldf3+0xb4>
10020b94:	a00d883a 	mov	r6,r20
10020b98:	003f9906 	br	10020a00 <__muldf3+0x144>
10020b9c:	04000434 	movhi	r16,16
10020ba0:	000d883a 	mov	r6,zero
10020ba4:	843fffc4 	addi	r16,r16,-1
10020ba8:	047fffc4 	movi	r17,-1
10020bac:	00c1ffc4 	movi	r3,2047
10020bb0:	003f9c06 	br	10020a24 <__muldf3+0x168>
10020bb4:	8080022c 	andhi	r2,r16,8
10020bb8:	10008926 	beq	r2,zero,10020de0 <__muldf3+0x524>
10020bbc:	9080022c 	andhi	r2,r18,8
10020bc0:	1000871e 	bne	r2,zero,10020de0 <__muldf3+0x524>
10020bc4:	00800434 	movhi	r2,16
10020bc8:	94000234 	orhi	r16,r18,8
10020bcc:	10bfffc4 	addi	r2,r2,-1
10020bd0:	80a0703a 	and	r16,r16,r2
10020bd4:	a80d883a 	mov	r6,r21
10020bd8:	4023883a 	mov	r17,r8
10020bdc:	003ff306 	br	10020bac <__muldf3+0x2f0>
10020be0:	8818d43a 	srli	r12,r17,16
10020be4:	4028d43a 	srli	r20,r8,16
10020be8:	42ffffcc 	andi	r11,r8,65535
10020bec:	8c7fffcc 	andi	r17,r17,65535
10020bf0:	5c47383a 	mul	r3,r11,r17
10020bf4:	62c9383a 	mul	r4,r12,r11
10020bf8:	a445383a 	mul	r2,r20,r17
10020bfc:	1810d43a 	srli	r8,r3,16
10020c00:	651d383a 	mul	r14,r12,r20
10020c04:	1105883a 	add	r2,r2,r4
10020c08:	4091883a 	add	r8,r8,r2
10020c0c:	4100022e 	bgeu	r8,r4,10020c18 <__muldf3+0x35c>
10020c10:	00800074 	movhi	r2,1
10020c14:	709d883a 	add	r14,r14,r2
10020c18:	901ed43a 	srli	r15,r18,16
10020c1c:	94bfffcc 	andi	r18,r18,65535
10020c20:	9449383a 	mul	r4,r18,r17
10020c24:	648f383a 	mul	r7,r12,r18
10020c28:	7c63383a 	mul	r17,r15,r17
10020c2c:	201ad43a 	srli	r13,r4,16
10020c30:	4014943a 	slli	r10,r8,16
10020c34:	89e3883a 	add	r17,r17,r7
10020c38:	1a7fffcc 	andi	r9,r3,65535
10020c3c:	6c5b883a 	add	r13,r13,r17
10020c40:	4006d43a 	srli	r3,r8,16
10020c44:	5253883a 	add	r9,r10,r9
10020c48:	63c5383a 	mul	r2,r12,r15
10020c4c:	69c0022e 	bgeu	r13,r7,10020c58 <__muldf3+0x39c>
10020c50:	01c00074 	movhi	r7,1
10020c54:	11c5883a 	add	r2,r2,r7
10020c58:	802ad43a 	srli	r21,r16,16
10020c5c:	823fffcc 	andi	r8,r16,65535
10020c60:	5a2d383a 	mul	r22,r11,r8
10020c64:	a20f383a 	mul	r7,r20,r8
10020c68:	aad7383a 	mul	r11,r21,r11
10020c6c:	6814943a 	slli	r10,r13,16
10020c70:	b018d43a 	srli	r12,r22,16
10020c74:	6822d43a 	srli	r17,r13,16
10020c78:	213fffcc 	andi	r4,r4,65535
10020c7c:	3acf883a 	add	r7,r7,r11
10020c80:	5115883a 	add	r10,r10,r4
10020c84:	61cf883a 	add	r7,r12,r7
10020c88:	889b883a 	add	r13,r17,r2
10020c8c:	1a87883a 	add	r3,r3,r10
10020c90:	a569383a 	mul	r20,r20,r21
10020c94:	3ac0022e 	bgeu	r7,r11,10020ca0 <__muldf3+0x3e4>
10020c98:	00800074 	movhi	r2,1
10020c9c:	a0a9883a 	add	r20,r20,r2
10020ca0:	9217383a 	mul	r11,r18,r8
10020ca4:	aca5383a 	mul	r18,r21,r18
10020ca8:	7a11383a 	mul	r8,r15,r8
10020cac:	5820d43a 	srli	r16,r11,16
10020cb0:	3808d43a 	srli	r4,r7,16
10020cb4:	380e943a 	slli	r7,r7,16
10020cb8:	4491883a 	add	r8,r8,r18
10020cbc:	b5bfffcc 	andi	r22,r22,65535
10020cc0:	8211883a 	add	r8,r16,r8
10020cc4:	2529883a 	add	r20,r4,r20
10020cc8:	3d8f883a 	add	r7,r7,r22
10020ccc:	7d59383a 	mul	r12,r15,r21
10020cd0:	4480022e 	bgeu	r8,r18,10020cdc <__muldf3+0x420>
10020cd4:	00800074 	movhi	r2,1
10020cd8:	6099883a 	add	r12,r12,r2
10020cdc:	4004943a 	slli	r2,r8,16
10020ce0:	5affffcc 	andi	r11,r11,65535
10020ce4:	1b87883a 	add	r3,r3,r14
10020ce8:	12c5883a 	add	r2,r2,r11
10020cec:	1a95803a 	cmpltu	r10,r3,r10
10020cf0:	1345883a 	add	r2,r2,r13
10020cf4:	19c7883a 	add	r3,r3,r7
10020cf8:	129d883a 	add	r14,r2,r10
10020cfc:	19cf803a 	cmpltu	r7,r3,r7
10020d00:	7509883a 	add	r4,r14,r20
10020d04:	4010d43a 	srli	r8,r8,16
10020d08:	21d7883a 	add	r11,r4,r7
10020d0c:	1345803a 	cmpltu	r2,r2,r13
10020d10:	72a1803a 	cmpltu	r16,r14,r10
10020d14:	1420b03a 	or	r16,r2,r16
10020d18:	2509803a 	cmpltu	r4,r4,r20
10020d1c:	59cf803a 	cmpltu	r7,r11,r7
10020d20:	21ceb03a 	or	r7,r4,r7
10020d24:	8221883a 	add	r16,r16,r8
10020d28:	81e1883a 	add	r16,r16,r7
10020d2c:	1822927a 	slli	r17,r3,9
10020d30:	8321883a 	add	r16,r16,r12
10020d34:	8020927a 	slli	r16,r16,9
10020d38:	5808d5fa 	srli	r4,r11,23
10020d3c:	1806d5fa 	srli	r3,r3,23
10020d40:	8a62b03a 	or	r17,r17,r9
10020d44:	5804927a 	slli	r2,r11,9
10020d48:	8120b03a 	or	r16,r16,r4
10020d4c:	8822c03a 	cmpne	r17,r17,zero
10020d50:	88e2b03a 	or	r17,r17,r3
10020d54:	80c0402c 	andhi	r3,r16,256
10020d58:	88a2b03a 	or	r17,r17,r2
10020d5c:	18005a26 	beq	r3,zero,10020ec8 <__muldf3+0x60c>
10020d60:	8804d07a 	srli	r2,r17,1
10020d64:	800697fa 	slli	r3,r16,31
10020d68:	8c40004c 	andi	r17,r17,1
10020d6c:	8020d07a 	srli	r16,r16,1
10020d70:	1462b03a 	or	r17,r2,r17
10020d74:	88e2b03a 	or	r17,r17,r3
10020d78:	28c0ffc4 	addi	r3,r5,1023
10020d7c:	00c0350e 	bge	zero,r3,10020e54 <__muldf3+0x598>
10020d80:	888001cc 	andi	r2,r17,7
10020d84:	10000726 	beq	r2,zero,10020da4 <__muldf3+0x4e8>
10020d88:	888003cc 	andi	r2,r17,15
10020d8c:	10800120 	cmpeqi	r2,r2,4
10020d90:	1000041e 	bne	r2,zero,10020da4 <__muldf3+0x4e8>
10020d94:	88800104 	addi	r2,r17,4
10020d98:	1463803a 	cmpltu	r17,r2,r17
10020d9c:	8461883a 	add	r16,r16,r17
10020da0:	1023883a 	mov	r17,r2
10020da4:	8080402c 	andhi	r2,r16,256
10020da8:	10000426 	beq	r2,zero,10020dbc <__muldf3+0x500>
10020dac:	00bfc034 	movhi	r2,65280
10020db0:	10bfffc4 	addi	r2,r2,-1
10020db4:	80a0703a 	and	r16,r16,r2
10020db8:	28c10004 	addi	r3,r5,1024
10020dbc:	1881ffc8 	cmpgei	r2,r3,2047
10020dc0:	103f5e1e 	bne	r2,zero,10020b3c <__muldf3+0x280>
10020dc4:	8004977a 	slli	r2,r16,29
10020dc8:	8822d0fa 	srli	r17,r17,3
10020dcc:	8020927a 	slli	r16,r16,9
10020dd0:	18c1ffcc 	andi	r3,r3,2047
10020dd4:	1462b03a 	or	r17,r2,r17
10020dd8:	8020d33a 	srli	r16,r16,12
10020ddc:	003f1106 	br	10020a24 <__muldf3+0x168>
10020de0:	00800434 	movhi	r2,16
10020de4:	84000234 	orhi	r16,r16,8
10020de8:	10bfffc4 	addi	r2,r2,-1
10020dec:	80a0703a 	and	r16,r16,r2
10020df0:	a00d883a 	mov	r6,r20
10020df4:	003f6d06 	br	10020bac <__muldf3+0x2f0>
10020df8:	3009883a 	mov	r4,r6
10020dfc:	d9800015 	stw	r6,0(sp)
10020e00:	0021aec0 	call	10021aec <__clzsi2>
10020e04:	11000544 	addi	r4,r2,21
10020e08:	21400748 	cmpgei	r5,r4,29
10020e0c:	10c00804 	addi	r3,r2,32
10020e10:	d9800017 	ldw	r6,0(sp)
10020e14:	283f3e26 	beq	r5,zero,10020b10 <__muldf3+0x254>
10020e18:	10bffe04 	addi	r2,r2,-8
10020e1c:	30a4983a 	sll	r18,r6,r2
10020e20:	0011883a 	mov	r8,zero
10020e24:	003f4106 	br	10020b2c <__muldf3+0x270>
10020e28:	0021aec0 	call	10021aec <__clzsi2>
10020e2c:	11400544 	addi	r5,r2,21
10020e30:	29000748 	cmpgei	r4,r5,29
10020e34:	10c00804 	addi	r3,r2,32
10020e38:	d9800017 	ldw	r6,0(sp)
10020e3c:	d9c00117 	ldw	r7,4(sp)
10020e40:	203f1726 	beq	r4,zero,10020aa0 <__muldf3+0x1e4>
10020e44:	10bffe04 	addi	r2,r2,-8
10020e48:	90a0983a 	sll	r16,r18,r2
10020e4c:	0023883a 	mov	r17,zero
10020e50:	003f1a06 	br	10020abc <__muldf3+0x200>
10020e54:	00800044 	movi	r2,1
10020e58:	10c5c83a 	sub	r2,r2,r3
10020e5c:	11000e48 	cmpgei	r4,r2,57
10020e60:	203eed1e 	bne	r4,zero,10020a18 <__muldf3+0x15c>
10020e64:	11000808 	cmpgei	r4,r2,32
10020e68:	2000191e 	bne	r4,zero,10020ed0 <__muldf3+0x614>
10020e6c:	29410784 	addi	r5,r5,1054
10020e70:	8146983a 	sll	r3,r16,r5
10020e74:	8888d83a 	srl	r4,r17,r2
10020e78:	894a983a 	sll	r5,r17,r5
10020e7c:	80a0d83a 	srl	r16,r16,r2
10020e80:	1904b03a 	or	r2,r3,r4
10020e84:	2822c03a 	cmpne	r17,r5,zero
10020e88:	1444b03a 	or	r2,r2,r17
10020e8c:	10c001cc 	andi	r3,r2,7
10020e90:	18000726 	beq	r3,zero,10020eb0 <__muldf3+0x5f4>
10020e94:	10c003cc 	andi	r3,r2,15
10020e98:	18c00120 	cmpeqi	r3,r3,4
10020e9c:	1800041e 	bne	r3,zero,10020eb0 <__muldf3+0x5f4>
10020ea0:	10c00104 	addi	r3,r2,4
10020ea4:	1885803a 	cmpltu	r2,r3,r2
10020ea8:	80a1883a 	add	r16,r16,r2
10020eac:	1805883a 	mov	r2,r3
10020eb0:	80c0202c 	andhi	r3,r16,128
10020eb4:	18001b26 	beq	r3,zero,10020f24 <__muldf3+0x668>
10020eb8:	00c00044 	movi	r3,1
10020ebc:	0021883a 	mov	r16,zero
10020ec0:	0023883a 	mov	r17,zero
10020ec4:	003ed706 	br	10020a24 <__muldf3+0x168>
10020ec8:	980b883a 	mov	r5,r19
10020ecc:	003faa06 	br	10020d78 <__muldf3+0x4bc>
10020ed0:	013ff844 	movi	r4,-31
10020ed4:	20c7c83a 	sub	r3,r4,r3
10020ed8:	10800820 	cmpeqi	r2,r2,32
10020edc:	80c6d83a 	srl	r3,r16,r3
10020ee0:	1000031e 	bne	r2,zero,10020ef0 <__muldf3+0x634>
10020ee4:	28810f84 	addi	r2,r5,1086
10020ee8:	8084983a 	sll	r2,r16,r2
10020eec:	88a2b03a 	or	r17,r17,r2
10020ef0:	8822c03a 	cmpne	r17,r17,zero
10020ef4:	88c4b03a 	or	r2,r17,r3
10020ef8:	144001cc 	andi	r17,r2,7
10020efc:	8800051e 	bne	r17,zero,10020f14 <__muldf3+0x658>
10020f00:	0021883a 	mov	r16,zero
10020f04:	1004d0fa 	srli	r2,r2,3
10020f08:	0007883a 	mov	r3,zero
10020f0c:	1462b03a 	or	r17,r2,r17
10020f10:	003ec406 	br	10020a24 <__muldf3+0x168>
10020f14:	10c003cc 	andi	r3,r2,15
10020f18:	18c00118 	cmpnei	r3,r3,4
10020f1c:	0021883a 	mov	r16,zero
10020f20:	183fdf1e 	bne	r3,zero,10020ea0 <__muldf3+0x5e4>
10020f24:	8006927a 	slli	r3,r16,9
10020f28:	8022977a 	slli	r17,r16,29
10020f2c:	1820d33a 	srli	r16,r3,12
10020f30:	003ff406 	br	10020f04 <__muldf3+0x648>
10020f34:	00800434 	movhi	r2,16
10020f38:	84000234 	orhi	r16,r16,8
10020f3c:	10bfffc4 	addi	r2,r2,-1
10020f40:	80a0703a 	and	r16,r16,r2
10020f44:	003f1906 	br	10020bac <__muldf3+0x2f0>

10020f48 <__subdf3>:
10020f48:	00800434 	movhi	r2,16
10020f4c:	3812d53a 	srli	r9,r7,20
10020f50:	10bfffc4 	addi	r2,r2,-1
10020f54:	defffb04 	addi	sp,sp,-20
10020f58:	2890703a 	and	r8,r5,r2
10020f5c:	3884703a 	and	r2,r7,r2
10020f60:	2806d7fa 	srli	r3,r5,31
10020f64:	dcc00315 	stw	r19,12(sp)
10020f68:	dc400115 	stw	r17,4(sp)
10020f6c:	280ad53a 	srli	r5,r5,20
10020f70:	401090fa 	slli	r8,r8,3
10020f74:	2026d77a 	srli	r19,r4,29
10020f78:	100490fa 	slli	r2,r2,3
10020f7c:	3022d77a 	srli	r17,r6,29
10020f80:	4a81ffcc 	andi	r10,r9,2047
10020f84:	dc800215 	stw	r18,8(sp)
10020f88:	dc000015 	stw	r16,0(sp)
10020f8c:	dfc00415 	stw	ra,16(sp)
10020f90:	5241ffe0 	cmpeqi	r9,r10,2047
10020f94:	1825883a 	mov	r18,r3
10020f98:	2c01ffcc 	andi	r16,r5,2047
10020f9c:	18c03fcc 	andi	r3,r3,255
10020fa0:	9a18b03a 	or	r12,r19,r8
10020fa4:	201a90fa 	slli	r13,r4,3
10020fa8:	380ed7fa 	srli	r7,r7,31
10020fac:	8896b03a 	or	r11,r17,r2
10020fb0:	301c90fa 	slli	r14,r6,3
10020fb4:	4800711e 	bne	r9,zero,1002117c <__subdf3+0x234>
10020fb8:	39c0005c 	xori	r7,r7,1
10020fbc:	8291c83a 	sub	r8,r16,r10
10020fc0:	19c05a26 	beq	r3,r7,1002112c <__subdf3+0x1e4>
10020fc4:	0200720e 	bge	zero,r8,10021190 <__subdf3+0x248>
10020fc8:	50008126 	beq	r10,zero,100211d0 <__subdf3+0x288>
10020fcc:	8081ffd8 	cmpnei	r2,r16,2047
10020fd0:	10011626 	beq	r2,zero,1002142c <__subdf3+0x4e4>
10020fd4:	5ac02034 	orhi	r11,r11,128
10020fd8:	40800e48 	cmpgei	r2,r8,57
10020fdc:	1000fe1e 	bne	r2,zero,100213d8 <__subdf3+0x490>
10020fe0:	40800808 	cmpgei	r2,r8,32
10020fe4:	10015e1e 	bne	r2,zero,10021560 <__subdf3+0x618>
10020fe8:	00800804 	movi	r2,32
10020fec:	1205c83a 	sub	r2,r2,r8
10020ff0:	58a2983a 	sll	r17,r11,r2
10020ff4:	7206d83a 	srl	r3,r14,r8
10020ff8:	709c983a 	sll	r14,r14,r2
10020ffc:	5a04d83a 	srl	r2,r11,r8
10021000:	88e2b03a 	or	r17,r17,r3
10021004:	701cc03a 	cmpne	r14,r14,zero
10021008:	8ba2b03a 	or	r17,r17,r14
1002100c:	6099c83a 	sub	r12,r12,r2
10021010:	6c63c83a 	sub	r17,r13,r17
10021014:	6c49803a 	cmpltu	r4,r13,r17
10021018:	6109c83a 	sub	r4,r12,r4
1002101c:	2080202c 	andhi	r2,r4,128
10021020:	10009f26 	beq	r2,zero,100212a0 <__subdf3+0x358>
10021024:	04c02034 	movhi	r19,128
10021028:	9cffffc4 	addi	r19,r19,-1
1002102c:	24e6703a 	and	r19,r4,r19
10021030:	9800e026 	beq	r19,zero,100213b4 <__subdf3+0x46c>
10021034:	9809883a 	mov	r4,r19
10021038:	0021aec0 	call	10021aec <__clzsi2>
1002103c:	123ffe04 	addi	r8,r2,-8
10021040:	01000804 	movi	r4,32
10021044:	2209c83a 	sub	r4,r4,r8
10021048:	8906d83a 	srl	r3,r17,r4
1002104c:	9a08983a 	sll	r4,r19,r8
10021050:	8a22983a 	sll	r17,r17,r8
10021054:	1908b03a 	or	r4,r3,r4
10021058:	4400cf16 	blt	r8,r16,10021398 <__subdf3+0x450>
1002105c:	4411c83a 	sub	r8,r8,r16
10021060:	40800044 	addi	r2,r8,1
10021064:	10c00808 	cmpgei	r3,r2,32
10021068:	1801251e 	bne	r3,zero,10021500 <__subdf3+0x5b8>
1002106c:	00c00804 	movi	r3,32
10021070:	1887c83a 	sub	r3,r3,r2
10021074:	888ad83a 	srl	r5,r17,r2
10021078:	88e2983a 	sll	r17,r17,r3
1002107c:	20c6983a 	sll	r3,r4,r3
10021080:	2088d83a 	srl	r4,r4,r2
10021084:	8822c03a 	cmpne	r17,r17,zero
10021088:	1946b03a 	or	r3,r3,r5
1002108c:	1c62b03a 	or	r17,r3,r17
10021090:	0021883a 	mov	r16,zero
10021094:	888001cc 	andi	r2,r17,7
10021098:	10000726 	beq	r2,zero,100210b8 <__subdf3+0x170>
1002109c:	888003cc 	andi	r2,r17,15
100210a0:	10800120 	cmpeqi	r2,r2,4
100210a4:	1000041e 	bne	r2,zero,100210b8 <__subdf3+0x170>
100210a8:	88c00104 	addi	r3,r17,4
100210ac:	1c63803a 	cmpltu	r17,r3,r17
100210b0:	2449883a 	add	r4,r4,r17
100210b4:	1823883a 	mov	r17,r3
100210b8:	2080202c 	andhi	r2,r4,128
100210bc:	10007a26 	beq	r2,zero,100212a8 <__subdf3+0x360>
100210c0:	82000044 	addi	r8,r16,1
100210c4:	4081ffe0 	cmpeqi	r2,r8,2047
100210c8:	4201ffcc 	andi	r8,r8,2047
100210cc:	10008c1e 	bne	r2,zero,10021300 <__subdf3+0x3b8>
100210d0:	00bfe034 	movhi	r2,65408
100210d4:	10bfffc4 	addi	r2,r2,-1
100210d8:	2084703a 	and	r2,r4,r2
100210dc:	1008927a 	slli	r4,r2,9
100210e0:	8822d0fa 	srli	r17,r17,3
100210e4:	100c977a 	slli	r6,r2,29
100210e8:	2008d33a 	srli	r4,r4,12
100210ec:	3444b03a 	or	r2,r6,r17
100210f0:	4010953a 	slli	r8,r8,20
100210f4:	00c00434 	movhi	r3,16
100210f8:	94803fcc 	andi	r18,r18,255
100210fc:	902497fa 	slli	r18,r18,31
10021100:	18ffffc4 	addi	r3,r3,-1
10021104:	20c6703a 	and	r3,r4,r3
10021108:	1a06b03a 	or	r3,r3,r8
1002110c:	1c86b03a 	or	r3,r3,r18
10021110:	dfc00417 	ldw	ra,16(sp)
10021114:	dcc00317 	ldw	r19,12(sp)
10021118:	dc800217 	ldw	r18,8(sp)
1002111c:	dc400117 	ldw	r17,4(sp)
10021120:	dc000017 	ldw	r16,0(sp)
10021124:	dec00504 	addi	sp,sp,20
10021128:	f800283a 	ret
1002112c:	0200320e 	bge	zero,r8,100211f8 <__subdf3+0x2b0>
10021130:	50004c26 	beq	r10,zero,10021264 <__subdf3+0x31c>
10021134:	8081ffd8 	cmpnei	r2,r16,2047
10021138:	1000bc26 	beq	r2,zero,1002142c <__subdf3+0x4e4>
1002113c:	5ac02034 	orhi	r11,r11,128
10021140:	40800e48 	cmpgei	r2,r8,57
10021144:	1000641e 	bne	r2,zero,100212d8 <__subdf3+0x390>
10021148:	40800808 	cmpgei	r2,r8,32
1002114c:	10011726 	beq	r2,zero,100215ac <__subdf3+0x664>
10021150:	447ff804 	addi	r17,r8,-32
10021154:	40800820 	cmpeqi	r2,r8,32
10021158:	5c46d83a 	srl	r3,r11,r17
1002115c:	1000041e 	bne	r2,zero,10021170 <__subdf3+0x228>
10021160:	00801004 	movi	r2,64
10021164:	1205c83a 	sub	r2,r2,r8
10021168:	5884983a 	sll	r2,r11,r2
1002116c:	709cb03a 	or	r14,r14,r2
10021170:	7022c03a 	cmpne	r17,r14,zero
10021174:	88e2b03a 	or	r17,r17,r3
10021178:	00005906 	br	100212e0 <__subdf3+0x398>
1002117c:	5b8ab03a 	or	r5,r11,r14
10021180:	823e0044 	addi	r8,r16,-2047
10021184:	28001a1e 	bne	r5,zero,100211f0 <__subdf3+0x2a8>
10021188:	39c0005c 	xori	r7,r7,1
1002118c:	19c01a26 	beq	r3,r7,100211f8 <__subdf3+0x2b0>
10021190:	4000291e 	bne	r8,zero,10021238 <__subdf3+0x2f0>
10021194:	80800044 	addi	r2,r16,1
10021198:	1081ff8c 	andi	r2,r2,2046
1002119c:	1000911e 	bne	r2,zero,100213e4 <__subdf3+0x49c>
100211a0:	6346b03a 	or	r3,r12,r13
100211a4:	5b84b03a 	or	r2,r11,r14
100211a8:	8001551e 	bne	r16,zero,10021700 <__subdf3+0x7b8>
100211ac:	18011b26 	beq	r3,zero,1002161c <__subdf3+0x6d4>
100211b0:	1001641e 	bne	r2,zero,10021744 <__subdf3+0x7fc>
100211b4:	00880034 	movhi	r2,8192
100211b8:	6022977a 	slli	r17,r12,29
100211bc:	10bfffc4 	addi	r2,r2,-1
100211c0:	2088703a 	and	r4,r4,r2
100211c4:	2444b03a 	or	r2,r4,r17
100211c8:	6026d0fa 	srli	r19,r12,3
100211cc:	00003d06 	br	100212c4 <__subdf3+0x37c>
100211d0:	5b84b03a 	or	r2,r11,r14
100211d4:	10008e26 	beq	r2,zero,10021410 <__subdf3+0x4c8>
100211d8:	40bfffc4 	addi	r2,r8,-1
100211dc:	10011f26 	beq	r2,zero,1002165c <__subdf3+0x714>
100211e0:	4201ffd8 	cmpnei	r8,r8,2047
100211e4:	40012d26 	beq	r8,zero,1002169c <__subdf3+0x754>
100211e8:	1011883a 	mov	r8,r2
100211ec:	003f7a06 	br	10020fd8 <__subdf3+0x90>
100211f0:	39c03fcc 	andi	r7,r7,255
100211f4:	19ffe61e 	bne	r3,r7,10021190 <__subdf3+0x248>
100211f8:	4000931e 	bne	r8,zero,10021448 <__subdf3+0x500>
100211fc:	80c00044 	addi	r3,r16,1
10021200:	1881ff8c 	andi	r2,r3,2046
10021204:	10012c1e 	bne	r2,zero,100216b8 <__subdf3+0x770>
10021208:	6344b03a 	or	r2,r12,r13
1002120c:	8000f91e 	bne	r16,zero,100215f4 <__subdf3+0x6ac>
10021210:	10017326 	beq	r2,zero,100217e0 <__subdf3+0x898>
10021214:	5b84b03a 	or	r2,r11,r14
10021218:	1001781e 	bne	r2,zero,100217fc <__subdf3+0x8b4>
1002121c:	6004977a 	slli	r2,r12,29
10021220:	00c80034 	movhi	r3,8192
10021224:	18ffffc4 	addi	r3,r3,-1
10021228:	20c6703a 	and	r3,r4,r3
1002122c:	10c4b03a 	or	r2,r2,r3
10021230:	6026d0fa 	srli	r19,r12,3
10021234:	00002306 	br	100212c4 <__subdf3+0x37c>
10021238:	5411c83a 	sub	r8,r10,r16
1002123c:	3825883a 	mov	r18,r7
10021240:	8000991e 	bne	r16,zero,100214a8 <__subdf3+0x560>
10021244:	6344b03a 	or	r2,r12,r13
10021248:	1000e326 	beq	r2,zero,100215d8 <__subdf3+0x690>
1002124c:	40bfffc4 	addi	r2,r8,-1
10021250:	10015d26 	beq	r2,zero,100217c8 <__subdf3+0x880>
10021254:	4201ffd8 	cmpnei	r8,r8,2047
10021258:	4000f926 	beq	r8,zero,10021640 <__subdf3+0x6f8>
1002125c:	1011883a 	mov	r8,r2
10021260:	00009406 	br	100214b4 <__subdf3+0x56c>
10021264:	5b84b03a 	or	r2,r11,r14
10021268:	10010226 	beq	r2,zero,10021674 <__subdf3+0x72c>
1002126c:	40bfffc4 	addi	r2,r8,-1
10021270:	10000426 	beq	r2,zero,10021284 <__subdf3+0x33c>
10021274:	4201ffd8 	cmpnei	r8,r8,2047
10021278:	40014126 	beq	r8,zero,10021780 <__subdf3+0x838>
1002127c:	1011883a 	mov	r8,r2
10021280:	003faf06 	br	10021140 <__subdf3+0x1f8>
10021284:	6ba3883a 	add	r17,r13,r14
10021288:	62c9883a 	add	r4,r12,r11
1002128c:	8b5b803a 	cmpltu	r13,r17,r13
10021290:	2349883a 	add	r4,r4,r13
10021294:	2080202c 	andhi	r2,r4,128
10021298:	1000a61e 	bne	r2,zero,10021534 <__subdf3+0x5ec>
1002129c:	04000044 	movi	r16,1
100212a0:	888001cc 	andi	r2,r17,7
100212a4:	103f7d1e 	bne	r2,zero,1002109c <__subdf3+0x154>
100212a8:	8822d0fa 	srli	r17,r17,3
100212ac:	2004977a 	slli	r2,r4,29
100212b0:	2026d0fa 	srli	r19,r4,3
100212b4:	8011883a 	mov	r8,r16
100212b8:	8884b03a 	or	r2,r17,r2
100212bc:	40c1ffe0 	cmpeqi	r3,r8,2047
100212c0:	18002d1e 	bne	r3,zero,10021378 <__subdf3+0x430>
100212c4:	01000434 	movhi	r4,16
100212c8:	213fffc4 	addi	r4,r4,-1
100212cc:	9908703a 	and	r4,r19,r4
100212d0:	4201ffcc 	andi	r8,r8,2047
100212d4:	003f8606 	br	100210f0 <__subdf3+0x1a8>
100212d8:	5ba2b03a 	or	r17,r11,r14
100212dc:	8822c03a 	cmpne	r17,r17,zero
100212e0:	8b63883a 	add	r17,r17,r13
100212e4:	8b49803a 	cmpltu	r4,r17,r13
100212e8:	2309883a 	add	r4,r4,r12
100212ec:	2080202c 	andhi	r2,r4,128
100212f0:	103feb26 	beq	r2,zero,100212a0 <__subdf3+0x358>
100212f4:	84000044 	addi	r16,r16,1
100212f8:	8081ffe0 	cmpeqi	r2,r16,2047
100212fc:	10008e26 	beq	r2,zero,10021538 <__subdf3+0x5f0>
10021300:	0201ffc4 	movi	r8,2047
10021304:	0009883a 	mov	r4,zero
10021308:	0005883a 	mov	r2,zero
1002130c:	003f7806 	br	100210f0 <__subdf3+0x1a8>
10021310:	6010977a 	slli	r8,r12,29
10021314:	6026d0fa 	srli	r19,r12,3
10021318:	1000bb26 	beq	r2,zero,10021608 <__subdf3+0x6c0>
1002131c:	01480034 	movhi	r5,8192
10021320:	297fffc4 	addi	r5,r5,-1
10021324:	2146703a 	and	r3,r4,r5
10021328:	9880022c 	andhi	r2,r19,8
1002132c:	1a06b03a 	or	r3,r3,r8
10021330:	10000826 	beq	r2,zero,10021354 <__subdf3+0x40c>
10021334:	5808d0fa 	srli	r4,r11,3
10021338:	2080022c 	andhi	r2,r4,8
1002133c:	1000051e 	bne	r2,zero,10021354 <__subdf3+0x40c>
10021340:	5804977a 	slli	r2,r11,29
10021344:	3146703a 	and	r3,r6,r5
10021348:	3825883a 	mov	r18,r7
1002134c:	1886b03a 	or	r3,r3,r2
10021350:	2027883a 	mov	r19,r4
10021354:	1804d77a 	srli	r2,r3,29
10021358:	980890fa 	slli	r4,r19,3
1002135c:	01480034 	movhi	r5,8192
10021360:	297fffc4 	addi	r5,r5,-1
10021364:	1108b03a 	or	r4,r2,r4
10021368:	2004977a 	slli	r2,r4,29
1002136c:	2026d0fa 	srli	r19,r4,3
10021370:	1946703a 	and	r3,r3,r5
10021374:	10c4b03a 	or	r2,r2,r3
10021378:	14c6b03a 	or	r3,r2,r19
1002137c:	18014926 	beq	r3,zero,100218a4 <__subdf3+0x95c>
10021380:	00c00434 	movhi	r3,16
10021384:	99000234 	orhi	r4,r19,8
10021388:	18ffffc4 	addi	r3,r3,-1
1002138c:	20c8703a 	and	r4,r4,r3
10021390:	0201ffc4 	movi	r8,2047
10021394:	003f5606 	br	100210f0 <__subdf3+0x1a8>
10021398:	00bfe034 	movhi	r2,65408
1002139c:	10bfffc4 	addi	r2,r2,-1
100213a0:	2088703a 	and	r4,r4,r2
100213a4:	888001cc 	andi	r2,r17,7
100213a8:	8221c83a 	sub	r16,r16,r8
100213ac:	103f3b1e 	bne	r2,zero,1002109c <__subdf3+0x154>
100213b0:	003fbd06 	br	100212a8 <__subdf3+0x360>
100213b4:	8809883a 	mov	r4,r17
100213b8:	0021aec0 	call	10021aec <__clzsi2>
100213bc:	12000604 	addi	r8,r2,24
100213c0:	40c00808 	cmpgei	r3,r8,32
100213c4:	183f1e26 	beq	r3,zero,10021040 <__subdf3+0xf8>
100213c8:	113ffe04 	addi	r4,r2,-8
100213cc:	8908983a 	sll	r4,r17,r4
100213d0:	0023883a 	mov	r17,zero
100213d4:	003f2006 	br	10021058 <__subdf3+0x110>
100213d8:	5ba2b03a 	or	r17,r11,r14
100213dc:	8822c03a 	cmpne	r17,r17,zero
100213e0:	003f0b06 	br	10021010 <__subdf3+0xc8>
100213e4:	6ba3c83a 	sub	r17,r13,r14
100213e8:	62e7c83a 	sub	r19,r12,r11
100213ec:	6c49803a 	cmpltu	r4,r13,r17
100213f0:	9927c83a 	sub	r19,r19,r4
100213f4:	9880202c 	andhi	r2,r19,128
100213f8:	1000bb1e 	bne	r2,zero,100216e8 <__subdf3+0x7a0>
100213fc:	8cc4b03a 	or	r2,r17,r19
10021400:	103f0b1e 	bne	r2,zero,10021030 <__subdf3+0xe8>
10021404:	0027883a 	mov	r19,zero
10021408:	0025883a 	mov	r18,zero
1002140c:	003fad06 	br	100212c4 <__subdf3+0x37c>
10021410:	00880034 	movhi	r2,8192
10021414:	6022977a 	slli	r17,r12,29
10021418:	10bfffc4 	addi	r2,r2,-1
1002141c:	2088703a 	and	r4,r4,r2
10021420:	2444b03a 	or	r2,r4,r17
10021424:	6026d0fa 	srli	r19,r12,3
10021428:	003fa406 	br	100212bc <__subdf3+0x374>
1002142c:	00880034 	movhi	r2,8192
10021430:	6022977a 	slli	r17,r12,29
10021434:	10bfffc4 	addi	r2,r2,-1
10021438:	2088703a 	and	r4,r4,r2
1002143c:	2444b03a 	or	r2,r4,r17
10021440:	6026d0fa 	srli	r19,r12,3
10021444:	003fcc06 	br	10021378 <__subdf3+0x430>
10021448:	5411c83a 	sub	r8,r10,r16
1002144c:	80004f26 	beq	r16,zero,1002158c <__subdf3+0x644>
10021450:	5081ffd8 	cmpnei	r2,r10,2047
10021454:	1000b426 	beq	r2,zero,10021728 <__subdf3+0x7e0>
10021458:	63002034 	orhi	r12,r12,128
1002145c:	40800e48 	cmpgei	r2,r8,57
10021460:	1000c41e 	bne	r2,zero,10021774 <__subdf3+0x82c>
10021464:	40800808 	cmpgei	r2,r8,32
10021468:	1000f91e 	bne	r2,zero,10021850 <__subdf3+0x908>
1002146c:	00800804 	movi	r2,32
10021470:	1205c83a 	sub	r2,r2,r8
10021474:	60a2983a 	sll	r17,r12,r2
10021478:	6a06d83a 	srl	r3,r13,r8
1002147c:	6884983a 	sll	r2,r13,r2
10021480:	6210d83a 	srl	r8,r12,r8
10021484:	88e2b03a 	or	r17,r17,r3
10021488:	1004c03a 	cmpne	r2,r2,zero
1002148c:	88a2b03a 	or	r17,r17,r2
10021490:	5a17883a 	add	r11,r11,r8
10021494:	8ba3883a 	add	r17,r17,r14
10021498:	8b85803a 	cmpltu	r2,r17,r14
1002149c:	12c9883a 	add	r4,r2,r11
100214a0:	5021883a 	mov	r16,r10
100214a4:	003f9106 	br	100212ec <__subdf3+0x3a4>
100214a8:	5081ffd8 	cmpnei	r2,r10,2047
100214ac:	10006426 	beq	r2,zero,10021640 <__subdf3+0x6f8>
100214b0:	63002034 	orhi	r12,r12,128
100214b4:	40800e48 	cmpgei	r2,r8,57
100214b8:	1000751e 	bne	r2,zero,10021690 <__subdf3+0x748>
100214bc:	40800808 	cmpgei	r2,r8,32
100214c0:	1000b61e 	bne	r2,zero,1002179c <__subdf3+0x854>
100214c4:	00800804 	movi	r2,32
100214c8:	1205c83a 	sub	r2,r2,r8
100214cc:	60a2983a 	sll	r17,r12,r2
100214d0:	6a06d83a 	srl	r3,r13,r8
100214d4:	6884983a 	sll	r2,r13,r2
100214d8:	6210d83a 	srl	r8,r12,r8
100214dc:	88e2b03a 	or	r17,r17,r3
100214e0:	1004c03a 	cmpne	r2,r2,zero
100214e4:	88a2b03a 	or	r17,r17,r2
100214e8:	5a17c83a 	sub	r11,r11,r8
100214ec:	7463c83a 	sub	r17,r14,r17
100214f0:	7445803a 	cmpltu	r2,r14,r17
100214f4:	5889c83a 	sub	r4,r11,r2
100214f8:	5021883a 	mov	r16,r10
100214fc:	003ec706 	br	1002101c <__subdf3+0xd4>
10021500:	423ff844 	addi	r8,r8,-31
10021504:	10c00820 	cmpeqi	r3,r2,32
10021508:	2210d83a 	srl	r8,r4,r8
1002150c:	1800041e 	bne	r3,zero,10021520 <__subdf3+0x5d8>
10021510:	00c01004 	movi	r3,64
10021514:	1885c83a 	sub	r2,r3,r2
10021518:	2088983a 	sll	r4,r4,r2
1002151c:	8922b03a 	or	r17,r17,r4
10021520:	8822c03a 	cmpne	r17,r17,zero
10021524:	8a22b03a 	or	r17,r17,r8
10021528:	0009883a 	mov	r4,zero
1002152c:	0021883a 	mov	r16,zero
10021530:	003f5b06 	br	100212a0 <__subdf3+0x358>
10021534:	04000084 	movi	r16,2
10021538:	00bfe034 	movhi	r2,65408
1002153c:	10bfffc4 	addi	r2,r2,-1
10021540:	2084703a 	and	r2,r4,r2
10021544:	8806d07a 	srli	r3,r17,1
10021548:	100a97fa 	slli	r5,r2,31
1002154c:	8c40004c 	andi	r17,r17,1
10021550:	1c62b03a 	or	r17,r3,r17
10021554:	1008d07a 	srli	r4,r2,1
10021558:	2c62b03a 	or	r17,r5,r17
1002155c:	003ecd06 	br	10021094 <__subdf3+0x14c>
10021560:	447ff804 	addi	r17,r8,-32
10021564:	40800820 	cmpeqi	r2,r8,32
10021568:	5c46d83a 	srl	r3,r11,r17
1002156c:	1000041e 	bne	r2,zero,10021580 <__subdf3+0x638>
10021570:	00801004 	movi	r2,64
10021574:	1205c83a 	sub	r2,r2,r8
10021578:	5884983a 	sll	r2,r11,r2
1002157c:	709cb03a 	or	r14,r14,r2
10021580:	7022c03a 	cmpne	r17,r14,zero
10021584:	88e2b03a 	or	r17,r17,r3
10021588:	003ea106 	br	10021010 <__subdf3+0xc8>
1002158c:	6344b03a 	or	r2,r12,r13
10021590:	1000a526 	beq	r2,zero,10021828 <__subdf3+0x8e0>
10021594:	40bfffc4 	addi	r2,r8,-1
10021598:	1000bd26 	beq	r2,zero,10021890 <__subdf3+0x948>
1002159c:	4201ffd8 	cmpnei	r8,r8,2047
100215a0:	40006126 	beq	r8,zero,10021728 <__subdf3+0x7e0>
100215a4:	1011883a 	mov	r8,r2
100215a8:	003fac06 	br	1002145c <__subdf3+0x514>
100215ac:	00800804 	movi	r2,32
100215b0:	1205c83a 	sub	r2,r2,r8
100215b4:	58a2983a 	sll	r17,r11,r2
100215b8:	7206d83a 	srl	r3,r14,r8
100215bc:	709c983a 	sll	r14,r14,r2
100215c0:	5a04d83a 	srl	r2,r11,r8
100215c4:	88e2b03a 	or	r17,r17,r3
100215c8:	701cc03a 	cmpne	r14,r14,zero
100215cc:	8ba2b03a 	or	r17,r17,r14
100215d0:	6099883a 	add	r12,r12,r2
100215d4:	003f4206 	br	100212e0 <__subdf3+0x398>
100215d8:	5808977a 	slli	r4,r11,29
100215dc:	00c80034 	movhi	r3,8192
100215e0:	18ffffc4 	addi	r3,r3,-1
100215e4:	30cc703a 	and	r6,r6,r3
100215e8:	2184b03a 	or	r2,r4,r6
100215ec:	5826d0fa 	srli	r19,r11,3
100215f0:	003f3206 	br	100212bc <__subdf3+0x374>
100215f4:	10004c26 	beq	r2,zero,10021728 <__subdf3+0x7e0>
100215f8:	5b9cb03a 	or	r14,r11,r14
100215fc:	6010977a 	slli	r8,r12,29
10021600:	6026d0fa 	srli	r19,r12,3
10021604:	703f451e 	bne	r14,zero,1002131c <__subdf3+0x3d4>
10021608:	00880034 	movhi	r2,8192
1002160c:	10bfffc4 	addi	r2,r2,-1
10021610:	2084703a 	and	r2,r4,r2
10021614:	1204b03a 	or	r2,r2,r8
10021618:	003f5706 	br	10021378 <__subdf3+0x430>
1002161c:	103f7926 	beq	r2,zero,10021404 <__subdf3+0x4bc>
10021620:	5804977a 	slli	r2,r11,29
10021624:	00c80034 	movhi	r3,8192
10021628:	18ffffc4 	addi	r3,r3,-1
1002162c:	30c6703a 	and	r3,r6,r3
10021630:	10c4b03a 	or	r2,r2,r3
10021634:	5826d0fa 	srli	r19,r11,3
10021638:	3825883a 	mov	r18,r7
1002163c:	003f2106 	br	100212c4 <__subdf3+0x37c>
10021640:	5804977a 	slli	r2,r11,29
10021644:	00c80034 	movhi	r3,8192
10021648:	18ffffc4 	addi	r3,r3,-1
1002164c:	30c6703a 	and	r3,r6,r3
10021650:	10c4b03a 	or	r2,r2,r3
10021654:	5826d0fa 	srli	r19,r11,3
10021658:	003f4706 	br	10021378 <__subdf3+0x430>
1002165c:	6ba3c83a 	sub	r17,r13,r14
10021660:	62c9c83a 	sub	r4,r12,r11
10021664:	6c5b803a 	cmpltu	r13,r13,r17
10021668:	2349c83a 	sub	r4,r4,r13
1002166c:	04000044 	movi	r16,1
10021670:	003e6a06 	br	1002101c <__subdf3+0xd4>
10021674:	6004977a 	slli	r2,r12,29
10021678:	00c80034 	movhi	r3,8192
1002167c:	18ffffc4 	addi	r3,r3,-1
10021680:	20c8703a 	and	r4,r4,r3
10021684:	1104b03a 	or	r2,r2,r4
10021688:	6026d0fa 	srli	r19,r12,3
1002168c:	003f0b06 	br	100212bc <__subdf3+0x374>
10021690:	6366b03a 	or	r19,r12,r13
10021694:	9822c03a 	cmpne	r17,r19,zero
10021698:	003f9406 	br	100214ec <__subdf3+0x5a4>
1002169c:	6004977a 	slli	r2,r12,29
100216a0:	00c80034 	movhi	r3,8192
100216a4:	18ffffc4 	addi	r3,r3,-1
100216a8:	20c8703a 	and	r4,r4,r3
100216ac:	1104b03a 	or	r2,r2,r4
100216b0:	6026d0fa 	srli	r19,r12,3
100216b4:	003f3006 	br	10021378 <__subdf3+0x430>
100216b8:	1881ffe0 	cmpeqi	r2,r3,2047
100216bc:	103f101e 	bne	r2,zero,10021300 <__subdf3+0x3b8>
100216c0:	6b9d883a 	add	r14,r13,r14
100216c4:	62c9883a 	add	r4,r12,r11
100216c8:	7345803a 	cmpltu	r2,r14,r13
100216cc:	2085883a 	add	r2,r4,r2
100216d0:	102297fa 	slli	r17,r2,31
100216d4:	701cd07a 	srli	r14,r14,1
100216d8:	1008d07a 	srli	r4,r2,1
100216dc:	1821883a 	mov	r16,r3
100216e0:	8ba2b03a 	or	r17,r17,r14
100216e4:	003eee06 	br	100212a0 <__subdf3+0x358>
100216e8:	7363c83a 	sub	r17,r14,r13
100216ec:	5b09c83a 	sub	r4,r11,r12
100216f0:	7467803a 	cmpltu	r19,r14,r17
100216f4:	24e7c83a 	sub	r19,r4,r19
100216f8:	3825883a 	mov	r18,r7
100216fc:	003e4c06 	br	10021030 <__subdf3+0xe8>
10021700:	183f031e 	bne	r3,zero,10021310 <__subdf3+0x3c8>
10021704:	10005d26 	beq	r2,zero,1002187c <__subdf3+0x934>
10021708:	00880034 	movhi	r2,8192
1002170c:	5806977a 	slli	r3,r11,29
10021710:	10bfffc4 	addi	r2,r2,-1
10021714:	3084703a 	and	r2,r6,r2
10021718:	10c4b03a 	or	r2,r2,r3
1002171c:	5826d0fa 	srli	r19,r11,3
10021720:	3825883a 	mov	r18,r7
10021724:	003f1406 	br	10021378 <__subdf3+0x430>
10021728:	00880034 	movhi	r2,8192
1002172c:	5806977a 	slli	r3,r11,29
10021730:	10bfffc4 	addi	r2,r2,-1
10021734:	3084703a 	and	r2,r6,r2
10021738:	10c4b03a 	or	r2,r2,r3
1002173c:	5826d0fa 	srli	r19,r11,3
10021740:	003f0d06 	br	10021378 <__subdf3+0x430>
10021744:	6ba3c83a 	sub	r17,r13,r14
10021748:	62c5c83a 	sub	r2,r12,r11
1002174c:	6c49803a 	cmpltu	r4,r13,r17
10021750:	1109c83a 	sub	r4,r2,r4
10021754:	2080202c 	andhi	r2,r4,128
10021758:	10003a26 	beq	r2,zero,10021844 <__subdf3+0x8fc>
1002175c:	7363c83a 	sub	r17,r14,r13
10021760:	5b09c83a 	sub	r4,r11,r12
10021764:	745d803a 	cmpltu	r14,r14,r17
10021768:	2389c83a 	sub	r4,r4,r14
1002176c:	3825883a 	mov	r18,r7
10021770:	003e4806 	br	10021094 <__subdf3+0x14c>
10021774:	6362b03a 	or	r17,r12,r13
10021778:	8822c03a 	cmpne	r17,r17,zero
1002177c:	003f4506 	br	10021494 <__subdf3+0x54c>
10021780:	6004977a 	slli	r2,r12,29
10021784:	00c80034 	movhi	r3,8192
10021788:	18ffffc4 	addi	r3,r3,-1
1002178c:	20c6703a 	and	r3,r4,r3
10021790:	10c4b03a 	or	r2,r2,r3
10021794:	6026d0fa 	srli	r19,r12,3
10021798:	003ef706 	br	10021378 <__subdf3+0x430>
1002179c:	40bff804 	addi	r2,r8,-32
100217a0:	40c00820 	cmpeqi	r3,r8,32
100217a4:	6084d83a 	srl	r2,r12,r2
100217a8:	1800041e 	bne	r3,zero,100217bc <__subdf3+0x874>
100217ac:	04c01004 	movi	r19,64
100217b0:	9a11c83a 	sub	r8,r19,r8
100217b4:	6226983a 	sll	r19,r12,r8
100217b8:	6cdab03a 	or	r13,r13,r19
100217bc:	6822c03a 	cmpne	r17,r13,zero
100217c0:	88a2b03a 	or	r17,r17,r2
100217c4:	003f4906 	br	100214ec <__subdf3+0x5a4>
100217c8:	7363c83a 	sub	r17,r14,r13
100217cc:	5b09c83a 	sub	r4,r11,r12
100217d0:	745d803a 	cmpltu	r14,r14,r17
100217d4:	2389c83a 	sub	r4,r4,r14
100217d8:	04000044 	movi	r16,1
100217dc:	003e0f06 	br	1002101c <__subdf3+0xd4>
100217e0:	00880034 	movhi	r2,8192
100217e4:	5806977a 	slli	r3,r11,29
100217e8:	10bfffc4 	addi	r2,r2,-1
100217ec:	3084703a 	and	r2,r6,r2
100217f0:	10c4b03a 	or	r2,r2,r3
100217f4:	5826d0fa 	srli	r19,r11,3
100217f8:	003eb206 	br	100212c4 <__subdf3+0x37c>
100217fc:	6ba3883a 	add	r17,r13,r14
10021800:	62c9883a 	add	r4,r12,r11
10021804:	8b5b803a 	cmpltu	r13,r17,r13
10021808:	2349883a 	add	r4,r4,r13
1002180c:	2080202c 	andhi	r2,r4,128
10021810:	103ea326 	beq	r2,zero,100212a0 <__subdf3+0x358>
10021814:	00bfe034 	movhi	r2,65408
10021818:	10bfffc4 	addi	r2,r2,-1
1002181c:	2088703a 	and	r4,r4,r2
10021820:	04000044 	movi	r16,1
10021824:	003e9e06 	br	100212a0 <__subdf3+0x358>
10021828:	00880034 	movhi	r2,8192
1002182c:	5806977a 	slli	r3,r11,29
10021830:	10bfffc4 	addi	r2,r2,-1
10021834:	3084703a 	and	r2,r6,r2
10021838:	10c4b03a 	or	r2,r2,r3
1002183c:	5826d0fa 	srli	r19,r11,3
10021840:	003e9e06 	br	100212bc <__subdf3+0x374>
10021844:	8904b03a 	or	r2,r17,r4
10021848:	103eee26 	beq	r2,zero,10021404 <__subdf3+0x4bc>
1002184c:	003e9406 	br	100212a0 <__subdf3+0x358>
10021850:	40bff804 	addi	r2,r8,-32
10021854:	40c00820 	cmpeqi	r3,r8,32
10021858:	6084d83a 	srl	r2,r12,r2
1002185c:	1800041e 	bne	r3,zero,10021870 <__subdf3+0x928>
10021860:	04c01004 	movi	r19,64
10021864:	9a11c83a 	sub	r8,r19,r8
10021868:	6226983a 	sll	r19,r12,r8
1002186c:	6cdab03a 	or	r13,r13,r19
10021870:	6822c03a 	cmpne	r17,r13,zero
10021874:	88a2b03a 	or	r17,r17,r2
10021878:	003f0606 	br	10021494 <__subdf3+0x54c>
1002187c:	04c00434 	movhi	r19,16
10021880:	9cffffc4 	addi	r19,r19,-1
10021884:	0025883a 	mov	r18,zero
10021888:	00bfffc4 	movi	r2,-1
1002188c:	003ebc06 	br	10021380 <__subdf3+0x438>
10021890:	6ba3883a 	add	r17,r13,r14
10021894:	62c9883a 	add	r4,r12,r11
10021898:	8b9d803a 	cmpltu	r14,r17,r14
1002189c:	2389883a 	add	r4,r4,r14
100218a0:	003e7c06 	br	10021294 <__subdf3+0x34c>
100218a4:	0005883a 	mov	r2,zero
100218a8:	0201ffc4 	movi	r8,2047
100218ac:	0009883a 	mov	r4,zero
100218b0:	003e0f06 	br	100210f0 <__subdf3+0x1a8>

100218b4 <__unorddf2>:
100218b4:	2806d53a 	srli	r3,r5,20
100218b8:	3810d53a 	srli	r8,r7,20
100218bc:	00800434 	movhi	r2,16
100218c0:	18c1ffcc 	andi	r3,r3,2047
100218c4:	10bfffc4 	addi	r2,r2,-1
100218c8:	18c1ffd8 	cmpnei	r3,r3,2047
100218cc:	288a703a 	and	r5,r5,r2
100218d0:	388e703a 	and	r7,r7,r2
100218d4:	4201ffcc 	andi	r8,r8,2047
100218d8:	18000426 	beq	r3,zero,100218ec <__unorddf2+0x38>
100218dc:	4201ffd8 	cmpnei	r8,r8,2047
100218e0:	40000626 	beq	r8,zero,100218fc <__unorddf2+0x48>
100218e4:	0005883a 	mov	r2,zero
100218e8:	f800283a 	ret
100218ec:	214ab03a 	or	r5,r4,r5
100218f0:	283ffa26 	beq	r5,zero,100218dc <__unorddf2+0x28>
100218f4:	00800044 	movi	r2,1
100218f8:	f800283a 	ret
100218fc:	398eb03a 	or	r7,r7,r6
10021900:	3804c03a 	cmpne	r2,r7,zero
10021904:	f800283a 	ret

10021908 <__fixdfsi>:
10021908:	280cd53a 	srli	r6,r5,20
1002190c:	00c00434 	movhi	r3,16
10021910:	18ffffc4 	addi	r3,r3,-1
10021914:	3181ffcc 	andi	r6,r6,2047
10021918:	31c0ffd0 	cmplti	r7,r6,1023
1002191c:	28c6703a 	and	r3,r5,r3
10021920:	280ad7fa 	srli	r5,r5,31
10021924:	3800061e 	bne	r7,zero,10021940 <__fixdfsi+0x38>
10021928:	30810790 	cmplti	r2,r6,1054
1002192c:	1000061e 	bne	r2,zero,10021948 <__fixdfsi+0x40>
10021930:	00a00034 	movhi	r2,32768
10021934:	10bfffc4 	addi	r2,r2,-1
10021938:	2885883a 	add	r2,r5,r2
1002193c:	f800283a 	ret
10021940:	0005883a 	mov	r2,zero
10021944:	f800283a 	ret
10021948:	00810cc4 	movi	r2,1075
1002194c:	118fc83a 	sub	r7,r2,r6
10021950:	38800808 	cmpgei	r2,r7,32
10021954:	18c00434 	orhi	r3,r3,16
10021958:	1000071e 	bne	r2,zero,10021978 <__fixdfsi+0x70>
1002195c:	30befb44 	addi	r2,r6,-1043
10021960:	1886983a 	sll	r3,r3,r2
10021964:	21c4d83a 	srl	r2,r4,r7
10021968:	1884b03a 	or	r2,r3,r2
1002196c:	283ff526 	beq	r5,zero,10021944 <__fixdfsi+0x3c>
10021970:	0085c83a 	sub	r2,zero,r2
10021974:	f800283a 	ret
10021978:	008104c4 	movi	r2,1043
1002197c:	1185c83a 	sub	r2,r2,r6
10021980:	1884d83a 	srl	r2,r3,r2
10021984:	003ff906 	br	1002196c <__fixdfsi+0x64>

10021988 <__floatsidf>:
10021988:	defffd04 	addi	sp,sp,-12
1002198c:	dfc00215 	stw	ra,8(sp)
10021990:	dc400115 	stw	r17,4(sp)
10021994:	dc000015 	stw	r16,0(sp)
10021998:	20001326 	beq	r4,zero,100219e8 <__floatsidf+0x60>
1002199c:	2021883a 	mov	r16,r4
100219a0:	2022d7fa 	srli	r17,r4,31
100219a4:	20002116 	blt	r4,zero,10021a2c <__floatsidf+0xa4>
100219a8:	8009883a 	mov	r4,r16
100219ac:	0021aec0 	call	10021aec <__clzsi2>
100219b0:	01010784 	movi	r4,1054
100219b4:	2089c83a 	sub	r4,r4,r2
100219b8:	10c002c8 	cmpgei	r3,r2,11
100219bc:	2101ffcc 	andi	r4,r4,2047
100219c0:	18001c1e 	bne	r3,zero,10021a34 <__floatsidf+0xac>
100219c4:	018002c4 	movi	r6,11
100219c8:	308dc83a 	sub	r6,r6,r2
100219cc:	818ad83a 	srl	r5,r16,r6
100219d0:	00c00434 	movhi	r3,16
100219d4:	10800544 	addi	r2,r2,21
100219d8:	18ffffc4 	addi	r3,r3,-1
100219dc:	8084983a 	sll	r2,r16,r2
100219e0:	28ca703a 	and	r5,r5,r3
100219e4:	00000406 	br	100219f8 <__floatsidf+0x70>
100219e8:	0023883a 	mov	r17,zero
100219ec:	0009883a 	mov	r4,zero
100219f0:	000b883a 	mov	r5,zero
100219f4:	0005883a 	mov	r2,zero
100219f8:	2008953a 	slli	r4,r4,20
100219fc:	8c403fcc 	andi	r17,r17,255
10021a00:	01800434 	movhi	r6,16
10021a04:	31bfffc4 	addi	r6,r6,-1
10021a08:	880697fa 	slli	r3,r17,31
10021a0c:	298a703a 	and	r5,r5,r6
10021a10:	290ab03a 	or	r5,r5,r4
10021a14:	28c6b03a 	or	r3,r5,r3
10021a18:	dfc00217 	ldw	ra,8(sp)
10021a1c:	dc400117 	ldw	r17,4(sp)
10021a20:	dc000017 	ldw	r16,0(sp)
10021a24:	dec00304 	addi	sp,sp,12
10021a28:	f800283a 	ret
10021a2c:	0121c83a 	sub	r16,zero,r4
10021a30:	003fdd06 	br	100219a8 <__floatsidf+0x20>
10021a34:	10bffd44 	addi	r2,r2,-11
10021a38:	808a983a 	sll	r5,r16,r2
10021a3c:	00800434 	movhi	r2,16
10021a40:	10bfffc4 	addi	r2,r2,-1
10021a44:	288a703a 	and	r5,r5,r2
10021a48:	0005883a 	mov	r2,zero
10021a4c:	003fea06 	br	100219f8 <__floatsidf+0x70>

10021a50 <__floatunsidf>:
10021a50:	defffe04 	addi	sp,sp,-8
10021a54:	dc000015 	stw	r16,0(sp)
10021a58:	dfc00115 	stw	ra,4(sp)
10021a5c:	2021883a 	mov	r16,r4
10021a60:	20000f26 	beq	r4,zero,10021aa0 <__floatunsidf+0x50>
10021a64:	0021aec0 	call	10021aec <__clzsi2>
10021a68:	01010784 	movi	r4,1054
10021a6c:	2089c83a 	sub	r4,r4,r2
10021a70:	10c002c8 	cmpgei	r3,r2,11
10021a74:	2101ffcc 	andi	r4,r4,2047
10021a78:	1800151e 	bne	r3,zero,10021ad0 <__floatunsidf+0x80>
10021a7c:	00c002c4 	movi	r3,11
10021a80:	1887c83a 	sub	r3,r3,r2
10021a84:	80c6d83a 	srl	r3,r16,r3
10021a88:	01400434 	movhi	r5,16
10021a8c:	10800544 	addi	r2,r2,21
10021a90:	297fffc4 	addi	r5,r5,-1
10021a94:	80a0983a 	sll	r16,r16,r2
10021a98:	1944703a 	and	r2,r3,r5
10021a9c:	00000206 	br	10021aa8 <__floatunsidf+0x58>
10021aa0:	0009883a 	mov	r4,zero
10021aa4:	0005883a 	mov	r2,zero
10021aa8:	2008953a 	slli	r4,r4,20
10021aac:	00c00434 	movhi	r3,16
10021ab0:	18ffffc4 	addi	r3,r3,-1
10021ab4:	10c6703a 	and	r3,r2,r3
10021ab8:	1906b03a 	or	r3,r3,r4
10021abc:	8005883a 	mov	r2,r16
10021ac0:	dfc00117 	ldw	ra,4(sp)
10021ac4:	dc000017 	ldw	r16,0(sp)
10021ac8:	dec00204 	addi	sp,sp,8
10021acc:	f800283a 	ret
10021ad0:	10bffd44 	addi	r2,r2,-11
10021ad4:	8084983a 	sll	r2,r16,r2
10021ad8:	00c00434 	movhi	r3,16
10021adc:	18ffffc4 	addi	r3,r3,-1
10021ae0:	10c4703a 	and	r2,r2,r3
10021ae4:	0021883a 	mov	r16,zero
10021ae8:	003fef06 	br	10021aa8 <__floatunsidf+0x58>

10021aec <__clzsi2>:
10021aec:	00bfffd4 	movui	r2,65535
10021af0:	11000b36 	bltu	r2,r4,10021b20 <__clzsi2+0x34>
10021af4:	20804030 	cmpltui	r2,r4,256
10021af8:	1000071e 	bne	r2,zero,10021b18 <__clzsi2+0x2c>
10021afc:	2008d23a 	srli	r4,r4,8
10021b00:	01400604 	movi	r5,24
10021b04:	00c400b4 	movhi	r3,4098
10021b08:	20c7883a 	add	r3,r4,r3
10021b0c:	18979803 	ldbu	r2,24160(r3)
10021b10:	2885c83a 	sub	r2,r5,r2
10021b14:	f800283a 	ret
10021b18:	01400804 	movi	r5,32
10021b1c:	003ff906 	br	10021b04 <__clzsi2+0x18>
10021b20:	00804034 	movhi	r2,256
10021b24:	20800336 	bltu	r4,r2,10021b34 <__clzsi2+0x48>
10021b28:	2008d63a 	srli	r4,r4,24
10021b2c:	01400204 	movi	r5,8
10021b30:	003ff406 	br	10021b04 <__clzsi2+0x18>
10021b34:	2008d43a 	srli	r4,r4,16
10021b38:	01400404 	movi	r5,16
10021b3c:	003ff106 	br	10021b04 <__clzsi2+0x18>

10021b40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10021b40:	defffe04 	addi	sp,sp,-8
10021b44:	dfc00115 	stw	ra,4(sp)
10021b48:	df000015 	stw	fp,0(sp)
10021b4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021b50:	d0a01917 	ldw	r2,-32668(gp)
10021b54:	10000326 	beq	r2,zero,10021b64 <alt_get_errno+0x24>
10021b58:	d0a01917 	ldw	r2,-32668(gp)
10021b5c:	103ee83a 	callr	r2
10021b60:	00000106 	br	10021b68 <alt_get_errno+0x28>
10021b64:	d0a96204 	addi	r2,gp,-23160
}
10021b68:	e037883a 	mov	sp,fp
10021b6c:	dfc00117 	ldw	ra,4(sp)
10021b70:	df000017 	ldw	fp,0(sp)
10021b74:	dec00204 	addi	sp,sp,8
10021b78:	f800283a 	ret

10021b7c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
10021b7c:	defffb04 	addi	sp,sp,-20
10021b80:	dfc00415 	stw	ra,16(sp)
10021b84:	df000315 	stw	fp,12(sp)
10021b88:	df000304 	addi	fp,sp,12
10021b8c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
10021b90:	e0bffd17 	ldw	r2,-12(fp)
10021b94:	10000616 	blt	r2,zero,10021bb0 <close+0x34>
10021b98:	e0bffd17 	ldw	r2,-12(fp)
10021b9c:	10c00324 	muli	r3,r2,12
10021ba0:	008400b4 	movhi	r2,4098
10021ba4:	109c8e04 	addi	r2,r2,29240
10021ba8:	1885883a 	add	r2,r3,r2
10021bac:	00000106 	br	10021bb4 <close+0x38>
10021bb0:	0005883a 	mov	r2,zero
10021bb4:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
10021bb8:	e0bfff17 	ldw	r2,-4(fp)
10021bbc:	10001926 	beq	r2,zero,10021c24 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
10021bc0:	e0bfff17 	ldw	r2,-4(fp)
10021bc4:	10800017 	ldw	r2,0(r2)
10021bc8:	10800417 	ldw	r2,16(r2)
10021bcc:	10000626 	beq	r2,zero,10021be8 <close+0x6c>
10021bd0:	e0bfff17 	ldw	r2,-4(fp)
10021bd4:	10800017 	ldw	r2,0(r2)
10021bd8:	10800417 	ldw	r2,16(r2)
10021bdc:	e13fff17 	ldw	r4,-4(fp)
10021be0:	103ee83a 	callr	r2
10021be4:	00000106 	br	10021bec <close+0x70>
10021be8:	0005883a 	mov	r2,zero
10021bec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
10021bf0:	e13ffd17 	ldw	r4,-12(fp)
10021bf4:	00226400 	call	10022640 <alt_release_fd>
    if (rval < 0)
10021bf8:	e0bffe17 	ldw	r2,-8(fp)
10021bfc:	1000070e 	bge	r2,zero,10021c1c <close+0xa0>
    {
      ALT_ERRNO = -rval;
10021c00:	0021b400 	call	10021b40 <alt_get_errno>
10021c04:	1007883a 	mov	r3,r2
10021c08:	e0bffe17 	ldw	r2,-8(fp)
10021c0c:	0085c83a 	sub	r2,zero,r2
10021c10:	18800015 	stw	r2,0(r3)
      return -1;
10021c14:	00bfffc4 	movi	r2,-1
10021c18:	00000706 	br	10021c38 <close+0xbc>
    }
    return 0;
10021c1c:	0005883a 	mov	r2,zero
10021c20:	00000506 	br	10021c38 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021c24:	0021b400 	call	10021b40 <alt_get_errno>
10021c28:	1007883a 	mov	r3,r2
10021c2c:	00801444 	movi	r2,81
10021c30:	18800015 	stw	r2,0(r3)
    return -1;
10021c34:	00bfffc4 	movi	r2,-1
  }
}
10021c38:	e037883a 	mov	sp,fp
10021c3c:	dfc00117 	ldw	ra,4(sp)
10021c40:	df000017 	ldw	fp,0(sp)
10021c44:	dec00204 	addi	sp,sp,8
10021c48:	f800283a 	ret

10021c4c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
10021c4c:	defffc04 	addi	sp,sp,-16
10021c50:	df000315 	stw	fp,12(sp)
10021c54:	df000304 	addi	fp,sp,12
10021c58:	e13fff15 	stw	r4,-4(fp)
10021c5c:	e17ffe15 	stw	r5,-8(fp)
10021c60:	e1bffd15 	stw	r6,-12(fp)
  return len;
10021c64:	e0bffd17 	ldw	r2,-12(fp)
}
10021c68:	e037883a 	mov	sp,fp
10021c6c:	df000017 	ldw	fp,0(sp)
10021c70:	dec00104 	addi	sp,sp,4
10021c74:	f800283a 	ret

10021c78 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10021c78:	defffd04 	addi	sp,sp,-12
10021c7c:	df000215 	stw	fp,8(sp)
10021c80:	df000204 	addi	fp,sp,8
10021c84:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10021c88:	0001883a 	nop
10021c8c:	e0bffe17 	ldw	r2,-8(fp)
10021c90:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10021c94:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10021c98:	10000226 	beq	r2,zero,10021ca4 <_exit+0x2c>
    ALT_SIM_FAIL();
10021c9c:	002af070 	cmpltui	zero,zero,43969
10021ca0:	00000106 	br	10021ca8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10021ca4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10021ca8:	003fff06 	br	10021ca8 <_exit+0x30>

10021cac <alt_get_errno>:
{
10021cac:	defffe04 	addi	sp,sp,-8
10021cb0:	dfc00115 	stw	ra,4(sp)
10021cb4:	df000015 	stw	fp,0(sp)
10021cb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021cbc:	d0a01917 	ldw	r2,-32668(gp)
10021cc0:	10000326 	beq	r2,zero,10021cd0 <alt_get_errno+0x24>
10021cc4:	d0a01917 	ldw	r2,-32668(gp)
10021cc8:	103ee83a 	callr	r2
10021ccc:	00000106 	br	10021cd4 <alt_get_errno+0x28>
10021cd0:	d0a96204 	addi	r2,gp,-23160
}
10021cd4:	e037883a 	mov	sp,fp
10021cd8:	dfc00117 	ldw	ra,4(sp)
10021cdc:	df000017 	ldw	fp,0(sp)
10021ce0:	dec00204 	addi	sp,sp,8
10021ce4:	f800283a 	ret

10021ce8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
10021ce8:	defffb04 	addi	sp,sp,-20
10021cec:	dfc00415 	stw	ra,16(sp)
10021cf0:	df000315 	stw	fp,12(sp)
10021cf4:	df000304 	addi	fp,sp,12
10021cf8:	e13ffe15 	stw	r4,-8(fp)
10021cfc:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10021d00:	e0bffe17 	ldw	r2,-8(fp)
10021d04:	10000616 	blt	r2,zero,10021d20 <fstat+0x38>
10021d08:	e0bffe17 	ldw	r2,-8(fp)
10021d0c:	10c00324 	muli	r3,r2,12
10021d10:	008400b4 	movhi	r2,4098
10021d14:	109c8e04 	addi	r2,r2,29240
10021d18:	1885883a 	add	r2,r3,r2
10021d1c:	00000106 	br	10021d24 <fstat+0x3c>
10021d20:	0005883a 	mov	r2,zero
10021d24:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10021d28:	e0bfff17 	ldw	r2,-4(fp)
10021d2c:	10001026 	beq	r2,zero,10021d70 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
10021d30:	e0bfff17 	ldw	r2,-4(fp)
10021d34:	10800017 	ldw	r2,0(r2)
10021d38:	10800817 	ldw	r2,32(r2)
10021d3c:	10000726 	beq	r2,zero,10021d5c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
10021d40:	e0bfff17 	ldw	r2,-4(fp)
10021d44:	10800017 	ldw	r2,0(r2)
10021d48:	10800817 	ldw	r2,32(r2)
10021d4c:	e17ffd17 	ldw	r5,-12(fp)
10021d50:	e13fff17 	ldw	r4,-4(fp)
10021d54:	103ee83a 	callr	r2
10021d58:	00000a06 	br	10021d84 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
10021d5c:	e0bffd17 	ldw	r2,-12(fp)
10021d60:	00c80004 	movi	r3,8192
10021d64:	10c00115 	stw	r3,4(r2)
      return 0;
10021d68:	0005883a 	mov	r2,zero
10021d6c:	00000506 	br	10021d84 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021d70:	0021cac0 	call	10021cac <alt_get_errno>
10021d74:	1007883a 	mov	r3,r2
10021d78:	00801444 	movi	r2,81
10021d7c:	18800015 	stw	r2,0(r3)
    return -1;
10021d80:	00bfffc4 	movi	r2,-1
  }
}
10021d84:	e037883a 	mov	sp,fp
10021d88:	dfc00117 	ldw	ra,4(sp)
10021d8c:	df000017 	ldw	fp,0(sp)
10021d90:	dec00204 	addi	sp,sp,8
10021d94:	f800283a 	ret

10021d98 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
10021d98:	deffff04 	addi	sp,sp,-4
10021d9c:	df000015 	stw	fp,0(sp)
10021da0:	d839883a 	mov	fp,sp
  return 0;
10021da4:	0005883a 	mov	r2,zero
}
10021da8:	e037883a 	mov	sp,fp
10021dac:	df000017 	ldw	fp,0(sp)
10021db0:	dec00104 	addi	sp,sp,4
10021db4:	f800283a 	ret

10021db8 <alt_get_errno>:
{
10021db8:	defffe04 	addi	sp,sp,-8
10021dbc:	dfc00115 	stw	ra,4(sp)
10021dc0:	df000015 	stw	fp,0(sp)
10021dc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021dc8:	d0a01917 	ldw	r2,-32668(gp)
10021dcc:	10000326 	beq	r2,zero,10021ddc <alt_get_errno+0x24>
10021dd0:	d0a01917 	ldw	r2,-32668(gp)
10021dd4:	103ee83a 	callr	r2
10021dd8:	00000106 	br	10021de0 <alt_get_errno+0x28>
10021ddc:	d0a96204 	addi	r2,gp,-23160
}
10021de0:	e037883a 	mov	sp,fp
10021de4:	dfc00117 	ldw	ra,4(sp)
10021de8:	df000017 	ldw	fp,0(sp)
10021dec:	dec00204 	addi	sp,sp,8
10021df0:	f800283a 	ret

10021df4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10021df4:	deffea04 	addi	sp,sp,-88
10021df8:	dfc01515 	stw	ra,84(sp)
10021dfc:	df001415 	stw	fp,80(sp)
10021e00:	df001404 	addi	fp,sp,80
10021e04:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10021e08:	e0bfec17 	ldw	r2,-80(fp)
10021e0c:	10000616 	blt	r2,zero,10021e28 <isatty+0x34>
10021e10:	e0bfec17 	ldw	r2,-80(fp)
10021e14:	10c00324 	muli	r3,r2,12
10021e18:	008400b4 	movhi	r2,4098
10021e1c:	109c8e04 	addi	r2,r2,29240
10021e20:	1885883a 	add	r2,r3,r2
10021e24:	00000106 	br	10021e2c <isatty+0x38>
10021e28:	0005883a 	mov	r2,zero
10021e2c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10021e30:	e0bfff17 	ldw	r2,-4(fp)
10021e34:	10000e26 	beq	r2,zero,10021e70 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10021e38:	e0bfff17 	ldw	r2,-4(fp)
10021e3c:	10800017 	ldw	r2,0(r2)
10021e40:	10800817 	ldw	r2,32(r2)
10021e44:	1000021e 	bne	r2,zero,10021e50 <isatty+0x5c>
    {
      return 1;
10021e48:	00800044 	movi	r2,1
10021e4c:	00000d06 	br	10021e84 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10021e50:	e0bfed04 	addi	r2,fp,-76
10021e54:	100b883a 	mov	r5,r2
10021e58:	e13fec17 	ldw	r4,-80(fp)
10021e5c:	0021ce80 	call	10021ce8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
10021e60:	e0bfee17 	ldw	r2,-72(fp)
10021e64:	10880020 	cmpeqi	r2,r2,8192
10021e68:	10803fcc 	andi	r2,r2,255
10021e6c:	00000506 	br	10021e84 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021e70:	0021db80 	call	10021db8 <alt_get_errno>
10021e74:	1007883a 	mov	r3,r2
10021e78:	00801444 	movi	r2,81
10021e7c:	18800015 	stw	r2,0(r3)
    return 0;
10021e80:	0005883a 	mov	r2,zero
  }
}
10021e84:	e037883a 	mov	sp,fp
10021e88:	dfc00117 	ldw	ra,4(sp)
10021e8c:	df000017 	ldw	fp,0(sp)
10021e90:	dec00204 	addi	sp,sp,8
10021e94:	f800283a 	ret

10021e98 <alt_get_errno>:
{
10021e98:	defffe04 	addi	sp,sp,-8
10021e9c:	dfc00115 	stw	ra,4(sp)
10021ea0:	df000015 	stw	fp,0(sp)
10021ea4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021ea8:	d0a01917 	ldw	r2,-32668(gp)
10021eac:	10000326 	beq	r2,zero,10021ebc <alt_get_errno+0x24>
10021eb0:	d0a01917 	ldw	r2,-32668(gp)
10021eb4:	103ee83a 	callr	r2
10021eb8:	00000106 	br	10021ec0 <alt_get_errno+0x28>
10021ebc:	d0a96204 	addi	r2,gp,-23160
}
10021ec0:	e037883a 	mov	sp,fp
10021ec4:	dfc00117 	ldw	ra,4(sp)
10021ec8:	df000017 	ldw	fp,0(sp)
10021ecc:	dec00204 	addi	sp,sp,8
10021ed0:	f800283a 	ret

10021ed4 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
10021ed4:	defffb04 	addi	sp,sp,-20
10021ed8:	dfc00415 	stw	ra,16(sp)
10021edc:	df000315 	stw	fp,12(sp)
10021ee0:	df000304 	addi	fp,sp,12
10021ee4:	e13ffe15 	stw	r4,-8(fp)
10021ee8:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
10021eec:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
10021ef0:	e0bffe17 	ldw	r2,-8(fp)
10021ef4:	00802e16 	blt	zero,r2,10021fb0 <kill+0xdc>
  {
    switch (sig)
10021ef8:	e0bffd17 	ldw	r2,-12(fp)
10021efc:	10800828 	cmpgeui	r2,r2,32
10021f00:	1000281e 	bne	r2,zero,10021fa4 <kill+0xd0>
10021f04:	e0bffd17 	ldw	r2,-12(fp)
10021f08:	100690ba 	slli	r3,r2,2
10021f0c:	008400b4 	movhi	r2,4098
10021f10:	1885883a 	add	r2,r3,r2
10021f14:	1087c717 	ldw	r2,7964(r2)
10021f18:	1000683a 	jmp	r2
10021f1c:	10021fc4 	addi	zero,r2,2175
10021f20:	10021fa4 	muli	zero,r2,2174
10021f24:	10021fa4 	muli	zero,r2,2174
10021f28:	10021f9c 	xori	zero,r2,2174
10021f2c:	10021f9c 	xori	zero,r2,2174
10021f30:	10021f9c 	xori	zero,r2,2174
10021f34:	10021f9c 	xori	zero,r2,2174
10021f38:	10021fa4 	muli	zero,r2,2174
10021f3c:	10021f9c 	xori	zero,r2,2174
10021f40:	10021f9c 	xori	zero,r2,2174
10021f44:	10021f9c 	xori	zero,r2,2174
10021f48:	10021f9c 	xori	zero,r2,2174
10021f4c:	10021f9c 	xori	zero,r2,2174
10021f50:	10021f9c 	xori	zero,r2,2174
10021f54:	10021f9c 	xori	zero,r2,2174
10021f58:	10021f9c 	xori	zero,r2,2174
10021f5c:	10021fc4 	addi	zero,r2,2175
10021f60:	10021fa4 	muli	zero,r2,2174
10021f64:	10021fa4 	muli	zero,r2,2174
10021f68:	10021fa4 	muli	zero,r2,2174
10021f6c:	10021fc4 	addi	zero,r2,2175
10021f70:	10021fa4 	muli	zero,r2,2174
10021f74:	10021fa4 	muli	zero,r2,2174
10021f78:	10021f9c 	xori	zero,r2,2174
10021f7c:	10021f9c 	xori	zero,r2,2174
10021f80:	10021f9c 	xori	zero,r2,2174
10021f84:	10021f9c 	xori	zero,r2,2174
10021f88:	10021f9c 	xori	zero,r2,2174
10021f8c:	10021fa4 	muli	zero,r2,2174
10021f90:	10021fa4 	muli	zero,r2,2174
10021f94:	10021f9c 	xori	zero,r2,2174
10021f98:	10021f9c 	xori	zero,r2,2174
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
10021f9c:	0009883a 	mov	r4,zero
10021fa0:	0021c780 	call	10021c78 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
10021fa4:	00800584 	movi	r2,22
10021fa8:	e0bfff15 	stw	r2,-4(fp)
10021fac:	00000606 	br	10021fc8 <kill+0xf4>
    }
  }

  else if (pid > 0)
10021fb0:	e0bffe17 	ldw	r2,-8(fp)
10021fb4:	0080040e 	bge	zero,r2,10021fc8 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
10021fb8:	008000c4 	movi	r2,3
10021fbc:	e0bfff15 	stw	r2,-4(fp)
10021fc0:	00000106 	br	10021fc8 <kill+0xf4>
      break;
10021fc4:	0001883a 	nop
  }

  if (status)
10021fc8:	e0bfff17 	ldw	r2,-4(fp)
10021fcc:	10000626 	beq	r2,zero,10021fe8 <kill+0x114>
  {
    ALT_ERRNO = status;
10021fd0:	0021e980 	call	10021e98 <alt_get_errno>
10021fd4:	1007883a 	mov	r3,r2
10021fd8:	e0bfff17 	ldw	r2,-4(fp)
10021fdc:	18800015 	stw	r2,0(r3)
    return -1;
10021fe0:	00bfffc4 	movi	r2,-1
10021fe4:	00000106 	br	10021fec <kill+0x118>
  }

  return 0;
10021fe8:	0005883a 	mov	r2,zero
}
10021fec:	e037883a 	mov	sp,fp
10021ff0:	dfc00117 	ldw	ra,4(sp)
10021ff4:	df000017 	ldw	fp,0(sp)
10021ff8:	dec00204 	addi	sp,sp,8
10021ffc:	f800283a 	ret

10022000 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10022000:	defffc04 	addi	sp,sp,-16
10022004:	df000315 	stw	fp,12(sp)
10022008:	df000304 	addi	fp,sp,12
1002200c:	e13fff15 	stw	r4,-4(fp)
10022010:	e17ffe15 	stw	r5,-8(fp)
10022014:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
10022018:	e0fffe17 	ldw	r3,-8(fp)
1002201c:	e0bfff17 	ldw	r2,-4(fp)
10022020:	18800c26 	beq	r3,r2,10022054 <alt_load_section+0x54>
  {
    while( to != end )
10022024:	00000806 	br	10022048 <alt_load_section+0x48>
    {
      *to++ = *from++;
10022028:	e0ffff17 	ldw	r3,-4(fp)
1002202c:	18800104 	addi	r2,r3,4
10022030:	e0bfff15 	stw	r2,-4(fp)
10022034:	e0bffe17 	ldw	r2,-8(fp)
10022038:	11000104 	addi	r4,r2,4
1002203c:	e13ffe15 	stw	r4,-8(fp)
10022040:	18c00017 	ldw	r3,0(r3)
10022044:	10c00015 	stw	r3,0(r2)
    while( to != end )
10022048:	e0fffe17 	ldw	r3,-8(fp)
1002204c:	e0bffd17 	ldw	r2,-12(fp)
10022050:	18bff51e 	bne	r3,r2,10022028 <alt_load_section+0x28>
    }
  }
}
10022054:	0001883a 	nop
10022058:	e037883a 	mov	sp,fp
1002205c:	df000017 	ldw	fp,0(sp)
10022060:	dec00104 	addi	sp,sp,4
10022064:	f800283a 	ret

10022068 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10022068:	defffe04 	addi	sp,sp,-8
1002206c:	dfc00115 	stw	ra,4(sp)
10022070:	df000015 	stw	fp,0(sp)
10022074:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10022078:	018400f4 	movhi	r6,4099
1002207c:	31a12404 	addi	r6,r6,-31600
10022080:	014400b4 	movhi	r5,4098
10022084:	2957e504 	addi	r5,r5,24468
10022088:	010400f4 	movhi	r4,4099
1002208c:	21212404 	addi	r4,r4,-31600
10022090:	00220000 	call	10022000 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10022094:	01840034 	movhi	r6,4096
10022098:	31808e04 	addi	r6,r6,568
1002209c:	01440034 	movhi	r5,4096
100220a0:	29400804 	addi	r5,r5,32
100220a4:	01040034 	movhi	r4,4096
100220a8:	21000804 	addi	r4,r4,32
100220ac:	00220000 	call	10022000 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
100220b0:	018400b4 	movhi	r6,4098
100220b4:	3197e504 	addi	r6,r6,24468
100220b8:	014400b4 	movhi	r5,4098
100220bc:	29517204 	addi	r5,r5,17864
100220c0:	010400b4 	movhi	r4,4098
100220c4:	21117204 	addi	r4,r4,17864
100220c8:	00220000 	call	10022000 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
100220cc:	00237240 	call	10023724 <alt_dcache_flush_all>
  alt_icache_flush_all();
100220d0:	0023b440 	call	10023b44 <alt_icache_flush_all>
}
100220d4:	0001883a 	nop
100220d8:	e037883a 	mov	sp,fp
100220dc:	dfc00117 	ldw	ra,4(sp)
100220e0:	df000017 	ldw	fp,0(sp)
100220e4:	dec00204 	addi	sp,sp,8
100220e8:	f800283a 	ret

100220ec <alt_get_errno>:
{
100220ec:	defffe04 	addi	sp,sp,-8
100220f0:	dfc00115 	stw	ra,4(sp)
100220f4:	df000015 	stw	fp,0(sp)
100220f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100220fc:	d0a01917 	ldw	r2,-32668(gp)
10022100:	10000326 	beq	r2,zero,10022110 <alt_get_errno+0x24>
10022104:	d0a01917 	ldw	r2,-32668(gp)
10022108:	103ee83a 	callr	r2
1002210c:	00000106 	br	10022114 <alt_get_errno+0x28>
10022110:	d0a96204 	addi	r2,gp,-23160
}
10022114:	e037883a 	mov	sp,fp
10022118:	dfc00117 	ldw	ra,4(sp)
1002211c:	df000017 	ldw	fp,0(sp)
10022120:	dec00204 	addi	sp,sp,8
10022124:	f800283a 	ret

10022128 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10022128:	defff904 	addi	sp,sp,-28
1002212c:	dfc00615 	stw	ra,24(sp)
10022130:	df000515 	stw	fp,20(sp)
10022134:	df000504 	addi	fp,sp,20
10022138:	e13ffd15 	stw	r4,-12(fp)
1002213c:	e17ffc15 	stw	r5,-16(fp)
10022140:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10022144:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022148:	e0bffd17 	ldw	r2,-12(fp)
1002214c:	10000616 	blt	r2,zero,10022168 <lseek+0x40>
10022150:	e0bffd17 	ldw	r2,-12(fp)
10022154:	10c00324 	muli	r3,r2,12
10022158:	008400b4 	movhi	r2,4098
1002215c:	109c8e04 	addi	r2,r2,29240
10022160:	1885883a 	add	r2,r3,r2
10022164:	00000106 	br	1002216c <lseek+0x44>
10022168:	0005883a 	mov	r2,zero
1002216c:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
10022170:	e0bffe17 	ldw	r2,-8(fp)
10022174:	10001026 	beq	r2,zero,100221b8 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10022178:	e0bffe17 	ldw	r2,-8(fp)
1002217c:	10800017 	ldw	r2,0(r2)
10022180:	10800717 	ldw	r2,28(r2)
10022184:	10000926 	beq	r2,zero,100221ac <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10022188:	e0bffe17 	ldw	r2,-8(fp)
1002218c:	10800017 	ldw	r2,0(r2)
10022190:	10800717 	ldw	r2,28(r2)
10022194:	e1bffb17 	ldw	r6,-20(fp)
10022198:	e17ffc17 	ldw	r5,-16(fp)
1002219c:	e13ffe17 	ldw	r4,-8(fp)
100221a0:	103ee83a 	callr	r2
100221a4:	e0bfff15 	stw	r2,-4(fp)
100221a8:	00000506 	br	100221c0 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
100221ac:	00bfde84 	movi	r2,-134
100221b0:	e0bfff15 	stw	r2,-4(fp)
100221b4:	00000206 	br	100221c0 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
100221b8:	00bfebc4 	movi	r2,-81
100221bc:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
100221c0:	e0bfff17 	ldw	r2,-4(fp)
100221c4:	1000070e 	bge	r2,zero,100221e4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
100221c8:	00220ec0 	call	100220ec <alt_get_errno>
100221cc:	1007883a 	mov	r3,r2
100221d0:	e0bfff17 	ldw	r2,-4(fp)
100221d4:	0085c83a 	sub	r2,zero,r2
100221d8:	18800015 	stw	r2,0(r3)
    rc = -1;
100221dc:	00bfffc4 	movi	r2,-1
100221e0:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
100221e4:	e0bfff17 	ldw	r2,-4(fp)
}
100221e8:	e037883a 	mov	sp,fp
100221ec:	dfc00117 	ldw	ra,4(sp)
100221f0:	df000017 	ldw	fp,0(sp)
100221f4:	dec00204 	addi	sp,sp,8
100221f8:	f800283a 	ret

100221fc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
100221fc:	defffd04 	addi	sp,sp,-12
10022200:	dfc00215 	stw	ra,8(sp)
10022204:	df000115 	stw	fp,4(sp)
10022208:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1002220c:	0009883a 	mov	r4,zero
10022210:	00228e00 	call	100228e0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10022214:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10022218:	00229180 	call	10022918 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1002221c:	018400b4 	movhi	r6,4098
10022220:	3197db04 	addi	r6,r6,24428
10022224:	014400b4 	movhi	r5,4098
10022228:	2957db04 	addi	r5,r5,24428
1002222c:	010400b4 	movhi	r4,4098
10022230:	2117db04 	addi	r4,r4,24428
10022234:	0023ebc0 	call	10023ebc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10022238:	002384c0 	call	1002384c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1002223c:	010400b4 	movhi	r4,4098
10022240:	210e2b04 	addi	r4,r4,14508
10022244:	00242280 	call	10024228 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10022248:	d0a96717 	ldw	r2,-23140(gp)
1002224c:	d0e96817 	ldw	r3,-23136(gp)
10022250:	d1296917 	ldw	r4,-23132(gp)
10022254:	200d883a 	mov	r6,r4
10022258:	180b883a 	mov	r5,r3
1002225c:	1009883a 	mov	r4,r2
10022260:	00037fc0 	call	100037fc <main>
10022264:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10022268:	01000044 	movi	r4,1
1002226c:	0021b7c0 	call	10021b7c <close>
  exit (result);
10022270:	e13fff17 	ldw	r4,-4(fp)
10022274:	002423c0 	call	1002423c <exit>

10022278 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10022278:	defffe04 	addi	sp,sp,-8
1002227c:	df000115 	stw	fp,4(sp)
10022280:	df000104 	addi	fp,sp,4
10022284:	e13fff15 	stw	r4,-4(fp)
}
10022288:	0001883a 	nop
1002228c:	e037883a 	mov	sp,fp
10022290:	df000017 	ldw	fp,0(sp)
10022294:	dec00104 	addi	sp,sp,4
10022298:	f800283a 	ret

1002229c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1002229c:	defffe04 	addi	sp,sp,-8
100222a0:	df000115 	stw	fp,4(sp)
100222a4:	df000104 	addi	fp,sp,4
100222a8:	e13fff15 	stw	r4,-4(fp)
}
100222ac:	0001883a 	nop
100222b0:	e037883a 	mov	sp,fp
100222b4:	df000017 	ldw	fp,0(sp)
100222b8:	dec00104 	addi	sp,sp,4
100222bc:	f800283a 	ret

100222c0 <alt_get_errno>:
{
100222c0:	defffe04 	addi	sp,sp,-8
100222c4:	dfc00115 	stw	ra,4(sp)
100222c8:	df000015 	stw	fp,0(sp)
100222cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100222d0:	d0a01917 	ldw	r2,-32668(gp)
100222d4:	10000326 	beq	r2,zero,100222e4 <alt_get_errno+0x24>
100222d8:	d0a01917 	ldw	r2,-32668(gp)
100222dc:	103ee83a 	callr	r2
100222e0:	00000106 	br	100222e8 <alt_get_errno+0x28>
100222e4:	d0a96204 	addi	r2,gp,-23160
}
100222e8:	e037883a 	mov	sp,fp
100222ec:	dfc00117 	ldw	ra,4(sp)
100222f0:	df000017 	ldw	fp,0(sp)
100222f4:	dec00204 	addi	sp,sp,8
100222f8:	f800283a 	ret

100222fc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
100222fc:	defffd04 	addi	sp,sp,-12
10022300:	df000215 	stw	fp,8(sp)
10022304:	df000204 	addi	fp,sp,8
10022308:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1002230c:	e0bffe17 	ldw	r2,-8(fp)
10022310:	10800217 	ldw	r2,8(r2)
10022314:	10d00034 	orhi	r3,r2,16384
10022318:	e0bffe17 	ldw	r2,-8(fp)
1002231c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10022320:	e03fff15 	stw	zero,-4(fp)
10022324:	00001a06 	br	10022390 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10022328:	e0bfff17 	ldw	r2,-4(fp)
1002232c:	10c00324 	muli	r3,r2,12
10022330:	008400b4 	movhi	r2,4098
10022334:	1885883a 	add	r2,r3,r2
10022338:	10dc8e17 	ldw	r3,29240(r2)
1002233c:	e0bffe17 	ldw	r2,-8(fp)
10022340:	10800017 	ldw	r2,0(r2)
10022344:	18800f1e 	bne	r3,r2,10022384 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10022348:	e0bfff17 	ldw	r2,-4(fp)
1002234c:	10c00324 	muli	r3,r2,12
10022350:	008400b4 	movhi	r2,4098
10022354:	1885883a 	add	r2,r3,r2
10022358:	109c9017 	ldw	r2,29248(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
1002235c:	1000090e 	bge	r2,zero,10022384 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
10022360:	e0bfff17 	ldw	r2,-4(fp)
10022364:	10c00324 	muli	r3,r2,12
10022368:	008400b4 	movhi	r2,4098
1002236c:	109c8e04 	addi	r2,r2,29240
10022370:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10022374:	e0fffe17 	ldw	r3,-8(fp)
10022378:	18800226 	beq	r3,r2,10022384 <alt_file_locked+0x88>
    {
      return -EACCES;
1002237c:	00bffcc4 	movi	r2,-13
10022380:	00000806 	br	100223a4 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
10022384:	e0bfff17 	ldw	r2,-4(fp)
10022388:	10800044 	addi	r2,r2,1
1002238c:	e0bfff15 	stw	r2,-4(fp)
10022390:	d0a01817 	ldw	r2,-32672(gp)
10022394:	1007883a 	mov	r3,r2
10022398:	e0bfff17 	ldw	r2,-4(fp)
1002239c:	18bfe22e 	bgeu	r3,r2,10022328 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
100223a0:	0005883a 	mov	r2,zero
}
100223a4:	e037883a 	mov	sp,fp
100223a8:	df000017 	ldw	fp,0(sp)
100223ac:	dec00104 	addi	sp,sp,4
100223b0:	f800283a 	ret

100223b4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
100223b4:	defff604 	addi	sp,sp,-40
100223b8:	dfc00915 	stw	ra,36(sp)
100223bc:	df000815 	stw	fp,32(sp)
100223c0:	df000804 	addi	fp,sp,32
100223c4:	e13ffa15 	stw	r4,-24(fp)
100223c8:	e17ff915 	stw	r5,-28(fp)
100223cc:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
100223d0:	00bfffc4 	movi	r2,-1
100223d4:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
100223d8:	00bffb44 	movi	r2,-19
100223dc:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
100223e0:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
100223e4:	d1601604 	addi	r5,gp,-32680
100223e8:	e13ffa17 	ldw	r4,-24(fp)
100223ec:	002390c0 	call	1002390c <alt_find_dev>
100223f0:	e0bfff15 	stw	r2,-4(fp)
100223f4:	e0bfff17 	ldw	r2,-4(fp)
100223f8:	1000051e 	bne	r2,zero,10022410 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
100223fc:	e13ffa17 	ldw	r4,-24(fp)
10022400:	002399c0 	call	1002399c <alt_find_file>
10022404:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
10022408:	00800044 	movi	r2,1
1002240c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10022410:	e0bfff17 	ldw	r2,-4(fp)
10022414:	10002926 	beq	r2,zero,100224bc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
10022418:	e13fff17 	ldw	r4,-4(fp)
1002241c:	0023aa40 	call	10023aa4 <alt_get_fd>
10022420:	e0bffe15 	stw	r2,-8(fp)
10022424:	e0bffe17 	ldw	r2,-8(fp)
10022428:	1000030e 	bge	r2,zero,10022438 <open+0x84>
    {
      status = index;
1002242c:	e0bffe17 	ldw	r2,-8(fp)
10022430:	e0bffd15 	stw	r2,-12(fp)
10022434:	00002306 	br	100224c4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
10022438:	e0bffe17 	ldw	r2,-8(fp)
1002243c:	10c00324 	muli	r3,r2,12
10022440:	008400b4 	movhi	r2,4098
10022444:	109c8e04 	addi	r2,r2,29240
10022448:	1885883a 	add	r2,r3,r2
1002244c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
10022450:	e0fff917 	ldw	r3,-28(fp)
10022454:	00900034 	movhi	r2,16384
10022458:	10bfffc4 	addi	r2,r2,-1
1002245c:	1886703a 	and	r3,r3,r2
10022460:	e0bffb17 	ldw	r2,-20(fp)
10022464:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10022468:	e0bffc17 	ldw	r2,-16(fp)
1002246c:	1000051e 	bne	r2,zero,10022484 <open+0xd0>
10022470:	e13ffb17 	ldw	r4,-20(fp)
10022474:	00222fc0 	call	100222fc <alt_file_locked>
10022478:	e0bffd15 	stw	r2,-12(fp)
1002247c:	e0bffd17 	ldw	r2,-12(fp)
10022480:	10001016 	blt	r2,zero,100224c4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
10022484:	e0bfff17 	ldw	r2,-4(fp)
10022488:	10800317 	ldw	r2,12(r2)
1002248c:	10000826 	beq	r2,zero,100224b0 <open+0xfc>
10022490:	e0bfff17 	ldw	r2,-4(fp)
10022494:	10800317 	ldw	r2,12(r2)
10022498:	e1fff817 	ldw	r7,-32(fp)
1002249c:	e1bff917 	ldw	r6,-28(fp)
100224a0:	e17ffa17 	ldw	r5,-24(fp)
100224a4:	e13ffb17 	ldw	r4,-20(fp)
100224a8:	103ee83a 	callr	r2
100224ac:	00000106 	br	100224b4 <open+0x100>
100224b0:	0005883a 	mov	r2,zero
100224b4:	e0bffd15 	stw	r2,-12(fp)
100224b8:	00000206 	br	100224c4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
100224bc:	00bffb44 	movi	r2,-19
100224c0:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
100224c4:	e0bffd17 	ldw	r2,-12(fp)
100224c8:	1000090e 	bge	r2,zero,100224f0 <open+0x13c>
  {
    alt_release_fd (index);  
100224cc:	e13ffe17 	ldw	r4,-8(fp)
100224d0:	00226400 	call	10022640 <alt_release_fd>
    ALT_ERRNO = -status;
100224d4:	00222c00 	call	100222c0 <alt_get_errno>
100224d8:	1007883a 	mov	r3,r2
100224dc:	e0bffd17 	ldw	r2,-12(fp)
100224e0:	0085c83a 	sub	r2,zero,r2
100224e4:	18800015 	stw	r2,0(r3)
    return -1;
100224e8:	00bfffc4 	movi	r2,-1
100224ec:	00000106 	br	100224f4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
100224f0:	e0bffe17 	ldw	r2,-8(fp)
}
100224f4:	e037883a 	mov	sp,fp
100224f8:	dfc00117 	ldw	ra,4(sp)
100224fc:	df000017 	ldw	fp,0(sp)
10022500:	dec00204 	addi	sp,sp,8
10022504:	f800283a 	ret

10022508 <alt_get_errno>:
{
10022508:	defffe04 	addi	sp,sp,-8
1002250c:	dfc00115 	stw	ra,4(sp)
10022510:	df000015 	stw	fp,0(sp)
10022514:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022518:	d0a01917 	ldw	r2,-32668(gp)
1002251c:	10000326 	beq	r2,zero,1002252c <alt_get_errno+0x24>
10022520:	d0a01917 	ldw	r2,-32668(gp)
10022524:	103ee83a 	callr	r2
10022528:	00000106 	br	10022530 <alt_get_errno+0x28>
1002252c:	d0a96204 	addi	r2,gp,-23160
}
10022530:	e037883a 	mov	sp,fp
10022534:	dfc00117 	ldw	ra,4(sp)
10022538:	df000017 	ldw	fp,0(sp)
1002253c:	dec00204 	addi	sp,sp,8
10022540:	f800283a 	ret

10022544 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10022544:	defff904 	addi	sp,sp,-28
10022548:	dfc00615 	stw	ra,24(sp)
1002254c:	df000515 	stw	fp,20(sp)
10022550:	df000504 	addi	fp,sp,20
10022554:	e13ffd15 	stw	r4,-12(fp)
10022558:	e17ffc15 	stw	r5,-16(fp)
1002255c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022560:	e0bffd17 	ldw	r2,-12(fp)
10022564:	10000616 	blt	r2,zero,10022580 <read+0x3c>
10022568:	e0bffd17 	ldw	r2,-12(fp)
1002256c:	10c00324 	muli	r3,r2,12
10022570:	008400b4 	movhi	r2,4098
10022574:	109c8e04 	addi	r2,r2,29240
10022578:	1885883a 	add	r2,r3,r2
1002257c:	00000106 	br	10022584 <read+0x40>
10022580:	0005883a 	mov	r2,zero
10022584:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022588:	e0bfff17 	ldw	r2,-4(fp)
1002258c:	10002226 	beq	r2,zero,10022618 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10022590:	e0bfff17 	ldw	r2,-4(fp)
10022594:	10800217 	ldw	r2,8(r2)
10022598:	108000cc 	andi	r2,r2,3
1002259c:	10800060 	cmpeqi	r2,r2,1
100225a0:	1000181e 	bne	r2,zero,10022604 <read+0xc0>
        (fd->dev->read))
100225a4:	e0bfff17 	ldw	r2,-4(fp)
100225a8:	10800017 	ldw	r2,0(r2)
100225ac:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
100225b0:	10001426 	beq	r2,zero,10022604 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
100225b4:	e0bfff17 	ldw	r2,-4(fp)
100225b8:	10800017 	ldw	r2,0(r2)
100225bc:	10800517 	ldw	r2,20(r2)
100225c0:	e0fffb17 	ldw	r3,-20(fp)
100225c4:	180d883a 	mov	r6,r3
100225c8:	e17ffc17 	ldw	r5,-16(fp)
100225cc:	e13fff17 	ldw	r4,-4(fp)
100225d0:	103ee83a 	callr	r2
100225d4:	e0bffe15 	stw	r2,-8(fp)
100225d8:	e0bffe17 	ldw	r2,-8(fp)
100225dc:	1000070e 	bge	r2,zero,100225fc <read+0xb8>
        {
          ALT_ERRNO = -rval;
100225e0:	00225080 	call	10022508 <alt_get_errno>
100225e4:	1007883a 	mov	r3,r2
100225e8:	e0bffe17 	ldw	r2,-8(fp)
100225ec:	0085c83a 	sub	r2,zero,r2
100225f0:	18800015 	stw	r2,0(r3)
          return -1;
100225f4:	00bfffc4 	movi	r2,-1
100225f8:	00000c06 	br	1002262c <read+0xe8>
        }
        return rval;
100225fc:	e0bffe17 	ldw	r2,-8(fp)
10022600:	00000a06 	br	1002262c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
10022604:	00225080 	call	10022508 <alt_get_errno>
10022608:	1007883a 	mov	r3,r2
1002260c:	00800344 	movi	r2,13
10022610:	18800015 	stw	r2,0(r3)
10022614:	00000406 	br	10022628 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10022618:	00225080 	call	10022508 <alt_get_errno>
1002261c:	1007883a 	mov	r3,r2
10022620:	00801444 	movi	r2,81
10022624:	18800015 	stw	r2,0(r3)
  }
  return -1;
10022628:	00bfffc4 	movi	r2,-1
}
1002262c:	e037883a 	mov	sp,fp
10022630:	dfc00117 	ldw	ra,4(sp)
10022634:	df000017 	ldw	fp,0(sp)
10022638:	dec00204 	addi	sp,sp,8
1002263c:	f800283a 	ret

10022640 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10022640:	defffe04 	addi	sp,sp,-8
10022644:	df000115 	stw	fp,4(sp)
10022648:	df000104 	addi	fp,sp,4
1002264c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
10022650:	e0bfff17 	ldw	r2,-4(fp)
10022654:	108000d0 	cmplti	r2,r2,3
10022658:	10000a1e 	bne	r2,zero,10022684 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
1002265c:	e0bfff17 	ldw	r2,-4(fp)
10022660:	10c00324 	muli	r3,r2,12
10022664:	008400b4 	movhi	r2,4098
10022668:	1885883a 	add	r2,r3,r2
1002266c:	101c9015 	stw	zero,29248(r2)
    alt_fd_list[fd].dev      = 0;
10022670:	e0bfff17 	ldw	r2,-4(fp)
10022674:	10c00324 	muli	r3,r2,12
10022678:	008400b4 	movhi	r2,4098
1002267c:	1885883a 	add	r2,r3,r2
10022680:	101c8e15 	stw	zero,29240(r2)
  }
}
10022684:	0001883a 	nop
10022688:	e037883a 	mov	sp,fp
1002268c:	df000017 	ldw	fp,0(sp)
10022690:	dec00104 	addi	sp,sp,4
10022694:	f800283a 	ret

10022698 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
10022698:	defff904 	addi	sp,sp,-28
1002269c:	df000615 	stw	fp,24(sp)
100226a0:	df000604 	addi	fp,sp,24
100226a4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
100226a8:	0005303a 	rdctl	r2,status
100226ac:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100226b0:	e0fffd17 	ldw	r3,-12(fp)
100226b4:	00bfff84 	movi	r2,-2
100226b8:	1884703a 	and	r2,r3,r2
100226bc:	1001703a 	wrctl	status,r2
  return context;
100226c0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
100226c4:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
100226c8:	d0a01a17 	ldw	r2,-32664(gp)
100226cc:	10c000c4 	addi	r3,r2,3
100226d0:	00bfff04 	movi	r2,-4
100226d4:	1884703a 	and	r2,r3,r2
100226d8:	d0a01a15 	stw	r2,-32664(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
100226dc:	d0e01a17 	ldw	r3,-32664(gp)
100226e0:	e0bffa17 	ldw	r2,-24(fp)
100226e4:	1887883a 	add	r3,r3,r2
100226e8:	00860034 	movhi	r2,6144
100226ec:	10800004 	addi	r2,r2,0
100226f0:	10c0062e 	bgeu	r2,r3,1002270c <sbrk+0x74>
100226f4:	e0bfff17 	ldw	r2,-4(fp)
100226f8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
100226fc:	e0bffc17 	ldw	r2,-16(fp)
10022700:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10022704:	00bfffc4 	movi	r2,-1
10022708:	00000b06 	br	10022738 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1002270c:	d0a01a17 	ldw	r2,-32664(gp)
10022710:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
10022714:	d0e01a17 	ldw	r3,-32664(gp)
10022718:	e0bffa17 	ldw	r2,-24(fp)
1002271c:	1885883a 	add	r2,r3,r2
10022720:	d0a01a15 	stw	r2,-32664(gp)
10022724:	e0bfff17 	ldw	r2,-4(fp)
10022728:	e0bffb15 	stw	r2,-20(fp)
1002272c:	e0bffb17 	ldw	r2,-20(fp)
10022730:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10022734:	e0bffe17 	ldw	r2,-8(fp)
} 
10022738:	e037883a 	mov	sp,fp
1002273c:	df000017 	ldw	fp,0(sp)
10022740:	dec00104 	addi	sp,sp,4
10022744:	f800283a 	ret

10022748 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10022748:	defffd04 	addi	sp,sp,-12
1002274c:	dfc00215 	stw	ra,8(sp)
10022750:	df000115 	stw	fp,4(sp)
10022754:	df000104 	addi	fp,sp,4
10022758:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
1002275c:	e13fff17 	ldw	r4,-4(fp)
10022760:	00235fc0 	call	100235fc <alt_busy_sleep>
}
10022764:	e037883a 	mov	sp,fp
10022768:	dfc00117 	ldw	ra,4(sp)
1002276c:	df000017 	ldw	fp,0(sp)
10022770:	dec00204 	addi	sp,sp,8
10022774:	f800283a 	ret

10022778 <alt_get_errno>:
{
10022778:	defffe04 	addi	sp,sp,-8
1002277c:	dfc00115 	stw	ra,4(sp)
10022780:	df000015 	stw	fp,0(sp)
10022784:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022788:	d0a01917 	ldw	r2,-32668(gp)
1002278c:	10000326 	beq	r2,zero,1002279c <alt_get_errno+0x24>
10022790:	d0a01917 	ldw	r2,-32668(gp)
10022794:	103ee83a 	callr	r2
10022798:	00000106 	br	100227a0 <alt_get_errno+0x28>
1002279c:	d0a96204 	addi	r2,gp,-23160
}
100227a0:	e037883a 	mov	sp,fp
100227a4:	dfc00117 	ldw	ra,4(sp)
100227a8:	df000017 	ldw	fp,0(sp)
100227ac:	dec00204 	addi	sp,sp,8
100227b0:	f800283a 	ret

100227b4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
100227b4:	defff904 	addi	sp,sp,-28
100227b8:	dfc00615 	stw	ra,24(sp)
100227bc:	df000515 	stw	fp,20(sp)
100227c0:	df000504 	addi	fp,sp,20
100227c4:	e13ffd15 	stw	r4,-12(fp)
100227c8:	e17ffc15 	stw	r5,-16(fp)
100227cc:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100227d0:	e0bffd17 	ldw	r2,-12(fp)
100227d4:	10000616 	blt	r2,zero,100227f0 <write+0x3c>
100227d8:	e0bffd17 	ldw	r2,-12(fp)
100227dc:	10c00324 	muli	r3,r2,12
100227e0:	008400b4 	movhi	r2,4098
100227e4:	109c8e04 	addi	r2,r2,29240
100227e8:	1885883a 	add	r2,r3,r2
100227ec:	00000106 	br	100227f4 <write+0x40>
100227f0:	0005883a 	mov	r2,zero
100227f4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
100227f8:	e0bfff17 	ldw	r2,-4(fp)
100227fc:	10002126 	beq	r2,zero,10022884 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
10022800:	e0bfff17 	ldw	r2,-4(fp)
10022804:	10800217 	ldw	r2,8(r2)
10022808:	108000cc 	andi	r2,r2,3
1002280c:	10001826 	beq	r2,zero,10022870 <write+0xbc>
10022810:	e0bfff17 	ldw	r2,-4(fp)
10022814:	10800017 	ldw	r2,0(r2)
10022818:	10800617 	ldw	r2,24(r2)
1002281c:	10001426 	beq	r2,zero,10022870 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10022820:	e0bfff17 	ldw	r2,-4(fp)
10022824:	10800017 	ldw	r2,0(r2)
10022828:	10800617 	ldw	r2,24(r2)
1002282c:	e0fffb17 	ldw	r3,-20(fp)
10022830:	180d883a 	mov	r6,r3
10022834:	e17ffc17 	ldw	r5,-16(fp)
10022838:	e13fff17 	ldw	r4,-4(fp)
1002283c:	103ee83a 	callr	r2
10022840:	e0bffe15 	stw	r2,-8(fp)
10022844:	e0bffe17 	ldw	r2,-8(fp)
10022848:	1000070e 	bge	r2,zero,10022868 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1002284c:	00227780 	call	10022778 <alt_get_errno>
10022850:	1007883a 	mov	r3,r2
10022854:	e0bffe17 	ldw	r2,-8(fp)
10022858:	0085c83a 	sub	r2,zero,r2
1002285c:	18800015 	stw	r2,0(r3)
        return -1;
10022860:	00bfffc4 	movi	r2,-1
10022864:	00000c06 	br	10022898 <write+0xe4>
      }
      return rval;
10022868:	e0bffe17 	ldw	r2,-8(fp)
1002286c:	00000a06 	br	10022898 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
10022870:	00227780 	call	10022778 <alt_get_errno>
10022874:	1007883a 	mov	r3,r2
10022878:	00800344 	movi	r2,13
1002287c:	18800015 	stw	r2,0(r3)
10022880:	00000406 	br	10022894 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10022884:	00227780 	call	10022778 <alt_get_errno>
10022888:	1007883a 	mov	r3,r2
1002288c:	00801444 	movi	r2,81
10022890:	18800015 	stw	r2,0(r3)
  }
  return -1;
10022894:	00bfffc4 	movi	r2,-1
}
10022898:	e037883a 	mov	sp,fp
1002289c:	dfc00117 	ldw	ra,4(sp)
100228a0:	df000017 	ldw	fp,0(sp)
100228a4:	dec00204 	addi	sp,sp,8
100228a8:	f800283a 	ret

100228ac <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
100228ac:	defffd04 	addi	sp,sp,-12
100228b0:	dfc00215 	stw	ra,8(sp)
100228b4:	df000115 	stw	fp,4(sp)
100228b8:	df000104 	addi	fp,sp,4
100228bc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
100228c0:	d1601604 	addi	r5,gp,-32680
100228c4:	e13fff17 	ldw	r4,-4(fp)
100228c8:	00237a80 	call	100237a8 <alt_dev_llist_insert>
}
100228cc:	e037883a 	mov	sp,fp
100228d0:	dfc00117 	ldw	ra,4(sp)
100228d4:	df000017 	ldw	fp,0(sp)
100228d8:	dec00204 	addi	sp,sp,8
100228dc:	f800283a 	ret

100228e0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
100228e0:	defffd04 	addi	sp,sp,-12
100228e4:	dfc00215 	stw	ra,8(sp)
100228e8:	df000115 	stw	fp,4(sp)
100228ec:	df000104 	addi	fp,sp,4
100228f0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
100228f4:	00240dc0 	call	100240dc <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
100228f8:	00800044 	movi	r2,1
100228fc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
10022900:	0001883a 	nop
10022904:	e037883a 	mov	sp,fp
10022908:	dfc00117 	ldw	ra,4(sp)
1002290c:	df000017 	ldw	fp,0(sp)
10022910:	dec00204 	addi	sp,sp,8
10022914:	f800283a 	ret

10022918 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
10022918:	defffe04 	addi	sp,sp,-8
1002291c:	dfc00115 	stw	ra,4(sp)
10022920:	df000015 	stw	fp,0(sp)
10022924:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
10022928:	01c0fa04 	movi	r7,1000
1002292c:	01800044 	movi	r6,1
10022930:	000b883a 	mov	r5,zero
10022934:	01000804 	movi	r4,32
10022938:	00234540 	call	10023454 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1002293c:	01800144 	movi	r6,5
10022940:	000b883a 	mov	r5,zero
10022944:	010400b4 	movhi	r4,4098
10022948:	211cf804 	addi	r4,r4,29664
1002294c:	0022adc0 	call	10022adc <altera_avalon_jtag_uart_init>
10022950:	010400b4 	movhi	r4,4098
10022954:	211cee04 	addi	r4,r4,29624
10022958:	00228ac0 	call	100228ac <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1002295c:	0001883a 	nop
}
10022960:	0001883a 	nop
10022964:	e037883a 	mov	sp,fp
10022968:	dfc00117 	ldw	ra,4(sp)
1002296c:	df000017 	ldw	fp,0(sp)
10022970:	dec00204 	addi	sp,sp,8
10022974:	f800283a 	ret

10022978 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
10022978:	defffa04 	addi	sp,sp,-24
1002297c:	dfc00515 	stw	ra,20(sp)
10022980:	df000415 	stw	fp,16(sp)
10022984:	df000404 	addi	fp,sp,16
10022988:	e13ffe15 	stw	r4,-8(fp)
1002298c:	e17ffd15 	stw	r5,-12(fp)
10022990:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10022994:	e0bffe17 	ldw	r2,-8(fp)
10022998:	10800017 	ldw	r2,0(r2)
1002299c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
100229a0:	e0bfff17 	ldw	r2,-4(fp)
100229a4:	10c00a04 	addi	r3,r2,40
100229a8:	e0bffe17 	ldw	r2,-8(fp)
100229ac:	10800217 	ldw	r2,8(r2)
100229b0:	100f883a 	mov	r7,r2
100229b4:	e1bffc17 	ldw	r6,-16(fp)
100229b8:	e17ffd17 	ldw	r5,-12(fp)
100229bc:	1809883a 	mov	r4,r3
100229c0:	0022f9c0 	call	10022f9c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
100229c4:	e037883a 	mov	sp,fp
100229c8:	dfc00117 	ldw	ra,4(sp)
100229cc:	df000017 	ldw	fp,0(sp)
100229d0:	dec00204 	addi	sp,sp,8
100229d4:	f800283a 	ret

100229d8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
100229d8:	defffa04 	addi	sp,sp,-24
100229dc:	dfc00515 	stw	ra,20(sp)
100229e0:	df000415 	stw	fp,16(sp)
100229e4:	df000404 	addi	fp,sp,16
100229e8:	e13ffe15 	stw	r4,-8(fp)
100229ec:	e17ffd15 	stw	r5,-12(fp)
100229f0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100229f4:	e0bffe17 	ldw	r2,-8(fp)
100229f8:	10800017 	ldw	r2,0(r2)
100229fc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
10022a00:	e0bfff17 	ldw	r2,-4(fp)
10022a04:	10c00a04 	addi	r3,r2,40
10022a08:	e0bffe17 	ldw	r2,-8(fp)
10022a0c:	10800217 	ldw	r2,8(r2)
10022a10:	100f883a 	mov	r7,r2
10022a14:	e1bffc17 	ldw	r6,-16(fp)
10022a18:	e17ffd17 	ldw	r5,-12(fp)
10022a1c:	1809883a 	mov	r4,r3
10022a20:	00231b80 	call	100231b8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
10022a24:	e037883a 	mov	sp,fp
10022a28:	dfc00117 	ldw	ra,4(sp)
10022a2c:	df000017 	ldw	fp,0(sp)
10022a30:	dec00204 	addi	sp,sp,8
10022a34:	f800283a 	ret

10022a38 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10022a38:	defffc04 	addi	sp,sp,-16
10022a3c:	dfc00315 	stw	ra,12(sp)
10022a40:	df000215 	stw	fp,8(sp)
10022a44:	df000204 	addi	fp,sp,8
10022a48:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10022a4c:	e0bffe17 	ldw	r2,-8(fp)
10022a50:	10800017 	ldw	r2,0(r2)
10022a54:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
10022a58:	e0bfff17 	ldw	r2,-4(fp)
10022a5c:	10c00a04 	addi	r3,r2,40
10022a60:	e0bffe17 	ldw	r2,-8(fp)
10022a64:	10800217 	ldw	r2,8(r2)
10022a68:	100b883a 	mov	r5,r2
10022a6c:	1809883a 	mov	r4,r3
10022a70:	0022e400 	call	10022e40 <altera_avalon_jtag_uart_close>
}
10022a74:	e037883a 	mov	sp,fp
10022a78:	dfc00117 	ldw	ra,4(sp)
10022a7c:	df000017 	ldw	fp,0(sp)
10022a80:	dec00204 	addi	sp,sp,8
10022a84:	f800283a 	ret

10022a88 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
10022a88:	defffa04 	addi	sp,sp,-24
10022a8c:	dfc00515 	stw	ra,20(sp)
10022a90:	df000415 	stw	fp,16(sp)
10022a94:	df000404 	addi	fp,sp,16
10022a98:	e13ffe15 	stw	r4,-8(fp)
10022a9c:	e17ffd15 	stw	r5,-12(fp)
10022aa0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
10022aa4:	e0bffe17 	ldw	r2,-8(fp)
10022aa8:	10800017 	ldw	r2,0(r2)
10022aac:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
10022ab0:	e0bfff17 	ldw	r2,-4(fp)
10022ab4:	10800a04 	addi	r2,r2,40
10022ab8:	e1bffc17 	ldw	r6,-16(fp)
10022abc:	e17ffd17 	ldw	r5,-12(fp)
10022ac0:	1009883a 	mov	r4,r2
10022ac4:	0022ea80 	call	10022ea8 <altera_avalon_jtag_uart_ioctl>
}
10022ac8:	e037883a 	mov	sp,fp
10022acc:	dfc00117 	ldw	ra,4(sp)
10022ad0:	df000017 	ldw	fp,0(sp)
10022ad4:	dec00204 	addi	sp,sp,8
10022ad8:	f800283a 	ret

10022adc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
10022adc:	defffa04 	addi	sp,sp,-24
10022ae0:	dfc00515 	stw	ra,20(sp)
10022ae4:	df000415 	stw	fp,16(sp)
10022ae8:	df000404 	addi	fp,sp,16
10022aec:	e13fff15 	stw	r4,-4(fp)
10022af0:	e17ffe15 	stw	r5,-8(fp)
10022af4:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10022af8:	e0bfff17 	ldw	r2,-4(fp)
10022afc:	00c00044 	movi	r3,1
10022b00:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
10022b04:	e0bfff17 	ldw	r2,-4(fp)
10022b08:	10800017 	ldw	r2,0(r2)
10022b0c:	10800104 	addi	r2,r2,4
10022b10:	1007883a 	mov	r3,r2
10022b14:	e0bfff17 	ldw	r2,-4(fp)
10022b18:	10800817 	ldw	r2,32(r2)
10022b1c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
10022b20:	e0bffe17 	ldw	r2,-8(fp)
10022b24:	e0fffd17 	ldw	r3,-12(fp)
10022b28:	d8000015 	stw	zero,0(sp)
10022b2c:	e1ffff17 	ldw	r7,-4(fp)
10022b30:	018400b4 	movhi	r6,4098
10022b34:	318ae704 	addi	r6,r6,11164
10022b38:	180b883a 	mov	r5,r3
10022b3c:	1009883a 	mov	r4,r2
10022b40:	0023b780 	call	10023b78 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
10022b44:	e0bfff17 	ldw	r2,-4(fp)
10022b48:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
10022b4c:	e0bfff17 	ldw	r2,-4(fp)
10022b50:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
10022b54:	d0e96b17 	ldw	r3,-23124(gp)
10022b58:	e1ffff17 	ldw	r7,-4(fp)
10022b5c:	018400b4 	movhi	r6,4098
10022b60:	318b6804 	addi	r6,r6,11680
10022b64:	180b883a 	mov	r5,r3
10022b68:	1009883a 	mov	r4,r2
10022b6c:	00234d00 	call	100234d0 <alt_alarm_start>
10022b70:	1000040e 	bge	r2,zero,10022b84 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
10022b74:	e0ffff17 	ldw	r3,-4(fp)
10022b78:	00a00034 	movhi	r2,32768
10022b7c:	10bfffc4 	addi	r2,r2,-1
10022b80:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
10022b84:	0001883a 	nop
10022b88:	e037883a 	mov	sp,fp
10022b8c:	dfc00117 	ldw	ra,4(sp)
10022b90:	df000017 	ldw	fp,0(sp)
10022b94:	dec00204 	addi	sp,sp,8
10022b98:	f800283a 	ret

10022b9c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
10022b9c:	defff804 	addi	sp,sp,-32
10022ba0:	df000715 	stw	fp,28(sp)
10022ba4:	df000704 	addi	fp,sp,28
10022ba8:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
10022bac:	e0bff917 	ldw	r2,-28(fp)
10022bb0:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
10022bb4:	e0bffd17 	ldw	r2,-12(fp)
10022bb8:	10800017 	ldw	r2,0(r2)
10022bbc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022bc0:	e0bffc17 	ldw	r2,-16(fp)
10022bc4:	10800104 	addi	r2,r2,4
10022bc8:	10800037 	ldwio	r2,0(r2)
10022bcc:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
10022bd0:	e0bffb17 	ldw	r2,-20(fp)
10022bd4:	1080c00c 	andi	r2,r2,768
10022bd8:	10006b26 	beq	r2,zero,10022d88 <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
10022bdc:	e0bffb17 	ldw	r2,-20(fp)
10022be0:	1080400c 	andi	r2,r2,256
10022be4:	10003426 	beq	r2,zero,10022cb8 <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
10022be8:	00800074 	movhi	r2,1
10022bec:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022bf0:	e0bffd17 	ldw	r2,-12(fp)
10022bf4:	10800a17 	ldw	r2,40(r2)
10022bf8:	10800044 	addi	r2,r2,1
10022bfc:	1081ffcc 	andi	r2,r2,2047
10022c00:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
10022c04:	e0bffd17 	ldw	r2,-12(fp)
10022c08:	10800b17 	ldw	r2,44(r2)
10022c0c:	e0fffa17 	ldw	r3,-24(fp)
10022c10:	18801426 	beq	r3,r2,10022c64 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
10022c14:	e0bffc17 	ldw	r2,-16(fp)
10022c18:	10800037 	ldwio	r2,0(r2)
10022c1c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
10022c20:	e0bfff17 	ldw	r2,-4(fp)
10022c24:	10a0000c 	andi	r2,r2,32768
10022c28:	10001026 	beq	r2,zero,10022c6c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10022c2c:	e0bffd17 	ldw	r2,-12(fp)
10022c30:	10800a17 	ldw	r2,40(r2)
10022c34:	e0ffff17 	ldw	r3,-4(fp)
10022c38:	1809883a 	mov	r4,r3
10022c3c:	e0fffd17 	ldw	r3,-12(fp)
10022c40:	1885883a 	add	r2,r3,r2
10022c44:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022c48:	e0bffd17 	ldw	r2,-12(fp)
10022c4c:	10800a17 	ldw	r2,40(r2)
10022c50:	10800044 	addi	r2,r2,1
10022c54:	10c1ffcc 	andi	r3,r2,2047
10022c58:	e0bffd17 	ldw	r2,-12(fp)
10022c5c:	10c00a15 	stw	r3,40(r2)
      {
10022c60:	003fe306 	br	10022bf0 <altera_avalon_jtag_uart_irq+0x54>
          break;
10022c64:	0001883a 	nop
10022c68:	00000106 	br	10022c70 <altera_avalon_jtag_uart_irq+0xd4>
          break;
10022c6c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
10022c70:	e0bfff17 	ldw	r2,-4(fp)
10022c74:	10bfffec 	andhi	r2,r2,65535
10022c78:	10000f26 	beq	r2,zero,10022cb8 <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10022c7c:	e0bffd17 	ldw	r2,-12(fp)
10022c80:	10c00817 	ldw	r3,32(r2)
10022c84:	00bfff84 	movi	r2,-2
10022c88:	1886703a 	and	r3,r3,r2
10022c8c:	e0bffd17 	ldw	r2,-12(fp)
10022c90:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
10022c94:	e0bffc17 	ldw	r2,-16(fp)
10022c98:	10800104 	addi	r2,r2,4
10022c9c:	1007883a 	mov	r3,r2
10022ca0:	e0bffd17 	ldw	r2,-12(fp)
10022ca4:	10800817 	ldw	r2,32(r2)
10022ca8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022cac:	e0bffc17 	ldw	r2,-16(fp)
10022cb0:	10800104 	addi	r2,r2,4
10022cb4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
10022cb8:	e0bffb17 	ldw	r2,-20(fp)
10022cbc:	1080800c 	andi	r2,r2,512
10022cc0:	103fbf26 	beq	r2,zero,10022bc0 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
10022cc4:	e0bffb17 	ldw	r2,-20(fp)
10022cc8:	1004d43a 	srli	r2,r2,16
10022ccc:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
10022cd0:	00001306 	br	10022d20 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
10022cd4:	e0bffc17 	ldw	r2,-16(fp)
10022cd8:	e0fffd17 	ldw	r3,-12(fp)
10022cdc:	18c00d17 	ldw	r3,52(r3)
10022ce0:	e13ffd17 	ldw	r4,-12(fp)
10022ce4:	20c7883a 	add	r3,r4,r3
10022ce8:	18c20e03 	ldbu	r3,2104(r3)
10022cec:	18c03fcc 	andi	r3,r3,255
10022cf0:	18c0201c 	xori	r3,r3,128
10022cf4:	18ffe004 	addi	r3,r3,-128
10022cf8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022cfc:	e0bffd17 	ldw	r2,-12(fp)
10022d00:	10800d17 	ldw	r2,52(r2)
10022d04:	10800044 	addi	r2,r2,1
10022d08:	10c1ffcc 	andi	r3,r2,2047
10022d0c:	e0bffd17 	ldw	r2,-12(fp)
10022d10:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
10022d14:	e0bffe17 	ldw	r2,-8(fp)
10022d18:	10bfffc4 	addi	r2,r2,-1
10022d1c:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
10022d20:	e0bffe17 	ldw	r2,-8(fp)
10022d24:	10000526 	beq	r2,zero,10022d3c <altera_avalon_jtag_uart_irq+0x1a0>
10022d28:	e0bffd17 	ldw	r2,-12(fp)
10022d2c:	10c00d17 	ldw	r3,52(r2)
10022d30:	e0bffd17 	ldw	r2,-12(fp)
10022d34:	10800c17 	ldw	r2,48(r2)
10022d38:	18bfe61e 	bne	r3,r2,10022cd4 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
10022d3c:	e0bffe17 	ldw	r2,-8(fp)
10022d40:	103f9f26 	beq	r2,zero,10022bc0 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10022d44:	e0bffd17 	ldw	r2,-12(fp)
10022d48:	10c00817 	ldw	r3,32(r2)
10022d4c:	00bfff44 	movi	r2,-3
10022d50:	1886703a 	and	r3,r3,r2
10022d54:	e0bffd17 	ldw	r2,-12(fp)
10022d58:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10022d5c:	e0bffd17 	ldw	r2,-12(fp)
10022d60:	10800017 	ldw	r2,0(r2)
10022d64:	10800104 	addi	r2,r2,4
10022d68:	1007883a 	mov	r3,r2
10022d6c:	e0bffd17 	ldw	r2,-12(fp)
10022d70:	10800817 	ldw	r2,32(r2)
10022d74:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022d78:	e0bffc17 	ldw	r2,-16(fp)
10022d7c:	10800104 	addi	r2,r2,4
10022d80:	10800037 	ldwio	r2,0(r2)
  {
10022d84:	003f8e06 	br	10022bc0 <altera_avalon_jtag_uart_irq+0x24>
      break;
10022d88:	0001883a 	nop
      }
    }
  }
}
10022d8c:	0001883a 	nop
10022d90:	e037883a 	mov	sp,fp
10022d94:	df000017 	ldw	fp,0(sp)
10022d98:	dec00104 	addi	sp,sp,4
10022d9c:	f800283a 	ret

10022da0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
10022da0:	defffc04 	addi	sp,sp,-16
10022da4:	df000315 	stw	fp,12(sp)
10022da8:	df000304 	addi	fp,sp,12
10022dac:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10022db0:	e0bffd17 	ldw	r2,-12(fp)
10022db4:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10022db8:	e0bfff17 	ldw	r2,-4(fp)
10022dbc:	10800017 	ldw	r2,0(r2)
10022dc0:	10800104 	addi	r2,r2,4
10022dc4:	10800037 	ldwio	r2,0(r2)
10022dc8:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
10022dcc:	e0bffe17 	ldw	r2,-8(fp)
10022dd0:	1081000c 	andi	r2,r2,1024
10022dd4:	10000b26 	beq	r2,zero,10022e04 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
10022dd8:	e0bfff17 	ldw	r2,-4(fp)
10022ddc:	10800017 	ldw	r2,0(r2)
10022de0:	10800104 	addi	r2,r2,4
10022de4:	1007883a 	mov	r3,r2
10022de8:	e0bfff17 	ldw	r2,-4(fp)
10022dec:	10800817 	ldw	r2,32(r2)
10022df0:	10810014 	ori	r2,r2,1024
10022df4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
10022df8:	e0bfff17 	ldw	r2,-4(fp)
10022dfc:	10000915 	stw	zero,36(r2)
10022e00:	00000a06 	br	10022e2c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
10022e04:	e0bfff17 	ldw	r2,-4(fp)
10022e08:	10c00917 	ldw	r3,36(r2)
10022e0c:	00a00034 	movhi	r2,32768
10022e10:	10bfff04 	addi	r2,r2,-4
10022e14:	10c00536 	bltu	r2,r3,10022e2c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
10022e18:	e0bfff17 	ldw	r2,-4(fp)
10022e1c:	10800917 	ldw	r2,36(r2)
10022e20:	10c00044 	addi	r3,r2,1
10022e24:	e0bfff17 	ldw	r2,-4(fp)
10022e28:	10c00915 	stw	r3,36(r2)
10022e2c:	d0a96b17 	ldw	r2,-23124(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10022e30:	e037883a 	mov	sp,fp
10022e34:	df000017 	ldw	fp,0(sp)
10022e38:	dec00104 	addi	sp,sp,4
10022e3c:	f800283a 	ret

10022e40 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10022e40:	defffd04 	addi	sp,sp,-12
10022e44:	df000215 	stw	fp,8(sp)
10022e48:	df000204 	addi	fp,sp,8
10022e4c:	e13fff15 	stw	r4,-4(fp)
10022e50:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10022e54:	00000506 	br	10022e6c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10022e58:	e0bffe17 	ldw	r2,-8(fp)
10022e5c:	1090000c 	andi	r2,r2,16384
10022e60:	10000226 	beq	r2,zero,10022e6c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
10022e64:	00bffd44 	movi	r2,-11
10022e68:	00000b06 	br	10022e98 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10022e6c:	e0bfff17 	ldw	r2,-4(fp)
10022e70:	10c00d17 	ldw	r3,52(r2)
10022e74:	e0bfff17 	ldw	r2,-4(fp)
10022e78:	10800c17 	ldw	r2,48(r2)
10022e7c:	18800526 	beq	r3,r2,10022e94 <altera_avalon_jtag_uart_close+0x54>
10022e80:	e0bfff17 	ldw	r2,-4(fp)
10022e84:	10c00917 	ldw	r3,36(r2)
10022e88:	e0bfff17 	ldw	r2,-4(fp)
10022e8c:	10800117 	ldw	r2,4(r2)
10022e90:	18bff136 	bltu	r3,r2,10022e58 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
10022e94:	0005883a 	mov	r2,zero
}
10022e98:	e037883a 	mov	sp,fp
10022e9c:	df000017 	ldw	fp,0(sp)
10022ea0:	dec00104 	addi	sp,sp,4
10022ea4:	f800283a 	ret

10022ea8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
10022ea8:	defffa04 	addi	sp,sp,-24
10022eac:	df000515 	stw	fp,20(sp)
10022eb0:	df000504 	addi	fp,sp,20
10022eb4:	e13ffd15 	stw	r4,-12(fp)
10022eb8:	e17ffc15 	stw	r5,-16(fp)
10022ebc:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
10022ec0:	00bff9c4 	movi	r2,-25
10022ec4:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
10022ec8:	e0bffc17 	ldw	r2,-16(fp)
10022ecc:	109a8060 	cmpeqi	r2,r2,27137
10022ed0:	1000041e 	bne	r2,zero,10022ee4 <altera_avalon_jtag_uart_ioctl+0x3c>
10022ed4:	e0bffc17 	ldw	r2,-16(fp)
10022ed8:	109a80a0 	cmpeqi	r2,r2,27138
10022edc:	1000181e 	bne	r2,zero,10022f40 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
10022ee0:	00002906 	br	10022f88 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
10022ee4:	e0bffd17 	ldw	r2,-12(fp)
10022ee8:	10c00117 	ldw	r3,4(r2)
10022eec:	00a00034 	movhi	r2,32768
10022ef0:	10bfffc4 	addi	r2,r2,-1
10022ef4:	18802126 	beq	r3,r2,10022f7c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
10022ef8:	e0bffb17 	ldw	r2,-20(fp)
10022efc:	10800017 	ldw	r2,0(r2)
10022f00:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
10022f04:	e0bffe17 	ldw	r2,-8(fp)
10022f08:	10800090 	cmplti	r2,r2,2
10022f0c:	1000061e 	bne	r2,zero,10022f28 <altera_avalon_jtag_uart_ioctl+0x80>
10022f10:	e0fffe17 	ldw	r3,-8(fp)
10022f14:	00a00034 	movhi	r2,32768
10022f18:	10bfffc4 	addi	r2,r2,-1
10022f1c:	18800226 	beq	r3,r2,10022f28 <altera_avalon_jtag_uart_ioctl+0x80>
10022f20:	e0bffe17 	ldw	r2,-8(fp)
10022f24:	00000206 	br	10022f30 <altera_avalon_jtag_uart_ioctl+0x88>
10022f28:	00a00034 	movhi	r2,32768
10022f2c:	10bfff84 	addi	r2,r2,-2
10022f30:	e0fffd17 	ldw	r3,-12(fp)
10022f34:	18800115 	stw	r2,4(r3)
      rc = 0;
10022f38:	e03fff15 	stw	zero,-4(fp)
    break;
10022f3c:	00000f06 	br	10022f7c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
10022f40:	e0bffd17 	ldw	r2,-12(fp)
10022f44:	10c00117 	ldw	r3,4(r2)
10022f48:	00a00034 	movhi	r2,32768
10022f4c:	10bfffc4 	addi	r2,r2,-1
10022f50:	18800c26 	beq	r3,r2,10022f84 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
10022f54:	e0bffd17 	ldw	r2,-12(fp)
10022f58:	10c00917 	ldw	r3,36(r2)
10022f5c:	e0bffd17 	ldw	r2,-12(fp)
10022f60:	10800117 	ldw	r2,4(r2)
10022f64:	1885803a 	cmpltu	r2,r3,r2
10022f68:	10c03fcc 	andi	r3,r2,255
10022f6c:	e0bffb17 	ldw	r2,-20(fp)
10022f70:	10c00015 	stw	r3,0(r2)
      rc = 0;
10022f74:	e03fff15 	stw	zero,-4(fp)
    break;
10022f78:	00000206 	br	10022f84 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
10022f7c:	0001883a 	nop
10022f80:	00000106 	br	10022f88 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
10022f84:	0001883a 	nop
  }

  return rc;
10022f88:	e0bfff17 	ldw	r2,-4(fp)
}
10022f8c:	e037883a 	mov	sp,fp
10022f90:	df000017 	ldw	fp,0(sp)
10022f94:	dec00104 	addi	sp,sp,4
10022f98:	f800283a 	ret

10022f9c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
10022f9c:	defff304 	addi	sp,sp,-52
10022fa0:	dfc00c15 	stw	ra,48(sp)
10022fa4:	df000b15 	stw	fp,44(sp)
10022fa8:	df000b04 	addi	fp,sp,44
10022fac:	e13ff815 	stw	r4,-32(fp)
10022fb0:	e17ff715 	stw	r5,-36(fp)
10022fb4:	e1bff615 	stw	r6,-40(fp)
10022fb8:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
10022fbc:	e0bff717 	ldw	r2,-36(fp)
10022fc0:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10022fc4:	00004706 	br	100230e4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
10022fc8:	e0bff817 	ldw	r2,-32(fp)
10022fcc:	10800a17 	ldw	r2,40(r2)
10022fd0:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
10022fd4:	e0bff817 	ldw	r2,-32(fp)
10022fd8:	10800b17 	ldw	r2,44(r2)
10022fdc:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
10022fe0:	e0fffd17 	ldw	r3,-12(fp)
10022fe4:	e0bffc17 	ldw	r2,-16(fp)
10022fe8:	18800536 	bltu	r3,r2,10023000 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
10022fec:	e0fffd17 	ldw	r3,-12(fp)
10022ff0:	e0bffc17 	ldw	r2,-16(fp)
10022ff4:	1885c83a 	sub	r2,r3,r2
10022ff8:	e0bffe15 	stw	r2,-8(fp)
10022ffc:	00000406 	br	10023010 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
10023000:	00c20004 	movi	r3,2048
10023004:	e0bffc17 	ldw	r2,-16(fp)
10023008:	1885c83a 	sub	r2,r3,r2
1002300c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023010:	e0bffe17 	ldw	r2,-8(fp)
10023014:	10001e26 	beq	r2,zero,10023090 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
10023018:	e0fff617 	ldw	r3,-40(fp)
1002301c:	e0bffe17 	ldw	r2,-8(fp)
10023020:	1880022e 	bgeu	r3,r2,1002302c <altera_avalon_jtag_uart_read+0x90>
        n = space;
10023024:	e0bff617 	ldw	r2,-40(fp)
10023028:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1002302c:	e0bff817 	ldw	r2,-32(fp)
10023030:	10c00e04 	addi	r3,r2,56
10023034:	e0bffc17 	ldw	r2,-16(fp)
10023038:	1885883a 	add	r2,r3,r2
1002303c:	e1bffe17 	ldw	r6,-8(fp)
10023040:	100b883a 	mov	r5,r2
10023044:	e13fff17 	ldw	r4,-4(fp)
10023048:	00156f00 	call	100156f0 <memcpy>
      ptr   += n;
1002304c:	e0ffff17 	ldw	r3,-4(fp)
10023050:	e0bffe17 	ldw	r2,-8(fp)
10023054:	1885883a 	add	r2,r3,r2
10023058:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
1002305c:	e0fff617 	ldw	r3,-40(fp)
10023060:	e0bffe17 	ldw	r2,-8(fp)
10023064:	1885c83a 	sub	r2,r3,r2
10023068:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1002306c:	e0fffc17 	ldw	r3,-16(fp)
10023070:	e0bffe17 	ldw	r2,-8(fp)
10023074:	1885883a 	add	r2,r3,r2
10023078:	10c1ffcc 	andi	r3,r2,2047
1002307c:	e0bff817 	ldw	r2,-32(fp)
10023080:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
10023084:	e0bff617 	ldw	r2,-40(fp)
10023088:	00bfcf16 	blt	zero,r2,10022fc8 <altera_avalon_jtag_uart_read+0x2c>
1002308c:	00000106 	br	10023094 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
10023090:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
10023094:	e0ffff17 	ldw	r3,-4(fp)
10023098:	e0bff717 	ldw	r2,-36(fp)
1002309c:	1880141e 	bne	r3,r2,100230f0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
100230a0:	e0bff517 	ldw	r2,-44(fp)
100230a4:	1090000c 	andi	r2,r2,16384
100230a8:	1000131e 	bne	r2,zero,100230f8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
100230ac:	0001883a 	nop
100230b0:	e0bff817 	ldw	r2,-32(fp)
100230b4:	10800a17 	ldw	r2,40(r2)
100230b8:	e0fffd17 	ldw	r3,-12(fp)
100230bc:	1880051e 	bne	r3,r2,100230d4 <altera_avalon_jtag_uart_read+0x138>
100230c0:	e0bff817 	ldw	r2,-32(fp)
100230c4:	10c00917 	ldw	r3,36(r2)
100230c8:	e0bff817 	ldw	r2,-32(fp)
100230cc:	10800117 	ldw	r2,4(r2)
100230d0:	18bff736 	bltu	r3,r2,100230b0 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
100230d4:	e0bff817 	ldw	r2,-32(fp)
100230d8:	10800a17 	ldw	r2,40(r2)
100230dc:	e0fffd17 	ldw	r3,-12(fp)
100230e0:	18800726 	beq	r3,r2,10023100 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
100230e4:	e0bff617 	ldw	r2,-40(fp)
100230e8:	00bfb716 	blt	zero,r2,10022fc8 <altera_avalon_jtag_uart_read+0x2c>
100230ec:	00000506 	br	10023104 <altera_avalon_jtag_uart_read+0x168>
      break;
100230f0:	0001883a 	nop
100230f4:	00000306 	br	10023104 <altera_avalon_jtag_uart_read+0x168>
      break;
100230f8:	0001883a 	nop
100230fc:	00000106 	br	10023104 <altera_avalon_jtag_uart_read+0x168>
      break;
10023100:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
10023104:	e0ffff17 	ldw	r3,-4(fp)
10023108:	e0bff717 	ldw	r2,-36(fp)
1002310c:	18801826 	beq	r3,r2,10023170 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
10023110:	0005303a 	rdctl	r2,status
10023114:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023118:	e0fff917 	ldw	r3,-28(fp)
1002311c:	00bfff84 	movi	r2,-2
10023120:	1884703a 	and	r2,r3,r2
10023124:	1001703a 	wrctl	status,r2
  return context;
10023128:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1002312c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10023130:	e0bff817 	ldw	r2,-32(fp)
10023134:	10800817 	ldw	r2,32(r2)
10023138:	10c00054 	ori	r3,r2,1
1002313c:	e0bff817 	ldw	r2,-32(fp)
10023140:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023144:	e0bff817 	ldw	r2,-32(fp)
10023148:	10800017 	ldw	r2,0(r2)
1002314c:	10800104 	addi	r2,r2,4
10023150:	1007883a 	mov	r3,r2
10023154:	e0bff817 	ldw	r2,-32(fp)
10023158:	10800817 	ldw	r2,32(r2)
1002315c:	18800035 	stwio	r2,0(r3)
10023160:	e0bffb17 	ldw	r2,-20(fp)
10023164:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
10023168:	e0bffa17 	ldw	r2,-24(fp)
1002316c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10023170:	e0ffff17 	ldw	r3,-4(fp)
10023174:	e0bff717 	ldw	r2,-36(fp)
10023178:	18800426 	beq	r3,r2,1002318c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1002317c:	e0ffff17 	ldw	r3,-4(fp)
10023180:	e0bff717 	ldw	r2,-36(fp)
10023184:	1885c83a 	sub	r2,r3,r2
10023188:	00000606 	br	100231a4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1002318c:	e0bff517 	ldw	r2,-44(fp)
10023190:	1090000c 	andi	r2,r2,16384
10023194:	10000226 	beq	r2,zero,100231a0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
10023198:	00bffd44 	movi	r2,-11
1002319c:	00000106 	br	100231a4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
100231a0:	00bffec4 	movi	r2,-5
}
100231a4:	e037883a 	mov	sp,fp
100231a8:	dfc00117 	ldw	ra,4(sp)
100231ac:	df000017 	ldw	fp,0(sp)
100231b0:	dec00204 	addi	sp,sp,8
100231b4:	f800283a 	ret

100231b8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
100231b8:	defff304 	addi	sp,sp,-52
100231bc:	dfc00c15 	stw	ra,48(sp)
100231c0:	df000b15 	stw	fp,44(sp)
100231c4:	df000b04 	addi	fp,sp,44
100231c8:	e13ff815 	stw	r4,-32(fp)
100231cc:	e17ff715 	stw	r5,-36(fp)
100231d0:	e1bff615 	stw	r6,-40(fp)
100231d4:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
100231d8:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
100231dc:	e0bff717 	ldw	r2,-36(fp)
100231e0:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
100231e4:	00003706 	br	100232c4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
100231e8:	e0bff817 	ldw	r2,-32(fp)
100231ec:	10800c17 	ldw	r2,48(r2)
100231f0:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
100231f4:	e0bff817 	ldw	r2,-32(fp)
100231f8:	10800d17 	ldw	r2,52(r2)
100231fc:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
10023200:	e0fffc17 	ldw	r3,-16(fp)
10023204:	e0bfff17 	ldw	r2,-4(fp)
10023208:	1880062e 	bgeu	r3,r2,10023224 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1002320c:	e0ffff17 	ldw	r3,-4(fp)
10023210:	e0bffc17 	ldw	r2,-16(fp)
10023214:	1885c83a 	sub	r2,r3,r2
10023218:	10bfffc4 	addi	r2,r2,-1
1002321c:	e0bffe15 	stw	r2,-8(fp)
10023220:	00000b06 	br	10023250 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
10023224:	e0bfff17 	ldw	r2,-4(fp)
10023228:	10000526 	beq	r2,zero,10023240 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1002322c:	00c20004 	movi	r3,2048
10023230:	e0bffc17 	ldw	r2,-16(fp)
10023234:	1885c83a 	sub	r2,r3,r2
10023238:	e0bffe15 	stw	r2,-8(fp)
1002323c:	00000406 	br	10023250 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
10023240:	00c1ffc4 	movi	r3,2047
10023244:	e0bffc17 	ldw	r2,-16(fp)
10023248:	1885c83a 	sub	r2,r3,r2
1002324c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023250:	e0bffe17 	ldw	r2,-8(fp)
10023254:	10001e26 	beq	r2,zero,100232d0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
10023258:	e0fff617 	ldw	r3,-40(fp)
1002325c:	e0bffe17 	ldw	r2,-8(fp)
10023260:	1880022e 	bgeu	r3,r2,1002326c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
10023264:	e0bff617 	ldw	r2,-40(fp)
10023268:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1002326c:	e0bff817 	ldw	r2,-32(fp)
10023270:	10c20e04 	addi	r3,r2,2104
10023274:	e0bffc17 	ldw	r2,-16(fp)
10023278:	1885883a 	add	r2,r3,r2
1002327c:	e1bffe17 	ldw	r6,-8(fp)
10023280:	e17ff717 	ldw	r5,-36(fp)
10023284:	1009883a 	mov	r4,r2
10023288:	00156f00 	call	100156f0 <memcpy>
      ptr   += n;
1002328c:	e0fff717 	ldw	r3,-36(fp)
10023290:	e0bffe17 	ldw	r2,-8(fp)
10023294:	1885883a 	add	r2,r3,r2
10023298:	e0bff715 	stw	r2,-36(fp)
      count -= n;
1002329c:	e0fff617 	ldw	r3,-40(fp)
100232a0:	e0bffe17 	ldw	r2,-8(fp)
100232a4:	1885c83a 	sub	r2,r3,r2
100232a8:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100232ac:	e0fffc17 	ldw	r3,-16(fp)
100232b0:	e0bffe17 	ldw	r2,-8(fp)
100232b4:	1885883a 	add	r2,r3,r2
100232b8:	10c1ffcc 	andi	r3,r2,2047
100232bc:	e0bff817 	ldw	r2,-32(fp)
100232c0:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
100232c4:	e0bff617 	ldw	r2,-40(fp)
100232c8:	00bfc716 	blt	zero,r2,100231e8 <altera_avalon_jtag_uart_write+0x30>
100232cc:	00000106 	br	100232d4 <altera_avalon_jtag_uart_write+0x11c>
        break;
100232d0:	0001883a 	nop
  NIOS2_READ_STATUS (context);
100232d4:	0005303a 	rdctl	r2,status
100232d8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100232dc:	e0fff917 	ldw	r3,-28(fp)
100232e0:	00bfff84 	movi	r2,-2
100232e4:	1884703a 	and	r2,r3,r2
100232e8:	1001703a 	wrctl	status,r2
  return context;
100232ec:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
100232f0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
100232f4:	e0bff817 	ldw	r2,-32(fp)
100232f8:	10800817 	ldw	r2,32(r2)
100232fc:	10c00094 	ori	r3,r2,2
10023300:	e0bff817 	ldw	r2,-32(fp)
10023304:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023308:	e0bff817 	ldw	r2,-32(fp)
1002330c:	10800017 	ldw	r2,0(r2)
10023310:	10800104 	addi	r2,r2,4
10023314:	1007883a 	mov	r3,r2
10023318:	e0bff817 	ldw	r2,-32(fp)
1002331c:	10800817 	ldw	r2,32(r2)
10023320:	18800035 	stwio	r2,0(r3)
10023324:	e0bffb17 	ldw	r2,-20(fp)
10023328:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
1002332c:	e0bffa17 	ldw	r2,-24(fp)
10023330:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
10023334:	e0bff617 	ldw	r2,-40(fp)
10023338:	0080100e 	bge	zero,r2,1002337c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1002333c:	e0bff517 	ldw	r2,-44(fp)
10023340:	1090000c 	andi	r2,r2,16384
10023344:	1000101e 	bne	r2,zero,10023388 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10023348:	0001883a 	nop
1002334c:	e0bff817 	ldw	r2,-32(fp)
10023350:	10800d17 	ldw	r2,52(r2)
10023354:	e0ffff17 	ldw	r3,-4(fp)
10023358:	1880051e 	bne	r3,r2,10023370 <altera_avalon_jtag_uart_write+0x1b8>
1002335c:	e0bff817 	ldw	r2,-32(fp)
10023360:	10c00917 	ldw	r3,36(r2)
10023364:	e0bff817 	ldw	r2,-32(fp)
10023368:	10800117 	ldw	r2,4(r2)
1002336c:	18bff736 	bltu	r3,r2,1002334c <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10023370:	e0bff817 	ldw	r2,-32(fp)
10023374:	10800917 	ldw	r2,36(r2)
10023378:	1000051e 	bne	r2,zero,10023390 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1002337c:	e0bff617 	ldw	r2,-40(fp)
10023380:	00bfd016 	blt	zero,r2,100232c4 <altera_avalon_jtag_uart_write+0x10c>
10023384:	00000306 	br	10023394 <altera_avalon_jtag_uart_write+0x1dc>
        break;
10023388:	0001883a 	nop
1002338c:	00000106 	br	10023394 <altera_avalon_jtag_uart_write+0x1dc>
         break;
10023390:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10023394:	e0fff717 	ldw	r3,-36(fp)
10023398:	e0bffd17 	ldw	r2,-12(fp)
1002339c:	18800426 	beq	r3,r2,100233b0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
100233a0:	e0fff717 	ldw	r3,-36(fp)
100233a4:	e0bffd17 	ldw	r2,-12(fp)
100233a8:	1885c83a 	sub	r2,r3,r2
100233ac:	00000606 	br	100233c8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
100233b0:	e0bff517 	ldw	r2,-44(fp)
100233b4:	1090000c 	andi	r2,r2,16384
100233b8:	10000226 	beq	r2,zero,100233c4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
100233bc:	00bffd44 	movi	r2,-11
100233c0:	00000106 	br	100233c8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
100233c4:	00bffec4 	movi	r2,-5
}
100233c8:	e037883a 	mov	sp,fp
100233cc:	dfc00117 	ldw	ra,4(sp)
100233d0:	df000017 	ldw	fp,0(sp)
100233d4:	dec00204 	addi	sp,sp,8
100233d8:	f800283a 	ret

100233dc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
100233dc:	defffa04 	addi	sp,sp,-24
100233e0:	dfc00515 	stw	ra,20(sp)
100233e4:	df000415 	stw	fp,16(sp)
100233e8:	df000404 	addi	fp,sp,16
100233ec:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
100233f0:	0007883a 	mov	r3,zero
100233f4:	e0bffc17 	ldw	r2,-16(fp)
100233f8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
100233fc:	e0bffc17 	ldw	r2,-16(fp)
10023400:	10800104 	addi	r2,r2,4
10023404:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
10023408:	0005303a 	rdctl	r2,status
1002340c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023410:	e0fffd17 	ldw	r3,-12(fp)
10023414:	00bfff84 	movi	r2,-2
10023418:	1884703a 	and	r2,r3,r2
1002341c:	1001703a 	wrctl	status,r2
  return context;
10023420:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
10023424:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
10023428:	0023fd40 	call	10023fd4 <alt_tick>
1002342c:	e0bfff17 	ldw	r2,-4(fp)
10023430:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
10023434:	e0bffe17 	ldw	r2,-8(fp)
10023438:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
1002343c:	0001883a 	nop
10023440:	e037883a 	mov	sp,fp
10023444:	dfc00117 	ldw	ra,4(sp)
10023448:	df000017 	ldw	fp,0(sp)
1002344c:	dec00204 	addi	sp,sp,8
10023450:	f800283a 	ret

10023454 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
10023454:	defff804 	addi	sp,sp,-32
10023458:	dfc00715 	stw	ra,28(sp)
1002345c:	df000615 	stw	fp,24(sp)
10023460:	df000604 	addi	fp,sp,24
10023464:	e13ffe15 	stw	r4,-8(fp)
10023468:	e17ffd15 	stw	r5,-12(fp)
1002346c:	e1bffc15 	stw	r6,-16(fp)
10023470:	e1fffb15 	stw	r7,-20(fp)
10023474:	e0bffb17 	ldw	r2,-20(fp)
10023478:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
1002347c:	d0a96b17 	ldw	r2,-23124(gp)
10023480:	1000021e 	bne	r2,zero,1002348c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
10023484:	e0bfff17 	ldw	r2,-4(fp)
10023488:	d0a96b15 	stw	r2,-23124(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
1002348c:	e0bffe17 	ldw	r2,-8(fp)
10023490:	10800104 	addi	r2,r2,4
10023494:	00c001c4 	movi	r3,7
10023498:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
1002349c:	d8000015 	stw	zero,0(sp)
100234a0:	e1fffe17 	ldw	r7,-8(fp)
100234a4:	018400b4 	movhi	r6,4098
100234a8:	318cf704 	addi	r6,r6,13276
100234ac:	e17ffc17 	ldw	r5,-16(fp)
100234b0:	e13ffd17 	ldw	r4,-12(fp)
100234b4:	0023b780 	call	10023b78 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
100234b8:	0001883a 	nop
100234bc:	e037883a 	mov	sp,fp
100234c0:	dfc00117 	ldw	ra,4(sp)
100234c4:	df000017 	ldw	fp,0(sp)
100234c8:	dec00204 	addi	sp,sp,8
100234cc:	f800283a 	ret

100234d0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
100234d0:	defff504 	addi	sp,sp,-44
100234d4:	df000a15 	stw	fp,40(sp)
100234d8:	df000a04 	addi	fp,sp,40
100234dc:	e13ff915 	stw	r4,-28(fp)
100234e0:	e17ff815 	stw	r5,-32(fp)
100234e4:	e1bff715 	stw	r6,-36(fp)
100234e8:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
100234ec:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
100234f0:	d0a96b17 	ldw	r2,-23124(gp)
  
  if (alt_ticks_per_second ())
100234f4:	10003c26 	beq	r2,zero,100235e8 <alt_alarm_start+0x118>
  {
    if (alarm)
100234f8:	e0bff917 	ldw	r2,-28(fp)
100234fc:	10003826 	beq	r2,zero,100235e0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10023500:	e0bff917 	ldw	r2,-28(fp)
10023504:	e0fff717 	ldw	r3,-36(fp)
10023508:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1002350c:	e0bff917 	ldw	r2,-28(fp)
10023510:	e0fff617 	ldw	r3,-40(fp)
10023514:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
10023518:	0005303a 	rdctl	r2,status
1002351c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023520:	e0fffd17 	ldw	r3,-12(fp)
10023524:	00bfff84 	movi	r2,-2
10023528:	1884703a 	and	r2,r3,r2
1002352c:	1001703a 	wrctl	status,r2
  return context;
10023530:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
10023534:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10023538:	d0a96c17 	ldw	r2,-23120(gp)
      
      current_nticks = alt_nticks();
1002353c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10023540:	e0fff817 	ldw	r3,-32(fp)
10023544:	e0bfff17 	ldw	r2,-4(fp)
10023548:	1885883a 	add	r2,r3,r2
1002354c:	10c00044 	addi	r3,r2,1
10023550:	e0bff917 	ldw	r2,-28(fp)
10023554:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10023558:	e0bff917 	ldw	r2,-28(fp)
1002355c:	10c00217 	ldw	r3,8(r2)
10023560:	e0bfff17 	ldw	r2,-4(fp)
10023564:	1880042e 	bgeu	r3,r2,10023578 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10023568:	e0bff917 	ldw	r2,-28(fp)
1002356c:	00c00044 	movi	r3,1
10023570:	10c00405 	stb	r3,16(r2)
10023574:	00000206 	br	10023580 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10023578:	e0bff917 	ldw	r2,-28(fp)
1002357c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10023580:	e0bff917 	ldw	r2,-28(fp)
10023584:	d0e01c04 	addi	r3,gp,-32656
10023588:	e0fffb15 	stw	r3,-20(fp)
1002358c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10023590:	e0bffa17 	ldw	r2,-24(fp)
10023594:	e0fffb17 	ldw	r3,-20(fp)
10023598:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1002359c:	e0bffb17 	ldw	r2,-20(fp)
100235a0:	10c00017 	ldw	r3,0(r2)
100235a4:	e0bffa17 	ldw	r2,-24(fp)
100235a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
100235ac:	e0bffb17 	ldw	r2,-20(fp)
100235b0:	10800017 	ldw	r2,0(r2)
100235b4:	e0fffa17 	ldw	r3,-24(fp)
100235b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
100235bc:	e0bffb17 	ldw	r2,-20(fp)
100235c0:	e0fffa17 	ldw	r3,-24(fp)
100235c4:	10c00015 	stw	r3,0(r2)
100235c8:	e0bffe17 	ldw	r2,-8(fp)
100235cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
100235d0:	e0bffc17 	ldw	r2,-16(fp)
100235d4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
100235d8:	0005883a 	mov	r2,zero
100235dc:	00000306 	br	100235ec <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
100235e0:	00bffa84 	movi	r2,-22
100235e4:	00000106 	br	100235ec <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
100235e8:	00bfde84 	movi	r2,-134
  }
}
100235ec:	e037883a 	mov	sp,fp
100235f0:	df000017 	ldw	fp,0(sp)
100235f4:	dec00104 	addi	sp,sp,4
100235f8:	f800283a 	ret

100235fc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
100235fc:	defffb04 	addi	sp,sp,-20
10023600:	df000415 	stw	fp,16(sp)
10023604:	df000404 	addi	fp,sp,16
10023608:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
1002360c:	008000c4 	movi	r2,3
10023610:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
10023614:	e0fffe17 	ldw	r3,-8(fp)
10023618:	008003f4 	movhi	r2,15
1002361c:	10909004 	addi	r2,r2,16960
10023620:	1887383a 	mul	r3,r3,r2
10023624:	00817db4 	movhi	r2,1526
10023628:	10b84004 	addi	r2,r2,-7936
1002362c:	10c7203a 	divu	r3,r2,r3
  big_loops = us / (INT_MAX/
10023630:	00a00034 	movhi	r2,32768
10023634:	10bfffc4 	addi	r2,r2,-1
10023638:	10c5203a 	divu	r2,r2,r3
1002363c:	e0fffc17 	ldw	r3,-16(fp)
10023640:	1885203a 	divu	r2,r3,r2
10023644:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
10023648:	e0bffd17 	ldw	r2,-12(fp)
1002364c:	10002526 	beq	r2,zero,100236e4 <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
10023650:	e03fff15 	stw	zero,-4(fp)
10023654:	00001406 	br	100236a8 <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10023658:	00a00034 	movhi	r2,32768
1002365c:	10bfffc4 	addi	r2,r2,-1
10023660:	10bfffc4 	addi	r2,r2,-1
10023664:	103ffe1e 	bne	r2,zero,10023660 <alt_busy_sleep+0x64>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10023668:	e0fffe17 	ldw	r3,-8(fp)
1002366c:	008003f4 	movhi	r2,15
10023670:	10909004 	addi	r2,r2,16960
10023674:	1887383a 	mul	r3,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
10023678:	00817db4 	movhi	r2,1526
1002367c:	10b84004 	addi	r2,r2,-7936
10023680:	10c7203a 	divu	r3,r2,r3
10023684:	00a00034 	movhi	r2,32768
10023688:	10bfffc4 	addi	r2,r2,-1
1002368c:	10c5203a 	divu	r2,r2,r3
10023690:	e0fffc17 	ldw	r3,-16(fp)
10023694:	1885c83a 	sub	r2,r3,r2
10023698:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
1002369c:	e0bfff17 	ldw	r2,-4(fp)
100236a0:	10800044 	addi	r2,r2,1
100236a4:	e0bfff15 	stw	r2,-4(fp)
100236a8:	e0ffff17 	ldw	r3,-4(fp)
100236ac:	e0bffd17 	ldw	r2,-12(fp)
100236b0:	18bfe916 	blt	r3,r2,10023658 <alt_busy_sleep+0x5c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
100236b4:	e0fffe17 	ldw	r3,-8(fp)
100236b8:	008003f4 	movhi	r2,15
100236bc:	10909004 	addi	r2,r2,16960
100236c0:	1887383a 	mul	r3,r3,r2
100236c4:	00817db4 	movhi	r2,1526
100236c8:	10b84004 	addi	r2,r2,-7936
100236cc:	10c7203a 	divu	r3,r2,r3
100236d0:	e0bffc17 	ldw	r2,-16(fp)
100236d4:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
100236d8:	10bfffc4 	addi	r2,r2,-1
100236dc:	103ffe1e 	bne	r2,zero,100236d8 <alt_busy_sleep+0xdc>
100236e0:	00000b06 	br	10023710 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
100236e4:	e0fffe17 	ldw	r3,-8(fp)
100236e8:	008003f4 	movhi	r2,15
100236ec:	10909004 	addi	r2,r2,16960
100236f0:	1887383a 	mul	r3,r3,r2
100236f4:	00817db4 	movhi	r2,1526
100236f8:	10b84004 	addi	r2,r2,-7936
100236fc:	10c7203a 	divu	r3,r2,r3
10023700:	e0bffc17 	ldw	r2,-16(fp)
10023704:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
10023708:	10bfffc4 	addi	r2,r2,-1
1002370c:	00bffe16 	blt	zero,r2,10023708 <alt_busy_sleep+0x10c>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10023710:	0005883a 	mov	r2,zero
}
10023714:	e037883a 	mov	sp,fp
10023718:	df000017 	ldw	fp,0(sp)
1002371c:	dec00104 	addi	sp,sp,4
10023720:	f800283a 	ret

10023724 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
10023724:	defffe04 	addi	sp,sp,-8
10023728:	df000115 	stw	fp,4(sp)
1002372c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10023730:	e03fff15 	stw	zero,-4(fp)
10023734:	00000506 	br	1002374c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
10023738:	e0bfff17 	ldw	r2,-4(fp)
1002373c:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10023740:	e0bfff17 	ldw	r2,-4(fp)
10023744:	10800804 	addi	r2,r2,32
10023748:	e0bfff15 	stw	r2,-4(fp)
1002374c:	e0bfff17 	ldw	r2,-4(fp)
10023750:	10820030 	cmpltui	r2,r2,2048
10023754:	103ff81e 	bne	r2,zero,10023738 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10023758:	0001883a 	nop
1002375c:	e037883a 	mov	sp,fp
10023760:	df000017 	ldw	fp,0(sp)
10023764:	dec00104 	addi	sp,sp,4
10023768:	f800283a 	ret

1002376c <alt_get_errno>:
{
1002376c:	defffe04 	addi	sp,sp,-8
10023770:	dfc00115 	stw	ra,4(sp)
10023774:	df000015 	stw	fp,0(sp)
10023778:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1002377c:	d0a01917 	ldw	r2,-32668(gp)
10023780:	10000326 	beq	r2,zero,10023790 <alt_get_errno+0x24>
10023784:	d0a01917 	ldw	r2,-32668(gp)
10023788:	103ee83a 	callr	r2
1002378c:	00000106 	br	10023794 <alt_get_errno+0x28>
10023790:	d0a96204 	addi	r2,gp,-23160
}
10023794:	e037883a 	mov	sp,fp
10023798:	dfc00117 	ldw	ra,4(sp)
1002379c:	df000017 	ldw	fp,0(sp)
100237a0:	dec00204 	addi	sp,sp,8
100237a4:	f800283a 	ret

100237a8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
100237a8:	defffa04 	addi	sp,sp,-24
100237ac:	dfc00515 	stw	ra,20(sp)
100237b0:	df000415 	stw	fp,16(sp)
100237b4:	df000404 	addi	fp,sp,16
100237b8:	e13ffd15 	stw	r4,-12(fp)
100237bc:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
100237c0:	e0bffd17 	ldw	r2,-12(fp)
100237c4:	10000326 	beq	r2,zero,100237d4 <alt_dev_llist_insert+0x2c>
100237c8:	e0bffd17 	ldw	r2,-12(fp)
100237cc:	10800217 	ldw	r2,8(r2)
100237d0:	1000061e 	bne	r2,zero,100237ec <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
100237d4:	002376c0 	call	1002376c <alt_get_errno>
100237d8:	1007883a 	mov	r3,r2
100237dc:	00800584 	movi	r2,22
100237e0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
100237e4:	00bffa84 	movi	r2,-22
100237e8:	00001306 	br	10023838 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
100237ec:	e0bffd17 	ldw	r2,-12(fp)
100237f0:	e0fffc17 	ldw	r3,-16(fp)
100237f4:	e0ffff15 	stw	r3,-4(fp)
100237f8:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
100237fc:	e0bffe17 	ldw	r2,-8(fp)
10023800:	e0ffff17 	ldw	r3,-4(fp)
10023804:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10023808:	e0bfff17 	ldw	r2,-4(fp)
1002380c:	10c00017 	ldw	r3,0(r2)
10023810:	e0bffe17 	ldw	r2,-8(fp)
10023814:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
10023818:	e0bfff17 	ldw	r2,-4(fp)
1002381c:	10800017 	ldw	r2,0(r2)
10023820:	e0fffe17 	ldw	r3,-8(fp)
10023824:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10023828:	e0bfff17 	ldw	r2,-4(fp)
1002382c:	e0fffe17 	ldw	r3,-8(fp)
10023830:	10c00015 	stw	r3,0(r2)

  return 0;  
10023834:	0005883a 	mov	r2,zero
}
10023838:	e037883a 	mov	sp,fp
1002383c:	dfc00117 	ldw	ra,4(sp)
10023840:	df000017 	ldw	fp,0(sp)
10023844:	dec00204 	addi	sp,sp,8
10023848:	f800283a 	ret

1002384c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1002384c:	defffd04 	addi	sp,sp,-12
10023850:	dfc00215 	stw	ra,8(sp)
10023854:	df000115 	stw	fp,4(sp)
10023858:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1002385c:	008400b4 	movhi	r2,4098
10023860:	10917004 	addi	r2,r2,17856
10023864:	e0bfff15 	stw	r2,-4(fp)
10023868:	00000606 	br	10023884 <_do_ctors+0x38>
        (*ctor) (); 
1002386c:	e0bfff17 	ldw	r2,-4(fp)
10023870:	10800017 	ldw	r2,0(r2)
10023874:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10023878:	e0bfff17 	ldw	r2,-4(fp)
1002387c:	10bfff04 	addi	r2,r2,-4
10023880:	e0bfff15 	stw	r2,-4(fp)
10023884:	e0ffff17 	ldw	r3,-4(fp)
10023888:	008400b4 	movhi	r2,4098
1002388c:	10916e84 	addi	r2,r2,17850
10023890:	18bff62e 	bgeu	r3,r2,1002386c <_do_ctors+0x20>
}
10023894:	0001883a 	nop
10023898:	e037883a 	mov	sp,fp
1002389c:	dfc00117 	ldw	ra,4(sp)
100238a0:	df000017 	ldw	fp,0(sp)
100238a4:	dec00204 	addi	sp,sp,8
100238a8:	f800283a 	ret

100238ac <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
100238ac:	defffd04 	addi	sp,sp,-12
100238b0:	dfc00215 	stw	ra,8(sp)
100238b4:	df000115 	stw	fp,4(sp)
100238b8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100238bc:	008400b4 	movhi	r2,4098
100238c0:	10917104 	addi	r2,r2,17860
100238c4:	e0bfff15 	stw	r2,-4(fp)
100238c8:	00000606 	br	100238e4 <_do_dtors+0x38>
        (*dtor) (); 
100238cc:	e0bfff17 	ldw	r2,-4(fp)
100238d0:	10800017 	ldw	r2,0(r2)
100238d4:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100238d8:	e0bfff17 	ldw	r2,-4(fp)
100238dc:	10bfff04 	addi	r2,r2,-4
100238e0:	e0bfff15 	stw	r2,-4(fp)
100238e4:	e0ffff17 	ldw	r3,-4(fp)
100238e8:	008400b4 	movhi	r2,4098
100238ec:	10917104 	addi	r2,r2,17860
100238f0:	18bff62e 	bgeu	r3,r2,100238cc <_do_dtors+0x20>
}
100238f4:	0001883a 	nop
100238f8:	e037883a 	mov	sp,fp
100238fc:	dfc00117 	ldw	ra,4(sp)
10023900:	df000017 	ldw	fp,0(sp)
10023904:	dec00204 	addi	sp,sp,8
10023908:	f800283a 	ret

1002390c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1002390c:	defffa04 	addi	sp,sp,-24
10023910:	dfc00515 	stw	ra,20(sp)
10023914:	df000415 	stw	fp,16(sp)
10023918:	df000404 	addi	fp,sp,16
1002391c:	e13ffd15 	stw	r4,-12(fp)
10023920:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
10023924:	e0bffc17 	ldw	r2,-16(fp)
10023928:	10800017 	ldw	r2,0(r2)
1002392c:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
10023930:	e13ffd17 	ldw	r4,-12(fp)
10023934:	00163ac0 	call	100163ac <strlen>
10023938:	10800044 	addi	r2,r2,1
1002393c:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10023940:	00000d06 	br	10023978 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
10023944:	e0bfff17 	ldw	r2,-4(fp)
10023948:	10800217 	ldw	r2,8(r2)
1002394c:	e0fffe17 	ldw	r3,-8(fp)
10023950:	180d883a 	mov	r6,r3
10023954:	e17ffd17 	ldw	r5,-12(fp)
10023958:	1009883a 	mov	r4,r2
1002395c:	00156640 	call	10015664 <memcmp>
10023960:	1000021e 	bne	r2,zero,1002396c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
10023964:	e0bfff17 	ldw	r2,-4(fp)
10023968:	00000706 	br	10023988 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1002396c:	e0bfff17 	ldw	r2,-4(fp)
10023970:	10800017 	ldw	r2,0(r2)
10023974:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
10023978:	e0ffff17 	ldw	r3,-4(fp)
1002397c:	e0bffc17 	ldw	r2,-16(fp)
10023980:	18bff01e 	bne	r3,r2,10023944 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
10023984:	0005883a 	mov	r2,zero
}
10023988:	e037883a 	mov	sp,fp
1002398c:	dfc00117 	ldw	ra,4(sp)
10023990:	df000017 	ldw	fp,0(sp)
10023994:	dec00204 	addi	sp,sp,8
10023998:	f800283a 	ret

1002399c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1002399c:	defffb04 	addi	sp,sp,-20
100239a0:	dfc00415 	stw	ra,16(sp)
100239a4:	df000315 	stw	fp,12(sp)
100239a8:	df000304 	addi	fp,sp,12
100239ac:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
100239b0:	d0a01417 	ldw	r2,-32688(gp)
100239b4:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
100239b8:	00003106 	br	10023a80 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
100239bc:	e0bfff17 	ldw	r2,-4(fp)
100239c0:	10800217 	ldw	r2,8(r2)
100239c4:	1009883a 	mov	r4,r2
100239c8:	00163ac0 	call	100163ac <strlen>
100239cc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
100239d0:	e0bfff17 	ldw	r2,-4(fp)
100239d4:	10c00217 	ldw	r3,8(r2)
100239d8:	e0bffe17 	ldw	r2,-8(fp)
100239dc:	10bfffc4 	addi	r2,r2,-1
100239e0:	1885883a 	add	r2,r3,r2
100239e4:	10800003 	ldbu	r2,0(r2)
100239e8:	10803fcc 	andi	r2,r2,255
100239ec:	1080201c 	xori	r2,r2,128
100239f0:	10bfe004 	addi	r2,r2,-128
100239f4:	10800bd8 	cmpnei	r2,r2,47
100239f8:	1000031e 	bne	r2,zero,10023a08 <alt_find_file+0x6c>
    {
      len -= 1;
100239fc:	e0bffe17 	ldw	r2,-8(fp)
10023a00:	10bfffc4 	addi	r2,r2,-1
10023a04:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10023a08:	e0bffe17 	ldw	r2,-8(fp)
10023a0c:	e0fffd17 	ldw	r3,-12(fp)
10023a10:	1885883a 	add	r2,r3,r2
10023a14:	10800003 	ldbu	r2,0(r2)
10023a18:	10803fcc 	andi	r2,r2,255
10023a1c:	1080201c 	xori	r2,r2,128
10023a20:	10bfe004 	addi	r2,r2,-128
10023a24:	10800be0 	cmpeqi	r2,r2,47
10023a28:	1000081e 	bne	r2,zero,10023a4c <alt_find_file+0xb0>
10023a2c:	e0bffe17 	ldw	r2,-8(fp)
10023a30:	e0fffd17 	ldw	r3,-12(fp)
10023a34:	1885883a 	add	r2,r3,r2
10023a38:	10800003 	ldbu	r2,0(r2)
10023a3c:	10803fcc 	andi	r2,r2,255
10023a40:	1080201c 	xori	r2,r2,128
10023a44:	10bfe004 	addi	r2,r2,-128
10023a48:	10000a1e 	bne	r2,zero,10023a74 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10023a4c:	e0bfff17 	ldw	r2,-4(fp)
10023a50:	10800217 	ldw	r2,8(r2)
10023a54:	e0fffe17 	ldw	r3,-8(fp)
10023a58:	180d883a 	mov	r6,r3
10023a5c:	e17ffd17 	ldw	r5,-12(fp)
10023a60:	1009883a 	mov	r4,r2
10023a64:	00156640 	call	10015664 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
10023a68:	1000021e 	bne	r2,zero,10023a74 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
10023a6c:	e0bfff17 	ldw	r2,-4(fp)
10023a70:	00000706 	br	10023a90 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10023a74:	e0bfff17 	ldw	r2,-4(fp)
10023a78:	10800017 	ldw	r2,0(r2)
10023a7c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
10023a80:	e0ffff17 	ldw	r3,-4(fp)
10023a84:	d0a01404 	addi	r2,gp,-32688
10023a88:	18bfcc1e 	bne	r3,r2,100239bc <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
10023a8c:	0005883a 	mov	r2,zero
}
10023a90:	e037883a 	mov	sp,fp
10023a94:	dfc00117 	ldw	ra,4(sp)
10023a98:	df000017 	ldw	fp,0(sp)
10023a9c:	dec00204 	addi	sp,sp,8
10023aa0:	f800283a 	ret

10023aa4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10023aa4:	defffc04 	addi	sp,sp,-16
10023aa8:	df000315 	stw	fp,12(sp)
10023aac:	df000304 	addi	fp,sp,12
10023ab0:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
10023ab4:	00bffa04 	movi	r2,-24
10023ab8:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10023abc:	e03fff15 	stw	zero,-4(fp)
10023ac0:	00001706 	br	10023b20 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
10023ac4:	e0bfff17 	ldw	r2,-4(fp)
10023ac8:	10c00324 	muli	r3,r2,12
10023acc:	008400b4 	movhi	r2,4098
10023ad0:	1885883a 	add	r2,r3,r2
10023ad4:	109c8e17 	ldw	r2,29240(r2)
10023ad8:	10000e1e 	bne	r2,zero,10023b14 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
10023adc:	e0bfff17 	ldw	r2,-4(fp)
10023ae0:	11000324 	muli	r4,r2,12
10023ae4:	e0fffd17 	ldw	r3,-12(fp)
10023ae8:	008400b4 	movhi	r2,4098
10023aec:	2085883a 	add	r2,r4,r2
10023af0:	10dc8e15 	stw	r3,29240(r2)
      if (i > alt_max_fd)
10023af4:	d0e01817 	ldw	r3,-32672(gp)
10023af8:	e0bfff17 	ldw	r2,-4(fp)
10023afc:	1880020e 	bge	r3,r2,10023b08 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
10023b00:	e0bfff17 	ldw	r2,-4(fp)
10023b04:	d0a01815 	stw	r2,-32672(gp)
      }
      rc = i;
10023b08:	e0bfff17 	ldw	r2,-4(fp)
10023b0c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
10023b10:	00000706 	br	10023b30 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
10023b14:	e0bfff17 	ldw	r2,-4(fp)
10023b18:	10800044 	addi	r2,r2,1
10023b1c:	e0bfff15 	stw	r2,-4(fp)
10023b20:	e0bfff17 	ldw	r2,-4(fp)
10023b24:	10800810 	cmplti	r2,r2,32
10023b28:	103fe61e 	bne	r2,zero,10023ac4 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
10023b2c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10023b30:	e0bffe17 	ldw	r2,-8(fp)
}
10023b34:	e037883a 	mov	sp,fp
10023b38:	df000017 	ldw	fp,0(sp)
10023b3c:	dec00104 	addi	sp,sp,4
10023b40:	f800283a 	ret

10023b44 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
10023b44:	defffe04 	addi	sp,sp,-8
10023b48:	dfc00115 	stw	ra,4(sp)
10023b4c:	df000015 	stw	fp,0(sp)
10023b50:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
10023b54:	01440004 	movi	r5,4096
10023b58:	0009883a 	mov	r4,zero
10023b5c:	00241000 	call	10024100 <alt_icache_flush>
#endif
}
10023b60:	0001883a 	nop
10023b64:	e037883a 	mov	sp,fp
10023b68:	dfc00117 	ldw	ra,4(sp)
10023b6c:	df000017 	ldw	fp,0(sp)
10023b70:	dec00204 	addi	sp,sp,8
10023b74:	f800283a 	ret

10023b78 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10023b78:	defff904 	addi	sp,sp,-28
10023b7c:	dfc00615 	stw	ra,24(sp)
10023b80:	df000515 	stw	fp,20(sp)
10023b84:	df000504 	addi	fp,sp,20
10023b88:	e13fff15 	stw	r4,-4(fp)
10023b8c:	e17ffe15 	stw	r5,-8(fp)
10023b90:	e1bffd15 	stw	r6,-12(fp)
10023b94:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
10023b98:	e0800217 	ldw	r2,8(fp)
10023b9c:	d8800015 	stw	r2,0(sp)
10023ba0:	e1fffc17 	ldw	r7,-16(fp)
10023ba4:	e1bffd17 	ldw	r6,-12(fp)
10023ba8:	e17ffe17 	ldw	r5,-8(fp)
10023bac:	e13fff17 	ldw	r4,-4(fp)
10023bb0:	0023d280 	call	10023d28 <alt_iic_isr_register>
}  
10023bb4:	e037883a 	mov	sp,fp
10023bb8:	dfc00117 	ldw	ra,4(sp)
10023bbc:	df000017 	ldw	fp,0(sp)
10023bc0:	dec00204 	addi	sp,sp,8
10023bc4:	f800283a 	ret

10023bc8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
10023bc8:	defff904 	addi	sp,sp,-28
10023bcc:	df000615 	stw	fp,24(sp)
10023bd0:	df000604 	addi	fp,sp,24
10023bd4:	e13ffb15 	stw	r4,-20(fp)
10023bd8:	e17ffa15 	stw	r5,-24(fp)
10023bdc:	e0bffa17 	ldw	r2,-24(fp)
10023be0:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
10023be4:	0005303a 	rdctl	r2,status
10023be8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023bec:	e0fffe17 	ldw	r3,-8(fp)
10023bf0:	00bfff84 	movi	r2,-2
10023bf4:	1884703a 	and	r2,r3,r2
10023bf8:	1001703a 	wrctl	status,r2
  return context;
10023bfc:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10023c00:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
10023c04:	00c00044 	movi	r3,1
10023c08:	e0bfff17 	ldw	r2,-4(fp)
10023c0c:	1884983a 	sll	r2,r3,r2
10023c10:	1007883a 	mov	r3,r2
10023c14:	d0a96a17 	ldw	r2,-23128(gp)
10023c18:	1884b03a 	or	r2,r3,r2
10023c1c:	d0a96a15 	stw	r2,-23128(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10023c20:	d0a96a17 	ldw	r2,-23128(gp)
10023c24:	100170fa 	wrctl	ienable,r2
10023c28:	e0bffd17 	ldw	r2,-12(fp)
10023c2c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10023c30:	e0bffc17 	ldw	r2,-16(fp)
10023c34:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10023c38:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
10023c3c:	0001883a 	nop
}
10023c40:	e037883a 	mov	sp,fp
10023c44:	df000017 	ldw	fp,0(sp)
10023c48:	dec00104 	addi	sp,sp,4
10023c4c:	f800283a 	ret

10023c50 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
10023c50:	defff904 	addi	sp,sp,-28
10023c54:	df000615 	stw	fp,24(sp)
10023c58:	df000604 	addi	fp,sp,24
10023c5c:	e13ffb15 	stw	r4,-20(fp)
10023c60:	e17ffa15 	stw	r5,-24(fp)
10023c64:	e0bffa17 	ldw	r2,-24(fp)
10023c68:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
10023c6c:	0005303a 	rdctl	r2,status
10023c70:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023c74:	e0fffe17 	ldw	r3,-8(fp)
10023c78:	00bfff84 	movi	r2,-2
10023c7c:	1884703a 	and	r2,r3,r2
10023c80:	1001703a 	wrctl	status,r2
  return context;
10023c84:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
10023c88:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
10023c8c:	00c00044 	movi	r3,1
10023c90:	e0bfff17 	ldw	r2,-4(fp)
10023c94:	1884983a 	sll	r2,r3,r2
10023c98:	0084303a 	nor	r2,zero,r2
10023c9c:	1007883a 	mov	r3,r2
10023ca0:	d0a96a17 	ldw	r2,-23128(gp)
10023ca4:	1884703a 	and	r2,r3,r2
10023ca8:	d0a96a15 	stw	r2,-23128(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10023cac:	d0a96a17 	ldw	r2,-23128(gp)
10023cb0:	100170fa 	wrctl	ienable,r2
10023cb4:	e0bffd17 	ldw	r2,-12(fp)
10023cb8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10023cbc:	e0bffc17 	ldw	r2,-16(fp)
10023cc0:	1001703a 	wrctl	status,r2
  return 0;
10023cc4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
10023cc8:	0001883a 	nop
}
10023ccc:	e037883a 	mov	sp,fp
10023cd0:	df000017 	ldw	fp,0(sp)
10023cd4:	dec00104 	addi	sp,sp,4
10023cd8:	f800283a 	ret

10023cdc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
10023cdc:	defffc04 	addi	sp,sp,-16
10023ce0:	df000315 	stw	fp,12(sp)
10023ce4:	df000304 	addi	fp,sp,12
10023ce8:	e13ffe15 	stw	r4,-8(fp)
10023cec:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10023cf0:	000530fa 	rdctl	r2,ienable
10023cf4:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
10023cf8:	00c00044 	movi	r3,1
10023cfc:	e0bffd17 	ldw	r2,-12(fp)
10023d00:	1884983a 	sll	r2,r3,r2
10023d04:	1007883a 	mov	r3,r2
10023d08:	e0bfff17 	ldw	r2,-4(fp)
10023d0c:	1884703a 	and	r2,r3,r2
10023d10:	1004c03a 	cmpne	r2,r2,zero
10023d14:	10803fcc 	andi	r2,r2,255
}
10023d18:	e037883a 	mov	sp,fp
10023d1c:	df000017 	ldw	fp,0(sp)
10023d20:	dec00104 	addi	sp,sp,4
10023d24:	f800283a 	ret

10023d28 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10023d28:	defff504 	addi	sp,sp,-44
10023d2c:	dfc00a15 	stw	ra,40(sp)
10023d30:	df000915 	stw	fp,36(sp)
10023d34:	df000904 	addi	fp,sp,36
10023d38:	e13ffa15 	stw	r4,-24(fp)
10023d3c:	e17ff915 	stw	r5,-28(fp)
10023d40:	e1bff815 	stw	r6,-32(fp)
10023d44:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
10023d48:	00bffa84 	movi	r2,-22
10023d4c:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
10023d50:	e0bff917 	ldw	r2,-28(fp)
10023d54:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
10023d58:	e0bffe17 	ldw	r2,-8(fp)
10023d5c:	10800808 	cmpgei	r2,r2,32
10023d60:	1000241e 	bne	r2,zero,10023df4 <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
10023d64:	0005303a 	rdctl	r2,status
10023d68:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023d6c:	e0fffc17 	ldw	r3,-16(fp)
10023d70:	00bfff84 	movi	r2,-2
10023d74:	1884703a 	and	r2,r3,r2
10023d78:	1001703a 	wrctl	status,r2
  return context;
10023d7c:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
10023d80:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
10023d84:	e0bffe17 	ldw	r2,-8(fp)
10023d88:	100890fa 	slli	r4,r2,3
10023d8c:	e0fff817 	ldw	r3,-32(fp)
10023d90:	008400f4 	movhi	r2,4099
10023d94:	2085883a 	add	r2,r4,r2
10023d98:	10ea8c15 	stw	r3,-21968(r2)
    alt_irq[id].context = isr_context;
10023d9c:	e0bffe17 	ldw	r2,-8(fp)
10023da0:	100890fa 	slli	r4,r2,3
10023da4:	e0fff717 	ldw	r3,-36(fp)
10023da8:	008400f4 	movhi	r2,4099
10023dac:	2085883a 	add	r2,r4,r2
10023db0:	10ea8d15 	stw	r3,-21964(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
10023db4:	e0bff817 	ldw	r2,-32(fp)
10023db8:	10000526 	beq	r2,zero,10023dd0 <alt_iic_isr_register+0xa8>
10023dbc:	e0bffe17 	ldw	r2,-8(fp)
10023dc0:	100b883a 	mov	r5,r2
10023dc4:	e13ffa17 	ldw	r4,-24(fp)
10023dc8:	0023bc80 	call	10023bc8 <alt_ic_irq_enable>
10023dcc:	00000406 	br	10023de0 <alt_iic_isr_register+0xb8>
10023dd0:	e0bffe17 	ldw	r2,-8(fp)
10023dd4:	100b883a 	mov	r5,r2
10023dd8:	e13ffa17 	ldw	r4,-24(fp)
10023ddc:	0023c500 	call	10023c50 <alt_ic_irq_disable>
10023de0:	e0bfff15 	stw	r2,-4(fp)
10023de4:	e0bffd17 	ldw	r2,-12(fp)
10023de8:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
10023dec:	e0bffb17 	ldw	r2,-20(fp)
10023df0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
10023df4:	e0bfff17 	ldw	r2,-4(fp)
}
10023df8:	e037883a 	mov	sp,fp
10023dfc:	dfc00117 	ldw	ra,4(sp)
10023e00:	df000017 	ldw	fp,0(sp)
10023e04:	dec00204 	addi	sp,sp,8
10023e08:	f800283a 	ret

10023e0c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
10023e0c:	defff904 	addi	sp,sp,-28
10023e10:	dfc00615 	stw	ra,24(sp)
10023e14:	df000515 	stw	fp,20(sp)
10023e18:	df000504 	addi	fp,sp,20
10023e1c:	e13ffe15 	stw	r4,-8(fp)
10023e20:	e17ffd15 	stw	r5,-12(fp)
10023e24:	e1bffc15 	stw	r6,-16(fp)
10023e28:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
10023e2c:	e1bffb17 	ldw	r6,-20(fp)
10023e30:	e17ffc17 	ldw	r5,-16(fp)
10023e34:	e13ffd17 	ldw	r4,-12(fp)
10023e38:	00223b40 	call	100223b4 <open>
10023e3c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
10023e40:	e0bfff17 	ldw	r2,-4(fp)
10023e44:	10001716 	blt	r2,zero,10023ea4 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
10023e48:	e0bfff17 	ldw	r2,-4(fp)
10023e4c:	10c00324 	muli	r3,r2,12
10023e50:	008400b4 	movhi	r2,4098
10023e54:	1885883a 	add	r2,r3,r2
10023e58:	10dc8e17 	ldw	r3,29240(r2)
10023e5c:	e0bffe17 	ldw	r2,-8(fp)
10023e60:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
10023e64:	e0bfff17 	ldw	r2,-4(fp)
10023e68:	10c00324 	muli	r3,r2,12
10023e6c:	008400b4 	movhi	r2,4098
10023e70:	1885883a 	add	r2,r3,r2
10023e74:	10dc8f17 	ldw	r3,29244(r2)
10023e78:	e0bffe17 	ldw	r2,-8(fp)
10023e7c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
10023e80:	e0bfff17 	ldw	r2,-4(fp)
10023e84:	10c00324 	muli	r3,r2,12
10023e88:	008400b4 	movhi	r2,4098
10023e8c:	1885883a 	add	r2,r3,r2
10023e90:	10dc9017 	ldw	r3,29248(r2)
10023e94:	e0bffe17 	ldw	r2,-8(fp)
10023e98:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
10023e9c:	e13fff17 	ldw	r4,-4(fp)
10023ea0:	00226400 	call	10022640 <alt_release_fd>
  }
} 
10023ea4:	0001883a 	nop
10023ea8:	e037883a 	mov	sp,fp
10023eac:	dfc00117 	ldw	ra,4(sp)
10023eb0:	df000017 	ldw	fp,0(sp)
10023eb4:	dec00204 	addi	sp,sp,8
10023eb8:	f800283a 	ret

10023ebc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
10023ebc:	defffb04 	addi	sp,sp,-20
10023ec0:	dfc00415 	stw	ra,16(sp)
10023ec4:	df000315 	stw	fp,12(sp)
10023ec8:	df000304 	addi	fp,sp,12
10023ecc:	e13fff15 	stw	r4,-4(fp)
10023ed0:	e17ffe15 	stw	r5,-8(fp)
10023ed4:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
10023ed8:	01c07fc4 	movi	r7,511
10023edc:	01800044 	movi	r6,1
10023ee0:	e17fff17 	ldw	r5,-4(fp)
10023ee4:	010400b4 	movhi	r4,4098
10023ee8:	211c9104 	addi	r4,r4,29252
10023eec:	0023e0c0 	call	10023e0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
10023ef0:	01c07fc4 	movi	r7,511
10023ef4:	000d883a 	mov	r6,zero
10023ef8:	e17ffe17 	ldw	r5,-8(fp)
10023efc:	010400b4 	movhi	r4,4098
10023f00:	211c8e04 	addi	r4,r4,29240
10023f04:	0023e0c0 	call	10023e0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
10023f08:	01c07fc4 	movi	r7,511
10023f0c:	01800044 	movi	r6,1
10023f10:	e17ffd17 	ldw	r5,-12(fp)
10023f14:	010400b4 	movhi	r4,4098
10023f18:	211c9404 	addi	r4,r4,29264
10023f1c:	0023e0c0 	call	10023e0c <alt_open_fd>
}  
10023f20:	0001883a 	nop
10023f24:	e037883a 	mov	sp,fp
10023f28:	dfc00117 	ldw	ra,4(sp)
10023f2c:	df000017 	ldw	fp,0(sp)
10023f30:	dec00204 	addi	sp,sp,8
10023f34:	f800283a 	ret

10023f38 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10023f38:	defffa04 	addi	sp,sp,-24
10023f3c:	df000515 	stw	fp,20(sp)
10023f40:	df000504 	addi	fp,sp,20
10023f44:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
10023f48:	0005303a 	rdctl	r2,status
10023f4c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023f50:	e0fffc17 	ldw	r3,-16(fp)
10023f54:	00bfff84 	movi	r2,-2
10023f58:	1884703a 	and	r2,r3,r2
10023f5c:	1001703a 	wrctl	status,r2
  return context;
10023f60:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
10023f64:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
10023f68:	e0bffb17 	ldw	r2,-20(fp)
10023f6c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
10023f70:	e0bffd17 	ldw	r2,-12(fp)
10023f74:	10800017 	ldw	r2,0(r2)
10023f78:	e0fffd17 	ldw	r3,-12(fp)
10023f7c:	18c00117 	ldw	r3,4(r3)
10023f80:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
10023f84:	e0bffd17 	ldw	r2,-12(fp)
10023f88:	10800117 	ldw	r2,4(r2)
10023f8c:	e0fffd17 	ldw	r3,-12(fp)
10023f90:	18c00017 	ldw	r3,0(r3)
10023f94:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
10023f98:	e0bffd17 	ldw	r2,-12(fp)
10023f9c:	e0fffd17 	ldw	r3,-12(fp)
10023fa0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
10023fa4:	e0bffd17 	ldw	r2,-12(fp)
10023fa8:	e0fffd17 	ldw	r3,-12(fp)
10023fac:	10c00015 	stw	r3,0(r2)
10023fb0:	e0bfff17 	ldw	r2,-4(fp)
10023fb4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
10023fb8:	e0bffe17 	ldw	r2,-8(fp)
10023fbc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
10023fc0:	0001883a 	nop
10023fc4:	e037883a 	mov	sp,fp
10023fc8:	df000017 	ldw	fp,0(sp)
10023fcc:	dec00104 	addi	sp,sp,4
10023fd0:	f800283a 	ret

10023fd4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
10023fd4:	defffb04 	addi	sp,sp,-20
10023fd8:	dfc00415 	stw	ra,16(sp)
10023fdc:	df000315 	stw	fp,12(sp)
10023fe0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
10023fe4:	d0a01c17 	ldw	r2,-32656(gp)
10023fe8:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
10023fec:	d0a96c17 	ldw	r2,-23120(gp)
10023ff0:	10800044 	addi	r2,r2,1
10023ff4:	d0a96c15 	stw	r2,-23120(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10023ff8:	00002e06 	br	100240b4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
10023ffc:	e0bfff17 	ldw	r2,-4(fp)
10024000:	10800017 	ldw	r2,0(r2)
10024004:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10024008:	e0bfff17 	ldw	r2,-4(fp)
1002400c:	10800403 	ldbu	r2,16(r2)
10024010:	10803fcc 	andi	r2,r2,255
10024014:	10000426 	beq	r2,zero,10024028 <alt_tick+0x54>
10024018:	d0a96c17 	ldw	r2,-23120(gp)
1002401c:	1000021e 	bne	r2,zero,10024028 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10024020:	e0bfff17 	ldw	r2,-4(fp)
10024024:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10024028:	e0bfff17 	ldw	r2,-4(fp)
1002402c:	10800217 	ldw	r2,8(r2)
10024030:	d0e96c17 	ldw	r3,-23120(gp)
10024034:	18801d36 	bltu	r3,r2,100240ac <alt_tick+0xd8>
10024038:	e0bfff17 	ldw	r2,-4(fp)
1002403c:	10800403 	ldbu	r2,16(r2)
10024040:	10803fcc 	andi	r2,r2,255
10024044:	1000191e 	bne	r2,zero,100240ac <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
10024048:	e0bfff17 	ldw	r2,-4(fp)
1002404c:	10800317 	ldw	r2,12(r2)
10024050:	e0ffff17 	ldw	r3,-4(fp)
10024054:	18c00517 	ldw	r3,20(r3)
10024058:	1809883a 	mov	r4,r3
1002405c:	103ee83a 	callr	r2
10024060:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
10024064:	e0bffd17 	ldw	r2,-12(fp)
10024068:	1000031e 	bne	r2,zero,10024078 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1002406c:	e13fff17 	ldw	r4,-4(fp)
10024070:	0023f380 	call	10023f38 <alt_alarm_stop>
10024074:	00000d06 	br	100240ac <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
10024078:	e0bfff17 	ldw	r2,-4(fp)
1002407c:	10c00217 	ldw	r3,8(r2)
10024080:	e0bffd17 	ldw	r2,-12(fp)
10024084:	1887883a 	add	r3,r3,r2
10024088:	e0bfff17 	ldw	r2,-4(fp)
1002408c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
10024090:	e0bfff17 	ldw	r2,-4(fp)
10024094:	10c00217 	ldw	r3,8(r2)
10024098:	d0a96c17 	ldw	r2,-23120(gp)
1002409c:	1880032e 	bgeu	r3,r2,100240ac <alt_tick+0xd8>
        {
          alarm->rollover = 1;
100240a0:	e0bfff17 	ldw	r2,-4(fp)
100240a4:	00c00044 	movi	r3,1
100240a8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
100240ac:	e0bffe17 	ldw	r2,-8(fp)
100240b0:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
100240b4:	e0ffff17 	ldw	r3,-4(fp)
100240b8:	d0a01c04 	addi	r2,gp,-32656
100240bc:	18bfcf1e 	bne	r3,r2,10023ffc <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
100240c0:	0001883a 	nop
}
100240c4:	0001883a 	nop
100240c8:	e037883a 	mov	sp,fp
100240cc:	dfc00117 	ldw	ra,4(sp)
100240d0:	df000017 	ldw	fp,0(sp)
100240d4:	dec00204 	addi	sp,sp,8
100240d8:	f800283a 	ret

100240dc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
100240dc:	deffff04 	addi	sp,sp,-4
100240e0:	df000015 	stw	fp,0(sp)
100240e4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
100240e8:	000170fa 	wrctl	ienable,zero
}
100240ec:	0001883a 	nop
100240f0:	e037883a 	mov	sp,fp
100240f4:	df000017 	ldw	fp,0(sp)
100240f8:	dec00104 	addi	sp,sp,4
100240fc:	f800283a 	ret

10024100 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
10024100:	defffb04 	addi	sp,sp,-20
10024104:	df000415 	stw	fp,16(sp)
10024108:	df000404 	addi	fp,sp,16
1002410c:	e13ffd15 	stw	r4,-12(fp)
10024110:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
10024114:	e0bffc17 	ldw	r2,-16(fp)
10024118:	10840070 	cmpltui	r2,r2,4097
1002411c:	1000021e 	bne	r2,zero,10024128 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
10024120:	00840004 	movi	r2,4096
10024124:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
10024128:	e0fffd17 	ldw	r3,-12(fp)
1002412c:	e0bffc17 	ldw	r2,-16(fp)
10024130:	1885883a 	add	r2,r3,r2
10024134:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
10024138:	e0bffd17 	ldw	r2,-12(fp)
1002413c:	e0bfff15 	stw	r2,-4(fp)
10024140:	00000506 	br	10024158 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
10024144:	e0bfff17 	ldw	r2,-4(fp)
10024148:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1002414c:	e0bfff17 	ldw	r2,-4(fp)
10024150:	10800804 	addi	r2,r2,32
10024154:	e0bfff15 	stw	r2,-4(fp)
10024158:	e0ffff17 	ldw	r3,-4(fp)
1002415c:	e0bffe17 	ldw	r2,-8(fp)
10024160:	18bff836 	bltu	r3,r2,10024144 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
10024164:	e0bffd17 	ldw	r2,-12(fp)
10024168:	108007cc 	andi	r2,r2,31
1002416c:	10000226 	beq	r2,zero,10024178 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
10024170:	e0bfff17 	ldw	r2,-4(fp)
10024174:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
10024178:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1002417c:	0001883a 	nop
10024180:	e037883a 	mov	sp,fp
10024184:	df000017 	ldw	fp,0(sp)
10024188:	dec00104 	addi	sp,sp,4
1002418c:	f800283a 	ret

10024190 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10024190:	defffe04 	addi	sp,sp,-8
10024194:	df000115 	stw	fp,4(sp)
10024198:	df000104 	addi	fp,sp,4
1002419c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
100241a0:	e0bfff17 	ldw	r2,-4(fp)
100241a4:	10bffe84 	addi	r2,r2,-6
100241a8:	10c00428 	cmpgeui	r3,r2,16
100241ac:	1800191e 	bne	r3,zero,10024214 <alt_exception_cause_generated_bad_addr+0x84>
100241b0:	100690ba 	slli	r3,r2,2
100241b4:	008400b4 	movhi	r2,4098
100241b8:	1885883a 	add	r2,r3,r2
100241bc:	10907117 	ldw	r2,16836(r2)
100241c0:	1000683a 	jmp	r2
100241c4:	10024204 	addi	zero,r2,2312
100241c8:	10024204 	addi	zero,r2,2312
100241cc:	10024214 	ori	zero,r2,2312
100241d0:	10024214 	ori	zero,r2,2312
100241d4:	10024214 	ori	zero,r2,2312
100241d8:	10024204 	addi	zero,r2,2312
100241dc:	1002420c 	andi	zero,r2,2312
100241e0:	10024214 	ori	zero,r2,2312
100241e4:	10024204 	addi	zero,r2,2312
100241e8:	10024204 	addi	zero,r2,2312
100241ec:	10024214 	ori	zero,r2,2312
100241f0:	10024204 	addi	zero,r2,2312
100241f4:	1002420c 	andi	zero,r2,2312
100241f8:	10024214 	ori	zero,r2,2312
100241fc:	10024214 	ori	zero,r2,2312
10024200:	10024204 	addi	zero,r2,2312
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10024204:	00800044 	movi	r2,1
10024208:	00000306 	br	10024218 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1002420c:	0005883a 	mov	r2,zero
10024210:	00000106 	br	10024218 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
10024214:	0005883a 	mov	r2,zero
  }
}
10024218:	e037883a 	mov	sp,fp
1002421c:	df000017 	ldw	fp,0(sp)
10024220:	dec00104 	addi	sp,sp,4
10024224:	f800283a 	ret

10024228 <atexit>:
10024228:	200b883a 	mov	r5,r4
1002422c:	000f883a 	mov	r7,zero
10024230:	000d883a 	mov	r6,zero
10024234:	0009883a 	mov	r4,zero
10024238:	00242701 	jmpi	10024270 <__register_exitproc>

1002423c <exit>:
1002423c:	defffe04 	addi	sp,sp,-8
10024240:	000b883a 	mov	r5,zero
10024244:	dc000015 	stw	r16,0(sp)
10024248:	dfc00115 	stw	ra,4(sp)
1002424c:	2021883a 	mov	r16,r4
10024250:	00243000 	call	10024300 <__call_exitprocs>
10024254:	008400f4 	movhi	r2,4099
10024258:	11211617 	ldw	r4,-31656(r2)
1002425c:	20800f17 	ldw	r2,60(r4)
10024260:	10000126 	beq	r2,zero,10024268 <exit+0x2c>
10024264:	103ee83a 	callr	r2
10024268:	8009883a 	mov	r4,r16
1002426c:	0021c780 	call	10021c78 <_exit>

10024270 <__register_exitproc>:
10024270:	008400f4 	movhi	r2,4099
10024274:	10e11617 	ldw	r3,-31656(r2)
10024278:	18805217 	ldw	r2,328(r3)
1002427c:	10001726 	beq	r2,zero,100242dc <__register_exitproc+0x6c>
10024280:	10c00117 	ldw	r3,4(r2)
10024284:	1a000808 	cmpgei	r8,r3,32
10024288:	40001b1e 	bne	r8,zero,100242f8 <__register_exitproc+0x88>
1002428c:	20000b26 	beq	r4,zero,100242bc <__register_exitproc+0x4c>
10024290:	181090ba 	slli	r8,r3,2
10024294:	02400044 	movi	r9,1
10024298:	48d2983a 	sll	r9,r9,r3
1002429c:	1211883a 	add	r8,r2,r8
100242a0:	41802215 	stw	r6,136(r8)
100242a4:	11806217 	ldw	r6,392(r2)
100242a8:	21000098 	cmpnei	r4,r4,2
100242ac:	324cb03a 	or	r6,r6,r9
100242b0:	11806215 	stw	r6,392(r2)
100242b4:	41c04215 	stw	r7,264(r8)
100242b8:	20000b26 	beq	r4,zero,100242e8 <__register_exitproc+0x78>
100242bc:	19000084 	addi	r4,r3,2
100242c0:	200890ba 	slli	r4,r4,2
100242c4:	18c00044 	addi	r3,r3,1
100242c8:	10c00115 	stw	r3,4(r2)
100242cc:	1105883a 	add	r2,r2,r4
100242d0:	11400015 	stw	r5,0(r2)
100242d4:	0005883a 	mov	r2,zero
100242d8:	f800283a 	ret
100242dc:	18805304 	addi	r2,r3,332
100242e0:	18805215 	stw	r2,328(r3)
100242e4:	003fe606 	br	10024280 <__register_exitproc+0x10>
100242e8:	11006317 	ldw	r4,396(r2)
100242ec:	2252b03a 	or	r9,r4,r9
100242f0:	12406315 	stw	r9,396(r2)
100242f4:	003ff106 	br	100242bc <__register_exitproc+0x4c>
100242f8:	00bfffc4 	movi	r2,-1
100242fc:	f800283a 	ret

10024300 <__call_exitprocs>:
10024300:	defff704 	addi	sp,sp,-36
10024304:	008400f4 	movhi	r2,4099
10024308:	ddc00715 	stw	r23,28(sp)
1002430c:	15e11617 	ldw	r23,-31656(r2)
10024310:	dd400515 	stw	r21,20(sp)
10024314:	dd000415 	stw	r20,16(sp)
10024318:	dcc00315 	stw	r19,12(sp)
1002431c:	dfc00815 	stw	ra,32(sp)
10024320:	dd800615 	stw	r22,24(sp)
10024324:	dc800215 	stw	r18,8(sp)
10024328:	dc400115 	stw	r17,4(sp)
1002432c:	dc000015 	stw	r16,0(sp)
10024330:	2029883a 	mov	r20,r4
10024334:	282b883a 	mov	r21,r5
10024338:	04c00044 	movi	r19,1
1002433c:	bc805217 	ldw	r18,328(r23)
10024340:	90000d26 	beq	r18,zero,10024378 <__call_exitprocs+0x78>
10024344:	94000117 	ldw	r16,4(r18)
10024348:	847fffc4 	addi	r17,r16,-1
1002434c:	88000a16 	blt	r17,zero,10024378 <__call_exitprocs+0x78>
10024350:	84000044 	addi	r16,r16,1
10024354:	802090ba 	slli	r16,r16,2
10024358:	9421883a 	add	r16,r18,r16
1002435c:	a8001126 	beq	r21,zero,100243a4 <__call_exitprocs+0xa4>
10024360:	80804017 	ldw	r2,256(r16)
10024364:	15400f26 	beq	r2,r21,100243a4 <__call_exitprocs+0xa4>
10024368:	8c7fffc4 	addi	r17,r17,-1
1002436c:	88bfffd8 	cmpnei	r2,r17,-1
10024370:	843fff04 	addi	r16,r16,-4
10024374:	103ff91e 	bne	r2,zero,1002435c <__call_exitprocs+0x5c>
10024378:	dfc00817 	ldw	ra,32(sp)
1002437c:	ddc00717 	ldw	r23,28(sp)
10024380:	dd800617 	ldw	r22,24(sp)
10024384:	dd400517 	ldw	r21,20(sp)
10024388:	dd000417 	ldw	r20,16(sp)
1002438c:	dcc00317 	ldw	r19,12(sp)
10024390:	dc800217 	ldw	r18,8(sp)
10024394:	dc400117 	ldw	r17,4(sp)
10024398:	dc000017 	ldw	r16,0(sp)
1002439c:	dec00904 	addi	sp,sp,36
100243a0:	f800283a 	ret
100243a4:	90800117 	ldw	r2,4(r18)
100243a8:	81800017 	ldw	r6,0(r16)
100243ac:	10bfffc4 	addi	r2,r2,-1
100243b0:	14401526 	beq	r2,r17,10024408 <__call_exitprocs+0x108>
100243b4:	80000015 	stw	zero,0(r16)
100243b8:	303feb26 	beq	r6,zero,10024368 <__call_exitprocs+0x68>
100243bc:	9c46983a 	sll	r3,r19,r17
100243c0:	90806217 	ldw	r2,392(r18)
100243c4:	95800117 	ldw	r22,4(r18)
100243c8:	1884703a 	and	r2,r3,r2
100243cc:	1000061e 	bne	r2,zero,100243e8 <__call_exitprocs+0xe8>
100243d0:	303ee83a 	callr	r6
100243d4:	90800117 	ldw	r2,4(r18)
100243d8:	15bfd81e 	bne	r2,r22,1002433c <__call_exitprocs+0x3c>
100243dc:	b8805217 	ldw	r2,328(r23)
100243e0:	14bfe126 	beq	r2,r18,10024368 <__call_exitprocs+0x68>
100243e4:	003fd506 	br	1002433c <__call_exitprocs+0x3c>
100243e8:	90806317 	ldw	r2,396(r18)
100243ec:	81002017 	ldw	r4,128(r16)
100243f0:	1886703a 	and	r3,r3,r2
100243f4:	1800061e 	bne	r3,zero,10024410 <__call_exitprocs+0x110>
100243f8:	200b883a 	mov	r5,r4
100243fc:	a009883a 	mov	r4,r20
10024400:	303ee83a 	callr	r6
10024404:	003ff306 	br	100243d4 <__call_exitprocs+0xd4>
10024408:	94400115 	stw	r17,4(r18)
1002440c:	003fea06 	br	100243b8 <__call_exitprocs+0xb8>
10024410:	303ee83a 	callr	r6
10024414:	003fef06 	br	100243d4 <__call_exitprocs+0xd4>
10024418:	0001ffff 	0x1ffff
1002441c:	0001ffff 	0x1ffff
10024420:	0001ffff 	0x1ffff
10024424:	0001ffff 	0x1ffff
10024428:	010d0bff 	0x10d0bff
1002442c:	01010004 	movi	r4,1024
10024430:	00000100 	call	10000010 <__reset+0x10>
10024434:	00000000 	call	10000000 <__reset>
10024438:	01110bff 	0x1110bff
1002443c:	01010004 	movi	r4,1024
10024440:	7f000105 	stb	fp,4(r15)
10024444:	007d0000 	call	1007d000 <_gp+0x4cbe8>
10024448:	00000000 	call	10000000 <__reset>
1002444c:	01883a00 	call	101883a0 <_gp+0x157f88>
10024450:	010d0bff 	0x10d0bff
10024454:	01010002 	0x1010002
	...
10024460:	010d0bff 	0x10d0bff
10024464:	01010004 	movi	r4,1024
10024468:	00000100 	call	10000010 <__reset+0x10>
1002446c:	00000000 	call	10000000 <__reset>
10024470:	0201ffff 	0x201ffff
10024474:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024478:	00000201 	jmpi	10000020 <alt_exception>
1002447c:	0201ffff 	0x201ffff
10024480:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024484:	00000201 	jmpi	10000020 <alt_exception>
10024488:	0201ffff 	0x201ffff
1002448c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024490:	00000201 	jmpi	10000020 <alt_exception>
10024494:	0201ffff 	0x201ffff
10024498:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002449c:	00000201 	jmpi	10000020 <alt_exception>
100244a0:	0201ffff 	0x201ffff
100244a4:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100244a8:	00000201 	jmpi	10000020 <alt_exception>
100244ac:	0001ffff 	0x1ffff
100244b0:	0001ffff 	0x1ffff
100244b4:	0001ffff 	0x1ffff
100244b8:	0001ffff 	0x1ffff
100244bc:	0201ffff 	0x201ffff
100244c0:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100244c4:	00000201 	jmpi	10000020 <alt_exception>
100244c8:	0001ffff 	0x1ffff
100244cc:	0001ffff 	0x1ffff
100244d0:	0001ffff 	0x1ffff
100244d4:	0201ffff 	0x201ffff
100244d8:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
100244dc:	010d0bff 	0x10d0bff
100244e0:	01010004 	movi	r4,1024
100244e4:	00000100 	call	10000010 <__reset+0x10>
100244e8:	00000000 	call	10000000 <__reset>
100244ec:	0201ffff 	0x201ffff
100244f0:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100244f4:	00000201 	jmpi	10000020 <alt_exception>
100244f8:	0201ffff 	0x201ffff
100244fc:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024500:	00000201 	jmpi	10000020 <alt_exception>
10024504:	0201ffff 	0x201ffff
10024508:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002450c:	00000201 	jmpi	10000020 <alt_exception>
10024510:	0201ffff 	0x201ffff
10024514:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024518:	00000201 	jmpi	10000020 <alt_exception>
1002451c:	0201ffff 	0x201ffff
10024520:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024524:	00000201 	jmpi	10000020 <alt_exception>
10024528:	0201ffff 	0x201ffff
1002452c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024530:	00000201 	jmpi	10000020 <alt_exception>
10024534:	0201ffff 	0x201ffff
10024538:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002453c:	00000201 	jmpi	10000020 <alt_exception>
10024540:	0201ffff 	0x201ffff
10024544:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024548:	00000201 	jmpi	10000020 <alt_exception>
1002454c:	0201ffff 	0x201ffff
10024550:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024554:	00000201 	jmpi	10000020 <alt_exception>
10024558:	0201ffff 	0x201ffff
1002455c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024560:	00000201 	jmpi	10000020 <alt_exception>
10024564:	0001ffff 	0x1ffff
10024568:	0001ffff 	0x1ffff
1002456c:	010d0bff 	0x10d0bff
10024570:	01010002 	0x1010002
	...
1002457c:	0201ffff 	0x201ffff
10024580:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024584:	00000201 	jmpi	10000020 <alt_exception>
10024588:	0201ffff 	0x201ffff
1002458c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024590:	00000201 	jmpi	10000020 <alt_exception>
10024594:	010d0bff 	0x10d0bff
10024598:	01010002 	0x1010002
	...
100245a4:	0001ffff 	0x1ffff
100245a8:	0201ffff 	0x201ffff
100245ac:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100245b0:	00000201 	jmpi	10000020 <alt_exception>
100245b4:	0201ffff 	0x201ffff
100245b8:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
100245bc:	10005f28 	cmpgeui	zero,r2,380
100245c0:	100093f0 	cmpltui	zero,r2,591
100245c4:	10005f58 	cmpnei	zero,r2,381
