
final_project.elf:     file format elf32-littlenios2
final_project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000238

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x000267b8 memsz 0x000267b8 flags r-x
    LOAD off    0x000277d8 vaddr 0x100267d8 paddr 0x10028694 align 2**12
         filesz 0x00001ebc memsz 0x00001ebc flags rw-
    LOAD off    0x0002a550 vaddr 0x1002a550 paddr 0x1002a550 align 2**12
         filesz 0x00000000 memsz 0x00000290 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00024cc8  10000238  10000238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000018d8  10024f00  10024f00  00025f00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001ebc  100267d8  10028694  000277d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000290  1002a550  1002a550  0002a550  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00029694  2**0
                  CONTENTS
  7 .sdram        00000000  1002a7e0  1002a7e0  00029694  2**0
                  CONTENTS
  8 .comment      0000002c  00000000  00000000  00029694  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00002a18  00000000  00000000  000296c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000bda0a  00000000  00000000  0002c0d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0001cc1b  00000000  00000000  000e9ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00035dee  00000000  00000000  001066fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00007ebc  00000000  00000000  0013c4ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0001fd65  00000000  00000000  001443a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00050ab9  00000000  00000000  0016410d  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  001b4bc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 0000a590  00000000  00000000  001b4c28  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  001d0880  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  001d0883  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  001d088f  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  001d0890  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  001d0891  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  001d0895  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  001d0899  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  001d089d  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  001d08a8  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  001d08b3  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000011  00000000  00000000  001d08be  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000015  00000000  00000000  001d08cf  2**0
                  CONTENTS, READONLY
 30 .jdi          00006dc0  00000000  00000000  001d08e4  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000238 l    d  .text	00000000 .text
10024f00 l    d  .rodata	00000000 .rodata
100267d8 l    d  .rwdata	00000000 .rwdata
1002a550 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
1002a7e0 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Lab7/final_project/software/final_project_bsp/obj/HAL/src/crt0.o
10000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 core.c
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 logic.c
1000127c l     F .text	00000030 is_over
1002a59c l     O .bss	000000e1 distances
100013fc l     F .text	0000005c stack_pop
10001458 l     F .text	00000028 stack_isempty
1002a550 l     O .bss	00000002 goal_pos_x
1002a552 l     O .bss	00000002 goal_pos_y
1002861c l     O .rwdata	00000004 ikdirs
1002a554 l     O .bss	00000001 lastdirection
00000000 l    df *ABS*	00000000 main.c
100268b9 l     O .rwdata	000000e1 GAME_BOARDS
1002a556 l     O .bss	00000002 ctl_reg.3891
1002a558 l     O .bss	00000002 no_device.3892
00000000 l    df *ABS*	00000000 tile_eng_driver.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 updater.cpp
1002699a l     O .rwdata	000000e1 _ZL11GAME_BOARDS
10028620 l     O .rwdata	00000001 _ZStL19piecewise_construct
100068f4 l     F .text	00000074 _Z41__static_initialization_and_destruction_0ii
10006968 l     F .text	00000030 _GLOBAL__sub_I_workset
10006998 l     F .text	00000030 _GLOBAL__sub_D_workset
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 new_handler.cc
1002a55c l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
10008c58 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
10008e94 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
10008f1c l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
10009104 l     F .text	00000094 _ZL15get_ttype_entryP16lsda_header_infom
10009198 l     F .text	000000a0 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
10009238 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
100092a8 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_alloc.cc
10009b78 l     F .text	000000ec _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
1002a698 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
10009c64 l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
10009e30 l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 tree.cc
10009e94 l     F .text	00000064 _ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base
00000000 l    df *ABS*	00000000 functexcept.cc
00000000 l    df *ABS*	00000000 snprintf_lite.cc
00000000 l    df *ABS*	00000000 cow-stdexcept.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
1002a560 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 stdexcept.cc
00000000 l    df *ABS*	00000000 sso_string.cc
00000000 l    df *ABS*	00000000 cow-string-inst.cc
1000ed60 l     F .text	0000009c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag.part.22
1000ed60 l     F .text	0000009c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25
1000ee00 l     F .text	00000018 _ZNSs4_Rep10_M_disposeERKSaIcE.part.12
00000000 l    df *ABS*	00000000 string-inst.cc
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
10014a44 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
1002a568 l     O .bss	00000004 fc_static
10014b58 l     F .text	000000d8 _Unwind_RaiseException_Phase2
10014c30 l     F .text	00000024 uw_install_context.isra.4
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10015234 l     F .text	00000008 __fp_lock
10015248 l     F .text	00000168 __sinit.part.0
100153b0 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10026a7c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
1001718c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
100173cc l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtoul.c
10017988 l     F .text	00000250 _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 vfprintf.c
10019d84 l     F .text	000000c0 __sbprintf
100262ae l     O .rodata	00000010 blanks.5226
1002629e l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 dtoa.c
1001a060 l     F .text	00000210 quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
10026550 l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001d7fc l     F .text	000000f4 __sprint_r.part.0
1001ec4c l     F .text	000000c0 __sbprintf
10026684 l     O .rodata	00000010 blanks.5203
10026674 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
10022580 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1002268c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
100226ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
100227f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
100228d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10022a40 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
10022b2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
10022d00 l     F .text	0000003c alt_get_errno
10022d3c l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
10022f48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10028684 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
100231b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
100232ec l     F .text	00000034 alt_dev_reg
100275bc l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
100235c8 l     F .text	00000204 altera_avalon_jtag_uart_irq
100237cc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
100240a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
10024744 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
1002a598 g     O .bss	00000004 alt_instruction_exception_handler
10011ae4  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv
10009d94 g     F .text	00000028 __cxa_free_exception
10000284 g     F .text	00000290 screen_test
10010898  w    F .text	0000003c _ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
10010964  w    F .text	00000074 _ZNSsC2ERKSsjj
10017024 g     F .text	00000018 putchar
1000d41c g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
1001ce6c g     F .text	00000074 _mprec_log10
10008c04 g     F .text	00000014 _ZSt10unexpectedv
10008240  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10011258  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
1000533c g     F .text	000000d4 writeSprite
1000a7f4 g     F .text	00000034 _ZSt18__throw_bad_typeidv
1001cf4c g     F .text	00000074 __any_on
1001bfa8 g     F .text	00000058 _isatty_r
1002655c g     O .rodata	00000028 __mprec_tinytens
1001318c  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj
1000d9bc g     F .text	00000030 _ZNSt14overflow_errorC1ERKSs
1000b678 g     F .text	00000010 _ZNSt12__cow_stringC1Ev
10022c3c g     F .text	0000007c alt_main
10011260  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
1001703c g     F .text	000000cc _puts_r
100129e4  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj
10007a00  w    F .text	00000030 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
1002a6e0 g     O .bss	00000100 alt_irq
1000d044 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
1000c6c0 g     F .text	00000008 _ZGTtNKSt13runtime_error4whatEv
10012870  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj
10028654  w    O .rwdata	00000004 _ZNSs4nposE
1000cad8 g     F .text	000000e0 _ZGTtNSt15underflow_errorC2EPKc
1001c020 g     F .text	00000064 _lseek_r
1000f770  w    F .text	000000e4 _ZNSs6assignEPKcj
1000e398  w    F .text	00000090 _ZNKSs13find_first_ofEPKcjj
10013ab4  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj
10014cd4 g     F .text	00000020 .hidden _Unwind_GetIPInfo
10010ec0  w    F .text	00000010 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj
10012a98  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_
10028694 g       *ABS*	00000000 __flash_rwdata_start
100147d4  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj
10012f54  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE
1001ba40 g     F .text	000000a4 __sflags
1002109c g     F .text	00000080 .hidden __eqdf2
1000bcb0 g     F .text	000000e0 _ZGTtNSt12domain_errorC1EPKc
1000b4d0 g     F .text	00000030 _ZNSt12length_errorC2EPKc
10011270  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj
10008db8 g     F .text	00000084 __cxa_rethrow
10014c6c g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
1000decc  w    F .text	00000018 _ZNKSs6rbeginEv
10008c38 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
10008484  w    F .text	00000054 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_
1000e9f8  w    F .text	000000b0 _ZNKSs7compareEjjPKc
100107f0  w    F .text	000000a8 _ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag
1000dde8  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_
10014cc4 g     F .text	00000010 .hidden _Unwind_GetIP
1002a7e0 g       *ABS*	00000000 __alt_heap_start
100120d4  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE
1000ba74 g     F .text	00000004 _Z23_txnal_cow_string_c_strPKv
1000d884 g     F .text	00000030 _ZNSt12length_errorC1ERKSs
10017674 g     F .text	00000060 _kill_r
1000dd0c  w    F .text	00000030 _ZNKSs15_M_check_lengthEjjPKc
1000f104  w    F .text	00000038 _ZNSs5beginEv
10008e4c g     F .text	00000010 _ZNSt9bad_allocD2Ev
10016fe4 g     F .text	00000038 printf
1000df24  w    F .text	00000010 _ZNKSs5crendEv
10014474  w    F .text	000000f8 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
1000836c  w    F .text	00000038 _ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000fad8  w    F .text	0000000c _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE
1001f1f0 g     F .text	0000006c _wcrtomb_r
1000c29c g     F .text	0000002c _ZGTtNSt12length_errorD0Ev
1000f93c  w    F .text	0000019c _ZNSs6insertEjPKcj
1001742c g     F .text	00000084 _signal_r
1000c89c g     F .text	00000008 _ZGTtNSt11range_errorD2Ev
10025ec4  w    O .rodata	00000013 _ZTSSt14overflow_error
10006f0c  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC2Ev
1000dfb0  w    F .text	00000014 _ZNKSs4backEv
100177b4 g     F .text	0000005c __sseek
10015530 g     F .text	00000010 __sinit
1001ed0c g     F .text	00000148 __swbuf_r
100079cc  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2EPKSt18_Rb_tree_node_base
10011e00  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
10009e04 g     F .text	0000002c __cxa_free_dependent_exception
1000cd38 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
1001f110 g     F .text	00000070 _setlocale_r
10025b5c  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
10013fb0  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_
100153b8 g     F .text	00000068 __sfmoreglue
1000c1a0 g     F .text	000000f4 _ZGTtNSt12length_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10022cdc g     F .text	00000024 __malloc_unlock
1000b214 g     F .text	00000070 _ZNSt11logic_errorC1ERKS_
1000cad8 g     F .text	000000e0 _ZGTtNSt15underflow_errorC1EPKc
1000d044 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
10007f78  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base
1000eaa8  w    F .text	00000094 _ZNKSs7compareEjjPKcj
10010f00  w    F .text	00000060 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc
1000b5dc g     F .text	00000030 _ZNSt11range_errorC2EPKc
10008adc g     F .text	00000020 _ZSt18uncaught_exceptionv
10012b7c  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc
10025ef8  w    O .rodata	0000000c _ZTISt15underflow_error
10011294  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
100138a8  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj
1000b500 g     F .text	00000030 _ZNSt12out_of_rangeC2EPKc
1000ed10  w    F .text	00000040 _ZNSsC1EjcRKSaIcE
1000ee3c  w    F .text	00000044 _ZNSsD2Ev
1000659c g     F .text	00000080 UsbGetRetryCnt
10007a30  w    F .text	000001a0 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_
100088b0  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED2Ev
1000d084 g     F .text	00000020 __cxa_deleted_virtual
10011b54  w    F .text	00000100 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
100138f8  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
10010358  w    F .text	000000a8 _ZNSspLEc
100131d8  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj
1000da50 g     F .text	00000014 _ZNSt12__sso_stringC2EPKcj
1000bc74 g     F .text	00000008 _ZGTtNSt11logic_errorD1Ev
10013e68  w    F .text	000000b4 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc
10016d34 g     F .text	0000012c memmove
10000514 g     F .text	000000fc IO_init
10006f0c  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000db40 g     F .text	00000018 _ZNSt12__sso_stringD2Ev
1000da1c g     F .text	00000014 _ZNSt12__sso_stringC1Ev
1000d014 g     F .text	00000004 _ZNSt9exceptionD2Ev
1001551c g     F .text	00000014 _cleanup
100121d4  w    F .text	0000013c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
10010e74  w    F .text	0000004c _ZNSs7replaceEjjPKc
10005118 g     F .text	000000c4 writePalette
1001c084 g     F .text	000000a4 _Balloc
1000e2fc  w    F .text	0000000c _ZNKSs5rfindERKSsj
10012898  w    F .text	00000038 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE
1000de0c  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_
10011abc  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
1000fb44  w    F .text	00000040 _ZNSs6insertEjPKc
10025e68  w    O .rodata	00000011 _ZTSSt12out_of_range
10007e78  w    F .text	0000003c _ZNKSt4lessI9TileGroupEclERKS0_S3_
10025cfc  w    O .rodata	0000000c _ZTISt8bad_cast
10007f30  w    F .text	00000048 _ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv
1000f900  w    F .text	00000038 _ZNSsaSEPKc
1001474c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_
100078b8  w    F .text	00000024 _ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE
10008100  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000bab8 g     F .text	000000d4 _ZGTtNSt11logic_errorC2EPKc
1000b688 g     F .text	00000004 _ZNSt12__cow_stringC2ERKSs
1002111c g     F .text	000000f0 .hidden __gtdf2
10025c68  w    O .rodata	00000014 _ZTVSt13bad_exception
10024a14 g     F .text	00000024 altera_nios2_gen2_irq_init
10009f5c g     F .text	00000004 _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
10011988  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
100068c0 g     F .text	00000034 clearQueue
1000d704 g     F .text	00000034 _ZNSt14overflow_errorD0Ev
100087c0  w    F .text	00000060 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv
10011a64  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10000000 g     F .entry	0000001c __reset
1001c000 g     F .text	00000008 __localeconv_l
1000c0c0 g     F .text	000000e0 _ZGTtNSt12length_errorC2EPKc
1000bf98 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1002864c  w    O .rwdata	00000001 _ZNSs4_Rep11_S_terminalE
1000d6f4 g     F .text	00000010 _ZNSt14overflow_errorD2Ev
10014d10 g     F .text	00000008 .hidden _Unwind_GetRegionStart
1000dfc4  w    F .text	00000088 _ZNKSs4copyEPcjj
1000b63c g     F .text	00000030 _ZNSt15underflow_errorC1EPKc
10000020 g       *ABS*	00000000 __flash_exceptions_start
10012d1c  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE
1000d5e0 g     F .text	00000010 _ZNSt12out_of_rangeD2Ev
100113f8  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc
10015f20 g     F .text	00000060 _fstat_r
1000777c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC2ERS6_
1000ee18  w    F .text	00000024 _ZNSs4_Rep10_M_disposeERKSaIcE
1002a56c g     O .bss	00000004 errno
1000f6a4  w    F .text	00000018 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc
10001f20 g     F .text	000002e0 det_goal_pos
1001772c g     F .text	00000008 __seofread
100077b0  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_
10006ed4  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv
1000e984  w    F .text	00000074 _ZNKSs7compareEPKc
10010434  w    F .text	0000005c _ZNSsC1ERKSs
1000c094 g     F .text	0000002c _ZGTtNSt16invalid_argumentD0Ev
10008530  w    F .text	0000003c _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j
10014ee4 g     F .text	00000088 .hidden _Unwind_Backtrace
10007754  w    F .text	00000028 _ZNKSt9_IdentityI9TileGroupEclERKS0_
10011eb0  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
1002a584 g     O .bss	00000004 alt_argv
1000f6f4  w    F .text	0000007c _ZNSs15_M_replace_safeEjjPKcj
10014644  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jRKS3_
1000669c g     F .text	00000058 addToSet
1003061c g       *ABS*	00000000 _gp
10023188 g     F .text	00000030 usleep
1001468c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj
1000d118 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
1000d6f4 g     F .text	00000010 _ZNSt14overflow_errorD1Ev
1000740c  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base
10007fc0  w    F .text	00000050 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_
100138e8  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj
1000d0c4 g     F .text	00000038 _ZNSt8bad_castD0Ev
10001480 g     F .text	00000aa0 blinkys_move
100227d8 g     F .text	00000020 getpid
1000eb50  w    F .text	0000000c _ZNKSs4_Rep12_M_is_leakedEv
100139d0  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj
100099f8 g     F .text	00000180 __cxa_call_unexpected
10008978 g     F .text	00000008 __cxa_get_exception_ptr
10013fb8  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_
100075a0  w    F .text	000001b4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_
10011048  w    F .text	0000003c _ZNSsC2ESt16initializer_listIcERKSaIcE
1000da64 g     F .text	0000007c _ZNSt12__sso_stringC2ERKS_
1002743c g     O .rwdata	00000180 alt_fd_list
1000d59c g     F .text	00000010 _ZNSt12length_errorD2Ev
10014760  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
1000b4a0 g     F .text	00000030 _ZNSt16invalid_argumentC1EPKc
10007244  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10014454  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
100069f0  w    F .text	0000003c _ZNSt15_Rb_tree_headerC2Ev
10025f54  w    O .rodata	00000014 _ZTVSt12out_of_range
1001701c g     F .text	00000008 _putchar_r
10014df8 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
1000db58 g     F .text	00000078 _ZNSt12__sso_stringC1EOS_
10014c94 g     F .text	00000018 .hidden _Unwind_GetCFA
10008c18 g     F .text	00000014 _ZSt13set_terminatePFvvE
10024244 g     F .text	00000090 alt_find_dev
10016c34 g     F .text	00000100 memcpy
1000de8c  w    F .text	00000010 _ZNSsC2Ev
10012310  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc
10009dbc g     F .text	00000048 __cxa_allocate_dependent_exception
10006864 g     F .text	0000005c hasRemain
10011084  w    F .text	0000003c _ZNSsC1IPKcEET_S2_RKSaIcE
1001523c g     F .text	0000000c _cleanup_r
1000d1c8 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
100223c8 g     F .text	000000c8 .hidden __floatsidf
10011784  w    F .text	00000084 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
100247f4 g     F .text	0000007c alt_io_redirect
1002120c g     F .text	000000f0 .hidden __ltdf2
10025f7c  w    O .rodata	00000014 _ZTVSt11range_error
1000d624 g     F .text	00000064 _ZNSt13runtime_errorD2Ev
10008010  w    F .text	00000024 _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
1000ac78 g     F .text	000000ac _ZSt21__throw_runtime_errorPKc
10024f00 g       *ABS*	00000000 __DTOR_END__
1000e308  w    F .text	00000040 _ZNKSs5rfindEPKcj
1000d77c g     F .text	000000a8 _ZNSt11logic_errorC2ERKSs
1000d1e0 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
10025f2c  w    O .rodata	00000014 _ZTVSt16invalid_argument
1000e474  w    F .text	00000010 _ZNKSs13find_first_ofEcj
100110d0  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_
10017108 g     F .text	00000010 puts
10024ac8 g     F .text	00000098 alt_exception_cause_generated_bad_addr
10010534  w    F .text	00000100 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
1000c68c g     F .text	00000008 _ZGTtNSt13runtime_errorD1Ev
1000d98c g     F .text	00000030 _ZNSt11range_errorC2ERKSs
1000e0e0  w    F .text	000000d8 _ZNKSs4findEPKcjj
1000bf98 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100112e8  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
1000dbd0 g     F .text	000000d4 _ZNSt12__sso_stringaSEOS_
1001cdc4 g     F .text	000000a8 __ratio
10010530  w    F .text	00000004 _ZNSsaSERKSs
1000bc7c g     F .text	0000002c _ZGTtNSt11logic_errorD0Ev
10025e7c  w    O .rodata	0000000c _ZTISt12out_of_range
1001ec34 g     F .text	00000018 __vfiprintf_internal
10013770  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j
10008284  w    F .text	00000058 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi
1001380c  w    F .text	00000090 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj
10011300  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj
10010b00  w    F .text	0000003c _ZNSsC2EPKcjRKSaIcE
1000c68c g     F .text	00000008 _ZGTtNSt13runtime_errorD2Ev
100239c8 g     F .text	0000021c altera_avalon_jtag_uart_read
100162ac g     F .text	00000010 malloc
10016fb4 g     F .text	00000030 _printf_r
10006cbc  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED2Ev
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10014984 g     F .text	00000064 .hidden __udivsi3
1000f87c  w    F .text	0000004c _ZNSs6assignERKSsjj
10022834 g     F .text	000000a4 isatty
10013034  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj
100174b0 g     F .text	000000bc _raise_r
1000dd3c  w    F .text	00000018 _ZNKSs8_M_limitEjj
100265ac g     O .rodata	000000c8 __mprec_tens
1000add0 g     F .text	000000ac _ZSt22__throw_overflow_errorPKc
10006dc0  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv
1000d8b4 g     F .text	00000030 _ZNSt12out_of_rangeC2ERKSs
10011b38  w    F .text	0000001c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv
1000ddb4  w    F .text	00000034 _ZNSs9_M_assignEPcjc
100074a4  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
10007020  w    F .text	00000024 _ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE
1001252c  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc
10024a38 g     F .text	00000090 alt_icache_flush
1000df34  w    F .text	0000000c _ZNKSs4sizeEv
1001353c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv
1002a578 g     O .bss	00000004 __malloc_top_pad
10005c28 g     F .text	00000268 UsbGetConfigDesc2
1000856c  w    F .text	0000003c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv
100176d4 g     F .text	00000004 _getpid_r
1000b3c4 g     F .text	000000ac _ZNSt11logic_errorC2EPKc
1000bb8c g     F .text	000000e8 _ZGTtNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10017bf4 g     F .text	00000018 strtoul
100083e0  w    F .text	00000044 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j
1000793c  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base
10010100  w    F .text	00000038 _ZNSs6appendEPKc
10013534  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
1000c7a8 g     F .text	000000f4 _ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001c008 g     F .text	0000000c _localeconv_r
10009d0c g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
10008afc g     F .text	0000001c _ZSt19uncaught_exceptionsv
1001c484 g     F .text	00000034 __i2b
1001bae4 g     F .text	000004c4 __sfvwrite_r
10013c84  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_
1000d360 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
1001756c g     F .text	000000b8 __sigtramp_r
1000dcc4  w    F .text	00000008 _ZNKSs9_M_ibeginEv
1000d8e4 g     F .text	000000a8 _ZNSt13runtime_errorC2ERKSs
1000e484  w    F .text	0000008c _ZNKSs12find_last_ofEPKcjj
10013204  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
1000c8a4 g     F .text	0000002c _ZGTtNSt11range_errorD0Ev
10017374 g     F .text	00000058 _sbrk_r
10010a24  w    F .text	00000074 _ZNSsC2ERKSsjjRKSaIcE
10010900  w    F .text	00000064 _ZNSsC1ERKSsjRKSaIcE
1000d01c g     F .text	0000000c _ZGTtNKSt9exception4whatEv
100102ac  w    F .text	00000008 _ZNSs6resizeEj
10025dc8  w    O .rodata	00000020 _ZTVSt9type_info
100083a4  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_
10025e24  w    O .rodata	00000015 _ZTSSt16invalid_argument
1000a78c g     F .text	00000034 _ZSt17__throw_bad_allocv
100110e0 g     F .text	000000a4 _ZNSt13random_device7_M_initERKSs
1000bcb0 g     F .text	000000e0 _ZGTtNSt12domain_errorC2EPKc
1001d16c g     F .text	00000064 _read_r
1000d01c g     F .text	0000000c _ZNKSt9exception4whatEv
1000fae4  w    F .text	00000060 _ZNSs6insertEjRKSsjj
1001241c  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc
1000bab8 g     F .text	000000d4 _ZGTtNSt11logic_errorC1EPKc
100081a4  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC2IS2_S2_Lb1EEEOT_OT0_
1002867c g     O .rwdata	00000004 alt_max_fd
1001b938 g     F .text	000000f8 _fclose_r
10025ac4  w    O .rodata	0000000c _ZTISt9bad_alloc
1000dcb8  w    F .text	0000000c _ZNKSs6_M_repEv
1001520c g     F .text	00000028 fflush
10006f64  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002a574 g     O .bss	00000004 __malloc_max_sbrked_mem
1000f3b4  w    F .text	00000050 _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE
10012998  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
1000c08c g     F .text	00000008 _ZGTtNSt16invalid_argumentD1Ev
10010490  w    F .text	000000a0 _ZNSs6assignERKSs
100085a8  w    F .text	0000016c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_
1000b4d0 g     F .text	00000030 _ZNSt12length_errorC1EPKc
1000349c g     F .text	00000088 gbPalette
10012944  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj
1000bc74 g     F .text	00000008 _ZGTtNSt11logic_errorD2Ev
1000a724 g     F .text	00000034 _ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_
1000e0a0  w    F .text	00000028 _ZNSs6assignEOSs
1001fe54 g     F .text	000009a0 .hidden __adddf3
10025b90  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
10006c38  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev
10006bc8  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC2Ev
1000ee3c  w    F .text	00000044 _ZNSsD1Ev
1001cb78 g     F .text	00000104 __b2d
10011458  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj
1000ba7c g     F .text	0000002c _Z20_txnal_cow_string_D1Pv
100073e8  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000b678 g     F .text	00000010 _ZNSt12__cow_stringC2Ev
1000d0b4 g     F .text	00000010 _ZNSt8bad_castD1Ev
1001f914 g     F .text	00000540 .hidden __umoddi3
1000f6bc  w    F .text	00000038 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc
10022b68 g     F .text	000000d4 lseek
10012cb8  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_
100074a4  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
1000f188  w    F .text	00000048 _ZNSs3endEv
1000da1c g     F .text	00000014 _ZNSt12__sso_stringC2Ev
1000d2f4 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
10025f04  w    O .rodata	00000014 _ZTVSt11logic_error
10008e3c g     F .text	00000004 _ZdlPv
1000d5ac g     F .text	00000034 _ZNSt12length_errorD0Ev
1002865c g     O .rwdata	00000004 _global_impure_ptr
1001d1d0 g     F .text	0000062c _realloc_r
1000b088 g     F .text	00000150 _ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv
10006c88  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002a7e0 g       *ABS*	00000000 __bss_end
1000896c g     F .text	0000000c _ZSt15get_new_handlerv
10024660 g     F .text	000000e4 alt_iic_isr_register
1002490c g     F .text	00000108 alt_tick
10014c54 g     F .text	00000018 .hidden _Unwind_SjLj_Register
1001354c  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
1001487c  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_
1000cbb8 g     F .text	000000f4 _ZGTtNSt15underflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001f37c g     F .text	00000598 .hidden __udivdi3
10012544  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc
10011268  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj
10025f90  w    O .rodata	00000014 _ZTVSt14overflow_error
1000b66c g     F .text	0000000c _ZNSt12__sso_stringC2ERKSs
1001f070 g     F .text	00000024 _fputwc_r
1000aa2c g     F .text	000000ac _ZSt20__throw_length_errorPKc
10009f58 g     F .text	00000004 _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
10026584 g     O .rodata	00000028 __mprec_bigtens
1001c260 g     F .text	00000110 __s2b
1000b60c g     F .text	00000030 _ZNSt14overflow_errorC2EPKc
10014f6c g     F .text	00000018 abort
10013544  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv
10022490 g     F .text	0000009c .hidden __floatunsidf
1000dcdc  w    F .text	00000030 _ZNKSs8_M_checkEjPKc
1000fbd0  w    F .text	00000024 _ZNSs4_Rep10_M_refcopyEv
1001c908 g     F .text	00000058 __mcmp
10007174  w    F .text	00000024 _ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE
10005678 g     F .text	00000100 UsbSetAddress
10008a2c g     F .text	000000b0 __cxa_end_catch
100073e8  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC2Ev
10012d80  w    F .text	0000006c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_
10015550 g     F .text	00000014 __fp_lock_all
1000ccb4 g     F .text	0000002c _ZGTtNSt15underflow_errorD0Ev
10024614 g     F .text	0000004c alt_ic_irq_enabled
10011db4  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
10006ff8  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv
1000d018 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
10011048  w    F .text	0000003c _ZNSsC1ESt16initializer_listIcERKSaIcE
10024870 g     F .text	0000009c alt_alarm_stop
100113cc  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc
1000eb5c  w    F .text	0000000c _ZNKSs4_Rep12_M_is_sharedEv
1000dca4  w    F .text	00000008 _ZNKSs7_M_dataEv
1002a58c g     O .bss	00000004 alt_irq_active
1001468c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jj
10011d80  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
10015ab0 g     F .text	00000458 _fseeko_r
10008be0 g     F .text	00000014 _ZSt9terminatev
1000ab84 g     F .text	000000f4 _ZSt24__throw_out_of_range_fmtPKcz
10012c54  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_
1000d738 g     F .text	00000010 _ZNSt15underflow_errorD1Ev
1000a980 g     F .text	000000ac _ZSt24__throw_invalid_argumentPKc
10006cbc  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev
100000fc g     F .exceptions	000000c8 alt_irq_handler
1000f8c8  w    F .text	00000038 _ZNSs6assignEPKc
10027414 g     O .rwdata	00000028 alt_dev_null
10010400  w    F .text	00000034 _ZNSs4_Rep7_M_grabERKSaIcES2_
10011adc  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv
10007d8c  w    F .text	0000007c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E
1000dfa8  w    F .text	00000008 _ZNKSs5frontEv
1000c694 g     F .text	0000002c _ZGTtNSt13runtime_errorD0Ev
1000d4ec g     F .text	00000028 _ZNSt11logic_errorD0Ev
10010b3c  w    F .text	000002ac _ZNSs7replaceEjjPKcj
1000d050 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
10012048  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj
100128f8  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
1000b63c g     F .text	00000030 _ZNSt15underflow_errorC2EPKc
10007e30  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E
100118c0  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_RKS3_
1000b1d8 g     F .text	0000003c _Z27_txnal_cow_string_D1_commitPv
10013180  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
1000b66c g     F .text	0000000c _ZNSt12__sso_stringC1ERKSs
10025d5c  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
10008738  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j
10006c88  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev
1002405c g     F .text	00000048 alt_dcache_flush_all
1001c370 g     F .text	00000064 __hi0bits
100118c0  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_
10011478  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj
10028628  w    O .rwdata	00000008 _ZTISt9exception
10000684 g     F .text	00000068 IO_read
10022348 g     F .text	00000080 .hidden __fixdfsi
1000dee4  w    F .text	00000010 _ZNKSs4rendEv
10010de8  w    F .text	00000024 _ZNSs7replaceEjjRKSs
1000caa4 g     F .text	00000008 _ZGTtNSt14overflow_errorD1Ev
10011308  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
10011830  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EjcRKS3_
10008424  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E
10013df4  w    F .text	00000074 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
100088b0  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev
1000fca0  w    F .text	00000094 _ZNSs7reserveEj
1000bca8 g     F .text	00000008 _ZGTtNKSt11logic_error4whatEv
10006f64  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev
10008820  w    F .text	00000068 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_
10028694 g       *ABS*	00000000 __ram_rwdata_end
100113bc  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
1000d418 g     F .text	00000004 _ZNSt9type_infoD1Ev
1000da64 g     F .text	0000007c _ZNSt12__sso_stringC1ERKS_
10028674 g     O .rwdata	00000008 alt_dev_list
1000d050 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
10025e04  w    O .rodata	00000011 _ZTSSt12domain_error
100231f4 g     F .text	000000f8 write
1000b284 g     F .text	00000068 _ZNSt11logic_erroraSERKS_
1001cfc0 g     F .text	000000cc _putc_r
1000c294 g     F .text	00000008 _ZGTtNSt12length_errorD1Ev
1000757c  w    F .text	00000024 _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
100084d8  w    F .text	00000030 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
10006e60  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv
10008034  w    F .text	00000024 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
1000f13c  w    F .text	0000004c _ZNSs4rendEv
10011808  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
1000d42c g     F .text	00000008 _ZNSt9type_infoD0Ev
100147b0  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ESt16initializer_listIcERKS3_
1000d624 g     F .text	00000064 _ZNSt13runtime_errorD1Ev
1000c0c0 g     F .text	000000e0 _ZGTtNSt12length_errorC1EPKc
10013630  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj
100267d8 g       *ABS*	00000000 __ram_rodata_end
1000d0a4 g     F .text	00000004 _ZdlPvj
10011b2c  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
10022728 g     F .text	000000b0 fstat
1001155c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj
1000eb3c  w    F .text	00000008 _ZNSs12_Alloc_hiderC2EPcRKSaIcE
10022914 g     F .text	0000012c kill
10011248  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj
1000c4d0 g     F .text	000000d4 _ZGTtNSt13runtime_errorC1EPKc
1000d824 g     F .text	00000030 _ZNSt12domain_errorC2ERKSs
1002120c g     F .text	000000f0 .hidden __ledf2
1000d824 g     F .text	00000030 _ZNSt12domain_errorC1ERKSs
1000d514 g     F .text	00000010 _ZNSt12domain_errorD1Ev
10010a98  w    F .text	0000003c _ZNSsC2IPcEET_S1_RKSaIcE
10006b94  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED2Ev
10006df4  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv
1000661c g     F .text	00000080 UsbPrintMem
1001c6a4 g     F .text	00000128 __pow5mult
10010634  w    F .text	000000f0 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_
100069c8  w    F .text	00000028 _ZnwjPv
1000afa8 g     F .text	000000e0 _ZN9__gnu_cxx15__concat_size_tEPcjj
1001d908 g     F .text	0000132c ___vfiprintf_internal_r
1000d748 g     F .text	00000034 _ZNSt15underflow_errorD0Ev
100149e8 g     F .text	0000005c .hidden __umodsi3
1000d424 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
1000d6b0 g     F .text	00000010 _ZNSt11range_errorD2Ev
10011aa4  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10008508  w    F .text	00000028 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_
1000c6c8 g     F .text	000000e0 _ZGTtNSt11range_errorC1EPKc
10008cc0 g     F .text	00000064 __cxa_init_primary_exception
1000e1c4  w    F .text	00000040 _ZNKSs4findEPKcj
10008c2c g     F .text	0000000c _ZSt13get_terminatev
1001239c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj
1000e71c  w    F .text	0000000c _ZNKSs16find_last_not_ofERKSsj
1002a7e0 g       *ABS*	00000000 end
1000d9ec g     F .text	00000030 _ZNSt15underflow_errorC2ERKSs
10007d00  w    F .text	0000008c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E
100114cc  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_
10015f08 g     F .text	00000018 fseeko
10010a98  w    F .text	0000003c _ZNSsC1IPcEET_S1_RKSaIcE
1000dccc  w    F .text	00000010 _ZNKSs7_M_iendEv
100032fc g     F .text	00000068 blinkyPalette
10014ecc g     F .text	00000018 .hidden _Unwind_DeleteException
100037e4 g     F .text	0000049c drawBoard
10015a98 g     F .text	00000018 fseek
10023508 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
10011960  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
1000b68c g     F .text	0000001c _ZNSt12__cow_stringC1EPKcj
1000da30 g     F .text	00000020 _ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000e55c  w    F .text	00000010 _ZNKSs12find_last_ofEcj
1000deb4  w    F .text	00000008 _ZNKSs5beginEv
1000d228 g     F .text	000000cc _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
10007bd0  w    F .text	00000028 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv
10024ef2 g       *ABS*	00000000 __CTOR_LIST__
10007198  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC2IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000fbf4  w    F .text	000000ac _ZNSs4_Rep8_M_cloneERKSaIcEj
1002a6a8  w    O .bss	00000010 _ZNSs4_Rep20_S_empty_rep_storageE
1000d480 g     F .text	00000008 _ZNKSt13runtime_error4whatEv
1002252c g     F .text	00000054 .hidden __clzsi2
10025e9c  w    O .rodata	0000000c _ZTISt13runtime_error
1000d150 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
10023be4 g     F .text	00000224 altera_avalon_jtag_uart_write
10011848  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_
10015540 g     F .text	00000004 __sfp_lock_acquire
10025bf0  w    O .rodata	00000012 _ZTSSt13bad_exception
10016ac0 g     F .text	000000e8 memchr
10017c0c g     F .text	00002160 ___vfprintf_internal_r
10025f40  w    O .rodata	00000014 _ZTVSt12length_error
100078dc  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC2IS2_bLb1EEEOT_OT0_
10005f90 g     F .text	00000100 UsbClassRequest
10015798 g     F .text	000002fc _free_r
1000d0a8 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
1000e8ac  w    F .text	000000d8 _ZNKSs7compareEjjRKSsjj
100081a4  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_
100263bf g     O .rodata	00000180 _ctype_b
10010fb4  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_
1001f180 g     F .text	0000000c __locale_mb_cur_max
1000ecdc  w    F .text	00000034 _ZNSsC1ERKSaIcE
10013624  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j
10024c38 g     F .text	00000118 __call_exitprocs
10006b94  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev
1000eb74  w    F .text	00000008 _ZNSs4_Rep15_M_set_sharableEv
1000f2a0  w    F .text	00000048 _ZNSs4backEv
10013b04  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj
10028650  w    O .rwdata	00000004 _ZNSs4_Rep11_S_max_sizeE
1000d558 g     F .text	00000010 _ZNSt16invalid_argumentD2Ev
10006e28  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_
10006a78  w    F .text	0000003c _ZN9TileGroupC2E10__tile_col
1000d59c g     F .text	00000010 _ZNSt12length_errorD1Ev
1000c8d0 g     F .text	000000e0 _ZGTtNSt14overflow_errorC1EPKc
1000e264  w    F .text	00000098 _ZNKSs5rfindEPKcjj
10028664 g     O .rwdata	00000004 __malloc_sbrk_base
10000238 g     F .text	0000004c _start
10025df8  w    O .rodata	0000000c _ZTISt11logic_error
1000e0d0  w    F .text	00000008 _ZNKSs4dataEv
1000b214 g     F .text	00000070 _ZNSt11logic_errorC2ERKS_
1002a590 g     O .bss	00000004 _alt_tick_rate
100142b4  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
10006ab4  w    F .text	00000058 _ZN9TileGroupC2Ess
10009f60 g     F .text	00000004 _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base
10013fb0  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
10025db8  w    O .rodata	0000000d _ZTSSt9type_info
1000defc  w    F .text	00000010 _ZNKSs4cendEv
1000df58  w    F .text	0000000c _ZNKSs8capacityEv
1000dcac  w    F .text	0000000c _ZNSs7_M_dataEPc
1000d9ec g     F .text	00000030 _ZNSt15underflow_errorC1ERKSs
10008e40 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
1001712c g     F .text	00000060 rand
1000d064 g     F .text	00000020 __cxa_pure_virtual
1001c7cc g     F .text	0000013c __lshift
10025ad0  w    O .rodata	00000014 _ZTVSt9bad_alloc
1002a594 g     O .bss	00000004 _alt_nticks
10017634 g     F .text	00000014 signal
1000df0c  w    F .text	00000018 _ZNKSs7crbeginEv
10022f84 g     F .text	000000fc read
10023358 g     F .text	0000004c alt_sys_init
10010434  w    F .text	0000005c _ZNSsC2ERKSs
100113ac  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc
1000e0d8  w    F .text	00000008 _ZNKSs13get_allocatorEv
1000ccac g     F .text	00000008 _ZGTtNSt15underflow_errorD2Ev
10025d3c  w    O .rodata	0000000c _ZTISt10bad_typeid
10009fc0 g     F .text	0000005c _ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_
10016f50 g     F .text	00000064 _open_r
1000f220  w    F .text	00000048 _ZNSsixEj
1000ed10  w    F .text	00000040 _ZNSsC2EjcRKSaIcE
10024ba8 g     F .text	00000090 __register_exitproc
10025ab4  w    O .rodata	0000000d _ZTSSt9bad_alloc
100052c4 g     F .text	00000078 parseSprite
10011d58  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv
10002200 g     F .text	00000ab8 pinkys_move
1000d028 g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
10006f40  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev
1000c89c g     F .text	00000008 _ZGTtNSt11range_errorD1Ev
1000ce1c g     F .text	0000015c _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
10011d74  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
10013a74  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj
10011514  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_
10011a7c  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
1000f404  w    F .text	0000005c _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_
1000c5a4 g     F .text	000000e8 _ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10007524  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
1000c7a8 g     F .text	000000f4 _ZGTtNSt11range_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001c4b8 g     F .text	000001ec __multiply
10011948  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
10012118  w    F .text	0000005c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_
1002386c g     F .text	00000068 altera_avalon_jtag_uart_close
10006d3c  w    F .text	00000084 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_
100147b0  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_
100146ec  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jjRKS3_
100267d8 g       *ABS*	00000000 __ram_rwdata_start
1000d514 g     F .text	00000010 _ZNSt12domain_errorD2Ev
10014d30 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
10024f00 g       *ABS*	00000000 __ram_rodata_start
1000e7bc  w    F .text	00000054 _ZNKSs7compareERKSs
1002a6b8 g     O .bss	00000028 __malloc_current_mallinfo
10014e3c g     F .text	00000044 .hidden _Unwind_SjLj_Resume
10013d1c  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj
1000f0f0  w    F .text	00000014 _ZNSs7_M_leakEv
1001cc7c g     F .text	00000148 __d2b
10025c90  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
1000d418 g     F .text	00000004 _ZNSt9type_infoD2Ev
10013990  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj
10007288  w    F .text	00000038 _ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000d054 g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
1000eed0  w    F .text	000001b8 _ZNSs9_M_mutateEjjj
1000cf78 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
1000d558 g     F .text	00000010 _ZNSt16invalid_argumentD1Ev
1000debc  w    F .text	00000010 _ZNKSs3endEv
10005778 g     F .text	00000148 UsbGetDeviceDesc1
10011184 g     F .text	000000bc _ZNSt13random_device14_M_init_pretr1ERKSs
100233a4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10017bd8 g     F .text	00000004 _strtoul_r
100243dc g     F .text	000000a0 alt_get_fd
10023f34 g     F .text	00000128 alt_busy_sleep
10006c00  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev
10025ee4  w    O .rodata	00000014 _ZTSSt15underflow_error
10028638  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
10006bc8  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev
1001a008 g     F .text	00000058 _close_r
10012344  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc
1000d738 g     F .text	00000010 _ZNSt15underflow_errorD2Ev
1000b60c g     F .text	00000030 _ZNSt14overflow_errorC1EPKc
10010174  w    F .text	000000e4 _ZNSs6appendEjc
1001457c  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
1000fef0  w    F .text	00000108 _ZNSs6appendERKSsjj
10007044  w    F .text	00000130 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_
1000e510  w    F .text	0000000c _ZNKSs12find_last_ofERKSsj
10016ba8 g     F .text	0000008c memcmp
10023464 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
1002a7e0 g       *ABS*	00000000 __alt_stack_base
100234b4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10008e5c g     F .text	00000038 _ZNSt9bad_allocD0Ev
10013b9c  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj
1000cd38 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
1000b764 g     F .text	00000044 _ZNSt12__cow_stringD1Ev
1000fd34  w    F .text	000000f0 _ZNSs13shrink_to_fitEv
1000d6b0 g     F .text	00000010 _ZNSt11range_errorD1Ev
10019ea8 g     F .text	00000160 __swsetup_r
10013174  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
10025ea8  w    O .rodata	00000010 _ZTSSt11range_error
1000caac g     F .text	0000002c _ZGTtNSt14overflow_errorD0Ev
10014e80 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
100124cc  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc
100207f4 g     F .text	000008a8 .hidden __divdf3
10015420 g     F .text	000000fc __sfp
1001cee0 g     F .text	0000006c __copybits
10011948  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
10025e18  w    O .rodata	0000000c _ZTISt12domain_error
10025cf0  w    O .rodata	0000000c _ZTSSt8bad_cast
1000d41c g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
10013c30  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_
1001456c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_
10010fd0  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_
10025ed8  w    O .rodata	0000000c _ZTISt14overflow_error
10026ea0 g     O .rwdata	00000408 __malloc_av_
10007994  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2ERKSt17_Rb_tree_iteratorIS0_E
1001554c g     F .text	00000004 __sinit_lock_release
1000b530 g     F .text	000000ac _ZNSt13runtime_errorC2EPKc
1000e728  w    F .text	00000040 _ZNKSs16find_last_not_ofEPKcj
100212fc g     F .text	0000068c .hidden __muldf3
100176d8 g     F .text	00000054 __sread
10006518 g     F .text	00000084 UsbWaitTDListDone
10025c54  w    O .rodata	00000014 _ZTVSt9exception
1000d048 g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
10010258  w    F .text	00000054 _ZNSs6resizeEjc
100242d4 g     F .text	00000108 alt_find_file
10010ed0  w    F .text	00000030 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs
10028658  w    O .rwdata	00000004 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4nposE
10008348  w    F .text	00000024 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv
1000bb8c g     F .text	000000e8 _ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10007434  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base
1000ee80  w    F .text	00000050 _ZNSs5clearEv
10003364 g     F .text	00000068 pinkyPalette
100240e0 g     F .text	000000a4 alt_dev_llist_insert
10022cb8 g     F .text	00000024 __malloc_lock
100230d8 g     F .text	000000b0 sbrk
1000b688 g     F .text	00000004 _ZNSt12__cow_stringC1ERKSs
1000a8d4 g     F .text	000000ac _ZSt20__throw_domain_errorPKc
1000a828 g     F .text	000000ac _ZSt19__throw_logic_errorPKc
10011438  w    F .text	00000020 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc
10025d8c  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
10006e98  w    F .text	0000003c _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_
10008d24 g     F .text	00000094 __cxa_throw
10006f88  w    F .text	00000070 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
100151ac g     F .text	00000060 _fflush_r
10014cf4 g     F .text	00000010 .hidden _Unwind_SetIP
1001ee68 g     F .text	000000b8 _calloc_r
100130d0  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
10006b0c  w    F .text	00000088 _ZNK9TileGroupltERKS_
1000dae0 g     F .text	00000060 _ZNSt12__sso_stringaSERKS_
10025e5c  w    O .rodata	0000000c _ZTISt12length_error
1000eb68  w    F .text	0000000c _ZNSs4_Rep13_M_set_leakedEv
1000c2c8 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC1EPKc
1000ad24 g     F .text	000000ac _ZSt19__throw_range_errorPKc
1000d854 g     F .text	00000030 _ZNSt16invalid_argumentC1ERKSs
100051dc g     F .text	000000e8 parseSpriteLine
10015668 g     F .text	00000014 fopen
1002a550 g       *ABS*	00000000 __bss_start
1000745c  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E
10011240  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
10012ae8  w    F .text	00000094 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc
10016e60 g     F .text	000000f0 memset
1000de80  w    F .text	0000000c _ZNSs12_S_empty_repEv
10004174 g     F .text	00000e78 main
10025e88  w    O .rodata	00000012 _ZTSSt13runtime_error
1000c08c g     F .text	00000008 _ZGTtNSt16invalid_argumentD2Ev
1000e810  w    F .text	0000009c _ZNKSs7compareEjjRKSs
100082dc  w    F .text	0000006c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E
1000e600  w    F .text	00000040 _ZNKSs17find_first_not_ofEPKcj
1000b6a8 g     F .text	0000005c _ZNSt12__cow_stringC1ERKS_
10005070 g     F .text	000000a8 writePaletteHelper
1002a588 g     O .bss	00000004 alt_envp
1000baa8 g     F .text	00000008 _Z26_txnal_logic_error_get_msgPv
1002a570 g     O .bss	00000004 __malloc_max_total_mem
10025d48  w    O .rodata	00000014 _ZTVSt10bad_typeid
1001436c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_
10023404 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1001474c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcjRKS3_
10005e90 g     F .text	00000100 UsbSetConfig
1001ee54 g     F .text	00000014 __swbuf
10017118 g     F .text	00000014 srand
1000d05c g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
1000a758 g     F .text	00000034 _ZSt21__throw_bad_exceptionv
1000cffc g     F .text	0000000c __cxa_get_globals_fast
100146ec  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_
1000e078  w    F .text	00000028 _ZNSsaSEOSs
10013264  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
10011848  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
1000ec34  w    F .text	000000a8 _ZNSs12_S_constructEjcRKSaIcE
1001377c  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj
10006a78  w    F .text	0000003c _ZN9TileGroupC1E10__tile_col
10025d08  w    O .rodata	00000014 _ZTVSt8bad_cast
10017810 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000dd74  w    F .text	00000020 _ZNSs7_M_copyEPcPKcj
1000d0fc g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
1001ba30 g     F .text	00000010 fclose
1000e1b8  w    F .text	0000000c _ZNKSs4findERKSsj
10008454  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base
1000d5e0 g     F .text	00000010 _ZNSt12out_of_rangeD1Ev
1001a270 g     F .text	000016c8 _dtoa_r
100162cc g     F .text	000007f4 _malloc_r
1000ba78 g     F .text	00000004 _Z23_txnal_sso_string_c_strPKv
1000a01c g     F .text	00000254 _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
100033cc g     F .text	00000068 inkyPalette
10011084  w    F .text	0000003c _ZNSsC2IPKcEET_S2_RKSaIcE
1001f2ec g     F .text	00000030 __ascii_wctomb
1001456c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_
1000d028 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
100100fc  w    F .text	00000004 _ZNSspLESt16initializer_listIcE
1000ecdc  w    F .text	00000034 _ZNSsC2ERKSaIcE
10028680 g     O .rwdata	00000004 alt_errno
1001438c  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
10010f60  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_
1000b704 g     F .text	00000060 _ZNSt12__cow_stringaSERKS_
1000d9bc g     F .text	00000030 _ZNSt14overflow_errorC2ERKSs
1000e51c  w    F .text	00000040 _ZNKSs12find_last_ofEPKcj
1000d6c0 g     F .text	00000034 _ZNSt11range_errorD0Ev
10017648 g     F .text	0000001c _init_signal
10025d80  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
10015f80 g     F .text	000000a4 _fwalk
100012ac g     F .text	0000004c recur_free
1001f1a0 g     F .text	0000000c _mbtowc_r
1000d018 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
1000beb8 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC1EPKc
1001d08c g     F .text	000000e0 putc
1001488c g     F .text	00000080 .hidden __divsi3
1001567c g     F .text	0000011c _malloc_trim_r
10006768 g     F .text	000000fc getOne
10006090 g     F .text	00000148 UsbGetHidDesc
10024efc g       *ABS*	00000000 __CTOR_END__
1000dd94  w    F .text	00000020 _ZNSs7_M_moveEPcPKcj
1000fe24  w    F .text	000000c8 _ZNSs6appendERKSs
100102b4  w    F .text	000000a4 _ZNSs9push_backEc
10017818 g     F .text	000000d8 strcmp
1000b500 g     F .text	00000030 _ZNSt12out_of_rangeC1EPKc
1000de54  w    F .text	00000024 _ZNSs13_S_copy_charsEPcPKcS1_
1000e348  w    F .text	00000050 _ZNKSs5rfindEcj
10024f00 g       *ABS*	00000000 __flash_rodata_start
10025c7c  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
10024efc g       *ABS*	00000000 __DTOR_LIST__
1000ed50  w    F .text	00000010 _ZNSs18_S_construct_aux_2EjcRKSaIcE
1000db40 g     F .text	00000018 _ZNSt12__sso_stringD1Ev
1000da30 g     F .text	00000020 _ZNSt12__sso_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10010fec  w    F .text	0000005c _ZNSsC1EPKcRKSaIcE
10017bdc g     F .text	00000018 strtoul_l
1002109c g     F .text	00000080 .hidden __nedf2
1000d0b4 g     F .text	00000010 _ZNSt8bad_castD2Ev
1000b35c g     F .text	00000068 _ZNSt13runtime_erroraSERKS_
10005580 g     F .text	00000044 UsbRead
10012bf4  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j
10004fec g     F .text	00000084 drawTile
10011b1c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
1000d8b4 g     F .text	00000030 _ZNSt12out_of_rangeC1ERKSs
10023320 g     F .text	00000038 alt_irq_init
100108d4  w    F .text	0000002c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
10023080 g     F .text	00000058 alt_release_fd
10012fa8  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj
1000cd48 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
10011dec  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
1000fb90  w    F .text	00000040 _ZNSs8pop_backEv
10010e0c  w    F .text	00000068 _ZNSs7replaceEjjRKSsjj
1000361c g     F .text	000001c8 initScreen
1000a270 g     F .text	000004b4 _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
100266a4 g     O .rodata	00000100 .hidden __clz_tab
1000d488 g     F .text	00000064 _ZNSt11logic_errorD2Ev
1000f088  w    F .text	00000068 _ZNSs12_M_leak_hardEv
1002a57c g     O .bss	00000004 _PathLocale
10007198  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
10025de8  w    O .rodata	00000010 _ZTSSt11logic_error
1000d488 g     F .text	00000064 _ZNSt11logic_errorD1Ev
10024b60 g     F .text	00000014 atexit
10011f74  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_
1000c49c g     F .text	00000008 _ZGTtNSt12out_of_rangeD1Ev
10025eb8  w    O .rodata	0000000c _ZTISt11range_error
10012a30  w    F .text	00000068 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_
1000caa4 g     F .text	00000008 _ZGTtNSt14overflow_errorD2Ev
1000d98c g     F .text	00000030 _ZNSt11range_errorC1ERKSs
10019e44 g     F .text	00000064 _write_r
1001181c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_
1000ccac g     F .text	00000008 _ZGTtNSt15underflow_errorD1Ev
10006ab4  w    F .text	00000058 _ZN9TileGroupC1Ess
1000fb84  w    F .text	0000000c _ZNSs6insertEjRKSs
10014100  w    F .text	0000010c _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_
1000c3a8 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001f18c g     F .text	00000014 setlocale
1000d5f0 g     F .text	00000034 _ZNSt12out_of_rangeD0Ev
10014d28 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
1000beb8 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC2EPKc
1000cce0 g     F .text	00000058 __cxa_call_terminate
10012eb4  w    F .text	000000a0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_
10013f1c  w    F .text	00000094 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj
10007200  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000cbb8 g     F .text	000000f4 _ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000f460  w    F .text	000000a4 _ZNSs14_M_replace_auxEjjjc
10028660 g     O .rwdata	00000004 _impure_ptr
10028630  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
1002a580 g     O .bss	00000004 alt_argc
10008058  w    F .text	000000a8 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000f640  w    F .text	00000064 _ZNSs7replaceEjjjc
10014f84 g     F .text	00000228 __sflush_r
100267d8 g     O .rwdata	000000e1 GAME_BOARDS
10010964  w    F .text	00000074 _ZNSsC1ERKSsjj
100241e4 g     F .text	00000060 _do_dtors
1000c1a0 g     F .text	000000f4 _ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100066f4 g     F .text	00000074 addPendingPos
10015a94 g     F .text	00000004 _fseek_r
10007994  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E
10009f64 g     F .text	0000005c _ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_
100171a8 g     F .text	000001cc __srefill_r
10008888  w    F .text	00000028 _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv
10010724  w    F .text	000000cc _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
10011f4c  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_
100109d8  w    F .text	0000004c _ZNKSs6substrEjj
10008c4c g     F .text	0000000c _ZSt14get_unexpectedv
10000020 g       .exceptions	00000000 alt_irq_entry
1001f1ac g     F .text	00000044 __ascii_mbtowc
1000df64  w    F .text	00000010 _ZNKSs5emptyEv
1001cb1c g     F .text	0000005c __ulp
10014d18 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
10003034 g     F .text	000002c8 clydes_move
100110c0  w    F .text	00000010 _ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_
10015564 g     F .text	00000014 __fp_unlock_all
1000b4a0 g     F .text	00000030 _ZNSt16invalid_argumentC2EPKc
10011a5c  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10011250  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
10007500  w    F .text	00000024 _ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE
1002866c g     O .rwdata	00000008 alt_fs_list
10025c30  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
1001389c  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j
10008714  w    F .text	00000024 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
10014d04 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
1000d568 g     F .text	00000034 _ZNSt16invalid_argumentD0Ev
1000b470 g     F .text	00000030 _ZNSt12domain_errorC2EPKc
100114f0  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_
10010b00  w    F .text	0000003c _ZNSsC1EPKcjRKSaIcE
10007e08  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv
10007524  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
100079cc  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base
10008980 g     F .text	000000ac __cxa_begin_catch
100139e0  w    F .text	00000088 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj
1000f938  w    F .text	00000004 _ZNSs6assignESt16initializer_listIcE
100061d8 g     F .text	00000340 UsbGetReportDesc
1000d1e0 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
10008bf4 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
1000b820 g     F .text	00000118 _ZNKSt3_V214error_category10_M_messageEi
1000de9c  w    F .text	00000018 _ZNSsC2EOSs
10003524 g     F .text	00000084 textPalette
10025e48  w    O .rodata	00000011 _ZTSSt12length_error
10000020 g       *ABS*	00000000 __ram_exceptions_start
1001c014 g     F .text	0000000c localeconv
1000da50 g     F .text	00000014 _ZNSt12__sso_stringC1EPKcj
1000a7c0 g     F .text	00000034 _ZSt16__throw_bad_castv
100160d8 g     F .text	00000098 __swhatbuf_r
10008774  w    F .text	0000004c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_
10002cb8 g     F .text	0000037c inkys_move
1000d03c g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
10028640 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
10025fa4  w    O .rodata	00000014 _ZTVSt15underflow_error
1000e5f4  w    F .text	0000000c _ZNKSs17find_first_not_ofERKSsj
10006a2c  w    F .text	0000004c _ZNSt15_Rb_tree_header8_M_resetEv
10006f40  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC2Ev
100244b0 g     F .text	00000050 alt_ic_isr_register
10012dec  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_
1000bd90 g     F .text	000000f4 _ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10009d3c g     F .text	00000058 __cxa_allocate_exception
1000b2ec g     F .text	00000070 _ZNSt13runtime_errorC2ERKS_
10011830  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_
1000b2ec g     F .text	00000070 _ZNSt13runtime_errorC1ERKS_
10008208  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_
10025b84  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
1000df74  w    F .text	0000000c _ZNKSsixEj
10008958 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
1000bab0 g     F .text	00000008 _Z28_txnal_runtime_error_get_msgPv
1000f53c  w    F .text	00000048 _ZNSsaSEc
1000b764 g     F .text	00000044 _ZNSt12__cow_stringD2Ev
10028694 g       *ABS*	00000000 _edata
1000be84 g     F .text	00000008 _ZGTtNSt12domain_errorD1Ev
1000c294 g     F .text	00000008 _ZGTtNSt12length_errorD2Ev
10007970  w    F .text	00000024 _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
1000e768  w    F .text	00000054 _ZNKSs16find_last_not_ofEcj
1002a7e0 g       *ABS*	00000000 _end
10028621 g     O .rwdata	00000001 _ZSt7nothrow
1000d688 g     F .text	00000028 _ZNSt13runtime_errorD0Ev
100006ec g     F .text	000004ac init_game
100093d4 g     F .text	00000624 __gxx_personality_sj0
1000c6c8 g     F .text	000000e0 _ZGTtNSt11range_errorC2EPKc
10005524 g     F .text	0000005c UsbWrite
1001ef20 g     F .text	00000150 __fputwc
10011424  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj
10000238 g       *ABS*	00000000 __ram_exceptions_end
1001420c  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag
1000de9c  w    F .text	00000018 _ZNSsC1EOSs
100238d4 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
1000b938 g     F .text	0000013c _Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_
1000bd90 g     F .text	000000f4 _ZGTtNSt12domain_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10005410 g     F .text	00000098 writeText
10011acc  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
10003434 g     F .text	00000068 clydePalette
100123a4  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc
1000def4  w    F .text	00000008 _ZNKSs6cbeginEv
100147c4  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPKcvEET_S8_RKS3_
1000b7c0 g     F .text	00000060 _ZNSt12__cow_stringaSEOS_
1000d014 g     F .text	00000004 _ZNSt9exceptionD1Ev
10014454  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_
10024588 g     F .text	0000008c alt_ic_irq_disable
10009ef8 g     F .text	00000060 _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
10003c80 g     F .text	000004f4 updateBoard
1001163c  w    F .text	00000148 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj
1001486c  w    F .text	00000010 _ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
10017734 g     F .text	00000080 __swrite
100088e8 g     F .text	00000070 _Znwj
1000f854  w    F .text	00000028 _ZNSsaSESt16initializer_listIcE
10011a6c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
10028668 g     O .rwdata	00000004 __malloc_trim_threshold
100136d8  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj
10014644  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_
100113c4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
10024b74 g     F .text	00000034 exit
10011de4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
10014cac g     F .text	00000018 .hidden _Unwind_SetGR
1000feec  w    F .text	00000004 _ZNSspLERKSs
10016024 g     F .text	000000b4 _fwalk_reent
1000cd80 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
10013670  w    F .text	00000068 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj
10025f18  w    O .rodata	00000014 _ZTVSt12domain_error
1001c960 g     F .text	000001bc __mdiff
10008b18 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
1000f268  w    F .text	00000038 _ZNSs5frontEv
10011d8c  w    F .text	00000028 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
1000c2c8 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC2EPKc
1001490c g     F .text	00000078 .hidden __modsi3
10007eb4  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000db58 g     F .text	00000078 _ZNSt12__sso_stringC2EOS_
1000df80  w    F .text	00000028 _ZNKSs2atEj
10008e4c g     F .text	00000010 _ZNSt9bad_allocD1Ev
10011c54  w    F .text	00000104 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv
1000e434  w    F .text	00000040 _ZNKSs13find_first_ofEPKcj
1000e56c  w    F .text	00000088 _ZNKSs17find_first_not_ofEPKcjj
10011498  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc
18000000 g       *ABS*	00000000 __alt_data_end
1000af28 g     F .text	00000080 _ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_
10000020 g     F .exceptions	00000000 alt_exception
10015544 g     F .text	00000004 __sfp_lock_release
10012e50  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_
1000b68c g     F .text	0000001c _ZNSt12__cow_stringC2EPKcj
10012174  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv
1001331c  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj
10025c04  w    O .rodata	0000000c _ZTISt13bad_exception
10000000 g       *ABS*	00000000 __alt_mem_sdram
1000777c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_
100012f8 g     F .text	00000104 stack_push
1000c8d0 g     F .text	000000e0 _ZGTtNSt14overflow_errorC2EPKc
100078dc  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_
10006c00  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC2Ev
100137bc  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj
1000c49c g     F .text	00000008 _ZGTtNSt12out_of_rangeD2Ev
10010a24  w    F .text	00000074 _ZNSsC1ERKSsjjRKSaIcE
10007bf8  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_
10000610 g     F .text	00000074 IO_write
100262be g     O .rodata	00000101 _ctype_
10013bdc  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj
1000d524 g     F .text	00000034 _ZNSt12domain_errorD0Ev
100222f4 g     F .text	00000054 .hidden __unorddf2
1000e0c8  w    F .text	00000008 _ZNKSs5c_strEv
10011ddc  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
10006c38  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC2Ev
1000b7a8 g     F .text	00000018 _ZNSt12__cow_stringC1EOS_
1000de78  w    F .text	00000008 _ZNSs10_S_compareEjj
1002a680 g     O .bss	00000018 workset
10015578 g     F .text	000000f0 _fopen_r
100226b8 g     F .text	00000034 _exit
100123d8  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc
1000eba8  w    F .text	0000008c _ZNSs4_Rep9_S_createEjjRKSaIcE
100147c4  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_
10023e08 g     F .text	0000012c alt_alarm_start
1000eb7c  w    F .text	00000024 _ZNSs4_Rep26_M_set_length_and_sharableEj
1000aad8 g     F .text	000000ac _ZSt20__throw_out_of_rangePKc
1000f5e0  w    F .text	00000060 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc
1000793c  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC2EPSt18_Rb_tree_node_base
1001f31c g     F .text	00000060 .hidden __muldi3
10014760  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
10014c7c g     F .text	00000018 .hidden _Unwind_GetGR
1000d008 g     F .text	0000000c __cxa_get_globals
10016170 g     F .text	0000013c __smakebuf_r
10028624 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
10011b0c  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv
1000c5a4 g     F .text	000000e8 _ZGTtNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10010170  w    F .text	00000004 _ZNSs6appendESt16initializer_listIcE
10010138  w    F .text	00000038 _ZNSspLEPKc
100072c0  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_
100178f0 g     F .text	00000098 strlen
1000f340  w    F .text	00000074 _ZNSs5eraseEjj
1000ae7c g     F .text	000000ac _ZSt23__throw_underflow_errorPKc
10017418 g     F .text	00000014 _init_signal_r
10028644  w    O .rwdata	00000008 _ZTISt9type_info
10022df4 g     F .text	00000154 open
1000d060 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
1000eb44  w    F .text	0000000c _ZNSs4_Rep12_S_empty_repEv
1000eb3c  w    F .text	00000008 _ZNSs12_Alloc_hiderC1EPcRKSaIcE
10011564  w    F .text	000000d8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
1000f584  w    F .text	0000005c _ZNSs6insertEjjc
1002111c g     F .text	000000f0 .hidden __gedf2
1000f504  w    F .text	00000038 _ZNSs6assignEjc
1000b530 g     F .text	000000ac _ZNSt13runtime_errorC1EPKc
10025be0  w    O .rodata	0000000d _ZTSSt9exception
1000c9b0 g     F .text	000000f4 _ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10007364  w    F .text	00000084 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv
10025f68  w    O .rodata	00000014 _ZTVSt13runtime_error
1000b6a8 g     F .text	0000005c _ZNSt12__cow_stringC2ERKS_
10025d2c  w    O .rodata	0000000f _ZTSSt10bad_typeid
1000df40  w    F .text	0000000c _ZNKSs6lengthEv
1000be8c g     F .text	0000002c _ZGTtNSt12domain_errorD0Ev
100054a8 g     F .text	0000007c clearScreen
1000de30  w    F .text	00000024 _ZNSs13_S_copy_charsEPcS_S_
1000c9b0 g     F .text	000000f4 _ZGTtNSt14overflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000d478 g     F .text	00000008 _ZNKSt11logic_error4whatEv
1001259c  w    F .text	00000270 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
1000e690  w    F .text	0000008c _ZNKSs16find_last_not_ofEPKcjj
10010ad4  w    F .text	0000002c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
1000e204  w    F .text	00000060 _ZNKSs4findEcj
1000d034 g     F .text	00000008 _ZNSt9exceptionD0Ev
1001d8f0 g     F .text	00000018 __sprint_r
1002447c g     F .text	00000034 alt_icache_flush_all
100133a8  w    F .text	0000018c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
1000d108 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
1000f2e8  w    F .text	00000058 _ZNSs2atEj
10011e14  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc
10013fb8  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_
10014d20 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
10010f7c  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_
10028688 g     O .rwdata	00000004 alt_priority_mask
10011d68  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
100142c4  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag
10024500 g     F .text	00000088 alt_ic_irq_enable
10013fc0  w    F .text	00000140 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
10019d6c g     F .text	00000018 __vfprintf_internal
1000df4c  w    F .text	0000000c _ZNKSs8max_sizeEv
1001280c  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj
1000c4d0 g     F .text	000000d4 _ZGTtNSt13runtime_errorC2EPKc
1000c4a4 g     F .text	0000002c _ZGTtNSt12out_of_rangeD0Ev
10013a68  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j
1001f2e0 g     F .text	0000000c _wctomb_r
1000e640  w    F .text	00000050 _ZNKSs17find_first_not_ofEcj
10010900  w    F .text	00000064 _ZNSsC2ERKSsjRKSaIcE
1000d108 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
10021988 g     F .text	0000096c .hidden __subdf3
10012474  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc
1000edfc  w    F .text	00000004 _ZNSs4_Rep10_M_destroyERKSaIcE
10010fec  w    F .text	0000005c _ZNSsC2EPKcRKSaIcE
10011538  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
100132c4  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE
1000eba0  w    F .text	00000008 _ZNSs4_Rep10_M_refdataEv
1001c3d4 g     F .text	000000b0 __lo0bits
10005a98 g     F .text	00000190 UsbGetConfigDesc1
1000f1d0  w    F .text	00000050 _ZNSs6rbeginEv
1000be84 g     F .text	00000008 _ZGTtNSt12domain_errorD2Ev
100128d0  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE
1000b3c4 g     F .text	000000ac _ZNSt11logic_errorC1EPKc
100132f0  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE
1002868c g     O .rwdata	00000008 alt_alarm_list
1000c3a8 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10024184 g     F .text	00000060 _do_ctors
10011a8c  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10017664 g     F .text	00000010 __sigtramp
10013b90  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j
10025e3c  w    O .rodata	0000000c _ZTISt16invalid_argument
1000e428  w    F .text	0000000c _ZNKSs13find_first_ofERKSsj
10010898  w    F .text	0000003c _ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
100055c4 g     F .text	000000b4 UsbSoftReset
1000b5dc g     F .text	00000030 _ZNSt11range_errorC1EPKc
1001f25c g     F .text	00000084 wcrtomb
10011284  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv
1000dd54  w    F .text	00000020 _ZNKSs11_M_disjunctEPKc
10013984  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j
100225bc g     F .text	000000d0 close
1000e04c  w    F .text	0000002c _ZNSs4swapERSs
1000b7a8 g     F .text	00000018 _ZNSt12__cow_stringC2EOS_
10011b24  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
100058c0 g     F .text	000001d8 UsbGetDeviceDesc2
100272a8 g     O .rwdata	0000016c __global_locale
100069f0  w    F .text	0000003c _ZNSt15_Rb_tree_headerC1Ev
10011808  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev
10010f98  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE
10025c10  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
1000d77c g     F .text	000000a8 _ZNSt11logic_errorC1ERKSs
10022aa8 g     F .text	00000084 alt_load
1000de8c  w    F .text	00000010 _ZNSsC1Ev
10007ef8  w    F .text	00000038 _ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_
1000d434 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
1000b470 g     F .text	00000030 _ZNSt12domain_errorC1EPKc
1001181c  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_
1001f094 g     F .text	0000007c fputwc
10017624 g     F .text	00000010 raise
1000d854 g     F .text	00000030 _ZNSt16invalid_argumentC2ERKSs
100162bc g     F .text	00000010 free
10015548 g     F .text	00000004 __sinit_lock_acquire
100035a8 g     F .text	00000074 wallPalette
1000d884 g     F .text	00000030 _ZNSt12length_errorC2ERKSs
1001c14c g     F .text	00000114 __multadd
1000d1f0 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
1001c128 g     F .text	00000024 _Bfree
10011af4  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv
100142b4  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
1001436c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_RKS3_
1000fff8  w    F .text	00000104 _ZNSs6appendEPKcj
10000b98 g     F .text	000006e4 tickgame
1000d8e4 g     F .text	000000a8 _ZNSt13runtime_errorC1ERKSs



Disassembly of section .entry:

10000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1000000c:	00bffd16 	blt	zero,r2,10000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000010:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000014:	08408e14 	ori	at,at,568
    jmp r1
10000018:	0800683a 	jmp	at
1000001c:	00000000 	call	10000000 <__reset>

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001c40 	call	100001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffc15 	stw	r2,-16(fp)

  return active;
10000118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0ffff17 	ldw	r3,-4(fp)
10000130:	e0bffe17 	ldw	r2,-8(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001126 	beq	r2,zero,10000180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	e0bffd17 	ldw	r2,-12(fp)
10000140:	100690fa 	slli	r3,r2,3
10000144:	008400f4 	movhi	r2,4099
10000148:	1885883a 	add	r2,r3,r2
1000014c:	10e9b817 	ldw	r3,-22816(r2)
10000150:	e0bffd17 	ldw	r2,-12(fp)
10000154:	100890fa 	slli	r4,r2,3
10000158:	008400f4 	movhi	r2,4099
1000015c:	2085883a 	add	r2,r4,r2
10000160:	10a9b917 	ldw	r2,-22812(r2)
10000164:	1009883a 	mov	r4,r2
10000168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
1000016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
10000170:	0005313a 	rdctl	r2,ipending
10000174:	e0bffb15 	stw	r2,-20(fp)
  return active;
10000178:	e0bffb17 	ldw	r2,-20(fp)
1000017c:	00000706 	br	1000019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
10000180:	e0bffe17 	ldw	r2,-8(fp)
10000184:	1085883a 	add	r2,r2,r2
10000188:	e0bffe15 	stw	r2,-8(fp)
      i++;
1000018c:	e0bffd17 	ldw	r2,-12(fp)
10000190:	10800044 	addi	r2,r2,1
10000194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
10000198:	003fe406 	br	1000012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
1000019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
100001a0:	e0bfff17 	ldw	r2,-4(fp)
100001a4:	103fde1e 	bne	r2,zero,10000120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001a8:	0001883a 	nop
}
100001ac:	0001883a 	nop
100001b0:	e037883a 	mov	sp,fp
100001b4:	dfc00117 	ldw	ra,4(sp)
100001b8:	df000017 	ldw	fp,0(sp)
100001bc:	dec00204 	addi	sp,sp,8
100001c0:	f800283a 	ret

100001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001c4:	defffb04 	addi	sp,sp,-20
100001c8:	dfc00415 	stw	ra,16(sp)
100001cc:	df000315 	stw	fp,12(sp)
100001d0:	df000304 	addi	fp,sp,12
100001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
100001d8:	000531fa 	rdctl	r2,exception
100001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
100001e0:	e0bfff17 	ldw	r2,-4(fp)
100001e4:	1004d0ba 	srli	r2,r2,2
100001e8:	108007cc 	andi	r2,r2,31
100001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
100001f0:	0005333a 	rdctl	r2,badaddr
100001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f8:	d0a7df17 	ldw	r2,-24708(gp)
100001fc:	10000726 	beq	r2,zero,1000021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
10000200:	d0a7df17 	ldw	r2,-24708(gp)
10000204:	e0ffff17 	ldw	r3,-4(fp)
10000208:	e1bffe17 	ldw	r6,-8(fp)
1000020c:	e17ffd17 	ldw	r5,-12(fp)
10000210:	1809883a 	mov	r4,r3
10000214:	103ee83a 	callr	r2
10000218:	00000206 	br	10000224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
1000021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000220:	0005883a 	mov	r2,zero
}
10000224:	e037883a 	mov	sp,fp
10000228:	dfc00117 	ldw	ra,4(sp)
1000022c:	df000017 	ldw	fp,0(sp)
10000230:	dec00204 	addi	sp,sp,8
10000234:	f800283a 	ret

Disassembly of section .text:

10000238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10000238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
1000023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
10000240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10000244:	00bffd16 	blt	zero,r2,1000023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000248:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
1000024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000250:	068400f4 	movhi	gp,4099
    ori gp, gp, %lo(_gp)
10000254:	d6818714 	ori	gp,gp,1564
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000258:	008400b4 	movhi	r2,4098
    ori r2, r2, %lo(__bss_start)
1000025c:	10a95414 	ori	r2,r2,42320

    movhi r3, %hi(__bss_end)
10000260:	00c400b4 	movhi	r3,4098
    ori r3, r3, %lo(__bss_end)
10000264:	18e9f814 	ori	r3,r3,42976

    beq r2, r3, 1f
10000268:	10c00326 	beq	r2,r3,10000278 <_start+0x40>

0:
    stw zero, (r2)
1000026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10000274:	10fffd36 	bltu	r2,r3,1000026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000278:	0022aa80 	call	10022aa8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
1000027c:	0022c3c0 	call	10022c3c <alt_main>

10000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000280:	003fff06 	br	10000280 <alt_after_alt_main>

10000284 <screen_test>:
#include "tile_eng_driver.h"
#include <stdint.h>
#include "system.h"
#include<stdio.h>

void screen_test() {
10000284:	deffc104 	addi	sp,sp,-252
10000288:	dfc03e15 	stw	ra,248(sp)
1000028c:	df003d15 	stw	fp,244(sp)
10000290:	df003d04 	addi	fp,sp,244
	printf("Screen Test is running!");
10000294:	010400b4 	movhi	r4,4098
10000298:	2113c004 	addi	r4,r4,20224
1000029c:	0016fe40 	call	10016fe4 <printf>
	palette_ptr[0b00000] = 0x117180;
100002a0:	00c02004 	movi	r3,128
100002a4:	00800474 	movhi	r2,17
100002a8:	109c6004 	addi	r2,r2,29056
100002ac:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00001] = 0x6EECFF;
100002b0:	00c02104 	movi	r3,132
100002b4:	00801bf4 	movhi	r2,111
100002b8:	10bb3fc4 	addi	r2,r2,-4865
100002bc:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00010] = 0x1BB4CC;
100002c0:	00c02204 	movi	r3,136
100002c4:	00800734 	movhi	r2,28
100002c8:	10ad3304 	addi	r2,r2,-19252
100002cc:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00011] = 0x21E3FF;
100002d0:	00c02304 	movi	r3,140
100002d4:	008008b4 	movhi	r2,34
100002d8:	10b8ffc4 	addi	r2,r2,-7169
100002dc:	18800015 	stw	r2,0(r3)

	Palette newPalette;
	newPalette.paletteId = 1;
100002e0:	00800044 	movi	r2,1
100002e4:	e0bff615 	stw	r2,-40(fp)
	newPalette.colors[0] = 0x723E80;
100002e8:	00801cb4 	movhi	r2,114
100002ec:	108fa004 	addi	r2,r2,16000
100002f0:	e0bff715 	stw	r2,-36(fp)
	newPalette.colors[1] = 0xF3C7FF;
100002f4:	00803d34 	movhi	r2,244
100002f8:	10b1ffc4 	addi	r2,r2,-14337
100002fc:	e0bff815 	stw	r2,-32(fp)
	newPalette.colors[2] = 0x796380;
10000300:	00801e74 	movhi	r2,121
10000304:	1098e004 	addi	r2,r2,25472
10000308:	e0bff915 	stw	r2,-28(fp)
	newPalette.colors[3] = 0xE57DFF;
1000030c:	00803974 	movhi	r2,229
10000310:	109f7fc4 	addi	r2,r2,32255
10000314:	e0bffa15 	stw	r2,-24(fp)
	writePalette(&newPalette);
10000318:	e0bff604 	addi	r2,fp,-40
1000031c:	1009883a 	mov	r4,r2
10000320:	00051180 	call	10005118 <writePalette>

	Palette newPalette2;
	newPalette2.paletteId = 2;
10000324:	00800084 	movi	r2,2
10000328:	e0bff115 	stw	r2,-60(fp)
	newPalette2.colors[0] = 0x2F802E;
1000032c:	00800c34 	movhi	r2,48
10000330:	10a00b84 	addi	r2,r2,-32722
10000334:	e0bff215 	stw	r2,-56(fp)
	newPalette2.colors[3] = 0x5EFF5B;
10000338:	008017f4 	movhi	r2,95
1000033c:	10bfd6c4 	addi	r2,r2,-165
10000340:	e0bff515 	stw	r2,-44(fp)
	writePalette(&newPalette2);
10000344:	e0bff104 	addi	r2,fp,-60
10000348:	1009883a 	mov	r4,r2
1000034c:	00051180 	call	10005118 <writePalette>

	Palette newPalette3;
	newPalette3.paletteId = 3;
10000350:	008000c4 	movi	r2,3
10000354:	e0bfec15 	stw	r2,-80(fp)
	newPalette3.colors[0] = 0x805E1B;
10000358:	00802034 	movhi	r2,128
1000035c:	109786c4 	addi	r2,r2,24091
10000360:	e0bfed15 	stw	r2,-76(fp)
	newPalette3.colors[3] = 0xFFBC36;
10000364:	00804034 	movhi	r2,256
10000368:	10af0d84 	addi	r2,r2,-17354
1000036c:	e0bff015 	stw	r2,-64(fp)
	writePalette(&newPalette3);
10000370:	e0bfec04 	addi	r2,fp,-80
10000374:	1009883a 	mov	r4,r2
10000378:	00051180 	call	10005118 <writePalette>

	Sprite wavey;
	wavey.sprite_id = 0;
1000037c:	e03fe38d 	sth	zero,-114(fp)
	char wavey_mat[16][8] = {
10000380:	e0ffc384 	addi	r3,fp,-242
10000384:	008400b4 	movhi	r2,4098
10000388:	1093cf84 	addi	r2,r2,20286
1000038c:	01002004 	movi	r4,128
10000390:	200d883a 	mov	r6,r4
10000394:	100b883a 	mov	r5,r2
10000398:	1809883a 	mov	r4,r3
1000039c:	0016c340 	call	10016c34 <memcpy>
			"        ",
			"        ",
			"        ",
	};

	parseSprite(&wavey, wavey_mat);
100003a0:	e0ffc384 	addi	r3,fp,-242
100003a4:	e0bfe384 	addi	r2,fp,-114
100003a8:	180b883a 	mov	r5,r3
100003ac:	1009883a 	mov	r4,r2
100003b0:	00052c40 	call	100052c4 <parseSprite>
	for(int i=0;i<15;i++) {
100003b4:	e03fff15 	stw	zero,-4(fp)
100003b8:	00000c06 	br	100003ec <screen_test+0x168>
		printf("%04x\n",wavey.lines[i]);
100003bc:	e0bfff17 	ldw	r2,-4(fp)
100003c0:	1085883a 	add	r2,r2,r2
100003c4:	e085883a 	add	r2,fp,r2
100003c8:	10bfe40b 	ldhu	r2,-112(r2)
100003cc:	10bfffcc 	andi	r2,r2,65535
100003d0:	100b883a 	mov	r5,r2
100003d4:	010400b4 	movhi	r4,4098
100003d8:	2113c604 	addi	r4,r4,20248
100003dc:	0016fe40 	call	10016fe4 <printf>
	for(int i=0;i<15;i++) {
100003e0:	e0bfff17 	ldw	r2,-4(fp)
100003e4:	10800044 	addi	r2,r2,1
100003e8:	e0bfff15 	stw	r2,-4(fp)
100003ec:	e0bfff17 	ldw	r2,-4(fp)
100003f0:	108003d0 	cmplti	r2,r2,15
100003f4:	103ff11e 	bne	r2,zero,100003bc <screen_test+0x138>
	}
	printf("\n\n");
100003f8:	010400b4 	movhi	r4,4098
100003fc:	2113c804 	addi	r4,r4,20256
10000400:	00171080 	call	10017108 <puts>

	writeSprite(&wavey);
10000404:	e0bfe384 	addi	r2,fp,-114
10000408:	1009883a 	mov	r4,r2
1000040c:	000533c0 	call	1000533c <writeSprite>
	printf("\n\n");
10000410:	010400b4 	movhi	r4,4098
10000414:	2113c804 	addi	r4,r4,20256
10000418:	00171080 	call	10017108 <puts>

	for(int i=0;i<8;i++) {
1000041c:	e03ffe15 	stw	zero,-8(fp)
10000420:	00000b06 	br	10000450 <screen_test+0x1cc>
		printf("%08x\n",spriteram_ptr[i]);
10000424:	e0bffe17 	ldw	r2,-8(fp)
10000428:	100490ba 	slli	r2,r2,2
1000042c:	10860004 	addi	r2,r2,6144
10000430:	10800017 	ldw	r2,0(r2)
10000434:	100b883a 	mov	r5,r2
10000438:	010400b4 	movhi	r4,4098
1000043c:	2113c904 	addi	r4,r4,20260
10000440:	0016fe40 	call	10016fe4 <printf>
	for(int i=0;i<8;i++) {
10000444:	e0bffe17 	ldw	r2,-8(fp)
10000448:	10800044 	addi	r2,r2,1
1000044c:	e0bffe15 	stw	r2,-8(fp)
10000450:	e0bffe17 	ldw	r2,-8(fp)
10000454:	10800210 	cmplti	r2,r2,8
10000458:	103ff21e 	bne	r2,zero,10000424 <screen_test+0x1a0>
	}

	// spriteram_ptr[0] = 0xFFFFFFFF;
	// spriteram_ptr[1] = 0xAAAAAAAA;
	uint8_t counter = 0;
1000045c:	e03ffdc5 	stb	zero,-9(fp)
	for(int i=0; i<80; i++) {
10000460:	e03ffc15 	stw	zero,-16(fp)
10000464:	00001606 	br	100004c0 <screen_test+0x23c>
		for(int j=0; j<30; j++) {
10000468:	e03ffb15 	stw	zero,-20(fp)
1000046c:	00000e06 	br	100004a8 <screen_test+0x224>
			drawTile(i,j,counter&0x03,128);
10000470:	e0bffdc3 	ldbu	r2,-9(fp)
10000474:	108000cc 	andi	r2,r2,3
10000478:	01c02004 	movi	r7,128
1000047c:	100d883a 	mov	r6,r2
10000480:	e17ffb17 	ldw	r5,-20(fp)
10000484:	e13ffc17 	ldw	r4,-16(fp)
10000488:	0004fec0 	call	10004fec <drawTile>
			counter = (counter+1) & 0x7F;
1000048c:	e0bffdc3 	ldbu	r2,-9(fp)
10000490:	10800044 	addi	r2,r2,1
10000494:	10801fcc 	andi	r2,r2,127
10000498:	e0bffdc5 	stb	r2,-9(fp)
		for(int j=0; j<30; j++) {
1000049c:	e0bffb17 	ldw	r2,-20(fp)
100004a0:	10800044 	addi	r2,r2,1
100004a4:	e0bffb15 	stw	r2,-20(fp)
100004a8:	e0bffb17 	ldw	r2,-20(fp)
100004ac:	10800790 	cmplti	r2,r2,30
100004b0:	103fef1e 	bne	r2,zero,10000470 <screen_test+0x1ec>
	for(int i=0; i<80; i++) {
100004b4:	e0bffc17 	ldw	r2,-16(fp)
100004b8:	10800044 	addi	r2,r2,1
100004bc:	e0bffc15 	stw	r2,-16(fp)
100004c0:	e0bffc17 	ldw	r2,-16(fp)
100004c4:	10801410 	cmplti	r2,r2,80
100004c8:	103fe71e 	bne	r2,zero,10000468 <screen_test+0x1e4>
		}
	}

	writeText(0,0,"Score",0);
100004cc:	000f883a 	mov	r7,zero
100004d0:	018400b4 	movhi	r6,4098
100004d4:	3193cb04 	addi	r6,r6,20268
100004d8:	000b883a 	mov	r5,zero
100004dc:	0009883a 	mov	r4,zero
100004e0:	00054100 	call	10005410 <writeText>
	writeText(0,2,"Highscore",0);
100004e4:	000f883a 	mov	r7,zero
100004e8:	018400b4 	movhi	r6,4098
100004ec:	3193cd04 	addi	r6,r6,20276
100004f0:	01400084 	movi	r5,2
100004f4:	0009883a 	mov	r4,zero
100004f8:	00054100 	call	10005410 <writeText>
}
100004fc:	0001883a 	nop
10000500:	e037883a 	mov	sp,fp
10000504:	dfc00117 	ldw	ra,4(sp)
10000508:	df000017 	ldw	fp,0(sp)
1000050c:	dec00204 	addi	sp,sp,8
10000510:	f800283a 	ret

10000514 <IO_init>:
//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
10000514:	defffe04 	addi	sp,sp,-8
10000518:	dfc00115 	stw	ra,4(sp)
1000051c:	df000015 	stw	fp,0(sp)
10000520:	d839883a 	mov	fp,sp
	printf("Check A");
10000524:	010400b4 	movhi	r4,4098
10000528:	2113f004 	addi	r4,r4,20416
1000052c:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_reset = 1;
10000530:	00801004 	movi	r2,64
10000534:	00c00044 	movi	r3,1
10000538:	10c00005 	stb	r3,0(r2)
	printf("Check B");
1000053c:	010400b4 	movhi	r4,4098
10000540:	2113f204 	addi	r4,r4,20424
10000544:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_cs = 1;
10000548:	00800404 	movi	r2,16
1000054c:	00c00044 	movi	r3,1
10000550:	10c00005 	stb	r3,0(r2)
	printf("Check C");
10000554:	010400b4 	movhi	r4,4098
10000558:	2113f404 	addi	r4,r4,20432
1000055c:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_r = 1;
10000560:	00800804 	movi	r2,32
10000564:	00c00044 	movi	r3,1
10000568:	10c00005 	stb	r3,0(r2)
	printf("Check D");
1000056c:	010400b4 	movhi	r4,4098
10000570:	2113f604 	addi	r4,r4,20440
10000574:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_w = 1;
10000578:	00800c04 	movi	r2,48
1000057c:	00c00044 	movi	r3,1
10000580:	10c00005 	stb	r3,0(r2)
	printf("Check E");
10000584:	010400b4 	movhi	r4,4098
10000588:	2113f804 	addi	r4,r4,20448
1000058c:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_address = 0;
10000590:	00801404 	movi	r2,80
10000594:	10000015 	stw	zero,0(r2)
	printf("Check F");
10000598:	010400b4 	movhi	r4,4098
1000059c:	2113fa04 	addi	r4,r4,20456
100005a0:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_data = 0;
100005a4:	00801804 	movi	r2,96
100005a8:	10000015 	stw	zero,0(r2)
	// Reset OTG chip
	*otg_hpi_cs = 0;
100005ac:	00800404 	movi	r2,16
100005b0:	10000005 	stb	zero,0(r2)
	printf("Check G");
100005b4:	010400b4 	movhi	r4,4098
100005b8:	2113fc04 	addi	r4,r4,20464
100005bc:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_reset = 0;
100005c0:	00801004 	movi	r2,64
100005c4:	10000005 	stb	zero,0(r2)
	printf("Check H");
100005c8:	010400b4 	movhi	r4,4098
100005cc:	2113fe04 	addi	r4,r4,20472
100005d0:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_reset = 1;
100005d4:	00801004 	movi	r2,64
100005d8:	00c00044 	movi	r3,1
100005dc:	10c00005 	stb	r3,0(r2)
	printf("Check I");
100005e0:	010400b4 	movhi	r4,4098
100005e4:	21140004 	addi	r4,r4,20480
100005e8:	0016fe40 	call	10016fe4 <printf>
	*otg_hpi_cs = 1;
100005ec:	00800404 	movi	r2,16
100005f0:	00c00044 	movi	r3,1
100005f4:	10c00005 	stb	r3,0(r2)
}
100005f8:	0001883a 	nop
100005fc:	e037883a 	mov	sp,fp
10000600:	dfc00117 	ldw	ra,4(sp)
10000604:	df000017 	ldw	fp,0(sp)
10000608:	dec00204 	addi	sp,sp,8
1000060c:	f800283a 	ret

10000610 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data)
{
10000610:	defffd04 	addi	sp,sp,-12
10000614:	df000215 	stw	fp,8(sp)
10000618:	df000204 	addi	fp,sp,8
1000061c:	2005883a 	mov	r2,r4
10000620:	2807883a 	mov	r3,r5
10000624:	e0bfff05 	stb	r2,-4(fp)
10000628:	1805883a 	mov	r2,r3
1000062c:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
10000630:	00801404 	movi	r2,80
10000634:	e0ffff03 	ldbu	r3,-4(fp)
10000638:	10c00015 	stw	r3,0(r2)
	*otg_hpi_data = Data;
1000063c:	00801804 	movi	r2,96
10000640:	e0fffe0b 	ldhu	r3,-8(fp)
10000644:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
10000648:	00800404 	movi	r2,16
1000064c:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0;
10000650:	00800c04 	movi	r2,48
10000654:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 1;
10000658:	00800c04 	movi	r2,48
1000065c:	00c00044 	movi	r3,1
10000660:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
10000664:	00800404 	movi	r2,16
10000668:	00c00044 	movi	r3,1
1000066c:	10c00005 	stb	r3,0(r2)
	//printf("Wrote %x to HPI %d\n", Data, Address);
}
10000670:	0001883a 	nop
10000674:	e037883a 	mov	sp,fp
10000678:	df000017 	ldw	fp,0(sp)
1000067c:	dec00104 	addi	sp,sp,4
10000680:	f800283a 	ret

10000684 <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
10000684:	defffd04 	addi	sp,sp,-12
10000688:	df000215 	stw	fp,8(sp)
1000068c:	df000204 	addi	fp,sp,8
10000690:	2005883a 	mov	r2,r4
10000694:	e0bffe05 	stb	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
10000698:	00801404 	movi	r2,80
1000069c:	e0fffe03 	ldbu	r3,-8(fp)
100006a0:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
100006a4:	00800404 	movi	r2,16
100006a8:	10000005 	stb	zero,0(r2)
	*otg_hpi_r = 0;
100006ac:	00800804 	movi	r2,32
100006b0:	10000005 	stb	zero,0(r2)
	temp = *otg_hpi_data;
100006b4:	00801804 	movi	r2,96
100006b8:	10800017 	ldw	r2,0(r2)
100006bc:	e0bfff8d 	sth	r2,-2(fp)
	*otg_hpi_r = 1;
100006c0:	00800804 	movi	r2,32
100006c4:	00c00044 	movi	r3,1
100006c8:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
100006cc:	00800404 	movi	r2,16
100006d0:	00c00044 	movi	r3,1
100006d4:	10c00005 	stb	r3,0(r2)
	//printf("%x\n",temp);
	//printf("Read %x from HPI %d\n", temp, Address);
	return temp;
100006d8:	e0bfff8b 	ldhu	r2,-2(fp)
}
100006dc:	e037883a 	mov	sp,fp
100006e0:	df000017 	ldw	fp,0(sp)
100006e4:	dec00104 	addi	sp,sp,4
100006e8:	f800283a 	ret

100006ec <init_game>:
// In the board configuration, it contains additional PLAYER_POS, GHOST_INKY, GHOST_BLINKY, GHOST_CLYDE and GHOST_PINKY.
// These values are only used for initialization.

// Initialize a game.
// The game variable must already have space allocated.
void init_game(Game* game) {
100006ec:	defffc04 	addi	sp,sp,-16
100006f0:	dfc00315 	stw	ra,12(sp)
100006f4:	df000215 	stw	fp,8(sp)
100006f8:	df000204 	addi	fp,sp,8
100006fc:	e13ffe15 	stw	r4,-8(fp)
    uint8_t current_board = game->current_board;
10000700:	e0bffe17 	ldw	r2,-8(fp)
10000704:	1080e103 	ldbu	r2,900(r2)
10000708:	e0bfff45 	stb	r2,-3(fp)
    if(current_board >= _BOARD_COUNT) {
1000070c:	e0bfff43 	ldbu	r2,-3(fp)
10000710:	10000426 	beq	r2,zero,10000724 <init_game+0x38>
    	game->state = WON;
10000714:	e0bffe17 	ldw	r2,-8(fp)
10000718:	00c000c4 	movi	r3,3
1000071c:	10c0e915 	stw	r3,932(r2)
    	return;
10000720:	00011806 	br	10000b84 <init_game+0x498>
    }

    initScreen();
10000724:	000361c0 	call	1000361c <initScreen>
    game->candy_count = 0;
10000728:	e0bffe17 	ldw	r2,-8(fp)
1000072c:	1000ea0d 	sth	zero,936(r2)
    game->state = PREINIT;
10000730:	e0bffe17 	ldw	r2,-8(fp)
10000734:	1000e915 	stw	zero,932(r2)
    game->player.invincible = 0;
10000738:	e0bffe17 	ldw	r2,-8(fp)
1000073c:	1000e28d 	sth	zero,906(r2)
    game->blinky.revive_cntdown = 0;
10000740:	e0bffe17 	ldw	r2,-8(fp)
10000744:	1000e40d 	sth	zero,912(r2)
    game->pinky.revive_cntdown = 0;
10000748:	e0bffe17 	ldw	r2,-8(fp)
1000074c:	1000e58d 	sth	zero,918(r2)
    game->inky.revive_cntdown = 0;
10000750:	e0bffe17 	ldw	r2,-8(fp)
10000754:	1000e70d 	sth	zero,924(r2)
    game->clyde.revive_cntdown = 0;
10000758:	e0bffe17 	ldw	r2,-8(fp)
1000075c:	1000e88d 	sth	zero,930(r2)

    // Find tiles in this map and assign them.
    uint8_t i, j;
    for(i=0; i<15; i+=1) {
10000760:	e03fffc5 	stb	zero,-1(fp)
10000764:	00010106 	br	10000b6c <init_game+0x480>
        for(j=0; j<15; j+=1) {
10000768:	e03fff85 	stb	zero,-2(fp)
1000076c:	0000f906 	br	10000b54 <init_game+0x468>
            if(GAME_BOARDS[current_board][i][j] == PLAYER_POS) {
10000770:	e0ffff43 	ldbu	r3,-3(fp)
10000774:	e13fffc3 	ldbu	r4,-1(fp)
10000778:	e0bfff83 	ldbu	r2,-2(fp)
1000077c:	210003e4 	muli	r4,r4,15
10000780:	18c03864 	muli	r3,r3,225
10000784:	20c7883a 	add	r3,r4,r3
10000788:	1887883a 	add	r3,r3,r2
1000078c:	008400b4 	movhi	r2,4098
10000790:	1885883a 	add	r2,r3,r2
10000794:	1099f603 	ldbu	r2,26584(r2)
10000798:	10803fcc 	andi	r2,r2,255
1000079c:	10800218 	cmpnei	r2,r2,8
100007a0:	1000161e 	bne	r2,zero,100007fc <init_game+0x110>
                game->player.xpos = i;
100007a4:	e0bffe17 	ldw	r2,-8(fp)
100007a8:	e0ffffc3 	ldbu	r3,-1(fp)
100007ac:	10c0e185 	stb	r3,902(r2)
                game->player.ypos = j;
100007b0:	e0bffe17 	ldw	r2,-8(fp)
100007b4:	e0ffff83 	ldbu	r3,-2(fp)
100007b8:	10c0e1c5 	stb	r3,903(r2)
                game->game_map[i][j] = CANDY;
100007bc:	e13fffc3 	ldbu	r4,-1(fp)
100007c0:	e0bfff83 	ldbu	r2,-2(fp)
100007c4:	e0fffe17 	ldw	r3,-8(fp)
100007c8:	210003e4 	muli	r4,r4,15
100007cc:	2085883a 	add	r2,r4,r2
100007d0:	100490ba 	slli	r2,r2,2
100007d4:	1885883a 	add	r2,r3,r2
100007d8:	00c00044 	movi	r3,1
100007dc:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100007e0:	e0bffe17 	ldw	r2,-8(fp)
100007e4:	1080ea0b 	ldhu	r2,936(r2)
100007e8:	10800044 	addi	r2,r2,1
100007ec:	1007883a 	mov	r3,r2
100007f0:	e0bffe17 	ldw	r2,-8(fp)
100007f4:	10c0ea0d 	sth	r3,936(r2)
100007f8:	0000d306 	br	10000b48 <init_game+0x45c>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_BLINKY) {
100007fc:	e0ffff43 	ldbu	r3,-3(fp)
10000800:	e13fffc3 	ldbu	r4,-1(fp)
10000804:	e0bfff83 	ldbu	r2,-2(fp)
10000808:	210003e4 	muli	r4,r4,15
1000080c:	18c03864 	muli	r3,r3,225
10000810:	20c7883a 	add	r3,r4,r3
10000814:	1887883a 	add	r3,r3,r2
10000818:	008400b4 	movhi	r2,4098
1000081c:	1885883a 	add	r2,r3,r2
10000820:	1099f603 	ldbu	r2,26584(r2)
10000824:	10803fcc 	andi	r2,r2,255
10000828:	10800118 	cmpnei	r2,r2,4
1000082c:	1000161e 	bne	r2,zero,10000888 <init_game+0x19c>
                game->blinky.xpos = i;
10000830:	e0bffe17 	ldw	r2,-8(fp)
10000834:	e0ffffc3 	ldbu	r3,-1(fp)
10000838:	10c0e305 	stb	r3,908(r2)
                game->blinky.ypos = j;
1000083c:	e0bffe17 	ldw	r2,-8(fp)
10000840:	e0ffff83 	ldbu	r3,-2(fp)
10000844:	10c0e345 	stb	r3,909(r2)
                game->game_map[i][j] = CANDY;
10000848:	e13fffc3 	ldbu	r4,-1(fp)
1000084c:	e0bfff83 	ldbu	r2,-2(fp)
10000850:	e0fffe17 	ldw	r3,-8(fp)
10000854:	210003e4 	muli	r4,r4,15
10000858:	2085883a 	add	r2,r4,r2
1000085c:	100490ba 	slli	r2,r2,2
10000860:	1885883a 	add	r2,r3,r2
10000864:	00c00044 	movi	r3,1
10000868:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
1000086c:	e0bffe17 	ldw	r2,-8(fp)
10000870:	1080ea0b 	ldhu	r2,936(r2)
10000874:	10800044 	addi	r2,r2,1
10000878:	1007883a 	mov	r3,r2
1000087c:	e0bffe17 	ldw	r2,-8(fp)
10000880:	10c0ea0d 	sth	r3,936(r2)
10000884:	0000b006 	br	10000b48 <init_game+0x45c>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_PINKY) {
10000888:	e0ffff43 	ldbu	r3,-3(fp)
1000088c:	e13fffc3 	ldbu	r4,-1(fp)
10000890:	e0bfff83 	ldbu	r2,-2(fp)
10000894:	210003e4 	muli	r4,r4,15
10000898:	18c03864 	muli	r3,r3,225
1000089c:	20c7883a 	add	r3,r4,r3
100008a0:	1887883a 	add	r3,r3,r2
100008a4:	008400b4 	movhi	r2,4098
100008a8:	1885883a 	add	r2,r3,r2
100008ac:	1099f603 	ldbu	r2,26584(r2)
100008b0:	10803fcc 	andi	r2,r2,255
100008b4:	10800158 	cmpnei	r2,r2,5
100008b8:	1000161e 	bne	r2,zero,10000914 <init_game+0x228>
                game->pinky.xpos = i;
100008bc:	e0bffe17 	ldw	r2,-8(fp)
100008c0:	e0ffffc3 	ldbu	r3,-1(fp)
100008c4:	10c0e485 	stb	r3,914(r2)
                game->pinky.ypos = j;
100008c8:	e0bffe17 	ldw	r2,-8(fp)
100008cc:	e0ffff83 	ldbu	r3,-2(fp)
100008d0:	10c0e4c5 	stb	r3,915(r2)
                game->game_map[i][j] = CANDY;
100008d4:	e13fffc3 	ldbu	r4,-1(fp)
100008d8:	e0bfff83 	ldbu	r2,-2(fp)
100008dc:	e0fffe17 	ldw	r3,-8(fp)
100008e0:	210003e4 	muli	r4,r4,15
100008e4:	2085883a 	add	r2,r4,r2
100008e8:	100490ba 	slli	r2,r2,2
100008ec:	1885883a 	add	r2,r3,r2
100008f0:	00c00044 	movi	r3,1
100008f4:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100008f8:	e0bffe17 	ldw	r2,-8(fp)
100008fc:	1080ea0b 	ldhu	r2,936(r2)
10000900:	10800044 	addi	r2,r2,1
10000904:	1007883a 	mov	r3,r2
10000908:	e0bffe17 	ldw	r2,-8(fp)
1000090c:	10c0ea0d 	sth	r3,936(r2)
10000910:	00008d06 	br	10000b48 <init_game+0x45c>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_INKY) {
10000914:	e0ffff43 	ldbu	r3,-3(fp)
10000918:	e13fffc3 	ldbu	r4,-1(fp)
1000091c:	e0bfff83 	ldbu	r2,-2(fp)
10000920:	210003e4 	muli	r4,r4,15
10000924:	18c03864 	muli	r3,r3,225
10000928:	20c7883a 	add	r3,r4,r3
1000092c:	1887883a 	add	r3,r3,r2
10000930:	008400b4 	movhi	r2,4098
10000934:	1885883a 	add	r2,r3,r2
10000938:	1099f603 	ldbu	r2,26584(r2)
1000093c:	10803fcc 	andi	r2,r2,255
10000940:	10800198 	cmpnei	r2,r2,6
10000944:	1000161e 	bne	r2,zero,100009a0 <init_game+0x2b4>
                game->inky.xpos = i;
10000948:	e0bffe17 	ldw	r2,-8(fp)
1000094c:	e0ffffc3 	ldbu	r3,-1(fp)
10000950:	10c0e605 	stb	r3,920(r2)
                game->inky.ypos = j;
10000954:	e0bffe17 	ldw	r2,-8(fp)
10000958:	e0ffff83 	ldbu	r3,-2(fp)
1000095c:	10c0e645 	stb	r3,921(r2)
                game->game_map[i][j] = CANDY;
10000960:	e13fffc3 	ldbu	r4,-1(fp)
10000964:	e0bfff83 	ldbu	r2,-2(fp)
10000968:	e0fffe17 	ldw	r3,-8(fp)
1000096c:	210003e4 	muli	r4,r4,15
10000970:	2085883a 	add	r2,r4,r2
10000974:	100490ba 	slli	r2,r2,2
10000978:	1885883a 	add	r2,r3,r2
1000097c:	00c00044 	movi	r3,1
10000980:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
10000984:	e0bffe17 	ldw	r2,-8(fp)
10000988:	1080ea0b 	ldhu	r2,936(r2)
1000098c:	10800044 	addi	r2,r2,1
10000990:	1007883a 	mov	r3,r2
10000994:	e0bffe17 	ldw	r2,-8(fp)
10000998:	10c0ea0d 	sth	r3,936(r2)
1000099c:	00006a06 	br	10000b48 <init_game+0x45c>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_CLYDE) {
100009a0:	e0ffff43 	ldbu	r3,-3(fp)
100009a4:	e13fffc3 	ldbu	r4,-1(fp)
100009a8:	e0bfff83 	ldbu	r2,-2(fp)
100009ac:	210003e4 	muli	r4,r4,15
100009b0:	18c03864 	muli	r3,r3,225
100009b4:	20c7883a 	add	r3,r4,r3
100009b8:	1887883a 	add	r3,r3,r2
100009bc:	008400b4 	movhi	r2,4098
100009c0:	1885883a 	add	r2,r3,r2
100009c4:	1099f603 	ldbu	r2,26584(r2)
100009c8:	10803fcc 	andi	r2,r2,255
100009cc:	108001d8 	cmpnei	r2,r2,7
100009d0:	1000161e 	bne	r2,zero,10000a2c <init_game+0x340>
                game->clyde.xpos = i;
100009d4:	e0bffe17 	ldw	r2,-8(fp)
100009d8:	e0ffffc3 	ldbu	r3,-1(fp)
100009dc:	10c0e785 	stb	r3,926(r2)
                game->clyde.ypos = j;
100009e0:	e0bffe17 	ldw	r2,-8(fp)
100009e4:	e0ffff83 	ldbu	r3,-2(fp)
100009e8:	10c0e7c5 	stb	r3,927(r2)
                game->game_map[i][j] = CANDY;
100009ec:	e13fffc3 	ldbu	r4,-1(fp)
100009f0:	e0bfff83 	ldbu	r2,-2(fp)
100009f4:	e0fffe17 	ldw	r3,-8(fp)
100009f8:	210003e4 	muli	r4,r4,15
100009fc:	2085883a 	add	r2,r4,r2
10000a00:	100490ba 	slli	r2,r2,2
10000a04:	1885883a 	add	r2,r3,r2
10000a08:	00c00044 	movi	r3,1
10000a0c:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
10000a10:	e0bffe17 	ldw	r2,-8(fp)
10000a14:	1080ea0b 	ldhu	r2,936(r2)
10000a18:	10800044 	addi	r2,r2,1
10000a1c:	1007883a 	mov	r3,r2
10000a20:	e0bffe17 	ldw	r2,-8(fp)
10000a24:	10c0ea0d 	sth	r3,936(r2)
10000a28:	00004706 	br	10000b48 <init_game+0x45c>
            } else if(GAME_BOARDS[current_board][i][j] == CANDY || GAME_BOARDS[current_board][i][j] == SUPER) {
10000a2c:	e0ffff43 	ldbu	r3,-3(fp)
10000a30:	e13fffc3 	ldbu	r4,-1(fp)
10000a34:	e0bfff83 	ldbu	r2,-2(fp)
10000a38:	210003e4 	muli	r4,r4,15
10000a3c:	18c03864 	muli	r3,r3,225
10000a40:	20c7883a 	add	r3,r4,r3
10000a44:	1887883a 	add	r3,r3,r2
10000a48:	008400b4 	movhi	r2,4098
10000a4c:	1885883a 	add	r2,r3,r2
10000a50:	1099f603 	ldbu	r2,26584(r2)
10000a54:	10803fcc 	andi	r2,r2,255
10000a58:	10800060 	cmpeqi	r2,r2,1
10000a5c:	10000d1e 	bne	r2,zero,10000a94 <init_game+0x3a8>
10000a60:	e0ffff43 	ldbu	r3,-3(fp)
10000a64:	e13fffc3 	ldbu	r4,-1(fp)
10000a68:	e0bfff83 	ldbu	r2,-2(fp)
10000a6c:	210003e4 	muli	r4,r4,15
10000a70:	18c03864 	muli	r3,r3,225
10000a74:	20c7883a 	add	r3,r4,r3
10000a78:	1887883a 	add	r3,r3,r2
10000a7c:	008400b4 	movhi	r2,4098
10000a80:	1885883a 	add	r2,r3,r2
10000a84:	1099f603 	ldbu	r2,26584(r2)
10000a88:	10803fcc 	andi	r2,r2,255
10000a8c:	10800098 	cmpnei	r2,r2,2
10000a90:	10001a1e 	bne	r2,zero,10000afc <init_game+0x410>
                game->candy_count += 1;
10000a94:	e0bffe17 	ldw	r2,-8(fp)
10000a98:	1080ea0b 	ldhu	r2,936(r2)
10000a9c:	10800044 	addi	r2,r2,1
10000aa0:	1007883a 	mov	r3,r2
10000aa4:	e0bffe17 	ldw	r2,-8(fp)
10000aa8:	10c0ea0d 	sth	r3,936(r2)
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
10000aac:	e0ffff43 	ldbu	r3,-3(fp)
10000ab0:	e13fffc3 	ldbu	r4,-1(fp)
10000ab4:	e0bfff83 	ldbu	r2,-2(fp)
10000ab8:	210003e4 	muli	r4,r4,15
10000abc:	18c03864 	muli	r3,r3,225
10000ac0:	20c7883a 	add	r3,r4,r3
10000ac4:	1887883a 	add	r3,r3,r2
10000ac8:	008400b4 	movhi	r2,4098
10000acc:	1885883a 	add	r2,r3,r2
10000ad0:	10d9f603 	ldbu	r3,26584(r2)
10000ad4:	e17fffc3 	ldbu	r5,-1(fp)
10000ad8:	e0bfff83 	ldbu	r2,-2(fp)
10000adc:	18c03fcc 	andi	r3,r3,255
10000ae0:	e13ffe17 	ldw	r4,-8(fp)
10000ae4:	294003e4 	muli	r5,r5,15
10000ae8:	2885883a 	add	r2,r5,r2
10000aec:	100490ba 	slli	r2,r2,2
10000af0:	2085883a 	add	r2,r4,r2
10000af4:	10c00015 	stw	r3,0(r2)
10000af8:	00001306 	br	10000b48 <init_game+0x45c>
            } else {    // WALL and WAY.
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
10000afc:	e0ffff43 	ldbu	r3,-3(fp)
10000b00:	e13fffc3 	ldbu	r4,-1(fp)
10000b04:	e0bfff83 	ldbu	r2,-2(fp)
10000b08:	210003e4 	muli	r4,r4,15
10000b0c:	18c03864 	muli	r3,r3,225
10000b10:	20c7883a 	add	r3,r4,r3
10000b14:	1887883a 	add	r3,r3,r2
10000b18:	008400b4 	movhi	r2,4098
10000b1c:	1885883a 	add	r2,r3,r2
10000b20:	10d9f603 	ldbu	r3,26584(r2)
10000b24:	e17fffc3 	ldbu	r5,-1(fp)
10000b28:	e0bfff83 	ldbu	r2,-2(fp)
10000b2c:	18c03fcc 	andi	r3,r3,255
10000b30:	e13ffe17 	ldw	r4,-8(fp)
10000b34:	294003e4 	muli	r5,r5,15
10000b38:	2885883a 	add	r2,r5,r2
10000b3c:	100490ba 	slli	r2,r2,2
10000b40:	2085883a 	add	r2,r4,r2
10000b44:	10c00015 	stw	r3,0(r2)
        for(j=0; j<15; j+=1) {
10000b48:	e0bfff83 	ldbu	r2,-2(fp)
10000b4c:	10800044 	addi	r2,r2,1
10000b50:	e0bfff85 	stb	r2,-2(fp)
10000b54:	e0bfff83 	ldbu	r2,-2(fp)
10000b58:	108003f0 	cmpltui	r2,r2,15
10000b5c:	103f041e 	bne	r2,zero,10000770 <init_game+0x84>
    for(i=0; i<15; i+=1) {
10000b60:	e0bfffc3 	ldbu	r2,-1(fp)
10000b64:	10800044 	addi	r2,r2,1
10000b68:	e0bfffc5 	stb	r2,-1(fp)
10000b6c:	e0bfffc3 	ldbu	r2,-1(fp)
10000b70:	108003f0 	cmpltui	r2,r2,15
10000b74:	103efc1e 	bne	r2,zero,10000768 <init_game+0x7c>
            }
        }
    }

    game->state = PLAYING;
10000b78:	e0bffe17 	ldw	r2,-8(fp)
10000b7c:	00c00044 	movi	r3,1
10000b80:	10c0e915 	stw	r3,932(r2)
}
10000b84:	e037883a 	mov	sp,fp
10000b88:	dfc00117 	ldw	ra,4(sp)
10000b8c:	df000017 	ldw	fp,0(sp)
10000b90:	dec00204 	addi	sp,sp,8
10000b94:	f800283a 	ret

10000b98 <tickgame>:

void tickgame(Game* board, char keypress) {
10000b98:	defffa04 	addi	sp,sp,-24
10000b9c:	dfc00515 	stw	ra,20(sp)
10000ba0:	df000415 	stw	fp,16(sp)
10000ba4:	df000404 	addi	fp,sp,16
10000ba8:	e13ffd15 	stw	r4,-12(fp)
10000bac:	2805883a 	mov	r2,r5
10000bb0:	e0bffc05 	stb	r2,-16(fp)
    if(board->state!=PLAYING) return;
10000bb4:	e0bffd17 	ldw	r2,-12(fp)
10000bb8:	1080e917 	ldw	r2,932(r2)
10000bbc:	10800060 	cmpeqi	r2,r2,1
10000bc0:	1001a826 	beq	r2,zero,10001264 <tickgame+0x6cc>
    // Move the player
    int16_t new_xpos = board->player.xpos;
10000bc4:	e0bffd17 	ldw	r2,-12(fp)
10000bc8:	1080e183 	ldbu	r2,902(r2)
10000bcc:	10803fcc 	andi	r2,r2,255
10000bd0:	e0bfff8d 	sth	r2,-2(fp)
    int16_t new_ypos = board->player.ypos;
10000bd4:	e0bffd17 	ldw	r2,-12(fp)
10000bd8:	1080e1c3 	ldbu	r2,903(r2)
10000bdc:	10803fcc 	andi	r2,r2,255
10000be0:	e0bfff0d 	sth	r2,-4(fp)
    bool player_moved = false;
10000be4:	e03ffec5 	stb	zero,-5(fp)

    switch(keypress) {
10000be8:	e0bffc07 	ldb	r2,-16(fp)
10000bec:	10bfefc4 	addi	r2,r2,-65
10000bf0:	10c00de8 	cmpgeui	r3,r2,55
10000bf4:	1800531e 	bne	r3,zero,10000d44 <tickgame+0x1ac>
10000bf8:	100690ba 	slli	r3,r2,2
10000bfc:	00840034 	movhi	r2,4096
10000c00:	1885883a 	add	r2,r3,r2
10000c04:	10830317 	ldw	r2,3084(r2)
10000c08:	1000683a 	jmp	r2
10000c0c:	10000d18 	cmpnei	zero,r2,52
10000c10:	10000d44 	addi	zero,r2,53
10000c14:	10000d44 	addi	zero,r2,53
10000c18:	10000d30 	cmpltui	zero,r2,52
10000c1c:	10000d44 	addi	zero,r2,53
10000c20:	10000d44 	addi	zero,r2,53
10000c24:	10000d44 	addi	zero,r2,53
10000c28:	10000d44 	addi	zero,r2,53
10000c2c:	10000d44 	addi	zero,r2,53
10000c30:	10000d44 	addi	zero,r2,53
10000c34:	10000d44 	addi	zero,r2,53
10000c38:	10000d44 	addi	zero,r2,53
10000c3c:	10000d44 	addi	zero,r2,53
10000c40:	10000d44 	addi	zero,r2,53
10000c44:	10000d44 	addi	zero,r2,53
10000c48:	10000d44 	addi	zero,r2,53
10000c4c:	10000d44 	addi	zero,r2,53
10000c50:	10000d44 	addi	zero,r2,53
10000c54:	10000d00 	call	110000d0 <_gp+0xfcfab4>
10000c58:	10000d44 	addi	zero,r2,53
10000c5c:	10000d44 	addi	zero,r2,53
10000c60:	10000d44 	addi	zero,r2,53
10000c64:	10000ce8 	cmpgeui	zero,r2,51
10000c68:	10000d44 	addi	zero,r2,53
10000c6c:	10000d44 	addi	zero,r2,53
10000c70:	10000d44 	addi	zero,r2,53
10000c74:	10000d44 	addi	zero,r2,53
10000c78:	10000d44 	addi	zero,r2,53
10000c7c:	10000d44 	addi	zero,r2,53
10000c80:	10000d44 	addi	zero,r2,53
10000c84:	10000d44 	addi	zero,r2,53
10000c88:	10000d44 	addi	zero,r2,53
10000c8c:	10000d18 	cmpnei	zero,r2,52
10000c90:	10000d44 	addi	zero,r2,53
10000c94:	10000d44 	addi	zero,r2,53
10000c98:	10000d30 	cmpltui	zero,r2,52
10000c9c:	10000d44 	addi	zero,r2,53
10000ca0:	10000d44 	addi	zero,r2,53
10000ca4:	10000d44 	addi	zero,r2,53
10000ca8:	10000d44 	addi	zero,r2,53
10000cac:	10000d44 	addi	zero,r2,53
10000cb0:	10000d44 	addi	zero,r2,53
10000cb4:	10000d44 	addi	zero,r2,53
10000cb8:	10000d44 	addi	zero,r2,53
10000cbc:	10000d44 	addi	zero,r2,53
10000cc0:	10000d44 	addi	zero,r2,53
10000cc4:	10000d44 	addi	zero,r2,53
10000cc8:	10000d44 	addi	zero,r2,53
10000ccc:	10000d44 	addi	zero,r2,53
10000cd0:	10000d44 	addi	zero,r2,53
10000cd4:	10000d00 	call	110000d0 <_gp+0xfcfab4>
10000cd8:	10000d44 	addi	zero,r2,53
10000cdc:	10000d44 	addi	zero,r2,53
10000ce0:	10000d44 	addi	zero,r2,53
10000ce4:	10000ce8 	cmpgeui	zero,r2,51
        case 'w':
        case 'W':
            new_xpos -= 1;
10000ce8:	e0bfff8b 	ldhu	r2,-2(fp)
10000cec:	10bfffc4 	addi	r2,r2,-1
10000cf0:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
10000cf4:	00800044 	movi	r2,1
10000cf8:	e0bffec5 	stb	r2,-5(fp)
            break;
10000cfc:	00001106 	br	10000d44 <tickgame+0x1ac>
        case 'S':
        case 's':
            new_xpos += 1;
10000d00:	e0bfff8b 	ldhu	r2,-2(fp)
10000d04:	10800044 	addi	r2,r2,1
10000d08:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
10000d0c:	00800044 	movi	r2,1
10000d10:	e0bffec5 	stb	r2,-5(fp)
            break;
10000d14:	00000b06 	br	10000d44 <tickgame+0x1ac>
        case 'A':
        case 'a':
            new_ypos -= 1;
10000d18:	e0bfff0b 	ldhu	r2,-4(fp)
10000d1c:	10bfffc4 	addi	r2,r2,-1
10000d20:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10000d24:	00800044 	movi	r2,1
10000d28:	e0bffec5 	stb	r2,-5(fp)
            break;
10000d2c:	00000506 	br	10000d44 <tickgame+0x1ac>
        case 'D':
        case 'd':
            new_ypos += 1;
10000d30:	e0bfff0b 	ldhu	r2,-4(fp)
10000d34:	10800044 	addi	r2,r2,1
10000d38:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10000d3c:	00800044 	movi	r2,1
10000d40:	e0bffec5 	stb	r2,-5(fp)
    }
    // Now check if the new coordinate is legal.
    new_xpos = (new_xpos + _BOARD_H) % _BOARD_H;
10000d44:	e0bfff8f 	ldh	r2,-2(fp)
10000d48:	108003c4 	addi	r2,r2,15
10000d4c:	00c003c4 	movi	r3,15
10000d50:	10c7283a 	div	r3,r2,r3
10000d54:	18c003e4 	muli	r3,r3,15
10000d58:	10c5c83a 	sub	r2,r2,r3
10000d5c:	e0bfff8d 	sth	r2,-2(fp)
    new_ypos = (new_ypos + _BOARD_W) % _BOARD_W;
10000d60:	e0bfff0f 	ldh	r2,-4(fp)
10000d64:	108003c4 	addi	r2,r2,15
10000d68:	00c003c4 	movi	r3,15
10000d6c:	10c7283a 	div	r3,r2,r3
10000d70:	18c003e4 	muli	r3,r3,15
10000d74:	10c5c83a 	sub	r2,r2,r3
10000d78:	e0bfff0d 	sth	r2,-4(fp)

    if(board->game_map[new_xpos][new_ypos] != WALL) {
10000d7c:	e13fff8f 	ldh	r4,-2(fp)
10000d80:	e0bfff0f 	ldh	r2,-4(fp)
10000d84:	e0fffd17 	ldw	r3,-12(fp)
10000d88:	210003e4 	muli	r4,r4,15
10000d8c:	2085883a 	add	r2,r4,r2
10000d90:	100490ba 	slli	r2,r2,2
10000d94:	1885883a 	add	r2,r3,r2
10000d98:	10800017 	ldw	r2,0(r2)
10000d9c:	10005526 	beq	r2,zero,10000ef4 <tickgame+0x35c>
        // New position is valid. Check if player actually moved.
        if(player_moved) {
10000da0:	e0bffec3 	ldbu	r2,-5(fp)
10000da4:	10005326 	beq	r2,zero,10000ef4 <tickgame+0x35c>
        	addPendingPos(board->player.xpos, board->player.ypos);
10000da8:	e0bffd17 	ldw	r2,-12(fp)
10000dac:	1080e183 	ldbu	r2,902(r2)
10000db0:	10c03fcc 	andi	r3,r2,255
10000db4:	e0bffd17 	ldw	r2,-12(fp)
10000db8:	1080e1c3 	ldbu	r2,903(r2)
10000dbc:	10803fcc 	andi	r2,r2,255
10000dc0:	100b883a 	mov	r5,r2
10000dc4:	1809883a 	mov	r4,r3
10000dc8:	00066f40 	call	100066f4 <addPendingPos>
        	addPendingPos(new_xpos, new_ypos);
10000dcc:	e0bfff8f 	ldh	r2,-2(fp)
10000dd0:	e0ffff0f 	ldh	r3,-4(fp)
10000dd4:	180b883a 	mov	r5,r3
10000dd8:	1009883a 	mov	r4,r2
10000ddc:	00066f40 	call	100066f4 <addPendingPos>
            board->player.xpos = (uint8_t)new_xpos;
10000de0:	e0bfff8b 	ldhu	r2,-2(fp)
10000de4:	1007883a 	mov	r3,r2
10000de8:	e0bffd17 	ldw	r2,-12(fp)
10000dec:	10c0e185 	stb	r3,902(r2)
            board->player.ypos = (uint8_t)new_ypos;
10000df0:	e0bfff0b 	ldhu	r2,-4(fp)
10000df4:	1007883a 	mov	r3,r2
10000df8:	e0bffd17 	ldw	r2,-12(fp)
10000dfc:	10c0e1c5 	stb	r3,903(r2)
            // Pick the tile up.
            switch(board->game_map[new_xpos][new_ypos]) {
10000e00:	e13fff8f 	ldh	r4,-2(fp)
10000e04:	e0bfff0f 	ldh	r2,-4(fp)
10000e08:	e0fffd17 	ldw	r3,-12(fp)
10000e0c:	210003e4 	muli	r4,r4,15
10000e10:	2085883a 	add	r2,r4,r2
10000e14:	100490ba 	slli	r2,r2,2
10000e18:	1885883a 	add	r2,r3,r2
10000e1c:	10800017 	ldw	r2,0(r2)
10000e20:	10c00060 	cmpeqi	r3,r2,1
10000e24:	1800041e 	bne	r3,zero,10000e38 <tickgame+0x2a0>
10000e28:	10003426 	beq	r2,zero,10000efc <tickgame+0x364>
10000e2c:	108000a0 	cmpeqi	r2,r2,2
10000e30:	1000171e 	bne	r2,zero,10000e90 <tickgame+0x2f8>
                    board->player.invincible = 15;   // 15 seconds.
                    board->candy_count -= 1;
                    break;
                case WALL:  // which should not happen
                case WAY:
                    break;
10000e34:	00003106 	br	10000efc <tickgame+0x364>
                    board->game_map[new_xpos][new_ypos] = WAY;
10000e38:	e13fff8f 	ldh	r4,-2(fp)
10000e3c:	e0bfff0f 	ldh	r2,-4(fp)
10000e40:	e0fffd17 	ldw	r3,-12(fp)
10000e44:	210003e4 	muli	r4,r4,15
10000e48:	2085883a 	add	r2,r4,r2
10000e4c:	100490ba 	slli	r2,r2,2
10000e50:	1885883a 	add	r2,r3,r2
10000e54:	00c000c4 	movi	r3,3
10000e58:	10c00015 	stw	r3,0(r2)
                    board->player.points += 10;
10000e5c:	e0bffd17 	ldw	r2,-12(fp)
10000e60:	1080e20b 	ldhu	r2,904(r2)
10000e64:	10800284 	addi	r2,r2,10
10000e68:	1007883a 	mov	r3,r2
10000e6c:	e0bffd17 	ldw	r2,-12(fp)
10000e70:	10c0e20d 	sth	r3,904(r2)
                    board->candy_count -= 1;
10000e74:	e0bffd17 	ldw	r2,-12(fp)
10000e78:	1080ea0b 	ldhu	r2,936(r2)
10000e7c:	10bfffc4 	addi	r2,r2,-1
10000e80:	1007883a 	mov	r3,r2
10000e84:	e0bffd17 	ldw	r2,-12(fp)
10000e88:	10c0ea0d 	sth	r3,936(r2)
                    break;
10000e8c:	00001c06 	br	10000f00 <tickgame+0x368>
                    board->game_map[new_xpos][new_ypos] = WAY;
10000e90:	e13fff8f 	ldh	r4,-2(fp)
10000e94:	e0bfff0f 	ldh	r2,-4(fp)
10000e98:	e0fffd17 	ldw	r3,-12(fp)
10000e9c:	210003e4 	muli	r4,r4,15
10000ea0:	2085883a 	add	r2,r4,r2
10000ea4:	100490ba 	slli	r2,r2,2
10000ea8:	1885883a 	add	r2,r3,r2
10000eac:	00c000c4 	movi	r3,3
10000eb0:	10c00015 	stw	r3,0(r2)
                    board->player.points += 100;
10000eb4:	e0bffd17 	ldw	r2,-12(fp)
10000eb8:	1080e20b 	ldhu	r2,904(r2)
10000ebc:	10801904 	addi	r2,r2,100
10000ec0:	1007883a 	mov	r3,r2
10000ec4:	e0bffd17 	ldw	r2,-12(fp)
10000ec8:	10c0e20d 	sth	r3,904(r2)
                    board->player.invincible = 15;   // 15 seconds.
10000ecc:	e0bffd17 	ldw	r2,-12(fp)
10000ed0:	00c003c4 	movi	r3,15
10000ed4:	10c0e28d 	sth	r3,906(r2)
                    board->candy_count -= 1;
10000ed8:	e0bffd17 	ldw	r2,-12(fp)
10000edc:	1080ea0b 	ldhu	r2,936(r2)
10000ee0:	10bfffc4 	addi	r2,r2,-1
10000ee4:	1007883a 	mov	r3,r2
10000ee8:	e0bffd17 	ldw	r2,-12(fp)
10000eec:	10c0ea0d 	sth	r3,936(r2)
                    break;
10000ef0:	00000306 	br	10000f00 <tickgame+0x368>
            }
        }
10000ef4:	0001883a 	nop
10000ef8:	00000106 	br	10000f00 <tickgame+0x368>
                    break;
10000efc:	0001883a 	nop
    }

    // Ghosts move.
    blinkys_move(board);
10000f00:	e13ffd17 	ldw	r4,-12(fp)
10000f04:	00014800 	call	10001480 <blinkys_move>
    printf("Blinky\n");
10000f08:	010400b4 	movhi	r4,4098
10000f0c:	21140204 	addi	r4,r4,20488
10000f10:	00171080 	call	10017108 <puts>
    fflush(stdout);
10000f14:	d0a01117 	ldw	r2,-32700(gp)
10000f18:	10800217 	ldw	r2,8(r2)
10000f1c:	1009883a 	mov	r4,r2
10000f20:	001520c0 	call	1001520c <fflush>
    pinkys_move(board, keypress);
10000f24:	e0bffc07 	ldb	r2,-16(fp)
10000f28:	100b883a 	mov	r5,r2
10000f2c:	e13ffd17 	ldw	r4,-12(fp)
10000f30:	00022000 	call	10002200 <pinkys_move>
    printf("Pinky\n");
10000f34:	010400b4 	movhi	r4,4098
10000f38:	21140404 	addi	r4,r4,20496
10000f3c:	00171080 	call	10017108 <puts>
    fflush(stdout);
10000f40:	d0a01117 	ldw	r2,-32700(gp)
10000f44:	10800217 	ldw	r2,8(r2)
10000f48:	1009883a 	mov	r4,r2
10000f4c:	001520c0 	call	1001520c <fflush>
    clydes_move(board);
10000f50:	e13ffd17 	ldw	r4,-12(fp)
10000f54:	00030340 	call	10003034 <clydes_move>
    printf("Clyde\n");
10000f58:	010400b4 	movhi	r4,4098
10000f5c:	21140604 	addi	r4,r4,20504
10000f60:	00171080 	call	10017108 <puts>
    fflush(stdout);
10000f64:	d0a01117 	ldw	r2,-32700(gp)
10000f68:	10800217 	ldw	r2,8(r2)
10000f6c:	1009883a 	mov	r4,r2
10000f70:	001520c0 	call	1001520c <fflush>
    inkys_move(board);
10000f74:	e13ffd17 	ldw	r4,-12(fp)
10000f78:	0002cb80 	call	10002cb8 <inkys_move>
    printf("Inky DONE\n");
10000f7c:	010400b4 	movhi	r4,4098
10000f80:	21140804 	addi	r4,r4,20512
10000f84:	00171080 	call	10017108 <puts>
    fflush(stdout);
10000f88:	d0a01117 	ldw	r2,-32700(gp)
10000f8c:	10800217 	ldw	r2,8(r2)
10000f90:	1009883a 	mov	r4,r2
10000f94:	001520c0 	call	1001520c <fflush>

    // Check if the player met a ghost.
    if(board->player.invincible > 0) {
10000f98:	e0bffd17 	ldw	r2,-12(fp)
10000f9c:	1080e28b 	ldhu	r2,906(r2)
10000fa0:	10bfffcc 	andi	r2,r2,65535
10000fa4:	10006026 	beq	r2,zero,10001128 <tickgame+0x590>
        // Ghost gets eaten. Grant points and set ghost away.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10000fa8:	e0bffd17 	ldw	r2,-12(fp)
10000fac:	10c0e183 	ldbu	r3,902(r2)
10000fb0:	e0bffd17 	ldw	r2,-12(fp)
10000fb4:	1080e303 	ldbu	r2,908(r2)
10000fb8:	18c03fcc 	andi	r3,r3,255
10000fbc:	10803fcc 	andi	r2,r2,255
10000fc0:	1880111e 	bne	r3,r2,10001008 <tickgame+0x470>
10000fc4:	e0bffd17 	ldw	r2,-12(fp)
10000fc8:	10c0e1c3 	ldbu	r3,903(r2)
10000fcc:	e0bffd17 	ldw	r2,-12(fp)
10000fd0:	1080e343 	ldbu	r2,909(r2)
10000fd4:	18c03fcc 	andi	r3,r3,255
10000fd8:	10803fcc 	andi	r2,r2,255
10000fdc:	18800a1e 	bne	r3,r2,10001008 <tickgame+0x470>
            // Met Blinky when invincible.
            board->blinky.revive_cntdown = 15;
10000fe0:	e0bffd17 	ldw	r2,-12(fp)
10000fe4:	00c003c4 	movi	r3,15
10000fe8:	10c0e40d 	sth	r3,912(r2)
            board->player.points += 200;
10000fec:	e0bffd17 	ldw	r2,-12(fp)
10000ff0:	1080e20b 	ldhu	r2,904(r2)
10000ff4:	10803204 	addi	r2,r2,200
10000ff8:	1007883a 	mov	r3,r2
10000ffc:	e0bffd17 	ldw	r2,-12(fp)
10001000:	10c0e20d 	sth	r3,904(r2)
10001004:	00008f06 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001008:	e0bffd17 	ldw	r2,-12(fp)
1000100c:	10c0e183 	ldbu	r3,902(r2)
10001010:	e0bffd17 	ldw	r2,-12(fp)
10001014:	1080e603 	ldbu	r2,920(r2)
10001018:	18c03fcc 	andi	r3,r3,255
1000101c:	10803fcc 	andi	r2,r2,255
10001020:	1880111e 	bne	r3,r2,10001068 <tickgame+0x4d0>
10001024:	e0bffd17 	ldw	r2,-12(fp)
10001028:	10c0e1c3 	ldbu	r3,903(r2)
1000102c:	e0bffd17 	ldw	r2,-12(fp)
10001030:	1080e643 	ldbu	r2,921(r2)
10001034:	18c03fcc 	andi	r3,r3,255
10001038:	10803fcc 	andi	r2,r2,255
1000103c:	18800a1e 	bne	r3,r2,10001068 <tickgame+0x4d0>
            // Met inky when invincible.
            board->inky.revive_cntdown = 15;
10001040:	e0bffd17 	ldw	r2,-12(fp)
10001044:	00c003c4 	movi	r3,15
10001048:	10c0e70d 	sth	r3,924(r2)
            board->player.points += 200;
1000104c:	e0bffd17 	ldw	r2,-12(fp)
10001050:	1080e20b 	ldhu	r2,904(r2)
10001054:	10803204 	addi	r2,r2,200
10001058:	1007883a 	mov	r3,r2
1000105c:	e0bffd17 	ldw	r2,-12(fp)
10001060:	10c0e20d 	sth	r3,904(r2)
10001064:	00007706 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
10001068:	e0bffd17 	ldw	r2,-12(fp)
1000106c:	10c0e183 	ldbu	r3,902(r2)
10001070:	e0bffd17 	ldw	r2,-12(fp)
10001074:	1080e483 	ldbu	r2,914(r2)
10001078:	18c03fcc 	andi	r3,r3,255
1000107c:	10803fcc 	andi	r2,r2,255
10001080:	1880111e 	bne	r3,r2,100010c8 <tickgame+0x530>
10001084:	e0bffd17 	ldw	r2,-12(fp)
10001088:	10c0e1c3 	ldbu	r3,903(r2)
1000108c:	e0bffd17 	ldw	r2,-12(fp)
10001090:	1080e4c3 	ldbu	r2,915(r2)
10001094:	18c03fcc 	andi	r3,r3,255
10001098:	10803fcc 	andi	r2,r2,255
1000109c:	18800a1e 	bne	r3,r2,100010c8 <tickgame+0x530>
            // Met pinky when invincible.
            board->pinky.revive_cntdown = 15;
100010a0:	e0bffd17 	ldw	r2,-12(fp)
100010a4:	00c003c4 	movi	r3,15
100010a8:	10c0e58d 	sth	r3,918(r2)
            board->player.points += 200;
100010ac:	e0bffd17 	ldw	r2,-12(fp)
100010b0:	1080e20b 	ldhu	r2,904(r2)
100010b4:	10803204 	addi	r2,r2,200
100010b8:	1007883a 	mov	r3,r2
100010bc:	e0bffd17 	ldw	r2,-12(fp)
100010c0:	10c0e20d 	sth	r3,904(r2)
100010c4:	00005f06 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
100010c8:	e0bffd17 	ldw	r2,-12(fp)
100010cc:	10c0e183 	ldbu	r3,902(r2)
100010d0:	e0bffd17 	ldw	r2,-12(fp)
100010d4:	1080e783 	ldbu	r2,926(r2)
100010d8:	18c03fcc 	andi	r3,r3,255
100010dc:	10803fcc 	andi	r2,r2,255
100010e0:	1880581e 	bne	r3,r2,10001244 <tickgame+0x6ac>
100010e4:	e0bffd17 	ldw	r2,-12(fp)
100010e8:	10c0e1c3 	ldbu	r3,903(r2)
100010ec:	e0bffd17 	ldw	r2,-12(fp)
100010f0:	1080e7c3 	ldbu	r2,927(r2)
100010f4:	18c03fcc 	andi	r3,r3,255
100010f8:	10803fcc 	andi	r2,r2,255
100010fc:	1880511e 	bne	r3,r2,10001244 <tickgame+0x6ac>
            // Met clyde when invincible.
            board->clyde.revive_cntdown = 15;
10001100:	e0bffd17 	ldw	r2,-12(fp)
10001104:	00c003c4 	movi	r3,15
10001108:	10c0e88d 	sth	r3,930(r2)
            board->player.points += 200;
1000110c:	e0bffd17 	ldw	r2,-12(fp)
10001110:	1080e20b 	ldhu	r2,904(r2)
10001114:	10803204 	addi	r2,r2,200
10001118:	1007883a 	mov	r3,r2
1000111c:	e0bffd17 	ldw	r2,-12(fp)
10001120:	10c0e20d 	sth	r3,904(r2)
10001124:	00004706 	br	10001244 <tickgame+0x6ac>
        }
    } else {
        // Player is not invincible. Gets killed if ghost met.
        // These branches are retained in case some additional things added.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10001128:	e0bffd17 	ldw	r2,-12(fp)
1000112c:	10c0e183 	ldbu	r3,902(r2)
10001130:	e0bffd17 	ldw	r2,-12(fp)
10001134:	1080e303 	ldbu	r2,908(r2)
10001138:	18c03fcc 	andi	r3,r3,255
1000113c:	10803fcc 	andi	r2,r2,255
10001140:	18800b1e 	bne	r3,r2,10001170 <tickgame+0x5d8>
10001144:	e0bffd17 	ldw	r2,-12(fp)
10001148:	10c0e1c3 	ldbu	r3,903(r2)
1000114c:	e0bffd17 	ldw	r2,-12(fp)
10001150:	1080e343 	ldbu	r2,909(r2)
10001154:	18c03fcc 	andi	r3,r3,255
10001158:	10803fcc 	andi	r2,r2,255
1000115c:	1880041e 	bne	r3,r2,10001170 <tickgame+0x5d8>
            // Met Blinky
            board->state = DIED;
10001160:	e0bffd17 	ldw	r2,-12(fp)
10001164:	00c00084 	movi	r3,2
10001168:	10c0e915 	stw	r3,932(r2)
1000116c:	00003506 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001170:	e0bffd17 	ldw	r2,-12(fp)
10001174:	10c0e183 	ldbu	r3,902(r2)
10001178:	e0bffd17 	ldw	r2,-12(fp)
1000117c:	1080e603 	ldbu	r2,920(r2)
10001180:	18c03fcc 	andi	r3,r3,255
10001184:	10803fcc 	andi	r2,r2,255
10001188:	18800b1e 	bne	r3,r2,100011b8 <tickgame+0x620>
1000118c:	e0bffd17 	ldw	r2,-12(fp)
10001190:	10c0e1c3 	ldbu	r3,903(r2)
10001194:	e0bffd17 	ldw	r2,-12(fp)
10001198:	1080e643 	ldbu	r2,921(r2)
1000119c:	18c03fcc 	andi	r3,r3,255
100011a0:	10803fcc 	andi	r2,r2,255
100011a4:	1880041e 	bne	r3,r2,100011b8 <tickgame+0x620>
            // Met inky
            board->state = DIED;
100011a8:	e0bffd17 	ldw	r2,-12(fp)
100011ac:	00c00084 	movi	r3,2
100011b0:	10c0e915 	stw	r3,932(r2)
100011b4:	00002306 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
100011b8:	e0bffd17 	ldw	r2,-12(fp)
100011bc:	10c0e183 	ldbu	r3,902(r2)
100011c0:	e0bffd17 	ldw	r2,-12(fp)
100011c4:	1080e483 	ldbu	r2,914(r2)
100011c8:	18c03fcc 	andi	r3,r3,255
100011cc:	10803fcc 	andi	r2,r2,255
100011d0:	18800b1e 	bne	r3,r2,10001200 <tickgame+0x668>
100011d4:	e0bffd17 	ldw	r2,-12(fp)
100011d8:	10c0e1c3 	ldbu	r3,903(r2)
100011dc:	e0bffd17 	ldw	r2,-12(fp)
100011e0:	1080e4c3 	ldbu	r2,915(r2)
100011e4:	18c03fcc 	andi	r3,r3,255
100011e8:	10803fcc 	andi	r2,r2,255
100011ec:	1880041e 	bne	r3,r2,10001200 <tickgame+0x668>
            // Met pinky.
            board->state = DIED;
100011f0:	e0bffd17 	ldw	r2,-12(fp)
100011f4:	00c00084 	movi	r3,2
100011f8:	10c0e915 	stw	r3,932(r2)
100011fc:	00001106 	br	10001244 <tickgame+0x6ac>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
10001200:	e0bffd17 	ldw	r2,-12(fp)
10001204:	10c0e183 	ldbu	r3,902(r2)
10001208:	e0bffd17 	ldw	r2,-12(fp)
1000120c:	1080e783 	ldbu	r2,926(r2)
10001210:	18c03fcc 	andi	r3,r3,255
10001214:	10803fcc 	andi	r2,r2,255
10001218:	18800a1e 	bne	r3,r2,10001244 <tickgame+0x6ac>
1000121c:	e0bffd17 	ldw	r2,-12(fp)
10001220:	10c0e1c3 	ldbu	r3,903(r2)
10001224:	e0bffd17 	ldw	r2,-12(fp)
10001228:	1080e7c3 	ldbu	r2,927(r2)
1000122c:	18c03fcc 	andi	r3,r3,255
10001230:	10803fcc 	andi	r2,r2,255
10001234:	1880031e 	bne	r3,r2,10001244 <tickgame+0x6ac>
            // Met clyde.
            board->state = DIED;
10001238:	e0bffd17 	ldw	r2,-12(fp)
1000123c:	00c00084 	movi	r3,2
10001240:	10c0e915 	stw	r3,932(r2)
        }
    }

    // Check if game finished.
    if(is_over(board)) {
10001244:	e13ffd17 	ldw	r4,-12(fp)
10001248:	000127c0 	call	1000127c <is_over>
1000124c:	10803fcc 	andi	r2,r2,255
10001250:	10000526 	beq	r2,zero,10001268 <tickgame+0x6d0>
    	if(board->current_board < _BOARD_COUNT-1){
    		board->current_board += 1;
    		init_game(board);
    	} else {
    		board -> state = WON;
10001254:	e0bffd17 	ldw	r2,-12(fp)
10001258:	00c000c4 	movi	r3,3
1000125c:	10c0e915 	stw	r3,932(r2)
10001260:	00000106 	br	10001268 <tickgame+0x6d0>
    if(board->state!=PLAYING) return;
10001264:	0001883a 	nop
    	}
    }
}
10001268:	e037883a 	mov	sp,fp
1000126c:	dfc00117 	ldw	ra,4(sp)
10001270:	df000017 	ldw	fp,0(sp)
10001274:	dec00204 	addi	sp,sp,8
10001278:	f800283a 	ret

1000127c <is_over>:

// Check if the current map is finished.
// The whole game is passed so we can maintain the array shape.
static inline bool is_over(Game* board) {
1000127c:	defffe04 	addi	sp,sp,-8
10001280:	df000115 	stw	fp,4(sp)
10001284:	df000104 	addi	fp,sp,4
10001288:	e13fff15 	stw	r4,-4(fp)
    return board -> candy_count == 0;
1000128c:	e0bfff17 	ldw	r2,-4(fp)
10001290:	1080ea0b 	ldhu	r2,936(r2)
10001294:	10bfffcc 	andi	r2,r2,65535
10001298:	1005003a 	cmpeq	r2,r2,zero
}
1000129c:	e037883a 	mov	sp,fp
100012a0:	df000017 	ldw	fp,0(sp)
100012a4:	dec00104 	addi	sp,sp,4
100012a8:	f800283a 	ret

100012ac <recur_free>:

// Recursively free a pointer.
void recur_free(LinkedPoints* lp)
{
100012ac:	defffd04 	addi	sp,sp,-12
100012b0:	dfc00215 	stw	ra,8(sp)
100012b4:	df000115 	stw	fp,4(sp)
100012b8:	df000104 	addi	fp,sp,4
100012bc:	e13fff15 	stw	r4,-4(fp)
    if(lp != nullptr) {
100012c0:	e0bfff17 	ldw	r2,-4(fp)
100012c4:	10000626 	beq	r2,zero,100012e0 <recur_free+0x34>
        recur_free(lp -> next);
100012c8:	e0bfff17 	ldw	r2,-4(fp)
100012cc:	10800117 	ldw	r2,4(r2)
100012d0:	1009883a 	mov	r4,r2
100012d4:	00012ac0 	call	100012ac <recur_free>
        free(lp);
100012d8:	e13fff17 	ldw	r4,-4(fp)
100012dc:	00162bc0 	call	100162bc <free>
    }
}
100012e0:	0001883a 	nop
100012e4:	e037883a 	mov	sp,fp
100012e8:	dfc00117 	ldw	ra,4(sp)
100012ec:	df000017 	ldw	fp,0(sp)
100012f0:	dec00204 	addi	sp,sp,8
100012f4:	f800283a 	ret

100012f8 <stack_push>:
// Also used as index for "minheap"
static int8_t distances[_BOARD_H][_BOARD_W];

// MinHeap Push.
// Data in this linked list will be sorted by distance. Smaller distance comes first.
LinkedPoints* stack_push(LinkedPoints* head, const Point* data) {
100012f8:	defffb04 	addi	sp,sp,-20
100012fc:	dfc00415 	stw	ra,16(sp)
10001300:	df000315 	stw	fp,12(sp)
10001304:	df000304 	addi	fp,sp,12
10001308:	e13ffe15 	stw	r4,-8(fp)
1000130c:	e17ffd15 	stw	r5,-12(fp)
    if(head == nullptr || distances[head->curr.xpos][head->curr.ypos] >= distances[data->xpos][data->ypos]) {
10001310:	e0bffe17 	ldw	r2,-8(fp)
10001314:	10001d26 	beq	r2,zero,1000138c <stack_push+0x94>
10001318:	e0bffe17 	ldw	r2,-8(fp)
1000131c:	10800003 	ldbu	r2,0(r2)
10001320:	10c03fcc 	andi	r3,r2,255
10001324:	e0bffe17 	ldw	r2,-8(fp)
10001328:	10800043 	ldbu	r2,1(r2)
1000132c:	10803fcc 	andi	r2,r2,255
10001330:	18c003e4 	muli	r3,r3,15
10001334:	1887883a 	add	r3,r3,r2
10001338:	008400f4 	movhi	r2,4099
1000133c:	1885883a 	add	r2,r3,r2
10001340:	11296703 	ldbu	r4,-23140(r2)
10001344:	e0bffd17 	ldw	r2,-12(fp)
10001348:	10800003 	ldbu	r2,0(r2)
1000134c:	10c03fcc 	andi	r3,r2,255
10001350:	e0bffd17 	ldw	r2,-12(fp)
10001354:	10800043 	ldbu	r2,1(r2)
10001358:	10803fcc 	andi	r2,r2,255
1000135c:	18c003e4 	muli	r3,r3,15
10001360:	1887883a 	add	r3,r3,r2
10001364:	008400f4 	movhi	r2,4099
10001368:	1885883a 	add	r2,r3,r2
1000136c:	10a96703 	ldbu	r2,-23140(r2)
10001370:	20c03fcc 	andi	r3,r4,255
10001374:	18c0201c 	xori	r3,r3,128
10001378:	18ffe004 	addi	r3,r3,-128
1000137c:	10803fcc 	andi	r2,r2,255
10001380:	1080201c 	xori	r2,r2,128
10001384:	10bfe004 	addi	r2,r2,-128
10001388:	18800e16 	blt	r3,r2,100013c4 <stack_push+0xcc>
        LinkedPoints* newPoint = malloc(sizeof(LinkedPoints));
1000138c:	01000204 	movi	r4,8
10001390:	00162ac0 	call	100162ac <malloc>
10001394:	e0bfff15 	stw	r2,-4(fp)
        newPoint->curr = *data;
10001398:	e0bfff17 	ldw	r2,-4(fp)
1000139c:	e0fffd17 	ldw	r3,-12(fp)
100013a0:	19000003 	ldbu	r4,0(r3)
100013a4:	11000005 	stb	r4,0(r2)
100013a8:	18c00043 	ldbu	r3,1(r3)
100013ac:	10c00045 	stb	r3,1(r2)
        newPoint->next = head;
100013b0:	e0bfff17 	ldw	r2,-4(fp)
100013b4:	e0fffe17 	ldw	r3,-8(fp)
100013b8:	10c00115 	stw	r3,4(r2)
        return newPoint;
100013bc:	e0bfff17 	ldw	r2,-4(fp)
100013c0:	00000906 	br	100013e8 <stack_push+0xf0>
    } else {
        head->next = stack_push(head->next, data);
100013c4:	e0bffe17 	ldw	r2,-8(fp)
100013c8:	10800117 	ldw	r2,4(r2)
100013cc:	e17ffd17 	ldw	r5,-12(fp)
100013d0:	1009883a 	mov	r4,r2
100013d4:	00012f80 	call	100012f8 <stack_push>
100013d8:	1007883a 	mov	r3,r2
100013dc:	e0bffe17 	ldw	r2,-8(fp)
100013e0:	10c00115 	stw	r3,4(r2)
        return head;
100013e4:	e0bffe17 	ldw	r2,-8(fp)
    }
}
100013e8:	e037883a 	mov	sp,fp
100013ec:	dfc00117 	ldw	ra,4(sp)
100013f0:	df000017 	ldw	fp,0(sp)
100013f4:	dec00204 	addi	sp,sp,8
100013f8:	f800283a 	ret

100013fc <stack_pop>:
static inline Point stack_peek(LinkedPoints* head) {
    return head -> curr;
}

// Pop an element. Element will be written to popped_data.
LinkedPoints* stack_pop(LinkedPoints* head, Point* popped_data) {
100013fc:	defffb04 	addi	sp,sp,-20
10001400:	dfc00415 	stw	ra,16(sp)
10001404:	df000315 	stw	fp,12(sp)
10001408:	df000304 	addi	fp,sp,12
1000140c:	e13ffe15 	stw	r4,-8(fp)
10001410:	e17ffd15 	stw	r5,-12(fp)
    *popped_data = head -> curr;
10001414:	e0bffd17 	ldw	r2,-12(fp)
10001418:	e0fffe17 	ldw	r3,-8(fp)
1000141c:	19000003 	ldbu	r4,0(r3)
10001420:	11000005 	stb	r4,0(r2)
10001424:	18c00043 	ldbu	r3,1(r3)
10001428:	10c00045 	stb	r3,1(r2)
    LinkedPoints* nextptr = head -> next;
1000142c:	e0bffe17 	ldw	r2,-8(fp)
10001430:	10800117 	ldw	r2,4(r2)
10001434:	e0bfff15 	stw	r2,-4(fp)
    free(head);
10001438:	e13ffe17 	ldw	r4,-8(fp)
1000143c:	00162bc0 	call	100162bc <free>
    return nextptr;
10001440:	e0bfff17 	ldw	r2,-4(fp)
}
10001444:	e037883a 	mov	sp,fp
10001448:	dfc00117 	ldw	ra,4(sp)
1000144c:	df000017 	ldw	fp,0(sp)
10001450:	dec00204 	addi	sp,sp,8
10001454:	f800283a 	ret

10001458 <stack_isempty>:

static inline bool stack_isempty(const LinkedPoints* head) {
10001458:	defffe04 	addi	sp,sp,-8
1000145c:	df000115 	stw	fp,4(sp)
10001460:	df000104 	addi	fp,sp,4
10001464:	e13fff15 	stw	r4,-4(fp)
    return head != nullptr;
10001468:	e0bfff17 	ldw	r2,-4(fp)
1000146c:	1004c03a 	cmpne	r2,r2,zero
}
10001470:	e037883a 	mov	sp,fp
10001474:	df000017 	ldw	fp,0(sp)
10001478:	dec00104 	addi	sp,sp,4
1000147c:	f800283a 	ret

10001480 <blinkys_move>:
static inline bool PointEquals(const Point a, const Point b) {
    return a.xpos == b.xpos && a.ypos == b.ypos;
}

// Blinky. Use Dijkstra to find the shortest path to the player.
void blinkys_move(Game* game) {
10001480:	defedc04 	addi	sp,sp,-1168
10001484:	dfc12315 	stw	ra,1164(sp)
10001488:	df012215 	stw	fp,1160(sp)
1000148c:	df012204 	addi	fp,sp,1160
10001490:	e13ede15 	stw	r4,-1160(fp)
    //Blinky is dead
    if(game->blinky.revive_cntdown > 0) {
10001494:	e0bede17 	ldw	r2,-1160(fp)
10001498:	1080e40b 	ldhu	r2,912(r2)
1000149c:	10bfffcc 	andi	r2,r2,65535
100014a0:	10000726 	beq	r2,zero,100014c0 <blinkys_move+0x40>
        game->blinky.revive_cntdown -= 1;
100014a4:	e0bede17 	ldw	r2,-1160(fp)
100014a8:	1080e40b 	ldhu	r2,912(r2)
100014ac:	10bfffc4 	addi	r2,r2,-1
100014b0:	1007883a 	mov	r3,r2
100014b4:	e0bede17 	ldw	r2,-1160(fp)
100014b8:	10c0e40d 	sth	r3,912(r2)
100014bc:	00029306 	br	10001f0c <blinkys_move+0xa8c>
        return;
    }
    LinkedPoints* dijkstra_fringe;
    dijkstra_fringe = nullptr;
100014c0:	e03fff15 	stw	zero,-4(fp)
    // Put Blinky's current position into fringe.
    bool dst_finalize[_BOARD_H][_BOARD_W];
    Tile tmp_map[_BOARD_H][_BOARD_W];

    // Copy a map, and mark other ghosts as walls.
    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
100014c4:	e0fede17 	ldw	r3,-1160(fp)
100014c8:	e0bee204 	addi	r2,fp,-1144
100014cc:	0180e104 	movi	r6,900
100014d0:	180b883a 	mov	r5,r3
100014d4:	1009883a 	mov	r4,r2
100014d8:	0016c340 	call	10016c34 <memcpy>
    // Mark other ghosts as obstacles.
    tmp_map[game->inky.xpos][game->inky.ypos] = WALL;
100014dc:	e0bede17 	ldw	r2,-1160(fp)
100014e0:	1080e603 	ldbu	r2,920(r2)
100014e4:	10c03fcc 	andi	r3,r2,255
100014e8:	e0bede17 	ldw	r2,-1160(fp)
100014ec:	1080e643 	ldbu	r2,921(r2)
100014f0:	10803fcc 	andi	r2,r2,255
100014f4:	18c003e4 	muli	r3,r3,15
100014f8:	1885883a 	add	r2,r3,r2
100014fc:	100490ba 	slli	r2,r2,2
10001500:	e085883a 	add	r2,fp,r2
10001504:	103ee215 	stw	zero,-1144(r2)
    tmp_map[game->clyde.xpos][game->clyde.ypos] = WALL;
10001508:	e0bede17 	ldw	r2,-1160(fp)
1000150c:	1080e783 	ldbu	r2,926(r2)
10001510:	10c03fcc 	andi	r3,r2,255
10001514:	e0bede17 	ldw	r2,-1160(fp)
10001518:	1080e7c3 	ldbu	r2,927(r2)
1000151c:	10803fcc 	andi	r2,r2,255
10001520:	18c003e4 	muli	r3,r3,15
10001524:	1885883a 	add	r2,r3,r2
10001528:	100490ba 	slli	r2,r2,2
1000152c:	e085883a 	add	r2,fp,r2
10001530:	103ee215 	stw	zero,-1144(r2)
    tmp_map[game->pinky.xpos][game->pinky.ypos] = WALL;
10001534:	e0bede17 	ldw	r2,-1160(fp)
10001538:	1080e483 	ldbu	r2,914(r2)
1000153c:	10c03fcc 	andi	r3,r2,255
10001540:	e0bede17 	ldw	r2,-1160(fp)
10001544:	1080e4c3 	ldbu	r2,915(r2)
10001548:	10803fcc 	andi	r2,r2,255
1000154c:	18c003e4 	muli	r3,r3,15
10001550:	1885883a 	add	r2,r3,r2
10001554:	100490ba 	slli	r2,r2,2
10001558:	e085883a 	add	r2,fp,r2
1000155c:	103ee215 	stw	zero,-1144(r2)

    uint8_t i, j;

    for(i = 0; i<_BOARD_H;i+=1) {
10001560:	e03ffec5 	stb	zero,-5(fp)
10001564:	00001906 	br	100015cc <blinkys_move+0x14c>
        for(j = 0; j<_BOARD_W;j+=1) {
10001568:	e03ffe85 	stb	zero,-6(fp)
1000156c:	00001106 	br	100015b4 <blinkys_move+0x134>
            distances[i][j] = 63; //Something really long.
10001570:	e0fffec3 	ldbu	r3,-5(fp)
10001574:	e0bffe83 	ldbu	r2,-6(fp)
10001578:	18c003e4 	muli	r3,r3,15
1000157c:	1889883a 	add	r4,r3,r2
10001580:	00c00fc4 	movi	r3,63
10001584:	008400f4 	movhi	r2,4099
10001588:	2085883a 	add	r2,r4,r2
1000158c:	10e96705 	stb	r3,-23140(r2)
            dst_finalize[i][j] = false; // All not finalized.
10001590:	e0fffec3 	ldbu	r3,-5(fp)
10001594:	e0bffe83 	ldbu	r2,-6(fp)
10001598:	18c003e4 	muli	r3,r3,15
1000159c:	e0c7883a 	add	r3,fp,r3
100015a0:	1885883a 	add	r2,r3,r2
100015a4:	103fc345 	stb	zero,-243(r2)
        for(j = 0; j<_BOARD_W;j+=1) {
100015a8:	e0bffe83 	ldbu	r2,-6(fp)
100015ac:	10800044 	addi	r2,r2,1
100015b0:	e0bffe85 	stb	r2,-6(fp)
100015b4:	e0bffe83 	ldbu	r2,-6(fp)
100015b8:	108003f0 	cmpltui	r2,r2,15
100015bc:	103fec1e 	bne	r2,zero,10001570 <blinkys_move+0xf0>
    for(i = 0; i<_BOARD_H;i+=1) {
100015c0:	e0bffec3 	ldbu	r2,-5(fp)
100015c4:	10800044 	addi	r2,r2,1
100015c8:	e0bffec5 	stb	r2,-5(fp)
100015cc:	e0bffec3 	ldbu	r2,-5(fp)
100015d0:	108003f0 	cmpltui	r2,r2,15
100015d4:	103fe41e 	bne	r2,zero,10001568 <blinkys_move+0xe8>
        }
    }

    distances[game->player.xpos][game->player.ypos] = 0;
100015d8:	e0bede17 	ldw	r2,-1160(fp)
100015dc:	1080e183 	ldbu	r2,902(r2)
100015e0:	10c03fcc 	andi	r3,r2,255
100015e4:	e0bede17 	ldw	r2,-1160(fp)
100015e8:	1080e1c3 	ldbu	r2,903(r2)
100015ec:	10803fcc 	andi	r2,r2,255
100015f0:	18c003e4 	muli	r3,r3,15
100015f4:	1887883a 	add	r3,r3,r2
100015f8:	008400f4 	movhi	r2,4099
100015fc:	1885883a 	add	r2,r3,r2
10001600:	10296705 	stb	zero,-23140(r2)

    Point player_pos;
    player_pos.xpos = game->player.xpos;
10001604:	e0bede17 	ldw	r2,-1160(fp)
10001608:	1080e183 	ldbu	r2,902(r2)
1000160c:	e0bee185 	stb	r2,-1146(fp)
    player_pos.ypos = game->player.ypos;
10001610:	e0bede17 	ldw	r2,-1160(fp)
10001614:	1080e1c3 	ldbu	r2,903(r2)
10001618:	e0bee1c5 	stb	r2,-1145(fp)
    // Propagate from player to ghost.
    dijkstra_fringe = stack_push(dijkstra_fringe, &player_pos);
1000161c:	e0bee184 	addi	r2,fp,-1146
10001620:	100b883a 	mov	r5,r2
10001624:	e13fff17 	ldw	r4,-4(fp)
10001628:	00012f80 	call	100012f8 <stack_push>
1000162c:	e0bfff15 	stw	r2,-4(fp)

    while(!stack_isempty(dijkstra_fringe)) {
10001630:	00017406 	br	10001c04 <blinkys_move+0x784>
        Point curr_seek;
        dijkstra_fringe = stack_pop(dijkstra_fringe, &curr_seek);
10001634:	e0bee104 	addi	r2,fp,-1148
10001638:	100b883a 	mov	r5,r2
1000163c:	e13fff17 	ldw	r4,-4(fp)
10001640:	00013fc0 	call	100013fc <stack_pop>
10001644:	e0bfff15 	stw	r2,-4(fp)
        dst_finalize[curr_seek.xpos][curr_seek.ypos] = true;
10001648:	e0bee103 	ldbu	r2,-1148(fp)
1000164c:	10c03fcc 	andi	r3,r2,255
10001650:	e0bee143 	ldbu	r2,-1147(fp)
10001654:	10803fcc 	andi	r2,r2,255
10001658:	18c003e4 	muli	r3,r3,15
1000165c:	e0c7883a 	add	r3,fp,r3
10001660:	1885883a 	add	r2,r3,r2
10001664:	00c00044 	movi	r3,1
10001668:	10ffc345 	stb	r3,-243(r2)
        printf("*");
1000166c:	01000a84 	movi	r4,42
10001670:	00170240 	call	10017024 <putchar>
        fflush(stdout);
10001674:	d0a01117 	ldw	r2,-32700(gp)
10001678:	10800217 	ldw	r2,8(r2)
1000167c:	1009883a 	mov	r4,r2
10001680:	001520c0 	call	1001520c <fflush>
        // Investigate UP of current point.
        int16_t nxpos = curr_seek.xpos;
10001684:	e0bee103 	ldbu	r2,-1148(fp)
10001688:	10803fcc 	andi	r2,r2,255
1000168c:	e0bffd0d 	sth	r2,-12(fp)
        int16_t nypos = curr_seek.ypos;
10001690:	e0bee143 	ldbu	r2,-1147(fp)
10001694:	10803fcc 	andi	r2,r2,255
10001698:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
1000169c:	e0bffd0f 	ldh	r2,-12(fp)
100016a0:	10800384 	addi	r2,r2,14
100016a4:	00c003c4 	movi	r3,15
100016a8:	10c7283a 	div	r3,r2,r3
100016ac:	18c003e4 	muli	r3,r3,15
100016b0:	10c5c83a 	sub	r2,r2,r3
100016b4:	e0bffd0d 	sth	r2,-12(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
100016b8:	e0fffd0f 	ldh	r3,-12(fp)
100016bc:	e0bffc8f 	ldh	r2,-14(fp)
100016c0:	18c003e4 	muli	r3,r3,15
100016c4:	e0c7883a 	add	r3,fp,r3
100016c8:	1885883a 	add	r2,r3,r2
100016cc:	10bfc343 	ldbu	r2,-243(r2)
100016d0:	1080005c 	xori	r2,r2,1
100016d4:	10803fcc 	andi	r2,r2,255
100016d8:	10004226 	beq	r2,zero,100017e4 <blinkys_move+0x364>
100016dc:	e0fffd0f 	ldh	r3,-12(fp)
100016e0:	e0bffc8f 	ldh	r2,-14(fp)
100016e4:	18c003e4 	muli	r3,r3,15
100016e8:	1885883a 	add	r2,r3,r2
100016ec:	100490ba 	slli	r2,r2,2
100016f0:	e085883a 	add	r2,fp,r2
100016f4:	10bee217 	ldw	r2,-1144(r2)
100016f8:	10003a26 	beq	r2,zero,100017e4 <blinkys_move+0x364>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100016fc:	e0fffd0f 	ldh	r3,-12(fp)
10001700:	e0bffc8f 	ldh	r2,-14(fp)
10001704:	18c003e4 	muli	r3,r3,15
10001708:	1887883a 	add	r3,r3,r2
1000170c:	008400f4 	movhi	r2,4099
10001710:	1885883a 	add	r2,r3,r2
10001714:	11296703 	ldbu	r4,-23140(r2)
10001718:	e0bee103 	ldbu	r2,-1148(fp)
1000171c:	10c03fcc 	andi	r3,r2,255
10001720:	e0bee143 	ldbu	r2,-1147(fp)
10001724:	10803fcc 	andi	r2,r2,255
10001728:	18c003e4 	muli	r3,r3,15
1000172c:	1887883a 	add	r3,r3,r2
10001730:	008400f4 	movhi	r2,4099
10001734:	1885883a 	add	r2,r3,r2
10001738:	10e96703 	ldbu	r3,-23140(r2)
1000173c:	20803fcc 	andi	r2,r4,255
10001740:	1080201c 	xori	r2,r2,128
10001744:	10bfe004 	addi	r2,r2,-128
10001748:	18c03fcc 	andi	r3,r3,255
1000174c:	18c0201c 	xori	r3,r3,128
10001750:	18ffe004 	addi	r3,r3,-128
10001754:	18800c0e 	bge	r3,r2,10001788 <blinkys_move+0x308>
10001758:	e0bee103 	ldbu	r2,-1148(fp)
1000175c:	10c03fcc 	andi	r3,r2,255
10001760:	e0bee143 	ldbu	r2,-1147(fp)
10001764:	10803fcc 	andi	r2,r2,255
10001768:	18c003e4 	muli	r3,r3,15
1000176c:	1887883a 	add	r3,r3,r2
10001770:	008400f4 	movhi	r2,4099
10001774:	1885883a 	add	r2,r3,r2
10001778:	10a96703 	ldbu	r2,-23140(r2)
1000177c:	10800044 	addi	r2,r2,1
10001780:	1007883a 	mov	r3,r2
10001784:	00000706 	br	100017a4 <blinkys_move+0x324>
10001788:	e0fffd0f 	ldh	r3,-12(fp)
1000178c:	e0bffc8f 	ldh	r2,-14(fp)
10001790:	18c003e4 	muli	r3,r3,15
10001794:	1887883a 	add	r3,r3,r2
10001798:	008400f4 	movhi	r2,4099
1000179c:	1885883a 	add	r2,r3,r2
100017a0:	10e96703 	ldbu	r3,-23140(r2)
100017a4:	e13ffd0f 	ldh	r4,-12(fp)
100017a8:	e0bffc8f 	ldh	r2,-14(fp)
100017ac:	210003e4 	muli	r4,r4,15
100017b0:	2089883a 	add	r4,r4,r2
100017b4:	008400f4 	movhi	r2,4099
100017b8:	2085883a 	add	r2,r4,r2
100017bc:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
100017c0:	e0bffd0b 	ldhu	r2,-12(fp)
100017c4:	e0bee085 	stb	r2,-1150(fp)
            npt.ypos = (uint8_t)nypos;
100017c8:	e0bffc8b 	ldhu	r2,-14(fp)
100017cc:	e0bee0c5 	stb	r2,-1149(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
100017d0:	e0bee084 	addi	r2,fp,-1150
100017d4:	100b883a 	mov	r5,r2
100017d8:	e13fff17 	ldw	r4,-4(fp)
100017dc:	00012f80 	call	100012f8 <stack_push>
100017e0:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate DOWN.
        nxpos = curr_seek.xpos;
100017e4:	e0bee103 	ldbu	r2,-1148(fp)
100017e8:	10803fcc 	andi	r2,r2,255
100017ec:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
100017f0:	e0bee143 	ldbu	r2,-1147(fp)
100017f4:	10803fcc 	andi	r2,r2,255
100017f8:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos + 1) % _BOARD_H;
100017fc:	e0bffd0f 	ldh	r2,-12(fp)
10001800:	10800044 	addi	r2,r2,1
10001804:	00c003c4 	movi	r3,15
10001808:	10c7283a 	div	r3,r2,r3
1000180c:	18c003e4 	muli	r3,r3,15
10001810:	10c5c83a 	sub	r2,r2,r3
10001814:	e0bffd0d 	sth	r2,-12(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
10001818:	e0fffd0f 	ldh	r3,-12(fp)
1000181c:	e0bffc8f 	ldh	r2,-14(fp)
10001820:	18c003e4 	muli	r3,r3,15
10001824:	e0c7883a 	add	r3,fp,r3
10001828:	1885883a 	add	r2,r3,r2
1000182c:	10bfc343 	ldbu	r2,-243(r2)
10001830:	1080005c 	xori	r2,r2,1
10001834:	10803fcc 	andi	r2,r2,255
10001838:	10004226 	beq	r2,zero,10001944 <blinkys_move+0x4c4>
1000183c:	e0fffd0f 	ldh	r3,-12(fp)
10001840:	e0bffc8f 	ldh	r2,-14(fp)
10001844:	18c003e4 	muli	r3,r3,15
10001848:	1885883a 	add	r2,r3,r2
1000184c:	100490ba 	slli	r2,r2,2
10001850:	e085883a 	add	r2,fp,r2
10001854:	10bee217 	ldw	r2,-1144(r2)
10001858:	10003a26 	beq	r2,zero,10001944 <blinkys_move+0x4c4>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
1000185c:	e0fffd0f 	ldh	r3,-12(fp)
10001860:	e0bffc8f 	ldh	r2,-14(fp)
10001864:	18c003e4 	muli	r3,r3,15
10001868:	1887883a 	add	r3,r3,r2
1000186c:	008400f4 	movhi	r2,4099
10001870:	1885883a 	add	r2,r3,r2
10001874:	11296703 	ldbu	r4,-23140(r2)
10001878:	e0bee103 	ldbu	r2,-1148(fp)
1000187c:	10c03fcc 	andi	r3,r2,255
10001880:	e0bee143 	ldbu	r2,-1147(fp)
10001884:	10803fcc 	andi	r2,r2,255
10001888:	18c003e4 	muli	r3,r3,15
1000188c:	1887883a 	add	r3,r3,r2
10001890:	008400f4 	movhi	r2,4099
10001894:	1885883a 	add	r2,r3,r2
10001898:	10e96703 	ldbu	r3,-23140(r2)
1000189c:	20803fcc 	andi	r2,r4,255
100018a0:	1080201c 	xori	r2,r2,128
100018a4:	10bfe004 	addi	r2,r2,-128
100018a8:	18c03fcc 	andi	r3,r3,255
100018ac:	18c0201c 	xori	r3,r3,128
100018b0:	18ffe004 	addi	r3,r3,-128
100018b4:	18800c0e 	bge	r3,r2,100018e8 <blinkys_move+0x468>
100018b8:	e0bee103 	ldbu	r2,-1148(fp)
100018bc:	10c03fcc 	andi	r3,r2,255
100018c0:	e0bee143 	ldbu	r2,-1147(fp)
100018c4:	10803fcc 	andi	r2,r2,255
100018c8:	18c003e4 	muli	r3,r3,15
100018cc:	1887883a 	add	r3,r3,r2
100018d0:	008400f4 	movhi	r2,4099
100018d4:	1885883a 	add	r2,r3,r2
100018d8:	10a96703 	ldbu	r2,-23140(r2)
100018dc:	10800044 	addi	r2,r2,1
100018e0:	1007883a 	mov	r3,r2
100018e4:	00000706 	br	10001904 <blinkys_move+0x484>
100018e8:	e0fffd0f 	ldh	r3,-12(fp)
100018ec:	e0bffc8f 	ldh	r2,-14(fp)
100018f0:	18c003e4 	muli	r3,r3,15
100018f4:	1887883a 	add	r3,r3,r2
100018f8:	008400f4 	movhi	r2,4099
100018fc:	1885883a 	add	r2,r3,r2
10001900:	10e96703 	ldbu	r3,-23140(r2)
10001904:	e13ffd0f 	ldh	r4,-12(fp)
10001908:	e0bffc8f 	ldh	r2,-14(fp)
1000190c:	210003e4 	muli	r4,r4,15
10001910:	2089883a 	add	r4,r4,r2
10001914:	008400f4 	movhi	r2,4099
10001918:	2085883a 	add	r2,r4,r2
1000191c:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10001920:	e0bffd0b 	ldhu	r2,-12(fp)
10001924:	e0bee005 	stb	r2,-1152(fp)
            npt.ypos = (uint8_t)nypos;
10001928:	e0bffc8b 	ldhu	r2,-14(fp)
1000192c:	e0bee045 	stb	r2,-1151(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10001930:	e0bee004 	addi	r2,fp,-1152
10001934:	100b883a 	mov	r5,r2
10001938:	e13fff17 	ldw	r4,-4(fp)
1000193c:	00012f80 	call	100012f8 <stack_push>
10001940:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate LEFT.
        nxpos = curr_seek.xpos;
10001944:	e0bee103 	ldbu	r2,-1148(fp)
10001948:	10803fcc 	andi	r2,r2,255
1000194c:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10001950:	e0bee143 	ldbu	r2,-1147(fp)
10001954:	10803fcc 	andi	r2,r2,255
10001958:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
1000195c:	e0bffc8f 	ldh	r2,-14(fp)
10001960:	10800384 	addi	r2,r2,14
10001964:	00c003c4 	movi	r3,15
10001968:	10c7283a 	div	r3,r2,r3
1000196c:	18c003e4 	muli	r3,r3,15
10001970:	10c5c83a 	sub	r2,r2,r3
10001974:	e0bffc8d 	sth	r2,-14(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
10001978:	e0fffd0f 	ldh	r3,-12(fp)
1000197c:	e0bffc8f 	ldh	r2,-14(fp)
10001980:	18c003e4 	muli	r3,r3,15
10001984:	e0c7883a 	add	r3,fp,r3
10001988:	1885883a 	add	r2,r3,r2
1000198c:	10bfc343 	ldbu	r2,-243(r2)
10001990:	1080005c 	xori	r2,r2,1
10001994:	10803fcc 	andi	r2,r2,255
10001998:	10004226 	beq	r2,zero,10001aa4 <blinkys_move+0x624>
1000199c:	e0fffd0f 	ldh	r3,-12(fp)
100019a0:	e0bffc8f 	ldh	r2,-14(fp)
100019a4:	18c003e4 	muli	r3,r3,15
100019a8:	1885883a 	add	r2,r3,r2
100019ac:	100490ba 	slli	r2,r2,2
100019b0:	e085883a 	add	r2,fp,r2
100019b4:	10bee217 	ldw	r2,-1144(r2)
100019b8:	10003a26 	beq	r2,zero,10001aa4 <blinkys_move+0x624>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100019bc:	e0fffd0f 	ldh	r3,-12(fp)
100019c0:	e0bffc8f 	ldh	r2,-14(fp)
100019c4:	18c003e4 	muli	r3,r3,15
100019c8:	1887883a 	add	r3,r3,r2
100019cc:	008400f4 	movhi	r2,4099
100019d0:	1885883a 	add	r2,r3,r2
100019d4:	11296703 	ldbu	r4,-23140(r2)
100019d8:	e0bee103 	ldbu	r2,-1148(fp)
100019dc:	10c03fcc 	andi	r3,r2,255
100019e0:	e0bee143 	ldbu	r2,-1147(fp)
100019e4:	10803fcc 	andi	r2,r2,255
100019e8:	18c003e4 	muli	r3,r3,15
100019ec:	1887883a 	add	r3,r3,r2
100019f0:	008400f4 	movhi	r2,4099
100019f4:	1885883a 	add	r2,r3,r2
100019f8:	10e96703 	ldbu	r3,-23140(r2)
100019fc:	20803fcc 	andi	r2,r4,255
10001a00:	1080201c 	xori	r2,r2,128
10001a04:	10bfe004 	addi	r2,r2,-128
10001a08:	18c03fcc 	andi	r3,r3,255
10001a0c:	18c0201c 	xori	r3,r3,128
10001a10:	18ffe004 	addi	r3,r3,-128
10001a14:	18800c0e 	bge	r3,r2,10001a48 <blinkys_move+0x5c8>
10001a18:	e0bee103 	ldbu	r2,-1148(fp)
10001a1c:	10c03fcc 	andi	r3,r2,255
10001a20:	e0bee143 	ldbu	r2,-1147(fp)
10001a24:	10803fcc 	andi	r2,r2,255
10001a28:	18c003e4 	muli	r3,r3,15
10001a2c:	1887883a 	add	r3,r3,r2
10001a30:	008400f4 	movhi	r2,4099
10001a34:	1885883a 	add	r2,r3,r2
10001a38:	10a96703 	ldbu	r2,-23140(r2)
10001a3c:	10800044 	addi	r2,r2,1
10001a40:	1007883a 	mov	r3,r2
10001a44:	00000706 	br	10001a64 <blinkys_move+0x5e4>
10001a48:	e0fffd0f 	ldh	r3,-12(fp)
10001a4c:	e0bffc8f 	ldh	r2,-14(fp)
10001a50:	18c003e4 	muli	r3,r3,15
10001a54:	1887883a 	add	r3,r3,r2
10001a58:	008400f4 	movhi	r2,4099
10001a5c:	1885883a 	add	r2,r3,r2
10001a60:	10e96703 	ldbu	r3,-23140(r2)
10001a64:	e13ffd0f 	ldh	r4,-12(fp)
10001a68:	e0bffc8f 	ldh	r2,-14(fp)
10001a6c:	210003e4 	muli	r4,r4,15
10001a70:	2089883a 	add	r4,r4,r2
10001a74:	008400f4 	movhi	r2,4099
10001a78:	2085883a 	add	r2,r4,r2
10001a7c:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10001a80:	e0bffd0b 	ldhu	r2,-12(fp)
10001a84:	e0bedf85 	stb	r2,-1154(fp)
            npt.ypos = (uint8_t)nypos;
10001a88:	e0bffc8b 	ldhu	r2,-14(fp)
10001a8c:	e0bedfc5 	stb	r2,-1153(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10001a90:	e0bedf84 	addi	r2,fp,-1154
10001a94:	100b883a 	mov	r5,r2
10001a98:	e13fff17 	ldw	r4,-4(fp)
10001a9c:	00012f80 	call	100012f8 <stack_push>
10001aa0:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate RIGHT.
        nxpos = curr_seek.xpos;
10001aa4:	e0bee103 	ldbu	r2,-1148(fp)
10001aa8:	10803fcc 	andi	r2,r2,255
10001aac:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10001ab0:	e0bee143 	ldbu	r2,-1147(fp)
10001ab4:	10803fcc 	andi	r2,r2,255
10001ab8:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos + 1) % _BOARD_W;
10001abc:	e0bffc8f 	ldh	r2,-14(fp)
10001ac0:	10800044 	addi	r2,r2,1
10001ac4:	00c003c4 	movi	r3,15
10001ac8:	10c7283a 	div	r3,r2,r3
10001acc:	18c003e4 	muli	r3,r3,15
10001ad0:	10c5c83a 	sub	r2,r2,r3
10001ad4:	e0bffc8d 	sth	r2,-14(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
10001ad8:	e0fffd0f 	ldh	r3,-12(fp)
10001adc:	e0bffc8f 	ldh	r2,-14(fp)
10001ae0:	18c003e4 	muli	r3,r3,15
10001ae4:	e0c7883a 	add	r3,fp,r3
10001ae8:	1885883a 	add	r2,r3,r2
10001aec:	10bfc343 	ldbu	r2,-243(r2)
10001af0:	1080005c 	xori	r2,r2,1
10001af4:	10803fcc 	andi	r2,r2,255
10001af8:	10004226 	beq	r2,zero,10001c04 <blinkys_move+0x784>
10001afc:	e0fffd0f 	ldh	r3,-12(fp)
10001b00:	e0bffc8f 	ldh	r2,-14(fp)
10001b04:	18c003e4 	muli	r3,r3,15
10001b08:	1885883a 	add	r2,r3,r2
10001b0c:	100490ba 	slli	r2,r2,2
10001b10:	e085883a 	add	r2,fp,r2
10001b14:	10bee217 	ldw	r2,-1144(r2)
10001b18:	10003a26 	beq	r2,zero,10001c04 <blinkys_move+0x784>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10001b1c:	e0fffd0f 	ldh	r3,-12(fp)
10001b20:	e0bffc8f 	ldh	r2,-14(fp)
10001b24:	18c003e4 	muli	r3,r3,15
10001b28:	1887883a 	add	r3,r3,r2
10001b2c:	008400f4 	movhi	r2,4099
10001b30:	1885883a 	add	r2,r3,r2
10001b34:	11296703 	ldbu	r4,-23140(r2)
10001b38:	e0bee103 	ldbu	r2,-1148(fp)
10001b3c:	10c03fcc 	andi	r3,r2,255
10001b40:	e0bee143 	ldbu	r2,-1147(fp)
10001b44:	10803fcc 	andi	r2,r2,255
10001b48:	18c003e4 	muli	r3,r3,15
10001b4c:	1887883a 	add	r3,r3,r2
10001b50:	008400f4 	movhi	r2,4099
10001b54:	1885883a 	add	r2,r3,r2
10001b58:	10e96703 	ldbu	r3,-23140(r2)
10001b5c:	20803fcc 	andi	r2,r4,255
10001b60:	1080201c 	xori	r2,r2,128
10001b64:	10bfe004 	addi	r2,r2,-128
10001b68:	18c03fcc 	andi	r3,r3,255
10001b6c:	18c0201c 	xori	r3,r3,128
10001b70:	18ffe004 	addi	r3,r3,-128
10001b74:	18800c0e 	bge	r3,r2,10001ba8 <blinkys_move+0x728>
10001b78:	e0bee103 	ldbu	r2,-1148(fp)
10001b7c:	10c03fcc 	andi	r3,r2,255
10001b80:	e0bee143 	ldbu	r2,-1147(fp)
10001b84:	10803fcc 	andi	r2,r2,255
10001b88:	18c003e4 	muli	r3,r3,15
10001b8c:	1887883a 	add	r3,r3,r2
10001b90:	008400f4 	movhi	r2,4099
10001b94:	1885883a 	add	r2,r3,r2
10001b98:	10a96703 	ldbu	r2,-23140(r2)
10001b9c:	10800044 	addi	r2,r2,1
10001ba0:	1007883a 	mov	r3,r2
10001ba4:	00000706 	br	10001bc4 <blinkys_move+0x744>
10001ba8:	e0fffd0f 	ldh	r3,-12(fp)
10001bac:	e0bffc8f 	ldh	r2,-14(fp)
10001bb0:	18c003e4 	muli	r3,r3,15
10001bb4:	1887883a 	add	r3,r3,r2
10001bb8:	008400f4 	movhi	r2,4099
10001bbc:	1885883a 	add	r2,r3,r2
10001bc0:	10e96703 	ldbu	r3,-23140(r2)
10001bc4:	e13ffd0f 	ldh	r4,-12(fp)
10001bc8:	e0bffc8f 	ldh	r2,-14(fp)
10001bcc:	210003e4 	muli	r4,r4,15
10001bd0:	2089883a 	add	r4,r4,r2
10001bd4:	008400f4 	movhi	r2,4099
10001bd8:	2085883a 	add	r2,r4,r2
10001bdc:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10001be0:	e0bffd0b 	ldhu	r2,-12(fp)
10001be4:	e0bedf05 	stb	r2,-1156(fp)
            npt.ypos = (uint8_t)nypos;
10001be8:	e0bffc8b 	ldhu	r2,-14(fp)
10001bec:	e0bedf45 	stb	r2,-1155(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10001bf0:	e0bedf04 	addi	r2,fp,-1156
10001bf4:	100b883a 	mov	r5,r2
10001bf8:	e13fff17 	ldw	r4,-4(fp)
10001bfc:	00012f80 	call	100012f8 <stack_push>
10001c00:	e0bfff15 	stw	r2,-4(fp)
    while(!stack_isempty(dijkstra_fringe)) {
10001c04:	e13fff17 	ldw	r4,-4(fp)
10001c08:	00014580 	call	10001458 <stack_isempty>
10001c0c:	1080005c 	xori	r2,r2,1
10001c10:	10803fcc 	andi	r2,r2,255
10001c14:	103e871e 	bne	r2,zero,10001634 <blinkys_move+0x1b4>
        }
    }

    // Now all tiles are marked with a distance. See where should blinky go.
    uint8_t best_xpos = game->blinky.xpos;
10001c18:	e0bede17 	ldw	r2,-1160(fp)
10001c1c:	1080e303 	ldbu	r2,908(r2)
10001c20:	e0bffe45 	stb	r2,-7(fp)
    uint8_t best_ypos = game->blinky.ypos;
10001c24:	e0bede17 	ldw	r2,-1160(fp)
10001c28:	1080e343 	ldbu	r2,909(r2)
10001c2c:	e0bffe05 	stb	r2,-8(fp)
    uint8_t best_dist = 63;
10001c30:	00800fc4 	movi	r2,63
10001c34:	e0bffdc5 	stb	r2,-9(fp)

    // Investigate UP.
    int16_t nxpos = game->blinky.xpos;
10001c38:	e0bede17 	ldw	r2,-1160(fp)
10001c3c:	1080e303 	ldbu	r2,908(r2)
10001c40:	10803fcc 	andi	r2,r2,255
10001c44:	e0bffc0d 	sth	r2,-16(fp)
    int16_t nypos = game->blinky.ypos;
10001c48:	e0bede17 	ldw	r2,-1160(fp)
10001c4c:	1080e343 	ldbu	r2,909(r2)
10001c50:	10803fcc 	andi	r2,r2,255
10001c54:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
10001c58:	e0bffc0f 	ldh	r2,-16(fp)
10001c5c:	10800384 	addi	r2,r2,14
10001c60:	00c003c4 	movi	r3,15
10001c64:	10c7283a 	div	r3,r2,r3
10001c68:	18c003e4 	muli	r3,r3,15
10001c6c:	10c5c83a 	sub	r2,r2,r3
10001c70:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
10001c74:	e0fffc0f 	ldh	r3,-16(fp)
10001c78:	e0bffb8f 	ldh	r2,-18(fp)
10001c7c:	18c003e4 	muli	r3,r3,15
10001c80:	1887883a 	add	r3,r3,r2
10001c84:	008400f4 	movhi	r2,4099
10001c88:	1885883a 	add	r2,r3,r2
10001c8c:	10a96703 	ldbu	r2,-23140(r2)
10001c90:	10c03fcc 	andi	r3,r2,255
10001c94:	18c0201c 	xori	r3,r3,128
10001c98:	18ffe004 	addi	r3,r3,-128
10001c9c:	e0bffdc3 	ldbu	r2,-9(fp)
10001ca0:	18800c0e 	bge	r3,r2,10001cd4 <blinkys_move+0x854>
        best_dist = (uint8_t)distances[nxpos][nypos];
10001ca4:	e0fffc0f 	ldh	r3,-16(fp)
10001ca8:	e0bffb8f 	ldh	r2,-18(fp)
10001cac:	18c003e4 	muli	r3,r3,15
10001cb0:	1887883a 	add	r3,r3,r2
10001cb4:	008400f4 	movhi	r2,4099
10001cb8:	1885883a 	add	r2,r3,r2
10001cbc:	10a96703 	ldbu	r2,-23140(r2)
10001cc0:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = (uint8_t)nxpos;
10001cc4:	e0bffc0b 	ldhu	r2,-16(fp)
10001cc8:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = (uint8_t)nypos;
10001ccc:	e0bffb8b 	ldhu	r2,-18(fp)
10001cd0:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate DOWN.
    nxpos = game->blinky.xpos;
10001cd4:	e0bede17 	ldw	r2,-1160(fp)
10001cd8:	1080e303 	ldbu	r2,908(r2)
10001cdc:	10803fcc 	andi	r2,r2,255
10001ce0:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
10001ce4:	e0bede17 	ldw	r2,-1160(fp)
10001ce8:	1080e343 	ldbu	r2,909(r2)
10001cec:	10803fcc 	andi	r2,r2,255
10001cf0:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos + 1) % _BOARD_H;
10001cf4:	e0bffc0f 	ldh	r2,-16(fp)
10001cf8:	10800044 	addi	r2,r2,1
10001cfc:	00c003c4 	movi	r3,15
10001d00:	10c7283a 	div	r3,r2,r3
10001d04:	18c003e4 	muli	r3,r3,15
10001d08:	10c5c83a 	sub	r2,r2,r3
10001d0c:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
10001d10:	e0fffc0f 	ldh	r3,-16(fp)
10001d14:	e0bffb8f 	ldh	r2,-18(fp)
10001d18:	18c003e4 	muli	r3,r3,15
10001d1c:	1887883a 	add	r3,r3,r2
10001d20:	008400f4 	movhi	r2,4099
10001d24:	1885883a 	add	r2,r3,r2
10001d28:	10a96703 	ldbu	r2,-23140(r2)
10001d2c:	10c03fcc 	andi	r3,r2,255
10001d30:	18c0201c 	xori	r3,r3,128
10001d34:	18ffe004 	addi	r3,r3,-128
10001d38:	e0bffdc3 	ldbu	r2,-9(fp)
10001d3c:	18800c0e 	bge	r3,r2,10001d70 <blinkys_move+0x8f0>
        best_dist = (uint8_t)distances[nxpos][nypos];
10001d40:	e0fffc0f 	ldh	r3,-16(fp)
10001d44:	e0bffb8f 	ldh	r2,-18(fp)
10001d48:	18c003e4 	muli	r3,r3,15
10001d4c:	1887883a 	add	r3,r3,r2
10001d50:	008400f4 	movhi	r2,4099
10001d54:	1885883a 	add	r2,r3,r2
10001d58:	10a96703 	ldbu	r2,-23140(r2)
10001d5c:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = (uint8_t)nxpos;
10001d60:	e0bffc0b 	ldhu	r2,-16(fp)
10001d64:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = (uint8_t)nypos;
10001d68:	e0bffb8b 	ldhu	r2,-18(fp)
10001d6c:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate LEFT.
    nxpos = game->blinky.xpos;
10001d70:	e0bede17 	ldw	r2,-1160(fp)
10001d74:	1080e303 	ldbu	r2,908(r2)
10001d78:	10803fcc 	andi	r2,r2,255
10001d7c:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
10001d80:	e0bede17 	ldw	r2,-1160(fp)
10001d84:	1080e343 	ldbu	r2,909(r2)
10001d88:	10803fcc 	andi	r2,r2,255
10001d8c:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10001d90:	e0bffb8f 	ldh	r2,-18(fp)
10001d94:	10800384 	addi	r2,r2,14
10001d98:	00c003c4 	movi	r3,15
10001d9c:	10c7283a 	div	r3,r2,r3
10001da0:	18c003e4 	muli	r3,r3,15
10001da4:	10c5c83a 	sub	r2,r2,r3
10001da8:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10001dac:	e0fffc0f 	ldh	r3,-16(fp)
10001db0:	e0bffb8f 	ldh	r2,-18(fp)
10001db4:	18c003e4 	muli	r3,r3,15
10001db8:	1887883a 	add	r3,r3,r2
10001dbc:	008400f4 	movhi	r2,4099
10001dc0:	1885883a 	add	r2,r3,r2
10001dc4:	10a96703 	ldbu	r2,-23140(r2)
10001dc8:	10c03fcc 	andi	r3,r2,255
10001dcc:	18c0201c 	xori	r3,r3,128
10001dd0:	18ffe004 	addi	r3,r3,-128
10001dd4:	e0bffdc3 	ldbu	r2,-9(fp)
10001dd8:	18800c0e 	bge	r3,r2,10001e0c <blinkys_move+0x98c>
        best_dist = (uint8_t)distances[nxpos][nypos];
10001ddc:	e0fffc0f 	ldh	r3,-16(fp)
10001de0:	e0bffb8f 	ldh	r2,-18(fp)
10001de4:	18c003e4 	muli	r3,r3,15
10001de8:	1887883a 	add	r3,r3,r2
10001dec:	008400f4 	movhi	r2,4099
10001df0:	1885883a 	add	r2,r3,r2
10001df4:	10a96703 	ldbu	r2,-23140(r2)
10001df8:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = (uint8_t)nxpos;
10001dfc:	e0bffc0b 	ldhu	r2,-16(fp)
10001e00:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = (uint8_t)nypos;
10001e04:	e0bffb8b 	ldhu	r2,-18(fp)
10001e08:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate RIGHT.
    nxpos = game->blinky.xpos;
10001e0c:	e0bede17 	ldw	r2,-1160(fp)
10001e10:	1080e303 	ldbu	r2,908(r2)
10001e14:	10803fcc 	andi	r2,r2,255
10001e18:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
10001e1c:	e0bede17 	ldw	r2,-1160(fp)
10001e20:	1080e343 	ldbu	r2,909(r2)
10001e24:	10803fcc 	andi	r2,r2,255
10001e28:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos + 1) % _BOARD_W;
10001e2c:	e0bffb8f 	ldh	r2,-18(fp)
10001e30:	10800044 	addi	r2,r2,1
10001e34:	00c003c4 	movi	r3,15
10001e38:	10c7283a 	div	r3,r2,r3
10001e3c:	18c003e4 	muli	r3,r3,15
10001e40:	10c5c83a 	sub	r2,r2,r3
10001e44:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10001e48:	e0fffc0f 	ldh	r3,-16(fp)
10001e4c:	e0bffb8f 	ldh	r2,-18(fp)
10001e50:	18c003e4 	muli	r3,r3,15
10001e54:	1887883a 	add	r3,r3,r2
10001e58:	008400f4 	movhi	r2,4099
10001e5c:	1885883a 	add	r2,r3,r2
10001e60:	10a96703 	ldbu	r2,-23140(r2)
10001e64:	10c03fcc 	andi	r3,r2,255
10001e68:	18c0201c 	xori	r3,r3,128
10001e6c:	18ffe004 	addi	r3,r3,-128
10001e70:	e0bffdc3 	ldbu	r2,-9(fp)
10001e74:	18800c0e 	bge	r3,r2,10001ea8 <blinkys_move+0xa28>
        best_dist = (uint8_t)distances[nxpos][nypos];
10001e78:	e0fffc0f 	ldh	r3,-16(fp)
10001e7c:	e0bffb8f 	ldh	r2,-18(fp)
10001e80:	18c003e4 	muli	r3,r3,15
10001e84:	1887883a 	add	r3,r3,r2
10001e88:	008400f4 	movhi	r2,4099
10001e8c:	1885883a 	add	r2,r3,r2
10001e90:	10a96703 	ldbu	r2,-23140(r2)
10001e94:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = (uint8_t)nxpos;
10001e98:	e0bffc0b 	ldhu	r2,-16(fp)
10001e9c:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = (uint8_t)nypos;
10001ea0:	e0bffb8b 	ldhu	r2,-18(fp)
10001ea4:	e0bffe05 	stb	r2,-8(fp)
    }

    if(best_dist != 63) {
10001ea8:	e0bffdc3 	ldbu	r2,-9(fp)
10001eac:	10800fe0 	cmpeqi	r2,r2,63
10001eb0:	1000141e 	bne	r2,zero,10001f04 <blinkys_move+0xa84>
    	addPendingPos(game->blinky.xpos, game->blinky.ypos);
10001eb4:	e0bede17 	ldw	r2,-1160(fp)
10001eb8:	1080e303 	ldbu	r2,908(r2)
10001ebc:	10c03fcc 	andi	r3,r2,255
10001ec0:	e0bede17 	ldw	r2,-1160(fp)
10001ec4:	1080e343 	ldbu	r2,909(r2)
10001ec8:	10803fcc 	andi	r2,r2,255
10001ecc:	100b883a 	mov	r5,r2
10001ed0:	1809883a 	mov	r4,r3
10001ed4:	00066f40 	call	100066f4 <addPendingPos>
    	addPendingPos(best_xpos, best_ypos);
10001ed8:	e0bffe43 	ldbu	r2,-7(fp)
10001edc:	e0fffe03 	ldbu	r3,-8(fp)
10001ee0:	180b883a 	mov	r5,r3
10001ee4:	1009883a 	mov	r4,r2
10001ee8:	00066f40 	call	100066f4 <addPendingPos>
        game->blinky.xpos = best_xpos;
10001eec:	e0bede17 	ldw	r2,-1160(fp)
10001ef0:	e0fffe43 	ldbu	r3,-7(fp)
10001ef4:	10c0e305 	stb	r3,908(r2)
        game->blinky.ypos = best_ypos;
10001ef8:	e0bede17 	ldw	r2,-1160(fp)
10001efc:	e0fffe03 	ldbu	r3,-8(fp)
10001f00:	10c0e345 	stb	r3,909(r2)
    }

    recur_free(dijkstra_fringe);
10001f04:	e13fff17 	ldw	r4,-4(fp)
10001f08:	00012ac0 	call	100012ac <recur_free>
}
10001f0c:	e037883a 	mov	sp,fp
10001f10:	dfc00117 	ldw	ra,4(sp)
10001f14:	df000017 	ldw	fp,0(sp)
10001f18:	dec00204 	addi	sp,sp,8
10001f1c:	f800283a 	ret

10001f20 <det_goal_pos>:
// Pinky. Ambush the player by cutting a way towards the player's moving direction.

static int16_t goal_pos_x = 0;
static int16_t goal_pos_y = 0;

void det_goal_pos(Game* game, char keypress) {             //function to determine the postion for pinky
10001f20:	defffd04 	addi	sp,sp,-12
10001f24:	df000215 	stw	fp,8(sp)
10001f28:	df000204 	addi	fp,sp,8
10001f2c:	e13fff15 	stw	r4,-4(fp)
10001f30:	2805883a 	mov	r2,r5
10001f34:	e0bffe05 	stb	r2,-8(fp)
    goal_pos_x = game->player.xpos;
10001f38:	e0bfff17 	ldw	r2,-4(fp)
10001f3c:	1080e183 	ldbu	r2,902(r2)
10001f40:	10803fcc 	andi	r2,r2,255
10001f44:	d0a7cd0d 	sth	r2,-24780(gp)
    goal_pos_y = game->player.ypos;
10001f48:	e0bfff17 	ldw	r2,-4(fp)
10001f4c:	1080e1c3 	ldbu	r2,903(r2)
10001f50:	10803fcc 	andi	r2,r2,255
10001f54:	d0a7cd8d 	sth	r2,-24778(gp)

	if (keypress == 'w' || keypress == 'W') {
10001f58:	e0bffe07 	ldb	r2,-8(fp)
10001f5c:	10801de0 	cmpeqi	r2,r2,119
10001f60:	1000031e 	bne	r2,zero,10001f70 <det_goal_pos+0x50>
10001f64:	e0bffe07 	ldb	r2,-8(fp)
10001f68:	108015d8 	cmpnei	r2,r2,87
10001f6c:	1000241e 	bne	r2,zero,10002000 <det_goal_pos+0xe0>
		goal_pos_y = (goal_pos_y - 5 + _BOARD_H) % _BOARD_H;
10001f70:	d0a7cd8b 	ldhu	r2,-24778(gp)
10001f74:	10bfffcc 	andi	r2,r2,65535
10001f78:	10a0001c 	xori	r2,r2,32768
10001f7c:	10a00004 	addi	r2,r2,-32768
10001f80:	10800284 	addi	r2,r2,10
10001f84:	00c003c4 	movi	r3,15
10001f88:	10c7283a 	div	r3,r2,r3
10001f8c:	18c003e4 	muli	r3,r3,15
10001f90:	10c5c83a 	sub	r2,r2,r3
10001f94:	d0a7cd8d 	sth	r2,-24778(gp)
		while(game->game_map[goal_pos_x][goal_pos_y] == WALL) goal_pos_y = (goal_pos_y + 1) % _BOARD_H;
10001f98:	00000a06 	br	10001fc4 <det_goal_pos+0xa4>
10001f9c:	d0a7cd8b 	ldhu	r2,-24778(gp)
10001fa0:	10bfffcc 	andi	r2,r2,65535
10001fa4:	10a0001c 	xori	r2,r2,32768
10001fa8:	10a00004 	addi	r2,r2,-32768
10001fac:	10800044 	addi	r2,r2,1
10001fb0:	00c003c4 	movi	r3,15
10001fb4:	10c7283a 	div	r3,r2,r3
10001fb8:	18c003e4 	muli	r3,r3,15
10001fbc:	10c5c83a 	sub	r2,r2,r3
10001fc0:	d0a7cd8d 	sth	r2,-24778(gp)
10001fc4:	d0a7cd0b 	ldhu	r2,-24780(gp)
10001fc8:	113fffcc 	andi	r4,r2,65535
10001fcc:	2120001c 	xori	r4,r4,32768
10001fd0:	21200004 	addi	r4,r4,-32768
10001fd4:	d0a7cd8b 	ldhu	r2,-24778(gp)
10001fd8:	10bfffcc 	andi	r2,r2,65535
10001fdc:	10a0001c 	xori	r2,r2,32768
10001fe0:	10a00004 	addi	r2,r2,-32768
10001fe4:	e0ffff17 	ldw	r3,-4(fp)
10001fe8:	210003e4 	muli	r4,r4,15
10001fec:	2085883a 	add	r2,r4,r2
10001ff0:	100490ba 	slli	r2,r2,2
10001ff4:	1885883a 	add	r2,r3,r2
10001ff8:	10800017 	ldw	r2,0(r2)
10001ffc:	103fe726 	beq	r2,zero,10001f9c <det_goal_pos+0x7c>
	}
	if (keypress == 's' || keypress == 'S') {
10002000:	e0bffe07 	ldb	r2,-8(fp)
10002004:	10801ce0 	cmpeqi	r2,r2,115
10002008:	1000031e 	bne	r2,zero,10002018 <det_goal_pos+0xf8>
1000200c:	e0bffe07 	ldb	r2,-8(fp)
10002010:	108014d8 	cmpnei	r2,r2,83
10002014:	1000231e 	bne	r2,zero,100020a4 <det_goal_pos+0x184>
		goal_pos_y = (game -> player.ypos + 5) % _BOARD_H;
10002018:	e0bfff17 	ldw	r2,-4(fp)
1000201c:	1080e1c3 	ldbu	r2,903(r2)
10002020:	10803fcc 	andi	r2,r2,255
10002024:	10800144 	addi	r2,r2,5
10002028:	00c003c4 	movi	r3,15
1000202c:	10c7283a 	div	r3,r2,r3
10002030:	18c003e4 	muli	r3,r3,15
10002034:	10c5c83a 	sub	r2,r2,r3
10002038:	d0a7cd8d 	sth	r2,-24778(gp)
		while(game->game_map[goal_pos_x][goal_pos_y] == WALL) goal_pos_y = (goal_pos_y - 1 + _BOARD_H) % _BOARD_H;
1000203c:	00000a06 	br	10002068 <det_goal_pos+0x148>
10002040:	d0a7cd8b 	ldhu	r2,-24778(gp)
10002044:	10bfffcc 	andi	r2,r2,65535
10002048:	10a0001c 	xori	r2,r2,32768
1000204c:	10a00004 	addi	r2,r2,-32768
10002050:	10800384 	addi	r2,r2,14
10002054:	00c003c4 	movi	r3,15
10002058:	10c7283a 	div	r3,r2,r3
1000205c:	18c003e4 	muli	r3,r3,15
10002060:	10c5c83a 	sub	r2,r2,r3
10002064:	d0a7cd8d 	sth	r2,-24778(gp)
10002068:	d0a7cd0b 	ldhu	r2,-24780(gp)
1000206c:	113fffcc 	andi	r4,r2,65535
10002070:	2120001c 	xori	r4,r4,32768
10002074:	21200004 	addi	r4,r4,-32768
10002078:	d0a7cd8b 	ldhu	r2,-24778(gp)
1000207c:	10bfffcc 	andi	r2,r2,65535
10002080:	10a0001c 	xori	r2,r2,32768
10002084:	10a00004 	addi	r2,r2,-32768
10002088:	e0ffff17 	ldw	r3,-4(fp)
1000208c:	210003e4 	muli	r4,r4,15
10002090:	2085883a 	add	r2,r4,r2
10002094:	100490ba 	slli	r2,r2,2
10002098:	1885883a 	add	r2,r3,r2
1000209c:	10800017 	ldw	r2,0(r2)
100020a0:	103fe726 	beq	r2,zero,10002040 <det_goal_pos+0x120>
	}
	if (keypress == 'a' || keypress == 'A') {
100020a4:	e0bffe07 	ldb	r2,-8(fp)
100020a8:	10801860 	cmpeqi	r2,r2,97
100020ac:	1000031e 	bne	r2,zero,100020bc <det_goal_pos+0x19c>
100020b0:	e0bffe07 	ldb	r2,-8(fp)
100020b4:	10801058 	cmpnei	r2,r2,65
100020b8:	1000231e 	bne	r2,zero,10002148 <det_goal_pos+0x228>
		goal_pos_x = (game->player.xpos - 5 + _BOARD_W) % _BOARD_W;
100020bc:	e0bfff17 	ldw	r2,-4(fp)
100020c0:	1080e183 	ldbu	r2,902(r2)
100020c4:	10803fcc 	andi	r2,r2,255
100020c8:	10800284 	addi	r2,r2,10
100020cc:	00c003c4 	movi	r3,15
100020d0:	10c7283a 	div	r3,r2,r3
100020d4:	18c003e4 	muli	r3,r3,15
100020d8:	10c5c83a 	sub	r2,r2,r3
100020dc:	d0a7cd0d 	sth	r2,-24780(gp)
		while(game->game_map[goal_pos_x][goal_pos_y] == WALL) goal_pos_x = (goal_pos_x + 1) % _BOARD_W;
100020e0:	00000a06 	br	1000210c <det_goal_pos+0x1ec>
100020e4:	d0a7cd0b 	ldhu	r2,-24780(gp)
100020e8:	10bfffcc 	andi	r2,r2,65535
100020ec:	10a0001c 	xori	r2,r2,32768
100020f0:	10a00004 	addi	r2,r2,-32768
100020f4:	10800044 	addi	r2,r2,1
100020f8:	00c003c4 	movi	r3,15
100020fc:	10c7283a 	div	r3,r2,r3
10002100:	18c003e4 	muli	r3,r3,15
10002104:	10c5c83a 	sub	r2,r2,r3
10002108:	d0a7cd0d 	sth	r2,-24780(gp)
1000210c:	d0a7cd0b 	ldhu	r2,-24780(gp)
10002110:	113fffcc 	andi	r4,r2,65535
10002114:	2120001c 	xori	r4,r4,32768
10002118:	21200004 	addi	r4,r4,-32768
1000211c:	d0a7cd8b 	ldhu	r2,-24778(gp)
10002120:	10bfffcc 	andi	r2,r2,65535
10002124:	10a0001c 	xori	r2,r2,32768
10002128:	10a00004 	addi	r2,r2,-32768
1000212c:	e0ffff17 	ldw	r3,-4(fp)
10002130:	210003e4 	muli	r4,r4,15
10002134:	2085883a 	add	r2,r4,r2
10002138:	100490ba 	slli	r2,r2,2
1000213c:	1885883a 	add	r2,r3,r2
10002140:	10800017 	ldw	r2,0(r2)
10002144:	103fe726 	beq	r2,zero,100020e4 <det_goal_pos+0x1c4>
	}
	if (keypress == 'd' || keypress == 'D') {
10002148:	e0bffe07 	ldb	r2,-8(fp)
1000214c:	10801920 	cmpeqi	r2,r2,100
10002150:	1000031e 	bne	r2,zero,10002160 <det_goal_pos+0x240>
10002154:	e0bffe07 	ldb	r2,-8(fp)
10002158:	10801118 	cmpnei	r2,r2,68
1000215c:	1000231e 	bne	r2,zero,100021ec <det_goal_pos+0x2cc>
		goal_pos_x = (game->player.xpos + 5) % _BOARD_W;
10002160:	e0bfff17 	ldw	r2,-4(fp)
10002164:	1080e183 	ldbu	r2,902(r2)
10002168:	10803fcc 	andi	r2,r2,255
1000216c:	10800144 	addi	r2,r2,5
10002170:	00c003c4 	movi	r3,15
10002174:	10c7283a 	div	r3,r2,r3
10002178:	18c003e4 	muli	r3,r3,15
1000217c:	10c5c83a 	sub	r2,r2,r3
10002180:	d0a7cd0d 	sth	r2,-24780(gp)
		while(game->game_map[goal_pos_x][goal_pos_y] == WALL) goal_pos_x = (goal_pos_x - 1 + _BOARD_W) % _BOARD_W;
10002184:	00000a06 	br	100021b0 <det_goal_pos+0x290>
10002188:	d0a7cd0b 	ldhu	r2,-24780(gp)
1000218c:	10bfffcc 	andi	r2,r2,65535
10002190:	10a0001c 	xori	r2,r2,32768
10002194:	10a00004 	addi	r2,r2,-32768
10002198:	10800384 	addi	r2,r2,14
1000219c:	00c003c4 	movi	r3,15
100021a0:	10c7283a 	div	r3,r2,r3
100021a4:	18c003e4 	muli	r3,r3,15
100021a8:	10c5c83a 	sub	r2,r2,r3
100021ac:	d0a7cd0d 	sth	r2,-24780(gp)
100021b0:	d0a7cd0b 	ldhu	r2,-24780(gp)
100021b4:	113fffcc 	andi	r4,r2,65535
100021b8:	2120001c 	xori	r4,r4,32768
100021bc:	21200004 	addi	r4,r4,-32768
100021c0:	d0a7cd8b 	ldhu	r2,-24778(gp)
100021c4:	10bfffcc 	andi	r2,r2,65535
100021c8:	10a0001c 	xori	r2,r2,32768
100021cc:	10a00004 	addi	r2,r2,-32768
100021d0:	e0ffff17 	ldw	r3,-4(fp)
100021d4:	210003e4 	muli	r4,r4,15
100021d8:	2085883a 	add	r2,r4,r2
100021dc:	100490ba 	slli	r2,r2,2
100021e0:	1885883a 	add	r2,r3,r2
100021e4:	10800017 	ldw	r2,0(r2)
100021e8:	103fe726 	beq	r2,zero,10002188 <det_goal_pos+0x268>
	}
}
100021ec:	0001883a 	nop
100021f0:	e037883a 	mov	sp,fp
100021f4:	df000017 	ldw	fp,0(sp)
100021f8:	dec00104 	addi	sp,sp,4
100021fc:	f800283a 	ret

10002200 <pinkys_move>:

void pinkys_move(Game* game, char keypress) {
10002200:	defeda04 	addi	sp,sp,-1176
10002204:	dfc12515 	stw	ra,1172(sp)
10002208:	df012415 	stw	fp,1168(sp)
1000220c:	df012404 	addi	fp,sp,1168
10002210:	e13edd15 	stw	r4,-1164(fp)
10002214:	2805883a 	mov	r2,r5
10002218:	e0bedc05 	stb	r2,-1168(fp)
    // Pinky is dead.
    if(game->pinky.revive_cntdown > 0) {
1000221c:	e0bedd17 	ldw	r2,-1164(fp)
10002220:	1080e58b 	ldhu	r2,918(r2)
10002224:	10bfffcc 	andi	r2,r2,65535
10002228:	10000726 	beq	r2,zero,10002248 <pinkys_move+0x48>
        game->pinky.revive_cntdown -= 1;
1000222c:	e0bedd17 	ldw	r2,-1164(fp)
10002230:	1080e58b 	ldhu	r2,918(r2)
10002234:	10bfffc4 	addi	r2,r2,-1
10002238:	1007883a 	mov	r3,r2
1000223c:	e0bedd17 	ldw	r2,-1164(fp)
10002240:	10c0e58d 	sth	r3,918(r2)
10002244:	00029706 	br	10002ca4 <pinkys_move+0xaa4>
        return;
    }

    bool dst_finalize[_BOARD_H][_BOARD_W];
    Tile tmp_map[_BOARD_H][_BOARD_W];
    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
10002248:	e0fedd17 	ldw	r3,-1164(fp)
1000224c:	e0bee104 	addi	r2,fp,-1148
10002250:	0180e104 	movi	r6,900
10002254:	180b883a 	mov	r5,r3
10002258:	1009883a 	mov	r4,r2
1000225c:	0016c340 	call	10016c34 <memcpy>

    uint8_t i, j;
    for(i = 0; i<_BOARD_H;i+=1) {
10002260:	e03fffc5 	stb	zero,-1(fp)
10002264:	00001906 	br	100022cc <pinkys_move+0xcc>
        for(j=0; j<_BOARD_W;j+=1) {
10002268:	e03fff85 	stb	zero,-2(fp)
1000226c:	00001106 	br	100022b4 <pinkys_move+0xb4>
            distances[i][j] = 63; //Something really long.
10002270:	e0ffffc3 	ldbu	r3,-1(fp)
10002274:	e0bfff83 	ldbu	r2,-2(fp)
10002278:	18c003e4 	muli	r3,r3,15
1000227c:	1889883a 	add	r4,r3,r2
10002280:	00c00fc4 	movi	r3,63
10002284:	008400f4 	movhi	r2,4099
10002288:	2085883a 	add	r2,r4,r2
1000228c:	10e96705 	stb	r3,-23140(r2)
            dst_finalize[i][j] = false; // All not finalized.
10002290:	e0ffffc3 	ldbu	r3,-1(fp)
10002294:	e0bfff83 	ldbu	r2,-2(fp)
10002298:	18c003e4 	muli	r3,r3,15
1000229c:	e0c7883a 	add	r3,fp,r3
100022a0:	1885883a 	add	r2,r3,r2
100022a4:	103fc2c5 	stb	zero,-245(r2)
        for(j=0; j<_BOARD_W;j+=1) {
100022a8:	e0bfff83 	ldbu	r2,-2(fp)
100022ac:	10800044 	addi	r2,r2,1
100022b0:	e0bfff85 	stb	r2,-2(fp)
100022b4:	e0bfff83 	ldbu	r2,-2(fp)
100022b8:	108003f0 	cmpltui	r2,r2,15
100022bc:	103fec1e 	bne	r2,zero,10002270 <pinkys_move+0x70>
    for(i = 0; i<_BOARD_H;i+=1) {
100022c0:	e0bfffc3 	ldbu	r2,-1(fp)
100022c4:	10800044 	addi	r2,r2,1
100022c8:	e0bfffc5 	stb	r2,-1(fp)
100022cc:	e0bfffc3 	ldbu	r2,-1(fp)
100022d0:	108003f0 	cmpltui	r2,r2,15
100022d4:	103fe41e 	bne	r2,zero,10002268 <pinkys_move+0x68>
        }
    }

    det_goal_pos(game, keypress);          // Determine the goal position of pinky
100022d8:	e0bedc07 	ldb	r2,-1168(fp)
100022dc:	100b883a 	mov	r5,r2
100022e0:	e13edd17 	ldw	r4,-1164(fp)
100022e4:	0001f200 	call	10001f20 <det_goal_pos>
    distances[goal_pos_x][goal_pos_y] = 0; // Set the distance of goal to 0.
100022e8:	d0a7cd0b 	ldhu	r2,-24780(gp)
100022ec:	10ffffcc 	andi	r3,r2,65535
100022f0:	18e0001c 	xori	r3,r3,32768
100022f4:	18e00004 	addi	r3,r3,-32768
100022f8:	d0a7cd8b 	ldhu	r2,-24778(gp)
100022fc:	10bfffcc 	andi	r2,r2,65535
10002300:	10a0001c 	xori	r2,r2,32768
10002304:	10a00004 	addi	r2,r2,-32768
10002308:	18c003e4 	muli	r3,r3,15
1000230c:	1887883a 	add	r3,r3,r2
10002310:	008400f4 	movhi	r2,4099
10002314:	1885883a 	add	r2,r3,r2
10002318:	10296705 	stb	zero,-23140(r2)

	//Reapply dijkstra to the desired goal pos for pinky
    LinkedPoints* dijkstra_fringe_pinky;
    dijkstra_fringe_pinky = nullptr;
1000231c:	e03ffe15 	stw	zero,-8(fp)

    Point desired_pos;
    desired_pos.xpos = (uint8_t)goal_pos_x;
10002320:	d0a7cd0b 	ldhu	r2,-24780(gp)
10002324:	e0bee085 	stb	r2,-1150(fp)
    desired_pos.ypos = (uint8_t)goal_pos_y;
10002328:	d0a7cd8b 	ldhu	r2,-24778(gp)
1000232c:	e0bee0c5 	stb	r2,-1149(fp)
    // Propagate from desired position to ghost.
    dijkstra_fringe_pinky = stack_push(dijkstra_fringe_pinky, &desired_pos);
10002330:	e0bee084 	addi	r2,fp,-1150
10002334:	100b883a 	mov	r5,r2
10002338:	e13ffe17 	ldw	r4,-8(fp)
1000233c:	00012f80 	call	100012f8 <stack_push>
10002340:	e0bffe15 	stw	r2,-8(fp)



    // Mark other ghosts as obstacles.
    tmp_map[game->inky.xpos][game->inky.ypos] = WALL;
10002344:	e0bedd17 	ldw	r2,-1164(fp)
10002348:	1080e603 	ldbu	r2,920(r2)
1000234c:	10c03fcc 	andi	r3,r2,255
10002350:	e0bedd17 	ldw	r2,-1164(fp)
10002354:	1080e643 	ldbu	r2,921(r2)
10002358:	10803fcc 	andi	r2,r2,255
1000235c:	18c003e4 	muli	r3,r3,15
10002360:	1885883a 	add	r2,r3,r2
10002364:	100490ba 	slli	r2,r2,2
10002368:	e085883a 	add	r2,fp,r2
1000236c:	103ee115 	stw	zero,-1148(r2)
    tmp_map[game->clyde.xpos][game->clyde.ypos] = WALL;
10002370:	e0bedd17 	ldw	r2,-1164(fp)
10002374:	1080e783 	ldbu	r2,926(r2)
10002378:	10c03fcc 	andi	r3,r2,255
1000237c:	e0bedd17 	ldw	r2,-1164(fp)
10002380:	1080e7c3 	ldbu	r2,927(r2)
10002384:	10803fcc 	andi	r2,r2,255
10002388:	18c003e4 	muli	r3,r3,15
1000238c:	1885883a 	add	r2,r3,r2
10002390:	100490ba 	slli	r2,r2,2
10002394:	e085883a 	add	r2,fp,r2
10002398:	103ee115 	stw	zero,-1148(r2)
    tmp_map[game->blinky.xpos][game->blinky.ypos] = WALL;
1000239c:	e0bedd17 	ldw	r2,-1164(fp)
100023a0:	1080e303 	ldbu	r2,908(r2)
100023a4:	10c03fcc 	andi	r3,r2,255
100023a8:	e0bedd17 	ldw	r2,-1164(fp)
100023ac:	1080e343 	ldbu	r2,909(r2)
100023b0:	10803fcc 	andi	r2,r2,255
100023b4:	18c003e4 	muli	r3,r3,15
100023b8:	1885883a 	add	r2,r3,r2
100023bc:	100490ba 	slli	r2,r2,2
100023c0:	e085883a 	add	r2,fp,r2
100023c4:	103ee115 	stw	zero,-1148(r2)

    while(!stack_isempty(dijkstra_fringe_pinky)) {
100023c8:	00017406 	br	1000299c <pinkys_move+0x79c>
        Point curr_seek;
        printf("*");
100023cc:	01000a84 	movi	r4,42
100023d0:	00170240 	call	10017024 <putchar>
        fflush(stdout);
100023d4:	d0a01117 	ldw	r2,-32700(gp)
100023d8:	10800217 	ldw	r2,8(r2)
100023dc:	1009883a 	mov	r4,r2
100023e0:	001520c0 	call	1001520c <fflush>
        dijkstra_fringe_pinky = stack_pop(dijkstra_fringe_pinky, &curr_seek);
100023e4:	e0bee004 	addi	r2,fp,-1152
100023e8:	100b883a 	mov	r5,r2
100023ec:	e13ffe17 	ldw	r4,-8(fp)
100023f0:	00013fc0 	call	100013fc <stack_pop>
100023f4:	e0bffe15 	stw	r2,-8(fp)
        dst_finalize[curr_seek.xpos][curr_seek.ypos] = true;
100023f8:	e0bee003 	ldbu	r2,-1152(fp)
100023fc:	10c03fcc 	andi	r3,r2,255
10002400:	e0bee043 	ldbu	r2,-1151(fp)
10002404:	10803fcc 	andi	r2,r2,255
10002408:	18c003e4 	muli	r3,r3,15
1000240c:	e0c7883a 	add	r3,fp,r3
10002410:	1885883a 	add	r2,r3,r2
10002414:	00c00044 	movi	r3,1
10002418:	10ffc2c5 	stb	r3,-245(r2)
        // Investigate UP of current point.
        int16_t nxpos = curr_seek.xpos;
1000241c:	e0bee003 	ldbu	r2,-1152(fp)
10002420:	10803fcc 	andi	r2,r2,255
10002424:	e0bffc8d 	sth	r2,-14(fp)
        int16_t nypos = curr_seek.ypos;
10002428:	e0bee043 	ldbu	r2,-1151(fp)
1000242c:	10803fcc 	andi	r2,r2,255
10002430:	e0bffc0d 	sth	r2,-16(fp)
        nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
10002434:	e0bffc8f 	ldh	r2,-14(fp)
10002438:	10800384 	addi	r2,r2,14
1000243c:	00c003c4 	movi	r3,15
10002440:	10c7283a 	div	r3,r2,r3
10002444:	18c003e4 	muli	r3,r3,15
10002448:	10c5c83a 	sub	r2,r2,r3
1000244c:	e0bffc8d 	sth	r2,-14(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
10002450:	e0fffc8f 	ldh	r3,-14(fp)
10002454:	e0bffc0f 	ldh	r2,-16(fp)
10002458:	18c003e4 	muli	r3,r3,15
1000245c:	e0c7883a 	add	r3,fp,r3
10002460:	1885883a 	add	r2,r3,r2
10002464:	10bfc2c3 	ldbu	r2,-245(r2)
10002468:	1080005c 	xori	r2,r2,1
1000246c:	10803fcc 	andi	r2,r2,255
10002470:	10004226 	beq	r2,zero,1000257c <pinkys_move+0x37c>
10002474:	e0fffc8f 	ldh	r3,-14(fp)
10002478:	e0bffc0f 	ldh	r2,-16(fp)
1000247c:	18c003e4 	muli	r3,r3,15
10002480:	1885883a 	add	r2,r3,r2
10002484:	100490ba 	slli	r2,r2,2
10002488:	e085883a 	add	r2,fp,r2
1000248c:	10bee117 	ldw	r2,-1148(r2)
10002490:	10003a26 	beq	r2,zero,1000257c <pinkys_move+0x37c>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002494:	e0fffc8f 	ldh	r3,-14(fp)
10002498:	e0bffc0f 	ldh	r2,-16(fp)
1000249c:	18c003e4 	muli	r3,r3,15
100024a0:	1887883a 	add	r3,r3,r2
100024a4:	008400f4 	movhi	r2,4099
100024a8:	1885883a 	add	r2,r3,r2
100024ac:	11296703 	ldbu	r4,-23140(r2)
100024b0:	e0bee003 	ldbu	r2,-1152(fp)
100024b4:	10c03fcc 	andi	r3,r2,255
100024b8:	e0bee043 	ldbu	r2,-1151(fp)
100024bc:	10803fcc 	andi	r2,r2,255
100024c0:	18c003e4 	muli	r3,r3,15
100024c4:	1887883a 	add	r3,r3,r2
100024c8:	008400f4 	movhi	r2,4099
100024cc:	1885883a 	add	r2,r3,r2
100024d0:	10e96703 	ldbu	r3,-23140(r2)
100024d4:	20803fcc 	andi	r2,r4,255
100024d8:	1080201c 	xori	r2,r2,128
100024dc:	10bfe004 	addi	r2,r2,-128
100024e0:	18c03fcc 	andi	r3,r3,255
100024e4:	18c0201c 	xori	r3,r3,128
100024e8:	18ffe004 	addi	r3,r3,-128
100024ec:	18800c0e 	bge	r3,r2,10002520 <pinkys_move+0x320>
100024f0:	e0bee003 	ldbu	r2,-1152(fp)
100024f4:	10c03fcc 	andi	r3,r2,255
100024f8:	e0bee043 	ldbu	r2,-1151(fp)
100024fc:	10803fcc 	andi	r2,r2,255
10002500:	18c003e4 	muli	r3,r3,15
10002504:	1887883a 	add	r3,r3,r2
10002508:	008400f4 	movhi	r2,4099
1000250c:	1885883a 	add	r2,r3,r2
10002510:	10a96703 	ldbu	r2,-23140(r2)
10002514:	10800044 	addi	r2,r2,1
10002518:	1007883a 	mov	r3,r2
1000251c:	00000706 	br	1000253c <pinkys_move+0x33c>
10002520:	e0fffc8f 	ldh	r3,-14(fp)
10002524:	e0bffc0f 	ldh	r2,-16(fp)
10002528:	18c003e4 	muli	r3,r3,15
1000252c:	1887883a 	add	r3,r3,r2
10002530:	008400f4 	movhi	r2,4099
10002534:	1885883a 	add	r2,r3,r2
10002538:	10e96703 	ldbu	r3,-23140(r2)
1000253c:	e13ffc8f 	ldh	r4,-14(fp)
10002540:	e0bffc0f 	ldh	r2,-16(fp)
10002544:	210003e4 	muli	r4,r4,15
10002548:	2089883a 	add	r4,r4,r2
1000254c:	008400f4 	movhi	r2,4099
10002550:	2085883a 	add	r2,r4,r2
10002554:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10002558:	e0bffc8b 	ldhu	r2,-14(fp)
1000255c:	e0bedf85 	stb	r2,-1154(fp)
            npt.ypos = (uint8_t)nypos;
10002560:	e0bffc0b 	ldhu	r2,-16(fp)
10002564:	e0bedfc5 	stb	r2,-1153(fp)
            dijkstra_fringe_pinky = stack_push(dijkstra_fringe_pinky, &npt);
10002568:	e0bedf84 	addi	r2,fp,-1154
1000256c:	100b883a 	mov	r5,r2
10002570:	e13ffe17 	ldw	r4,-8(fp)
10002574:	00012f80 	call	100012f8 <stack_push>
10002578:	e0bffe15 	stw	r2,-8(fp)
        }

        // Investigate DOWN.
        nxpos = curr_seek.xpos;
1000257c:	e0bee003 	ldbu	r2,-1152(fp)
10002580:	10803fcc 	andi	r2,r2,255
10002584:	e0bffc8d 	sth	r2,-14(fp)
        nypos = curr_seek.ypos;
10002588:	e0bee043 	ldbu	r2,-1151(fp)
1000258c:	10803fcc 	andi	r2,r2,255
10002590:	e0bffc0d 	sth	r2,-16(fp)
        nxpos = (nxpos + 1) % _BOARD_H;
10002594:	e0bffc8f 	ldh	r2,-14(fp)
10002598:	10800044 	addi	r2,r2,1
1000259c:	00c003c4 	movi	r3,15
100025a0:	10c7283a 	div	r3,r2,r3
100025a4:	18c003e4 	muli	r3,r3,15
100025a8:	10c5c83a 	sub	r2,r2,r3
100025ac:	e0bffc8d 	sth	r2,-14(fp)

        if(!dst_finalize[nxpos][nypos] && tmp_map[nxpos][nypos] != WALL) {
100025b0:	e0fffc8f 	ldh	r3,-14(fp)
100025b4:	e0bffc0f 	ldh	r2,-16(fp)
100025b8:	18c003e4 	muli	r3,r3,15
100025bc:	e0c7883a 	add	r3,fp,r3
100025c0:	1885883a 	add	r2,r3,r2
100025c4:	10bfc2c3 	ldbu	r2,-245(r2)
100025c8:	1080005c 	xori	r2,r2,1
100025cc:	10803fcc 	andi	r2,r2,255
100025d0:	10004226 	beq	r2,zero,100026dc <pinkys_move+0x4dc>
100025d4:	e0fffc8f 	ldh	r3,-14(fp)
100025d8:	e0bffc0f 	ldh	r2,-16(fp)
100025dc:	18c003e4 	muli	r3,r3,15
100025e0:	1885883a 	add	r2,r3,r2
100025e4:	100490ba 	slli	r2,r2,2
100025e8:	e085883a 	add	r2,fp,r2
100025ec:	10bee117 	ldw	r2,-1148(r2)
100025f0:	10003a26 	beq	r2,zero,100026dc <pinkys_move+0x4dc>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100025f4:	e0fffc8f 	ldh	r3,-14(fp)
100025f8:	e0bffc0f 	ldh	r2,-16(fp)
100025fc:	18c003e4 	muli	r3,r3,15
10002600:	1887883a 	add	r3,r3,r2
10002604:	008400f4 	movhi	r2,4099
10002608:	1885883a 	add	r2,r3,r2
1000260c:	11296703 	ldbu	r4,-23140(r2)
10002610:	e0bee003 	ldbu	r2,-1152(fp)
10002614:	10c03fcc 	andi	r3,r2,255
10002618:	e0bee043 	ldbu	r2,-1151(fp)
1000261c:	10803fcc 	andi	r2,r2,255
10002620:	18c003e4 	muli	r3,r3,15
10002624:	1887883a 	add	r3,r3,r2
10002628:	008400f4 	movhi	r2,4099
1000262c:	1885883a 	add	r2,r3,r2
10002630:	10e96703 	ldbu	r3,-23140(r2)
10002634:	20803fcc 	andi	r2,r4,255
10002638:	1080201c 	xori	r2,r2,128
1000263c:	10bfe004 	addi	r2,r2,-128
10002640:	18c03fcc 	andi	r3,r3,255
10002644:	18c0201c 	xori	r3,r3,128
10002648:	18ffe004 	addi	r3,r3,-128
1000264c:	18800c0e 	bge	r3,r2,10002680 <pinkys_move+0x480>
10002650:	e0bee003 	ldbu	r2,-1152(fp)
10002654:	10c03fcc 	andi	r3,r2,255
10002658:	e0bee043 	ldbu	r2,-1151(fp)
1000265c:	10803fcc 	andi	r2,r2,255
10002660:	18c003e4 	muli	r3,r3,15
10002664:	1887883a 	add	r3,r3,r2
10002668:	008400f4 	movhi	r2,4099
1000266c:	1885883a 	add	r2,r3,r2
10002670:	10a96703 	ldbu	r2,-23140(r2)
10002674:	10800044 	addi	r2,r2,1
10002678:	1007883a 	mov	r3,r2
1000267c:	00000706 	br	1000269c <pinkys_move+0x49c>
10002680:	e0fffc8f 	ldh	r3,-14(fp)
10002684:	e0bffc0f 	ldh	r2,-16(fp)
10002688:	18c003e4 	muli	r3,r3,15
1000268c:	1887883a 	add	r3,r3,r2
10002690:	008400f4 	movhi	r2,4099
10002694:	1885883a 	add	r2,r3,r2
10002698:	10e96703 	ldbu	r3,-23140(r2)
1000269c:	e13ffc8f 	ldh	r4,-14(fp)
100026a0:	e0bffc0f 	ldh	r2,-16(fp)
100026a4:	210003e4 	muli	r4,r4,15
100026a8:	2089883a 	add	r4,r4,r2
100026ac:	008400f4 	movhi	r2,4099
100026b0:	2085883a 	add	r2,r4,r2
100026b4:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
100026b8:	e0bffc8b 	ldhu	r2,-14(fp)
100026bc:	e0bedf05 	stb	r2,-1156(fp)
            npt.ypos = (uint8_t)nypos;
100026c0:	e0bffc0b 	ldhu	r2,-16(fp)
100026c4:	e0bedf45 	stb	r2,-1155(fp)
            dijkstra_fringe_pinky = stack_push(dijkstra_fringe_pinky, &npt);
100026c8:	e0bedf04 	addi	r2,fp,-1156
100026cc:	100b883a 	mov	r5,r2
100026d0:	e13ffe17 	ldw	r4,-8(fp)
100026d4:	00012f80 	call	100012f8 <stack_push>
100026d8:	e0bffe15 	stw	r2,-8(fp)
        }

        // Investigate LEFT.
        nxpos = curr_seek.xpos;
100026dc:	e0bee003 	ldbu	r2,-1152(fp)
100026e0:	10803fcc 	andi	r2,r2,255
100026e4:	e0bffc8d 	sth	r2,-14(fp)
        nypos = curr_seek.ypos;
100026e8:	e0bee043 	ldbu	r2,-1151(fp)
100026ec:	10803fcc 	andi	r2,r2,255
100026f0:	e0bffc0d 	sth	r2,-16(fp)
        nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
100026f4:	e0bffc0f 	ldh	r2,-16(fp)
100026f8:	10800384 	addi	r2,r2,14
100026fc:	00c003c4 	movi	r3,15
10002700:	10c7283a 	div	r3,r2,r3
10002704:	18c003e4 	muli	r3,r3,15
10002708:	10c5c83a 	sub	r2,r2,r3
1000270c:	e0bffc0d 	sth	r2,-16(fp)

        if(!dst_finalize[nxpos][nypos]  && tmp_map[nxpos][nypos] != WALL) {
10002710:	e0fffc8f 	ldh	r3,-14(fp)
10002714:	e0bffc0f 	ldh	r2,-16(fp)
10002718:	18c003e4 	muli	r3,r3,15
1000271c:	e0c7883a 	add	r3,fp,r3
10002720:	1885883a 	add	r2,r3,r2
10002724:	10bfc2c3 	ldbu	r2,-245(r2)
10002728:	1080005c 	xori	r2,r2,1
1000272c:	10803fcc 	andi	r2,r2,255
10002730:	10004226 	beq	r2,zero,1000283c <pinkys_move+0x63c>
10002734:	e0fffc8f 	ldh	r3,-14(fp)
10002738:	e0bffc0f 	ldh	r2,-16(fp)
1000273c:	18c003e4 	muli	r3,r3,15
10002740:	1885883a 	add	r2,r3,r2
10002744:	100490ba 	slli	r2,r2,2
10002748:	e085883a 	add	r2,fp,r2
1000274c:	10bee117 	ldw	r2,-1148(r2)
10002750:	10003a26 	beq	r2,zero,1000283c <pinkys_move+0x63c>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002754:	e0fffc8f 	ldh	r3,-14(fp)
10002758:	e0bffc0f 	ldh	r2,-16(fp)
1000275c:	18c003e4 	muli	r3,r3,15
10002760:	1887883a 	add	r3,r3,r2
10002764:	008400f4 	movhi	r2,4099
10002768:	1885883a 	add	r2,r3,r2
1000276c:	11296703 	ldbu	r4,-23140(r2)
10002770:	e0bee003 	ldbu	r2,-1152(fp)
10002774:	10c03fcc 	andi	r3,r2,255
10002778:	e0bee043 	ldbu	r2,-1151(fp)
1000277c:	10803fcc 	andi	r2,r2,255
10002780:	18c003e4 	muli	r3,r3,15
10002784:	1887883a 	add	r3,r3,r2
10002788:	008400f4 	movhi	r2,4099
1000278c:	1885883a 	add	r2,r3,r2
10002790:	10e96703 	ldbu	r3,-23140(r2)
10002794:	20803fcc 	andi	r2,r4,255
10002798:	1080201c 	xori	r2,r2,128
1000279c:	10bfe004 	addi	r2,r2,-128
100027a0:	18c03fcc 	andi	r3,r3,255
100027a4:	18c0201c 	xori	r3,r3,128
100027a8:	18ffe004 	addi	r3,r3,-128
100027ac:	18800c0e 	bge	r3,r2,100027e0 <pinkys_move+0x5e0>
100027b0:	e0bee003 	ldbu	r2,-1152(fp)
100027b4:	10c03fcc 	andi	r3,r2,255
100027b8:	e0bee043 	ldbu	r2,-1151(fp)
100027bc:	10803fcc 	andi	r2,r2,255
100027c0:	18c003e4 	muli	r3,r3,15
100027c4:	1887883a 	add	r3,r3,r2
100027c8:	008400f4 	movhi	r2,4099
100027cc:	1885883a 	add	r2,r3,r2
100027d0:	10a96703 	ldbu	r2,-23140(r2)
100027d4:	10800044 	addi	r2,r2,1
100027d8:	1007883a 	mov	r3,r2
100027dc:	00000706 	br	100027fc <pinkys_move+0x5fc>
100027e0:	e0fffc8f 	ldh	r3,-14(fp)
100027e4:	e0bffc0f 	ldh	r2,-16(fp)
100027e8:	18c003e4 	muli	r3,r3,15
100027ec:	1887883a 	add	r3,r3,r2
100027f0:	008400f4 	movhi	r2,4099
100027f4:	1885883a 	add	r2,r3,r2
100027f8:	10e96703 	ldbu	r3,-23140(r2)
100027fc:	e13ffc8f 	ldh	r4,-14(fp)
10002800:	e0bffc0f 	ldh	r2,-16(fp)
10002804:	210003e4 	muli	r4,r4,15
10002808:	2089883a 	add	r4,r4,r2
1000280c:	008400f4 	movhi	r2,4099
10002810:	2085883a 	add	r2,r4,r2
10002814:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10002818:	e0bffc8b 	ldhu	r2,-14(fp)
1000281c:	e0bede85 	stb	r2,-1158(fp)
            npt.ypos = (uint8_t)nypos;
10002820:	e0bffc0b 	ldhu	r2,-16(fp)
10002824:	e0bedec5 	stb	r2,-1157(fp)
            dijkstra_fringe_pinky = stack_push(dijkstra_fringe_pinky, &npt);
10002828:	e0bede84 	addi	r2,fp,-1158
1000282c:	100b883a 	mov	r5,r2
10002830:	e13ffe17 	ldw	r4,-8(fp)
10002834:	00012f80 	call	100012f8 <stack_push>
10002838:	e0bffe15 	stw	r2,-8(fp)
        }

        // Investigate RIGHT.
        nxpos = curr_seek.xpos;
1000283c:	e0bee003 	ldbu	r2,-1152(fp)
10002840:	10803fcc 	andi	r2,r2,255
10002844:	e0bffc8d 	sth	r2,-14(fp)
        nypos = curr_seek.ypos;
10002848:	e0bee043 	ldbu	r2,-1151(fp)
1000284c:	10803fcc 	andi	r2,r2,255
10002850:	e0bffc0d 	sth	r2,-16(fp)
        nypos = (nypos + 1) % _BOARD_W;
10002854:	e0bffc0f 	ldh	r2,-16(fp)
10002858:	10800044 	addi	r2,r2,1
1000285c:	00c003c4 	movi	r3,15
10002860:	10c7283a 	div	r3,r2,r3
10002864:	18c003e4 	muli	r3,r3,15
10002868:	10c5c83a 	sub	r2,r2,r3
1000286c:	e0bffc0d 	sth	r2,-16(fp)

        if(!dst_finalize[nxpos][nypos]  && tmp_map[nxpos][nypos] != WALL) {
10002870:	e0fffc8f 	ldh	r3,-14(fp)
10002874:	e0bffc0f 	ldh	r2,-16(fp)
10002878:	18c003e4 	muli	r3,r3,15
1000287c:	e0c7883a 	add	r3,fp,r3
10002880:	1885883a 	add	r2,r3,r2
10002884:	10bfc2c3 	ldbu	r2,-245(r2)
10002888:	1080005c 	xori	r2,r2,1
1000288c:	10803fcc 	andi	r2,r2,255
10002890:	10004226 	beq	r2,zero,1000299c <pinkys_move+0x79c>
10002894:	e0fffc8f 	ldh	r3,-14(fp)
10002898:	e0bffc0f 	ldh	r2,-16(fp)
1000289c:	18c003e4 	muli	r3,r3,15
100028a0:	1885883a 	add	r2,r3,r2
100028a4:	100490ba 	slli	r2,r2,2
100028a8:	e085883a 	add	r2,fp,r2
100028ac:	10bee117 	ldw	r2,-1148(r2)
100028b0:	10003a26 	beq	r2,zero,1000299c <pinkys_move+0x79c>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100028b4:	e0fffc8f 	ldh	r3,-14(fp)
100028b8:	e0bffc0f 	ldh	r2,-16(fp)
100028bc:	18c003e4 	muli	r3,r3,15
100028c0:	1887883a 	add	r3,r3,r2
100028c4:	008400f4 	movhi	r2,4099
100028c8:	1885883a 	add	r2,r3,r2
100028cc:	11296703 	ldbu	r4,-23140(r2)
100028d0:	e0bee003 	ldbu	r2,-1152(fp)
100028d4:	10c03fcc 	andi	r3,r2,255
100028d8:	e0bee043 	ldbu	r2,-1151(fp)
100028dc:	10803fcc 	andi	r2,r2,255
100028e0:	18c003e4 	muli	r3,r3,15
100028e4:	1887883a 	add	r3,r3,r2
100028e8:	008400f4 	movhi	r2,4099
100028ec:	1885883a 	add	r2,r3,r2
100028f0:	10e96703 	ldbu	r3,-23140(r2)
100028f4:	20803fcc 	andi	r2,r4,255
100028f8:	1080201c 	xori	r2,r2,128
100028fc:	10bfe004 	addi	r2,r2,-128
10002900:	18c03fcc 	andi	r3,r3,255
10002904:	18c0201c 	xori	r3,r3,128
10002908:	18ffe004 	addi	r3,r3,-128
1000290c:	18800c0e 	bge	r3,r2,10002940 <pinkys_move+0x740>
10002910:	e0bee003 	ldbu	r2,-1152(fp)
10002914:	10c03fcc 	andi	r3,r2,255
10002918:	e0bee043 	ldbu	r2,-1151(fp)
1000291c:	10803fcc 	andi	r2,r2,255
10002920:	18c003e4 	muli	r3,r3,15
10002924:	1887883a 	add	r3,r3,r2
10002928:	008400f4 	movhi	r2,4099
1000292c:	1885883a 	add	r2,r3,r2
10002930:	10a96703 	ldbu	r2,-23140(r2)
10002934:	10800044 	addi	r2,r2,1
10002938:	1007883a 	mov	r3,r2
1000293c:	00000706 	br	1000295c <pinkys_move+0x75c>
10002940:	e0fffc8f 	ldh	r3,-14(fp)
10002944:	e0bffc0f 	ldh	r2,-16(fp)
10002948:	18c003e4 	muli	r3,r3,15
1000294c:	1887883a 	add	r3,r3,r2
10002950:	008400f4 	movhi	r2,4099
10002954:	1885883a 	add	r2,r3,r2
10002958:	10e96703 	ldbu	r3,-23140(r2)
1000295c:	e13ffc8f 	ldh	r4,-14(fp)
10002960:	e0bffc0f 	ldh	r2,-16(fp)
10002964:	210003e4 	muli	r4,r4,15
10002968:	2089883a 	add	r4,r4,r2
1000296c:	008400f4 	movhi	r2,4099
10002970:	2085883a 	add	r2,r4,r2
10002974:	10e96705 	stb	r3,-23140(r2)
            Point npt;
            npt.xpos = (uint8_t)nxpos;
10002978:	e0bffc8b 	ldhu	r2,-14(fp)
1000297c:	e0bede05 	stb	r2,-1160(fp)
            npt.ypos = (uint8_t)nypos;
10002980:	e0bffc0b 	ldhu	r2,-16(fp)
10002984:	e0bede45 	stb	r2,-1159(fp)
            dijkstra_fringe_pinky = stack_push(dijkstra_fringe_pinky, &npt);
10002988:	e0bede04 	addi	r2,fp,-1160
1000298c:	100b883a 	mov	r5,r2
10002990:	e13ffe17 	ldw	r4,-8(fp)
10002994:	00012f80 	call	100012f8 <stack_push>
10002998:	e0bffe15 	stw	r2,-8(fp)
    while(!stack_isempty(dijkstra_fringe_pinky)) {
1000299c:	e13ffe17 	ldw	r4,-8(fp)
100029a0:	00014580 	call	10001458 <stack_isempty>
100029a4:	1080005c 	xori	r2,r2,1
100029a8:	10803fcc 	andi	r2,r2,255
100029ac:	103e871e 	bne	r2,zero,100023cc <pinkys_move+0x1cc>
        }
    }

    // Now all tiles are marked with a distance. See where should pinky go.
    uint8_t best_xpos = game->pinky.xpos;
100029b0:	e0bedd17 	ldw	r2,-1164(fp)
100029b4:	1080e483 	ldbu	r2,914(r2)
100029b8:	e0bffdc5 	stb	r2,-9(fp)
    uint8_t best_ypos = game->pinky.ypos;
100029bc:	e0bedd17 	ldw	r2,-1164(fp)
100029c0:	1080e4c3 	ldbu	r2,915(r2)
100029c4:	e0bffd85 	stb	r2,-10(fp)
    uint8_t best_dist = 63;
100029c8:	00800fc4 	movi	r2,63
100029cc:	e0bffd45 	stb	r2,-11(fp)

    // Investigate UP.
    int16_t nxpos = game->pinky.xpos;
100029d0:	e0bedd17 	ldw	r2,-1164(fp)
100029d4:	1080e483 	ldbu	r2,914(r2)
100029d8:	10803fcc 	andi	r2,r2,255
100029dc:	e0bffb8d 	sth	r2,-18(fp)
    int16_t nypos = game->pinky.ypos;
100029e0:	e0bedd17 	ldw	r2,-1164(fp)
100029e4:	1080e4c3 	ldbu	r2,915(r2)
100029e8:	10803fcc 	andi	r2,r2,255
100029ec:	e0bffb0d 	sth	r2,-20(fp)
    nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
100029f0:	e0bffb8f 	ldh	r2,-18(fp)
100029f4:	10800384 	addi	r2,r2,14
100029f8:	00c003c4 	movi	r3,15
100029fc:	10c7283a 	div	r3,r2,r3
10002a00:	18c003e4 	muli	r3,r3,15
10002a04:	10c5c83a 	sub	r2,r2,r3
10002a08:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002a0c:	e0fffb8f 	ldh	r3,-18(fp)
10002a10:	e0bffb0f 	ldh	r2,-20(fp)
10002a14:	18c003e4 	muli	r3,r3,15
10002a18:	1887883a 	add	r3,r3,r2
10002a1c:	008400f4 	movhi	r2,4099
10002a20:	1885883a 	add	r2,r3,r2
10002a24:	10a96703 	ldbu	r2,-23140(r2)
10002a28:	10c03fcc 	andi	r3,r2,255
10002a2c:	18c0201c 	xori	r3,r3,128
10002a30:	18ffe004 	addi	r3,r3,-128
10002a34:	e0bffd43 	ldbu	r2,-11(fp)
10002a38:	18800c0e 	bge	r3,r2,10002a6c <pinkys_move+0x86c>
        best_dist = (uint8_t)distances[nxpos][nypos];
10002a3c:	e0fffb8f 	ldh	r3,-18(fp)
10002a40:	e0bffb0f 	ldh	r2,-20(fp)
10002a44:	18c003e4 	muli	r3,r3,15
10002a48:	1887883a 	add	r3,r3,r2
10002a4c:	008400f4 	movhi	r2,4099
10002a50:	1885883a 	add	r2,r3,r2
10002a54:	10a96703 	ldbu	r2,-23140(r2)
10002a58:	e0bffd45 	stb	r2,-11(fp)
        best_xpos = (uint8_t)nxpos;
10002a5c:	e0bffb8b 	ldhu	r2,-18(fp)
10002a60:	e0bffdc5 	stb	r2,-9(fp)
        best_ypos = (uint8_t)nypos;
10002a64:	e0bffb0b 	ldhu	r2,-20(fp)
10002a68:	e0bffd85 	stb	r2,-10(fp)
    }

    // Investigate DOWN.
    nxpos = game->pinky.xpos;
10002a6c:	e0bedd17 	ldw	r2,-1164(fp)
10002a70:	1080e483 	ldbu	r2,914(r2)
10002a74:	10803fcc 	andi	r2,r2,255
10002a78:	e0bffb8d 	sth	r2,-18(fp)
    nypos = game->pinky.ypos;
10002a7c:	e0bedd17 	ldw	r2,-1164(fp)
10002a80:	1080e4c3 	ldbu	r2,915(r2)
10002a84:	10803fcc 	andi	r2,r2,255
10002a88:	e0bffb0d 	sth	r2,-20(fp)
    nxpos = (nxpos + 1) % _BOARD_H;
10002a8c:	e0bffb8f 	ldh	r2,-18(fp)
10002a90:	10800044 	addi	r2,r2,1
10002a94:	00c003c4 	movi	r3,15
10002a98:	10c7283a 	div	r3,r2,r3
10002a9c:	18c003e4 	muli	r3,r3,15
10002aa0:	10c5c83a 	sub	r2,r2,r3
10002aa4:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002aa8:	e0fffb8f 	ldh	r3,-18(fp)
10002aac:	e0bffb0f 	ldh	r2,-20(fp)
10002ab0:	18c003e4 	muli	r3,r3,15
10002ab4:	1887883a 	add	r3,r3,r2
10002ab8:	008400f4 	movhi	r2,4099
10002abc:	1885883a 	add	r2,r3,r2
10002ac0:	10a96703 	ldbu	r2,-23140(r2)
10002ac4:	10c03fcc 	andi	r3,r2,255
10002ac8:	18c0201c 	xori	r3,r3,128
10002acc:	18ffe004 	addi	r3,r3,-128
10002ad0:	e0bffd43 	ldbu	r2,-11(fp)
10002ad4:	18800c0e 	bge	r3,r2,10002b08 <pinkys_move+0x908>
        best_dist = (uint8_t)distances[nxpos][nypos];
10002ad8:	e0fffb8f 	ldh	r3,-18(fp)
10002adc:	e0bffb0f 	ldh	r2,-20(fp)
10002ae0:	18c003e4 	muli	r3,r3,15
10002ae4:	1887883a 	add	r3,r3,r2
10002ae8:	008400f4 	movhi	r2,4099
10002aec:	1885883a 	add	r2,r3,r2
10002af0:	10a96703 	ldbu	r2,-23140(r2)
10002af4:	e0bffd45 	stb	r2,-11(fp)
        best_xpos = (uint8_t)nxpos;
10002af8:	e0bffb8b 	ldhu	r2,-18(fp)
10002afc:	e0bffdc5 	stb	r2,-9(fp)
        best_ypos = (uint8_t)nypos;
10002b00:	e0bffb0b 	ldhu	r2,-20(fp)
10002b04:	e0bffd85 	stb	r2,-10(fp)
    }

    // Investigate LEFT.
    nxpos = game->pinky.xpos;
10002b08:	e0bedd17 	ldw	r2,-1164(fp)
10002b0c:	1080e483 	ldbu	r2,914(r2)
10002b10:	10803fcc 	andi	r2,r2,255
10002b14:	e0bffb8d 	sth	r2,-18(fp)
    nypos = game->pinky.ypos;
10002b18:	e0bedd17 	ldw	r2,-1164(fp)
10002b1c:	1080e4c3 	ldbu	r2,915(r2)
10002b20:	10803fcc 	andi	r2,r2,255
10002b24:	e0bffb0d 	sth	r2,-20(fp)
    nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10002b28:	e0bffb0f 	ldh	r2,-20(fp)
10002b2c:	10800384 	addi	r2,r2,14
10002b30:	00c003c4 	movi	r3,15
10002b34:	10c7283a 	div	r3,r2,r3
10002b38:	18c003e4 	muli	r3,r3,15
10002b3c:	10c5c83a 	sub	r2,r2,r3
10002b40:	e0bffb0d 	sth	r2,-20(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002b44:	e0fffb8f 	ldh	r3,-18(fp)
10002b48:	e0bffb0f 	ldh	r2,-20(fp)
10002b4c:	18c003e4 	muli	r3,r3,15
10002b50:	1887883a 	add	r3,r3,r2
10002b54:	008400f4 	movhi	r2,4099
10002b58:	1885883a 	add	r2,r3,r2
10002b5c:	10a96703 	ldbu	r2,-23140(r2)
10002b60:	10c03fcc 	andi	r3,r2,255
10002b64:	18c0201c 	xori	r3,r3,128
10002b68:	18ffe004 	addi	r3,r3,-128
10002b6c:	e0bffd43 	ldbu	r2,-11(fp)
10002b70:	18800c0e 	bge	r3,r2,10002ba4 <pinkys_move+0x9a4>
        best_dist = (uint8_t)distances[nxpos][nypos];
10002b74:	e0fffb8f 	ldh	r3,-18(fp)
10002b78:	e0bffb0f 	ldh	r2,-20(fp)
10002b7c:	18c003e4 	muli	r3,r3,15
10002b80:	1887883a 	add	r3,r3,r2
10002b84:	008400f4 	movhi	r2,4099
10002b88:	1885883a 	add	r2,r3,r2
10002b8c:	10a96703 	ldbu	r2,-23140(r2)
10002b90:	e0bffd45 	stb	r2,-11(fp)
        best_xpos = (uint8_t)nxpos;
10002b94:	e0bffb8b 	ldhu	r2,-18(fp)
10002b98:	e0bffdc5 	stb	r2,-9(fp)
        best_ypos = (uint8_t)nypos;
10002b9c:	e0bffb0b 	ldhu	r2,-20(fp)
10002ba0:	e0bffd85 	stb	r2,-10(fp)
    }

    // Investigate RIGHT.
    nxpos = game->pinky.xpos;
10002ba4:	e0bedd17 	ldw	r2,-1164(fp)
10002ba8:	1080e483 	ldbu	r2,914(r2)
10002bac:	10803fcc 	andi	r2,r2,255
10002bb0:	e0bffb8d 	sth	r2,-18(fp)
    nypos = game->pinky.ypos;
10002bb4:	e0bedd17 	ldw	r2,-1164(fp)
10002bb8:	1080e4c3 	ldbu	r2,915(r2)
10002bbc:	10803fcc 	andi	r2,r2,255
10002bc0:	e0bffb0d 	sth	r2,-20(fp)
    nypos = (nypos + 1) % _BOARD_W;
10002bc4:	e0bffb0f 	ldh	r2,-20(fp)
10002bc8:	10800044 	addi	r2,r2,1
10002bcc:	00c003c4 	movi	r3,15
10002bd0:	10c7283a 	div	r3,r2,r3
10002bd4:	18c003e4 	muli	r3,r3,15
10002bd8:	10c5c83a 	sub	r2,r2,r3
10002bdc:	e0bffb0d 	sth	r2,-20(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002be0:	e0fffb8f 	ldh	r3,-18(fp)
10002be4:	e0bffb0f 	ldh	r2,-20(fp)
10002be8:	18c003e4 	muli	r3,r3,15
10002bec:	1887883a 	add	r3,r3,r2
10002bf0:	008400f4 	movhi	r2,4099
10002bf4:	1885883a 	add	r2,r3,r2
10002bf8:	10a96703 	ldbu	r2,-23140(r2)
10002bfc:	10c03fcc 	andi	r3,r2,255
10002c00:	18c0201c 	xori	r3,r3,128
10002c04:	18ffe004 	addi	r3,r3,-128
10002c08:	e0bffd43 	ldbu	r2,-11(fp)
10002c0c:	18800c0e 	bge	r3,r2,10002c40 <pinkys_move+0xa40>
        best_dist = (uint8_t)distances[nxpos][nypos];
10002c10:	e0fffb8f 	ldh	r3,-18(fp)
10002c14:	e0bffb0f 	ldh	r2,-20(fp)
10002c18:	18c003e4 	muli	r3,r3,15
10002c1c:	1887883a 	add	r3,r3,r2
10002c20:	008400f4 	movhi	r2,4099
10002c24:	1885883a 	add	r2,r3,r2
10002c28:	10a96703 	ldbu	r2,-23140(r2)
10002c2c:	e0bffd45 	stb	r2,-11(fp)
        best_xpos = (uint8_t)nxpos;
10002c30:	e0bffb8b 	ldhu	r2,-18(fp)
10002c34:	e0bffdc5 	stb	r2,-9(fp)
        best_ypos = (uint8_t)nypos;
10002c38:	e0bffb0b 	ldhu	r2,-20(fp)
10002c3c:	e0bffd85 	stb	r2,-10(fp)
    }

    if(best_dist != 63) {
10002c40:	e0bffd43 	ldbu	r2,-11(fp)
10002c44:	10800fe0 	cmpeqi	r2,r2,63
10002c48:	1000141e 	bne	r2,zero,10002c9c <pinkys_move+0xa9c>
    	addPendingPos(game->pinky.xpos, game->pinky.ypos);
10002c4c:	e0bedd17 	ldw	r2,-1164(fp)
10002c50:	1080e483 	ldbu	r2,914(r2)
10002c54:	10c03fcc 	andi	r3,r2,255
10002c58:	e0bedd17 	ldw	r2,-1164(fp)
10002c5c:	1080e4c3 	ldbu	r2,915(r2)
10002c60:	10803fcc 	andi	r2,r2,255
10002c64:	100b883a 	mov	r5,r2
10002c68:	1809883a 	mov	r4,r3
10002c6c:	00066f40 	call	100066f4 <addPendingPos>
    	addPendingPos(best_xpos, best_ypos);
10002c70:	e0bffdc3 	ldbu	r2,-9(fp)
10002c74:	e0fffd83 	ldbu	r3,-10(fp)
10002c78:	180b883a 	mov	r5,r3
10002c7c:	1009883a 	mov	r4,r2
10002c80:	00066f40 	call	100066f4 <addPendingPos>
        game->pinky.xpos = best_xpos;
10002c84:	e0bedd17 	ldw	r2,-1164(fp)
10002c88:	e0fffdc3 	ldbu	r3,-9(fp)
10002c8c:	10c0e485 	stb	r3,914(r2)
        game->pinky.ypos = best_ypos;
10002c90:	e0bedd17 	ldw	r2,-1164(fp)
10002c94:	e0fffd83 	ldbu	r3,-10(fp)
10002c98:	10c0e4c5 	stb	r3,915(r2)
    }

    recur_free(dijkstra_fringe_pinky);
10002c9c:	e13ffe17 	ldw	r4,-8(fp)
10002ca0:	00012ac0 	call	100012ac <recur_free>
}
10002ca4:	e037883a 	mov	sp,fp
10002ca8:	dfc00117 	ldw	ra,4(sp)
10002cac:	df000017 	ldw	fp,0(sp)
10002cb0:	dec00204 	addi	sp,sp,8
10002cb4:	f800283a 	ret

10002cb8 <inkys_move>:

static uint8_t ikdirs[4] = {5,5,5,5};
static uint8_t lastdirection = 0;
// Inky. Patrol an area.
// Use a psuedo-Mattrox distribution.
void inkys_move(Game* game) {
10002cb8:	deff1a04 	addi	sp,sp,-920
10002cbc:	dfc0e515 	stw	ra,916(sp)
10002cc0:	df00e415 	stw	fp,912(sp)
10002cc4:	df00e404 	addi	fp,sp,912
10002cc8:	e13f1c15 	stw	r4,-912(fp)
    // Inky's dead.
    if(game->inky.revive_cntdown > 0) {
10002ccc:	e0bf1c17 	ldw	r2,-912(fp)
10002cd0:	1080e70b 	ldhu	r2,924(r2)
10002cd4:	10bfffcc 	andi	r2,r2,65535
10002cd8:	10000726 	beq	r2,zero,10002cf8 <inkys_move+0x40>
        game->inky.revive_cntdown -= 1;
10002cdc:	e0bf1c17 	ldw	r2,-912(fp)
10002ce0:	1080e70b 	ldhu	r2,924(r2)
10002ce4:	10bfffc4 	addi	r2,r2,-1
10002ce8:	1007883a 	mov	r3,r2
10002cec:	e0bf1c17 	ldw	r2,-912(fp)
10002cf0:	10c0e70d 	sth	r3,924(r2)
10002cf4:	0000ca06 	br	10003020 <inkys_move+0x368>
        return;
    }
    Tile tmp_map[_BOARD_H][_BOARD_W];
    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
10002cf8:	e0ff1c17 	ldw	r3,-912(fp)
10002cfc:	e0bf1d04 	addi	r2,fp,-908
10002d00:	0180e104 	movi	r6,900
10002d04:	180b883a 	mov	r5,r3
10002d08:	1009883a 	mov	r4,r2
10002d0c:	0016c340 	call	10016c34 <memcpy>

    // Mark other ghosts as obstacles.
    tmp_map[game->pinky.xpos][game->pinky.ypos] = WALL;
10002d10:	e0bf1c17 	ldw	r2,-912(fp)
10002d14:	1080e483 	ldbu	r2,914(r2)
10002d18:	10c03fcc 	andi	r3,r2,255
10002d1c:	e0bf1c17 	ldw	r2,-912(fp)
10002d20:	1080e4c3 	ldbu	r2,915(r2)
10002d24:	10803fcc 	andi	r2,r2,255
10002d28:	18c003e4 	muli	r3,r3,15
10002d2c:	1885883a 	add	r2,r3,r2
10002d30:	100490ba 	slli	r2,r2,2
10002d34:	e085883a 	add	r2,fp,r2
10002d38:	103f1d15 	stw	zero,-908(r2)
    tmp_map[game->clyde.xpos][game->clyde.ypos] = WALL;
10002d3c:	e0bf1c17 	ldw	r2,-912(fp)
10002d40:	1080e783 	ldbu	r2,926(r2)
10002d44:	10c03fcc 	andi	r3,r2,255
10002d48:	e0bf1c17 	ldw	r2,-912(fp)
10002d4c:	1080e7c3 	ldbu	r2,927(r2)
10002d50:	10803fcc 	andi	r2,r2,255
10002d54:	18c003e4 	muli	r3,r3,15
10002d58:	1885883a 	add	r2,r3,r2
10002d5c:	100490ba 	slli	r2,r2,2
10002d60:	e085883a 	add	r2,fp,r2
10002d64:	103f1d15 	stw	zero,-908(r2)
    tmp_map[game->blinky.xpos][game->blinky.ypos] = WALL;
10002d68:	e0bf1c17 	ldw	r2,-912(fp)
10002d6c:	1080e303 	ldbu	r2,908(r2)
10002d70:	10c03fcc 	andi	r3,r2,255
10002d74:	e0bf1c17 	ldw	r2,-912(fp)
10002d78:	1080e343 	ldbu	r2,909(r2)
10002d7c:	10803fcc 	andi	r2,r2,255
10002d80:	18c003e4 	muli	r3,r3,15
10002d84:	1885883a 	add	r2,r3,r2
10002d88:	100490ba 	slli	r2,r2,2
10002d8c:	e085883a 	add	r2,fp,r2
10002d90:	103f1d15 	stw	zero,-908(r2)

	// A slightly higher chance to stay the same direction.
	ikdirs[lastdirection] += 3;
10002d94:	d0a7ce03 	ldbu	r2,-24776(gp)
10002d98:	10c03fcc 	andi	r3,r2,255
10002d9c:	d0a00004 	addi	r2,gp,-32768
10002da0:	1885883a 	add	r2,r3,r2
10002da4:	10800003 	ldbu	r2,0(r2)
10002da8:	d0e7ce03 	ldbu	r3,-24776(gp)
10002dac:	18c03fcc 	andi	r3,r3,255
10002db0:	108000c4 	addi	r2,r2,3
10002db4:	1009883a 	mov	r4,r2
10002db8:	d0a00004 	addi	r2,gp,-32768
10002dbc:	1885883a 	add	r2,r3,r2
10002dc0:	11000005 	stb	r4,0(r2)
	uint8_t nextlast;
    uint8_t direction;
    uint8_t trials = 0;
10002dc4:	e03fff85 	stb	zero,-2(fp)
    bool success = false;
10002dc8:	e03fff45 	stb	zero,-3(fp)

    while(!success && trials < 10) {
10002dcc:	00008d06 	br	10003004 <inkys_move+0x34c>
        printf("*");
10002dd0:	01000a84 	movi	r4,42
10002dd4:	00170240 	call	10017024 <putchar>
        direction = rand() % (ikdirs[0] + ikdirs[1] + ikdirs[2] + ikdirs[3]);
10002dd8:	001712c0 	call	1001712c <rand>
10002ddc:	1007883a 	mov	r3,r2
10002de0:	d0a00003 	ldbu	r2,-32768(gp)
10002de4:	11003fcc 	andi	r4,r2,255
10002de8:	d0a00043 	ldbu	r2,-32767(gp)
10002dec:	10803fcc 	andi	r2,r2,255
10002df0:	2089883a 	add	r4,r4,r2
10002df4:	d0a00083 	ldbu	r2,-32766(gp)
10002df8:	10803fcc 	andi	r2,r2,255
10002dfc:	2089883a 	add	r4,r4,r2
10002e00:	d0a000c3 	ldbu	r2,-32765(gp)
10002e04:	10803fcc 	andi	r2,r2,255
10002e08:	2085883a 	add	r2,r4,r2
10002e0c:	1889283a 	div	r4,r3,r2
10002e10:	2085383a 	mul	r2,r4,r2
10002e14:	1885c83a 	sub	r2,r3,r2
10002e18:	e0bffe85 	stb	r2,-6(fp)
        uint8_t newx = game->inky.xpos;
10002e1c:	e0bf1c17 	ldw	r2,-912(fp)
10002e20:	1080e603 	ldbu	r2,920(r2)
10002e24:	e0bfff05 	stb	r2,-4(fp)
        uint8_t newy = game->inky.ypos;
10002e28:	e0bf1c17 	ldw	r2,-912(fp)
10002e2c:	1080e643 	ldbu	r2,921(r2)
10002e30:	e0bffec5 	stb	r2,-5(fp)

        if(direction < ikdirs[0]) {
10002e34:	d0a00003 	ldbu	r2,-32768(gp)
10002e38:	e0fffe83 	ldbu	r3,-6(fp)
10002e3c:	10803fcc 	andi	r2,r2,255
10002e40:	1880082e 	bgeu	r3,r2,10002e64 <inkys_move+0x1ac>
            newy -= 1;
10002e44:	e0bffec3 	ldbu	r2,-5(fp)
10002e48:	10bfffc4 	addi	r2,r2,-1
10002e4c:	e0bffec5 	stb	r2,-5(fp)
            ikdirs[0] += 1;
10002e50:	d0a00003 	ldbu	r2,-32768(gp)
10002e54:	10800044 	addi	r2,r2,1
10002e58:	d0a00005 	stb	r2,-32768(gp)
            nextlast = 0;
10002e5c:	e03fffc5 	stb	zero,-1(fp)
10002e60:	00002b06 	br	10002f10 <inkys_move+0x258>
        } else if (direction < ikdirs[0] + ikdirs[1]) {
10002e64:	e0fffe83 	ldbu	r3,-6(fp)
10002e68:	d0a00003 	ldbu	r2,-32768(gp)
10002e6c:	11003fcc 	andi	r4,r2,255
10002e70:	d0a00043 	ldbu	r2,-32767(gp)
10002e74:	10803fcc 	andi	r2,r2,255
10002e78:	2085883a 	add	r2,r4,r2
10002e7c:	1880090e 	bge	r3,r2,10002ea4 <inkys_move+0x1ec>
            newy += 1;
10002e80:	e0bffec3 	ldbu	r2,-5(fp)
10002e84:	10800044 	addi	r2,r2,1
10002e88:	e0bffec5 	stb	r2,-5(fp)
            ikdirs[1] += 1;
10002e8c:	d0a00043 	ldbu	r2,-32767(gp)
10002e90:	10800044 	addi	r2,r2,1
10002e94:	d0a00045 	stb	r2,-32767(gp)
            nextlast = 1;
10002e98:	00800044 	movi	r2,1
10002e9c:	e0bfffc5 	stb	r2,-1(fp)
10002ea0:	00001b06 	br	10002f10 <inkys_move+0x258>
        } else if (direction < ikdirs[0] + ikdirs[1] + ikdirs[2]) {
10002ea4:	e0fffe83 	ldbu	r3,-6(fp)
10002ea8:	d0a00003 	ldbu	r2,-32768(gp)
10002eac:	11003fcc 	andi	r4,r2,255
10002eb0:	d0a00043 	ldbu	r2,-32767(gp)
10002eb4:	10803fcc 	andi	r2,r2,255
10002eb8:	2089883a 	add	r4,r4,r2
10002ebc:	d0a00083 	ldbu	r2,-32766(gp)
10002ec0:	10803fcc 	andi	r2,r2,255
10002ec4:	2085883a 	add	r2,r4,r2
10002ec8:	1880090e 	bge	r3,r2,10002ef0 <inkys_move+0x238>
            newx -= 1;
10002ecc:	e0bfff03 	ldbu	r2,-4(fp)
10002ed0:	10bfffc4 	addi	r2,r2,-1
10002ed4:	e0bfff05 	stb	r2,-4(fp)
            ikdirs[2] += 1;
10002ed8:	d0a00083 	ldbu	r2,-32766(gp)
10002edc:	10800044 	addi	r2,r2,1
10002ee0:	d0a00085 	stb	r2,-32766(gp)
            nextlast = 2;
10002ee4:	00800084 	movi	r2,2
10002ee8:	e0bfffc5 	stb	r2,-1(fp)
10002eec:	00000806 	br	10002f10 <inkys_move+0x258>
        } else {
            newx += 1;
10002ef0:	e0bfff03 	ldbu	r2,-4(fp)
10002ef4:	10800044 	addi	r2,r2,1
10002ef8:	e0bfff05 	stb	r2,-4(fp)
            ikdirs[3] += 1;
10002efc:	d0a000c3 	ldbu	r2,-32765(gp)
10002f00:	10800044 	addi	r2,r2,1
10002f04:	d0a000c5 	stb	r2,-32765(gp)
            nextlast = 3;
10002f08:	008000c4 	movi	r2,3
10002f0c:	e0bfffc5 	stb	r2,-1(fp)
        }

        newx = (newx + _BOARD_W) % _BOARD_W;
10002f10:	e0bfff03 	ldbu	r2,-4(fp)
10002f14:	108003c4 	addi	r2,r2,15
10002f18:	00c003c4 	movi	r3,15
10002f1c:	10c7283a 	div	r3,r2,r3
10002f20:	18c003e4 	muli	r3,r3,15
10002f24:	10c5c83a 	sub	r2,r2,r3
10002f28:	e0bfff05 	stb	r2,-4(fp)
        newy = (newy + _BOARD_H) % _BOARD_H;
10002f2c:	e0bffec3 	ldbu	r2,-5(fp)
10002f30:	108003c4 	addi	r2,r2,15
10002f34:	00c003c4 	movi	r3,15
10002f38:	10c7283a 	div	r3,r2,r3
10002f3c:	18c003e4 	muli	r3,r3,15
10002f40:	10c5c83a 	sub	r2,r2,r3
10002f44:	e0bffec5 	stb	r2,-5(fp)

        ikdirs[lastdirection] -= 10;
10002f48:	d0a7ce03 	ldbu	r2,-24776(gp)
10002f4c:	10c03fcc 	andi	r3,r2,255
10002f50:	d0a00004 	addi	r2,gp,-32768
10002f54:	1885883a 	add	r2,r3,r2
10002f58:	10800003 	ldbu	r2,0(r2)
10002f5c:	d0e7ce03 	ldbu	r3,-24776(gp)
10002f60:	18c03fcc 	andi	r3,r3,255
10002f64:	10bffd84 	addi	r2,r2,-10
10002f68:	1009883a 	mov	r4,r2
10002f6c:	d0a00004 	addi	r2,gp,-32768
10002f70:	1885883a 	add	r2,r3,r2
10002f74:	11000005 	stb	r4,0(r2)
        lastdirection = nextlast;
10002f78:	e0bfffc3 	ldbu	r2,-1(fp)
10002f7c:	d0a7ce05 	stb	r2,-24776(gp)

        if(tmp_map[newx][newy] != WALL) {
10002f80:	e0ffff03 	ldbu	r3,-4(fp)
10002f84:	e0bffec3 	ldbu	r2,-5(fp)
10002f88:	18c003e4 	muli	r3,r3,15
10002f8c:	1885883a 	add	r2,r3,r2
10002f90:	100490ba 	slli	r2,r2,2
10002f94:	e085883a 	add	r2,fp,r2
10002f98:	10bf1d17 	ldw	r2,-908(r2)
10002f9c:	10001626 	beq	r2,zero,10002ff8 <inkys_move+0x340>
        	addPendingPos(game->inky.xpos, game->inky.ypos);
10002fa0:	e0bf1c17 	ldw	r2,-912(fp)
10002fa4:	1080e603 	ldbu	r2,920(r2)
10002fa8:	10c03fcc 	andi	r3,r2,255
10002fac:	e0bf1c17 	ldw	r2,-912(fp)
10002fb0:	1080e643 	ldbu	r2,921(r2)
10002fb4:	10803fcc 	andi	r2,r2,255
10002fb8:	100b883a 	mov	r5,r2
10002fbc:	1809883a 	mov	r4,r3
10002fc0:	00066f40 	call	100066f4 <addPendingPos>
        	addPendingPos(newx, newy);
10002fc4:	e0bfff03 	ldbu	r2,-4(fp)
10002fc8:	e0fffec3 	ldbu	r3,-5(fp)
10002fcc:	180b883a 	mov	r5,r3
10002fd0:	1009883a 	mov	r4,r2
10002fd4:	00066f40 	call	100066f4 <addPendingPos>
            game->inky.xpos = newx;
10002fd8:	e0bf1c17 	ldw	r2,-912(fp)
10002fdc:	e0ffff03 	ldbu	r3,-4(fp)
10002fe0:	10c0e605 	stb	r3,920(r2)
            game->inky.ypos = newy;
10002fe4:	e0bf1c17 	ldw	r2,-912(fp)
10002fe8:	e0fffec3 	ldbu	r3,-5(fp)
10002fec:	10c0e645 	stb	r3,921(r2)
            success = true;
10002ff0:	00800044 	movi	r2,1
10002ff4:	e0bfff45 	stb	r2,-3(fp)
        }
        trials += 1;
10002ff8:	e0bfff83 	ldbu	r2,-2(fp)
10002ffc:	10800044 	addi	r2,r2,1
10003000:	e0bfff85 	stb	r2,-2(fp)
    while(!success && trials < 10) {
10003004:	e0bfff43 	ldbu	r2,-3(fp)
10003008:	1080005c 	xori	r2,r2,1
1000300c:	10803fcc 	andi	r2,r2,255
10003010:	10000326 	beq	r2,zero,10003020 <inkys_move+0x368>
10003014:	e0bfff83 	ldbu	r2,-2(fp)
10003018:	108002b0 	cmpltui	r2,r2,10
1000301c:	103f6c1e 	bne	r2,zero,10002dd0 <inkys_move+0x118>
    }
}
10003020:	e037883a 	mov	sp,fp
10003024:	dfc00117 	ldw	ra,4(sp)
10003028:	df000017 	ldw	fp,0(sp)
1000302c:	dec00204 	addi	sp,sp,8
10003030:	f800283a 	ret

10003034 <clydes_move>:

// Clyde. Move randomly.
void clydes_move(Game* game) {
10003034:	deff1a04 	addi	sp,sp,-920
10003038:	dfc0e515 	stw	ra,916(sp)
1000303c:	df00e415 	stw	fp,912(sp)
10003040:	df00e404 	addi	fp,sp,912
10003044:	e13f1c15 	stw	r4,-912(fp)
    // Clyde's dead.
    if(game->clyde.revive_cntdown > 0) {
10003048:	e0bf1c17 	ldw	r2,-912(fp)
1000304c:	1080e88b 	ldhu	r2,930(r2)
10003050:	10bfffcc 	andi	r2,r2,65535
10003054:	10000726 	beq	r2,zero,10003074 <clydes_move+0x40>
        game->clyde.revive_cntdown -= 1;
10003058:	e0bf1c17 	ldw	r2,-912(fp)
1000305c:	1080e88b 	ldhu	r2,930(r2)
10003060:	10bfffc4 	addi	r2,r2,-1
10003064:	1007883a 	mov	r3,r2
10003068:	e0bf1c17 	ldw	r2,-912(fp)
1000306c:	10c0e88d 	sth	r3,930(r2)
10003070:	00009d06 	br	100032e8 <clydes_move+0x2b4>
        return;
    }
    Tile tmp_map[_BOARD_H][_BOARD_W];
    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
10003074:	e0ff1c17 	ldw	r3,-912(fp)
10003078:	e0bf1d04 	addi	r2,fp,-908
1000307c:	0180e104 	movi	r6,900
10003080:	180b883a 	mov	r5,r3
10003084:	1009883a 	mov	r4,r2
10003088:	0016c340 	call	10016c34 <memcpy>

    // Mark other ghosts as obstacles.
    tmp_map[game->pinky.xpos][game->inky.ypos] = WALL;
1000308c:	e0bf1c17 	ldw	r2,-912(fp)
10003090:	1080e483 	ldbu	r2,914(r2)
10003094:	10c03fcc 	andi	r3,r2,255
10003098:	e0bf1c17 	ldw	r2,-912(fp)
1000309c:	1080e643 	ldbu	r2,921(r2)
100030a0:	10803fcc 	andi	r2,r2,255
100030a4:	18c003e4 	muli	r3,r3,15
100030a8:	1885883a 	add	r2,r3,r2
100030ac:	100490ba 	slli	r2,r2,2
100030b0:	e085883a 	add	r2,fp,r2
100030b4:	103f1d15 	stw	zero,-908(r2)
    tmp_map[game->inky.xpos][game->inky.ypos] = WALL;
100030b8:	e0bf1c17 	ldw	r2,-912(fp)
100030bc:	1080e603 	ldbu	r2,920(r2)
100030c0:	10c03fcc 	andi	r3,r2,255
100030c4:	e0bf1c17 	ldw	r2,-912(fp)
100030c8:	1080e643 	ldbu	r2,921(r2)
100030cc:	10803fcc 	andi	r2,r2,255
100030d0:	18c003e4 	muli	r3,r3,15
100030d4:	1885883a 	add	r2,r3,r2
100030d8:	100490ba 	slli	r2,r2,2
100030dc:	e085883a 	add	r2,fp,r2
100030e0:	103f1d15 	stw	zero,-908(r2)
    tmp_map[game->blinky.xpos][game->blinky.ypos] = WALL;
100030e4:	e0bf1c17 	ldw	r2,-912(fp)
100030e8:	1080e303 	ldbu	r2,908(r2)
100030ec:	10c03fcc 	andi	r3,r2,255
100030f0:	e0bf1c17 	ldw	r2,-912(fp)
100030f4:	1080e343 	ldbu	r2,909(r2)
100030f8:	10803fcc 	andi	r2,r2,255
100030fc:	18c003e4 	muli	r3,r3,15
10003100:	1885883a 	add	r2,r3,r2
10003104:	100490ba 	slli	r2,r2,2
10003108:	e085883a 	add	r2,fp,r2
1000310c:	103f1d15 	stw	zero,-908(r2)
    uint8_t rand_direction;
    uint8_t trials = 0;
10003110:	e03fffc5 	stb	zero,-1(fp)
    bool success = false;
10003114:	e03fff85 	stb	zero,-2(fp)
    while(!success && trials < 10) {
10003118:	00006c06 	br	100032cc <clydes_move+0x298>
        printf("*");
1000311c:	01000a84 	movi	r4,42
10003120:	00170240 	call	10017024 <putchar>
        rand_direction = rand() % 4;
10003124:	001712c0 	call	1001712c <rand>
10003128:	1007883a 	mov	r3,r2
1000312c:	00a00034 	movhi	r2,32768
10003130:	108000c4 	addi	r2,r2,3
10003134:	1884703a 	and	r2,r3,r2
10003138:	1000040e 	bge	r2,zero,1000314c <clydes_move+0x118>
1000313c:	10bfffc4 	addi	r2,r2,-1
10003140:	00ffff04 	movi	r3,-4
10003144:	10c4b03a 	or	r2,r2,r3
10003148:	10800044 	addi	r2,r2,1
1000314c:	e0bffe45 	stb	r2,-7(fp)
        int16_t newx, newy;
        switch(rand_direction) {
10003150:	e0bffe43 	ldbu	r2,-7(fp)
10003154:	10c00060 	cmpeqi	r3,r2,1
10003158:	18000d1e 	bne	r3,zero,10003190 <clydes_move+0x15c>
1000315c:	10c000a0 	cmpeqi	r3,r2,2
10003160:	1800151e 	bne	r3,zero,100031b8 <clydes_move+0x184>
10003164:	10001e1e 	bne	r2,zero,100031e0 <clydes_move+0x1ac>
            case 0: {
                newx = game->clyde.xpos + 1;
10003168:	e0bf1c17 	ldw	r2,-912(fp)
1000316c:	1080e783 	ldbu	r2,926(r2)
10003170:	10803fcc 	andi	r2,r2,255
10003174:	10800044 	addi	r2,r2,1
10003178:	e0bfff0d 	sth	r2,-4(fp)
                newy = game->clyde.ypos;
1000317c:	e0bf1c17 	ldw	r2,-912(fp)
10003180:	1080e7c3 	ldbu	r2,927(r2)
10003184:	10803fcc 	andi	r2,r2,255
10003188:	e0bffe8d 	sth	r2,-6(fp)
                break;
1000318c:	00001e06 	br	10003208 <clydes_move+0x1d4>
            }
            case 1: {
                newx = game->clyde.xpos - 1;
10003190:	e0bf1c17 	ldw	r2,-912(fp)
10003194:	1080e783 	ldbu	r2,926(r2)
10003198:	10803fcc 	andi	r2,r2,255
1000319c:	10bfffc4 	addi	r2,r2,-1
100031a0:	e0bfff0d 	sth	r2,-4(fp)
                newy = game->clyde.ypos;
100031a4:	e0bf1c17 	ldw	r2,-912(fp)
100031a8:	1080e7c3 	ldbu	r2,927(r2)
100031ac:	10803fcc 	andi	r2,r2,255
100031b0:	e0bffe8d 	sth	r2,-6(fp)
                break;
100031b4:	00001406 	br	10003208 <clydes_move+0x1d4>
            }
            case 2: {
                newx = game->clyde.xpos;
100031b8:	e0bf1c17 	ldw	r2,-912(fp)
100031bc:	1080e783 	ldbu	r2,926(r2)
100031c0:	10803fcc 	andi	r2,r2,255
100031c4:	e0bfff0d 	sth	r2,-4(fp)
                newy = game->clyde.ypos + 1;
100031c8:	e0bf1c17 	ldw	r2,-912(fp)
100031cc:	1080e7c3 	ldbu	r2,927(r2)
100031d0:	10803fcc 	andi	r2,r2,255
100031d4:	10800044 	addi	r2,r2,1
100031d8:	e0bffe8d 	sth	r2,-6(fp)
                break;
100031dc:	00000a06 	br	10003208 <clydes_move+0x1d4>
            }
            default: {
                newx = game->clyde.xpos;
100031e0:	e0bf1c17 	ldw	r2,-912(fp)
100031e4:	1080e783 	ldbu	r2,926(r2)
100031e8:	10803fcc 	andi	r2,r2,255
100031ec:	e0bfff0d 	sth	r2,-4(fp)
                newy = game->clyde.ypos - 1;
100031f0:	e0bf1c17 	ldw	r2,-912(fp)
100031f4:	1080e7c3 	ldbu	r2,927(r2)
100031f8:	10803fcc 	andi	r2,r2,255
100031fc:	10bfffc4 	addi	r2,r2,-1
10003200:	e0bffe8d 	sth	r2,-6(fp)
                break;
10003204:	0001883a 	nop
            }
        }
        newx = (newx + _BOARD_W) % _BOARD_W;
10003208:	e0bfff0f 	ldh	r2,-4(fp)
1000320c:	108003c4 	addi	r2,r2,15
10003210:	00c003c4 	movi	r3,15
10003214:	10c7283a 	div	r3,r2,r3
10003218:	18c003e4 	muli	r3,r3,15
1000321c:	10c5c83a 	sub	r2,r2,r3
10003220:	e0bfff0d 	sth	r2,-4(fp)
        newy = (newy + _BOARD_H) % _BOARD_H;
10003224:	e0bffe8f 	ldh	r2,-6(fp)
10003228:	108003c4 	addi	r2,r2,15
1000322c:	00c003c4 	movi	r3,15
10003230:	10c7283a 	div	r3,r2,r3
10003234:	18c003e4 	muli	r3,r3,15
10003238:	10c5c83a 	sub	r2,r2,r3
1000323c:	e0bffe8d 	sth	r2,-6(fp)
        if(tmp_map[newx][newy] != WALL) {
10003240:	e0ffff0f 	ldh	r3,-4(fp)
10003244:	e0bffe8f 	ldh	r2,-6(fp)
10003248:	18c003e4 	muli	r3,r3,15
1000324c:	1885883a 	add	r2,r3,r2
10003250:	100490ba 	slli	r2,r2,2
10003254:	e085883a 	add	r2,fp,r2
10003258:	10bf1d17 	ldw	r2,-908(r2)
1000325c:	10001826 	beq	r2,zero,100032c0 <clydes_move+0x28c>
            // Add to update queue.
        	addPendingPos(game->clyde.xpos, game->clyde.ypos);
10003260:	e0bf1c17 	ldw	r2,-912(fp)
10003264:	1080e783 	ldbu	r2,926(r2)
10003268:	10c03fcc 	andi	r3,r2,255
1000326c:	e0bf1c17 	ldw	r2,-912(fp)
10003270:	1080e7c3 	ldbu	r2,927(r2)
10003274:	10803fcc 	andi	r2,r2,255
10003278:	100b883a 	mov	r5,r2
1000327c:	1809883a 	mov	r4,r3
10003280:	00066f40 	call	100066f4 <addPendingPos>
        	addPendingPos(newx, newy);
10003284:	e0bfff0f 	ldh	r2,-4(fp)
10003288:	e0fffe8f 	ldh	r3,-6(fp)
1000328c:	180b883a 	mov	r5,r3
10003290:	1009883a 	mov	r4,r2
10003294:	00066f40 	call	100066f4 <addPendingPos>
            game->clyde.xpos = (uint8_t)newx;
10003298:	e0bfff0b 	ldhu	r2,-4(fp)
1000329c:	1007883a 	mov	r3,r2
100032a0:	e0bf1c17 	ldw	r2,-912(fp)
100032a4:	10c0e785 	stb	r3,926(r2)
            game->clyde.ypos = (uint8_t)newy;
100032a8:	e0bffe8b 	ldhu	r2,-6(fp)
100032ac:	1007883a 	mov	r3,r2
100032b0:	e0bf1c17 	ldw	r2,-912(fp)
100032b4:	10c0e7c5 	stb	r3,927(r2)
            success = true;
100032b8:	00800044 	movi	r2,1
100032bc:	e0bfff85 	stb	r2,-2(fp)
        }
        trials += 1;
100032c0:	e0bfffc3 	ldbu	r2,-1(fp)
100032c4:	10800044 	addi	r2,r2,1
100032c8:	e0bfffc5 	stb	r2,-1(fp)
    while(!success && trials < 10) {
100032cc:	e0bfff83 	ldbu	r2,-2(fp)
100032d0:	1080005c 	xori	r2,r2,1
100032d4:	10803fcc 	andi	r2,r2,255
100032d8:	10000326 	beq	r2,zero,100032e8 <clydes_move+0x2b4>
100032dc:	e0bfffc3 	ldbu	r2,-1(fp)
100032e0:	108002b0 	cmpltui	r2,r2,10
100032e4:	103f8d1e 	bne	r2,zero,1000311c <clydes_move+0xe8>
	}
}
100032e8:	e037883a 	mov	sp,fp
100032ec:	dfc00117 	ldw	ra,4(sp)
100032f0:	df000017 	ldw	fp,0(sp)
100032f4:	dec00204 	addi	sp,sp,8
100032f8:	f800283a 	ret

100032fc <blinkyPalette>:

void blinkyPalette() {
100032fc:	defffd04 	addi	sp,sp,-12
10003300:	dfc00215 	stw	ra,8(sp)
10003304:	df000115 	stw	fp,4(sp)
10003308:	df000104 	addi	fp,sp,4
	Palette* binkyPalette;
	binkyPalette = malloc(sizeof(Palette));
1000330c:	01000504 	movi	r4,20
10003310:	00162ac0 	call	100162ac <malloc>
10003314:	e0bfff15 	stw	r2,-4(fp)
	binkyPalette->colors[0] = 0x000000;
10003318:	e0bfff17 	ldw	r2,-4(fp)
1000331c:	10000115 	stw	zero,4(r2)
	binkyPalette->colors[3] = 0xFF5243;
10003320:	e0ffff17 	ldw	r3,-4(fp)
10003324:	00803ff4 	movhi	r2,255
10003328:	109490c4 	addi	r2,r2,21059
1000332c:	18800415 	stw	r2,16(r3)
	binkyPalette->paletteId = 3;
10003330:	e0bfff17 	ldw	r2,-4(fp)
10003334:	00c000c4 	movi	r3,3
10003338:	10c00015 	stw	r3,0(r2)
	writePalette(binkyPalette);
1000333c:	e13fff17 	ldw	r4,-4(fp)
10003340:	00051180 	call	10005118 <writePalette>
	free(binkyPalette);
10003344:	e13fff17 	ldw	r4,-4(fp)
10003348:	00162bc0 	call	100162bc <free>
}
1000334c:	0001883a 	nop
10003350:	e037883a 	mov	sp,fp
10003354:	dfc00117 	ldw	ra,4(sp)
10003358:	df000017 	ldw	fp,0(sp)
1000335c:	dec00204 	addi	sp,sp,8
10003360:	f800283a 	ret

10003364 <pinkyPalette>:

void pinkyPalette() {
10003364:	defffd04 	addi	sp,sp,-12
10003368:	dfc00215 	stw	ra,8(sp)
1000336c:	df000115 	stw	fp,4(sp)
10003370:	df000104 	addi	fp,sp,4
	Palette* pinkyPalette;
	pinkyPalette = malloc(sizeof(Palette));
10003374:	01000504 	movi	r4,20
10003378:	00162ac0 	call	100162ac <malloc>
1000337c:	e0bfff15 	stw	r2,-4(fp)
	pinkyPalette->colors[0] = 0x000000;
10003380:	e0bfff17 	ldw	r2,-4(fp)
10003384:	10000115 	stw	zero,4(r2)
	pinkyPalette->colors[3] = 0xC92CE8;
10003388:	e0ffff17 	ldw	r3,-4(fp)
1000338c:	00803274 	movhi	r2,201
10003390:	108b3a04 	addi	r2,r2,11496
10003394:	18800415 	stw	r2,16(r3)
	pinkyPalette->paletteId = 4;
10003398:	e0bfff17 	ldw	r2,-4(fp)
1000339c:	00c00104 	movi	r3,4
100033a0:	10c00015 	stw	r3,0(r2)
	writePalette(pinkyPalette);
100033a4:	e13fff17 	ldw	r4,-4(fp)
100033a8:	00051180 	call	10005118 <writePalette>
	free(pinkyPalette);
100033ac:	e13fff17 	ldw	r4,-4(fp)
100033b0:	00162bc0 	call	100162bc <free>
}
100033b4:	0001883a 	nop
100033b8:	e037883a 	mov	sp,fp
100033bc:	dfc00117 	ldw	ra,4(sp)
100033c0:	df000017 	ldw	fp,0(sp)
100033c4:	dec00204 	addi	sp,sp,8
100033c8:	f800283a 	ret

100033cc <inkyPalette>:

void inkyPalette(){
100033cc:	defffd04 	addi	sp,sp,-12
100033d0:	dfc00215 	stw	ra,8(sp)
100033d4:	df000115 	stw	fp,4(sp)
100033d8:	df000104 	addi	fp,sp,4
	Palette* inkyPalette;
	inkyPalette = malloc(sizeof(Palette));
100033dc:	01000504 	movi	r4,20
100033e0:	00162ac0 	call	100162ac <malloc>
100033e4:	e0bfff15 	stw	r2,-4(fp)
	inkyPalette->colors[0] = 0x000000;
100033e8:	e0bfff17 	ldw	r2,-4(fp)
100033ec:	10000115 	stw	zero,4(r2)
	inkyPalette->colors[3] = 0x2CD0E8;
100033f0:	e0ffff17 	ldw	r3,-4(fp)
100033f4:	00800b74 	movhi	r2,45
100033f8:	10b43a04 	addi	r2,r2,-12056
100033fc:	18800415 	stw	r2,16(r3)
	inkyPalette->paletteId = 5;
10003400:	e0bfff17 	ldw	r2,-4(fp)
10003404:	00c00144 	movi	r3,5
10003408:	10c00015 	stw	r3,0(r2)
	writePalette(inkyPalette);
1000340c:	e13fff17 	ldw	r4,-4(fp)
10003410:	00051180 	call	10005118 <writePalette>
	free(inkyPalette);
10003414:	e13fff17 	ldw	r4,-4(fp)
10003418:	00162bc0 	call	100162bc <free>
}
1000341c:	0001883a 	nop
10003420:	e037883a 	mov	sp,fp
10003424:	dfc00117 	ldw	ra,4(sp)
10003428:	df000017 	ldw	fp,0(sp)
1000342c:	dec00204 	addi	sp,sp,8
10003430:	f800283a 	ret

10003434 <clydePalette>:

void clydePalette() {
10003434:	defffd04 	addi	sp,sp,-12
10003438:	dfc00215 	stw	ra,8(sp)
1000343c:	df000115 	stw	fp,4(sp)
10003440:	df000104 	addi	fp,sp,4
	Palette* clydePalette = malloc(sizeof(Palette));
10003444:	01000504 	movi	r4,20
10003448:	00162ac0 	call	100162ac <malloc>
1000344c:	e0bfff15 	stw	r2,-4(fp)
	clydePalette->colors[0] = 0x000000;
10003450:	e0bfff17 	ldw	r2,-4(fp)
10003454:	10000115 	stw	zero,4(r2)
	clydePalette->colors[3] = 0xFFB732;
10003458:	e0ffff17 	ldw	r3,-4(fp)
1000345c:	00804034 	movhi	r2,256
10003460:	10adcc84 	addi	r2,r2,-18638
10003464:	18800415 	stw	r2,16(r3)
	clydePalette->paletteId = 6;
10003468:	e0bfff17 	ldw	r2,-4(fp)
1000346c:	00c00184 	movi	r3,6
10003470:	10c00015 	stw	r3,0(r2)
	writePalette(clydePalette);
10003474:	e13fff17 	ldw	r4,-4(fp)
10003478:	00051180 	call	10005118 <writePalette>
	free(clydePalette);
1000347c:	e13fff17 	ldw	r4,-4(fp)
10003480:	00162bc0 	call	100162bc <free>
}
10003484:	0001883a 	nop
10003488:	e037883a 	mov	sp,fp
1000348c:	dfc00117 	ldw	ra,4(sp)
10003490:	df000017 	ldw	fp,0(sp)
10003494:	dec00204 	addi	sp,sp,8
10003498:	f800283a 	ret

1000349c <gbPalette>:

void gbPalette() {
1000349c:	defffd04 	addi	sp,sp,-12
100034a0:	dfc00215 	stw	ra,8(sp)
100034a4:	df000115 	stw	fp,4(sp)
100034a8:	df000104 	addi	fp,sp,4
	Palette* gbPalette = malloc(sizeof(Palette));
100034ac:	01000504 	movi	r4,20
100034b0:	00162ac0 	call	100162ac <malloc>
100034b4:	e0bfff15 	stw	r2,-4(fp)
	gbPalette->colors[0] = 0x000000;
100034b8:	e0bfff17 	ldw	r2,-4(fp)
100034bc:	10000115 	stw	zero,4(r2)
	gbPalette->colors[1] = 0xFFFFFF;	// White
100034c0:	e0ffff17 	ldw	r3,-4(fp)
100034c4:	00804034 	movhi	r2,256
100034c8:	10bfffc4 	addi	r2,r2,-1
100034cc:	18800215 	stw	r2,8(r3)
	gbPalette->colors[2] = 0xFFFFFF;
100034d0:	e0ffff17 	ldw	r3,-4(fp)
100034d4:	00804034 	movhi	r2,256
100034d8:	10bfffc4 	addi	r2,r2,-1
100034dc:	18800315 	stw	r2,12(r3)
	gbPalette->colors[3] = 0xFFFF00;	// Yellow
100034e0:	e0ffff17 	ldw	r3,-4(fp)
100034e4:	00804034 	movhi	r2,256
100034e8:	10bfc004 	addi	r2,r2,-256
100034ec:	18800415 	stw	r2,16(r3)
	gbPalette->paletteId = 1;
100034f0:	e0bfff17 	ldw	r2,-4(fp)
100034f4:	00c00044 	movi	r3,1
100034f8:	10c00015 	stw	r3,0(r2)
	writePalette(gbPalette);
100034fc:	e13fff17 	ldw	r4,-4(fp)
10003500:	00051180 	call	10005118 <writePalette>
	free(gbPalette);
10003504:	e13fff17 	ldw	r4,-4(fp)
10003508:	00162bc0 	call	100162bc <free>
}
1000350c:	0001883a 	nop
10003510:	e037883a 	mov	sp,fp
10003514:	dfc00117 	ldw	ra,4(sp)
10003518:	df000017 	ldw	fp,0(sp)
1000351c:	dec00204 	addi	sp,sp,8
10003520:	f800283a 	ret

10003524 <textPalette>:

void textPalette() {
10003524:	defffd04 	addi	sp,sp,-12
10003528:	dfc00215 	stw	ra,8(sp)
1000352c:	df000115 	stw	fp,4(sp)
10003530:	df000104 	addi	fp,sp,4
	Palette* textPalette = malloc(sizeof(Palette));
10003534:	01000504 	movi	r4,20
10003538:	00162ac0 	call	100162ac <malloc>
1000353c:	e0bfff15 	stw	r2,-4(fp)
	textPalette->colors[0] = 0x000000;
10003540:	e0bfff17 	ldw	r2,-4(fp)
10003544:	10000115 	stw	zero,4(r2)
	textPalette->colors[1] = 0xFFFFFF;
10003548:	e0ffff17 	ldw	r3,-4(fp)
1000354c:	00804034 	movhi	r2,256
10003550:	10bfffc4 	addi	r2,r2,-1
10003554:	18800215 	stw	r2,8(r3)
	textPalette->colors[2] = 0xFFFFFF;
10003558:	e0ffff17 	ldw	r3,-4(fp)
1000355c:	00804034 	movhi	r2,256
10003560:	10bfffc4 	addi	r2,r2,-1
10003564:	18800315 	stw	r2,12(r3)
	textPalette->colors[3] = 0xFFFFFF;
10003568:	e0ffff17 	ldw	r3,-4(fp)
1000356c:	00804034 	movhi	r2,256
10003570:	10bfffc4 	addi	r2,r2,-1
10003574:	18800415 	stw	r2,16(r3)
	textPalette->paletteId = 0;
10003578:	e0bfff17 	ldw	r2,-4(fp)
1000357c:	10000015 	stw	zero,0(r2)
	writePalette(textPalette);
10003580:	e13fff17 	ldw	r4,-4(fp)
10003584:	00051180 	call	10005118 <writePalette>
	free(textPalette);
10003588:	e13fff17 	ldw	r4,-4(fp)
1000358c:	00162bc0 	call	100162bc <free>
}
10003590:	0001883a 	nop
10003594:	e037883a 	mov	sp,fp
10003598:	dfc00117 	ldw	ra,4(sp)
1000359c:	df000017 	ldw	fp,0(sp)
100035a0:	dec00204 	addi	sp,sp,8
100035a4:	f800283a 	ret

100035a8 <wallPalette>:

void wallPalette() {
100035a8:	defffd04 	addi	sp,sp,-12
100035ac:	dfc00215 	stw	ra,8(sp)
100035b0:	df000115 	stw	fp,4(sp)
100035b4:	df000104 	addi	fp,sp,4
	Palette* wallPalette = malloc(sizeof(Palette));
100035b8:	01000504 	movi	r4,20
100035bc:	00162ac0 	call	100162ac <malloc>
100035c0:	e0bfff15 	stw	r2,-4(fp)
	wallPalette->colors[0] = 0x0000FF;
100035c4:	e0bfff17 	ldw	r2,-4(fp)
100035c8:	00c03fc4 	movi	r3,255
100035cc:	10c00115 	stw	r3,4(r2)
	wallPalette->colors[1] = 0x000000;
100035d0:	e0bfff17 	ldw	r2,-4(fp)
100035d4:	10000215 	stw	zero,8(r2)
	wallPalette->colors[2] = 0x000000;
100035d8:	e0bfff17 	ldw	r2,-4(fp)
100035dc:	10000315 	stw	zero,12(r2)
	wallPalette->colors[3] = 0x000000;
100035e0:	e0bfff17 	ldw	r2,-4(fp)
100035e4:	10000415 	stw	zero,16(r2)
	wallPalette->paletteId = 2;
100035e8:	e0bfff17 	ldw	r2,-4(fp)
100035ec:	00c00084 	movi	r3,2
100035f0:	10c00015 	stw	r3,0(r2)
	writePalette(wallPalette);
100035f4:	e13fff17 	ldw	r4,-4(fp)
100035f8:	00051180 	call	10005118 <writePalette>
	free(wallPalette);
100035fc:	e13fff17 	ldw	r4,-4(fp)
10003600:	00162bc0 	call	100162bc <free>
}
10003604:	0001883a 	nop
10003608:	e037883a 	mov	sp,fp
1000360c:	dfc00117 	ldw	ra,4(sp)
10003610:	df000017 	ldw	fp,0(sp)
10003614:	dec00204 	addi	sp,sp,8
10003618:	f800283a 	ret

1000361c <initScreen>:
// This function initializes the screen.
void initScreen() {
1000361c:	deff5c04 	addi	sp,sp,-656
10003620:	dfc0a315 	stw	ra,652(sp)
10003624:	df00a215 	stw	fp,648(sp)
10003628:	df00a204 	addi	fp,sp,648
	textPalette();
1000362c:	00035240 	call	10003524 <textPalette>
	clearScreen();
10003630:	00054a80 	call	100054a8 <clearScreen>

	writeText(0,0,"Score",0);
10003634:	000f883a 	mov	r7,zero
10003638:	018400b4 	movhi	r6,4098
1000363c:	31940b04 	addi	r6,r6,20524
10003640:	000b883a 	mov	r5,zero
10003644:	0009883a 	mov	r4,zero
10003648:	00054100 	call	10005410 <writeText>
	writeText(2,1,"000000",0);
1000364c:	000f883a 	mov	r7,zero
10003650:	018400b4 	movhi	r6,4098
10003654:	31940d04 	addi	r6,r6,20532
10003658:	01400044 	movi	r5,1
1000365c:	01000084 	movi	r4,2
10003660:	00054100 	call	10005410 <writeText>
	writeText(0,2,"HighScore",0);
10003664:	000f883a 	mov	r7,zero
10003668:	018400b4 	movhi	r6,4098
1000366c:	31940f04 	addi	r6,r6,20540
10003670:	01400084 	movi	r5,2
10003674:	0009883a 	mov	r4,zero
10003678:	00054100 	call	10005410 <writeText>
	writeText(2,3,"000000",0);
1000367c:	000f883a 	mov	r7,zero
10003680:	018400b4 	movhi	r6,4098
10003684:	31940d04 	addi	r6,r6,20532
10003688:	014000c4 	movi	r5,3
1000368c:	01000084 	movi	r4,2
10003690:	00054100 	call	10005410 <writeText>

	gbPalette();
10003694:	000349c0 	call	1000349c <gbPalette>
	wallPalette();
10003698:	00035a80 	call	100035a8 <wallPalette>

	blinkyPalette();
1000369c:	00032fc0 	call	100032fc <blinkyPalette>
	inkyPalette();
100036a0:	00033cc0 	call	100033cc <inkyPalette>
	pinkyPalette();
100036a4:	00033640 	call	10003364 <pinkyPalette>
	clydePalette();
100036a8:	00034340 	call	10003434 <clydePalette>

	Sprite candy_left;
	Sprite candy_right;
	Sprite scandy_left;
	Sprite scandy_right;
	candy_left.sprite_id = 1;
100036ac:	00800044 	movi	r2,1
100036b0:	e0bff78d 	sth	r2,-34(fp)
	candy_right.sprite_id = 2;
100036b4:	00800084 	movi	r2,2
100036b8:	e0bfef0d 	sth	r2,-68(fp)
	scandy_left.sprite_id = 3;
100036bc:	008000c4 	movi	r2,3
100036c0:	e0bfe68d 	sth	r2,-102(fp)
	scandy_right.sprite_id = 4;
100036c4:	00800104 	movi	r2,4
100036c8:	e0bfde0d 	sth	r2,-136(fp)
	char candy_matl[16][8] = {
100036cc:	e0ffbe04 	addi	r3,fp,-264
100036d0:	008400b4 	movhi	r2,4098
100036d4:	10941184 	addi	r2,r2,20550
100036d8:	01002004 	movi	r4,128
100036dc:	200d883a 	mov	r6,r4
100036e0:	100b883a 	mov	r5,r2
100036e4:	1809883a 	mov	r4,r3
100036e8:	0016c340 	call	10016c34 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char candy_matr[16][8] = {
100036ec:	e0ff9e04 	addi	r3,fp,-392
100036f0:	008400b4 	movhi	r2,4098
100036f4:	10943184 	addi	r2,r2,20678
100036f8:	01002004 	movi	r4,128
100036fc:	200d883a 	mov	r6,r4
10003700:	100b883a 	mov	r5,r2
10003704:	1809883a 	mov	r4,r3
10003708:	0016c340 	call	10016c34 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char scandy_matl[16][8] = {
1000370c:	e0ff7e04 	addi	r3,fp,-520
10003710:	008400b4 	movhi	r2,4098
10003714:	10945184 	addi	r2,r2,20806
10003718:	01002004 	movi	r4,128
1000371c:	200d883a 	mov	r6,r4
10003720:	100b883a 	mov	r5,r2
10003724:	1809883a 	mov	r4,r3
10003728:	0016c340 	call	10016c34 <memcpy>
			"      *@",
			"       *",
			"        ",
			"        ",
	};
	char scandy_matr[16][8] = {
1000372c:	e0ff5e04 	addi	r3,fp,-648
10003730:	008400b4 	movhi	r2,4098
10003734:	10947184 	addi	r2,r2,20934
10003738:	01002004 	movi	r4,128
1000373c:	200d883a 	mov	r6,r4
10003740:	100b883a 	mov	r5,r2
10003744:	1809883a 	mov	r4,r3
10003748:	0016c340 	call	10016c34 <memcpy>
			"@*      ",
			"*       ",
			"        ",
			"        ",
	};
	parseSprite(&candy_left, candy_matl);
1000374c:	e0ffbe04 	addi	r3,fp,-264
10003750:	e0bff784 	addi	r2,fp,-34
10003754:	180b883a 	mov	r5,r3
10003758:	1009883a 	mov	r4,r2
1000375c:	00052c40 	call	100052c4 <parseSprite>
	writeSprite(&candy_left);
10003760:	e0bff784 	addi	r2,fp,-34
10003764:	1009883a 	mov	r4,r2
10003768:	000533c0 	call	1000533c <writeSprite>
	parseSprite(&candy_right, candy_matr);
1000376c:	e0ff9e04 	addi	r3,fp,-392
10003770:	e0bfef04 	addi	r2,fp,-68
10003774:	180b883a 	mov	r5,r3
10003778:	1009883a 	mov	r4,r2
1000377c:	00052c40 	call	100052c4 <parseSprite>
	writeSprite(&candy_right);
10003780:	e0bfef04 	addi	r2,fp,-68
10003784:	1009883a 	mov	r4,r2
10003788:	000533c0 	call	1000533c <writeSprite>
	parseSprite(&scandy_left, scandy_matl);
1000378c:	e0ff7e04 	addi	r3,fp,-520
10003790:	e0bfe684 	addi	r2,fp,-102
10003794:	180b883a 	mov	r5,r3
10003798:	1009883a 	mov	r4,r2
1000379c:	00052c40 	call	100052c4 <parseSprite>
	writeSprite(&scandy_left);
100037a0:	e0bfe684 	addi	r2,fp,-102
100037a4:	1009883a 	mov	r4,r2
100037a8:	000533c0 	call	1000533c <writeSprite>
	parseSprite(&scandy_right, scandy_matr);
100037ac:	e0ff5e04 	addi	r3,fp,-648
100037b0:	e0bfde04 	addi	r2,fp,-136
100037b4:	180b883a 	mov	r5,r3
100037b8:	1009883a 	mov	r4,r2
100037bc:	00052c40 	call	100052c4 <parseSprite>
	writeSprite(&scandy_right);
100037c0:	e0bfde04 	addi	r2,fp,-136
100037c4:	1009883a 	mov	r4,r2
100037c8:	000533c0 	call	1000533c <writeSprite>
}
100037cc:	0001883a 	nop
100037d0:	e037883a 	mov	sp,fp
100037d4:	dfc00117 	ldw	ra,4(sp)
100037d8:	df000017 	ldw	fp,0(sp)
100037dc:	dec00204 	addi	sp,sp,8
100037e0:	f800283a 	ret

100037e4 <drawBoard>:

// Draw the game board.
void drawBoard(Game* game) {
100037e4:	defff904 	addi	sp,sp,-28
100037e8:	dfc00615 	stw	ra,24(sp)
100037ec:	df000515 	stw	fp,20(sp)
100037f0:	df000504 	addi	fp,sp,20
100037f4:	e13ffb15 	stw	r4,-20(fp)
	// Draw the board.
	for(int i=0;i<_BOARD_W;i+=1) {
100037f8:	e03fff15 	stw	zero,-4(fp)
100037fc:	00009006 	br	10003a40 <drawBoard+0x25c>
		for(int j=0;j<_BOARD_H;j+=1) {
10003800:	e03ffe15 	stw	zero,-8(fp)
10003804:	00008806 	br	10003a28 <drawBoard+0x244>
			if(i==game->blinky.xpos && j==game->blinky.ypos) {
10003808:	e0bffb17 	ldw	r2,-20(fp)
1000380c:	1080e303 	ldbu	r2,908(r2)
10003810:	10803fcc 	andi	r2,r2,255
10003814:	e0ffff17 	ldw	r3,-4(fp)
10003818:	1880051e 	bne	r3,r2,10003830 <drawBoard+0x4c>
1000381c:	e0bffb17 	ldw	r2,-20(fp)
10003820:	1080e343 	ldbu	r2,909(r2)
10003824:	10803fcc 	andi	r2,r2,255
10003828:	e0fffe17 	ldw	r3,-8(fp)
1000382c:	18807226 	beq	r3,r2,100039f8 <drawBoard+0x214>
				continue;
			} else if(i==game->pinky.xpos && j==game->pinky.ypos) {
10003830:	e0bffb17 	ldw	r2,-20(fp)
10003834:	1080e483 	ldbu	r2,914(r2)
10003838:	10803fcc 	andi	r2,r2,255
1000383c:	e0ffff17 	ldw	r3,-4(fp)
10003840:	1880051e 	bne	r3,r2,10003858 <drawBoard+0x74>
10003844:	e0bffb17 	ldw	r2,-20(fp)
10003848:	1080e4c3 	ldbu	r2,915(r2)
1000384c:	10803fcc 	andi	r2,r2,255
10003850:	e0fffe17 	ldw	r3,-8(fp)
10003854:	18806a26 	beq	r3,r2,10003a00 <drawBoard+0x21c>
				continue;
			} else if(i==game->inky.xpos && j==game->inky.ypos) {
10003858:	e0bffb17 	ldw	r2,-20(fp)
1000385c:	1080e603 	ldbu	r2,920(r2)
10003860:	10803fcc 	andi	r2,r2,255
10003864:	e0ffff17 	ldw	r3,-4(fp)
10003868:	1880051e 	bne	r3,r2,10003880 <drawBoard+0x9c>
1000386c:	e0bffb17 	ldw	r2,-20(fp)
10003870:	1080e643 	ldbu	r2,921(r2)
10003874:	10803fcc 	andi	r2,r2,255
10003878:	e0fffe17 	ldw	r3,-8(fp)
1000387c:	18806226 	beq	r3,r2,10003a08 <drawBoard+0x224>
				continue;
			} else if(i==game->clyde.xpos && j==game->clyde.ypos) {
10003880:	e0bffb17 	ldw	r2,-20(fp)
10003884:	1080e783 	ldbu	r2,926(r2)
10003888:	10803fcc 	andi	r2,r2,255
1000388c:	e0ffff17 	ldw	r3,-4(fp)
10003890:	1880051e 	bne	r3,r2,100038a8 <drawBoard+0xc4>
10003894:	e0bffb17 	ldw	r2,-20(fp)
10003898:	1080e7c3 	ldbu	r2,927(r2)
1000389c:	10803fcc 	andi	r2,r2,255
100038a0:	e0fffe17 	ldw	r3,-8(fp)
100038a4:	18805a26 	beq	r3,r2,10003a10 <drawBoard+0x22c>
				continue;
			} else if(i==game->player.xpos && j==game->player.ypos) {
100038a8:	e0bffb17 	ldw	r2,-20(fp)
100038ac:	1080e183 	ldbu	r2,902(r2)
100038b0:	10803fcc 	andi	r2,r2,255
100038b4:	e0ffff17 	ldw	r3,-4(fp)
100038b8:	1880051e 	bne	r3,r2,100038d0 <drawBoard+0xec>
100038bc:	e0bffb17 	ldw	r2,-20(fp)
100038c0:	1080e1c3 	ldbu	r2,903(r2)
100038c4:	10803fcc 	andi	r2,r2,255
100038c8:	e0fffe17 	ldw	r3,-8(fp)
100038cc:	18805226 	beq	r3,r2,10003a18 <drawBoard+0x234>
				continue;
			}
			int curr_tile_xb = j*2+20;
100038d0:	e0bffe17 	ldw	r2,-8(fp)
100038d4:	10800284 	addi	r2,r2,10
100038d8:	1085883a 	add	r2,r2,r2
100038dc:	e0bffd15 	stw	r2,-12(fp)
			int curr_tile_y = i;
100038e0:	e0bfff17 	ldw	r2,-4(fp)
100038e4:	e0bffc15 	stw	r2,-16(fp)
			switch(game->game_map[i][j]) {
100038e8:	e0fffb17 	ldw	r3,-20(fp)
100038ec:	e0bfff17 	ldw	r2,-4(fp)
100038f0:	110003e4 	muli	r4,r2,15
100038f4:	e0bffe17 	ldw	r2,-8(fp)
100038f8:	2085883a 	add	r2,r4,r2
100038fc:	100490ba 	slli	r2,r2,2
10003900:	1885883a 	add	r2,r3,r2
10003904:	10800017 	ldw	r2,0(r2)
10003908:	10c00060 	cmpeqi	r3,r2,1
1000390c:	1800131e 	bne	r3,zero,1000395c <drawBoard+0x178>
10003910:	10000526 	beq	r2,zero,10003928 <drawBoard+0x144>
10003914:	10c000a0 	cmpeqi	r3,r2,2
10003918:	18002a1e 	bne	r3,zero,100039c4 <drawBoard+0x1e0>
1000391c:	108000e0 	cmpeqi	r2,r2,3
10003920:	10001b1e 	bne	r2,zero,10003990 <drawBoard+0x1ac>
10003924:	00003d06 	br	10003a1c <drawBoard+0x238>
				case WALL: {
					drawTile(curr_tile_xb, curr_tile_y, 2, 0);
10003928:	000f883a 	mov	r7,zero
1000392c:	01800084 	movi	r6,2
10003930:	e17ffc17 	ldw	r5,-16(fp)
10003934:	e13ffd17 	ldw	r4,-12(fp)
10003938:	0004fec0 	call	10004fec <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
1000393c:	e0bffd17 	ldw	r2,-12(fp)
10003940:	10800044 	addi	r2,r2,1
10003944:	000f883a 	mov	r7,zero
10003948:	01800084 	movi	r6,2
1000394c:	e17ffc17 	ldw	r5,-16(fp)
10003950:	1009883a 	mov	r4,r2
10003954:	0004fec0 	call	10004fec <drawTile>
					break;
10003958:	00003006 	br	10003a1c <drawBoard+0x238>
				}
				case CANDY: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 129);
1000395c:	01c02044 	movi	r7,129
10003960:	01800044 	movi	r6,1
10003964:	e17ffc17 	ldw	r5,-16(fp)
10003968:	e13ffd17 	ldw	r4,-12(fp)
1000396c:	0004fec0 	call	10004fec <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
10003970:	e0bffd17 	ldw	r2,-12(fp)
10003974:	10800044 	addi	r2,r2,1
10003978:	01c02084 	movi	r7,130
1000397c:	01800044 	movi	r6,1
10003980:	e17ffc17 	ldw	r5,-16(fp)
10003984:	1009883a 	mov	r4,r2
10003988:	0004fec0 	call	10004fec <drawTile>
					break;
1000398c:	00002306 	br	10003a1c <drawBoard+0x238>
				}
				case WAY: {
					drawTile(curr_tile_xb,curr_tile_y, 1, 0);
10003990:	000f883a 	mov	r7,zero
10003994:	01800044 	movi	r6,1
10003998:	e17ffc17 	ldw	r5,-16(fp)
1000399c:	e13ffd17 	ldw	r4,-12(fp)
100039a0:	0004fec0 	call	10004fec <drawTile>
					drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
100039a4:	e0bffd17 	ldw	r2,-12(fp)
100039a8:	10800044 	addi	r2,r2,1
100039ac:	000f883a 	mov	r7,zero
100039b0:	01800044 	movi	r6,1
100039b4:	e17ffc17 	ldw	r5,-16(fp)
100039b8:	1009883a 	mov	r4,r2
100039bc:	0004fec0 	call	10004fec <drawTile>
					break;
100039c0:	00001606 	br	10003a1c <drawBoard+0x238>
				}
				case SUPER: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 131);
100039c4:	01c020c4 	movi	r7,131
100039c8:	01800044 	movi	r6,1
100039cc:	e17ffc17 	ldw	r5,-16(fp)
100039d0:	e13ffd17 	ldw	r4,-12(fp)
100039d4:	0004fec0 	call	10004fec <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
100039d8:	e0bffd17 	ldw	r2,-12(fp)
100039dc:	10800044 	addi	r2,r2,1
100039e0:	01c02104 	movi	r7,132
100039e4:	01800044 	movi	r6,1
100039e8:	e17ffc17 	ldw	r5,-16(fp)
100039ec:	1009883a 	mov	r4,r2
100039f0:	0004fec0 	call	10004fec <drawTile>
					break;
100039f4:	00000906 	br	10003a1c <drawBoard+0x238>
				continue;
100039f8:	0001883a 	nop
100039fc:	00000706 	br	10003a1c <drawBoard+0x238>
				continue;
10003a00:	0001883a 	nop
10003a04:	00000506 	br	10003a1c <drawBoard+0x238>
				continue;
10003a08:	0001883a 	nop
10003a0c:	00000306 	br	10003a1c <drawBoard+0x238>
				continue;
10003a10:	0001883a 	nop
10003a14:	00000106 	br	10003a1c <drawBoard+0x238>
				continue;
10003a18:	0001883a 	nop
		for(int j=0;j<_BOARD_H;j+=1) {
10003a1c:	e0bffe17 	ldw	r2,-8(fp)
10003a20:	10800044 	addi	r2,r2,1
10003a24:	e0bffe15 	stw	r2,-8(fp)
10003a28:	e0bffe17 	ldw	r2,-8(fp)
10003a2c:	108003d0 	cmplti	r2,r2,15
10003a30:	103f751e 	bne	r2,zero,10003808 <drawBoard+0x24>
	for(int i=0;i<_BOARD_W;i+=1) {
10003a34:	e0bfff17 	ldw	r2,-4(fp)
10003a38:	10800044 	addi	r2,r2,1
10003a3c:	e0bfff15 	stw	r2,-4(fp)
10003a40:	e0bfff17 	ldw	r2,-4(fp)
10003a44:	108003d0 	cmplti	r2,r2,15
10003a48:	103f6d1e 	bne	r2,zero,10003800 <drawBoard+0x1c>
			}
		}
	}

	// Draw player
	drawTile(game->player.ypos*2+20, game->player.xpos, 1, 1);
10003a4c:	e0bffb17 	ldw	r2,-20(fp)
10003a50:	1080e1c3 	ldbu	r2,903(r2)
10003a54:	10803fcc 	andi	r2,r2,255
10003a58:	10800284 	addi	r2,r2,10
10003a5c:	1085883a 	add	r2,r2,r2
10003a60:	1007883a 	mov	r3,r2
10003a64:	e0bffb17 	ldw	r2,-20(fp)
10003a68:	1080e183 	ldbu	r2,902(r2)
10003a6c:	10803fcc 	andi	r2,r2,255
10003a70:	01c00044 	movi	r7,1
10003a74:	01800044 	movi	r6,1
10003a78:	100b883a 	mov	r5,r2
10003a7c:	1809883a 	mov	r4,r3
10003a80:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->player.ypos*2+21, game->player.xpos, 1, 2);
10003a84:	e0bffb17 	ldw	r2,-20(fp)
10003a88:	1080e1c3 	ldbu	r2,903(r2)
10003a8c:	10803fcc 	andi	r2,r2,255
10003a90:	1085883a 	add	r2,r2,r2
10003a94:	10c00544 	addi	r3,r2,21
10003a98:	e0bffb17 	ldw	r2,-20(fp)
10003a9c:	1080e183 	ldbu	r2,902(r2)
10003aa0:	10803fcc 	andi	r2,r2,255
10003aa4:	01c00084 	movi	r7,2
10003aa8:	01800044 	movi	r6,1
10003aac:	100b883a 	mov	r5,r2
10003ab0:	1809883a 	mov	r4,r3
10003ab4:	0004fec0 	call	10004fec <drawTile>
	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
10003ab8:	e0bffb17 	ldw	r2,-20(fp)
10003abc:	1080e343 	ldbu	r2,909(r2)
10003ac0:	10803fcc 	andi	r2,r2,255
10003ac4:	10800284 	addi	r2,r2,10
10003ac8:	1085883a 	add	r2,r2,r2
10003acc:	1007883a 	mov	r3,r2
10003ad0:	e0bffb17 	ldw	r2,-20(fp)
10003ad4:	1080e303 	ldbu	r2,908(r2)
10003ad8:	10803fcc 	andi	r2,r2,255
10003adc:	01c000c4 	movi	r7,3
10003ae0:	018000c4 	movi	r6,3
10003ae4:	100b883a 	mov	r5,r2
10003ae8:	1809883a 	mov	r4,r3
10003aec:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
10003af0:	e0bffb17 	ldw	r2,-20(fp)
10003af4:	1080e343 	ldbu	r2,909(r2)
10003af8:	10803fcc 	andi	r2,r2,255
10003afc:	1085883a 	add	r2,r2,r2
10003b00:	10c00544 	addi	r3,r2,21
10003b04:	e0bffb17 	ldw	r2,-20(fp)
10003b08:	1080e303 	ldbu	r2,908(r2)
10003b0c:	10803fcc 	andi	r2,r2,255
10003b10:	01c00104 	movi	r7,4
10003b14:	018000c4 	movi	r6,3
10003b18:	100b883a 	mov	r5,r2
10003b1c:	1809883a 	mov	r4,r3
10003b20:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
10003b24:	e0bffb17 	ldw	r2,-20(fp)
10003b28:	1080e4c3 	ldbu	r2,915(r2)
10003b2c:	10803fcc 	andi	r2,r2,255
10003b30:	10800284 	addi	r2,r2,10
10003b34:	1085883a 	add	r2,r2,r2
10003b38:	1007883a 	mov	r3,r2
10003b3c:	e0bffb17 	ldw	r2,-20(fp)
10003b40:	1080e483 	ldbu	r2,914(r2)
10003b44:	10803fcc 	andi	r2,r2,255
10003b48:	01c000c4 	movi	r7,3
10003b4c:	01800104 	movi	r6,4
10003b50:	100b883a 	mov	r5,r2
10003b54:	1809883a 	mov	r4,r3
10003b58:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
10003b5c:	e0bffb17 	ldw	r2,-20(fp)
10003b60:	1080e4c3 	ldbu	r2,915(r2)
10003b64:	10803fcc 	andi	r2,r2,255
10003b68:	1085883a 	add	r2,r2,r2
10003b6c:	10c00544 	addi	r3,r2,21
10003b70:	e0bffb17 	ldw	r2,-20(fp)
10003b74:	1080e483 	ldbu	r2,914(r2)
10003b78:	10803fcc 	andi	r2,r2,255
10003b7c:	01c00104 	movi	r7,4
10003b80:	01800104 	movi	r6,4
10003b84:	100b883a 	mov	r5,r2
10003b88:	1809883a 	mov	r4,r3
10003b8c:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
10003b90:	e0bffb17 	ldw	r2,-20(fp)
10003b94:	1080e643 	ldbu	r2,921(r2)
10003b98:	10803fcc 	andi	r2,r2,255
10003b9c:	10800284 	addi	r2,r2,10
10003ba0:	1085883a 	add	r2,r2,r2
10003ba4:	1007883a 	mov	r3,r2
10003ba8:	e0bffb17 	ldw	r2,-20(fp)
10003bac:	1080e603 	ldbu	r2,920(r2)
10003bb0:	10803fcc 	andi	r2,r2,255
10003bb4:	01c000c4 	movi	r7,3
10003bb8:	01800144 	movi	r6,5
10003bbc:	100b883a 	mov	r5,r2
10003bc0:	1809883a 	mov	r4,r3
10003bc4:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
10003bc8:	e0bffb17 	ldw	r2,-20(fp)
10003bcc:	1080e643 	ldbu	r2,921(r2)
10003bd0:	10803fcc 	andi	r2,r2,255
10003bd4:	1085883a 	add	r2,r2,r2
10003bd8:	10c00544 	addi	r3,r2,21
10003bdc:	e0bffb17 	ldw	r2,-20(fp)
10003be0:	1080e603 	ldbu	r2,920(r2)
10003be4:	10803fcc 	andi	r2,r2,255
10003be8:	01c00104 	movi	r7,4
10003bec:	01800144 	movi	r6,5
10003bf0:	100b883a 	mov	r5,r2
10003bf4:	1809883a 	mov	r4,r3
10003bf8:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
10003bfc:	e0bffb17 	ldw	r2,-20(fp)
10003c00:	1080e7c3 	ldbu	r2,927(r2)
10003c04:	10803fcc 	andi	r2,r2,255
10003c08:	10800284 	addi	r2,r2,10
10003c0c:	1085883a 	add	r2,r2,r2
10003c10:	1007883a 	mov	r3,r2
10003c14:	e0bffb17 	ldw	r2,-20(fp)
10003c18:	1080e783 	ldbu	r2,926(r2)
10003c1c:	10803fcc 	andi	r2,r2,255
10003c20:	01c000c4 	movi	r7,3
10003c24:	01800184 	movi	r6,6
10003c28:	100b883a 	mov	r5,r2
10003c2c:	1809883a 	mov	r4,r3
10003c30:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
10003c34:	e0bffb17 	ldw	r2,-20(fp)
10003c38:	1080e7c3 	ldbu	r2,927(r2)
10003c3c:	10803fcc 	andi	r2,r2,255
10003c40:	1085883a 	add	r2,r2,r2
10003c44:	10c00544 	addi	r3,r2,21
10003c48:	e0bffb17 	ldw	r2,-20(fp)
10003c4c:	1080e783 	ldbu	r2,926(r2)
10003c50:	10803fcc 	andi	r2,r2,255
10003c54:	01c00104 	movi	r7,4
10003c58:	01800184 	movi	r6,6
10003c5c:	100b883a 	mov	r5,r2
10003c60:	1809883a 	mov	r4,r3
10003c64:	0004fec0 	call	10004fec <drawTile>
}
10003c68:	0001883a 	nop
10003c6c:	e037883a 	mov	sp,fp
10003c70:	dfc00117 	ldw	ra,4(sp)
10003c74:	df000017 	ldw	fp,0(sp)
10003c78:	dec00204 	addi	sp,sp,8
10003c7c:	f800283a 	ret

10003c80 <updateBoard>:

// Update board. change mimimal tiles.
void updateBoard(Game* game) {
10003c80:	defffa04 	addi	sp,sp,-24
10003c84:	dfc00515 	stw	ra,20(sp)
10003c88:	df000415 	stw	fp,16(sp)
10003c8c:	df000404 	addi	fp,sp,16
10003c90:	e13ffc15 	stw	r4,-16(fp)
	while(hasRemain()) {
10003c94:	0000a506 	br	10003f2c <updateBoard+0x2ac>
		TileCollection k = getOne();
10003c98:	00067680 	call	10006768 <getOne>
10003c9c:	e0bffd8d 	sth	r2,-10(fp)
		if(k.tile_x < 0) return;
10003ca0:	e0bffd83 	ldbu	r2,-10(fp)
10003ca4:	10803fcc 	andi	r2,r2,255
10003ca8:	1080201c 	xori	r2,r2,128
10003cac:	10bfe004 	addi	r2,r2,-128
10003cb0:	10012a16 	blt	r2,zero,1000415c <updateBoard+0x4dc>
		if(k.tile_x==game->blinky.xpos && k.tile_y==game->blinky.ypos) {
10003cb4:	e0bffd83 	ldbu	r2,-10(fp)
10003cb8:	10c03fcc 	andi	r3,r2,255
10003cbc:	18c0201c 	xori	r3,r3,128
10003cc0:	18ffe004 	addi	r3,r3,-128
10003cc4:	e0bffc17 	ldw	r2,-16(fp)
10003cc8:	1080e303 	ldbu	r2,908(r2)
10003ccc:	10803fcc 	andi	r2,r2,255
10003cd0:	1880081e 	bne	r3,r2,10003cf4 <updateBoard+0x74>
10003cd4:	e0bffdc3 	ldbu	r2,-9(fp)
10003cd8:	10c03fcc 	andi	r3,r2,255
10003cdc:	18c0201c 	xori	r3,r3,128
10003ce0:	18ffe004 	addi	r3,r3,-128
10003ce4:	e0bffc17 	ldw	r2,-16(fp)
10003ce8:	1080e343 	ldbu	r2,909(r2)
10003cec:	10803fcc 	andi	r2,r2,255
10003cf0:	18808726 	beq	r3,r2,10003f10 <updateBoard+0x290>
			continue;
		} else if(k.tile_x==game->pinky.xpos && k.tile_y==game->pinky.ypos) {
10003cf4:	e0bffd83 	ldbu	r2,-10(fp)
10003cf8:	10c03fcc 	andi	r3,r2,255
10003cfc:	18c0201c 	xori	r3,r3,128
10003d00:	18ffe004 	addi	r3,r3,-128
10003d04:	e0bffc17 	ldw	r2,-16(fp)
10003d08:	1080e483 	ldbu	r2,914(r2)
10003d0c:	10803fcc 	andi	r2,r2,255
10003d10:	1880081e 	bne	r3,r2,10003d34 <updateBoard+0xb4>
10003d14:	e0bffdc3 	ldbu	r2,-9(fp)
10003d18:	10c03fcc 	andi	r3,r2,255
10003d1c:	18c0201c 	xori	r3,r3,128
10003d20:	18ffe004 	addi	r3,r3,-128
10003d24:	e0bffc17 	ldw	r2,-16(fp)
10003d28:	1080e4c3 	ldbu	r2,915(r2)
10003d2c:	10803fcc 	andi	r2,r2,255
10003d30:	18807926 	beq	r3,r2,10003f18 <updateBoard+0x298>
			continue;
		} else if(k.tile_x==game->inky.xpos && k.tile_y==game->inky.ypos) {
10003d34:	e0bffd83 	ldbu	r2,-10(fp)
10003d38:	10c03fcc 	andi	r3,r2,255
10003d3c:	18c0201c 	xori	r3,r3,128
10003d40:	18ffe004 	addi	r3,r3,-128
10003d44:	e0bffc17 	ldw	r2,-16(fp)
10003d48:	1080e603 	ldbu	r2,920(r2)
10003d4c:	10803fcc 	andi	r2,r2,255
10003d50:	1880081e 	bne	r3,r2,10003d74 <updateBoard+0xf4>
10003d54:	e0bffdc3 	ldbu	r2,-9(fp)
10003d58:	10c03fcc 	andi	r3,r2,255
10003d5c:	18c0201c 	xori	r3,r3,128
10003d60:	18ffe004 	addi	r3,r3,-128
10003d64:	e0bffc17 	ldw	r2,-16(fp)
10003d68:	1080e643 	ldbu	r2,921(r2)
10003d6c:	10803fcc 	andi	r2,r2,255
10003d70:	18806b26 	beq	r3,r2,10003f20 <updateBoard+0x2a0>
			continue;
		} else if(k.tile_x==game->clyde.xpos && k.tile_y==game->clyde.ypos) {
10003d74:	e0bffd83 	ldbu	r2,-10(fp)
10003d78:	10c03fcc 	andi	r3,r2,255
10003d7c:	18c0201c 	xori	r3,r3,128
10003d80:	18ffe004 	addi	r3,r3,-128
10003d84:	e0bffc17 	ldw	r2,-16(fp)
10003d88:	1080e783 	ldbu	r2,926(r2)
10003d8c:	10803fcc 	andi	r2,r2,255
10003d90:	1880081e 	bne	r3,r2,10003db4 <updateBoard+0x134>
10003d94:	e0bffdc3 	ldbu	r2,-9(fp)
10003d98:	10c03fcc 	andi	r3,r2,255
10003d9c:	18c0201c 	xori	r3,r3,128
10003da0:	18ffe004 	addi	r3,r3,-128
10003da4:	e0bffc17 	ldw	r2,-16(fp)
10003da8:	1080e7c3 	ldbu	r2,927(r2)
10003dac:	10803fcc 	andi	r2,r2,255
10003db0:	18805d26 	beq	r3,r2,10003f28 <updateBoard+0x2a8>
			continue;
		}
		int curr_tile_xb = k.tile_y*2+20;
10003db4:	e0bffdc3 	ldbu	r2,-9(fp)
10003db8:	10803fcc 	andi	r2,r2,255
10003dbc:	1080201c 	xori	r2,r2,128
10003dc0:	10bfe004 	addi	r2,r2,-128
10003dc4:	10800284 	addi	r2,r2,10
10003dc8:	1085883a 	add	r2,r2,r2
10003dcc:	e0bfff15 	stw	r2,-4(fp)
		int curr_tile_y = k.tile_x;
10003dd0:	e0bffd83 	ldbu	r2,-10(fp)
10003dd4:	10803fcc 	andi	r2,r2,255
10003dd8:	1080201c 	xori	r2,r2,128
10003ddc:	10bfe004 	addi	r2,r2,-128
10003de0:	e0bffe15 	stw	r2,-8(fp)
		switch(game->game_map[k.tile_x][k.tile_y]) {
10003de4:	e0bffd83 	ldbu	r2,-10(fp)
10003de8:	11003fcc 	andi	r4,r2,255
10003dec:	2100201c 	xori	r4,r4,128
10003df0:	213fe004 	addi	r4,r4,-128
10003df4:	e0bffdc3 	ldbu	r2,-9(fp)
10003df8:	10803fcc 	andi	r2,r2,255
10003dfc:	1080201c 	xori	r2,r2,128
10003e00:	10bfe004 	addi	r2,r2,-128
10003e04:	e0fffc17 	ldw	r3,-16(fp)
10003e08:	210003e4 	muli	r4,r4,15
10003e0c:	2085883a 	add	r2,r4,r2
10003e10:	100490ba 	slli	r2,r2,2
10003e14:	1885883a 	add	r2,r3,r2
10003e18:	10800017 	ldw	r2,0(r2)
10003e1c:	10c00060 	cmpeqi	r3,r2,1
10003e20:	1800131e 	bne	r3,zero,10003e70 <updateBoard+0x1f0>
10003e24:	10000526 	beq	r2,zero,10003e3c <updateBoard+0x1bc>
10003e28:	10c000a0 	cmpeqi	r3,r2,2
10003e2c:	18002a1e 	bne	r3,zero,10003ed8 <updateBoard+0x258>
10003e30:	108000e0 	cmpeqi	r2,r2,3
10003e34:	10001b1e 	bne	r2,zero,10003ea4 <updateBoard+0x224>
10003e38:	00003c06 	br	10003f2c <updateBoard+0x2ac>
			case WALL: {
				drawTile(curr_tile_xb, curr_tile_y, 2, 0);
10003e3c:	000f883a 	mov	r7,zero
10003e40:	01800084 	movi	r6,2
10003e44:	e17ffe17 	ldw	r5,-8(fp)
10003e48:	e13fff17 	ldw	r4,-4(fp)
10003e4c:	0004fec0 	call	10004fec <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
10003e50:	e0bfff17 	ldw	r2,-4(fp)
10003e54:	10800044 	addi	r2,r2,1
10003e58:	000f883a 	mov	r7,zero
10003e5c:	01800084 	movi	r6,2
10003e60:	e17ffe17 	ldw	r5,-8(fp)
10003e64:	1009883a 	mov	r4,r2
10003e68:	0004fec0 	call	10004fec <drawTile>
				break;
10003e6c:	00002f06 	br	10003f2c <updateBoard+0x2ac>
			}
			case CANDY: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 129);
10003e70:	01c02044 	movi	r7,129
10003e74:	01800044 	movi	r6,1
10003e78:	e17ffe17 	ldw	r5,-8(fp)
10003e7c:	e13fff17 	ldw	r4,-4(fp)
10003e80:	0004fec0 	call	10004fec <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
10003e84:	e0bfff17 	ldw	r2,-4(fp)
10003e88:	10800044 	addi	r2,r2,1
10003e8c:	01c02084 	movi	r7,130
10003e90:	01800044 	movi	r6,1
10003e94:	e17ffe17 	ldw	r5,-8(fp)
10003e98:	1009883a 	mov	r4,r2
10003e9c:	0004fec0 	call	10004fec <drawTile>
				break;
10003ea0:	00002206 	br	10003f2c <updateBoard+0x2ac>
			}
			case WAY: {
				drawTile(curr_tile_xb,curr_tile_y, 1, 0);
10003ea4:	000f883a 	mov	r7,zero
10003ea8:	01800044 	movi	r6,1
10003eac:	e17ffe17 	ldw	r5,-8(fp)
10003eb0:	e13fff17 	ldw	r4,-4(fp)
10003eb4:	0004fec0 	call	10004fec <drawTile>
				drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
10003eb8:	e0bfff17 	ldw	r2,-4(fp)
10003ebc:	10800044 	addi	r2,r2,1
10003ec0:	000f883a 	mov	r7,zero
10003ec4:	01800044 	movi	r6,1
10003ec8:	e17ffe17 	ldw	r5,-8(fp)
10003ecc:	1009883a 	mov	r4,r2
10003ed0:	0004fec0 	call	10004fec <drawTile>
				break;
10003ed4:	00001506 	br	10003f2c <updateBoard+0x2ac>
			}
			case SUPER: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 131);
10003ed8:	01c020c4 	movi	r7,131
10003edc:	01800044 	movi	r6,1
10003ee0:	e17ffe17 	ldw	r5,-8(fp)
10003ee4:	e13fff17 	ldw	r4,-4(fp)
10003ee8:	0004fec0 	call	10004fec <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
10003eec:	e0bfff17 	ldw	r2,-4(fp)
10003ef0:	10800044 	addi	r2,r2,1
10003ef4:	01c02104 	movi	r7,132
10003ef8:	01800044 	movi	r6,1
10003efc:	e17ffe17 	ldw	r5,-8(fp)
10003f00:	1009883a 	mov	r4,r2
10003f04:	0004fec0 	call	10004fec <drawTile>
				break;
10003f08:	0001883a 	nop
10003f0c:	00000706 	br	10003f2c <updateBoard+0x2ac>
			continue;
10003f10:	0001883a 	nop
10003f14:	00000506 	br	10003f2c <updateBoard+0x2ac>
			continue;
10003f18:	0001883a 	nop
10003f1c:	00000306 	br	10003f2c <updateBoard+0x2ac>
			continue;
10003f20:	0001883a 	nop
10003f24:	00000106 	br	10003f2c <updateBoard+0x2ac>
			continue;
10003f28:	0001883a 	nop
	while(hasRemain()) {
10003f2c:	00068640 	call	10006864 <hasRemain>
10003f30:	10803fcc 	andi	r2,r2,255
10003f34:	103f581e 	bne	r2,zero,10003c98 <updateBoard+0x18>
			}
		}
	}

	// Draw player
	drawTile(game->player.ypos*2+20, game->player.xpos, 1, 1);
10003f38:	e0bffc17 	ldw	r2,-16(fp)
10003f3c:	1080e1c3 	ldbu	r2,903(r2)
10003f40:	10803fcc 	andi	r2,r2,255
10003f44:	10800284 	addi	r2,r2,10
10003f48:	1085883a 	add	r2,r2,r2
10003f4c:	1007883a 	mov	r3,r2
10003f50:	e0bffc17 	ldw	r2,-16(fp)
10003f54:	1080e183 	ldbu	r2,902(r2)
10003f58:	10803fcc 	andi	r2,r2,255
10003f5c:	01c00044 	movi	r7,1
10003f60:	01800044 	movi	r6,1
10003f64:	100b883a 	mov	r5,r2
10003f68:	1809883a 	mov	r4,r3
10003f6c:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->player.ypos*2+21, game->player.xpos, 1, 2);
10003f70:	e0bffc17 	ldw	r2,-16(fp)
10003f74:	1080e1c3 	ldbu	r2,903(r2)
10003f78:	10803fcc 	andi	r2,r2,255
10003f7c:	1085883a 	add	r2,r2,r2
10003f80:	10c00544 	addi	r3,r2,21
10003f84:	e0bffc17 	ldw	r2,-16(fp)
10003f88:	1080e183 	ldbu	r2,902(r2)
10003f8c:	10803fcc 	andi	r2,r2,255
10003f90:	01c00084 	movi	r7,2
10003f94:	01800044 	movi	r6,1
10003f98:	100b883a 	mov	r5,r2
10003f9c:	1809883a 	mov	r4,r3
10003fa0:	0004fec0 	call	10004fec <drawTile>
	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
10003fa4:	e0bffc17 	ldw	r2,-16(fp)
10003fa8:	1080e343 	ldbu	r2,909(r2)
10003fac:	10803fcc 	andi	r2,r2,255
10003fb0:	10800284 	addi	r2,r2,10
10003fb4:	1085883a 	add	r2,r2,r2
10003fb8:	1007883a 	mov	r3,r2
10003fbc:	e0bffc17 	ldw	r2,-16(fp)
10003fc0:	1080e303 	ldbu	r2,908(r2)
10003fc4:	10803fcc 	andi	r2,r2,255
10003fc8:	01c000c4 	movi	r7,3
10003fcc:	018000c4 	movi	r6,3
10003fd0:	100b883a 	mov	r5,r2
10003fd4:	1809883a 	mov	r4,r3
10003fd8:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
10003fdc:	e0bffc17 	ldw	r2,-16(fp)
10003fe0:	1080e343 	ldbu	r2,909(r2)
10003fe4:	10803fcc 	andi	r2,r2,255
10003fe8:	1085883a 	add	r2,r2,r2
10003fec:	10c00544 	addi	r3,r2,21
10003ff0:	e0bffc17 	ldw	r2,-16(fp)
10003ff4:	1080e303 	ldbu	r2,908(r2)
10003ff8:	10803fcc 	andi	r2,r2,255
10003ffc:	01c00104 	movi	r7,4
10004000:	018000c4 	movi	r6,3
10004004:	100b883a 	mov	r5,r2
10004008:	1809883a 	mov	r4,r3
1000400c:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
10004010:	e0bffc17 	ldw	r2,-16(fp)
10004014:	1080e4c3 	ldbu	r2,915(r2)
10004018:	10803fcc 	andi	r2,r2,255
1000401c:	10800284 	addi	r2,r2,10
10004020:	1085883a 	add	r2,r2,r2
10004024:	1007883a 	mov	r3,r2
10004028:	e0bffc17 	ldw	r2,-16(fp)
1000402c:	1080e483 	ldbu	r2,914(r2)
10004030:	10803fcc 	andi	r2,r2,255
10004034:	01c000c4 	movi	r7,3
10004038:	01800104 	movi	r6,4
1000403c:	100b883a 	mov	r5,r2
10004040:	1809883a 	mov	r4,r3
10004044:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
10004048:	e0bffc17 	ldw	r2,-16(fp)
1000404c:	1080e4c3 	ldbu	r2,915(r2)
10004050:	10803fcc 	andi	r2,r2,255
10004054:	1085883a 	add	r2,r2,r2
10004058:	10c00544 	addi	r3,r2,21
1000405c:	e0bffc17 	ldw	r2,-16(fp)
10004060:	1080e483 	ldbu	r2,914(r2)
10004064:	10803fcc 	andi	r2,r2,255
10004068:	01c00104 	movi	r7,4
1000406c:	01800104 	movi	r6,4
10004070:	100b883a 	mov	r5,r2
10004074:	1809883a 	mov	r4,r3
10004078:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
1000407c:	e0bffc17 	ldw	r2,-16(fp)
10004080:	1080e643 	ldbu	r2,921(r2)
10004084:	10803fcc 	andi	r2,r2,255
10004088:	10800284 	addi	r2,r2,10
1000408c:	1085883a 	add	r2,r2,r2
10004090:	1007883a 	mov	r3,r2
10004094:	e0bffc17 	ldw	r2,-16(fp)
10004098:	1080e603 	ldbu	r2,920(r2)
1000409c:	10803fcc 	andi	r2,r2,255
100040a0:	01c000c4 	movi	r7,3
100040a4:	01800144 	movi	r6,5
100040a8:	100b883a 	mov	r5,r2
100040ac:	1809883a 	mov	r4,r3
100040b0:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
100040b4:	e0bffc17 	ldw	r2,-16(fp)
100040b8:	1080e643 	ldbu	r2,921(r2)
100040bc:	10803fcc 	andi	r2,r2,255
100040c0:	1085883a 	add	r2,r2,r2
100040c4:	10c00544 	addi	r3,r2,21
100040c8:	e0bffc17 	ldw	r2,-16(fp)
100040cc:	1080e603 	ldbu	r2,920(r2)
100040d0:	10803fcc 	andi	r2,r2,255
100040d4:	01c00104 	movi	r7,4
100040d8:	01800144 	movi	r6,5
100040dc:	100b883a 	mov	r5,r2
100040e0:	1809883a 	mov	r4,r3
100040e4:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
100040e8:	e0bffc17 	ldw	r2,-16(fp)
100040ec:	1080e7c3 	ldbu	r2,927(r2)
100040f0:	10803fcc 	andi	r2,r2,255
100040f4:	10800284 	addi	r2,r2,10
100040f8:	1085883a 	add	r2,r2,r2
100040fc:	1007883a 	mov	r3,r2
10004100:	e0bffc17 	ldw	r2,-16(fp)
10004104:	1080e783 	ldbu	r2,926(r2)
10004108:	10803fcc 	andi	r2,r2,255
1000410c:	01c000c4 	movi	r7,3
10004110:	01800184 	movi	r6,6
10004114:	100b883a 	mov	r5,r2
10004118:	1809883a 	mov	r4,r3
1000411c:	0004fec0 	call	10004fec <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
10004120:	e0bffc17 	ldw	r2,-16(fp)
10004124:	1080e7c3 	ldbu	r2,927(r2)
10004128:	10803fcc 	andi	r2,r2,255
1000412c:	1085883a 	add	r2,r2,r2
10004130:	10c00544 	addi	r3,r2,21
10004134:	e0bffc17 	ldw	r2,-16(fp)
10004138:	1080e783 	ldbu	r2,926(r2)
1000413c:	10803fcc 	andi	r2,r2,255
10004140:	01c00104 	movi	r7,4
10004144:	01800184 	movi	r6,6
10004148:	100b883a 	mov	r5,r2
1000414c:	1809883a 	mov	r4,r3
10004150:	0004fec0 	call	10004fec <drawTile>

	clearQueue();
10004154:	00068c00 	call	100068c0 <clearQueue>
10004158:	00000106 	br	10004160 <updateBoard+0x4e0>
		if(k.tile_x < 0) return;
1000415c:	0001883a 	nop
}
10004160:	e037883a 	mov	sp,fp
10004164:	dfc00117 	ldw	ra,4(sp)
10004168:	df000017 	ldw	fp,0(sp)
1000416c:	dec00204 	addi	sp,sp,8
10004170:	f800283a 	ret

10004174 <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
10004174:	deff0d04 	addi	sp,sp,-972
10004178:	dfc0f215 	stw	ra,968(sp)
1000417c:	df00f115 	stw	fp,964(sp)
10004180:	df00f104 	addi	fp,sp,964
	printf("Main function started...\n");
10004184:	010400b4 	movhi	r4,4098
10004188:	21149204 	addi	r4,r4,21064
1000418c:	00171080 	call	10017108 <puts>
	IO_init();
10004190:	00005140 	call	10000514 <IO_init>
	printf("Creating board...\n");
10004194:	010400b4 	movhi	r4,4098
10004198:	21149904 	addi	r4,r4,21092
1000419c:	00171080 	call	10017108 <puts>
	Game mainGame;
	printf("Initializing game...\n");
100041a0:	010400b4 	movhi	r4,4098
100041a4:	21149e04 	addi	r4,r4,21112
100041a8:	00171080 	call	10017108 <puts>
	init_game(&mainGame);
100041ac:	e0bf0f04 	addi	r2,fp,-964
100041b0:	1009883a 	mov	r4,r2
100041b4:	00006ec0 	call	100006ec <init_game>
	printf("Drawing initial board...\n");
100041b8:	010400b4 	movhi	r4,4098
100041bc:	2114a404 	addi	r4,r4,21136
100041c0:	00171080 	call	10017108 <puts>
	drawBoard(&mainGame);
100041c4:	e0bf0f04 	addi	r2,fp,-964
100041c8:	1009883a 	mov	r4,r2
100041cc:	00037e40 	call	100037e4 <drawBoard>

	printf("Start USB loop...\n");
100041d0:	010400b4 	movhi	r4,4098
100041d4:	2114ab04 	addi	r4,r4,21164
100041d8:	00171080 	call	10017108 <puts>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
100041dc:	e03ffd8d 	sth	zero,-10(fp)
	int keycode = 0;
100041e0:	e03ffc15 	stw	zero,-16(fp)
	alt_u8 toggle = 0;
100041e4:	e03fff45 	stb	zero,-3(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
100041e8:	010400b4 	movhi	r4,4098
100041ec:	2114b004 	addi	r4,r4,21184
100041f0:	00171080 	call	10017108 <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	// UsbSoftReset();

	drawBoard(&mainGame);
100041f4:	e0bf0f04 	addi	r2,fp,-964
100041f8:	1009883a 	mov	r4,r2
100041fc:	00037e40 	call	100037e4 <drawBoard>
	for(int i=0; i<=5;i++) {
10004200:	e03ffe15 	stw	zero,-8(fp)
10004204:	00000e06 	br	10004240 <main+0xcc>
		printf("[VGA_VS PIO %d] = %08x", i, vga_vs_ptr[i]);
10004208:	e0bffe17 	ldw	r2,-8(fp)
1000420c:	10804804 	addi	r2,r2,288
10004210:	10800003 	ldbu	r2,0(r2)
10004214:	10803fcc 	andi	r2,r2,255
10004218:	1080201c 	xori	r2,r2,128
1000421c:	10bfe004 	addi	r2,r2,-128
10004220:	100d883a 	mov	r6,r2
10004224:	e17ffe17 	ldw	r5,-8(fp)
10004228:	010400b4 	movhi	r4,4098
1000422c:	2114b604 	addi	r4,r4,21208
10004230:	0016fe40 	call	10016fe4 <printf>
	for(int i=0; i<=5;i++) {
10004234:	e0bffe17 	ldw	r2,-8(fp)
10004238:	10800044 	addi	r2,r2,1
1000423c:	e0bffe15 	stw	r2,-8(fp)
10004240:	e0bffe17 	ldw	r2,-8(fp)
10004244:	10800190 	cmplti	r2,r2,6
10004248:	103fef1e 	bne	r2,zero,10004208 <main+0x94>
	}
	if(vga_vs_ptr[3]) {	// Edge detection register
1000424c:	008048c4 	movi	r2,291
10004250:	10800003 	ldbu	r2,0(r2)
10004254:	10803fcc 	andi	r2,r2,255
10004258:	1080201c 	xori	r2,r2,128
1000425c:	10bfe004 	addi	r2,r2,-128
10004260:	10000826 	beq	r2,zero,10004284 <main+0x110>
		updateBoard(&mainGame);
10004264:	e0bf0f04 	addi	r2,fp,-964
10004268:	1009883a 	mov	r4,r2
1000426c:	0003c800 	call	10003c80 <updateBoard>
		vga_vs_ptr[3] = 0x00000000;
10004270:	008048c4 	movi	r2,291
10004274:	10000005 	stb	zero,0(r2)
		printf("Board Updated\n");
10004278:	010400b4 	movhi	r4,4098
1000427c:	2114bc04 	addi	r4,r4,21232
10004280:	00171080 	call	10017108 <puts>
	}

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10004284:	000b883a 	mov	r5,zero
10004288:	01005104 	movi	r4,324
1000428c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10004290:	017fffd4 	movui	r5,65535
10004294:	01302414 	movui	r4,49296
10004298:	00055240 	call	10005524 <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
1000429c:	01409604 	movi	r5,600
100042a0:	01006d04 	movi	r4,436
100042a4:	00055240 	call	10005524 <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
100042a8:	00811004 	movi	r2,1088
100042ac:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
100042b0:	e0bfff8b 	ldhu	r2,-2(fp)
100042b4:	100b883a 	mov	r5,r2
100042b8:	01005084 	movi	r4,322
100042bc:	00055240 	call	10005524 <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
100042c0:	00808404 	movi	r2,528
100042c4:	e0bffb8d 	sth	r2,-18(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
100042c8:	e0bffb8b 	ldhu	r2,-18(fp)
100042cc:	100b883a 	mov	r5,r2
100042d0:	01302314 	movui	r4,49292
100042d4:	00055240 	call	10005524 <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
100042d8:	000b883a 	mov	r5,zero
100042dc:	01007104 	movi	r4,452
100042e0:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100042e4:	000b883a 	mov	r5,zero
100042e8:	01007184 	movi	r4,454
100042ec:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100042f0:	000b883a 	mov	r5,zero
100042f4:	01007204 	movi	r4,456
100042f8:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100042fc:	000b883a 	mov	r5,zero
10004300:	01007284 	movi	r4,458
10004304:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
10004308:	000b883a 	mov	r5,zero
1000430c:	01007304 	movi	r4,460
10004310:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10004314:	000b883a 	mov	r5,zero
10004318:	01007384 	movi	r4,462
1000431c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10004320:	000b883a 	mov	r5,zero
10004324:	01007404 	movi	r4,464
10004328:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
1000432c:	000b883a 	mov	r5,zero
10004330:	01007484 	movi	r4,466
10004334:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10004338:	000b883a 	mov	r5,zero
1000433c:	01007504 	movi	r4,468
10004340:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10004344:	000b883a 	mov	r5,zero
10004348:	01007584 	movi	r4,470
1000434c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10004350:	000b883a 	mov	r5,zero
10004354:	01007604 	movi	r4,472
10004358:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
1000435c:	000b883a 	mov	r5,zero
10004360:	01007684 	movi	r4,474
10004364:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10004368:	000b883a 	mov	r5,zero
1000436c:	01007704 	movi	r4,476
10004370:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10004374:	000b883a 	mov	r5,zero
10004378:	01007784 	movi	r4,478
1000437c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
10004380:	01401c84 	movi	r5,114
10004384:	01007084 	movi	r4,450
10004388:	00055240 	call	10005524 <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
1000438c:	01738054 	movui	r5,52737
10004390:	01000044 	movi	r4,1
10004394:	00006100 	call	10000610 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
10004398:	0001883a 	nop
1000439c:	010000c4 	movi	r4,3
100043a0:	00006840 	call	10000684 <IO_read>
100043a4:	10bfffcc 	andi	r2,r2,65535
100043a8:	103ffc26 	beq	r2,zero,1000439c <main+0x228>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100043ac:	00000806 	br	100043d0 <main+0x25c>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100043b0:	01000044 	movi	r4,1
100043b4:	00006840 	call	10000684 <IO_read>
100043b8:	10bfffcc 	andi	r2,r2,65535
100043bc:	100b883a 	mov	r5,r2
100043c0:	010400b4 	movhi	r4,4098
100043c4:	2114c004 	addi	r4,r4,21248
100043c8:	0016fe40 	call	10016fe4 <printf>
		goto USB_HOT_PLUG;
100043cc:	003f8906 	br	100041f4 <main+0x80>
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100043d0:	01000044 	movi	r4,1
100043d4:	00006840 	call	10000684 <IO_read>
100043d8:	10bfffcc 	andi	r2,r2,65535
100043dc:	1083fb58 	cmpnei	r2,r2,4077
100043e0:	103ff31e 	bne	r2,zero,100043b0 <main+0x23c>
	}
	// STEP 1b end

	printf("STEP 1 Complete");
100043e4:	010400b4 	movhi	r4,4098
100043e8:	2114c904 	addi	r4,r4,21284
100043ec:	0016fe40 	call	10016fe4 <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
100043f0:	01401d04 	movi	r5,116
100043f4:	01007084 	movi	r4,450
100043f8:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
100043fc:	01400f04 	movi	r5,60
10004400:	01007104 	movi	r4,452
10004404:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
10004408:	000b883a 	mov	r5,zero
1000440c:	01007184 	movi	r4,454
10004410:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
10004414:	000b883a 	mov	r5,zero
10004418:	01007204 	movi	r4,456
1000441c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
10004420:	000b883a 	mov	r5,zero
10004424:	01007284 	movi	r4,458
10004428:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
1000442c:	000b883a 	mov	r5,zero
10004430:	01007304 	movi	r4,460
10004434:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10004438:	000b883a 	mov	r5,zero
1000443c:	01007384 	movi	r4,462
10004440:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10004444:	000b883a 	mov	r5,zero
10004448:	01007404 	movi	r4,464
1000444c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
10004450:	000b883a 	mov	r5,zero
10004454:	01007484 	movi	r4,466
10004458:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
1000445c:	000b883a 	mov	r5,zero
10004460:	01007504 	movi	r4,468
10004464:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10004468:	000b883a 	mov	r5,zero
1000446c:	01007584 	movi	r4,470
10004470:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10004474:	000b883a 	mov	r5,zero
10004478:	01007604 	movi	r4,472
1000447c:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10004480:	000b883a 	mov	r5,zero
10004484:	01007684 	movi	r4,474
10004488:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
1000448c:	000b883a 	mov	r5,zero
10004490:	01007704 	movi	r4,476
10004494:	00055240 	call	10005524 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10004498:	000b883a 	mov	r5,zero
1000449c:	01007784 	movi	r4,478
100044a0:	00055240 	call	10005524 <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
100044a4:	01738054 	movui	r5,52737
100044a8:	01000044 	movi	r4,1
100044ac:	00006100 	call	10000610 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100044b0:	0001883a 	nop
100044b4:	01000044 	movi	r4,1
100044b8:	00006840 	call	10000684 <IO_read>
100044bc:	10bfffcc 	andi	r2,r2,65535
100044c0:	1083fb58 	cmpnei	r2,r2,4077
100044c4:	10000826 	beq	r2,zero,100044e8 <main+0x374>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100044c8:	01000044 	movi	r4,1
100044cc:	00006840 	call	10000684 <IO_read>
100044d0:	10bfffcc 	andi	r2,r2,65535
100044d4:	100b883a 	mov	r5,r2
100044d8:	010400b4 	movhi	r4,4098
100044dc:	2114c004 	addi	r4,r4,21248
100044e0:	0016fe40 	call	10016fe4 <printf>
		goto USB_HOT_PLUG;
100044e4:	003f4306 	br	100041f4 <main+0x80>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
100044e8:	00b02284 	movi	r2,-16246
100044ec:	d0a7ce8d 	sth	r2,-24774(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
100044f0:	008c0004 	movi	r2,12288
100044f4:	d0a7cf0d 	sth	r2,-24772(gp)
	fs_device = A_DP_STAT;
100044f8:	00880004 	movi	r2,8192
100044fc:	e0bffd8d 	sth	r2,-10(fp)
	usb_ctl_val = UsbRead(ctl_reg);
10004500:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004504:	10bfffcc 	andi	r2,r2,65535
10004508:	1009883a 	mov	r4,r2
1000450c:	00055800 	call	10005580 <UsbRead>
10004510:	e0bfff8d 	sth	r2,-2(fp)

	if (!(usb_ctl_val & no_device))
10004514:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004518:	e0ffff8b 	ldhu	r3,-2(fp)
1000451c:	1884703a 	and	r2,r3,r2
10004520:	10bfffcc 	andi	r2,r2,65535
10004524:	1000351e 	bne	r2,zero,100045fc <main+0x488>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10004528:	e03fff05 	stb	zero,-4(fp)
1000452c:	00000f06 	br	1000456c <main+0x3f8>
		{
			usleep(5*1000);
10004530:	0104e204 	movi	r4,5000
10004534:	00231880 	call	10023188 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004538:	d0a7ce8b 	ldhu	r2,-24774(gp)
1000453c:	10bfffcc 	andi	r2,r2,65535
10004540:	1009883a 	mov	r4,r2
10004544:	00055800 	call	10005580 <UsbRead>
10004548:	e0bfff8d 	sth	r2,-2(fp)
			if(usb_ctl_val & no_device) break;
1000454c:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004550:	e0ffff8b 	ldhu	r3,-2(fp)
10004554:	1884703a 	and	r2,r3,r2
10004558:	10bfffcc 	andi	r2,r2,65535
1000455c:	1000071e 	bne	r2,zero,1000457c <main+0x408>
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10004560:	e0bfff03 	ldbu	r2,-4(fp)
10004564:	10800044 	addi	r2,r2,1
10004568:	e0bfff05 	stb	r2,-4(fp)
1000456c:	e0bfff03 	ldbu	r2,-4(fp)
10004570:	10800170 	cmpltui	r2,r2,5
10004574:	103fee1e 	bne	r2,zero,10004530 <main+0x3bc>
10004578:	00000106 	br	10004580 <main+0x40c>
			if(usb_ctl_val & no_device) break;
1000457c:	0001883a 	nop
		}
		if(!(usb_ctl_val & no_device))
10004580:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004584:	e0ffff8b 	ldhu	r3,-2(fp)
10004588:	1884703a 	and	r2,r3,r2
1000458c:	10bfffcc 	andi	r2,r2,65535
10004590:	1000261e 	bne	r2,zero,1000462c <main+0x4b8>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
10004594:	010400b4 	movhi	r4,4098
10004598:	2114cd04 	addi	r4,r4,21300
1000459c:	00171080 	call	10017108 <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
100045a0:	010400b4 	movhi	r4,4098
100045a4:	2114d704 	addi	r4,r4,21340
100045a8:	00171080 	call	10017108 <puts>
			while (!(usb_ctl_val & no_device))
100045ac:	00000d06 	br	100045e4 <main+0x470>
			{
				usb_ctl_val = UsbRead(ctl_reg);
100045b0:	d0a7ce8b 	ldhu	r2,-24774(gp)
100045b4:	10bfffcc 	andi	r2,r2,65535
100045b8:	1009883a 	mov	r4,r2
100045bc:	00055800 	call	10005580 <UsbRead>
100045c0:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device)
100045c4:	d0a7cf0b 	ldhu	r2,-24772(gp)
100045c8:	e0ffff8b 	ldhu	r3,-2(fp)
100045cc:	1884703a 	and	r2,r3,r2
100045d0:	10bfffcc 	andi	r2,r2,65535
100045d4:	10000126 	beq	r2,zero,100045dc <main+0x468>
					goto USB_HOT_PLUG;
100045d8:	003f0606 	br	100041f4 <main+0x80>

				usleep(2000);
100045dc:	0101f404 	movi	r4,2000
100045e0:	00231880 	call	10023188 <usleep>
			while (!(usb_ctl_val & no_device))
100045e4:	d0a7cf0b 	ldhu	r2,-24772(gp)
100045e8:	e0ffff8b 	ldhu	r3,-2(fp)
100045ec:	1884703a 	and	r2,r3,r2
100045f0:	10bfffcc 	andi	r2,r2,65535
100045f4:	103fee26 	beq	r2,zero,100045b0 <main+0x43c>
100045f8:	00000c06 	br	1000462c <main+0x4b8>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
100045fc:	e0ffff8b 	ldhu	r3,-2(fp)
10004600:	e0bffd8b 	ldhu	r2,-10(fp)
10004604:	1884703a 	and	r2,r3,r2
10004608:	10bfffcc 	andi	r2,r2,65535
1000460c:	10000426 	beq	r2,zero,10004620 <main+0x4ac>
		{
			printf("[INFO]: full speed device\n");
10004610:	010400b4 	movhi	r4,4098
10004614:	2114e304 	addi	r4,r4,21388
10004618:	00171080 	call	10017108 <puts>
1000461c:	00000306 	br	1000462c <main+0x4b8>
		}
		else
		{
			printf("[INFO]: low speed device\n");
10004620:	010400b4 	movhi	r4,4098
10004624:	2114ea04 	addi	r4,r4,21416
10004628:	00171080 	call	10017108 <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
1000462c:	00056780 	call	10005678 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004630:	00000306 	br	10004640 <main+0x4cc>
	{
		UsbSetAddress();
10004634:	00056780 	call	10005678 <UsbSetAddress>
		usleep(10*1000);
10004638:	0109c404 	movi	r4,10000
1000463c:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004640:	010000c4 	movi	r4,3
10004644:	00006840 	call	10000684 <IO_read>
10004648:	10bfffcc 	andi	r2,r2,65535
1000464c:	1080040c 	andi	r2,r2,16
10004650:	103ff826 	beq	r2,zero,10004634 <main+0x4c0>
	}

	UsbWaitTDListDone();
10004654:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
10004658:	01414184 	movi	r5,1286
1000465c:	01000084 	movi	r4,2
10004660:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004664:	0009883a 	mov	r4,zero
10004668:	00006840 	call	10000684 <IO_read>
1000466c:	10bfffcc 	andi	r2,r2,65535
10004670:	100b883a 	mov	r5,r2
10004674:	010400b4 	movhi	r4,4098
10004678:	2114f104 	addi	r4,r4,21444
1000467c:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508); // n
10004680:	01414204 	movi	r5,1288
10004684:	01000084 	movi	r4,2
10004688:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000468c:	0009883a 	mov	r4,zero
10004690:	00006840 	call	10000684 <IO_read>
10004694:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
10004698:	e0bfff8b 	ldhu	r2,-2(fp)
1000469c:	100b883a 	mov	r5,r2
100046a0:	010400b4 	movhi	r4,4098
100046a4:	2114fc04 	addi	r4,r4,21488
100046a8:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03) // retries occurred
100046ac:	e0bfff8b 	ldhu	r2,-2(fp)
100046b0:	108000e0 	cmpeqi	r2,r2,3
100046b4:	1000031e 	bne	r2,zero,100046c4 <main+0x550>
	{
		usb_ctl_val = UsbGetRetryCnt();
100046b8:	000659c0 	call	1000659c <UsbGetRetryCnt>
100046bc:	e0bfff8d 	sth	r2,-2(fp)

		goto USB_HOT_PLUG;
100046c0:	003ecc06 	br	100041f4 <main+0x80>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
100046c4:	010400b4 	movhi	r4,4098
100046c8:	21150804 	addi	r4,r4,21536
100046cc:	00171080 	call	10017108 <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
100046d0:	00057780 	call	10005778 <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100046d4:	00000306 	br	100046e4 <main+0x570>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
100046d8:	00057780 	call	10005778 <UsbGetDeviceDesc1>
		usleep(10*1000);
100046dc:	0109c404 	movi	r4,10000
100046e0:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100046e4:	010000c4 	movi	r4,3
100046e8:	00006840 	call	10000684 <IO_read>
100046ec:	10bfffcc 	andi	r2,r2,65535
100046f0:	1080040c 	andi	r2,r2,16
100046f4:	103ff826 	beq	r2,zero,100046d8 <main+0x564>
	}

	UsbWaitTDListDone();
100046f8:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100046fc:	01414184 	movi	r5,1286
10004700:	01000084 	movi	r4,2
10004704:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004708:	0009883a 	mov	r4,zero
1000470c:	00006840 	call	10000684 <IO_read>
10004710:	10bfffcc 	andi	r2,r2,65535
10004714:	100b883a 	mov	r5,r2
10004718:	010400b4 	movhi	r4,4098
1000471c:	21151704 	addi	r4,r4,21596
10004720:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004724:	01414204 	movi	r5,1288
10004728:	01000084 	movi	r4,2
1000472c:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004730:	0009883a 	mov	r4,zero
10004734:	00006840 	call	10000684 <IO_read>
10004738:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
1000473c:	e0bfff8b 	ldhu	r2,-2(fp)
10004740:	100b883a 	mov	r5,r2
10004744:	010400b4 	movhi	r4,4098
10004748:	21152204 	addi	r4,r4,21640
1000474c:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004750:	e0bfff8b 	ldhu	r2,-2(fp)
10004754:	108000e0 	cmpeqi	r2,r2,3
10004758:	1000061e 	bne	r2,zero,10004774 <main+0x600>
	{
		usb_ctl_val = UsbGetRetryCnt();
1000475c:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004760:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004764:	010400b4 	movhi	r4,4098
10004768:	21152e04 	addi	r4,r4,21688
1000476c:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004770:	003ea006 	br	100041f4 <main+0x80>
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
10004774:	010400b4 	movhi	r4,4098
10004778:	21153704 	addi	r4,r4,21724
1000477c:	00171080 	call	10017108 <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
10004780:	00058c00 	call	100058c0 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004784:	00000306 	br	10004794 <main+0x620>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
10004788:	00058c00 	call	100058c0 <UsbGetDeviceDesc2>
		usleep(10*1000);
1000478c:	0109c404 	movi	r4,10000
10004790:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004794:	010000c4 	movi	r4,3
10004798:	00006840 	call	10000684 <IO_read>
1000479c:	10bfffcc 	andi	r2,r2,65535
100047a0:	1080040c 	andi	r2,r2,16
100047a4:	103ff826 	beq	r2,zero,10004788 <main+0x614>
	}

	UsbWaitTDListDone();
100047a8:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100047ac:	01414184 	movi	r5,1286
100047b0:	01000084 	movi	r4,2
100047b4:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
100047b8:	0009883a 	mov	r4,zero
100047bc:	00006840 	call	10000684 <IO_read>
100047c0:	10bfffcc 	andi	r2,r2,65535
100047c4:	100b883a 	mov	r5,r2
100047c8:	010400b4 	movhi	r4,4098
100047cc:	21151704 	addi	r4,r4,21596
100047d0:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
100047d4:	01414204 	movi	r5,1288
100047d8:	01000084 	movi	r4,2
100047dc:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100047e0:	0009883a 	mov	r4,zero
100047e4:	00006840 	call	10000684 <IO_read>
100047e8:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
100047ec:	e0bfff8b 	ldhu	r2,-2(fp)
100047f0:	100b883a 	mov	r5,r2
100047f4:	010400b4 	movhi	r4,4098
100047f8:	21152204 	addi	r4,r4,21640
100047fc:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004800:	e0bfff8b 	ldhu	r2,-2(fp)
10004804:	108000e0 	cmpeqi	r2,r2,3
10004808:	1000061e 	bne	r2,zero,10004824 <main+0x6b0>
	{
		usb_ctl_val = UsbGetRetryCnt();
1000480c:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004810:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004814:	010400b4 	movhi	r4,4098
10004818:	21152e04 	addi	r4,r4,21688
1000481c:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004820:	003e7406 	br	100041f4 <main+0x80>
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
10004824:	010400b4 	movhi	r4,4098
10004828:	21154b04 	addi	r4,r4,21804
1000482c:	00171080 	call	10017108 <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
10004830:	0005a980 	call	10005a98 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004834:	00000306 	br	10004844 <main+0x6d0>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
10004838:	0005a980 	call	10005a98 <UsbGetConfigDesc1>
		usleep(10*1000);
1000483c:	0109c404 	movi	r4,10000
10004840:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004844:	010000c4 	movi	r4,3
10004848:	00006840 	call	10000684 <IO_read>
1000484c:	10bfffcc 	andi	r2,r2,65535
10004850:	1080040c 	andi	r2,r2,16
10004854:	103ff826 	beq	r2,zero,10004838 <main+0x6c4>
	}

	UsbWaitTDListDone();
10004858:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
1000485c:	01414184 	movi	r5,1286
10004860:	01000084 	movi	r4,2
10004864:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004868:	0009883a 	mov	r4,zero
1000486c:	00006840 	call	10000684 <IO_read>
10004870:	10bfffcc 	andi	r2,r2,65535
10004874:	100b883a 	mov	r5,r2
10004878:	010400b4 	movhi	r4,4098
1000487c:	21155d04 	addi	r4,r4,21876
10004880:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004884:	01414204 	movi	r5,1288
10004888:	01000084 	movi	r4,2
1000488c:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004890:	0009883a 	mov	r4,zero
10004894:	00006840 	call	10000684 <IO_read>
10004898:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
1000489c:	e0bfff8b 	ldhu	r2,-2(fp)
100048a0:	100b883a 	mov	r5,r2
100048a4:	010400b4 	movhi	r4,4098
100048a8:	21156804 	addi	r4,r4,21920
100048ac:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
100048b0:	e0bfff8b 	ldhu	r2,-2(fp)
100048b4:	108000e0 	cmpeqi	r2,r2,3
100048b8:	1000061e 	bne	r2,zero,100048d4 <main+0x760>
	{
		usb_ctl_val = UsbGetRetryCnt();
100048bc:	000659c0 	call	1000659c <UsbGetRetryCnt>
100048c0:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100048c4:	010400b4 	movhi	r4,4098
100048c8:	21152e04 	addi	r4,r4,21688
100048cc:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
100048d0:	003e4806 	br	100041f4 <main+0x80>
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
100048d4:	010400b4 	movhi	r4,4098
100048d8:	21157404 	addi	r4,r4,21968
100048dc:	00171080 	call	10017108 <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
100048e0:	0005c280 	call	10005c28 <UsbGetConfigDesc2>

	usleep(100*1000);
100048e4:	010000b4 	movhi	r4,2
100048e8:	2121a804 	addi	r4,r4,-31072
100048ec:	00231880 	call	10023188 <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100048f0:	00000306 	br	10004900 <main+0x78c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
100048f4:	0005c280 	call	10005c28 <UsbGetConfigDesc2>
		usleep(10*1000);
100048f8:	0109c404 	movi	r4,10000
100048fc:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004900:	010000c4 	movi	r4,3
10004904:	00006840 	call	10000684 <IO_read>
10004908:	10bfffcc 	andi	r2,r2,65535
1000490c:	1080040c 	andi	r2,r2,16
10004910:	103ff826 	beq	r2,zero,100048f4 <main+0x780>
	}

	UsbWaitTDListDone();
10004914:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004918:	01414184 	movi	r5,1286
1000491c:	01000084 	movi	r4,2
10004920:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004924:	0009883a 	mov	r4,zero
10004928:	00006840 	call	10000684 <IO_read>
1000492c:	10bfffcc 	andi	r2,r2,65535
10004930:	100b883a 	mov	r5,r2
10004934:	010400b4 	movhi	r4,4098
10004938:	21158704 	addi	r4,r4,22044
1000493c:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004940:	01414204 	movi	r5,1288
10004944:	01000084 	movi	r4,2
10004948:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000494c:	0009883a 	mov	r4,zero
10004950:	00006840 	call	10000684 <IO_read>
10004954:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
10004958:	e0bfff8b 	ldhu	r2,-2(fp)
1000495c:	100b883a 	mov	r5,r2
10004960:	010400b4 	movhi	r4,4098
10004964:	21159204 	addi	r4,r4,22088
10004968:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
1000496c:	e0bfff8b 	ldhu	r2,-2(fp)
10004970:	108000e0 	cmpeqi	r2,r2,3
10004974:	1000061e 	bne	r2,zero,10004990 <main+0x81c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004978:	000659c0 	call	1000659c <UsbGetRetryCnt>
1000497c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004980:	010400b4 	movhi	r4,4098
10004984:	21152e04 	addi	r4,r4,21688
10004988:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
1000498c:	003e1906 	br	100041f4 <main+0x80>
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
10004990:	010400b4 	movhi	r4,4098
10004994:	21159e04 	addi	r4,r4,22136
10004998:	00171080 	call	10017108 <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
1000499c:	01415b04 	movi	r5,1388
100049a0:	01000084 	movi	r4,2
100049a4:	00006100 	call	10000610 <IO_write>
	code = IO_read(HPI_DATA);
100049a8:	0009883a 	mov	r4,zero
100049ac:	00006840 	call	10000684 <IO_read>
100049b0:	e0bffb0d 	sth	r2,-20(fp)
	code = code & 0x003;
100049b4:	e0bffb0b 	ldhu	r2,-20(fp)
100049b8:	108000cc 	andi	r2,r2,3
100049bc:	e0bffb0d 	sth	r2,-20(fp)
	printf("\ncode = %x\n", code);
100049c0:	e0bffb0b 	ldhu	r2,-20(fp)
100049c4:	100b883a 	mov	r5,r2
100049c8:	010400b4 	movhi	r4,4098
100049cc:	2115b104 	addi	r4,r4,22212
100049d0:	0016fe40 	call	10016fe4 <printf>

	if (code == 0x01)
100049d4:	e0bffb0b 	ldhu	r2,-20(fp)
100049d8:	10800058 	cmpnei	r2,r2,1
100049dc:	1000041e 	bne	r2,zero,100049f0 <main+0x87c>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
100049e0:	010400b4 	movhi	r4,4098
100049e4:	2115b404 	addi	r4,r4,22224
100049e8:	00171080 	call	10017108 <puts>
100049ec:	00000306 	br	100049fc <main+0x888>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
100049f0:	010400b4 	movhi	r4,4098
100049f4:	2115c304 	addi	r4,r4,22284
100049f8:	00171080 	call	10017108 <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
100049fc:	01415d84 	movi	r5,1398
10004a00:	01000084 	movi	r4,2
10004a04:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x073F);
10004a08:	0141cfc4 	movi	r5,1855
10004a0c:	0009883a 	mov	r4,zero
10004a10:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x8105);
10004a14:	01604154 	movui	r5,33029
10004a18:	0009883a 	mov	r4,zero
10004a1c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0003);
10004a20:	014000c4 	movi	r5,3
10004a24:	0009883a 	mov	r4,zero
10004a28:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);
10004a2c:	01400204 	movi	r5,8
10004a30:	0009883a 	mov	r4,zero
10004a34:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
10004a38:	016b0294 	movui	r5,44042
10004a3c:	0009883a 	mov	r4,zero
10004a40:	00006100 	call	10000610 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
10004a44:	01415d84 	movi	r5,1398
10004a48:	01006c04 	movi	r4,432
10004a4c:	00055240 	call	10005524 <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
10004a50:	01415f04 	movi	r5,1404
10004a54:	01000084 	movi	r4,2
10004a58:	00006100 	call	10000610 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
10004a5c:	0009883a 	mov	r4,zero
10004a60:	00006840 	call	10000684 <IO_read>
10004a64:	e0bffac5 	stb	r2,-21(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
10004a68:	e0bffac3 	ldbu	r2,-21(fp)
10004a6c:	100b883a 	mov	r5,r2
10004a70:	010400b4 	movhi	r4,4098
10004a74:	2115cc04 	addi	r4,r4,22320
10004a78:	0016fe40 	call	10016fe4 <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
10004a7c:	0005e900 	call	10005e90 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004a80:	00000306 	br	10004a90 <main+0x91c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
10004a84:	0005e900 	call	10005e90 <UsbSetConfig>
		usleep(10*1000);
10004a88:	0109c404 	movi	r4,10000
10004a8c:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004a90:	010000c4 	movi	r4,3
10004a94:	00006840 	call	10000684 <IO_read>
10004a98:	10bfffcc 	andi	r2,r2,65535
10004a9c:	1080040c 	andi	r2,r2,16
10004aa0:	103ff826 	beq	r2,zero,10004a84 <main+0x910>
	}

	UsbWaitTDListDone();
10004aa4:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004aa8:	01414184 	movi	r5,1286
10004aac:	01000084 	movi	r4,2
10004ab0:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004ab4:	0009883a 	mov	r4,zero
10004ab8:	00006840 	call	10000684 <IO_read>
10004abc:	10bfffcc 	andi	r2,r2,65535
10004ac0:	100b883a 	mov	r5,r2
10004ac4:	010400b4 	movhi	r4,4098
10004ac8:	2115d604 	addi	r4,r4,22360
10004acc:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004ad0:	01414204 	movi	r5,1288
10004ad4:	01000084 	movi	r4,2
10004ad8:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004adc:	0009883a 	mov	r4,zero
10004ae0:	00006840 	call	10000684 <IO_read>
10004ae4:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
10004ae8:	e0bfff8b 	ldhu	r2,-2(fp)
10004aec:	100b883a 	mov	r5,r2
10004af0:	010400b4 	movhi	r4,4098
10004af4:	2115e104 	addi	r4,r4,22404
10004af8:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004afc:	e0bfff8b 	ldhu	r2,-2(fp)
10004b00:	108000e0 	cmpeqi	r2,r2,3
10004b04:	1000061e 	bne	r2,zero,10004b20 <main+0x9ac>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004b08:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004b0c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004b10:	010400b4 	movhi	r4,4098
10004b14:	21152e04 	addi	r4,r4,21688
10004b18:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004b1c:	003db506 	br	100041f4 <main+0x80>
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
10004b20:	010400b4 	movhi	r4,4098
10004b24:	2115ed04 	addi	r4,r4,22452
10004b28:	00171080 	call	10017108 <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
10004b2c:	0005f900 	call	10005f90 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004b30:	00000306 	br	10004b40 <main+0x9cc>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
10004b34:	0005f900 	call	10005f90 <UsbClassRequest>
		usleep(10*1000);
10004b38:	0109c404 	movi	r4,10000
10004b3c:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004b40:	010000c4 	movi	r4,3
10004b44:	00006840 	call	10000684 <IO_read>
10004b48:	10bfffcc 	andi	r2,r2,65535
10004b4c:	1080040c 	andi	r2,r2,16
10004b50:	103ff826 	beq	r2,zero,10004b34 <main+0x9c0>
	}

	UsbWaitTDListDone();
10004b54:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004b58:	01414184 	movi	r5,1286
10004b5c:	01000084 	movi	r4,2
10004b60:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004b64:	0009883a 	mov	r4,zero
10004b68:	00006840 	call	10000684 <IO_read>
10004b6c:	10bfffcc 	andi	r2,r2,65535
10004b70:	100b883a 	mov	r5,r2
10004b74:	010400b4 	movhi	r4,4098
10004b78:	2115ff04 	addi	r4,r4,22524
10004b7c:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004b80:	01414204 	movi	r5,1288
10004b84:	01000084 	movi	r4,2
10004b88:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004b8c:	0009883a 	mov	r4,zero
10004b90:	00006840 	call	10000684 <IO_read>
10004b94:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004b98:	e0bfff8b 	ldhu	r2,-2(fp)
10004b9c:	100b883a 	mov	r5,r2
10004ba0:	010400b4 	movhi	r4,4098
10004ba4:	21160a04 	addi	r4,r4,22568
10004ba8:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004bac:	e0bfff8b 	ldhu	r2,-2(fp)
10004bb0:	108000e0 	cmpeqi	r2,r2,3
10004bb4:	1000061e 	bne	r2,zero,10004bd0 <main+0xa5c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004bb8:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004bbc:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004bc0:	010400b4 	movhi	r4,4098
10004bc4:	21152e04 	addi	r4,r4,21688
10004bc8:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004bcc:	003d8906 	br	100041f4 <main+0x80>
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
10004bd0:	010400b4 	movhi	r4,4098
10004bd4:	21161604 	addi	r4,r4,22616
10004bd8:	00171080 	call	10017108 <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
10004bdc:	00060900 	call	10006090 <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004be0:	00000306 	br	10004bf0 <main+0xa7c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
10004be4:	00060900 	call	10006090 <UsbGetHidDesc>
		usleep(10*1000);
10004be8:	0109c404 	movi	r4,10000
10004bec:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004bf0:	010000c4 	movi	r4,3
10004bf4:	00006840 	call	10000684 <IO_read>
10004bf8:	10bfffcc 	andi	r2,r2,65535
10004bfc:	1080040c 	andi	r2,r2,16
10004c00:	103ff826 	beq	r2,zero,10004be4 <main+0xa70>
	}

	UsbWaitTDListDone();
10004c04:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004c08:	01414184 	movi	r5,1286
10004c0c:	01000084 	movi	r4,2
10004c10:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004c14:	0009883a 	mov	r4,zero
10004c18:	00006840 	call	10000684 <IO_read>
10004c1c:	10bfffcc 	andi	r2,r2,65535
10004c20:	100b883a 	mov	r5,r2
10004c24:	010400b4 	movhi	r4,4098
10004c28:	2115ff04 	addi	r4,r4,22524
10004c2c:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004c30:	01414204 	movi	r5,1288
10004c34:	01000084 	movi	r4,2
10004c38:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004c3c:	0009883a 	mov	r4,zero
10004c40:	00006840 	call	10000684 <IO_read>
10004c44:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004c48:	e0bfff8b 	ldhu	r2,-2(fp)
10004c4c:	100b883a 	mov	r5,r2
10004c50:	010400b4 	movhi	r4,4098
10004c54:	21160a04 	addi	r4,r4,22568
10004c58:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004c5c:	e0bfff8b 	ldhu	r2,-2(fp)
10004c60:	108000e0 	cmpeqi	r2,r2,3
10004c64:	1000061e 	bne	r2,zero,10004c80 <main+0xb0c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004c68:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004c6c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004c70:	010400b4 	movhi	r4,4098
10004c74:	21152e04 	addi	r4,r4,21688
10004c78:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004c7c:	003d5d06 	br	100041f4 <main+0x80>
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
10004c80:	010400b4 	movhi	r4,4098
10004c84:	21162804 	addi	r4,r4,22688
10004c88:	00171080 	call	10017108 <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
10004c8c:	00061d80 	call	100061d8 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004c90:	00000306 	br	10004ca0 <main+0xb2c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
10004c94:	00061d80 	call	100061d8 <UsbGetReportDesc>
		usleep(10*1000);
10004c98:	0109c404 	movi	r4,10000
10004c9c:	00231880 	call	10023188 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004ca0:	010000c4 	movi	r4,3
10004ca4:	00006840 	call	10000684 <IO_read>
10004ca8:	10bfffcc 	andi	r2,r2,65535
10004cac:	1080040c 	andi	r2,r2,16
10004cb0:	103ff826 	beq	r2,zero,10004c94 <main+0xb20>
	}

	UsbWaitTDListDone();
10004cb4:	00065180 	call	10006518 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004cb8:	01414184 	movi	r5,1286
10004cbc:	01000084 	movi	r4,2
10004cc0:	00006100 	call	10000610 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
10004cc4:	0009883a 	mov	r4,zero
10004cc8:	00006840 	call	10000684 <IO_read>
10004ccc:	10bfffcc 	andi	r2,r2,65535
10004cd0:	100b883a 	mov	r5,r2
10004cd4:	010400b4 	movhi	r4,4098
10004cd8:	21163c04 	addi	r4,r4,22768
10004cdc:	0016fe40 	call	10016fe4 <printf>

	IO_write(HPI_ADDR,0x0508);
10004ce0:	01414204 	movi	r5,1288
10004ce4:	01000084 	movi	r4,2
10004ce8:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004cec:	0009883a 	mov	r4,zero
10004cf0:	00006840 	call	10000684 <IO_read>
10004cf4:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
10004cf8:	e0bfff8b 	ldhu	r2,-2(fp)
10004cfc:	100b883a 	mov	r5,r2
10004d00:	010400b4 	movhi	r4,4098
10004d04:	21164804 	addi	r4,r4,22816
10004d08:	0016fe40 	call	10016fe4 <printf>
	while (usb_ctl_val != 0x03)
10004d0c:	e0bfff8b 	ldhu	r2,-2(fp)
10004d10:	108000e0 	cmpeqi	r2,r2,3
10004d14:	1000061e 	bne	r2,zero,10004d30 <main+0xbbc>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004d18:	000659c0 	call	1000659c <UsbGetRetryCnt>
10004d1c:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004d20:	010400b4 	movhi	r4,4098
10004d24:	21152e04 	addi	r4,r4,21688
10004d28:	00171080 	call	10017108 <puts>
		goto USB_HOT_PLUG;
10004d2c:	003d3106 	br	100041f4 <main+0x80>
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
10004d30:	010400b4 	movhi	r4,4098
10004d34:	21165404 	addi	r4,r4,22864
10004d38:	00171080 	call	10017108 <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
10004d3c:	0109c404 	movi	r4,10000
10004d40:	00231880 	call	10023188 <usleep>
	while(1)
	{
		toggle++;
10004d44:	e0bfff43 	ldbu	r2,-3(fp)
10004d48:	10800044 	addi	r2,r2,1
10004d4c:	e0bfff45 	stb	r2,-3(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
10004d50:	01414004 	movi	r5,1280
10004d54:	01000084 	movi	r4,2
10004d58:	00006100 	call	10000610 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
10004d5c:	01414704 	movi	r5,1308
10004d60:	0009883a 	mov	r4,zero
10004d64:	00006100 	call	10000610 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
10004d68:	e0bffac3 	ldbu	r2,-21(fp)
10004d6c:	108003cc 	andi	r2,r2,15
10004d70:	100b883a 	mov	r5,r2
10004d74:	0009883a 	mov	r4,zero
10004d78:	00006100 	call	10000610 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10004d7c:	0140a444 	movi	r5,657
10004d80:	0009883a 	mov	r4,zero
10004d84:	00006100 	call	10000610 <IO_write>
		if(toggle%2)
10004d88:	e0bfff43 	ldbu	r2,-3(fp)
10004d8c:	1080004c 	andi	r2,r2,1
10004d90:	10803fcc 	andi	r2,r2,255
10004d94:	10000426 	beq	r2,zero,10004da8 <main+0xc34>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
10004d98:	01400044 	movi	r5,1
10004d9c:	0009883a 	mov	r4,zero
10004da0:	00006100 	call	10000610 <IO_write>
10004da4:	00000306 	br	10004db4 <main+0xc40>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
10004da8:	01401044 	movi	r5,65
10004dac:	0009883a 	mov	r4,zero
10004db0:	00006100 	call	10000610 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
10004db4:	014004c4 	movi	r5,19
10004db8:	0009883a 	mov	r4,zero
10004dbc:	00006100 	call	10000610 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
10004dc0:	000b883a 	mov	r5,zero
10004dc4:	0009883a 	mov	r4,zero
10004dc8:	00006100 	call	10000610 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004dcc:	01414004 	movi	r5,1280
10004dd0:	01006c04 	movi	r4,432
10004dd4:	00055240 	call	10005524 <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004dd8:	00002406 	br	10004e6c <main+0xcf8>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
10004ddc:	01414004 	movi	r5,1280
10004de0:	01000084 	movi	r4,2
10004de4:	00006100 	call	10000610 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
10004de8:	01414704 	movi	r5,1308
10004dec:	0009883a 	mov	r4,zero
10004df0:	00006100 	call	10000610 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
10004df4:	e0bffac3 	ldbu	r2,-21(fp)
10004df8:	108003cc 	andi	r2,r2,15
10004dfc:	100b883a 	mov	r5,r2
10004e00:	0009883a 	mov	r4,zero
10004e04:	00006100 	call	10000610 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10004e08:	0140a444 	movi	r5,657
10004e0c:	0009883a 	mov	r4,zero
10004e10:	00006100 	call	10000610 <IO_write>
			if(toggle%2)
10004e14:	e0bfff43 	ldbu	r2,-3(fp)
10004e18:	1080004c 	andi	r2,r2,1
10004e1c:	10803fcc 	andi	r2,r2,255
10004e20:	10000426 	beq	r2,zero,10004e34 <main+0xcc0>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
10004e24:	01400044 	movi	r5,1
10004e28:	0009883a 	mov	r4,zero
10004e2c:	00006100 	call	10000610 <IO_write>
10004e30:	00000306 	br	10004e40 <main+0xccc>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
10004e34:	01401044 	movi	r5,65
10004e38:	0009883a 	mov	r4,zero
10004e3c:	00006100 	call	10000610 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
10004e40:	014004c4 	movi	r5,19
10004e44:	0009883a 	mov	r4,zero
10004e48:	00006100 	call	10000610 <IO_write>
			IO_write(HPI_DATA,0x0000);//
10004e4c:	000b883a 	mov	r5,zero
10004e50:	0009883a 	mov	r4,zero
10004e54:	00006100 	call	10000610 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004e58:	01414004 	movi	r5,1280
10004e5c:	01006c04 	movi	r4,432
10004e60:	00055240 	call	10005524 <UsbWrite>
			usleep(10*1000);
10004e64:	0109c404 	movi	r4,10000
10004e68:	00231880 	call	10023188 <usleep>
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004e6c:	010000c4 	movi	r4,3
10004e70:	00006840 	call	10000684 <IO_read>
10004e74:	10bfffcc 	andi	r2,r2,65535
10004e78:	1080040c 	andi	r2,r2,16
10004e7c:	103fd726 	beq	r2,zero,10004ddc <main+0xc68>
		}//end while

		usb_ctl_val = UsbWaitTDListDone();
10004e80:	00065180 	call	10006518 <UsbWaitTDListDone>
10004e84:	e0bfff8d 	sth	r2,-2(fp)

		// The first two keycodes are stored in 0x051E. Other keycodes are in 
		// subsequent addresses.
		keycode = UsbRead(0x051e);
10004e88:	01014784 	movi	r4,1310
10004e8c:	00055800 	call	10005580 <UsbRead>
10004e90:	10bfffcc 	andi	r2,r2,65535
10004e94:	e0bffc15 	stw	r2,-16(fp)
		printf("\nfirst two keycode values are %04x\n",keycode);
10004e98:	e17ffc17 	ldw	r5,-16(fp)
10004e9c:	010400b4 	movhi	r4,4098
10004ea0:	21166804 	addi	r4,r4,22944
10004ea4:	0016fe40 	call	10016fe4 <printf>
		// We only need the first keycode, which is at the lower byte of keycode.
		// Send the keycode to hardware via PIO.

		usleep(200);//usleep(5000);
10004ea8:	01003204 	movi	r4,200
10004eac:	00231880 	call	10023188 <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
10004eb0:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004eb4:	10bfffcc 	andi	r2,r2,65535
10004eb8:	1009883a 	mov	r4,r2
10004ebc:	00055800 	call	10005580 <UsbRead>
10004ec0:	e0bfff8d 	sth	r2,-2(fp)

		if(!(usb_ctl_val & no_device))
10004ec4:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004ec8:	e0ffff8b 	ldhu	r3,-2(fp)
10004ecc:	1884703a 	and	r2,r3,r2
10004ed0:	10bfffcc 	andi	r2,r2,65535
10004ed4:	10003f1e 	bne	r2,zero,10004fd4 <main+0xe60>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10004ed8:	e03fff05 	stb	zero,-4(fp)
10004edc:	00000f06 	br	10004f1c <main+0xda8>
			{
				usleep(5*1000);
10004ee0:	0104e204 	movi	r4,5000
10004ee4:	00231880 	call	10023188 <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
10004ee8:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004eec:	10bfffcc 	andi	r2,r2,65535
10004ef0:	1009883a 	mov	r4,r2
10004ef4:	00055800 	call	10005580 <UsbRead>
10004ef8:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device) break;
10004efc:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004f00:	e0ffff8b 	ldhu	r3,-2(fp)
10004f04:	1884703a 	and	r2,r3,r2
10004f08:	10bfffcc 	andi	r2,r2,65535
10004f0c:	1000071e 	bne	r2,zero,10004f2c <main+0xdb8>
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10004f10:	e0bfff03 	ldbu	r2,-4(fp)
10004f14:	10800044 	addi	r2,r2,1
10004f18:	e0bfff05 	stb	r2,-4(fp)
10004f1c:	e0bfff03 	ldbu	r2,-4(fp)
10004f20:	108001f0 	cmpltui	r2,r2,7
10004f24:	103fee1e 	bne	r2,zero,10004ee0 <main+0xd6c>
10004f28:	00000106 	br	10004f30 <main+0xdbc>
				if(usb_ctl_val & no_device) break;
10004f2c:	0001883a 	nop
			}
			if(!(usb_ctl_val & no_device))
10004f30:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004f34:	e0ffff8b 	ldhu	r3,-2(fp)
10004f38:	1884703a 	and	r2,r3,r2
10004f3c:	10bfffcc 	andi	r2,r2,65535
10004f40:	1000241e 	bne	r2,zero,10004fd4 <main+0xe60>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
10004f44:	010400b4 	movhi	r4,4098
10004f48:	21167104 	addi	r4,r4,22980
10004f4c:	00171080 	call	10017108 <puts>
				printf("[INFO]: please insert again!!! \n");
10004f50:	010400b4 	movhi	r4,4098
10004f54:	21167c04 	addi	r4,r4,23024
10004f58:	00171080 	call	10017108 <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
10004f5c:	00001d06 	br	10004fd4 <main+0xe60>
		{

			usb_ctl_val = UsbRead(ctl_reg);
10004f60:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004f64:	10bfffcc 	andi	r2,r2,65535
10004f68:	1009883a 	mov	r4,r2
10004f6c:	00055800 	call	10005580 <UsbRead>
10004f70:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004f74:	0104e204 	movi	r4,5000
10004f78:	00231880 	call	10023188 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004f7c:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004f80:	10bfffcc 	andi	r2,r2,65535
10004f84:	1009883a 	mov	r4,r2
10004f88:	00055800 	call	10005580 <UsbRead>
10004f8c:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004f90:	0104e204 	movi	r4,5000
10004f94:	00231880 	call	10023188 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004f98:	d0a7ce8b 	ldhu	r2,-24774(gp)
10004f9c:	10bfffcc 	andi	r2,r2,65535
10004fa0:	1009883a 	mov	r4,r2
10004fa4:	00055800 	call	10005580 <UsbRead>
10004fa8:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004fac:	0104e204 	movi	r4,5000
10004fb0:	00231880 	call	10023188 <usleep>

			if(usb_ctl_val & no_device)
10004fb4:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004fb8:	e0ffff8b 	ldhu	r3,-2(fp)
10004fbc:	1884703a 	and	r2,r3,r2
10004fc0:	10bfffcc 	andi	r2,r2,65535
10004fc4:	10000126 	beq	r2,zero,10004fcc <main+0xe58>
				goto USB_HOT_PLUG;
10004fc8:	003c8a06 	br	100041f4 <main+0x80>

			usleep(200);
10004fcc:	01003204 	movi	r4,200
10004fd0:	00231880 	call	10023188 <usleep>
		while (!(usb_ctl_val & no_device))
10004fd4:	d0a7cf0b 	ldhu	r2,-24772(gp)
10004fd8:	e0ffff8b 	ldhu	r3,-2(fp)
10004fdc:	1884703a 	and	r2,r3,r2
10004fe0:	10bfffcc 	andi	r2,r2,65535
10004fe4:	103fde26 	beq	r2,zero,10004f60 <main+0xdec>
		toggle++;
10004fe8:	003f5606 	br	10004d44 <main+0xbd0>

10004fec <drawTile>:
#include "tile_eng_driver.h"
#include <stdint.h>
#include <stdio.h>
#include <string.h>

void drawTile(int x, int y, int paletteId, int spriteId) {
10004fec:	defffa04 	addi	sp,sp,-24
10004ff0:	df000515 	stw	fp,20(sp)
10004ff4:	df000504 	addi	fp,sp,20
10004ff8:	e13ffe15 	stw	r4,-8(fp)
10004ffc:	e17ffd15 	stw	r5,-12(fp)
10005000:	e1bffc15 	stw	r6,-16(fp)
10005004:	e1fffb15 	stw	r7,-20(fp)
	uint16_t tt_addr = ((y & 0xFF)<<8) | (x & 0xFF);
10005008:	e0bffd17 	ldw	r2,-12(fp)
1000500c:	1004923a 	slli	r2,r2,8
10005010:	1007883a 	mov	r3,r2
10005014:	e0bffe17 	ldw	r2,-8(fp)
10005018:	10803fcc 	andi	r2,r2,255
1000501c:	1884b03a 	or	r2,r3,r2
10005020:	e0bfff8d 	sth	r2,-2(fp)
	uint16_t tt_data = ((paletteId & 0x7)<<8) | (spriteId & 0xFF);
10005024:	e0bffc17 	ldw	r2,-16(fp)
10005028:	1004923a 	slli	r2,r2,8
1000502c:	1081c00c 	andi	r2,r2,1792
10005030:	1007883a 	mov	r3,r2
10005034:	e0bffb17 	ldw	r2,-20(fp)
10005038:	10803fcc 	andi	r2,r2,255
1000503c:	1884b03a 	or	r2,r3,r2
10005040:	e0bfff0d 	sth	r2,-4(fp)
	tiletable_ptr[tt_addr] = tt_data;
10005044:	e0bfff8b 	ldhu	r2,-2(fp)
10005048:	100690ba 	slli	r3,r2,2
1000504c:	00a00014 	movui	r2,32768
10005050:	1885883a 	add	r2,r3,r2
10005054:	e0ffff0b 	ldhu	r3,-4(fp)
10005058:	10c00015 	stw	r3,0(r2)
}
1000505c:	0001883a 	nop
10005060:	e037883a 	mov	sp,fp
10005064:	df000017 	ldw	fp,0(sp)
10005068:	dec00104 	addi	sp,sp,4
1000506c:	f800283a 	ret

10005070 <writePaletteHelper>:

// Internal function. Can be used but no need.
void writePaletteHelper(uint8_t paletteId, uint8_t colorIndex, int rgbColor) {
10005070:	defffa04 	addi	sp,sp,-24
10005074:	dfc00515 	stw	ra,20(sp)
10005078:	df000415 	stw	fp,16(sp)
1000507c:	df000404 	addi	fp,sp,16
10005080:	2005883a 	mov	r2,r4
10005084:	2807883a 	mov	r3,r5
10005088:	e1bffc15 	stw	r6,-16(fp)
1000508c:	e0bffe05 	stb	r2,-8(fp)
10005090:	1805883a 	mov	r2,r3
10005094:	e0bffd05 	stb	r2,-12(fp)
	uint8_t paletteAddr = ((paletteId & 0x7) << 2) | (colorIndex & 0x3);
10005098:	e0bffe03 	ldbu	r2,-8(fp)
1000509c:	100490ba 	slli	r2,r2,2
100050a0:	1080070c 	andi	r2,r2,28
100050a4:	1007883a 	mov	r3,r2
100050a8:	e0bffd03 	ldbu	r2,-12(fp)
100050ac:	108000cc 	andi	r2,r2,3
100050b0:	1884b03a 	or	r2,r3,r2
100050b4:	e0bfffc5 	stb	r2,-1(fp)
	palette_ptr[paletteAddr] = rgbColor & 0x00FFFFFF;
100050b8:	e0bfffc3 	ldbu	r2,-1(fp)
100050bc:	100490ba 	slli	r2,r2,2
100050c0:	10c02004 	addi	r3,r2,128
100050c4:	e13ffc17 	ldw	r4,-16(fp)
100050c8:	00804034 	movhi	r2,256
100050cc:	10bfffc4 	addi	r2,r2,-1
100050d0:	2084703a 	and	r2,r4,r2
100050d4:	18800015 	stw	r2,0(r3)
	printf("palette_ptr[%02x]=%06x\n",paletteAddr, rgbColor & 0x00FFFFFF);
100050d8:	e13fffc3 	ldbu	r4,-1(fp)
100050dc:	e0fffc17 	ldw	r3,-16(fp)
100050e0:	00804034 	movhi	r2,256
100050e4:	10bfffc4 	addi	r2,r2,-1
100050e8:	1884703a 	and	r2,r3,r2
100050ec:	100d883a 	mov	r6,r2
100050f0:	200b883a 	mov	r5,r4
100050f4:	010400b4 	movhi	r4,4098
100050f8:	21168404 	addi	r4,r4,23056
100050fc:	0016fe40 	call	10016fe4 <printf>
}
10005100:	0001883a 	nop
10005104:	e037883a 	mov	sp,fp
10005108:	dfc00117 	ldw	ra,4(sp)
1000510c:	df000017 	ldw	fp,0(sp)
10005110:	dec00204 	addi	sp,sp,8
10005114:	f800283a 	ret

10005118 <writePalette>:

// Write an entire palette to the palette storage.
void writePalette(Palette* toWrite) {
10005118:	defffd04 	addi	sp,sp,-12
1000511c:	dfc00215 	stw	ra,8(sp)
10005120:	df000115 	stw	fp,4(sp)
10005124:	df000104 	addi	fp,sp,4
10005128:	e13fff15 	stw	r4,-4(fp)
	writePaletteHelper(toWrite->paletteId, 0, toWrite->colors[0]);
1000512c:	e0bfff17 	ldw	r2,-4(fp)
10005130:	10800017 	ldw	r2,0(r2)
10005134:	10c03fcc 	andi	r3,r2,255
10005138:	e0bfff17 	ldw	r2,-4(fp)
1000513c:	10800117 	ldw	r2,4(r2)
10005140:	100d883a 	mov	r6,r2
10005144:	000b883a 	mov	r5,zero
10005148:	1809883a 	mov	r4,r3
1000514c:	00050700 	call	10005070 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 1, toWrite->colors[1]);
10005150:	e0bfff17 	ldw	r2,-4(fp)
10005154:	10800017 	ldw	r2,0(r2)
10005158:	10c03fcc 	andi	r3,r2,255
1000515c:	e0bfff17 	ldw	r2,-4(fp)
10005160:	10800217 	ldw	r2,8(r2)
10005164:	100d883a 	mov	r6,r2
10005168:	01400044 	movi	r5,1
1000516c:	1809883a 	mov	r4,r3
10005170:	00050700 	call	10005070 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 2, toWrite->colors[2]);
10005174:	e0bfff17 	ldw	r2,-4(fp)
10005178:	10800017 	ldw	r2,0(r2)
1000517c:	10c03fcc 	andi	r3,r2,255
10005180:	e0bfff17 	ldw	r2,-4(fp)
10005184:	10800317 	ldw	r2,12(r2)
10005188:	100d883a 	mov	r6,r2
1000518c:	01400084 	movi	r5,2
10005190:	1809883a 	mov	r4,r3
10005194:	00050700 	call	10005070 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 3, toWrite->colors[3]);
10005198:	e0bfff17 	ldw	r2,-4(fp)
1000519c:	10800017 	ldw	r2,0(r2)
100051a0:	10c03fcc 	andi	r3,r2,255
100051a4:	e0bfff17 	ldw	r2,-4(fp)
100051a8:	10800417 	ldw	r2,16(r2)
100051ac:	100d883a 	mov	r6,r2
100051b0:	014000c4 	movi	r5,3
100051b4:	1809883a 	mov	r4,r3
100051b8:	00050700 	call	10005070 <writePaletteHelper>
	printf("\n");
100051bc:	01000284 	movi	r4,10
100051c0:	00170240 	call	10017024 <putchar>
}
100051c4:	0001883a 	nop
100051c8:	e037883a 	mov	sp,fp
100051cc:	dfc00117 	ldw	ra,4(sp)
100051d0:	df000017 	ldw	fp,0(sp)
100051d4:	dec00204 	addi	sp,sp,8
100051d8:	f800283a 	ret

100051dc <parseSpriteLine>:

// " " - 00, "@" - 01. "#" - 10, "*" - 11.
void parseSpriteLine(Sprite *sprite, uint8_t linenum, char data[8]) {
100051dc:	defffb04 	addi	sp,sp,-20
100051e0:	df000415 	stw	fp,16(sp)
100051e4:	df000404 	addi	fp,sp,16
100051e8:	e13ffe15 	stw	r4,-8(fp)
100051ec:	2805883a 	mov	r2,r5
100051f0:	e1bffc15 	stw	r6,-16(fp)
100051f4:	e0bffd05 	stb	r2,-12(fp)
	uint16_t result_line;
	for(uint8_t i=0; i<8; i++) {
100051f8:	e03fff45 	stb	zero,-3(fp)
100051fc:	00002306 	br	1000528c <parseSpriteLine+0xb0>
		switch(data[i]) {
10005200:	e0bfff43 	ldbu	r2,-3(fp)
10005204:	e0fffc17 	ldw	r3,-16(fp)
10005208:	1885883a 	add	r2,r3,r2
1000520c:	10800003 	ldbu	r2,0(r2)
10005210:	10803fcc 	andi	r2,r2,255
10005214:	1080201c 	xori	r2,r2,128
10005218:	10bfe004 	addi	r2,r2,-128
1000521c:	10c00aa0 	cmpeqi	r3,r2,42
10005220:	1800051e 	bne	r3,zero,10005238 <parseSpriteLine+0x5c>
10005224:	10c01020 	cmpeqi	r3,r2,64
10005228:	18000d1e 	bne	r3,zero,10005260 <parseSpriteLine+0x84>
1000522c:	108008e0 	cmpeqi	r2,r2,35
10005230:	1000061e 	bne	r2,zero,1000524c <parseSpriteLine+0x70>
10005234:	00000f06 	br	10005274 <parseSpriteLine+0x98>
			case '*': {
				result_line = (result_line<<2) | 0b11;
10005238:	e0bfff8b 	ldhu	r2,-2(fp)
1000523c:	100490ba 	slli	r2,r2,2
10005240:	108000d4 	ori	r2,r2,3
10005244:	e0bfff8d 	sth	r2,-2(fp)
				break;
10005248:	00000d06 	br	10005280 <parseSpriteLine+0xa4>
			}
			case '#': {
				result_line = (result_line<<2) | 0b10;
1000524c:	e0bfff8b 	ldhu	r2,-2(fp)
10005250:	100490ba 	slli	r2,r2,2
10005254:	10800094 	ori	r2,r2,2
10005258:	e0bfff8d 	sth	r2,-2(fp)
				break;
1000525c:	00000806 	br	10005280 <parseSpriteLine+0xa4>
			}
			case '@': {
				result_line = (result_line<<2) | 0b01;
10005260:	e0bfff8b 	ldhu	r2,-2(fp)
10005264:	100490ba 	slli	r2,r2,2
10005268:	10800054 	ori	r2,r2,1
1000526c:	e0bfff8d 	sth	r2,-2(fp)
				break;
10005270:	00000306 	br	10005280 <parseSpriteLine+0xa4>
			}
			default: {
				result_line = (result_line<<2) | 0b00;
10005274:	e0bfff8b 	ldhu	r2,-2(fp)
10005278:	100490ba 	slli	r2,r2,2
1000527c:	e0bfff8d 	sth	r2,-2(fp)
	for(uint8_t i=0; i<8; i++) {
10005280:	e0bfff43 	ldbu	r2,-3(fp)
10005284:	10800044 	addi	r2,r2,1
10005288:	e0bfff45 	stb	r2,-3(fp)
1000528c:	e0bfff43 	ldbu	r2,-3(fp)
10005290:	10800230 	cmpltui	r2,r2,8
10005294:	103fda1e 	bne	r2,zero,10005200 <parseSpriteLine+0x24>
			}
		}
	}
	sprite -> lines[linenum] = result_line;
10005298:	e0bffd03 	ldbu	r2,-12(fp)
1000529c:	e0fffe17 	ldw	r3,-8(fp)
100052a0:	1085883a 	add	r2,r2,r2
100052a4:	1885883a 	add	r2,r3,r2
100052a8:	e0ffff8b 	ldhu	r3,-2(fp)
100052ac:	10c0008d 	sth	r3,2(r2)
}
100052b0:	0001883a 	nop
100052b4:	e037883a 	mov	sp,fp
100052b8:	df000017 	ldw	fp,0(sp)
100052bc:	dec00104 	addi	sp,sp,4
100052c0:	f800283a 	ret

100052c4 <parseSprite>:

// Parses all 128 characters in a custom sprite
void parseSprite(Sprite *target, char datas[16][8]) {
100052c4:	defffb04 	addi	sp,sp,-20
100052c8:	dfc00415 	stw	ra,16(sp)
100052cc:	df000315 	stw	fp,12(sp)
100052d0:	df000304 	addi	fp,sp,12
100052d4:	e13ffe15 	stw	r4,-8(fp)
100052d8:	e17ffd15 	stw	r5,-12(fp)
	for(int i=0; i<16; i++) {
100052dc:	e03fff15 	stw	zero,-4(fp)
100052e0:	00000d06 	br	10005318 <parseSprite+0x54>
		parseSpriteLine(target,i,datas[i]);
100052e4:	e0bfff17 	ldw	r2,-4(fp)
100052e8:	11003fcc 	andi	r4,r2,255
100052ec:	e0bfff17 	ldw	r2,-4(fp)
100052f0:	100490fa 	slli	r2,r2,3
100052f4:	e0fffd17 	ldw	r3,-12(fp)
100052f8:	1885883a 	add	r2,r3,r2
100052fc:	100d883a 	mov	r6,r2
10005300:	200b883a 	mov	r5,r4
10005304:	e13ffe17 	ldw	r4,-8(fp)
10005308:	00051dc0 	call	100051dc <parseSpriteLine>
	for(int i=0; i<16; i++) {
1000530c:	e0bfff17 	ldw	r2,-4(fp)
10005310:	10800044 	addi	r2,r2,1
10005314:	e0bfff15 	stw	r2,-4(fp)
10005318:	e0bfff17 	ldw	r2,-4(fp)
1000531c:	10800410 	cmplti	r2,r2,16
10005320:	103ff01e 	bne	r2,zero,100052e4 <parseSprite+0x20>
	}
}
10005324:	0001883a 	nop
10005328:	e037883a 	mov	sp,fp
1000532c:	dfc00117 	ldw	ra,4(sp)
10005330:	df000017 	ldw	fp,0(sp)
10005334:	dec00204 	addi	sp,sp,8
10005338:	f800283a 	ret

1000533c <writeSprite>:

void writeSprite(Sprite* target) {
1000533c:	defffb04 	addi	sp,sp,-20
10005340:	dfc00415 	stw	ra,16(sp)
10005344:	df000315 	stw	fp,12(sp)
10005348:	df000304 	addi	fp,sp,12
1000534c:	e13ffd15 	stw	r4,-12(fp)
	for(int i=0; i<8; i+=1) {
10005350:	e03fff15 	stw	zero,-4(fp)
10005354:	00002506 	br	100053ec <writeSprite+0xb0>
		int prepare_dualine = (((int)(target->lines[2*i]) & 0xFFFF)<< 16) | (((int)(target->lines[2*i+1]) & 0xFFFF));
10005358:	e0bfff17 	ldw	r2,-4(fp)
1000535c:	1085883a 	add	r2,r2,r2
10005360:	e0fffd17 	ldw	r3,-12(fp)
10005364:	1085883a 	add	r2,r2,r2
10005368:	1885883a 	add	r2,r3,r2
1000536c:	1080008b 	ldhu	r2,2(r2)
10005370:	10bfffcc 	andi	r2,r2,65535
10005374:	1006943a 	slli	r3,r2,16
10005378:	e0bfff17 	ldw	r2,-4(fp)
1000537c:	1085883a 	add	r2,r2,r2
10005380:	10800044 	addi	r2,r2,1
10005384:	e13ffd17 	ldw	r4,-12(fp)
10005388:	1085883a 	add	r2,r2,r2
1000538c:	2085883a 	add	r2,r4,r2
10005390:	1080008b 	ldhu	r2,2(r2)
10005394:	10bfffcc 	andi	r2,r2,65535
10005398:	1884b03a 	or	r2,r3,r2
1000539c:	e0bffe15 	stw	r2,-8(fp)
		printf("%08x\n",prepare_dualine);
100053a0:	e17ffe17 	ldw	r5,-8(fp)
100053a4:	010400b4 	movhi	r4,4098
100053a8:	21168a04 	addi	r4,r4,23080
100053ac:	0016fe40 	call	10016fe4 <printf>
		spriteram_ptr[((target->sprite_id & 0x3F) << 3) | (i&0x7)] = prepare_dualine;
100053b0:	e0bffd17 	ldw	r2,-12(fp)
100053b4:	1080000b 	ldhu	r2,0(r2)
100053b8:	10bfffcc 	andi	r2,r2,65535
100053bc:	100490fa 	slli	r2,r2,3
100053c0:	10c07e0c 	andi	r3,r2,504
100053c4:	e0bfff17 	ldw	r2,-4(fp)
100053c8:	108001cc 	andi	r2,r2,7
100053cc:	1884b03a 	or	r2,r3,r2
100053d0:	100490ba 	slli	r2,r2,2
100053d4:	10860004 	addi	r2,r2,6144
100053d8:	e0fffe17 	ldw	r3,-8(fp)
100053dc:	10c00015 	stw	r3,0(r2)
	for(int i=0; i<8; i+=1) {
100053e0:	e0bfff17 	ldw	r2,-4(fp)
100053e4:	10800044 	addi	r2,r2,1
100053e8:	e0bfff15 	stw	r2,-4(fp)
100053ec:	e0bfff17 	ldw	r2,-4(fp)
100053f0:	10800210 	cmplti	r2,r2,8
100053f4:	103fd81e 	bne	r2,zero,10005358 <writeSprite+0x1c>
	}
}
100053f8:	0001883a 	nop
100053fc:	e037883a 	mov	sp,fp
10005400:	dfc00117 	ldw	ra,4(sp)
10005404:	df000017 	ldw	fp,0(sp)
10005408:	dec00204 	addi	sp,sp,8
1000540c:	f800283a 	ret

10005410 <writeText>:

void writeText(int beginningX, int Y, char text[], int paletteId) {
10005410:	defff804 	addi	sp,sp,-32
10005414:	dfc00715 	stw	ra,28(sp)
10005418:	df000615 	stw	fp,24(sp)
1000541c:	df000604 	addi	fp,sp,24
10005420:	e13ffd15 	stw	r4,-12(fp)
10005424:	e17ffc15 	stw	r5,-16(fp)
10005428:	e1bffb15 	stw	r6,-20(fp)
1000542c:	e1fffa15 	stw	r7,-24(fp)
	int length = strlen(text);
10005430:	e13ffb17 	ldw	r4,-20(fp)
10005434:	00178f00 	call	100178f0 <strlen>
10005438:	e0bffe15 	stw	r2,-8(fp)
	for(int i=0;i<length;i+=1) {
1000543c:	e03fff15 	stw	zero,-4(fp)
10005440:	00001006 	br	10005484 <writeText+0x74>
		drawTile(beginningX+i, Y, paletteId, text[i]&0x7F);
10005444:	e0fffd17 	ldw	r3,-12(fp)
10005448:	e0bfff17 	ldw	r2,-4(fp)
1000544c:	1889883a 	add	r4,r3,r2
10005450:	e0bfff17 	ldw	r2,-4(fp)
10005454:	e0fffb17 	ldw	r3,-20(fp)
10005458:	1885883a 	add	r2,r3,r2
1000545c:	10800003 	ldbu	r2,0(r2)
10005460:	10803fcc 	andi	r2,r2,255
10005464:	10801fcc 	andi	r2,r2,127
10005468:	100f883a 	mov	r7,r2
1000546c:	e1bffa17 	ldw	r6,-24(fp)
10005470:	e17ffc17 	ldw	r5,-16(fp)
10005474:	0004fec0 	call	10004fec <drawTile>
	for(int i=0;i<length;i+=1) {
10005478:	e0bfff17 	ldw	r2,-4(fp)
1000547c:	10800044 	addi	r2,r2,1
10005480:	e0bfff15 	stw	r2,-4(fp)
10005484:	e0ffff17 	ldw	r3,-4(fp)
10005488:	e0bffe17 	ldw	r2,-8(fp)
1000548c:	18bfed16 	blt	r3,r2,10005444 <writeText+0x34>
	}
}
10005490:	0001883a 	nop
10005494:	e037883a 	mov	sp,fp
10005498:	dfc00117 	ldw	ra,4(sp)
1000549c:	df000017 	ldw	fp,0(sp)
100054a0:	dec00204 	addi	sp,sp,8
100054a4:	f800283a 	ret

100054a8 <clearScreen>:

void clearScreen() {
100054a8:	defffc04 	addi	sp,sp,-16
100054ac:	dfc00315 	stw	ra,12(sp)
100054b0:	df000215 	stw	fp,8(sp)
100054b4:	df000204 	addi	fp,sp,8
	for(int i=0; i<30; i++){
100054b8:	e03fff15 	stw	zero,-4(fp)
100054bc:	00001006 	br	10005500 <clearScreen+0x58>
		for(int j=0; j<80; j++) {
100054c0:	e03ffe15 	stw	zero,-8(fp)
100054c4:	00000806 	br	100054e8 <clearScreen+0x40>
			drawTile(j,i,0,0);
100054c8:	000f883a 	mov	r7,zero
100054cc:	000d883a 	mov	r6,zero
100054d0:	e17fff17 	ldw	r5,-4(fp)
100054d4:	e13ffe17 	ldw	r4,-8(fp)
100054d8:	0004fec0 	call	10004fec <drawTile>
		for(int j=0; j<80; j++) {
100054dc:	e0bffe17 	ldw	r2,-8(fp)
100054e0:	10800044 	addi	r2,r2,1
100054e4:	e0bffe15 	stw	r2,-8(fp)
100054e8:	e0bffe17 	ldw	r2,-8(fp)
100054ec:	10801410 	cmplti	r2,r2,80
100054f0:	103ff51e 	bne	r2,zero,100054c8 <clearScreen+0x20>
	for(int i=0; i<30; i++){
100054f4:	e0bfff17 	ldw	r2,-4(fp)
100054f8:	10800044 	addi	r2,r2,1
100054fc:	e0bfff15 	stw	r2,-4(fp)
10005500:	e0bfff17 	ldw	r2,-4(fp)
10005504:	10800790 	cmplti	r2,r2,30
10005508:	103fed1e 	bne	r2,zero,100054c0 <clearScreen+0x18>
		}
	}
}
1000550c:	0001883a 	nop
10005510:	e037883a 	mov	sp,fp
10005514:	dfc00117 	ldw	ra,4(sp)
10005518:	df000017 	ldw	fp,0(sp)
1000551c:	dec00204 	addi	sp,sp,8
10005520:	f800283a 	ret

10005524 <UsbWrite>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data)
{
10005524:	defffc04 	addi	sp,sp,-16
10005528:	dfc00315 	stw	ra,12(sp)
1000552c:	df000215 	stw	fp,8(sp)
10005530:	df000204 	addi	fp,sp,8
10005534:	2005883a 	mov	r2,r4
10005538:	2807883a 	mov	r3,r5
1000553c:	e0bfff0d 	sth	r2,-4(fp)
10005540:	1805883a 	mov	r2,r3
10005544:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10005548:	e0bfff0b 	ldhu	r2,-4(fp)
1000554c:	100b883a 	mov	r5,r2
10005550:	01000084 	movi	r4,2
10005554:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA, Data);
10005558:	e0bffe0b 	ldhu	r2,-8(fp)
1000555c:	100b883a 	mov	r5,r2
10005560:	0009883a 	mov	r4,zero
10005564:	00006100 	call	10000610 <IO_write>
}
10005568:	0001883a 	nop
1000556c:	e037883a 	mov	sp,fp
10005570:	dfc00117 	ldw	ra,4(sp)
10005574:	df000017 	ldw	fp,0(sp)
10005578:	dec00204 	addi	sp,sp,8
1000557c:	f800283a 	ret

10005580 <UsbRead>:
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address)
{
10005580:	defffd04 	addi	sp,sp,-12
10005584:	dfc00215 	stw	ra,8(sp)
10005588:	df000115 	stw	fp,4(sp)
1000558c:	df000104 	addi	fp,sp,4
10005590:	2005883a 	mov	r2,r4
10005594:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10005598:	e0bfff0b 	ldhu	r2,-4(fp)
1000559c:	100b883a 	mov	r5,r2
100055a0:	01000084 	movi	r4,2
100055a4:	00006100 	call	10000610 <IO_write>
	return IO_read(HPI_DATA);
100055a8:	0009883a 	mov	r4,zero
100055ac:	00006840 	call	10000684 <IO_read>
}
100055b0:	e037883a 	mov	sp,fp
100055b4:	dfc00117 	ldw	ra,4(sp)
100055b8:	df000017 	ldw	fp,0(sp)
100055bc:	dec00204 	addi	sp,sp,8
100055c0:	f800283a 	ret

100055c4 <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
100055c4:	defffe04 	addi	sp,sp,-8
100055c8:	dfc00115 	stw	ra,4(sp)
100055cc:	df000015 	stw	fp,0(sp)
100055d0:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
100055d4:	017e9414 	movui	r5,64080
100055d8:	01000044 	movi	r4,1
100055dc:	00006100 	call	10000610 <IO_write>
	usleep(100000);
100055e0:	010000b4 	movhi	r4,2
100055e4:	2121a804 	addi	r4,r4,-31072
100055e8:	00231880 	call	10023188 <usleep>
	printf("[USB INIT]:reset finished!\n");
100055ec:	010400b4 	movhi	r4,4098
100055f0:	21168c04 	addi	r4,r4,23088
100055f4:	00171080 	call	10017108 <puts>

	usleep(500000);
100055f8:	01000234 	movhi	r4,8
100055fc:	21284804 	addi	r4,r4,-24288
10005600:	00231880 	call	10023188 <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
10005604:	010400b4 	movhi	r4,4098
10005608:	21169304 	addi	r4,r4,23116
1000560c:	00171080 	call	10017108 <puts>
	IO_read(HPI_MAILBOX);
10005610:	01000044 	movi	r4,1
10005614:	00006840 	call	10000684 <IO_read>
	IO_read(HPI_STATUS);
10005618:	010000c4 	movi	r4,3
1000561c:	00006840 	call	10000684 <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
10005620:	01005104 	movi	r4,324
10005624:	00055800 	call	10005580 <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10005628:	000b883a 	mov	r5,zero
1000562c:	01005104 	movi	r4,324
10005630:	00055240 	call	10005524 <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
10005634:	01005204 	movi	r4,328
10005638:	00055800 	call	10005580 <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
1000563c:	000b883a 	mov	r5,zero
10005640:	01005204 	movi	r4,328
10005644:	00055240 	call	10005524 <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10005648:	017fffd4 	movui	r5,65535
1000564c:	01302414 	movui	r4,49296
10005650:	00055240 	call	10005524 <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
10005654:	017fffd4 	movui	r5,65535
10005658:	01302c14 	movui	r4,49328
1000565c:	00055240 	call	10005524 <UsbWrite>
}
10005660:	0001883a 	nop
10005664:	e037883a 	mov	sp,fp
10005668:	dfc00117 	ldw	ra,4(sp)
1000566c:	df000017 	ldw	fp,0(sp)
10005670:	dec00204 	addi	sp,sp,8
10005674:	f800283a 	ret

10005678 <UsbSetAddress>:


void UsbSetAddress()
{
10005678:	defffe04 	addi	sp,sp,-8
1000567c:	dfc00115 	stw	ra,4(sp)
10005680:	df000015 	stw	fp,0(sp)
10005684:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005688:	01414004 	movi	r5,1280
1000568c:	01000084 	movi	r4,2
10005690:	00006100 	call	10000610 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
10005694:	01414304 	movi	r5,1292
10005698:	0009883a 	mov	r4,zero
1000569c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100056a0:	01400204 	movi	r5,8
100056a4:	0009883a 	mov	r4,zero
100056a8:	00006100 	call	10000610 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
100056ac:	01403404 	movi	r5,208
100056b0:	0009883a 	mov	r4,zero
100056b4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
100056b8:	01400044 	movi	r5,1
100056bc:	0009883a 	mov	r4,zero
100056c0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
100056c4:	014004c4 	movi	r5,19
100056c8:	0009883a 	mov	r4,zero
100056cc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
100056d0:	01414504 	movi	r5,1300
100056d4:	0009883a 	mov	r4,zero
100056d8:	00006100 	call	10000610 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
100056dc:	01414004 	movi	r5,1280
100056e0:	0009883a 	mov	r4,zero
100056e4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0002);
100056e8:	01400084 	movi	r5,2
100056ec:	0009883a 	mov	r4,zero
100056f0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
100056f4:	000b883a 	mov	r5,zero
100056f8:	0009883a 	mov	r4,zero
100056fc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005700:	000b883a 	mov	r5,zero
10005704:	0009883a 	mov	r4,zero
10005708:	00006100 	call	10000610 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
1000570c:	000b883a 	mov	r5,zero
10005710:	0009883a 	mov	r4,zero
10005714:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//
10005718:	000b883a 	mov	r5,zero
1000571c:	0009883a 	mov	r4,zero
10005720:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0090);//
10005724:	01402404 	movi	r5,144
10005728:	0009883a 	mov	r4,zero
1000572c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);
10005730:	01401044 	movi	r5,65
10005734:	0009883a 	mov	r4,zero
10005738:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000573c:	014004c4 	movi	r5,19
10005740:	0009883a 	mov	r4,zero
10005744:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005748:	000b883a 	mov	r5,zero
1000574c:	0009883a 	mov	r4,zero
10005750:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005754:	01414004 	movi	r5,1280
10005758:	01006c04 	movi	r4,432
1000575c:	00055240 	call	10005524 <UsbWrite>
}
10005760:	0001883a 	nop
10005764:	e037883a 	mov	sp,fp
10005768:	dfc00117 	ldw	ra,4(sp)
1000576c:	df000017 	ldw	fp,0(sp)
10005770:	dec00204 	addi	sp,sp,8
10005774:	f800283a 	ret

10005778 <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
10005778:	defffe04 	addi	sp,sp,-8
1000577c:	dfc00115 	stw	ra,4(sp)
10005780:	df000015 	stw	fp,0(sp)
10005784:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005788:	01414004 	movi	r5,1280
1000578c:	01000084 	movi	r4,2
10005790:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005794:	01414304 	movi	r5,1292
10005798:	0009883a 	mov	r4,zero
1000579c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100057a0:	01400204 	movi	r5,8
100057a4:	0009883a 	mov	r4,zero
100057a8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100057ac:	0140b404 	movi	r5,720
100057b0:	0009883a 	mov	r4,zero
100057b4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
100057b8:	01400044 	movi	r5,1
100057bc:	0009883a 	mov	r4,zero
100057c0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
100057c4:	014004c4 	movi	r5,19
100057c8:	0009883a 	mov	r4,zero
100057cc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
100057d0:	01414504 	movi	r5,1300
100057d4:	0009883a 	mov	r4,zero
100057d8:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100057dc:	0141a004 	movi	r5,1664
100057e0:	0009883a 	mov	r4,zero
100057e4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
100057e8:	01404004 	movi	r5,256
100057ec:	0009883a 	mov	r4,zero
100057f0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
100057f4:	000b883a 	mov	r5,zero
100057f8:	0009883a 	mov	r4,zero
100057fc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);
10005800:	01400204 	movi	r5,8
10005804:	0009883a 	mov	r4,zero
10005808:	00006100 	call	10000610 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
1000580c:	01414b04 	movi	r5,1324
10005810:	0009883a 	mov	r4,zero
10005814:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//
10005818:	01400204 	movi	r5,8
1000581c:	0009883a 	mov	r4,zero
10005820:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//
10005824:	0140a404 	movi	r5,656
10005828:	0009883a 	mov	r4,zero
1000582c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);
10005830:	01401044 	movi	r5,65
10005834:	0009883a 	mov	r4,zero
10005838:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000583c:	014004c4 	movi	r5,19
10005840:	0009883a 	mov	r4,zero
10005844:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);
10005848:	01414804 	movi	r5,1312
1000584c:	0009883a 	mov	r4,zero
10005850:	00006100 	call	10000610 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
10005854:	000b883a 	mov	r5,zero
10005858:	0009883a 	mov	r4,zero
1000585c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10005860:	000b883a 	mov	r5,zero
10005864:	0009883a 	mov	r4,zero
10005868:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
1000586c:	01408404 	movi	r5,528
10005870:	0009883a 	mov	r4,zero
10005874:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);
10005878:	01401044 	movi	r5,65
1000587c:	0009883a 	mov	r4,zero
10005880:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005884:	014004c4 	movi	r5,19
10005888:	0009883a 	mov	r4,zero
1000588c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005890:	000b883a 	mov	r5,zero
10005894:	0009883a 	mov	r4,zero
10005898:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000589c:	01414004 	movi	r5,1280
100058a0:	01006c04 	movi	r4,432
100058a4:	00055240 	call	10005524 <UsbWrite>
}
100058a8:	0001883a 	nop
100058ac:	e037883a 	mov	sp,fp
100058b0:	dfc00117 	ldw	ra,4(sp)
100058b4:	df000017 	ldw	fp,0(sp)
100058b8:	dec00204 	addi	sp,sp,8
100058bc:	f800283a 	ret

100058c0 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
100058c0:	defffe04 	addi	sp,sp,-8
100058c4:	dfc00115 	stw	ra,4(sp)
100058c8:	df000015 	stw	fp,0(sp)
100058cc:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100058d0:	01414004 	movi	r5,1280
100058d4:	01000084 	movi	r4,2
100058d8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
100058dc:	01414304 	movi	r5,1292
100058e0:	0009883a 	mov	r4,zero
100058e4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100058e8:	01400204 	movi	r5,8
100058ec:	0009883a 	mov	r4,zero
100058f0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100058f4:	0140b404 	movi	r5,720
100058f8:	0009883a 	mov	r4,zero
100058fc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005900:	01400044 	movi	r5,1
10005904:	0009883a 	mov	r4,zero
10005908:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000590c:	014004c4 	movi	r5,19
10005910:	0009883a 	mov	r4,zero
10005914:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005918:	01414504 	movi	r5,1300
1000591c:	0009883a 	mov	r4,zero
10005920:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10005924:	0141a004 	movi	r5,1664
10005928:	0009883a 	mov	r4,zero
1000592c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
10005930:	01404004 	movi	r5,256
10005934:	0009883a 	mov	r4,zero
10005938:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000593c:	000b883a 	mov	r5,zero
10005940:	0009883a 	mov	r4,zero
10005944:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
10005948:	01400484 	movi	r5,18
1000594c:	0009883a 	mov	r4,zero
10005950:	00006100 	call	10000610 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10005954:	01415104 	movi	r5,1348
10005958:	0009883a 	mov	r4,zero
1000595c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005960:	01400204 	movi	r5,8
10005964:	0009883a 	mov	r4,zero
10005968:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000596c:	0140a404 	movi	r5,656
10005970:	0009883a 	mov	r4,zero
10005974:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005978:	01401044 	movi	r5,65
1000597c:	0009883a 	mov	r4,zero
10005980:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005984:	014004c4 	movi	r5,19
10005988:	0009883a 	mov	r4,zero
1000598c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005990:	01414804 	movi	r5,1312
10005994:	0009883a 	mov	r4,zero
10005998:	00006100 	call	10000610 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
1000599c:	01415304 	movi	r5,1356
100059a0:	0009883a 	mov	r4,zero
100059a4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100059a8:	01400204 	movi	r5,8
100059ac:	0009883a 	mov	r4,zero
100059b0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100059b4:	0140a404 	movi	r5,656
100059b8:	0009883a 	mov	r4,zero
100059bc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
100059c0:	01400044 	movi	r5,1
100059c4:	0009883a 	mov	r4,zero
100059c8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100059cc:	014004c4 	movi	r5,19
100059d0:	0009883a 	mov	r4,zero
100059d4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100059d8:	01414b04 	movi	r5,1324
100059dc:	0009883a 	mov	r4,zero
100059e0:	00006100 	call	10000610 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
100059e4:	01415504 	movi	r5,1364
100059e8:	0009883a 	mov	r4,zero
100059ec:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
100059f0:	01400084 	movi	r5,2
100059f4:	0009883a 	mov	r4,zero
100059f8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100059fc:	0140a404 	movi	r5,656
10005a00:	0009883a 	mov	r4,zero
10005a04:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005a08:	01401044 	movi	r5,65
10005a0c:	0009883a 	mov	r4,zero
10005a10:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005a14:	014004c4 	movi	r5,19
10005a18:	0009883a 	mov	r4,zero
10005a1c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10005a20:	01414e04 	movi	r5,1336
10005a24:	0009883a 	mov	r4,zero
10005a28:	00006100 	call	10000610 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
10005a2c:	000b883a 	mov	r5,zero
10005a30:	0009883a 	mov	r4,zero
10005a34:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10005a38:	000b883a 	mov	r5,zero
10005a3c:	0009883a 	mov	r4,zero
10005a40:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
10005a44:	01408404 	movi	r5,528
10005a48:	0009883a 	mov	r4,zero
10005a4c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
10005a50:	01401044 	movi	r5,65
10005a54:	0009883a 	mov	r4,zero
10005a58:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005a5c:	014004c4 	movi	r5,19
10005a60:	0009883a 	mov	r4,zero
10005a64:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10005a68:	000b883a 	mov	r5,zero
10005a6c:	0009883a 	mov	r4,zero
10005a70:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005a74:	01414004 	movi	r5,1280
10005a78:	01006c04 	movi	r4,432
10005a7c:	00055240 	call	10005524 <UsbWrite>
}
10005a80:	0001883a 	nop
10005a84:	e037883a 	mov	sp,fp
10005a88:	dfc00117 	ldw	ra,4(sp)
10005a8c:	df000017 	ldw	fp,0(sp)
10005a90:	dec00204 	addi	sp,sp,8
10005a94:	f800283a 	ret

10005a98 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
10005a98:	defffe04 	addi	sp,sp,-8
10005a9c:	dfc00115 	stw	ra,4(sp)
10005aa0:	df000015 	stw	fp,0(sp)
10005aa4:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005aa8:	01414004 	movi	r5,1280
10005aac:	01000084 	movi	r4,2
10005ab0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005ab4:	01414304 	movi	r5,1292
10005ab8:	0009883a 	mov	r4,zero
10005abc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005ac0:	01400204 	movi	r5,8
10005ac4:	0009883a 	mov	r4,zero
10005ac8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10005acc:	0140b404 	movi	r5,720
10005ad0:	0009883a 	mov	r4,zero
10005ad4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005ad8:	01400044 	movi	r5,1
10005adc:	0009883a 	mov	r4,zero
10005ae0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005ae4:	014004c4 	movi	r5,19
10005ae8:	0009883a 	mov	r4,zero
10005aec:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005af0:	01414504 	movi	r5,1300
10005af4:	0009883a 	mov	r4,zero
10005af8:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10005afc:	0141a004 	movi	r5,1664
10005b00:	0009883a 	mov	r4,zero
10005b04:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10005b08:	01408004 	movi	r5,512
10005b0c:	0009883a 	mov	r4,zero
10005b10:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10005b14:	000b883a 	mov	r5,zero
10005b18:	0009883a 	mov	r4,zero
10005b1c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
10005b20:	01400244 	movi	r5,9
10005b24:	0009883a 	mov	r4,zero
10005b28:	00006100 	call	10000610 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10005b2c:	01415104 	movi	r5,1348
10005b30:	0009883a 	mov	r4,zero
10005b34:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005b38:	01400204 	movi	r5,8
10005b3c:	0009883a 	mov	r4,zero
10005b40:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005b44:	0140a404 	movi	r5,656
10005b48:	0009883a 	mov	r4,zero
10005b4c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005b50:	01401044 	movi	r5,65
10005b54:	0009883a 	mov	r4,zero
10005b58:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005b5c:	014004c4 	movi	r5,19
10005b60:	0009883a 	mov	r4,zero
10005b64:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005b68:	01414804 	movi	r5,1312
10005b6c:	0009883a 	mov	r4,zero
10005b70:	00006100 	call	10000610 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10005b74:	01415304 	movi	r5,1356
10005b78:	0009883a 	mov	r4,zero
10005b7c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
10005b80:	01400044 	movi	r5,1
10005b84:	0009883a 	mov	r4,zero
10005b88:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10005b8c:	0140a404 	movi	r5,656
10005b90:	0009883a 	mov	r4,zero
10005b94:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005b98:	01400044 	movi	r5,1
10005b9c:	0009883a 	mov	r4,zero
10005ba0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005ba4:	014004c4 	movi	r5,19
10005ba8:	0009883a 	mov	r4,zero
10005bac:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005bb0:	01414b04 	movi	r5,1324
10005bb4:	0009883a 	mov	r4,zero
10005bb8:	00006100 	call	10000610 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
10005bbc:	000b883a 	mov	r5,zero
10005bc0:	0009883a 	mov	r4,zero
10005bc4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005bc8:	000b883a 	mov	r5,zero
10005bcc:	0009883a 	mov	r4,zero
10005bd0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10005bd4:	01408404 	movi	r5,528
10005bd8:	0009883a 	mov	r4,zero
10005bdc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005be0:	01401044 	movi	r5,65
10005be4:	0009883a 	mov	r4,zero
10005be8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005bec:	014004c4 	movi	r5,19
10005bf0:	0009883a 	mov	r4,zero
10005bf4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10005bf8:	000b883a 	mov	r5,zero
10005bfc:	0009883a 	mov	r4,zero
10005c00:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005c04:	01414004 	movi	r5,1280
10005c08:	01006c04 	movi	r4,432
10005c0c:	00055240 	call	10005524 <UsbWrite>
}
10005c10:	0001883a 	nop
10005c14:	e037883a 	mov	sp,fp
10005c18:	dfc00117 	ldw	ra,4(sp)
10005c1c:	df000017 	ldw	fp,0(sp)
10005c20:	dec00204 	addi	sp,sp,8
10005c24:	f800283a 	ret

10005c28 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
10005c28:	defffe04 	addi	sp,sp,-8
10005c2c:	dfc00115 	stw	ra,4(sp)
10005c30:	df000015 	stw	fp,0(sp)
10005c34:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005c38:	01414004 	movi	r5,1280
10005c3c:	01000084 	movi	r4,2
10005c40:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005c44:	01414304 	movi	r5,1292
10005c48:	0009883a 	mov	r4,zero
10005c4c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005c50:	01400204 	movi	r5,8
10005c54:	0009883a 	mov	r4,zero
10005c58:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10005c5c:	0140b404 	movi	r5,720
10005c60:	0009883a 	mov	r4,zero
10005c64:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005c68:	01400044 	movi	r5,1
10005c6c:	0009883a 	mov	r4,zero
10005c70:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005c74:	014004c4 	movi	r5,19
10005c78:	0009883a 	mov	r4,zero
10005c7c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005c80:	01414504 	movi	r5,1300
10005c84:	0009883a 	mov	r4,zero
10005c88:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10005c8c:	0141a004 	movi	r5,1664
10005c90:	0009883a 	mov	r4,zero
10005c94:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10005c98:	01408004 	movi	r5,512
10005c9c:	0009883a 	mov	r4,zero
10005ca0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10005ca4:	000b883a 	mov	r5,zero
10005ca8:	0009883a 	mov	r4,zero
10005cac:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
10005cb0:	01403fc4 	movi	r5,255
10005cb4:	0009883a 	mov	r4,zero
10005cb8:	00006100 	call	10000610 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
10005cbc:	01415704 	movi	r5,1372
10005cc0:	0009883a 	mov	r4,zero
10005cc4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005cc8:	01400204 	movi	r5,8
10005ccc:	0009883a 	mov	r4,zero
10005cd0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005cd4:	0140a404 	movi	r5,656
10005cd8:	0009883a 	mov	r4,zero
10005cdc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005ce0:	01401044 	movi	r5,65
10005ce4:	0009883a 	mov	r4,zero
10005ce8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005cec:	014004c4 	movi	r5,19
10005cf0:	0009883a 	mov	r4,zero
10005cf4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005cf8:	01414804 	movi	r5,1312
10005cfc:	0009883a 	mov	r4,zero
10005d00:	00006100 	call	10000610 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
10005d04:	01415904 	movi	r5,1380
10005d08:	0009883a 	mov	r4,zero
10005d0c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10005d10:	01400204 	movi	r5,8
10005d14:	0009883a 	mov	r4,zero
10005d18:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10005d1c:	0140a404 	movi	r5,656
10005d20:	0009883a 	mov	r4,zero
10005d24:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005d28:	01400044 	movi	r5,1
10005d2c:	0009883a 	mov	r4,zero
10005d30:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005d34:	014004c4 	movi	r5,19
10005d38:	0009883a 	mov	r4,zero
10005d3c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005d40:	01414b04 	movi	r5,1324
10005d44:	0009883a 	mov	r4,zero
10005d48:	00006100 	call	10000610 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
10005d4c:	01415b04 	movi	r5,1388
10005d50:	0009883a 	mov	r4,zero
10005d54:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10005d58:	01400204 	movi	r5,8
10005d5c:	0009883a 	mov	r4,zero
10005d60:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10005d64:	0140a404 	movi	r5,656
10005d68:	0009883a 	mov	r4,zero
10005d6c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005d70:	01401044 	movi	r5,65
10005d74:	0009883a 	mov	r4,zero
10005d78:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005d7c:	014004c4 	movi	r5,19
10005d80:	0009883a 	mov	r4,zero
10005d84:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10005d88:	01414e04 	movi	r5,1336
10005d8c:	0009883a 	mov	r4,zero
10005d90:	00006100 	call	10000610 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
10005d94:	01415d04 	movi	r5,1396
10005d98:	0009883a 	mov	r4,zero
10005d9c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10005da0:	01400204 	movi	r5,8
10005da4:	0009883a 	mov	r4,zero
10005da8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10005dac:	0140a404 	movi	r5,656
10005db0:	0009883a 	mov	r4,zero
10005db4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005db8:	01400044 	movi	r5,1
10005dbc:	0009883a 	mov	r4,zero
10005dc0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005dc4:	014004c4 	movi	r5,19
10005dc8:	0009883a 	mov	r4,zero
10005dcc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10005dd0:	01415104 	movi	r5,1348
10005dd4:	0009883a 	mov	r4,zero
10005dd8:	00006100 	call	10000610 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
10005ddc:	01415f04 	movi	r5,1404
10005de0:	0009883a 	mov	r4,zero
10005de4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
10005de8:	01400084 	movi	r5,2
10005dec:	0009883a 	mov	r4,zero
10005df0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005df4:	0140a404 	movi	r5,656
10005df8:	0009883a 	mov	r4,zero
10005dfc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
10005e00:	01401044 	movi	r5,65
10005e04:	0009883a 	mov	r4,zero
10005e08:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005e0c:	014004c4 	movi	r5,19
10005e10:	0009883a 	mov	r4,zero
10005e14:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10005e18:	01415404 	movi	r5,1360
10005e1c:	0009883a 	mov	r4,zero
10005e20:	00006100 	call	10000610 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
10005e24:	000b883a 	mov	r5,zero
10005e28:	0009883a 	mov	r4,zero
10005e2c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10005e30:	000b883a 	mov	r5,zero
10005e34:	0009883a 	mov	r4,zero
10005e38:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
10005e3c:	01408404 	movi	r5,528
10005e40:	0009883a 	mov	r4,zero
10005e44:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
10005e48:	01401044 	movi	r5,65
10005e4c:	0009883a 	mov	r4,zero
10005e50:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005e54:	014004c4 	movi	r5,19
10005e58:	0009883a 	mov	r4,zero
10005e5c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10005e60:	000b883a 	mov	r5,zero
10005e64:	0009883a 	mov	r4,zero
10005e68:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005e6c:	01414004 	movi	r5,1280
10005e70:	01006c04 	movi	r4,432
10005e74:	00055240 	call	10005524 <UsbWrite>
}
10005e78:	0001883a 	nop
10005e7c:	e037883a 	mov	sp,fp
10005e80:	dfc00117 	ldw	ra,4(sp)
10005e84:	df000017 	ldw	fp,0(sp)
10005e88:	dec00204 	addi	sp,sp,8
10005e8c:	f800283a 	ret

10005e90 <UsbSetConfig>:

void UsbSetConfig()
{
10005e90:	defffe04 	addi	sp,sp,-8
10005e94:	dfc00115 	stw	ra,4(sp)
10005e98:	df000015 	stw	fp,0(sp)
10005e9c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005ea0:	01414004 	movi	r5,1280
10005ea4:	01000084 	movi	r4,2
10005ea8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005eac:	01414304 	movi	r5,1292
10005eb0:	0009883a 	mov	r4,zero
10005eb4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005eb8:	01400204 	movi	r5,8
10005ebc:	0009883a 	mov	r4,zero
10005ec0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10005ec4:	0140b404 	movi	r5,720
10005ec8:	0009883a 	mov	r4,zero
10005ecc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005ed0:	01400044 	movi	r5,1
10005ed4:	0009883a 	mov	r4,zero
10005ed8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005edc:	014004c4 	movi	r5,19
10005ee0:	0009883a 	mov	r4,zero
10005ee4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005ee8:	01414504 	movi	r5,1300
10005eec:	0009883a 	mov	r4,zero
10005ef0:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
10005ef4:	01424004 	movi	r5,2304
10005ef8:	0009883a 	mov	r4,zero
10005efc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
10005f00:	01400044 	movi	r5,1
10005f04:	0009883a 	mov	r4,zero
10005f08:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005f0c:	000b883a 	mov	r5,zero
10005f10:	0009883a 	mov	r4,zero
10005f14:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005f18:	000b883a 	mov	r5,zero
10005f1c:	0009883a 	mov	r4,zero
10005f20:	00006100 	call	10000610 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10005f24:	000b883a 	mov	r5,zero
10005f28:	0009883a 	mov	r4,zero
10005f2c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10005f30:	000b883a 	mov	r5,zero
10005f34:	0009883a 	mov	r4,zero
10005f38:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10005f3c:	0140a404 	movi	r5,656
10005f40:	0009883a 	mov	r4,zero
10005f44:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10005f48:	01401044 	movi	r5,65
10005f4c:	0009883a 	mov	r4,zero
10005f50:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005f54:	014004c4 	movi	r5,19
10005f58:	0009883a 	mov	r4,zero
10005f5c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005f60:	000b883a 	mov	r5,zero
10005f64:	0009883a 	mov	r4,zero
10005f68:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005f6c:	01414004 	movi	r5,1280
10005f70:	01006c04 	movi	r4,432
10005f74:	00055240 	call	10005524 <UsbWrite>

}
10005f78:	0001883a 	nop
10005f7c:	e037883a 	mov	sp,fp
10005f80:	dfc00117 	ldw	ra,4(sp)
10005f84:	df000017 	ldw	fp,0(sp)
10005f88:	dec00204 	addi	sp,sp,8
10005f8c:	f800283a 	ret

10005f90 <UsbClassRequest>:

void UsbClassRequest()
{
10005f90:	defffe04 	addi	sp,sp,-8
10005f94:	dfc00115 	stw	ra,4(sp)
10005f98:	df000015 	stw	fp,0(sp)
10005f9c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005fa0:	01414004 	movi	r5,1280
10005fa4:	01000084 	movi	r4,2
10005fa8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005fac:	01414304 	movi	r5,1292
10005fb0:	0009883a 	mov	r4,zero
10005fb4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005fb8:	01400204 	movi	r5,8
10005fbc:	0009883a 	mov	r4,zero
10005fc0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10005fc4:	0140b404 	movi	r5,720
10005fc8:	0009883a 	mov	r4,zero
10005fcc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005fd0:	01400044 	movi	r5,1
10005fd4:	0009883a 	mov	r4,zero
10005fd8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10005fdc:	014004c4 	movi	r5,19
10005fe0:	0009883a 	mov	r4,zero
10005fe4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005fe8:	01414504 	movi	r5,1300
10005fec:	0009883a 	mov	r4,zero
10005ff0:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
10005ff4:	01428844 	movi	r5,2593
10005ff8:	0009883a 	mov	r4,zero
10005ffc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
10006000:	000b883a 	mov	r5,zero
10006004:	0009883a 	mov	r4,zero
10006008:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
1000600c:	000b883a 	mov	r5,zero
10006010:	0009883a 	mov	r4,zero
10006014:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10006018:	000b883a 	mov	r5,zero
1000601c:	0009883a 	mov	r4,zero
10006020:	00006100 	call	10000610 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10006024:	000b883a 	mov	r5,zero
10006028:	0009883a 	mov	r4,zero
1000602c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
10006030:	000b883a 	mov	r5,zero
10006034:	0009883a 	mov	r4,zero
10006038:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
1000603c:	0140a404 	movi	r5,656
10006040:	0009883a 	mov	r4,zero
10006044:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10006048:	01401044 	movi	r5,65
1000604c:	0009883a 	mov	r4,zero
10006050:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10006054:	014004c4 	movi	r5,19
10006058:	0009883a 	mov	r4,zero
1000605c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);
10006060:	000b883a 	mov	r5,zero
10006064:	0009883a 	mov	r4,zero
10006068:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000606c:	01414004 	movi	r5,1280
10006070:	01006c04 	movi	r4,432
10006074:	00055240 	call	10005524 <UsbWrite>
}
10006078:	0001883a 	nop
1000607c:	e037883a 	mov	sp,fp
10006080:	dfc00117 	ldw	ra,4(sp)
10006084:	df000017 	ldw	fp,0(sp)
10006088:	dec00204 	addi	sp,sp,8
1000608c:	f800283a 	ret

10006090 <UsbGetHidDesc>:


void UsbGetHidDesc()
{
10006090:	defffe04 	addi	sp,sp,-8
10006094:	dfc00115 	stw	ra,4(sp)
10006098:	df000015 	stw	fp,0(sp)
1000609c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100060a0:	01414004 	movi	r5,1280
100060a4:	01000084 	movi	r4,2
100060a8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
100060ac:	01414304 	movi	r5,1292
100060b0:	0009883a 	mov	r4,zero
100060b4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100060b8:	01400204 	movi	r5,8
100060bc:	0009883a 	mov	r4,zero
100060c0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
100060c4:	0140b404 	movi	r5,720
100060c8:	0009883a 	mov	r4,zero
100060cc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
100060d0:	01400044 	movi	r5,1
100060d4:	0009883a 	mov	r4,zero
100060d8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
100060dc:	014004c4 	movi	r5,19
100060e0:	0009883a 	mov	r4,zero
100060e4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
100060e8:	01414504 	movi	r5,1300
100060ec:	0009883a 	mov	r4,zero
100060f0:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
100060f4:	0141a044 	movi	r5,1665
100060f8:	0009883a 	mov	r4,zero
100060fc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
10006100:	01484004 	movi	r5,8448
10006104:	0009883a 	mov	r4,zero
10006108:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000610c:	000b883a 	mov	r5,zero
10006110:	0009883a 	mov	r4,zero
10006114:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10006118:	01401ec4 	movi	r5,123
1000611c:	0009883a 	mov	r4,zero
10006120:	00006100 	call	10000610 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10006124:	01415104 	movi	r5,1348
10006128:	0009883a 	mov	r4,zero
1000612c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10006130:	01400204 	movi	r5,8
10006134:	0009883a 	mov	r4,zero
10006138:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000613c:	0140a404 	movi	r5,656
10006140:	0009883a 	mov	r4,zero
10006144:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10006148:	01401044 	movi	r5,65
1000614c:	0009883a 	mov	r4,zero
10006150:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10006154:	014004c4 	movi	r5,19
10006158:	0009883a 	mov	r4,zero
1000615c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10006160:	01414804 	movi	r5,1312
10006164:	0009883a 	mov	r4,zero
10006168:	00006100 	call	10000610 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
1000616c:	000b883a 	mov	r5,zero
10006170:	0009883a 	mov	r4,zero
10006174:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10006178:	000b883a 	mov	r5,zero
1000617c:	0009883a 	mov	r4,zero
10006180:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10006184:	01408404 	movi	r5,528
10006188:	0009883a 	mov	r4,zero
1000618c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10006190:	01401044 	movi	r5,65
10006194:	0009883a 	mov	r4,zero
10006198:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
1000619c:	014004c4 	movi	r5,19
100061a0:	0009883a 	mov	r4,zero
100061a4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100061a8:	000b883a 	mov	r5,zero
100061ac:	0009883a 	mov	r4,zero
100061b0:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100061b4:	01414004 	movi	r5,1280
100061b8:	01006c04 	movi	r4,432
100061bc:	00055240 	call	10005524 <UsbWrite>

}
100061c0:	0001883a 	nop
100061c4:	e037883a 	mov	sp,fp
100061c8:	dfc00117 	ldw	ra,4(sp)
100061cc:	df000017 	ldw	fp,0(sp)
100061d0:	dec00204 	addi	sp,sp,8
100061d4:	f800283a 	ret

100061d8 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
100061d8:	defffe04 	addi	sp,sp,-8
100061dc:	dfc00115 	stw	ra,4(sp)
100061e0:	df000015 	stw	fp,0(sp)
100061e4:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100061e8:	01414004 	movi	r5,1280
100061ec:	01000084 	movi	r4,2
100061f0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x050C);
100061f4:	01414304 	movi	r5,1292
100061f8:	0009883a 	mov	r4,zero
100061fc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10006200:	01400204 	movi	r5,8
10006204:	0009883a 	mov	r4,zero
10006208:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
1000620c:	0140b404 	movi	r5,720
10006210:	0009883a 	mov	r4,zero
10006214:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);
10006218:	01400044 	movi	r5,1
1000621c:	0009883a 	mov	r4,zero
10006220:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);
10006224:	014004c4 	movi	r5,19
10006228:	0009883a 	mov	r4,zero
1000622c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0514);
10006230:	01414504 	movi	r5,1300
10006234:	0009883a 	mov	r4,zero
10006238:	00006100 	call	10000610 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
1000623c:	0141a044 	movi	r5,1665
10006240:	0009883a 	mov	r4,zero
10006244:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
10006248:	01488004 	movi	r5,8704
1000624c:	0009883a 	mov	r4,zero
10006250:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10006254:	000b883a 	mov	r5,zero
10006258:	0009883a 	mov	r4,zero
1000625c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10006260:	01401ec4 	movi	r5,123
10006264:	0009883a 	mov	r4,zero
10006268:	00006100 	call	10000610 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
1000626c:	01416004 	movi	r5,1408
10006270:	0009883a 	mov	r4,zero
10006274:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10006278:	01400204 	movi	r5,8
1000627c:	0009883a 	mov	r4,zero
10006280:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10006284:	0140a404 	movi	r5,656
10006288:	0009883a 	mov	r4,zero
1000628c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10006290:	01401044 	movi	r5,65
10006294:	0009883a 	mov	r4,zero
10006298:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000629c:	014004c4 	movi	r5,19
100062a0:	0009883a 	mov	r4,zero
100062a4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
100062a8:	01414804 	movi	r5,1312
100062ac:	0009883a 	mov	r4,zero
100062b0:	00006100 	call	10000610 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
100062b4:	01416204 	movi	r5,1416
100062b8:	0009883a 	mov	r4,zero
100062bc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100062c0:	01400204 	movi	r5,8
100062c4:	0009883a 	mov	r4,zero
100062c8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100062cc:	0140a404 	movi	r5,656
100062d0:	0009883a 	mov	r4,zero
100062d4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100062d8:	01400044 	movi	r5,1
100062dc:	0009883a 	mov	r4,zero
100062e0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100062e4:	014004c4 	movi	r5,19
100062e8:	0009883a 	mov	r4,zero
100062ec:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100062f0:	01414b04 	movi	r5,1324
100062f4:	0009883a 	mov	r4,zero
100062f8:	00006100 	call	10000610 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
100062fc:	01416404 	movi	r5,1424
10006300:	0009883a 	mov	r4,zero
10006304:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10006308:	01400204 	movi	r5,8
1000630c:	0009883a 	mov	r4,zero
10006310:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10006314:	0140a404 	movi	r5,656
10006318:	0009883a 	mov	r4,zero
1000631c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10006320:	01401044 	movi	r5,65
10006324:	0009883a 	mov	r4,zero
10006328:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
1000632c:	014004c4 	movi	r5,19
10006330:	0009883a 	mov	r4,zero
10006334:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10006338:	01414e04 	movi	r5,1336
1000633c:	0009883a 	mov	r4,zero
10006340:	00006100 	call	10000610 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
10006344:	01416604 	movi	r5,1432
10006348:	0009883a 	mov	r4,zero
1000634c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10006350:	01400204 	movi	r5,8
10006354:	0009883a 	mov	r4,zero
10006358:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
1000635c:	0140a404 	movi	r5,656
10006360:	0009883a 	mov	r4,zero
10006364:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10006368:	01400044 	movi	r5,1
1000636c:	0009883a 	mov	r4,zero
10006370:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10006374:	014004c4 	movi	r5,19
10006378:	0009883a 	mov	r4,zero
1000637c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10006380:	01415104 	movi	r5,1348
10006384:	0009883a 	mov	r4,zero
10006388:	00006100 	call	10000610 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
1000638c:	01416804 	movi	r5,1440
10006390:	0009883a 	mov	r4,zero
10006394:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10006398:	01400204 	movi	r5,8
1000639c:	0009883a 	mov	r4,zero
100063a0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100063a4:	0140a404 	movi	r5,656
100063a8:	0009883a 	mov	r4,zero
100063ac:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
100063b0:	01401044 	movi	r5,65
100063b4:	0009883a 	mov	r4,zero
100063b8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100063bc:	014004c4 	movi	r5,19
100063c0:	0009883a 	mov	r4,zero
100063c4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
100063c8:	01415404 	movi	r5,1360
100063cc:	0009883a 	mov	r4,zero
100063d0:	00006100 	call	10000610 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
100063d4:	01416a04 	movi	r5,1448
100063d8:	0009883a 	mov	r4,zero
100063dc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100063e0:	01400204 	movi	r5,8
100063e4:	0009883a 	mov	r4,zero
100063e8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100063ec:	0140a404 	movi	r5,656
100063f0:	0009883a 	mov	r4,zero
100063f4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100063f8:	01400044 	movi	r5,1
100063fc:	0009883a 	mov	r4,zero
10006400:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10006404:	014004c4 	movi	r5,19
10006408:	0009883a 	mov	r4,zero
1000640c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
10006410:	01415704 	movi	r5,1372
10006414:	0009883a 	mov	r4,zero
10006418:	00006100 	call	10000610 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
1000641c:	01416c04 	movi	r5,1456
10006420:	0009883a 	mov	r4,zero
10006424:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10006428:	01400204 	movi	r5,8
1000642c:	0009883a 	mov	r4,zero
10006430:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
10006434:	0140a404 	movi	r5,656
10006438:	0009883a 	mov	r4,zero
1000643c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
10006440:	01401044 	movi	r5,65
10006444:	0009883a 	mov	r4,zero
10006448:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
1000644c:	014004c4 	movi	r5,19
10006450:	0009883a 	mov	r4,zero
10006454:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
10006458:	01415a04 	movi	r5,1384
1000645c:	0009883a 	mov	r4,zero
10006460:	00006100 	call	10000610 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
10006464:	01416e04 	movi	r5,1464
10006468:	0009883a 	mov	r4,zero
1000646c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
10006470:	014000c4 	movi	r5,3
10006474:	0009883a 	mov	r4,zero
10006478:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
1000647c:	0140a404 	movi	r5,656
10006480:	0009883a 	mov	r4,zero
10006484:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10006488:	01400044 	movi	r5,1
1000648c:	0009883a 	mov	r4,zero
10006490:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
10006494:	014004c4 	movi	r5,19
10006498:	0009883a 	mov	r4,zero
1000649c:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
100064a0:	01415d04 	movi	r5,1396
100064a4:	0009883a 	mov	r4,zero
100064a8:	00006100 	call	10000610 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
100064ac:	000b883a 	mov	r5,zero
100064b0:	0009883a 	mov	r4,zero
100064b4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100064b8:	000b883a 	mov	r5,zero
100064bc:	0009883a 	mov	r4,zero
100064c0:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
100064c4:	01408404 	movi	r5,528
100064c8:	0009883a 	mov	r4,zero
100064cc:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100064d0:	01401044 	movi	r5,65
100064d4:	0009883a 	mov	r4,zero
100064d8:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100064dc:	014004c4 	movi	r5,19
100064e0:	0009883a 	mov	r4,zero
100064e4:	00006100 	call	10000610 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
100064e8:	000b883a 	mov	r5,zero
100064ec:	0009883a 	mov	r4,zero
100064f0:	00006100 	call	10000610 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100064f4:	01414004 	movi	r5,1280
100064f8:	01006c04 	movi	r4,432
100064fc:	00055240 	call	10005524 <UsbWrite>

}
10006500:	0001883a 	nop
10006504:	e037883a 	mov	sp,fp
10006508:	dfc00117 	ldw	ra,4(sp)
1000650c:	df000017 	ldw	fp,0(sp)
10006510:	dec00204 	addi	sp,sp,8
10006514:	f800283a 	ret

10006518 <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
10006518:	defffd04 	addi	sp,sp,-12
1000651c:	dfc00215 	stw	ra,8(sp)
10006520:	df000115 	stw	fp,4(sp)
10006524:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
10006528:	01005104 	movi	r4,324
1000652c:	00055800 	call	10005580 <UsbRead>
10006530:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
10006534:	000b883a 	mov	r5,zero
10006538:	01005104 	movi	r4,324
1000653c:	00055240 	call	10005524 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10006540:	00000d06 	br	10006578 <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
10006544:	e0bfff8b 	ldhu	r2,-2(fp)
10006548:	10000526 	beq	r2,zero,10006560 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
1000654c:	e0bfff8b 	ldhu	r2,-2(fp)
10006550:	100b883a 	mov	r5,r2
10006554:	010400b4 	movhi	r4,4098
10006558:	21169c04 	addi	r4,r4,23152
1000655c:	0016fe40 	call	10016fe4 <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
10006560:	01005104 	movi	r4,324
10006564:	00055800 	call	10005580 <UsbRead>
10006568:	e0bfff8d 	sth	r2,-2(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
1000656c:	000b883a 	mov	r5,zero
10006570:	01005104 	movi	r4,324
10006574:	00055240 	call	10005524 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10006578:	e0bfff8b 	ldhu	r2,-2(fp)
1000657c:	10840018 	cmpnei	r2,r2,4096
10006580:	103ff01e 	bne	r2,zero,10006544 <UsbWaitTDListDone+0x2c>
	}

	return usb_ctl_val;
10006584:	e0bfff8b 	ldhu	r2,-2(fp)
}
10006588:	e037883a 	mov	sp,fp
1000658c:	dfc00117 	ldw	ra,4(sp)
10006590:	df000017 	ldw	fp,0(sp)
10006594:	dec00204 	addi	sp,sp,8
10006598:	f800283a 	ret

1000659c <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
1000659c:	defffd04 	addi	sp,sp,-12
100065a0:	dfc00215 	stw	ra,8(sp)
100065a4:	df000115 	stw	fp,4(sp)
100065a8:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
100065ac:	010000c4 	movi	r4,3
100065b0:	00006840 	call	10000684 <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
100065b4:	01005104 	movi	r4,324
100065b8:	00055800 	call	10005580 <UsbRead>
100065bc:	10bfffcc 	andi	r2,r2,65535
100065c0:	10840018 	cmpnei	r2,r2,4096
100065c4:	1000091e 	bne	r2,zero,100065ec <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
100065c8:	000b883a 	mov	r5,zero
100065cc:	01005104 	movi	r4,324
100065d0:	00055240 	call	10005524 <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100065d4:	0001883a 	nop
100065d8:	010000c4 	movi	r4,3
100065dc:	00006840 	call	10000684 <IO_read>
100065e0:	10bfffcc 	andi	r2,r2,65535
100065e4:	1080040c 	andi	r2,r2,16
100065e8:	103ffb26 	beq	r2,zero,100065d8 <UsbGetRetryCnt+0x3c>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
100065ec:	01414204 	movi	r5,1288
100065f0:	01000084 	movi	r4,2
100065f4:	00006100 	call	10000610 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100065f8:	0009883a 	mov	r4,zero
100065fc:	00006840 	call	10000684 <IO_read>
10006600:	e0bfff8d 	sth	r2,-2(fp)

	return usb_ctl_val;
10006604:	e0bfff8b 	ldhu	r2,-2(fp)
}
10006608:	e037883a 	mov	sp,fp
1000660c:	dfc00117 	ldw	ra,4(sp)
10006610:	df000017 	ldw	fp,0(sp)
10006614:	dec00204 	addi	sp,sp,8
10006618:	f800283a 	ret

1000661c <UsbPrintMem>:


void UsbPrintMem()
{
1000661c:	defffc04 	addi	sp,sp,-16
10006620:	dfc00315 	stw	ra,12(sp)
10006624:	df000215 	stw	fp,8(sp)
10006628:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
1000662c:	01414004 	movi	r5,1280
10006630:	01000084 	movi	r4,2
10006634:	00006100 	call	10000610 <IO_write>
	for (i = 0; i <= 200; i += 2)
10006638:	e03fff15 	stw	zero,-4(fp)
1000663c:	00000e06 	br	10006678 <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
10006640:	0009883a 	mov	r4,zero
10006644:	00006840 	call	10000684 <IO_read>
10006648:	10bfffcc 	andi	r2,r2,65535
1000664c:	e0bffe15 	stw	r2,-8(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
10006650:	e0bfff17 	ldw	r2,-4(fp)
10006654:	10814004 	addi	r2,r2,1280
10006658:	e1bffe17 	ldw	r6,-8(fp)
1000665c:	100b883a 	mov	r5,r2
10006660:	010400b4 	movhi	r4,4098
10006664:	2116a404 	addi	r4,r4,23184
10006668:	0016fe40 	call	10016fe4 <printf>
	for (i = 0; i <= 200; i += 2)
1000666c:	e0bfff17 	ldw	r2,-4(fp)
10006670:	10800084 	addi	r2,r2,2
10006674:	e0bfff15 	stw	r2,-4(fp)
10006678:	e0bfff17 	ldw	r2,-4(fp)
1000667c:	10803250 	cmplti	r2,r2,201
10006680:	103fef1e 	bne	r2,zero,10006640 <UsbPrintMem+0x24>
	}
}
10006684:	0001883a 	nop
10006688:	e037883a 	mov	sp,fp
1000668c:	dfc00117 	ldw	ra,4(sp)
10006690:	df000017 	ldw	fp,0(sp)
10006694:	dec00204 	addi	sp,sp,8
10006698:	f800283a 	ret

1000669c <addToSet>:
	}
};

std::set<TileGroup> workset;

void addToSet(TileCollection k) {
1000669c:	defffc04 	addi	sp,sp,-16
100066a0:	dfc00315 	stw	ra,12(sp)
100066a4:	df000215 	stw	fp,8(sp)
100066a8:	df000204 	addi	fp,sp,8
100066ac:	e13ffe0d 	sth	r4,-8(fp)
	TileGroup toInsert(k);
100066b0:	e0bfff84 	addi	r2,fp,-2
100066b4:	e17ffe17 	ldw	r5,-8(fp)
100066b8:	1009883a 	mov	r4,r2
100066bc:	0006a780 	call	10006a78 <_ZN9TileGroupC1E10__tile_col>
	workset.insert(toInsert);
100066c0:	e0bfff84 	addi	r2,fp,-2
100066c4:	100b883a 	mov	r5,r2
100066c8:	010400f4 	movhi	r4,4099
100066cc:	2129a004 	addi	r4,r4,-22912
100066d0:	0006d3c0 	call	10006d3c <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
100066d4:	1009883a 	mov	r4,r2
100066d8:	180b883a 	mov	r5,r3
}
100066dc:	0001883a 	nop
100066e0:	e037883a 	mov	sp,fp
100066e4:	dfc00117 	ldw	ra,4(sp)
100066e8:	df000017 	ldw	fp,0(sp)
100066ec:	dec00204 	addi	sp,sp,8
100066f0:	f800283a 	ret

100066f4 <addPendingPos>:

void addPendingPos(int16_t x, int16_t y) {
100066f4:	defffb04 	addi	sp,sp,-20
100066f8:	dfc00415 	stw	ra,16(sp)
100066fc:	df000315 	stw	fp,12(sp)
10006700:	df000304 	addi	fp,sp,12
10006704:	2005883a 	mov	r2,r4
10006708:	2807883a 	mov	r3,r5
1000670c:	e0bffe0d 	sth	r2,-8(fp)
10006710:	1805883a 	mov	r2,r3
10006714:	e0bffd0d 	sth	r2,-12(fp)
	TileGroup toInsert(x,y);
10006718:	e0fffe0f 	ldh	r3,-8(fp)
1000671c:	e13ffd0f 	ldh	r4,-12(fp)
10006720:	e0bfff84 	addi	r2,fp,-2
10006724:	200d883a 	mov	r6,r4
10006728:	180b883a 	mov	r5,r3
1000672c:	1009883a 	mov	r4,r2
10006730:	0006ab40 	call	10006ab4 <_ZN9TileGroupC1Ess>
	workset.insert(toInsert);
10006734:	e0bfff84 	addi	r2,fp,-2
10006738:	100b883a 	mov	r5,r2
1000673c:	010400f4 	movhi	r4,4099
10006740:	2129a004 	addi	r4,r4,-22912
10006744:	0006d3c0 	call	10006d3c <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
10006748:	1009883a 	mov	r4,r2
1000674c:	180b883a 	mov	r5,r3
}
10006750:	0001883a 	nop
10006754:	e037883a 	mov	sp,fp
10006758:	dfc00117 	ldw	ra,4(sp)
1000675c:	df000017 	ldw	fp,0(sp)
10006760:	dec00204 	addi	sp,sp,8
10006764:	f800283a 	ret

10006768 <getOne>:

TileCollection getOne() {
10006768:	defffa04 	addi	sp,sp,-24
1000676c:	dfc00515 	stw	ra,20(sp)
10006770:	df000415 	stw	fp,16(sp)
10006774:	df000404 	addi	fp,sp,16
	std::set<TileGroup>::iterator tempit = workset.begin();
10006778:	010400f4 	movhi	r4,4099
1000677c:	2129a004 	addi	r4,r4,-22912
10006780:	0006dc00 	call	10006dc0 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10006784:	e0bffd15 	stw	r2,-12(fp)
	if(tempit != workset.end()) {
10006788:	010400f4 	movhi	r4,4099
1000678c:	2129a004 	addi	r4,r4,-22912
10006790:	0006df40 	call	10006df4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10006794:	e0bffe15 	stw	r2,-8(fp)
10006798:	e0fffe04 	addi	r3,fp,-8
1000679c:	e0bffd04 	addi	r2,fp,-12
100067a0:	180b883a 	mov	r5,r3
100067a4:	1009883a 	mov	r4,r2
100067a8:	0006e280 	call	10006e28 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
100067ac:	10803fcc 	andi	r2,r2,255
100067b0:	10001126 	beq	r2,zero,100067f8 <getOne+0x90>
		TileCollection first = (*tempit).k;
100067b4:	e0bffd04 	addi	r2,fp,-12
100067b8:	1009883a 	mov	r4,r2
100067bc:	0006e600 	call	10006e60 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
100067c0:	10c00003 	ldbu	r3,0(r2)
100067c4:	e0fffc85 	stb	r3,-14(fp)
100067c8:	10800043 	ldbu	r2,1(r2)
100067cc:	e0bffcc5 	stb	r2,-13(fp)
		workset.erase(*tempit);
100067d0:	e0bffd04 	addi	r2,fp,-12
100067d4:	1009883a 	mov	r4,r2
100067d8:	0006e600 	call	10006e60 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
100067dc:	100b883a 	mov	r5,r2
100067e0:	010400f4 	movhi	r4,4099
100067e4:	2129a004 	addi	r4,r4,-22912
100067e8:	0006e980 	call	10006e98 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>
		return first;
100067ec:	e0bffc8b 	ldhu	r2,-14(fp)
100067f0:	e0bfff8d 	sth	r2,-2(fp)
100067f4:	00000606 	br	10006810 <getOne+0xa8>
	} else {
		TileCollection wrong;
		wrong.tile_x = -1;
100067f8:	00bfffc4 	movi	r2,-1
100067fc:	e0bffc05 	stb	r2,-16(fp)
		wrong.tile_y = -1;
10006800:	00bfffc4 	movi	r2,-1
10006804:	e0bffc45 	stb	r2,-15(fp)
		return wrong;
10006808:	e0bffc0b 	ldhu	r2,-16(fp)
1000680c:	e0bfff8d 	sth	r2,-2(fp)
10006810:	0007883a 	mov	r3,zero
10006814:	e0bfff83 	ldbu	r2,-2(fp)
10006818:	10803fcc 	andi	r2,r2,255
1000681c:	013fc004 	movi	r4,-256
10006820:	1906703a 	and	r3,r3,r4
10006824:	1884b03a 	or	r2,r3,r2
10006828:	1007883a 	mov	r3,r2
1000682c:	e0bfffc3 	ldbu	r2,-1(fp)
10006830:	10803fcc 	andi	r2,r2,255
10006834:	1008923a 	slli	r4,r2,8
10006838:	00bffff4 	movhi	r2,65535
1000683c:	10803fc4 	addi	r2,r2,255
10006840:	1884703a 	and	r2,r3,r2
10006844:	1104b03a 	or	r2,r2,r4
10006848:	1007883a 	mov	r3,r2
1000684c:	1805883a 	mov	r2,r3
	}
}
10006850:	e037883a 	mov	sp,fp
10006854:	dfc00117 	ldw	ra,4(sp)
10006858:	df000017 	ldw	fp,0(sp)
1000685c:	dec00204 	addi	sp,sp,8
10006860:	f800283a 	ret

10006864 <hasRemain>:

bool hasRemain() {
10006864:	defffc04 	addi	sp,sp,-16
10006868:	dfc00315 	stw	ra,12(sp)
1000686c:	df000215 	stw	fp,8(sp)
10006870:	df000204 	addi	fp,sp,8
	std::set<TileGroup>::iterator tempit = workset.begin();
10006874:	010400f4 	movhi	r4,4099
10006878:	2129a004 	addi	r4,r4,-22912
1000687c:	0006dc00 	call	10006dc0 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10006880:	e0bffe15 	stw	r2,-8(fp)
	return tempit != workset.end();
10006884:	010400f4 	movhi	r4,4099
10006888:	2129a004 	addi	r4,r4,-22912
1000688c:	0006df40 	call	10006df4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10006890:	e0bfff15 	stw	r2,-4(fp)
10006894:	e0ffff04 	addi	r3,fp,-4
10006898:	e0bffe04 	addi	r2,fp,-8
1000689c:	180b883a 	mov	r5,r3
100068a0:	1009883a 	mov	r4,r2
100068a4:	0006e280 	call	10006e28 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
100068a8:	0001883a 	nop
}
100068ac:	e037883a 	mov	sp,fp
100068b0:	dfc00117 	ldw	ra,4(sp)
100068b4:	df000017 	ldw	fp,0(sp)
100068b8:	dec00204 	addi	sp,sp,8
100068bc:	f800283a 	ret

100068c0 <clearQueue>:

void clearQueue() {
100068c0:	defffe04 	addi	sp,sp,-8
100068c4:	dfc00115 	stw	ra,4(sp)
100068c8:	df000015 	stw	fp,0(sp)
100068cc:	d839883a 	mov	fp,sp
	workset.clear();
100068d0:	010400f4 	movhi	r4,4099
100068d4:	2129a004 	addi	r4,r4,-22912
100068d8:	0006ed40 	call	10006ed4 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>
}
100068dc:	0001883a 	nop
100068e0:	e037883a 	mov	sp,fp
100068e4:	dfc00117 	ldw	ra,4(sp)
100068e8:	df000017 	ldw	fp,0(sp)
100068ec:	dec00204 	addi	sp,sp,8
100068f0:	f800283a 	ret

100068f4 <_Z41__static_initialization_and_destruction_0ii>:
100068f4:	defffc04 	addi	sp,sp,-16
100068f8:	dfc00315 	stw	ra,12(sp)
100068fc:	df000215 	stw	fp,8(sp)
10006900:	df000204 	addi	fp,sp,8
10006904:	e13fff15 	stw	r4,-4(fp)
10006908:	e17ffe15 	stw	r5,-8(fp)
1000690c:	e0bfff17 	ldw	r2,-4(fp)
10006910:	10800058 	cmpnei	r2,r2,1
10006914:	1000061e 	bne	r2,zero,10006930 <_Z41__static_initialization_and_destruction_0ii+0x3c>
10006918:	e0fffe17 	ldw	r3,-8(fp)
1000691c:	00bfffd4 	movui	r2,65535
10006920:	1880031e 	bne	r3,r2,10006930 <_Z41__static_initialization_and_destruction_0ii+0x3c>
std::set<TileGroup> workset;
10006924:	010400f4 	movhi	r4,4099
10006928:	2129a004 	addi	r4,r4,-22912
1000692c:	0006c000 	call	10006c00 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>
10006930:	e0bfff17 	ldw	r2,-4(fp)
10006934:	1000061e 	bne	r2,zero,10006950 <_Z41__static_initialization_and_destruction_0ii+0x5c>
10006938:	e0fffe17 	ldw	r3,-8(fp)
1000693c:	00bfffd4 	movui	r2,65535
10006940:	1880031e 	bne	r3,r2,10006950 <_Z41__static_initialization_and_destruction_0ii+0x5c>
10006944:	010400f4 	movhi	r4,4099
10006948:	2129a004 	addi	r4,r4,-22912
1000694c:	00088b00 	call	100088b0 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>
}
10006950:	0001883a 	nop
10006954:	e037883a 	mov	sp,fp
10006958:	dfc00117 	ldw	ra,4(sp)
1000695c:	df000017 	ldw	fp,0(sp)
10006960:	dec00204 	addi	sp,sp,8
10006964:	f800283a 	ret

10006968 <_GLOBAL__sub_I_workset>:
10006968:	defffe04 	addi	sp,sp,-8
1000696c:	dfc00115 	stw	ra,4(sp)
10006970:	df000015 	stw	fp,0(sp)
10006974:	d839883a 	mov	fp,sp
10006978:	017fffd4 	movui	r5,65535
1000697c:	01000044 	movi	r4,1
10006980:	00068f40 	call	100068f4 <_Z41__static_initialization_and_destruction_0ii>
10006984:	e037883a 	mov	sp,fp
10006988:	dfc00117 	ldw	ra,4(sp)
1000698c:	df000017 	ldw	fp,0(sp)
10006990:	dec00204 	addi	sp,sp,8
10006994:	f800283a 	ret

10006998 <_GLOBAL__sub_D_workset>:
10006998:	defffe04 	addi	sp,sp,-8
1000699c:	dfc00115 	stw	ra,4(sp)
100069a0:	df000015 	stw	fp,0(sp)
100069a4:	d839883a 	mov	fp,sp
100069a8:	017fffd4 	movui	r5,65535
100069ac:	0009883a 	mov	r4,zero
100069b0:	00068f40 	call	100068f4 <_Z41__static_initialization_and_destruction_0ii>
100069b4:	e037883a 	mov	sp,fp
100069b8:	dfc00117 	ldw	ra,4(sp)
100069bc:	df000017 	ldw	fp,0(sp)
100069c0:	dec00204 	addi	sp,sp,8
100069c4:	f800283a 	ret

100069c8 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
100069c8:	defffd04 	addi	sp,sp,-12
100069cc:	df000215 	stw	fp,8(sp)
100069d0:	df000204 	addi	fp,sp,8
100069d4:	e13fff15 	stw	r4,-4(fp)
100069d8:	e17ffe15 	stw	r5,-8(fp)
100069dc:	e0bffe17 	ldw	r2,-8(fp)
100069e0:	e037883a 	mov	sp,fp
100069e4:	df000017 	ldw	fp,0(sp)
100069e8:	dec00104 	addi	sp,sp,4
100069ec:	f800283a 	ret

100069f0 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
100069f0:	defffd04 	addi	sp,sp,-12
100069f4:	dfc00215 	stw	ra,8(sp)
100069f8:	df000115 	stw	fp,4(sp)
100069fc:	df000104 	addi	fp,sp,4
10006a00:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_color = _S_red;
10006a04:	e0bfff17 	ldw	r2,-4(fp)
10006a08:	10000015 	stw	zero,0(r2)
      _M_reset();
10006a0c:	e13fff17 	ldw	r4,-4(fp)
10006a10:	0006a2c0 	call	10006a2c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
10006a14:	0001883a 	nop
10006a18:	e037883a 	mov	sp,fp
10006a1c:	dfc00117 	ldw	ra,4(sp)
10006a20:	df000017 	ldw	fp,0(sp)
10006a24:	dec00204 	addi	sp,sp,8
10006a28:	f800283a 	ret

10006a2c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
10006a2c:	defffe04 	addi	sp,sp,-8
10006a30:	df000115 	stw	fp,4(sp)
10006a34:	df000104 	addi	fp,sp,4
10006a38:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_parent = 0;
10006a3c:	e0bfff17 	ldw	r2,-4(fp)
10006a40:	10000115 	stw	zero,4(r2)
      _M_header._M_left = &_M_header;
10006a44:	e0ffff17 	ldw	r3,-4(fp)
10006a48:	e0bfff17 	ldw	r2,-4(fp)
10006a4c:	10c00215 	stw	r3,8(r2)
      _M_header._M_right = &_M_header;
10006a50:	e0ffff17 	ldw	r3,-4(fp)
10006a54:	e0bfff17 	ldw	r2,-4(fp)
10006a58:	10c00315 	stw	r3,12(r2)
      _M_node_count = 0;
10006a5c:	e0bfff17 	ldw	r2,-4(fp)
10006a60:	10000415 	stw	zero,16(r2)
    }
10006a64:	0001883a 	nop
10006a68:	e037883a 	mov	sp,fp
10006a6c:	df000017 	ldw	fp,0(sp)
10006a70:	dec00104 	addi	sp,sp,4
10006a74:	f800283a 	ret

10006a78 <_ZN9TileGroupC1E10__tile_col>:
	TileGroup(TileCollection i) {
10006a78:	defffd04 	addi	sp,sp,-12
10006a7c:	df000215 	stw	fp,8(sp)
10006a80:	df000204 	addi	fp,sp,8
10006a84:	e13fff15 	stw	r4,-4(fp)
10006a88:	e17ffe0d 	sth	r5,-8(fp)
		k = i;
10006a8c:	e0bfff17 	ldw	r2,-4(fp)
10006a90:	e0fffe03 	ldbu	r3,-8(fp)
10006a94:	10c00005 	stb	r3,0(r2)
10006a98:	e0fffe43 	ldbu	r3,-7(fp)
10006a9c:	10c00045 	stb	r3,1(r2)
	}
10006aa0:	0001883a 	nop
10006aa4:	e037883a 	mov	sp,fp
10006aa8:	df000017 	ldw	fp,0(sp)
10006aac:	dec00104 	addi	sp,sp,4
10006ab0:	f800283a 	ret

10006ab4 <_ZN9TileGroupC1Ess>:
	TileGroup(int16_t x, int16_t y) {
10006ab4:	defffc04 	addi	sp,sp,-16
10006ab8:	df000315 	stw	fp,12(sp)
10006abc:	df000304 	addi	fp,sp,12
10006ac0:	e13fff15 	stw	r4,-4(fp)
10006ac4:	2805883a 	mov	r2,r5
10006ac8:	3007883a 	mov	r3,r6
10006acc:	e0bffe0d 	sth	r2,-8(fp)
10006ad0:	1805883a 	mov	r2,r3
10006ad4:	e0bffd0d 	sth	r2,-12(fp)
		k.tile_x = x;
10006ad8:	e0bffe0b 	ldhu	r2,-8(fp)
10006adc:	1007883a 	mov	r3,r2
10006ae0:	e0bfff17 	ldw	r2,-4(fp)
10006ae4:	10c00005 	stb	r3,0(r2)
		k.tile_y = y;
10006ae8:	e0bffd0b 	ldhu	r2,-12(fp)
10006aec:	1007883a 	mov	r3,r2
10006af0:	e0bfff17 	ldw	r2,-4(fp)
10006af4:	10c00045 	stb	r3,1(r2)
	}
10006af8:	0001883a 	nop
10006afc:	e037883a 	mov	sp,fp
10006b00:	df000017 	ldw	fp,0(sp)
10006b04:	dec00104 	addi	sp,sp,4
10006b08:	f800283a 	ret

10006b0c <_ZNK9TileGroupltERKS_>:
	bool operator<(const TileGroup& t) const {
10006b0c:	defffd04 	addi	sp,sp,-12
10006b10:	df000215 	stw	fp,8(sp)
10006b14:	df000204 	addi	fp,sp,8
10006b18:	e13fff15 	stw	r4,-4(fp)
10006b1c:	e17ffe15 	stw	r5,-8(fp)
		return (t.k.tile_x < this->k.tile_x) || (t.k.tile_y < k.tile_y);
10006b20:	e0bffe17 	ldw	r2,-8(fp)
10006b24:	10c00003 	ldbu	r3,0(r2)
10006b28:	e0bfff17 	ldw	r2,-4(fp)
10006b2c:	10800003 	ldbu	r2,0(r2)
10006b30:	18c03fcc 	andi	r3,r3,255
10006b34:	18c0201c 	xori	r3,r3,128
10006b38:	18ffe004 	addi	r3,r3,-128
10006b3c:	10803fcc 	andi	r2,r2,255
10006b40:	1080201c 	xori	r2,r2,128
10006b44:	10bfe004 	addi	r2,r2,-128
10006b48:	18800b16 	blt	r3,r2,10006b78 <_ZNK9TileGroupltERKS_+0x6c>
10006b4c:	e0bffe17 	ldw	r2,-8(fp)
10006b50:	10c00043 	ldbu	r3,1(r2)
10006b54:	e0bfff17 	ldw	r2,-4(fp)
10006b58:	10800043 	ldbu	r2,1(r2)
10006b5c:	18c03fcc 	andi	r3,r3,255
10006b60:	18c0201c 	xori	r3,r3,128
10006b64:	18ffe004 	addi	r3,r3,-128
10006b68:	10803fcc 	andi	r2,r2,255
10006b6c:	1080201c 	xori	r2,r2,128
10006b70:	10bfe004 	addi	r2,r2,-128
10006b74:	1880020e 	bge	r3,r2,10006b80 <_ZNK9TileGroupltERKS_+0x74>
10006b78:	00800044 	movi	r2,1
10006b7c:	00000106 	br	10006b84 <_ZNK9TileGroupltERKS_+0x78>
10006b80:	0005883a 	mov	r2,zero
	}
10006b84:	e037883a 	mov	sp,fp
10006b88:	df000017 	ldw	fp,0(sp)
10006b8c:	dec00104 	addi	sp,sp,4
10006b90:	f800283a 	ret

10006b94 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
10006b94:	defffd04 	addi	sp,sp,-12
10006b98:	dfc00215 	stw	ra,8(sp)
10006b9c:	df000115 	stw	fp,4(sp)
10006ba0:	df000104 	addi	fp,sp,4
10006ba4:	e13fff15 	stw	r4,-4(fp)
10006ba8:	e13fff17 	ldw	r4,-4(fp)
10006bac:	0006c880 	call	10006c88 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>
10006bb0:	0001883a 	nop
10006bb4:	e037883a 	mov	sp,fp
10006bb8:	dfc00117 	ldw	ra,4(sp)
10006bbc:	df000017 	ldw	fp,0(sp)
10006bc0:	dec00204 	addi	sp,sp,8
10006bc4:	f800283a 	ret

10006bc8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
10006bc8:	defffd04 	addi	sp,sp,-12
10006bcc:	dfc00215 	stw	ra,8(sp)
10006bd0:	df000115 	stw	fp,4(sp)
10006bd4:	df000104 	addi	fp,sp,4
10006bd8:	e13fff15 	stw	r4,-4(fp)
10006bdc:	e0bfff17 	ldw	r2,-4(fp)
10006be0:	1009883a 	mov	r4,r2
10006be4:	0006c380 	call	10006c38 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>
10006be8:	0001883a 	nop
10006bec:	e037883a 	mov	sp,fp
10006bf0:	dfc00117 	ldw	ra,4(sp)
10006bf4:	df000017 	ldw	fp,0(sp)
10006bf8:	dec00204 	addi	sp,sp,8
10006bfc:	f800283a 	ret

10006c00 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      set() : _M_t() { }
#else
      set() = default;
10006c00:	defffd04 	addi	sp,sp,-12
10006c04:	dfc00215 	stw	ra,8(sp)
10006c08:	df000115 	stw	fp,4(sp)
10006c0c:	df000104 	addi	fp,sp,4
10006c10:	e13fff15 	stw	r4,-4(fp)
10006c14:	e0bfff17 	ldw	r2,-4(fp)
10006c18:	1009883a 	mov	r4,r2
10006c1c:	0006bc80 	call	10006bc8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>
10006c20:	0001883a 	nop
10006c24:	e037883a 	mov	sp,fp
10006c28:	dfc00117 	ldw	ra,4(sp)
10006c2c:	df000017 	ldw	fp,0(sp)
10006c30:	dec00204 	addi	sp,sp,8
10006c34:	f800283a 	ret

10006c38 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>:
	  _Rb_tree_impl()
10006c38:	defffd04 	addi	sp,sp,-12
10006c3c:	dfc00215 	stw	ra,8(sp)
10006c40:	df000115 	stw	fp,4(sp)
10006c44:	df000104 	addi	fp,sp,4
10006c48:	e13fff15 	stw	r4,-4(fp)
	  : _Node_allocator()
10006c4c:	e13fff17 	ldw	r4,-4(fp)
10006c50:	0006f0c0 	call	10006f0c <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
10006c54:	e0bfff17 	ldw	r2,-4(fp)
10006c58:	1009883a 	mov	r4,r2
10006c5c:	0006f400 	call	10006f40 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>
10006c60:	e0bfff17 	ldw	r2,-4(fp)
10006c64:	10800104 	addi	r2,r2,4
10006c68:	1009883a 	mov	r4,r2
10006c6c:	00069f00 	call	100069f0 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
10006c70:	0001883a 	nop
10006c74:	e037883a 	mov	sp,fp
10006c78:	dfc00117 	ldw	ra,4(sp)
10006c7c:	df000017 	ldw	fp,0(sp)
10006c80:	dec00204 	addi	sp,sp,8
10006c84:	f800283a 	ret

10006c88 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
	allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
10006c88:	defffd04 	addi	sp,sp,-12
10006c8c:	dfc00215 	stw	ra,8(sp)
10006c90:	df000115 	stw	fp,4(sp)
10006c94:	df000104 	addi	fp,sp,4
10006c98:	e13fff15 	stw	r4,-4(fp)
10006c9c:	e13fff17 	ldw	r4,-4(fp)
10006ca0:	0006f640 	call	10006f64 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>
10006ca4:	0001883a 	nop
10006ca8:	e037883a 	mov	sp,fp
10006cac:	dfc00117 	ldw	ra,4(sp)
10006cb0:	df000017 	ldw	fp,0(sp)
10006cb4:	dec00204 	addi	sp,sp,8
10006cb8:	f800283a 	ret

10006cbc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>:
      { }

      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
10006cbc:	defff004 	addi	sp,sp,-64
10006cc0:	dfc00f15 	stw	ra,60(sp)
10006cc4:	df000e15 	stw	fp,56(sp)
10006cc8:	df000e04 	addi	fp,sp,56
10006ccc:	e13fff15 	stw	r4,-4(fp)
10006cd0:	00840074 	movhi	r2,4097
10006cd4:	10a4f504 	addi	r2,r2,-27692
10006cd8:	e0bff815 	stw	r2,-32(fp)
10006cdc:	008400b4 	movhi	r2,4098
10006ce0:	10935404 	addi	r2,r2,19792
10006ce4:	e0bff915 	stw	r2,-28(fp)
10006ce8:	e0bff204 	addi	r2,fp,-56
10006cec:	1009883a 	mov	r4,r2
10006cf0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
      { _M_erase(_M_begin()); }
10006cf4:	e13fff17 	ldw	r4,-4(fp)
10006cf8:	0006ff80 	call	10006ff8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10006cfc:	e03ff315 	stw	zero,-52(fp)
10006d00:	100b883a 	mov	r5,r2
10006d04:	e13fff17 	ldw	r4,-4(fp)
10006d08:	0006f880 	call	10006f88 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
10006d0c:	e0bfff17 	ldw	r2,-4(fp)
10006d10:	1009883a 	mov	r4,r2
10006d14:	0006b940 	call	10006b94 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>
10006d18:	0001883a 	nop
10006d1c:	e0bff204 	addi	r2,fp,-56
10006d20:	1009883a 	mov	r4,r2
10006d24:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10006d28:	e037883a 	mov	sp,fp
10006d2c:	dfc00117 	ldw	ra,4(sp)
10006d30:	df000017 	ldw	fp,0(sp)
10006d34:	dec00204 	addi	sp,sp,8
10006d38:	f800283a 	ret

10006d3c <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>:
       *  not already present in the %set.
       *
       *  Insertion requires logarithmic time.
       */
      std::pair<iterator, bool>
      insert(const value_type& __x)
10006d3c:	defff804 	addi	sp,sp,-32
10006d40:	dfc00715 	stw	ra,28(sp)
10006d44:	df000615 	stw	fp,24(sp)
10006d48:	df000604 	addi	fp,sp,24
10006d4c:	e13ffb15 	stw	r4,-20(fp)
10006d50:	e17ffa15 	stw	r5,-24(fp)
      {
	std::pair<typename _Rep_type::iterator, bool> __p =
10006d54:	e0bffb17 	ldw	r2,-20(fp)
10006d58:	e17ffa17 	ldw	r5,-24(fp)
10006d5c:	1009883a 	mov	r4,r2
10006d60:	00070440 	call	10007044 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>
10006d64:	1009883a 	mov	r4,r2
10006d68:	180b883a 	mov	r5,r3
10006d6c:	e13ffc15 	stw	r4,-16(fp)
10006d70:	e17ffd15 	stw	r5,-12(fp)
	  _M_t._M_insert_unique(__x);
	return std::pair<iterator, bool>(__p.first, __p.second);
10006d74:	e0bffc04 	addi	r2,fp,-16
10006d78:	11000104 	addi	r4,r2,4
10006d7c:	e0fffc04 	addi	r3,fp,-16
10006d80:	e0bffe04 	addi	r2,fp,-8
10006d84:	200d883a 	mov	r6,r4
10006d88:	180b883a 	mov	r5,r3
10006d8c:	1009883a 	mov	r4,r2
10006d90:	00071980 	call	10007198 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>
10006d94:	e0bffe17 	ldw	r2,-8(fp)
10006d98:	e0ffff17 	ldw	r3,-4(fp)
10006d9c:	1009883a 	mov	r4,r2
10006da0:	180b883a 	mov	r5,r3
      }
10006da4:	2005883a 	mov	r2,r4
10006da8:	2807883a 	mov	r3,r5
10006dac:	e037883a 	mov	sp,fp
10006db0:	dfc00117 	ldw	ra,4(sp)
10006db4:	df000017 	ldw	fp,0(sp)
10006db8:	dec00204 	addi	sp,sp,8
10006dbc:	f800283a 	ret

10006dc0 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
10006dc0:	defffd04 	addi	sp,sp,-12
10006dc4:	dfc00215 	stw	ra,8(sp)
10006dc8:	df000115 	stw	fp,4(sp)
10006dcc:	df000104 	addi	fp,sp,4
10006dd0:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.begin(); }
10006dd4:	e0bfff17 	ldw	r2,-4(fp)
10006dd8:	1009883a 	mov	r4,r2
10006ddc:	00072000 	call	10007200 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
10006de0:	e037883a 	mov	sp,fp
10006de4:	dfc00117 	ldw	ra,4(sp)
10006de8:	df000017 	ldw	fp,0(sp)
10006dec:	dec00204 	addi	sp,sp,8
10006df0:	f800283a 	ret

10006df4 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
10006df4:	defffd04 	addi	sp,sp,-12
10006df8:	dfc00215 	stw	ra,8(sp)
10006dfc:	df000115 	stw	fp,4(sp)
10006e00:	df000104 	addi	fp,sp,4
10006e04:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.end(); }
10006e08:	e0bfff17 	ldw	r2,-4(fp)
10006e0c:	1009883a 	mov	r4,r2
10006e10:	00072440 	call	10007244 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
10006e14:	e037883a 	mov	sp,fp
10006e18:	dfc00117 	ldw	ra,4(sp)
10006e1c:	df000017 	ldw	fp,0(sp)
10006e20:	dec00204 	addi	sp,sp,8
10006e24:	f800283a 	ret

10006e28 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>:
      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
10006e28:	defffd04 	addi	sp,sp,-12
10006e2c:	df000215 	stw	fp,8(sp)
10006e30:	df000204 	addi	fp,sp,8
10006e34:	e13fff15 	stw	r4,-4(fp)
10006e38:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node != __x._M_node; }
10006e3c:	e0bfff17 	ldw	r2,-4(fp)
10006e40:	10c00017 	ldw	r3,0(r2)
10006e44:	e0bffe17 	ldw	r2,-8(fp)
10006e48:	10800017 	ldw	r2,0(r2)
10006e4c:	1884c03a 	cmpne	r2,r3,r2
10006e50:	e037883a 	mov	sp,fp
10006e54:	df000017 	ldw	fp,0(sp)
10006e58:	dec00104 	addi	sp,sp,4
10006e5c:	f800283a 	ret

10006e60 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
10006e60:	defffd04 	addi	sp,sp,-12
10006e64:	dfc00215 	stw	ra,8(sp)
10006e68:	df000115 	stw	fp,4(sp)
10006e6c:	df000104 	addi	fp,sp,4
10006e70:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
10006e74:	e0bfff17 	ldw	r2,-4(fp)
10006e78:	10800017 	ldw	r2,0(r2)
10006e7c:	1009883a 	mov	r4,r2
10006e80:	00072880 	call	10007288 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10006e84:	e037883a 	mov	sp,fp
10006e88:	dfc00117 	ldw	ra,4(sp)
10006e8c:	df000017 	ldw	fp,0(sp)
10006e90:	dec00204 	addi	sp,sp,8
10006e94:	f800283a 	ret

10006e98 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
10006e98:	defffc04 	addi	sp,sp,-16
10006e9c:	dfc00315 	stw	ra,12(sp)
10006ea0:	df000215 	stw	fp,8(sp)
10006ea4:	df000204 	addi	fp,sp,8
10006ea8:	e13fff15 	stw	r4,-4(fp)
10006eac:	e17ffe15 	stw	r5,-8(fp)
      { return _M_t.erase(__x); }
10006eb0:	e0bfff17 	ldw	r2,-4(fp)
10006eb4:	e17ffe17 	ldw	r5,-8(fp)
10006eb8:	1009883a 	mov	r4,r2
10006ebc:	00072c00 	call	100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>
10006ec0:	e037883a 	mov	sp,fp
10006ec4:	dfc00117 	ldw	ra,4(sp)
10006ec8:	df000017 	ldw	fp,0(sp)
10006ecc:	dec00204 	addi	sp,sp,8
10006ed0:	f800283a 	ret

10006ed4 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>:
       *  the elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
10006ed4:	defffd04 	addi	sp,sp,-12
10006ed8:	dfc00215 	stw	ra,8(sp)
10006edc:	df000115 	stw	fp,4(sp)
10006ee0:	df000104 	addi	fp,sp,4
10006ee4:	e13fff15 	stw	r4,-4(fp)
      { _M_t.clear(); }
10006ee8:	e0bfff17 	ldw	r2,-4(fp)
10006eec:	1009883a 	mov	r4,r2
10006ef0:	00073640 	call	10007364 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
10006ef4:	0001883a 	nop
10006ef8:	e037883a 	mov	sp,fp
10006efc:	dfc00117 	ldw	ra,4(sp)
10006f00:	df000017 	ldw	fp,0(sp)
10006f04:	dec00204 	addi	sp,sp,8
10006f08:	f800283a 	ret

10006f0c <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      allocator() throw() { }
10006f0c:	defffd04 	addi	sp,sp,-12
10006f10:	dfc00215 	stw	ra,8(sp)
10006f14:	df000115 	stw	fp,4(sp)
10006f18:	df000104 	addi	fp,sp,4
10006f1c:	e13fff15 	stw	r4,-4(fp)
10006f20:	e13fff17 	ldw	r4,-4(fp)
10006f24:	00073e80 	call	100073e8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
10006f28:	0001883a 	nop
10006f2c:	e037883a 	mov	sp,fp
10006f30:	dfc00117 	ldw	ra,4(sp)
10006f34:	df000017 	ldw	fp,0(sp)
10006f38:	dec00204 	addi	sp,sp,8
10006f3c:	f800283a 	ret

10006f40 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>:
      _Rb_tree_key_compare()
10006f40:	defffe04 	addi	sp,sp,-8
10006f44:	df000115 	stw	fp,4(sp)
10006f48:	df000104 	addi	fp,sp,4
10006f4c:	e13fff15 	stw	r4,-4(fp)
      { }
10006f50:	0001883a 	nop
10006f54:	e037883a 	mov	sp,fp
10006f58:	df000017 	ldw	fp,0(sp)
10006f5c:	dec00104 	addi	sp,sp,4
10006f60:	f800283a 	ret

10006f64 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }

      template<typename _Tp1>
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
10006f64:	defffe04 	addi	sp,sp,-8
10006f68:	df000115 	stw	fp,4(sp)
10006f6c:	df000104 	addi	fp,sp,4
10006f70:	e13fff15 	stw	r4,-4(fp)
10006f74:	0001883a 	nop
10006f78:	e037883a 	mov	sp,fp
10006f7c:	df000017 	ldw	fp,0(sp)
10006f80:	dec00104 	addi	sp,sp,4
10006f84:	f800283a 	ret

10006f88 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006f88:	defffb04 	addi	sp,sp,-20
10006f8c:	dfc00415 	stw	ra,16(sp)
10006f90:	df000315 	stw	fp,12(sp)
10006f94:	df000304 	addi	fp,sp,12
10006f98:	e13ffe15 	stw	r4,-8(fp)
10006f9c:	e17ffd15 	stw	r5,-12(fp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
10006fa0:	e0bffd17 	ldw	r2,-12(fp)
10006fa4:	10000e26 	beq	r2,zero,10006fe0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x58>
	{
	  _M_erase(_S_right(__x));
10006fa8:	e13ffd17 	ldw	r4,-12(fp)
10006fac:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10006fb0:	100b883a 	mov	r5,r2
10006fb4:	e13ffe17 	ldw	r4,-8(fp)
10006fb8:	0006f880 	call	10006f88 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	  _Link_type __y = _S_left(__x);
10006fbc:	e13ffd17 	ldw	r4,-12(fp)
10006fc0:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10006fc4:	e0bfff15 	stw	r2,-4(fp)
	  _M_drop_node(__x);
10006fc8:	e17ffd17 	ldw	r5,-12(fp)
10006fcc:	e13ffe17 	ldw	r4,-8(fp)
10006fd0:	000745c0 	call	1000745c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
	  __x = __y;
10006fd4:	e0bfff17 	ldw	r2,-4(fp)
10006fd8:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
10006fdc:	003ff006 	br	10006fa0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x18>
	}
    }
10006fe0:	0001883a 	nop
10006fe4:	e037883a 	mov	sp,fp
10006fe8:	dfc00117 	ldw	ra,4(sp)
10006fec:	df000017 	ldw	fp,0(sp)
10006ff0:	dec00204 	addi	sp,sp,8
10006ff4:	f800283a 	ret

10006ff8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
10006ff8:	defffe04 	addi	sp,sp,-8
10006ffc:	df000115 	stw	fp,4(sp)
10007000:	df000104 	addi	fp,sp,4
10007004:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
10007008:	e0bfff17 	ldw	r2,-4(fp)
1000700c:	10800217 	ldw	r2,8(r2)
10007010:	e037883a 	mov	sp,fp
10007014:	df000017 	ldw	fp,0(sp)
10007018:	dec00104 	addi	sp,sp,4
1000701c:	f800283a 	ret

10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10007020:	defffe04 	addi	sp,sp,-8
10007024:	df000115 	stw	fp,4(sp)
10007028:	df000104 	addi	fp,sp,4
1000702c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10007030:	e0bfff17 	ldw	r2,-4(fp)
10007034:	e037883a 	mov	sp,fp
10007038:	df000017 	ldw	fp,0(sp)
1000703c:	dec00104 	addi	sp,sp,4
10007040:	f800283a 	ret

10007044 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>:
#if __cplusplus >= 201103L
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10007044:	deffed04 	addi	sp,sp,-76
10007048:	dfc01215 	stw	ra,72(sp)
1000704c:	df001115 	stw	fp,68(sp)
10007050:	dc401015 	stw	r17,64(sp)
10007054:	dc000f15 	stw	r16,60(sp)
10007058:	df001104 	addi	fp,sp,68
1000705c:	e13ff115 	stw	r4,-60(fp)
10007060:	e17ff015 	stw	r5,-64(fp)
    _M_insert_unique(const _Val& __v)
#endif
    {
      typedef pair<iterator, bool> _Res;
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
10007064:	e0bff5c4 	addi	r2,fp,-41
10007068:	e17ff017 	ldw	r5,-64(fp)
1000706c:	1009883a 	mov	r4,r2
10007070:	00077540 	call	10007754 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
      pair<_Base_ptr, _Base_ptr> __res
10007074:	100b883a 	mov	r5,r2
10007078:	e13ff117 	ldw	r4,-60(fp)
1000707c:	00075a00 	call	100075a0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>
10007080:	1009883a 	mov	r4,r2
10007084:	180b883a 	mov	r5,r3
10007088:	e13ff315 	stw	r4,-52(fp)
1000708c:	e17ff415 	stw	r5,-48(fp)

      if (__res.second)
10007090:	e0bff417 	ldw	r2,-48(fp)
10007094:	10001d26 	beq	r2,zero,1000710c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0xc8>
	{
	  _Alloc_node __an(*this);
10007098:	e0bff204 	addi	r2,fp,-56
1000709c:	e17ff117 	ldw	r5,-60(fp)
100070a0:	1009883a 	mov	r4,r2
100070a4:	000777c0 	call	1000777c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>
	  return _Res(_M_insert_(__res.first, __res.second,
100070a8:	e43ff317 	ldw	r16,-52(fp)
100070ac:	e47ff417 	ldw	r17,-48(fp)
100070b0:	e13ff017 	ldw	r4,-64(fp)
100070b4:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
100070b8:	1007883a 	mov	r3,r2
100070bc:	e0bff204 	addi	r2,fp,-56
100070c0:	d8800015 	stw	r2,0(sp)
100070c4:	180f883a 	mov	r7,r3
100070c8:	880d883a 	mov	r6,r17
100070cc:	800b883a 	mov	r5,r16
100070d0:	e13ff117 	ldw	r4,-60(fp)
100070d4:	00077b00 	call	100077b0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>
100070d8:	e0bff815 	stw	r2,-32(fp)
				 _GLIBCXX_FORWARD(_Arg, __v), __an),
		      true);
100070dc:	00800044 	movi	r2,1
100070e0:	e0bff9c5 	stb	r2,-25(fp)
100070e4:	e13ff9c4 	addi	r4,fp,-25
100070e8:	e0fff804 	addi	r3,fp,-32
100070ec:	e0bff604 	addi	r2,fp,-40
100070f0:	200d883a 	mov	r6,r4
100070f4:	180b883a 	mov	r5,r3
100070f8:	1009883a 	mov	r4,r2
100070fc:	00078dc0 	call	100078dc <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
10007100:	e0bff617 	ldw	r2,-40(fp)
10007104:	e0fff717 	ldw	r3,-36(fp)
10007108:	00000f06 	br	10007148 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0x104>
	}

      return _Res(iterator(__res.first), false);
1000710c:	e0fff317 	ldw	r3,-52(fp)
10007110:	e0bffc04 	addi	r2,fp,-16
10007114:	180b883a 	mov	r5,r3
10007118:	1009883a 	mov	r4,r2
1000711c:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007120:	e03ffdc5 	stb	zero,-9(fp)
10007124:	e13ffdc4 	addi	r4,fp,-9
10007128:	e0fffc04 	addi	r3,fp,-16
1000712c:	e0bffa04 	addi	r2,fp,-24
10007130:	200d883a 	mov	r6,r4
10007134:	180b883a 	mov	r5,r3
10007138:	1009883a 	mov	r4,r2
1000713c:	00078dc0 	call	100078dc <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
10007140:	e0bffa17 	ldw	r2,-24(fp)
10007144:	e0fffb17 	ldw	r3,-20(fp)
10007148:	1009883a 	mov	r4,r2
1000714c:	180b883a 	mov	r5,r3
    }
10007150:	2005883a 	mov	r2,r4
10007154:	2807883a 	mov	r3,r5
10007158:	e6fffe04 	addi	sp,fp,-8
1000715c:	dfc00317 	ldw	ra,12(sp)
10007160:	df000217 	ldw	fp,8(sp)
10007164:	dc400117 	ldw	r17,4(sp)
10007168:	dc000017 	ldw	r16,0(sp)
1000716c:	dec00404 	addi	sp,sp,16
10007170:	f800283a 	ret

10007174 <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10007174:	defffe04 	addi	sp,sp,-8
10007178:	df000115 	stw	fp,4(sp)
1000717c:	df000104 	addi	fp,sp,4
10007180:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10007184:	e0bfff17 	ldw	r2,-4(fp)
10007188:	e037883a 	mov	sp,fp
1000718c:	df000017 	ldw	fp,0(sp)
10007190:	dec00104 	addi	sp,sp,4
10007194:	f800283a 	ret

10007198 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
10007198:	defffa04 	addi	sp,sp,-24
1000719c:	dfc00515 	stw	ra,20(sp)
100071a0:	df000415 	stw	fp,16(sp)
100071a4:	dc000315 	stw	r16,12(sp)
100071a8:	df000404 	addi	fp,sp,16
100071ac:	e13ffe15 	stw	r4,-8(fp)
100071b0:	e17ffd15 	stw	r5,-12(fp)
100071b4:	e1bffc15 	stw	r6,-16(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
100071b8:	e43ffe17 	ldw	r16,-8(fp)
100071bc:	e13ffd17 	ldw	r4,-12(fp)
100071c0:	00071740 	call	10007174 <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>
100071c4:	100b883a 	mov	r5,r2
100071c8:	8009883a 	mov	r4,r16
100071cc:	00079940 	call	10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100071d0:	e13ffc17 	ldw	r4,-16(fp)
100071d4:	00079700 	call	10007970 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
100071d8:	10c00003 	ldbu	r3,0(r2)
100071dc:	e0bffe17 	ldw	r2,-8(fp)
100071e0:	10c00105 	stb	r3,4(r2)
100071e4:	0001883a 	nop
100071e8:	e6ffff04 	addi	sp,fp,-4
100071ec:	dfc00217 	ldw	ra,8(sp)
100071f0:	df000117 	ldw	fp,4(sp)
100071f4:	dc000017 	ldw	r16,0(sp)
100071f8:	dec00304 	addi	sp,sp,12
100071fc:	f800283a 	ret

10007200 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
10007200:	defffc04 	addi	sp,sp,-16
10007204:	dfc00315 	stw	ra,12(sp)
10007208:	df000215 	stw	fp,8(sp)
1000720c:	df000204 	addi	fp,sp,8
10007210:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
10007214:	e0bffe17 	ldw	r2,-8(fp)
10007218:	10c00317 	ldw	r3,12(r2)
1000721c:	e0bfff04 	addi	r2,fp,-4
10007220:	180b883a 	mov	r5,r3
10007224:	1009883a 	mov	r4,r2
10007228:	00079cc0 	call	100079cc <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
1000722c:	e0bfff17 	ldw	r2,-4(fp)
10007230:	e037883a 	mov	sp,fp
10007234:	dfc00117 	ldw	ra,4(sp)
10007238:	df000017 	ldw	fp,0(sp)
1000723c:	dec00204 	addi	sp,sp,8
10007240:	f800283a 	ret

10007244 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
10007244:	defffc04 	addi	sp,sp,-16
10007248:	dfc00315 	stw	ra,12(sp)
1000724c:	df000215 	stw	fp,8(sp)
10007250:	df000204 	addi	fp,sp,8
10007254:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(&this->_M_impl._M_header); }
10007258:	e0bffe17 	ldw	r2,-8(fp)
1000725c:	10c00104 	addi	r3,r2,4
10007260:	e0bfff04 	addi	r2,fp,-4
10007264:	180b883a 	mov	r5,r3
10007268:	1009883a 	mov	r4,r2
1000726c:	00079cc0 	call	100079cc <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
10007270:	e0bfff17 	ldw	r2,-4(fp)
10007274:	e037883a 	mov	sp,fp
10007278:	dfc00117 	ldw	ra,4(sp)
1000727c:	df000017 	ldw	fp,0(sp)
10007280:	dec00204 	addi	sp,sp,8
10007284:	f800283a 	ret

10007288 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr() const
10007288:	defffd04 	addi	sp,sp,-12
1000728c:	dfc00215 	stw	ra,8(sp)
10007290:	df000115 	stw	fp,4(sp)
10007294:	df000104 	addi	fp,sp,4
10007298:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
1000729c:	e0bfff17 	ldw	r2,-4(fp)
100072a0:	10800404 	addi	r2,r2,16
100072a4:	1009883a 	mov	r4,r2
100072a8:	0007a000 	call	10007a00 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
100072ac:	e037883a 	mov	sp,fp
100072b0:	dfc00117 	ldw	ra,4(sp)
100072b4:	df000017 	ldw	fp,0(sp)
100072b8:	dec00204 	addi	sp,sp,8
100072bc:	f800283a 	ret

100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100072c0:	defff704 	addi	sp,sp,-36
100072c4:	dfc00815 	stw	ra,32(sp)
100072c8:	df000715 	stw	fp,28(sp)
100072cc:	df000704 	addi	fp,sp,28
100072d0:	e13ffa15 	stw	r4,-24(fp)
100072d4:	e17ff915 	stw	r5,-28(fp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
100072d8:	e17ff917 	ldw	r5,-28(fp)
100072dc:	e13ffa17 	ldw	r4,-24(fp)
100072e0:	0007a300 	call	10007a30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>
100072e4:	1009883a 	mov	r4,r2
100072e8:	180b883a 	mov	r5,r3
100072ec:	e13ffb15 	stw	r4,-20(fp)
100072f0:	e17ffc15 	stw	r5,-16(fp)
      const size_type __old_size = size();
100072f4:	e13ffa17 	ldw	r4,-24(fp)
100072f8:	0007bd00 	call	10007bd0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
100072fc:	e0bfff15 	stw	r2,-4(fp)
      _M_erase_aux(__p.first, __p.second);
10007300:	e0fffb04 	addi	r3,fp,-20
10007304:	e0bffd04 	addi	r2,fp,-12
10007308:	180b883a 	mov	r5,r3
1000730c:	1009883a 	mov	r4,r2
10007310:	00079940 	call	10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10007314:	e0bffb04 	addi	r2,fp,-20
10007318:	10c00104 	addi	r3,r2,4
1000731c:	e0bffe04 	addi	r2,fp,-8
10007320:	180b883a 	mov	r5,r3
10007324:	1009883a 	mov	r4,r2
10007328:	00079940 	call	10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
1000732c:	e1bffe17 	ldw	r6,-8(fp)
10007330:	e17ffd17 	ldw	r5,-12(fp)
10007334:	e13ffa17 	ldw	r4,-24(fp)
10007338:	0007bf80 	call	10007bf8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>
      return __old_size - size();
1000733c:	e13ffa17 	ldw	r4,-24(fp)
10007340:	0007bd00 	call	10007bd0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
10007344:	1007883a 	mov	r3,r2
10007348:	e0bfff17 	ldw	r2,-4(fp)
1000734c:	10c5c83a 	sub	r2,r2,r3
    }
10007350:	e037883a 	mov	sp,fp
10007354:	dfc00117 	ldw	ra,4(sp)
10007358:	df000017 	ldw	fp,0(sp)
1000735c:	dec00204 	addi	sp,sp,8
10007360:	f800283a 	ret

10007364 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
10007364:	defff004 	addi	sp,sp,-64
10007368:	dfc00f15 	stw	ra,60(sp)
1000736c:	df000e15 	stw	fp,56(sp)
10007370:	df000e04 	addi	fp,sp,56
10007374:	e13fff15 	stw	r4,-4(fp)
10007378:	00840074 	movhi	r2,4097
1000737c:	10a4f504 	addi	r2,r2,-27692
10007380:	e0bff815 	stw	r2,-32(fp)
10007384:	008400b4 	movhi	r2,4098
10007388:	10935504 	addi	r2,r2,19796
1000738c:	e0bff915 	stw	r2,-28(fp)
10007390:	e0bff204 	addi	r2,fp,-56
10007394:	1009883a 	mov	r4,r2
10007398:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
	_M_erase(_M_begin());
1000739c:	e13fff17 	ldw	r4,-4(fp)
100073a0:	0006ff80 	call	10006ff8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
100073a4:	e03ff315 	stw	zero,-52(fp)
100073a8:	100b883a 	mov	r5,r2
100073ac:	e13fff17 	ldw	r4,-4(fp)
100073b0:	0006f880 	call	10006f88 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	_M_impl._M_reset();
100073b4:	e0bfff17 	ldw	r2,-4(fp)
100073b8:	10800104 	addi	r2,r2,4
100073bc:	1009883a 	mov	r4,r2
100073c0:	0006a2c0 	call	10006a2c <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
100073c4:	0001883a 	nop
100073c8:	e0bff204 	addi	r2,fp,-56
100073cc:	1009883a 	mov	r4,r2
100073d0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100073d4:	e037883a 	mov	sp,fp
100073d8:	dfc00117 	ldw	ra,4(sp)
100073dc:	df000017 	ldw	fp,0(sp)
100073e0:	dec00204 	addi	sp,sp,8
100073e4:	f800283a 	ret

100073e8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
100073e8:	defffe04 	addi	sp,sp,-8
100073ec:	df000115 	stw	fp,4(sp)
100073f0:	df000104 	addi	fp,sp,4
100073f4:	e13fff15 	stw	r4,-4(fp)
100073f8:	0001883a 	nop
100073fc:	e037883a 	mov	sp,fp
10007400:	df000017 	ldw	fp,0(sp)
10007404:	dec00104 	addi	sp,sp,4
10007408:	f800283a 	ret

1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
1000740c:	defffe04 	addi	sp,sp,-8
10007410:	df000115 	stw	fp,4(sp)
10007414:	df000104 	addi	fp,sp,4
10007418:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_right); }
1000741c:	e0bfff17 	ldw	r2,-4(fp)
10007420:	10800317 	ldw	r2,12(r2)
10007424:	e037883a 	mov	sp,fp
10007428:	df000017 	ldw	fp,0(sp)
1000742c:	dec00104 	addi	sp,sp,4
10007430:	f800283a 	ret

10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10007434:	defffe04 	addi	sp,sp,-8
10007438:	df000115 	stw	fp,4(sp)
1000743c:	df000104 	addi	fp,sp,4
10007440:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_left); }
10007444:	e0bfff17 	ldw	r2,-4(fp)
10007448:	10800217 	ldw	r2,8(r2)
1000744c:	e037883a 	mov	sp,fp
10007450:	df000017 	ldw	fp,0(sp)
10007454:	dec00104 	addi	sp,sp,4
10007458:	f800283a 	ret

1000745c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
1000745c:	defffc04 	addi	sp,sp,-16
10007460:	dfc00315 	stw	ra,12(sp)
10007464:	df000215 	stw	fp,8(sp)
10007468:	df000204 	addi	fp,sp,8
1000746c:	e13fff15 	stw	r4,-4(fp)
10007470:	e17ffe15 	stw	r5,-8(fp)
	_M_destroy_node(__p);
10007474:	e17ffe17 	ldw	r5,-8(fp)
10007478:	e13fff17 	ldw	r4,-4(fp)
1000747c:	0007d000 	call	10007d00 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>
	_M_put_node(__p);
10007480:	e17ffe17 	ldw	r5,-8(fp)
10007484:	e13fff17 	ldw	r4,-4(fp)
10007488:	0007d8c0 	call	10007d8c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
      }
1000748c:	0001883a 	nop
10007490:	e037883a 	mov	sp,fp
10007494:	dfc00117 	ldw	ra,4(sp)
10007498:	df000017 	ldw	fp,0(sp)
1000749c:	dec00204 	addi	sp,sp,8
100074a0:	f800283a 	ret

100074a4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
100074a4:	defffb04 	addi	sp,sp,-20
100074a8:	dfc00415 	stw	ra,16(sp)
100074ac:	df000315 	stw	fp,12(sp)
100074b0:	df000304 	addi	fp,sp,12
100074b4:	e13fff15 	stw	r4,-4(fp)
100074b8:	e17ffe15 	stw	r5,-8(fp)
100074bc:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
100074c0:	e13ffe17 	ldw	r4,-8(fp)
100074c4:	00075000 	call	10007500 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>
100074c8:	10c00017 	ldw	r3,0(r2)
100074cc:	e0bfff17 	ldw	r2,-4(fp)
100074d0:	10c00015 	stw	r3,0(r2)
100074d4:	e13ffd17 	ldw	r4,-12(fp)
100074d8:	000757c0 	call	1000757c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
100074dc:	10c00017 	ldw	r3,0(r2)
100074e0:	e0bfff17 	ldw	r2,-4(fp)
100074e4:	10c00115 	stw	r3,4(r2)
100074e8:	0001883a 	nop
100074ec:	e037883a 	mov	sp,fp
100074f0:	dfc00117 	ldw	ra,4(sp)
100074f4:	df000017 	ldw	fp,0(sp)
100074f8:	dec00204 	addi	sp,sp,8
100074fc:	f800283a 	ret

10007500 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10007500:	defffe04 	addi	sp,sp,-8
10007504:	df000115 	stw	fp,4(sp)
10007508:	df000104 	addi	fp,sp,4
1000750c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10007510:	e0bfff17 	ldw	r2,-4(fp)
10007514:	e037883a 	mov	sp,fp
10007518:	df000017 	ldw	fp,0(sp)
1000751c:	dec00104 	addi	sp,sp,4
10007520:	f800283a 	ret

10007524 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
10007524:	defffb04 	addi	sp,sp,-20
10007528:	dfc00415 	stw	ra,16(sp)
1000752c:	df000315 	stw	fp,12(sp)
10007530:	df000304 	addi	fp,sp,12
10007534:	e13fff15 	stw	r4,-4(fp)
10007538:	e17ffe15 	stw	r5,-8(fp)
1000753c:	e1bffd15 	stw	r6,-12(fp)
       : first(std::forward<_U1>(__x)), second(__y) { }
10007540:	e13ffe17 	ldw	r4,-8(fp)
10007544:	000757c0 	call	1000757c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
10007548:	10c00017 	ldw	r3,0(r2)
1000754c:	e0bfff17 	ldw	r2,-4(fp)
10007550:	10c00015 	stw	r3,0(r2)
10007554:	e0bffd17 	ldw	r2,-12(fp)
10007558:	10c00017 	ldw	r3,0(r2)
1000755c:	e0bfff17 	ldw	r2,-4(fp)
10007560:	10c00115 	stw	r3,4(r2)
10007564:	0001883a 	nop
10007568:	e037883a 	mov	sp,fp
1000756c:	dfc00117 	ldw	ra,4(sp)
10007570:	df000017 	ldw	fp,0(sp)
10007574:	dec00204 	addi	sp,sp,8
10007578:	f800283a 	ret

1000757c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
1000757c:	defffe04 	addi	sp,sp,-8
10007580:	df000115 	stw	fp,4(sp)
10007584:	df000104 	addi	fp,sp,4
10007588:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
1000758c:	e0bfff17 	ldw	r2,-4(fp)
10007590:	e037883a 	mov	sp,fp
10007594:	df000017 	ldw	fp,0(sp)
10007598:	dec00104 	addi	sp,sp,4
1000759c:	f800283a 	ret

100075a0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100075a0:	deffef04 	addi	sp,sp,-68
100075a4:	dfc01015 	stw	ra,64(sp)
100075a8:	df000f15 	stw	fp,60(sp)
100075ac:	dc000e15 	stw	r16,56(sp)
100075b0:	df000f04 	addi	fp,sp,60
100075b4:	e13ff215 	stw	r4,-56(fp)
100075b8:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
100075bc:	e13ff217 	ldw	r4,-56(fp)
100075c0:	0006ff80 	call	10006ff8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
100075c4:	e0bff515 	stw	r2,-44(fp)
      _Base_ptr __y = _M_end();
100075c8:	e13ff217 	ldw	r4,-56(fp)
100075cc:	0007e080 	call	10007e08 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
100075d0:	e0bff415 	stw	r2,-48(fp)
      bool __comp = true;
100075d4:	00800044 	movi	r2,1
100075d8:	e0bffec5 	stb	r2,-5(fp)
      while (__x != 0)
100075dc:	e0bff517 	ldw	r2,-44(fp)
100075e0:	10001626 	beq	r2,zero,1000763c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x9c>
	  __y = __x;
100075e4:	e0bff517 	ldw	r2,-44(fp)
100075e8:	e0bff415 	stw	r2,-48(fp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
100075ec:	e43ff217 	ldw	r16,-56(fp)
100075f0:	e0bff517 	ldw	r2,-44(fp)
100075f4:	1009883a 	mov	r4,r2
100075f8:	0007e300 	call	10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
100075fc:	100d883a 	mov	r6,r2
10007600:	e17ff117 	ldw	r5,-60(fp)
10007604:	8009883a 	mov	r4,r16
10007608:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
1000760c:	e0bffec5 	stb	r2,-5(fp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
10007610:	e0bffec3 	ldbu	r2,-5(fp)
10007614:	10000426 	beq	r2,zero,10007628 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x88>
10007618:	e0bff517 	ldw	r2,-44(fp)
1000761c:	1009883a 	mov	r4,r2
10007620:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007624:	00000306 	br	10007634 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x94>
10007628:	e0bff517 	ldw	r2,-44(fp)
1000762c:	1009883a 	mov	r4,r2
10007630:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007634:	e0bff515 	stw	r2,-44(fp)
      while (__x != 0)
10007638:	003fe806 	br	100075dc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x3c>
      iterator __j = iterator(__y);
1000763c:	e0fff417 	ldw	r3,-48(fp)
10007640:	e0bff304 	addi	r2,fp,-52
10007644:	180b883a 	mov	r5,r3
10007648:	1009883a 	mov	r4,r2
1000764c:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
      if (__comp)
10007650:	e0bffec3 	ldbu	r2,-5(fp)
10007654:	10001726 	beq	r2,zero,100076b4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x114>
	  if (__j == begin())
10007658:	e13ff217 	ldw	r4,-56(fp)
1000765c:	0007eb40 	call	10007eb4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
10007660:	e0bff615 	stw	r2,-40(fp)
10007664:	e0fff604 	addi	r3,fp,-40
10007668:	e0bff304 	addi	r2,fp,-52
1000766c:	180b883a 	mov	r5,r3
10007670:	1009883a 	mov	r4,r2
10007674:	0007ef80 	call	10007ef8 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>
10007678:	10803fcc 	andi	r2,r2,255
1000767c:	10000a26 	beq	r2,zero,100076a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x108>
	    return _Res(__x, __y);
10007680:	e13ff404 	addi	r4,fp,-48
10007684:	e0fff504 	addi	r3,fp,-44
10007688:	e0bff704 	addi	r2,fp,-36
1000768c:	200d883a 	mov	r6,r4
10007690:	180b883a 	mov	r5,r3
10007694:	1009883a 	mov	r4,r2
10007698:	00074a40 	call	100074a4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
1000769c:	e0bff717 	ldw	r2,-36(fp)
100076a0:	e0fff817 	ldw	r3,-32(fp)
100076a4:	00002106 	br	1000772c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
	    --__j;
100076a8:	e0bff304 	addi	r2,fp,-52
100076ac:	1009883a 	mov	r4,r2
100076b0:	0007f300 	call	10007f30 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
100076b4:	e43ff217 	ldw	r16,-56(fp)
100076b8:	e0bff317 	ldw	r2,-52(fp)
100076bc:	1009883a 	mov	r4,r2
100076c0:	0007f780 	call	10007f78 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
100076c4:	e1bff117 	ldw	r6,-60(fp)
100076c8:	100b883a 	mov	r5,r2
100076cc:	8009883a 	mov	r4,r16
100076d0:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
100076d4:	10803fcc 	andi	r2,r2,255
100076d8:	10000a26 	beq	r2,zero,10007704 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x164>
	return _Res(__x, __y);
100076dc:	e13ff404 	addi	r4,fp,-48
100076e0:	e0fff504 	addi	r3,fp,-44
100076e4:	e0bff904 	addi	r2,fp,-28
100076e8:	200d883a 	mov	r6,r4
100076ec:	180b883a 	mov	r5,r3
100076f0:	1009883a 	mov	r4,r2
100076f4:	00074a40 	call	100074a4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
100076f8:	e0bff917 	ldw	r2,-28(fp)
100076fc:	e0fffa17 	ldw	r3,-24(fp)
10007700:	00000a06 	br	1000772c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
      return _Res(__j._M_node, 0);
10007704:	e03ffd15 	stw	zero,-12(fp)
10007708:	e13ffd04 	addi	r4,fp,-12
1000770c:	e0fff304 	addi	r3,fp,-52
10007710:	e0bffb04 	addi	r2,fp,-20
10007714:	200d883a 	mov	r6,r4
10007718:	180b883a 	mov	r5,r3
1000771c:	1009883a 	mov	r4,r2
10007720:	00075240 	call	10007524 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
10007724:	e0bffb17 	ldw	r2,-20(fp)
10007728:	e0fffc17 	ldw	r3,-16(fp)
1000772c:	1009883a 	mov	r4,r2
10007730:	180b883a 	mov	r5,r3
    }
10007734:	2005883a 	mov	r2,r4
10007738:	2807883a 	mov	r3,r5
1000773c:	e6ffff04 	addi	sp,fp,-4
10007740:	dfc00217 	ldw	ra,8(sp)
10007744:	df000117 	ldw	fp,4(sp)
10007748:	dc000017 	ldw	r16,0(sp)
1000774c:	dec00304 	addi	sp,sp,12
10007750:	f800283a 	ret

10007754 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
10007754:	defffd04 	addi	sp,sp,-12
10007758:	df000215 	stw	fp,8(sp)
1000775c:	df000204 	addi	fp,sp,8
10007760:	e13fff15 	stw	r4,-4(fp)
10007764:	e17ffe15 	stw	r5,-8(fp)
      { return __x; }
10007768:	e0bffe17 	ldw	r2,-8(fp)
1000776c:	e037883a 	mov	sp,fp
10007770:	df000017 	ldw	fp,0(sp)
10007774:	dec00104 	addi	sp,sp,4
10007778:	f800283a 	ret

1000777c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>:
	_Alloc_node(_Rb_tree& __t)
1000777c:	defffd04 	addi	sp,sp,-12
10007780:	df000215 	stw	fp,8(sp)
10007784:	df000204 	addi	fp,sp,8
10007788:	e13fff15 	stw	r4,-4(fp)
1000778c:	e17ffe15 	stw	r5,-8(fp)
	  : _M_t(__t) { }
10007790:	e0bfff17 	ldw	r2,-4(fp)
10007794:	e0fffe17 	ldw	r3,-8(fp)
10007798:	10c00015 	stw	r3,0(r2)
1000779c:	0001883a 	nop
100077a0:	e037883a 	mov	sp,fp
100077a4:	df000017 	ldw	fp,0(sp)
100077a8:	dec00104 	addi	sp,sp,4
100077ac:	f800283a 	ret

100077b0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100077b0:	defff404 	addi	sp,sp,-48
100077b4:	dfc00b15 	stw	ra,44(sp)
100077b8:	df000a15 	stw	fp,40(sp)
100077bc:	dc400915 	stw	r17,36(sp)
100077c0:	dc000815 	stw	r16,32(sp)
100077c4:	df000a04 	addi	fp,sp,40
100077c8:	e13ff915 	stw	r4,-28(fp)
100077cc:	e17ff815 	stw	r5,-32(fp)
100077d0:	e1bff715 	stw	r6,-36(fp)
100077d4:	e1fff615 	stw	r7,-40(fp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
100077d8:	e0bff817 	ldw	r2,-32(fp)
100077dc:	1000131e 	bne	r2,zero,1000782c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
	bool __insert_left = (__x != 0 || __p == _M_end()
100077e0:	e13ff917 	ldw	r4,-28(fp)
100077e4:	0007e080 	call	10007e08 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
100077e8:	1007883a 	mov	r3,r2
100077ec:	e0bff717 	ldw	r2,-36(fp)
100077f0:	10c00e26 	beq	r2,r3,1000782c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
100077f4:	e43ff917 	ldw	r16,-28(fp)
100077f8:	e0bffac4 	addi	r2,fp,-21
100077fc:	e17ff617 	ldw	r5,-40(fp)
10007800:	1009883a 	mov	r4,r2
10007804:	00077540 	call	10007754 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007808:	1023883a 	mov	r17,r2
1000780c:	e13ff717 	ldw	r4,-36(fp)
10007810:	0007f780 	call	10007f78 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
10007814:	100d883a 	mov	r6,r2
10007818:	880b883a 	mov	r5,r17
1000781c:	8009883a 	mov	r4,r16
10007820:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007824:	10803fcc 	andi	r2,r2,255
10007828:	10000226 	beq	r2,zero,10007834 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x84>
1000782c:	00800044 	movi	r2,1
10007830:	00000106 	br	10007838 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x88>
10007834:	0005883a 	mov	r2,zero
	bool __insert_left = (__x != 0 || __p == _M_end()
10007838:	e0bffdc5 	stb	r2,-9(fp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1000783c:	e13ff617 	ldw	r4,-40(fp)
10007840:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007844:	100b883a 	mov	r5,r2
10007848:	e1000217 	ldw	r4,8(fp)
1000784c:	0007fc00 	call	10007fc0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>
10007850:	e0bffc15 	stw	r2,-16(fp)
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10007854:	e0fffdc3 	ldbu	r3,-9(fp)
				      this->_M_impl._M_header);
10007858:	e0bff917 	ldw	r2,-28(fp)
1000785c:	10800104 	addi	r2,r2,4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10007860:	100f883a 	mov	r7,r2
10007864:	e1bff717 	ldw	r6,-36(fp)
10007868:	e17ffc17 	ldw	r5,-16(fp)
1000786c:	1809883a 	mov	r4,r3
10007870:	000a01c0 	call	1000a01c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
10007874:	e0bff917 	ldw	r2,-28(fp)
10007878:	10800517 	ldw	r2,20(r2)
1000787c:	10c00044 	addi	r3,r2,1
10007880:	e0bff917 	ldw	r2,-28(fp)
10007884:	10c00515 	stw	r3,20(r2)
	return iterator(__z);
10007888:	e0bffb04 	addi	r2,fp,-20
1000788c:	e17ffc17 	ldw	r5,-16(fp)
10007890:	1009883a 	mov	r4,r2
10007894:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007898:	e0bffb17 	ldw	r2,-20(fp)
      }
1000789c:	e6fffe04 	addi	sp,fp,-8
100078a0:	dfc00317 	ldw	ra,12(sp)
100078a4:	df000217 	ldw	fp,8(sp)
100078a8:	dc400117 	ldw	r17,4(sp)
100078ac:	dc000017 	ldw	r16,0(sp)
100078b0:	dec00404 	addi	sp,sp,16
100078b4:	f800283a 	ret

100078b8 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
100078b8:	defffe04 	addi	sp,sp,-8
100078bc:	df000115 	stw	fp,4(sp)
100078c0:	df000104 	addi	fp,sp,4
100078c4:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
100078c8:	e0bfff17 	ldw	r2,-4(fp)
100078cc:	e037883a 	mov	sp,fp
100078d0:	df000017 	ldw	fp,0(sp)
100078d4:	dec00104 	addi	sp,sp,4
100078d8:	f800283a 	ret

100078dc <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
100078dc:	defffb04 	addi	sp,sp,-20
100078e0:	dfc00415 	stw	ra,16(sp)
100078e4:	df000315 	stw	fp,12(sp)
100078e8:	df000304 	addi	fp,sp,12
100078ec:	e13fff15 	stw	r4,-4(fp)
100078f0:	e17ffe15 	stw	r5,-8(fp)
100078f4:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
100078f8:	e13ffe17 	ldw	r4,-8(fp)
100078fc:	00078b80 	call	100078b8 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
10007900:	1007883a 	mov	r3,r2
10007904:	e0bfff17 	ldw	r2,-4(fp)
10007908:	18c00017 	ldw	r3,0(r3)
1000790c:	10c00015 	stw	r3,0(r2)
10007910:	e13ffd17 	ldw	r4,-12(fp)
10007914:	00080100 	call	10008010 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
10007918:	10c00003 	ldbu	r3,0(r2)
1000791c:	e0bfff17 	ldw	r2,-4(fp)
10007920:	10c00105 	stb	r3,4(r2)
10007924:	0001883a 	nop
10007928:	e037883a 	mov	sp,fp
1000792c:	dfc00117 	ldw	ra,4(sp)
10007930:	df000017 	ldw	fp,0(sp)
10007934:	dec00204 	addi	sp,sp,8
10007938:	f800283a 	ret

1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
1000793c:	defffd04 	addi	sp,sp,-12
10007940:	df000215 	stw	fp,8(sp)
10007944:	df000204 	addi	fp,sp,8
10007948:	e13fff15 	stw	r4,-4(fp)
1000794c:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
10007950:	e0bfff17 	ldw	r2,-4(fp)
10007954:	e0fffe17 	ldw	r3,-8(fp)
10007958:	10c00015 	stw	r3,0(r2)
1000795c:	0001883a 	nop
10007960:	e037883a 	mov	sp,fp
10007964:	df000017 	ldw	fp,0(sp)
10007968:	dec00104 	addi	sp,sp,4
1000796c:	f800283a 	ret

10007970 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10007970:	defffe04 	addi	sp,sp,-8
10007974:	df000115 	stw	fp,4(sp)
10007978:	df000104 	addi	fp,sp,4
1000797c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10007980:	e0bfff17 	ldw	r2,-4(fp)
10007984:	e037883a 	mov	sp,fp
10007988:	df000017 	ldw	fp,0(sp)
1000798c:	dec00104 	addi	sp,sp,4
10007990:	f800283a 	ret

10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
10007994:	defffd04 	addi	sp,sp,-12
10007998:	df000215 	stw	fp,8(sp)
1000799c:	df000204 	addi	fp,sp,8
100079a0:	e13fff15 	stw	r4,-4(fp)
100079a4:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__it._M_node) { }
100079a8:	e0bffe17 	ldw	r2,-8(fp)
100079ac:	10c00017 	ldw	r3,0(r2)
100079b0:	e0bfff17 	ldw	r2,-4(fp)
100079b4:	10c00015 	stw	r3,0(r2)
100079b8:	0001883a 	nop
100079bc:	e037883a 	mov	sp,fp
100079c0:	df000017 	ldw	fp,0(sp)
100079c4:	dec00104 	addi	sp,sp,4
100079c8:	f800283a 	ret

100079cc <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
100079cc:	defffd04 	addi	sp,sp,-12
100079d0:	df000215 	stw	fp,8(sp)
100079d4:	df000204 	addi	fp,sp,8
100079d8:	e13fff15 	stw	r4,-4(fp)
100079dc:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
100079e0:	e0bfff17 	ldw	r2,-4(fp)
100079e4:	e0fffe17 	ldw	r3,-8(fp)
100079e8:	10c00015 	stw	r3,0(r2)
100079ec:	0001883a 	nop
100079f0:	e037883a 	mov	sp,fp
100079f4:	df000017 	ldw	fp,0(sp)
100079f8:	dec00104 	addi	sp,sp,4
100079fc:	f800283a 	ret

10007a00 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
10007a00:	defffd04 	addi	sp,sp,-12
10007a04:	dfc00215 	stw	ra,8(sp)
10007a08:	df000115 	stw	fp,4(sp)
10007a0c:	df000104 	addi	fp,sp,4
10007a10:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const _Tp*>(_M_addr()); }
10007a14:	e13fff17 	ldw	r4,-4(fp)
10007a18:	00080340 	call	10008034 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
10007a1c:	e037883a 	mov	sp,fp
10007a20:	dfc00117 	ldw	ra,4(sp)
10007a24:	df000017 	ldw	fp,0(sp)
10007a28:	dec00204 	addi	sp,sp,8
10007a2c:	f800283a 	ret

10007a30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10007a30:	deffef04 	addi	sp,sp,-68
10007a34:	dfc01015 	stw	ra,64(sp)
10007a38:	df000f15 	stw	fp,60(sp)
10007a3c:	dc000e15 	stw	r16,56(sp)
10007a40:	df000f04 	addi	fp,sp,60
10007a44:	e13ff215 	stw	r4,-56(fp)
10007a48:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
10007a4c:	e13ff217 	ldw	r4,-56(fp)
10007a50:	0006ff80 	call	10006ff8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10007a54:	e0bffe15 	stw	r2,-8(fp)
      _Base_ptr __y = _M_end();
10007a58:	e13ff217 	ldw	r4,-56(fp)
10007a5c:	0007e080 	call	10007e08 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10007a60:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
10007a64:	e0bffe17 	ldw	r2,-8(fp)
10007a68:	10003e26 	beq	r2,zero,10007b64 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x134>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
10007a6c:	e43ff217 	ldw	r16,-56(fp)
10007a70:	e13ffe17 	ldw	r4,-8(fp)
10007a74:	0007e300 	call	10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007a78:	e1bff117 	ldw	r6,-60(fp)
10007a7c:	100b883a 	mov	r5,r2
10007a80:	8009883a 	mov	r4,r16
10007a84:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007a88:	10803fcc 	andi	r2,r2,255
10007a8c:	10000426 	beq	r2,zero,10007aa0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x70>
	    __x = _S_right(__x);
10007a90:	e13ffe17 	ldw	r4,-8(fp)
10007a94:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007a98:	e0bffe15 	stw	r2,-8(fp)
10007a9c:	003ff106 	br	10007a64 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
10007aa0:	e43ff217 	ldw	r16,-56(fp)
10007aa4:	e13ffe17 	ldw	r4,-8(fp)
10007aa8:	0007e300 	call	10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007aac:	100d883a 	mov	r6,r2
10007ab0:	e17ff117 	ldw	r5,-60(fp)
10007ab4:	8009883a 	mov	r4,r16
10007ab8:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007abc:	10803fcc 	andi	r2,r2,255
10007ac0:	10000626 	beq	r2,zero,10007adc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0xac>
	    __y = __x, __x = _S_left(__x);
10007ac4:	e0bffe17 	ldw	r2,-8(fp)
10007ac8:	e0bffd15 	stw	r2,-12(fp)
10007acc:	e13ffe17 	ldw	r4,-8(fp)
10007ad0:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007ad4:	e0bffe15 	stw	r2,-8(fp)
10007ad8:	003fe206 	br	10007a64 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	      _Link_type __xu(__x);
10007adc:	e0bffe17 	ldw	r2,-8(fp)
10007ae0:	e0bffc15 	stw	r2,-16(fp)
	      _Base_ptr __yu(__y);
10007ae4:	e0bffd17 	ldw	r2,-12(fp)
10007ae8:	e0bffb15 	stw	r2,-20(fp)
	      __y = __x, __x = _S_left(__x);
10007aec:	e0bffe17 	ldw	r2,-8(fp)
10007af0:	e0bffd15 	stw	r2,-12(fp)
10007af4:	e13ffe17 	ldw	r4,-8(fp)
10007af8:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007afc:	e0bffe15 	stw	r2,-8(fp)
	      __xu = _S_right(__xu);
10007b00:	e13ffc17 	ldw	r4,-16(fp)
10007b04:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007b08:	e0bffc15 	stw	r2,-16(fp)
	      return pair<iterator,
10007b0c:	e1fff117 	ldw	r7,-60(fp)
10007b10:	e1bffd17 	ldw	r6,-12(fp)
10007b14:	e17ffe17 	ldw	r5,-8(fp)
10007b18:	e13ff217 	ldw	r4,-56(fp)
10007b1c:	00080580 	call	10008058 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
10007b20:	e0bff515 	stw	r2,-44(fp)
10007b24:	e1fff117 	ldw	r7,-60(fp)
10007b28:	e1bffb17 	ldw	r6,-20(fp)
10007b2c:	e17ffc17 	ldw	r5,-16(fp)
10007b30:	e13ff217 	ldw	r4,-56(fp)
10007b34:	00081000 	call	10008100 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
10007b38:	e0bff615 	stw	r2,-40(fp)
				    _M_upper_bound(__xu, __yu, __k));
10007b3c:	e13ff604 	addi	r4,fp,-40
10007b40:	e0fff504 	addi	r3,fp,-44
10007b44:	e0bff304 	addi	r2,fp,-52
10007b48:	200d883a 	mov	r6,r4
10007b4c:	180b883a 	mov	r5,r3
10007b50:	1009883a 	mov	r4,r2
10007b54:	00081a40 	call	100081a4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007b58:	e0bff317 	ldw	r2,-52(fp)
10007b5c:	e0fff417 	ldw	r3,-48(fp)
10007b60:	00001106 	br	10007ba8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x178>
				      iterator(__y));
10007b64:	e0bff904 	addi	r2,fp,-28
10007b68:	e17ffd17 	ldw	r5,-12(fp)
10007b6c:	1009883a 	mov	r4,r2
10007b70:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007b74:	e0bffa04 	addi	r2,fp,-24
10007b78:	e17ffd17 	ldw	r5,-12(fp)
10007b7c:	1009883a 	mov	r4,r2
10007b80:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007b84:	e13ffa04 	addi	r4,fp,-24
10007b88:	e0fff904 	addi	r3,fp,-28
10007b8c:	e0bff704 	addi	r2,fp,-36
10007b90:	200d883a 	mov	r6,r4
10007b94:	180b883a 	mov	r5,r3
10007b98:	1009883a 	mov	r4,r2
10007b9c:	00081a40 	call	100081a4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007ba0:	e0bff717 	ldw	r2,-36(fp)
10007ba4:	e0fff817 	ldw	r3,-32(fp)
10007ba8:	1009883a 	mov	r4,r2
10007bac:	180b883a 	mov	r5,r3
    }
10007bb0:	2005883a 	mov	r2,r4
10007bb4:	2807883a 	mov	r3,r5
10007bb8:	e6ffff04 	addi	sp,fp,-4
10007bbc:	dfc00217 	ldw	ra,8(sp)
10007bc0:	df000117 	ldw	fp,4(sp)
10007bc4:	dc000017 	ldw	r16,0(sp)
10007bc8:	dec00304 	addi	sp,sp,12
10007bcc:	f800283a 	ret

10007bd0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
10007bd0:	defffe04 	addi	sp,sp,-8
10007bd4:	df000115 	stw	fp,4(sp)
10007bd8:	df000104 	addi	fp,sp,4
10007bdc:	e13fff15 	stw	r4,-4(fp)
      { return _M_impl._M_node_count; }
10007be0:	e0bfff17 	ldw	r2,-4(fp)
10007be4:	10800517 	ldw	r2,20(r2)
10007be8:	e037883a 	mov	sp,fp
10007bec:	df000017 	ldw	fp,0(sp)
10007bf0:	dec00104 	addi	sp,sp,4
10007bf4:	f800283a 	ret

10007bf8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10007bf8:	defff704 	addi	sp,sp,-36
10007bfc:	dfc00815 	stw	ra,32(sp)
10007c00:	df000715 	stw	fp,28(sp)
10007c04:	df000704 	addi	fp,sp,28
10007c08:	e13ffb15 	stw	r4,-20(fp)
10007c0c:	e17ffa15 	stw	r5,-24(fp)
10007c10:	e1bff915 	stw	r6,-28(fp)
      if (__first == begin() && __last == end())
10007c14:	e13ffb17 	ldw	r4,-20(fp)
10007c18:	0007eb40 	call	10007eb4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
10007c1c:	e0bffd15 	stw	r2,-12(fp)
10007c20:	e0fffd04 	addi	r3,fp,-12
10007c24:	e0bffc04 	addi	r2,fp,-16
10007c28:	180b883a 	mov	r5,r3
10007c2c:	1009883a 	mov	r4,r2
10007c30:	00079940 	call	10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10007c34:	e0fffc04 	addi	r3,fp,-16
10007c38:	e0bffa04 	addi	r2,fp,-24
10007c3c:	180b883a 	mov	r5,r3
10007c40:	1009883a 	mov	r4,r2
10007c44:	00082080 	call	10008208 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
10007c48:	10803fcc 	andi	r2,r2,255
10007c4c:	10001126 	beq	r2,zero,10007c94 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
10007c50:	e13ffb17 	ldw	r4,-20(fp)
10007c54:	00082400 	call	10008240 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
10007c58:	e0bfff15 	stw	r2,-4(fp)
10007c5c:	e0ffff04 	addi	r3,fp,-4
10007c60:	e0bffe04 	addi	r2,fp,-8
10007c64:	180b883a 	mov	r5,r3
10007c68:	1009883a 	mov	r4,r2
10007c6c:	00079940 	call	10007994 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10007c70:	e0fffe04 	addi	r3,fp,-8
10007c74:	e0bff904 	addi	r2,fp,-28
10007c78:	180b883a 	mov	r5,r3
10007c7c:	1009883a 	mov	r4,r2
10007c80:	00082080 	call	10008208 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
10007c84:	10803fcc 	andi	r2,r2,255
10007c88:	10000226 	beq	r2,zero,10007c94 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
10007c8c:	00800044 	movi	r2,1
10007c90:	00000106 	br	10007c98 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xa0>
10007c94:	0005883a 	mov	r2,zero
10007c98:	10803fcc 	andi	r2,r2,255
10007c9c:	10000326 	beq	r2,zero,10007cac <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
	clear();
10007ca0:	e13ffb17 	ldw	r4,-20(fp)
10007ca4:	00073640 	call	10007364 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
    }
10007ca8:	00000f06 	br	10007ce8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	while (__first != __last)
10007cac:	e0fff904 	addi	r3,fp,-28
10007cb0:	e0bffa04 	addi	r2,fp,-24
10007cb4:	180b883a 	mov	r5,r3
10007cb8:	1009883a 	mov	r4,r2
10007cbc:	0006e280 	call	10006e28 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10007cc0:	10803fcc 	andi	r2,r2,255
10007cc4:	10000826 	beq	r2,zero,10007ce8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	  _M_erase_aux(__first++);
10007cc8:	e0bffa04 	addi	r2,fp,-24
10007ccc:	000b883a 	mov	r5,zero
10007cd0:	1009883a 	mov	r4,r2
10007cd4:	00082840 	call	10008284 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>
10007cd8:	100b883a 	mov	r5,r2
10007cdc:	e13ffb17 	ldw	r4,-20(fp)
10007ce0:	00082dc0 	call	100082dc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>
	while (__first != __last)
10007ce4:	003ff106 	br	10007cac <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
    }
10007ce8:	0001883a 	nop
10007cec:	e037883a 	mov	sp,fp
10007cf0:	dfc00117 	ldw	ra,4(sp)
10007cf4:	df000017 	ldw	fp,0(sp)
10007cf8:	dec00204 	addi	sp,sp,8
10007cfc:	f800283a 	ret

10007d00 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_destroy_node(_Link_type __p) noexcept
10007d00:	deffee04 	addi	sp,sp,-72
10007d04:	dfc01115 	stw	ra,68(sp)
10007d08:	df001015 	stw	fp,64(sp)
10007d0c:	dc000f15 	stw	r16,60(sp)
10007d10:	df001004 	addi	fp,sp,64
10007d14:	e13ffe15 	stw	r4,-8(fp)
10007d18:	e17ffd15 	stw	r5,-12(fp)
10007d1c:	00840074 	movhi	r2,4097
10007d20:	10a4f504 	addi	r2,r2,-27692
10007d24:	e0bff615 	stw	r2,-40(fp)
10007d28:	008400b4 	movhi	r2,4098
10007d2c:	10935604 	addi	r2,r2,19800
10007d30:	e0bff715 	stw	r2,-36(fp)
10007d34:	e0bff004 	addi	r2,fp,-64
10007d38:	1009883a 	mov	r4,r2
10007d3c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
10007d40:	e13ffe17 	ldw	r4,-8(fp)
10007d44:	00083480 	call	10008348 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007d48:	1021883a 	mov	r16,r2
10007d4c:	e13ffd17 	ldw	r4,-12(fp)
10007d50:	000836c0 	call	1000836c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007d54:	e03ff115 	stw	zero,-60(fp)
10007d58:	100b883a 	mov	r5,r2
10007d5c:	8009883a 	mov	r4,r16
10007d60:	00083a40 	call	100083a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>
      }
10007d64:	0001883a 	nop
10007d68:	e0bff004 	addi	r2,fp,-64
10007d6c:	1009883a 	mov	r4,r2
10007d70:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10007d74:	e6ffff04 	addi	sp,fp,-4
10007d78:	dfc00217 	ldw	ra,8(sp)
10007d7c:	df000117 	ldw	fp,4(sp)
10007d80:	dc000017 	ldw	r16,0(sp)
10007d84:	dec00304 	addi	sp,sp,12
10007d88:	f800283a 	ret

10007d8c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
10007d8c:	deffef04 	addi	sp,sp,-68
10007d90:	dfc01015 	stw	ra,64(sp)
10007d94:	df000f15 	stw	fp,60(sp)
10007d98:	df000f04 	addi	fp,sp,60
10007d9c:	e13fff15 	stw	r4,-4(fp)
10007da0:	e17ffe15 	stw	r5,-8(fp)
10007da4:	00840074 	movhi	r2,4097
10007da8:	10a4f504 	addi	r2,r2,-27692
10007dac:	e0bff715 	stw	r2,-36(fp)
10007db0:	008400b4 	movhi	r2,4098
10007db4:	10935704 	addi	r2,r2,19804
10007db8:	e0bff815 	stw	r2,-32(fp)
10007dbc:	e0bff104 	addi	r2,fp,-60
10007dc0:	1009883a 	mov	r4,r2
10007dc4:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
10007dc8:	e13fff17 	ldw	r4,-4(fp)
10007dcc:	00083480 	call	10008348 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007dd0:	e03ff215 	stw	zero,-56(fp)
10007dd4:	01800044 	movi	r6,1
10007dd8:	e17ffe17 	ldw	r5,-8(fp)
10007ddc:	1009883a 	mov	r4,r2
10007de0:	00083e00 	call	100083e0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>
10007de4:	0001883a 	nop
10007de8:	e0bff104 	addi	r2,fp,-60
10007dec:	1009883a 	mov	r4,r2
10007df0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10007df4:	e037883a 	mov	sp,fp
10007df8:	dfc00117 	ldw	ra,4(sp)
10007dfc:	df000017 	ldw	fp,0(sp)
10007e00:	dec00204 	addi	sp,sp,8
10007e04:	f800283a 	ret

10007e08 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
10007e08:	defffe04 	addi	sp,sp,-8
10007e0c:	df000115 	stw	fp,4(sp)
10007e10:	df000104 	addi	fp,sp,4
10007e14:	e13fff15 	stw	r4,-4(fp)
      { return &this->_M_impl._M_header; }
10007e18:	e0bfff17 	ldw	r2,-4(fp)
10007e1c:	10800104 	addi	r2,r2,4
10007e20:	e037883a 	mov	sp,fp
10007e24:	df000017 	ldw	fp,0(sp)
10007e28:	dec00104 	addi	sp,sp,4
10007e2c:	f800283a 	ret

10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>:
      _S_key(_Const_Link_type __x)
10007e30:	defffc04 	addi	sp,sp,-16
10007e34:	dfc00315 	stw	ra,12(sp)
10007e38:	df000215 	stw	fp,8(sp)
10007e3c:	df000204 	addi	fp,sp,8
10007e40:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
10007e44:	e13ffe17 	ldw	r4,-8(fp)
10007e48:	00084240 	call	10008424 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>
10007e4c:	1007883a 	mov	r3,r2
10007e50:	e0bfffc4 	addi	r2,fp,-1
10007e54:	180b883a 	mov	r5,r3
10007e58:	1009883a 	mov	r4,r2
10007e5c:	00077540 	call	10007754 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007e60:	0001883a 	nop
10007e64:	e037883a 	mov	sp,fp
10007e68:	dfc00117 	ldw	ra,4(sp)
10007e6c:	df000017 	ldw	fp,0(sp)
10007e70:	dec00204 	addi	sp,sp,8
10007e74:	f800283a 	ret

10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>:
      operator()(const _Tp& __x, const _Tp& __y) const
10007e78:	defffb04 	addi	sp,sp,-20
10007e7c:	dfc00415 	stw	ra,16(sp)
10007e80:	df000315 	stw	fp,12(sp)
10007e84:	df000304 	addi	fp,sp,12
10007e88:	e13fff15 	stw	r4,-4(fp)
10007e8c:	e17ffe15 	stw	r5,-8(fp)
10007e90:	e1bffd15 	stw	r6,-12(fp)
      { return __x < __y; }
10007e94:	e17ffd17 	ldw	r5,-12(fp)
10007e98:	e13ffe17 	ldw	r4,-8(fp)
10007e9c:	0006b0c0 	call	10006b0c <_ZNK9TileGroupltERKS_>
10007ea0:	e037883a 	mov	sp,fp
10007ea4:	dfc00117 	ldw	ra,4(sp)
10007ea8:	df000017 	ldw	fp,0(sp)
10007eac:	dec00204 	addi	sp,sp,8
10007eb0:	f800283a 	ret

10007eb4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
10007eb4:	defffc04 	addi	sp,sp,-16
10007eb8:	dfc00315 	stw	ra,12(sp)
10007ebc:	df000215 	stw	fp,8(sp)
10007ec0:	df000204 	addi	fp,sp,8
10007ec4:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(this->_M_impl._M_header._M_left); }
10007ec8:	e0bffe17 	ldw	r2,-8(fp)
10007ecc:	10c00317 	ldw	r3,12(r2)
10007ed0:	e0bfff04 	addi	r2,fp,-4
10007ed4:	180b883a 	mov	r5,r3
10007ed8:	1009883a 	mov	r4,r2
10007edc:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007ee0:	e0bfff17 	ldw	r2,-4(fp)
10007ee4:	e037883a 	mov	sp,fp
10007ee8:	dfc00117 	ldw	ra,4(sp)
10007eec:	df000017 	ldw	fp,0(sp)
10007ef0:	dec00204 	addi	sp,sp,8
10007ef4:	f800283a 	ret

10007ef8 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
10007ef8:	defffd04 	addi	sp,sp,-12
10007efc:	df000215 	stw	fp,8(sp)
10007f00:	df000204 	addi	fp,sp,8
10007f04:	e13fff15 	stw	r4,-4(fp)
10007f08:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
10007f0c:	e0bfff17 	ldw	r2,-4(fp)
10007f10:	10c00017 	ldw	r3,0(r2)
10007f14:	e0bffe17 	ldw	r2,-8(fp)
10007f18:	10800017 	ldw	r2,0(r2)
10007f1c:	1885003a 	cmpeq	r2,r3,r2
10007f20:	e037883a 	mov	sp,fp
10007f24:	df000017 	ldw	fp,0(sp)
10007f28:	dec00104 	addi	sp,sp,4
10007f2c:	f800283a 	ret

10007f30 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
10007f30:	defffd04 	addi	sp,sp,-12
10007f34:	dfc00215 	stw	ra,8(sp)
10007f38:	df000115 	stw	fp,4(sp)
10007f3c:	df000104 	addi	fp,sp,4
10007f40:	e13fff15 	stw	r4,-4(fp)
	_M_node = _Rb_tree_decrement(_M_node);
10007f44:	e0bfff17 	ldw	r2,-4(fp)
10007f48:	10800017 	ldw	r2,0(r2)
10007f4c:	1009883a 	mov	r4,r2
10007f50:	0009f5c0 	call	10009f5c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
10007f54:	1007883a 	mov	r3,r2
10007f58:	e0bfff17 	ldw	r2,-4(fp)
10007f5c:	10c00015 	stw	r3,0(r2)
	return *this;
10007f60:	e0bfff17 	ldw	r2,-4(fp)
      }
10007f64:	e037883a 	mov	sp,fp
10007f68:	dfc00117 	ldw	ra,4(sp)
10007f6c:	df000017 	ldw	fp,0(sp)
10007f70:	dec00204 	addi	sp,sp,8
10007f74:	f800283a 	ret

10007f78 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
10007f78:	defffc04 	addi	sp,sp,-16
10007f7c:	dfc00315 	stw	ra,12(sp)
10007f80:	df000215 	stw	fp,8(sp)
10007f84:	df000204 	addi	fp,sp,8
10007f88:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
10007f8c:	e13ffe17 	ldw	r4,-8(fp)
10007f90:	00084540 	call	10008454 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>
10007f94:	1007883a 	mov	r3,r2
10007f98:	e0bfffc4 	addi	r2,fp,-1
10007f9c:	180b883a 	mov	r5,r3
10007fa0:	1009883a 	mov	r4,r2
10007fa4:	00077540 	call	10007754 <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007fa8:	0001883a 	nop
10007fac:	e037883a 	mov	sp,fp
10007fb0:	dfc00117 	ldw	ra,4(sp)
10007fb4:	df000017 	ldw	fp,0(sp)
10007fb8:	dec00204 	addi	sp,sp,8
10007fbc:	f800283a 	ret

10007fc0 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>:
	  operator()(_Arg&& __arg) const
10007fc0:	defffb04 	addi	sp,sp,-20
10007fc4:	dfc00415 	stw	ra,16(sp)
10007fc8:	df000315 	stw	fp,12(sp)
10007fcc:	dc000215 	stw	r16,8(sp)
10007fd0:	df000304 	addi	fp,sp,12
10007fd4:	e13ffe15 	stw	r4,-8(fp)
10007fd8:	e17ffd15 	stw	r5,-12(fp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
10007fdc:	e0bffe17 	ldw	r2,-8(fp)
10007fe0:	14000017 	ldw	r16,0(r2)
10007fe4:	e13ffd17 	ldw	r4,-12(fp)
10007fe8:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007fec:	100b883a 	mov	r5,r2
10007ff0:	8009883a 	mov	r4,r16
10007ff4:	00084840 	call	10008484 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>
10007ff8:	e6ffff04 	addi	sp,fp,-4
10007ffc:	dfc00217 	ldw	ra,8(sp)
10008000:	df000117 	ldw	fp,4(sp)
10008004:	dc000017 	ldw	r16,0(sp)
10008008:	dec00304 	addi	sp,sp,12
1000800c:	f800283a 	ret

10008010 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10008010:	defffe04 	addi	sp,sp,-8
10008014:	df000115 	stw	fp,4(sp)
10008018:	df000104 	addi	fp,sp,4
1000801c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10008020:	e0bfff17 	ldw	r2,-4(fp)
10008024:	e037883a 	mov	sp,fp
10008028:	df000017 	ldw	fp,0(sp)
1000802c:	dec00104 	addi	sp,sp,4
10008030:	f800283a 	ret

10008034 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() const noexcept
10008034:	defffe04 	addi	sp,sp,-8
10008038:	df000115 	stw	fp,4(sp)
1000803c:	df000104 	addi	fp,sp,4
10008040:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const void*>(&_M_storage); }
10008044:	e0bfff17 	ldw	r2,-4(fp)
10008048:	e037883a 	mov	sp,fp
1000804c:	df000017 	ldw	fp,0(sp)
10008050:	dec00104 	addi	sp,sp,4
10008054:	f800283a 	ret

10008058 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10008058:	defff804 	addi	sp,sp,-32
1000805c:	dfc00715 	stw	ra,28(sp)
10008060:	df000615 	stw	fp,24(sp)
10008064:	dc000515 	stw	r16,20(sp)
10008068:	df000604 	addi	fp,sp,24
1000806c:	e13ffd15 	stw	r4,-12(fp)
10008070:	e17ffc15 	stw	r5,-16(fp)
10008074:	e1bffb15 	stw	r6,-20(fp)
10008078:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
1000807c:	e0bffc17 	ldw	r2,-16(fp)
10008080:	10001426 	beq	r2,zero,100080d4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x7c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
10008084:	e43ffd17 	ldw	r16,-12(fp)
10008088:	e13ffc17 	ldw	r4,-16(fp)
1000808c:	0007e300 	call	10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10008090:	e1bffa17 	ldw	r6,-24(fp)
10008094:	100b883a 	mov	r5,r2
10008098:	8009883a 	mov	r4,r16
1000809c:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
100080a0:	1080005c 	xori	r2,r2,1
100080a4:	10803fcc 	andi	r2,r2,255
100080a8:	10000626 	beq	r2,zero,100080c4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x6c>
	  __y = __x, __x = _S_left(__x);
100080ac:	e0bffc17 	ldw	r2,-16(fp)
100080b0:	e0bffb15 	stw	r2,-20(fp)
100080b4:	e13ffc17 	ldw	r4,-16(fp)
100080b8:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
100080bc:	e0bffc15 	stw	r2,-16(fp)
100080c0:	003fee06 	br	1000807c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
100080c4:	e13ffc17 	ldw	r4,-16(fp)
100080c8:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
100080cc:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
100080d0:	003fea06 	br	1000807c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
100080d4:	e0bffe04 	addi	r2,fp,-8
100080d8:	e17ffb17 	ldw	r5,-20(fp)
100080dc:	1009883a 	mov	r4,r2
100080e0:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100080e4:	e0bffe17 	ldw	r2,-8(fp)
    }
100080e8:	e6ffff04 	addi	sp,fp,-4
100080ec:	dfc00217 	ldw	ra,8(sp)
100080f0:	df000117 	ldw	fp,4(sp)
100080f4:	dc000017 	ldw	r16,0(sp)
100080f8:	dec00304 	addi	sp,sp,12
100080fc:	f800283a 	ret

10008100 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10008100:	defff804 	addi	sp,sp,-32
10008104:	dfc00715 	stw	ra,28(sp)
10008108:	df000615 	stw	fp,24(sp)
1000810c:	dc000515 	stw	r16,20(sp)
10008110:	df000604 	addi	fp,sp,24
10008114:	e13ffd15 	stw	r4,-12(fp)
10008118:	e17ffc15 	stw	r5,-16(fp)
1000811c:	e1bffb15 	stw	r6,-20(fp)
10008120:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
10008124:	e0bffc17 	ldw	r2,-16(fp)
10008128:	10001326 	beq	r2,zero,10008178 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x78>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1000812c:	e43ffd17 	ldw	r16,-12(fp)
10008130:	e13ffc17 	ldw	r4,-16(fp)
10008134:	0007e300 	call	10007e30 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10008138:	100d883a 	mov	r6,r2
1000813c:	e17ffa17 	ldw	r5,-24(fp)
10008140:	8009883a 	mov	r4,r16
10008144:	0007e780 	call	10007e78 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10008148:	10803fcc 	andi	r2,r2,255
1000814c:	10000626 	beq	r2,zero,10008168 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x68>
	  __y = __x, __x = _S_left(__x);
10008150:	e0bffc17 	ldw	r2,-16(fp)
10008154:	e0bffb15 	stw	r2,-20(fp)
10008158:	e13ffc17 	ldw	r4,-16(fp)
1000815c:	00074340 	call	10007434 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10008160:	e0bffc15 	stw	r2,-16(fp)
10008164:	003fef06 	br	10008124 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
10008168:	e13ffc17 	ldw	r4,-16(fp)
1000816c:	000740c0 	call	1000740c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10008170:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
10008174:	003feb06 	br	10008124 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
10008178:	e0bffe04 	addi	r2,fp,-8
1000817c:	e17ffb17 	ldw	r5,-20(fp)
10008180:	1009883a 	mov	r4,r2
10008184:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10008188:	e0bffe17 	ldw	r2,-8(fp)
    }
1000818c:	e6ffff04 	addi	sp,fp,-4
10008190:	dfc00217 	ldw	ra,8(sp)
10008194:	df000117 	ldw	fp,4(sp)
10008198:	dc000017 	ldw	r16,0(sp)
1000819c:	dec00304 	addi	sp,sp,12
100081a0:	f800283a 	ret

100081a4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
100081a4:	defffb04 	addi	sp,sp,-20
100081a8:	dfc00415 	stw	ra,16(sp)
100081ac:	df000315 	stw	fp,12(sp)
100081b0:	df000304 	addi	fp,sp,12
100081b4:	e13fff15 	stw	r4,-4(fp)
100081b8:	e17ffe15 	stw	r5,-8(fp)
100081bc:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
100081c0:	e13ffe17 	ldw	r4,-8(fp)
100081c4:	00078b80 	call	100078b8 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
100081c8:	1007883a 	mov	r3,r2
100081cc:	e0bfff17 	ldw	r2,-4(fp)
100081d0:	18c00017 	ldw	r3,0(r3)
100081d4:	10c00015 	stw	r3,0(r2)
100081d8:	e13ffd17 	ldw	r4,-12(fp)
100081dc:	00078b80 	call	100078b8 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
100081e0:	1007883a 	mov	r3,r2
100081e4:	e0bfff17 	ldw	r2,-4(fp)
100081e8:	18c00017 	ldw	r3,0(r3)
100081ec:	10c00115 	stw	r3,4(r2)
100081f0:	0001883a 	nop
100081f4:	e037883a 	mov	sp,fp
100081f8:	dfc00117 	ldw	ra,4(sp)
100081fc:	df000017 	ldw	fp,0(sp)
10008200:	dec00204 	addi	sp,sp,8
10008204:	f800283a 	ret

10008208 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
10008208:	defffd04 	addi	sp,sp,-12
1000820c:	df000215 	stw	fp,8(sp)
10008210:	df000204 	addi	fp,sp,8
10008214:	e13fff15 	stw	r4,-4(fp)
10008218:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
1000821c:	e0bfff17 	ldw	r2,-4(fp)
10008220:	10c00017 	ldw	r3,0(r2)
10008224:	e0bffe17 	ldw	r2,-8(fp)
10008228:	10800017 	ldw	r2,0(r2)
1000822c:	1885003a 	cmpeq	r2,r3,r2
10008230:	e037883a 	mov	sp,fp
10008234:	df000017 	ldw	fp,0(sp)
10008238:	dec00104 	addi	sp,sp,4
1000823c:	f800283a 	ret

10008240 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
10008240:	defffc04 	addi	sp,sp,-16
10008244:	dfc00315 	stw	ra,12(sp)
10008248:	df000215 	stw	fp,8(sp)
1000824c:	df000204 	addi	fp,sp,8
10008250:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(&this->_M_impl._M_header); }
10008254:	e0bffe17 	ldw	r2,-8(fp)
10008258:	10c00104 	addi	r3,r2,4
1000825c:	e0bfff04 	addi	r2,fp,-4
10008260:	180b883a 	mov	r5,r3
10008264:	1009883a 	mov	r4,r2
10008268:	000793c0 	call	1000793c <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
1000826c:	e0bfff17 	ldw	r2,-4(fp)
10008270:	e037883a 	mov	sp,fp
10008274:	dfc00117 	ldw	ra,4(sp)
10008278:	df000017 	ldw	fp,0(sp)
1000827c:	dec00204 	addi	sp,sp,8
10008280:	f800283a 	ret

10008284 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
10008284:	defffb04 	addi	sp,sp,-20
10008288:	dfc00415 	stw	ra,16(sp)
1000828c:	df000315 	stw	fp,12(sp)
10008290:	df000304 	addi	fp,sp,12
10008294:	e13ffe15 	stw	r4,-8(fp)
10008298:	e17ffd15 	stw	r5,-12(fp)
	_Self __tmp = *this;
1000829c:	e0bffe17 	ldw	r2,-8(fp)
100082a0:	10800017 	ldw	r2,0(r2)
100082a4:	e0bfff15 	stw	r2,-4(fp)
	_M_node = _Rb_tree_increment(_M_node);
100082a8:	e0bffe17 	ldw	r2,-8(fp)
100082ac:	10800017 	ldw	r2,0(r2)
100082b0:	1009883a 	mov	r4,r2
100082b4:	0009f580 	call	10009f58 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
100082b8:	1007883a 	mov	r3,r2
100082bc:	e0bffe17 	ldw	r2,-8(fp)
100082c0:	10c00015 	stw	r3,0(r2)
	return __tmp;
100082c4:	e0bfff17 	ldw	r2,-4(fp)
      }
100082c8:	e037883a 	mov	sp,fp
100082cc:	dfc00117 	ldw	ra,4(sp)
100082d0:	df000017 	ldw	fp,0(sp)
100082d4:	dec00204 	addi	sp,sp,8
100082d8:	f800283a 	ret

100082dc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100082dc:	defffb04 	addi	sp,sp,-20
100082e0:	dfc00415 	stw	ra,16(sp)
100082e4:	df000315 	stw	fp,12(sp)
100082e8:	df000304 	addi	fp,sp,12
100082ec:	e13ffe15 	stw	r4,-8(fp)
100082f0:	e17ffd15 	stw	r5,-12(fp)
				(const_cast<_Base_ptr>(__position._M_node),
100082f4:	e0fffd17 	ldw	r3,-12(fp)
				 this->_M_impl._M_header));
100082f8:	e0bffe17 	ldw	r2,-8(fp)
100082fc:	10800104 	addi	r2,r2,4
				(const_cast<_Base_ptr>(__position._M_node),
10008300:	100b883a 	mov	r5,r2
10008304:	1809883a 	mov	r4,r3
10008308:	000a2700 	call	1000a270 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
1000830c:	e0bfff15 	stw	r2,-4(fp)
      _M_drop_node(__y);
10008310:	e17fff17 	ldw	r5,-4(fp)
10008314:	e13ffe17 	ldw	r4,-8(fp)
10008318:	000745c0 	call	1000745c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
      --_M_impl._M_node_count;
1000831c:	e0bffe17 	ldw	r2,-8(fp)
10008320:	10800517 	ldw	r2,20(r2)
10008324:	10ffffc4 	addi	r3,r2,-1
10008328:	e0bffe17 	ldw	r2,-8(fp)
1000832c:	10c00515 	stw	r3,20(r2)
    }
10008330:	0001883a 	nop
10008334:	e037883a 	mov	sp,fp
10008338:	dfc00117 	ldw	ra,4(sp)
1000833c:	df000017 	ldw	fp,0(sp)
10008340:	dec00204 	addi	sp,sp,8
10008344:	f800283a 	ret

10008348 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
10008348:	defffe04 	addi	sp,sp,-8
1000834c:	df000115 	stw	fp,4(sp)
10008350:	df000104 	addi	fp,sp,4
10008354:	e13fff15 	stw	r4,-4(fp)
      { return this->_M_impl; }
10008358:	e0bfff17 	ldw	r2,-4(fp)
1000835c:	e037883a 	mov	sp,fp
10008360:	df000017 	ldw	fp,0(sp)
10008364:	dec00104 	addi	sp,sp,4
10008368:	f800283a 	ret

1000836c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr()
1000836c:	defffd04 	addi	sp,sp,-12
10008370:	dfc00215 	stw	ra,8(sp)
10008374:	df000115 	stw	fp,4(sp)
10008378:	df000104 	addi	fp,sp,4
1000837c:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
10008380:	e0bfff17 	ldw	r2,-4(fp)
10008384:	10800404 	addi	r2,r2,16
10008388:	1009883a 	mov	r4,r2
1000838c:	00084d80 	call	100084d8 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
10008390:	e037883a 	mov	sp,fp
10008394:	dfc00117 	ldw	ra,4(sp)
10008398:	df000017 	ldw	fp,0(sp)
1000839c:	dec00204 	addi	sp,sp,8
100083a0:	f800283a 	ret

100083a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
100083a4:	defffc04 	addi	sp,sp,-16
100083a8:	dfc00315 	stw	ra,12(sp)
100083ac:	df000215 	stw	fp,8(sp)
100083b0:	df000204 	addi	fp,sp,8
100083b4:	e13fff15 	stw	r4,-4(fp)
100083b8:	e17ffe15 	stw	r5,-8(fp)
	{ __a.destroy(__p); }
100083bc:	e17ffe17 	ldw	r5,-8(fp)
100083c0:	e13fff17 	ldw	r4,-4(fp)
100083c4:	00085080 	call	10008508 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>
100083c8:	0001883a 	nop
100083cc:	e037883a 	mov	sp,fp
100083d0:	dfc00117 	ldw	ra,4(sp)
100083d4:	df000017 	ldw	fp,0(sp)
100083d8:	dec00204 	addi	sp,sp,8
100083dc:	f800283a 	ret

100083e0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
100083e0:	defffb04 	addi	sp,sp,-20
100083e4:	dfc00415 	stw	ra,16(sp)
100083e8:	df000315 	stw	fp,12(sp)
100083ec:	df000304 	addi	fp,sp,12
100083f0:	e13fff15 	stw	r4,-4(fp)
100083f4:	e17ffe15 	stw	r5,-8(fp)
100083f8:	e1bffd15 	stw	r6,-12(fp)
      { __a.deallocate(__p, __n); }
100083fc:	e1bffd17 	ldw	r6,-12(fp)
10008400:	e17ffe17 	ldw	r5,-8(fp)
10008404:	e13fff17 	ldw	r4,-4(fp)
10008408:	00085300 	call	10008530 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>
1000840c:	0001883a 	nop
10008410:	e037883a 	mov	sp,fp
10008414:	dfc00117 	ldw	ra,4(sp)
10008418:	df000017 	ldw	fp,0(sp)
1000841c:	dec00204 	addi	sp,sp,8
10008420:	f800283a 	ret

10008424 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>:
      _S_value(_Const_Link_type __x)
10008424:	defffd04 	addi	sp,sp,-12
10008428:	dfc00215 	stw	ra,8(sp)
1000842c:	df000115 	stw	fp,4(sp)
10008430:	df000104 	addi	fp,sp,4
10008434:	e13fff15 	stw	r4,-4(fp)
      { return *__x->_M_valptr(); }
10008438:	e13fff17 	ldw	r4,-4(fp)
1000843c:	00072880 	call	10007288 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10008440:	e037883a 	mov	sp,fp
10008444:	dfc00117 	ldw	ra,4(sp)
10008448:	df000017 	ldw	fp,0(sp)
1000844c:	dec00204 	addi	sp,sp,8
10008450:	f800283a 	ret

10008454 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>:
      _S_value(_Const_Base_ptr __x)
10008454:	defffd04 	addi	sp,sp,-12
10008458:	dfc00215 	stw	ra,8(sp)
1000845c:	df000115 	stw	fp,4(sp)
10008460:	df000104 	addi	fp,sp,4
10008464:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
10008468:	e13fff17 	ldw	r4,-4(fp)
1000846c:	00072880 	call	10007288 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10008470:	e037883a 	mov	sp,fp
10008474:	dfc00117 	ldw	ra,4(sp)
10008478:	df000017 	ldw	fp,0(sp)
1000847c:	dec00204 	addi	sp,sp,8
10008480:	f800283a 	ret

10008484 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_create_node(_Args&&... __args)
10008484:	defffb04 	addi	sp,sp,-20
10008488:	dfc00415 	stw	ra,16(sp)
1000848c:	df000315 	stw	fp,12(sp)
10008490:	df000304 	addi	fp,sp,12
10008494:	e13ffe15 	stw	r4,-8(fp)
10008498:	e17ffd15 	stw	r5,-12(fp)
	  _Link_type __tmp = _M_get_node();
1000849c:	e13ffe17 	ldw	r4,-8(fp)
100084a0:	000856c0 	call	1000856c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>
100084a4:	e0bfff15 	stw	r2,-4(fp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
100084a8:	e13ffd17 	ldw	r4,-12(fp)
100084ac:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
100084b0:	100d883a 	mov	r6,r2
100084b4:	e17fff17 	ldw	r5,-4(fp)
100084b8:	e13ffe17 	ldw	r4,-8(fp)
100084bc:	00085a80 	call	100085a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>
	  return __tmp;
100084c0:	e0bfff17 	ldw	r2,-4(fp)
	}
100084c4:	e037883a 	mov	sp,fp
100084c8:	dfc00117 	ldw	ra,4(sp)
100084cc:	df000017 	ldw	fp,0(sp)
100084d0:	dec00204 	addi	sp,sp,8
100084d4:	f800283a 	ret

100084d8 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _M_ptr() noexcept
100084d8:	defffd04 	addi	sp,sp,-12
100084dc:	dfc00215 	stw	ra,8(sp)
100084e0:	df000115 	stw	fp,4(sp)
100084e4:	df000104 	addi	fp,sp,4
100084e8:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Tp*>(_M_addr()); }
100084ec:	e13fff17 	ldw	r4,-4(fp)
100084f0:	00087140 	call	10008714 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
100084f4:	e037883a 	mov	sp,fp
100084f8:	dfc00117 	ldw	ra,4(sp)
100084fc:	df000017 	ldw	fp,0(sp)
10008500:	dec00204 	addi	sp,sp,8
10008504:	f800283a 	ret

10008508 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>:
	construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p) { __p->~_Up(); }
10008508:	defffd04 	addi	sp,sp,-12
1000850c:	df000215 	stw	fp,8(sp)
10008510:	df000204 	addi	fp,sp,8
10008514:	e13fff15 	stw	r4,-4(fp)
10008518:	e17ffe15 	stw	r5,-8(fp)
1000851c:	0001883a 	nop
10008520:	e037883a 	mov	sp,fp
10008524:	df000017 	ldw	fp,0(sp)
10008528:	dec00104 	addi	sp,sp,4
1000852c:	f800283a 	ret

10008530 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>:
      deallocate(pointer __p, size_type)
10008530:	defffb04 	addi	sp,sp,-20
10008534:	dfc00415 	stw	ra,16(sp)
10008538:	df000315 	stw	fp,12(sp)
1000853c:	df000304 	addi	fp,sp,12
10008540:	e13fff15 	stw	r4,-4(fp)
10008544:	e17ffe15 	stw	r5,-8(fp)
10008548:	e1bffd15 	stw	r6,-12(fp)
	::operator delete(__p);
1000854c:	e13ffe17 	ldw	r4,-8(fp)
10008550:	0008e3c0 	call	10008e3c <_ZdlPv>
      }
10008554:	0001883a 	nop
10008558:	e037883a 	mov	sp,fp
1000855c:	dfc00117 	ldw	ra,4(sp)
10008560:	df000017 	ldw	fp,0(sp)
10008564:	dec00204 	addi	sp,sp,8
10008568:	f800283a 	ret

1000856c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>:
      _M_get_node()
1000856c:	defffd04 	addi	sp,sp,-12
10008570:	dfc00215 	stw	ra,8(sp)
10008574:	df000115 	stw	fp,4(sp)
10008578:	df000104 	addi	fp,sp,4
1000857c:	e13fff15 	stw	r4,-4(fp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
10008580:	e13fff17 	ldw	r4,-4(fp)
10008584:	00083480 	call	10008348 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10008588:	01400044 	movi	r5,1
1000858c:	1009883a 	mov	r4,r2
10008590:	00087380 	call	10008738 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>
10008594:	e037883a 	mov	sp,fp
10008598:	dfc00117 	ldw	ra,4(sp)
1000859c:	df000017 	ldw	fp,0(sp)
100085a0:	dec00204 	addi	sp,sp,8
100085a4:	f800283a 	ret

100085a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
100085a8:	deffe404 	addi	sp,sp,-112
100085ac:	dfc01b15 	stw	ra,108(sp)
100085b0:	df001a15 	stw	fp,104(sp)
100085b4:	ddc01915 	stw	r23,100(sp)
100085b8:	dd801815 	stw	r22,96(sp)
100085bc:	dd401715 	stw	r21,92(sp)
100085c0:	dd001615 	stw	r20,88(sp)
100085c4:	dcc01515 	stw	r19,84(sp)
100085c8:	dc801415 	stw	r18,80(sp)
100085cc:	dc401315 	stw	r17,76(sp)
100085d0:	dc001215 	stw	r16,72(sp)
100085d4:	df001a04 	addi	fp,sp,104
100085d8:	e13ff715 	stw	r4,-36(fp)
100085dc:	e17ff615 	stw	r5,-40(fp)
100085e0:	e1bff515 	stw	r6,-44(fp)
100085e4:	00840074 	movhi	r2,4097
100085e8:	10a4f504 	addi	r2,r2,-27692
100085ec:	e0bfee15 	stw	r2,-72(fp)
100085f0:	008400b4 	movhi	r2,4098
100085f4:	10935804 	addi	r2,r2,19808
100085f8:	e0bfef15 	stw	r2,-68(fp)
100085fc:	e0bff004 	addi	r2,fp,-64
10008600:	e0fff804 	addi	r3,fp,-32
10008604:	10c00015 	stw	r3,0(r2)
10008608:	00c40074 	movhi	r3,4097
1000860c:	18e19d04 	addi	r3,r3,-31116
10008610:	10c00115 	stw	r3,4(r2)
10008614:	16c00215 	stw	sp,8(r2)
10008618:	e0bfe804 	addi	r2,fp,-96
1000861c:	1009883a 	mov	r4,r2
10008620:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
	      ::new(__node) _Rb_tree_node<_Val>;
10008624:	e0bff617 	ldw	r2,-40(fp)
10008628:	100b883a 	mov	r5,r2
1000862c:	01000504 	movi	r4,20
10008630:	00069c80 	call	100069c8 <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
10008634:	e13ff717 	ldw	r4,-36(fp)
10008638:	00083480 	call	10008348 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
1000863c:	e0bfe715 	stw	r2,-100(fp)
10008640:	e13ff617 	ldw	r4,-40(fp)
10008644:	000836c0 	call	1000836c <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10008648:	e0bfe615 	stw	r2,-104(fp)
1000864c:	e13ff517 	ldw	r4,-44(fp)
10008650:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10008654:	1007883a 	mov	r3,r2
10008658:	00800044 	movi	r2,1
1000865c:	e0bfe915 	stw	r2,-92(fp)
10008660:	180d883a 	mov	r6,r3
10008664:	e17fe617 	ldw	r5,-104(fp)
10008668:	e13fe717 	ldw	r4,-100(fp)
1000866c:	00087740 	call	10008774 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>
	}
10008670:	00001806 	br	100086d4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x12c>
10008674:	e7000804 	addi	fp,fp,32
10008678:	e0ffea17 	ldw	r3,-88(fp)
1000867c:	e0bfe917 	ldw	r2,-92(fp)
10008680:	10000326 	beq	r2,zero,10008690 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0xe8>
10008684:	10bfffc4 	addi	r2,r2,-1
10008688:	10000a26 	beq	r2,zero,100086b4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x10c>
1000868c:	003b68fa 	trap	3
10008690:	1805883a 	mov	r2,r3
	  __catch(...)
10008694:	1009883a 	mov	r4,r2
10008698:	00089800 	call	10008980 <__cxa_begin_catch>
	      _M_put_node(__node);
1000869c:	e17ff617 	ldw	r5,-40(fp)
100086a0:	e13ff717 	ldw	r4,-36(fp)
100086a4:	0007d8c0 	call	10007d8c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
	      __throw_exception_again;
100086a8:	00800084 	movi	r2,2
100086ac:	e0bfe915 	stw	r2,-92(fp)
100086b0:	0008db80 	call	10008db8 <__cxa_rethrow>
100086b4:	e0ffe715 	stw	r3,-100(fp)
	  __catch(...)
100086b8:	e03fe915 	stw	zero,-92(fp)
100086bc:	0008a2c0 	call	10008a2c <__cxa_end_catch>
100086c0:	e0ffe717 	ldw	r3,-100(fp)
100086c4:	00bfffc4 	movi	r2,-1
100086c8:	e0bfe915 	stw	r2,-92(fp)
100086cc:	1809883a 	mov	r4,r3
100086d0:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>
100086d4:	e0bfe804 	addi	r2,fp,-96
100086d8:	1009883a 	mov	r4,r2
100086dc:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
	}
100086e0:	e6fff804 	addi	sp,fp,-32
100086e4:	dfc00917 	ldw	ra,36(sp)
100086e8:	df000817 	ldw	fp,32(sp)
100086ec:	ddc00717 	ldw	r23,28(sp)
100086f0:	dd800617 	ldw	r22,24(sp)
100086f4:	dd400517 	ldw	r21,20(sp)
100086f8:	dd000417 	ldw	r20,16(sp)
100086fc:	dcc00317 	ldw	r19,12(sp)
10008700:	dc800217 	ldw	r18,8(sp)
10008704:	dc400117 	ldw	r17,4(sp)
10008708:	dc000017 	ldw	r16,0(sp)
1000870c:	dec00a04 	addi	sp,sp,40
10008710:	f800283a 	ret

10008714 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() noexcept
10008714:	defffe04 	addi	sp,sp,-8
10008718:	df000115 	stw	fp,4(sp)
1000871c:	df000104 	addi	fp,sp,4
10008720:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<void*>(&_M_storage); }
10008724:	e0bfff17 	ldw	r2,-4(fp)
10008728:	e037883a 	mov	sp,fp
1000872c:	df000017 	ldw	fp,0(sp)
10008730:	dec00104 	addi	sp,sp,4
10008734:	f800283a 	ret

10008738 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>:
      allocate(allocator_type& __a, size_type __n)
10008738:	defffc04 	addi	sp,sp,-16
1000873c:	dfc00315 	stw	ra,12(sp)
10008740:	df000215 	stw	fp,8(sp)
10008744:	df000204 	addi	fp,sp,8
10008748:	e13fff15 	stw	r4,-4(fp)
1000874c:	e17ffe15 	stw	r5,-8(fp)
      { return __a.allocate(__n); }
10008750:	000d883a 	mov	r6,zero
10008754:	e17ffe17 	ldw	r5,-8(fp)
10008758:	e13fff17 	ldw	r4,-4(fp)
1000875c:	00087c00 	call	100087c0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>
10008760:	e037883a 	mov	sp,fp
10008764:	dfc00117 	ldw	ra,4(sp)
10008768:	df000017 	ldw	fp,0(sp)
1000876c:	dec00204 	addi	sp,sp,8
10008770:	f800283a 	ret

10008774 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
10008774:	defffb04 	addi	sp,sp,-20
10008778:	dfc00415 	stw	ra,16(sp)
1000877c:	df000315 	stw	fp,12(sp)
10008780:	df000304 	addi	fp,sp,12
10008784:	e13fff15 	stw	r4,-4(fp)
10008788:	e17ffe15 	stw	r5,-8(fp)
1000878c:	e1bffd15 	stw	r6,-12(fp)
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
10008790:	e13ffd17 	ldw	r4,-12(fp)
10008794:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10008798:	100d883a 	mov	r6,r2
1000879c:	e17ffe17 	ldw	r5,-8(fp)
100087a0:	e13fff17 	ldw	r4,-4(fp)
100087a4:	00088200 	call	10008820 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
100087a8:	0001883a 	nop
100087ac:	e037883a 	mov	sp,fp
100087b0:	dfc00117 	ldw	ra,4(sp)
100087b4:	df000017 	ldw	fp,0(sp)
100087b8:	dec00204 	addi	sp,sp,8
100087bc:	f800283a 	ret

100087c0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
100087c0:	defffb04 	addi	sp,sp,-20
100087c4:	dfc00415 	stw	ra,16(sp)
100087c8:	df000315 	stw	fp,12(sp)
100087cc:	df000304 	addi	fp,sp,12
100087d0:	e13fff15 	stw	r4,-4(fp)
100087d4:	e17ffe15 	stw	r5,-8(fp)
100087d8:	e1bffd15 	stw	r6,-12(fp)
	if (__n > this->max_size())
100087dc:	e13fff17 	ldw	r4,-4(fp)
100087e0:	00088880 	call	10008888 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>
100087e4:	1007883a 	mov	r3,r2
100087e8:	e0bffe17 	ldw	r2,-8(fp)
100087ec:	1885803a 	cmpltu	r2,r3,r2
100087f0:	10803fcc 	andi	r2,r2,255
100087f4:	10000126 	beq	r2,zero,100087fc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv+0x3c>
	  std::__throw_bad_alloc();
100087f8:	000a78c0 	call	1000a78c <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
100087fc:	e0bffe17 	ldw	r2,-8(fp)
10008800:	10800524 	muli	r2,r2,20
10008804:	1009883a 	mov	r4,r2
10008808:	00088e80 	call	100088e8 <_Znwj>
      }
1000880c:	e037883a 	mov	sp,fp
10008810:	dfc00117 	ldw	ra,4(sp)
10008814:	df000017 	ldw	fp,0(sp)
10008818:	dec00204 	addi	sp,sp,8
1000881c:	f800283a 	ret

10008820 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
10008820:	defffa04 	addi	sp,sp,-24
10008824:	dfc00515 	stw	ra,20(sp)
10008828:	df000415 	stw	fp,16(sp)
1000882c:	dc000315 	stw	r16,12(sp)
10008830:	df000404 	addi	fp,sp,16
10008834:	e13ffe15 	stw	r4,-8(fp)
10008838:	e17ffd15 	stw	r5,-12(fp)
1000883c:	e1bffc15 	stw	r6,-16(fp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
10008840:	e13ffc17 	ldw	r4,-16(fp)
10008844:	00070200 	call	10007020 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10008848:	1021883a 	mov	r16,r2
1000884c:	e0bffd17 	ldw	r2,-12(fp)
10008850:	100b883a 	mov	r5,r2
10008854:	01000084 	movi	r4,2
10008858:	00069c80 	call	100069c8 <_ZnwjPv>
1000885c:	80c00003 	ldbu	r3,0(r16)
10008860:	10c00005 	stb	r3,0(r2)
10008864:	80c00043 	ldbu	r3,1(r16)
10008868:	10c00045 	stb	r3,1(r2)
1000886c:	0001883a 	nop
10008870:	e6ffff04 	addi	sp,fp,-4
10008874:	dfc00217 	ldw	ra,8(sp)
10008878:	df000117 	ldw	fp,4(sp)
1000887c:	dc000017 	ldw	r16,0(sp)
10008880:	dec00304 	addi	sp,sp,12
10008884:	f800283a 	ret

10008888 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
10008888:	defffe04 	addi	sp,sp,-8
1000888c:	df000115 	stw	fp,4(sp)
10008890:	df000104 	addi	fp,sp,4
10008894:	e13fff15 	stw	r4,-4(fp)
      { return size_t(-1) / sizeof(_Tp); }
10008898:	00833374 	movhi	r2,3277
1000889c:	10b33304 	addi	r2,r2,-13108
100088a0:	e037883a 	mov	sp,fp
100088a4:	df000017 	ldw	fp,0(sp)
100088a8:	dec00104 	addi	sp,sp,4
100088ac:	f800283a 	ret

100088b0 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>:
      ~set() = default;
100088b0:	defffd04 	addi	sp,sp,-12
100088b4:	dfc00215 	stw	ra,8(sp)
100088b8:	df000115 	stw	fp,4(sp)
100088bc:	df000104 	addi	fp,sp,4
100088c0:	e13fff15 	stw	r4,-4(fp)
100088c4:	e0bfff17 	ldw	r2,-4(fp)
100088c8:	1009883a 	mov	r4,r2
100088cc:	0006cbc0 	call	10006cbc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>
100088d0:	0001883a 	nop
100088d4:	e037883a 	mov	sp,fp
100088d8:	dfc00117 	ldw	ra,4(sp)
100088dc:	df000017 	ldw	fp,0(sp)
100088e0:	dec00204 	addi	sp,sp,8
100088e4:	f800283a 	ret

100088e8 <_Znwj>:
100088e8:	defffe04 	addi	sp,sp,-8
100088ec:	dc000015 	stw	r16,0(sp)
100088f0:	dfc00115 	stw	ra,4(sp)
100088f4:	2021883a 	mov	r16,r4
100088f8:	2000011e 	bne	r4,zero,10008900 <_Znwj+0x18>
100088fc:	04000044 	movi	r16,1
10008900:	8009883a 	mov	r4,r16
10008904:	00162ac0 	call	100162ac <malloc>
10008908:	10000426 	beq	r2,zero,1000891c <_Znwj+0x34>
1000890c:	dfc00117 	ldw	ra,4(sp)
10008910:	dc000017 	ldw	r16,0(sp)
10008914:	dec00204 	addi	sp,sp,8
10008918:	f800283a 	ret
1000891c:	000896c0 	call	1000896c <_ZSt15get_new_handlerv>
10008920:	10000226 	beq	r2,zero,1000892c <_Znwj+0x44>
10008924:	103ee83a 	callr	r2
10008928:	003ff506 	br	10008900 <_Znwj+0x18>
1000892c:	01000104 	movi	r4,4
10008930:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
10008934:	00c400b4 	movhi	r3,4098
10008938:	01840074 	movhi	r6,4097
1000893c:	014400b4 	movhi	r5,4098
10008940:	18d6b604 	addi	r3,r3,23256
10008944:	31a39304 	addi	r6,r6,-29108
10008948:	2956b104 	addi	r5,r5,23236
1000894c:	1009883a 	mov	r4,r2
10008950:	10c00015 	stw	r3,0(r2)
10008954:	0008d240 	call	10008d24 <__cxa_throw>

10008958 <_ZSt15set_new_handlerPFvvE>:
10008958:	00c400f4 	movhi	r3,4099
1000895c:	008400f4 	movhi	r2,4099
10008960:	10a95717 	ldw	r2,-23204(r2)
10008964:	19295715 	stw	r4,-23204(r3)
10008968:	f800283a 	ret

1000896c <_ZSt15get_new_handlerv>:
1000896c:	008400f4 	movhi	r2,4099
10008970:	10a95717 	ldw	r2,-23204(r2)
10008974:	f800283a 	ret

10008978 <__cxa_get_exception_ptr>:
10008978:	20bfff17 	ldw	r2,-4(r4)
1000897c:	f800283a 	ret

10008980 <__cxa_begin_catch>:
10008980:	defffe04 	addi	sp,sp,-8
10008984:	dc000015 	stw	r16,0(sp)
10008988:	dfc00115 	stw	ra,4(sp)
1000898c:	2021883a 	mov	r16,r4
10008990:	000d0080 	call	1000d008 <__cxa_get_globals>
10008994:	80c00017 	ldw	r3,0(r16)
10008998:	81000117 	ldw	r4,4(r16)
1000899c:	016f3574 	movhi	r5,48341
100089a0:	29754004 	addi	r5,r5,-11008
100089a4:	01ae2cb4 	movhi	r6,47282
100089a8:	31aaaf04 	addi	r6,r6,-21828
100089ac:	194b883a 	add	r5,r3,r5
100089b0:	2189883a 	add	r4,r4,r6
100089b4:	28c7803a 	cmpltu	r3,r5,r3
100089b8:	1907883a 	add	r3,r3,r4
100089bc:	81bff504 	addi	r6,r16,-44
100089c0:	11000017 	ldw	r4,0(r2)
100089c4:	18000726 	beq	r3,zero,100089e4 <__cxa_begin_catch+0x64>
100089c8:	2000171e 	bne	r4,zero,10008a28 <__cxa_begin_catch+0xa8>
100089cc:	11800015 	stw	r6,0(r2)
100089d0:	2005883a 	mov	r2,r4
100089d4:	dfc00117 	ldw	ra,4(sp)
100089d8:	dc000017 	ldw	r16,0(sp)
100089dc:	dec00204 	addi	sp,sp,8
100089e0:	f800283a 	ret
100089e4:	294000a8 	cmpgeui	r5,r5,2
100089e8:	283ff71e 	bne	r5,zero,100089c8 <__cxa_begin_catch+0x48>
100089ec:	80fffa17 	ldw	r3,-24(r16)
100089f0:	18000a16 	blt	r3,zero,10008a1c <__cxa_begin_catch+0x9c>
100089f4:	18c00044 	addi	r3,r3,1
100089f8:	11400117 	ldw	r5,4(r2)
100089fc:	80fffa15 	stw	r3,-24(r16)
10008a00:	28ffffc4 	addi	r3,r5,-1
10008a04:	10c00115 	stw	r3,4(r2)
10008a08:	21800226 	beq	r4,r6,10008a14 <__cxa_begin_catch+0x94>
10008a0c:	813ff915 	stw	r4,-28(r16)
10008a10:	11800015 	stw	r6,0(r2)
10008a14:	813fff17 	ldw	r4,-4(r16)
10008a18:	003fed06 	br	100089d0 <__cxa_begin_catch+0x50>
10008a1c:	01400044 	movi	r5,1
10008a20:	28c7c83a 	sub	r3,r5,r3
10008a24:	003ff406 	br	100089f8 <__cxa_begin_catch+0x78>
10008a28:	0008be00 	call	10008be0 <_ZSt9terminatev>

10008a2c <__cxa_end_catch>:
10008a2c:	deffff04 	addi	sp,sp,-4
10008a30:	dfc00015 	stw	ra,0(sp)
10008a34:	000cffc0 	call	1000cffc <__cxa_get_globals_fast>
10008a38:	11000017 	ldw	r4,0(r2)
10008a3c:	20001326 	beq	r4,zero,10008a8c <__cxa_end_catch+0x60>
10008a40:	20c00b17 	ldw	r3,44(r4)
10008a44:	21800c17 	ldw	r6,48(r4)
10008a48:	016f3574 	movhi	r5,48341
10008a4c:	29754004 	addi	r5,r5,-11008
10008a50:	01ee2cb4 	movhi	r7,47282
10008a54:	39eaaf04 	addi	r7,r7,-21828
10008a58:	194b883a 	add	r5,r3,r5
10008a5c:	28c7803a 	cmpltu	r3,r5,r3
10008a60:	31cd883a 	add	r6,r6,r7
10008a64:	1987883a 	add	r3,r3,r6
10008a68:	1800101e 	bne	r3,zero,10008aac <__cxa_end_catch+0x80>
10008a6c:	294000a8 	cmpgeui	r5,r5,2
10008a70:	28000e1e 	bne	r5,zero,10008aac <__cxa_end_catch+0x80>
10008a74:	20c00517 	ldw	r3,20(r4)
10008a78:	18000716 	blt	r3,zero,10008a98 <__cxa_end_catch+0x6c>
10008a7c:	18ffffc4 	addi	r3,r3,-1
10008a80:	18000f26 	beq	r3,zero,10008ac0 <__cxa_end_catch+0x94>
10008a84:	18001416 	blt	r3,zero,10008ad8 <__cxa_end_catch+0xac>
10008a88:	20c00515 	stw	r3,20(r4)
10008a8c:	dfc00017 	ldw	ra,0(sp)
10008a90:	dec00104 	addi	sp,sp,4
10008a94:	f800283a 	ret
10008a98:	18c00044 	addi	r3,r3,1
10008a9c:	183ffa1e 	bne	r3,zero,10008a88 <__cxa_end_catch+0x5c>
10008aa0:	21400417 	ldw	r5,16(r4)
10008aa4:	11400015 	stw	r5,0(r2)
10008aa8:	003ff706 	br	10008a88 <__cxa_end_catch+0x5c>
10008aac:	21000b04 	addi	r4,r4,44
10008ab0:	10000015 	stw	zero,0(r2)
10008ab4:	dfc00017 	ldw	ra,0(sp)
10008ab8:	dec00104 	addi	sp,sp,4
10008abc:	0014ecc1 	jmpi	10014ecc <_Unwind_DeleteException>
10008ac0:	20c00417 	ldw	r3,16(r4)
10008ac4:	21000b04 	addi	r4,r4,44
10008ac8:	10c00015 	stw	r3,0(r2)
10008acc:	dfc00017 	ldw	ra,0(sp)
10008ad0:	dec00104 	addi	sp,sp,4
10008ad4:	0014ecc1 	jmpi	10014ecc <_Unwind_DeleteException>
10008ad8:	0008be00 	call	10008be0 <_ZSt9terminatev>

10008adc <_ZSt18uncaught_exceptionv>:
10008adc:	deffff04 	addi	sp,sp,-4
10008ae0:	dfc00015 	stw	ra,0(sp)
10008ae4:	000d0080 	call	1000d008 <__cxa_get_globals>
10008ae8:	10800117 	ldw	r2,4(r2)
10008aec:	1004c03a 	cmpne	r2,r2,zero
10008af0:	dfc00017 	ldw	ra,0(sp)
10008af4:	dec00104 	addi	sp,sp,4
10008af8:	f800283a 	ret

10008afc <_ZSt19uncaught_exceptionsv>:
10008afc:	deffff04 	addi	sp,sp,-4
10008b00:	dfc00015 	stw	ra,0(sp)
10008b04:	000d0080 	call	1000d008 <__cxa_get_globals>
10008b08:	10800117 	ldw	r2,4(r2)
10008b0c:	dfc00017 	ldw	ra,0(sp)
10008b10:	dec00104 	addi	sp,sp,4
10008b14:	f800283a 	ret

10008b18 <_ZN10__cxxabiv111__terminateEPFvvE>:
10008b18:	00c400b4 	movhi	r3,4098
10008b1c:	deffef04 	addi	sp,sp,-68
10008b20:	18d35c04 	addi	r3,r3,19824
10008b24:	01440074 	movhi	r5,4097
10008b28:	00840074 	movhi	r2,4097
10008b2c:	10a2dd04 	addi	r2,r2,-29836
10008b30:	2964f504 	addi	r5,r5,-27692
10008b34:	d9000015 	stw	r4,0(sp)
10008b38:	d8c00915 	stw	r3,36(sp)
10008b3c:	d9000204 	addi	r4,sp,8
10008b40:	d8c00f04 	addi	r3,sp,60
10008b44:	d8800b15 	stw	r2,44(sp)
10008b48:	dfc01015 	stw	ra,64(sp)
10008b4c:	df000f15 	stw	fp,60(sp)
10008b50:	d9400815 	stw	r5,32(sp)
10008b54:	d8c00a15 	stw	r3,40(sp)
10008b58:	dec00c15 	stw	sp,48(sp)
10008b5c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10008b60:	00800044 	movi	r2,1
10008b64:	d8800315 	stw	r2,12(sp)
10008b68:	d8800017 	ldw	r2,0(sp)
10008b6c:	103ee83a 	callr	r2
10008b70:	0014f6c0 	call	10014f6c <abort>
10008b74:	d8c00417 	ldw	r3,16(sp)
10008b78:	d8800317 	ldw	r2,12(sp)
10008b7c:	d8c00015 	stw	r3,0(sp)
10008b80:	d8c00517 	ldw	r3,20(sp)
10008b84:	d8c00115 	stw	r3,4(sp)
10008b88:	1000051e 	bne	r2,zero,10008ba0 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
10008b8c:	d9000417 	ldw	r4,16(sp)
10008b90:	00089800 	call	10008980 <__cxa_begin_catch>
10008b94:	00800084 	movi	r2,2
10008b98:	d8800315 	stw	r2,12(sp)
10008b9c:	0014f6c0 	call	10014f6c <abort>
10008ba0:	10bfffc4 	addi	r2,r2,-1
10008ba4:	10000126 	beq	r2,zero,10008bac <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
10008ba8:	003b68fa 	trap	3
10008bac:	d8000315 	stw	zero,12(sp)
10008bb0:	0008a2c0 	call	10008a2c <__cxa_end_catch>
10008bb4:	d8c00117 	ldw	r3,4(sp)
10008bb8:	18bfffe0 	cmpeqi	r2,r3,-1
10008bbc:	1000041e 	bne	r2,zero,10008bd0 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
10008bc0:	d9000017 	ldw	r4,0(sp)
10008bc4:	00bfffc4 	movi	r2,-1
10008bc8:	d8800315 	stw	r2,12(sp)
10008bcc:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>
10008bd0:	d8800117 	ldw	r2,4(sp)
10008bd4:	d9000017 	ldw	r4,0(sp)
10008bd8:	d8800315 	stw	r2,12(sp)
10008bdc:	00099f80 	call	100099f8 <__cxa_call_unexpected>

10008be0 <_ZSt9terminatev>:
10008be0:	008400f4 	movhi	r2,4099
10008be4:	11219017 	ldw	r4,-31168(r2)
10008be8:	deffff04 	addi	sp,sp,-4
10008bec:	dfc00015 	stw	ra,0(sp)
10008bf0:	0008b180 	call	10008b18 <_ZN10__cxxabiv111__terminateEPFvvE>

10008bf4 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
10008bf4:	deffff04 	addi	sp,sp,-4
10008bf8:	dfc00015 	stw	ra,0(sp)
10008bfc:	203ee83a 	callr	r4
10008c00:	0008be00 	call	10008be0 <_ZSt9terminatev>

10008c04 <_ZSt10unexpectedv>:
10008c04:	008400f4 	movhi	r2,4099
10008c08:	11218917 	ldw	r4,-31196(r2)
10008c0c:	deffff04 	addi	sp,sp,-4
10008c10:	dfc00015 	stw	ra,0(sp)
10008c14:	0008bf40 	call	10008bf4 <_ZN10__cxxabiv112__unexpectedEPFvvE>

10008c18 <_ZSt13set_terminatePFvvE>:
10008c18:	00c400f4 	movhi	r3,4099
10008c1c:	008400f4 	movhi	r2,4099
10008c20:	10a19017 	ldw	r2,-31168(r2)
10008c24:	19219015 	stw	r4,-31168(r3)
10008c28:	f800283a 	ret

10008c2c <_ZSt13get_terminatev>:
10008c2c:	008400f4 	movhi	r2,4099
10008c30:	10a19017 	ldw	r2,-31168(r2)
10008c34:	f800283a 	ret

10008c38 <_ZSt14set_unexpectedPFvvE>:
10008c38:	00c400f4 	movhi	r3,4099
10008c3c:	008400f4 	movhi	r2,4099
10008c40:	10a18917 	ldw	r2,-31196(r2)
10008c44:	19218915 	stw	r4,-31196(r3)
10008c48:	f800283a 	ret

10008c4c <_ZSt14get_unexpectedv>:
10008c4c:	008400f4 	movhi	r2,4099
10008c50:	10a18917 	ldw	r2,-31196(r2)
10008c54:	f800283a 	ret

10008c58 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
10008c58:	defffe04 	addi	sp,sp,-8
10008c5c:	dfc00115 	stw	ra,4(sp)
10008c60:	dc000015 	stw	r16,0(sp)
10008c64:	210000b0 	cmpltui	r4,r4,2
10008c68:	20001326 	beq	r4,zero,10008cb8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
10008c6c:	28bff417 	ldw	r2,-48(r5)
10008c70:	10ffffc4 	addi	r3,r2,-1
10008c74:	28fff415 	stw	r3,-48(r5)
10008c78:	10800058 	cmpnei	r2,r2,1
10008c7c:	10000426 	beq	r2,zero,10008c90 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
10008c80:	dfc00117 	ldw	ra,4(sp)
10008c84:	dc000017 	ldw	r16,0(sp)
10008c88:	dec00204 	addi	sp,sp,8
10008c8c:	f800283a 	ret
10008c90:	28bff617 	ldw	r2,-40(r5)
10008c94:	2c000504 	addi	r16,r5,20
10008c98:	10000226 	beq	r2,zero,10008ca4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
10008c9c:	8009883a 	mov	r4,r16
10008ca0:	103ee83a 	callr	r2
10008ca4:	8009883a 	mov	r4,r16
10008ca8:	dfc00117 	ldw	ra,4(sp)
10008cac:	dc000017 	ldw	r16,0(sp)
10008cb0:	dec00204 	addi	sp,sp,8
10008cb4:	0009d941 	jmpi	10009d94 <__cxa_free_exception>
10008cb8:	293ff817 	ldw	r4,-32(r5)
10008cbc:	0008b180 	call	10008b18 <_ZN10__cxxabiv111__terminateEPFvvE>

10008cc0 <__cxa_init_primary_exception>:
10008cc0:	defffe04 	addi	sp,sp,-8
10008cc4:	dfc00115 	stw	ra,4(sp)
10008cc8:	dc000015 	stw	r16,0(sp)
10008ccc:	217ff015 	stw	r5,-64(r4)
10008cd0:	21bff115 	stw	r6,-60(r4)
10008cd4:	203fef15 	stw	zero,-68(r4)
10008cd8:	2021883a 	mov	r16,r4
10008cdc:	0008c4c0 	call	10008c4c <_ZSt14get_unexpectedv>
10008ce0:	80bff215 	stw	r2,-56(r16)
10008ce4:	0008c2c0 	call	10008c2c <_ZSt13get_terminatev>
10008ce8:	0150caf4 	movhi	r5,17195
10008cec:	0111d3b4 	movhi	r4,18254
10008cf0:	00c40074 	movhi	r3,4097
10008cf4:	294ac004 	addi	r5,r5,11008
10008cf8:	211550c4 	addi	r4,r4,21827
10008cfc:	18e31604 	addi	r3,r3,-29608
10008d00:	80bff315 	stw	r2,-52(r16)
10008d04:	80bfef04 	addi	r2,r16,-68
10008d08:	817ffb15 	stw	r5,-20(r16)
10008d0c:	813ffc15 	stw	r4,-16(r16)
10008d10:	80fffd15 	stw	r3,-12(r16)
10008d14:	dfc00117 	ldw	ra,4(sp)
10008d18:	dc000017 	ldw	r16,0(sp)
10008d1c:	dec00204 	addi	sp,sp,8
10008d20:	f800283a 	ret

10008d24 <__cxa_throw>:
10008d24:	defffb04 	addi	sp,sp,-20
10008d28:	dfc00415 	stw	ra,16(sp)
10008d2c:	dcc00315 	stw	r19,12(sp)
10008d30:	dc800215 	stw	r18,8(sp)
10008d34:	2827883a 	mov	r19,r5
10008d38:	3025883a 	mov	r18,r6
10008d3c:	dc400115 	stw	r17,4(sp)
10008d40:	dc000015 	stw	r16,0(sp)
10008d44:	2021883a 	mov	r16,r4
10008d48:	000d0080 	call	1000d008 <__cxa_get_globals>
10008d4c:	10c00117 	ldw	r3,4(r2)
10008d50:	847ffb04 	addi	r17,r16,-20
10008d54:	18c00044 	addi	r3,r3,1
10008d58:	10c00115 	stw	r3,4(r2)
10008d5c:	803fef15 	stw	zero,-68(r16)
10008d60:	84fff015 	stw	r19,-64(r16)
10008d64:	84bff115 	stw	r18,-60(r16)
10008d68:	0008c4c0 	call	10008c4c <_ZSt14get_unexpectedv>
10008d6c:	80bff215 	stw	r2,-56(r16)
10008d70:	0008c2c0 	call	10008c2c <_ZSt13get_terminatev>
10008d74:	0150caf4 	movhi	r5,17195
10008d78:	0111d3b4 	movhi	r4,18254
10008d7c:	00c40074 	movhi	r3,4097
10008d80:	294ac004 	addi	r5,r5,11008
10008d84:	18e31604 	addi	r3,r3,-29608
10008d88:	211550c4 	addi	r4,r4,21827
10008d8c:	80bff315 	stw	r2,-52(r16)
10008d90:	00800044 	movi	r2,1
10008d94:	817ffb15 	stw	r5,-20(r16)
10008d98:	813ffc15 	stw	r4,-16(r16)
10008d9c:	80fffd15 	stw	r3,-12(r16)
10008da0:	8809883a 	mov	r4,r17
10008da4:	80bfef15 	stw	r2,-68(r16)
10008da8:	0014d300 	call	10014d30 <_Unwind_SjLj_RaiseException>
10008dac:	8809883a 	mov	r4,r17
10008db0:	00089800 	call	10008980 <__cxa_begin_catch>
10008db4:	0008be00 	call	10008be0 <_ZSt9terminatev>

10008db8 <__cxa_rethrow>:
10008db8:	defffe04 	addi	sp,sp,-8
10008dbc:	dfc00115 	stw	ra,4(sp)
10008dc0:	dc000015 	stw	r16,0(sp)
10008dc4:	000d0080 	call	1000d008 <__cxa_get_globals>
10008dc8:	10c00117 	ldw	r3,4(r2)
10008dcc:	11000017 	ldw	r4,0(r2)
10008dd0:	18c00044 	addi	r3,r3,1
10008dd4:	10c00115 	stw	r3,4(r2)
10008dd8:	20001126 	beq	r4,zero,10008e20 <__cxa_rethrow+0x68>
10008ddc:	20c00b17 	ldw	r3,44(r4)
10008de0:	21800c17 	ldw	r6,48(r4)
10008de4:	016f3574 	movhi	r5,48341
10008de8:	29754004 	addi	r5,r5,-11008
10008dec:	01ee2cb4 	movhi	r7,47282
10008df0:	39eaaf04 	addi	r7,r7,-21828
10008df4:	194b883a 	add	r5,r3,r5
10008df8:	28c7803a 	cmpltu	r3,r5,r3
10008dfc:	31cd883a 	add	r6,r6,r7
10008e00:	1987883a 	add	r3,r3,r6
10008e04:	18000726 	beq	r3,zero,10008e24 <__cxa_rethrow+0x6c>
10008e08:	10000015 	stw	zero,0(r2)
10008e0c:	24000b04 	addi	r16,r4,44
10008e10:	8009883a 	mov	r4,r16
10008e14:	0014e800 	call	10014e80 <_Unwind_SjLj_Resume_or_Rethrow>
10008e18:	8009883a 	mov	r4,r16
10008e1c:	00089800 	call	10008980 <__cxa_begin_catch>
10008e20:	0008be00 	call	10008be0 <_ZSt9terminatev>
10008e24:	294000a8 	cmpgeui	r5,r5,2
10008e28:	283ff71e 	bne	r5,zero,10008e08 <__cxa_rethrow+0x50>
10008e2c:	20800517 	ldw	r2,20(r4)
10008e30:	0085c83a 	sub	r2,zero,r2
10008e34:	20800515 	stw	r2,20(r4)
10008e38:	003ff406 	br	10008e0c <__cxa_rethrow+0x54>

10008e3c <_ZdlPv>:
10008e3c:	00162bc1 	jmpi	100162bc <free>

10008e40 <_ZNKSt9bad_alloc4whatEv>:
10008e40:	008400b4 	movhi	r2,4098
10008e44:	1096a904 	addi	r2,r2,23204
10008e48:	f800283a 	ret

10008e4c <_ZNSt9bad_allocD1Ev>:
10008e4c:	008400b4 	movhi	r2,4098
10008e50:	1096b604 	addi	r2,r2,23256
10008e54:	20800015 	stw	r2,0(r4)
10008e58:	000d0141 	jmpi	1000d014 <_ZNSt9exceptionD1Ev>

10008e5c <_ZNSt9bad_allocD0Ev>:
10008e5c:	defffe04 	addi	sp,sp,-8
10008e60:	008400b4 	movhi	r2,4098
10008e64:	dc000015 	stw	r16,0(sp)
10008e68:	dfc00115 	stw	ra,4(sp)
10008e6c:	1096b604 	addi	r2,r2,23256
10008e70:	20800015 	stw	r2,0(r4)
10008e74:	2021883a 	mov	r16,r4
10008e78:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
10008e7c:	01400104 	movi	r5,4
10008e80:	8009883a 	mov	r4,r16
10008e84:	dfc00117 	ldw	ra,4(sp)
10008e88:	dc000017 	ldw	r16,0(sp)
10008e8c:	dec00204 	addi	sp,sp,8
10008e90:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

10008e94 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
10008e94:	28800017 	ldw	r2,0(r5)
10008e98:	30c00017 	ldw	r3,0(r6)
10008e9c:	defffb04 	addi	sp,sp,-20
10008ea0:	10800217 	ldw	r2,8(r2)
10008ea4:	dc400315 	stw	r17,12(sp)
10008ea8:	dc000215 	stw	r16,8(sp)
10008eac:	d9400015 	stw	r5,0(sp)
10008eb0:	dfc00415 	stw	ra,16(sp)
10008eb4:	2021883a 	mov	r16,r4
10008eb8:	d8c00115 	stw	r3,4(sp)
10008ebc:	2809883a 	mov	r4,r5
10008ec0:	3023883a 	mov	r17,r6
10008ec4:	103ee83a 	callr	r2
10008ec8:	10803fcc 	andi	r2,r2,255
10008ecc:	d9400017 	ldw	r5,0(sp)
10008ed0:	10000326 	beq	r2,zero,10008ee0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
10008ed4:	d8800117 	ldw	r2,4(sp)
10008ed8:	10800017 	ldw	r2,0(r2)
10008edc:	d8800115 	stw	r2,4(sp)
10008ee0:	80800017 	ldw	r2,0(r16)
10008ee4:	01c00044 	movi	r7,1
10008ee8:	d9800104 	addi	r6,sp,4
10008eec:	10800417 	ldw	r2,16(r2)
10008ef0:	8009883a 	mov	r4,r16
10008ef4:	103ee83a 	callr	r2
10008ef8:	10c03fcc 	andi	r3,r2,255
10008efc:	18000226 	beq	r3,zero,10008f08 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
10008f00:	d8c00117 	ldw	r3,4(sp)
10008f04:	88c00015 	stw	r3,0(r17)
10008f08:	dfc00417 	ldw	ra,16(sp)
10008f0c:	dc400317 	ldw	r17,12(sp)
10008f10:	dc000217 	ldw	r16,8(sp)
10008f14:	dec00504 	addi	sp,sp,20
10008f18:	f800283a 	ret

10008f1c <_ZL28read_encoded_value_with_basehjPKhPj>:
10008f1c:	20c03fcc 	andi	r3,r4,255
10008f20:	18c01418 	cmpnei	r3,r3,80
10008f24:	18002c26 	beq	r3,zero,10008fd8 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
10008f28:	208003cc 	andi	r2,r4,15
10008f2c:	10c00368 	cmpgeui	r3,r2,13
10008f30:	1800711e 	bne	r3,zero,100090f8 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
10008f34:	100490ba 	slli	r2,r2,2
10008f38:	00c40074 	movhi	r3,4097
10008f3c:	10c7883a 	add	r3,r2,r3
10008f40:	18a3d217 	ldw	r2,-28856(r3)
10008f44:	1000683a 	jmp	r2
10008f48:	10008f7c 	xorhi	zero,r2,573
10008f4c:	100090c0 	call	1100090c <_gp+0xfd02f0>
10008f50:	10009030 	cmpltui	zero,r2,576
10008f54:	10008f7c 	xorhi	zero,r2,573
10008f58:	10008ff4 	orhi	zero,r2,575
10008f5c:	100090f8 	rdprs	zero,r2,579
10008f60:	100090f8 	rdprs	zero,r2,579
10008f64:	100090f8 	rdprs	zero,r2,579
10008f68:	100090f8 	rdprs	zero,r2,579
10008f6c:	1000906c 	andhi	zero,r2,577
10008f70:	10009048 	cmpgei	zero,r2,577
10008f74:	10008f7c 	xorhi	zero,r2,573
10008f78:	10008ff4 	orhi	zero,r2,575
10008f7c:	32000043 	ldbu	r8,1(r6)
10008f80:	30800083 	ldbu	r2,2(r6)
10008f84:	30c000c3 	ldbu	r3,3(r6)
10008f88:	32400003 	ldbu	r9,0(r6)
10008f8c:	4010923a 	slli	r8,r8,8
10008f90:	1004943a 	slli	r2,r2,16
10008f94:	1806963a 	slli	r3,r3,24
10008f98:	4250b03a 	or	r8,r8,r9
10008f9c:	1204b03a 	or	r2,r2,r8
10008fa0:	1886b03a 	or	r3,r3,r2
10008fa4:	30800104 	addi	r2,r6,4
10008fa8:	18000926 	beq	r3,zero,10008fd0 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
10008fac:	22001c0c 	andi	r8,r4,112
10008fb0:	42000418 	cmpnei	r8,r8,16
10008fb4:	4000011e 	bne	r8,zero,10008fbc <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
10008fb8:	300b883a 	mov	r5,r6
10008fbc:	21003fcc 	andi	r4,r4,255
10008fc0:	2100201c 	xori	r4,r4,128
10008fc4:	213fe004 	addi	r4,r4,-128
10008fc8:	1947883a 	add	r3,r3,r5
10008fcc:	20001516 	blt	r4,zero,10009024 <_ZL28read_encoded_value_with_basehjPKhPj+0x108>
10008fd0:	38c00015 	stw	r3,0(r7)
10008fd4:	f800283a 	ret
10008fd8:	308000c4 	addi	r2,r6,3
10008fdc:	01bfff04 	movi	r6,-4
10008fe0:	1184703a 	and	r2,r2,r6
10008fe4:	10c00017 	ldw	r3,0(r2)
10008fe8:	10800104 	addi	r2,r2,4
10008fec:	38c00015 	stw	r3,0(r7)
10008ff0:	f800283a 	ret
10008ff4:	32000043 	ldbu	r8,1(r6)
10008ff8:	30800083 	ldbu	r2,2(r6)
10008ffc:	30c000c3 	ldbu	r3,3(r6)
10009000:	32400003 	ldbu	r9,0(r6)
10009004:	4010923a 	slli	r8,r8,8
10009008:	1004943a 	slli	r2,r2,16
1000900c:	1806963a 	slli	r3,r3,24
10009010:	4250b03a 	or	r8,r8,r9
10009014:	1204b03a 	or	r2,r2,r8
10009018:	1886b03a 	or	r3,r3,r2
1000901c:	30800204 	addi	r2,r6,8
10009020:	003fe106 	br	10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10009024:	18c00017 	ldw	r3,0(r3)
10009028:	38c00015 	stw	r3,0(r7)
1000902c:	f800283a 	ret
10009030:	30c00043 	ldbu	r3,1(r6)
10009034:	32000003 	ldbu	r8,0(r6)
10009038:	30800084 	addi	r2,r6,2
1000903c:	1806923a 	slli	r3,r3,8
10009040:	1a06b03a 	or	r3,r3,r8
10009044:	003fd806 	br	10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10009048:	30c00043 	ldbu	r3,1(r6)
1000904c:	32000003 	ldbu	r8,0(r6)
10009050:	30800084 	addi	r2,r6,2
10009054:	1806923a 	slli	r3,r3,8
10009058:	1a06b03a 	or	r3,r3,r8
1000905c:	18ffffcc 	andi	r3,r3,65535
10009060:	18e0001c 	xori	r3,r3,32768
10009064:	18e00004 	addi	r3,r3,-32768
10009068:	003fcf06 	br	10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
1000906c:	3005883a 	mov	r2,r6
10009070:	0007883a 	mov	r3,zero
10009074:	0013883a 	mov	r9,zero
10009078:	10800044 	addi	r2,r2,1
1000907c:	12bfffc3 	ldbu	r10,-1(r2)
10009080:	52001fcc 	andi	r8,r10,127
10009084:	4250983a 	sll	r8,r8,r9
10009088:	52c03fcc 	andi	r11,r10,255
1000908c:	5ac0201c 	xori	r11,r11,128
10009090:	5affe004 	addi	r11,r11,-128
10009094:	1a06b03a 	or	r3,r3,r8
10009098:	4a4001c4 	addi	r9,r9,7
1000909c:	583ff616 	blt	r11,zero,10009078 <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
100090a0:	4a000828 	cmpgeui	r8,r9,32
100090a4:	403fc01e 	bne	r8,zero,10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100090a8:	5280100c 	andi	r10,r10,64
100090ac:	503fbe26 	beq	r10,zero,10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100090b0:	023fffc4 	movi	r8,-1
100090b4:	4252983a 	sll	r9,r8,r9
100090b8:	1a46b03a 	or	r3,r3,r9
100090bc:	003fbb06 	br	10008fac <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
100090c0:	3005883a 	mov	r2,r6
100090c4:	0007883a 	mov	r3,zero
100090c8:	0015883a 	mov	r10,zero
100090cc:	10800044 	addi	r2,r2,1
100090d0:	123fffc3 	ldbu	r8,-1(r2)
100090d4:	42401fcc 	andi	r9,r8,127
100090d8:	4a92983a 	sll	r9,r9,r10
100090dc:	42003fcc 	andi	r8,r8,255
100090e0:	4200201c 	xori	r8,r8,128
100090e4:	423fe004 	addi	r8,r8,-128
100090e8:	1a46b03a 	or	r3,r3,r9
100090ec:	528001c4 	addi	r10,r10,7
100090f0:	403ff616 	blt	r8,zero,100090cc <_ZL28read_encoded_value_with_basehjPKhPj+0x1b0>
100090f4:	003fac06 	br	10008fa8 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100090f8:	deffff04 	addi	sp,sp,-4
100090fc:	dfc00015 	stw	ra,0(sp)
10009100:	0014f6c0 	call	10014f6c <abort>

10009104 <_ZL15get_ttype_entryP16lsda_header_infom>:
10009104:	defffe04 	addi	sp,sp,-8
10009108:	dfc00115 	stw	ra,4(sp)
1000910c:	20800503 	ldbu	r2,20(r4)
10009110:	10c03fcc 	andi	r3,r2,255
10009114:	19803fe0 	cmpeqi	r6,r3,255
10009118:	30001c1e 	bne	r6,zero,1000918c <_ZL15get_ttype_entryP16lsda_header_infom+0x88>
1000911c:	108001cc 	andi	r2,r2,7
10009120:	118000a0 	cmpeqi	r6,r2,2
10009124:	3000161e 	bne	r6,zero,10009180 <_ZL15get_ttype_entryP16lsda_header_infom+0x7c>
10009128:	118000e8 	cmpgeui	r6,r2,3
1000912c:	30001026 	beq	r6,zero,10009170 <_ZL15get_ttype_entryP16lsda_header_infom+0x6c>
10009130:	118000e0 	cmpeqi	r6,r2,3
10009134:	30000f1e 	bne	r6,zero,10009174 <_ZL15get_ttype_entryP16lsda_header_infom+0x70>
10009138:	10800120 	cmpeqi	r2,r2,4
1000913c:	10001526 	beq	r2,zero,10009194 <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
10009140:	280a90fa 	slli	r5,r5,3
10009144:	014dc83a 	sub	r6,zero,r5
10009148:	20800317 	ldw	r2,12(r4)
1000914c:	21400217 	ldw	r5,8(r4)
10009150:	d80f883a 	mov	r7,sp
10009154:	118d883a 	add	r6,r2,r6
10009158:	1809883a 	mov	r4,r3
1000915c:	0008f1c0 	call	10008f1c <_ZL28read_encoded_value_with_basehjPKhPj>
10009160:	d8800017 	ldw	r2,0(sp)
10009164:	dfc00117 	ldw	ra,4(sp)
10009168:	dec00204 	addi	sp,sp,8
1000916c:	f800283a 	ret
10009170:	1000081e 	bne	r2,zero,10009194 <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
10009174:	280a90ba 	slli	r5,r5,2
10009178:	014dc83a 	sub	r6,zero,r5
1000917c:	003ff206 	br	10009148 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10009180:	294b883a 	add	r5,r5,r5
10009184:	014dc83a 	sub	r6,zero,r5
10009188:	003fef06 	br	10009148 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
1000918c:	000d883a 	mov	r6,zero
10009190:	003fed06 	br	10009148 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10009194:	0014f6c0 	call	10014f6c <abort>

10009198 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
10009198:	defffb04 	addi	sp,sp,-20
1000919c:	dc000115 	stw	r16,4(sp)
100091a0:	24000317 	ldw	r16,12(r4)
100091a4:	01ce303a 	nor	r7,zero,r7
100091a8:	dc800315 	stw	r18,12(sp)
100091ac:	dc400215 	stw	r17,8(sp)
100091b0:	dfc00415 	stw	ra,16(sp)
100091b4:	2023883a 	mov	r17,r4
100091b8:	2825883a 	mov	r18,r5
100091bc:	d9800015 	stw	r6,0(sp)
100091c0:	81e1883a 	add	r16,r16,r7
100091c4:	000b883a 	mov	r5,zero
100091c8:	0009883a 	mov	r4,zero
100091cc:	84000044 	addi	r16,r16,1
100091d0:	80bfffc3 	ldbu	r2,-1(r16)
100091d4:	10c01fcc 	andi	r3,r2,127
100091d8:	1906983a 	sll	r3,r3,r4
100091dc:	10803fcc 	andi	r2,r2,255
100091e0:	1080201c 	xori	r2,r2,128
100091e4:	10bfe004 	addi	r2,r2,-128
100091e8:	28cab03a 	or	r5,r5,r3
100091ec:	210001c4 	addi	r4,r4,7
100091f0:	103ff616 	blt	r2,zero,100091cc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
100091f4:	28000e26 	beq	r5,zero,10009230 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x98>
100091f8:	8809883a 	mov	r4,r17
100091fc:	00091040 	call	10009104 <_ZL15get_ttype_entryP16lsda_header_infom>
10009200:	d80d883a 	mov	r6,sp
10009204:	900b883a 	mov	r5,r18
10009208:	1009883a 	mov	r4,r2
1000920c:	0008e940 	call	10008e94 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
10009210:	10c03fcc 	andi	r3,r2,255
10009214:	183feb26 	beq	r3,zero,100091c4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
10009218:	dfc00417 	ldw	ra,16(sp)
1000921c:	dc800317 	ldw	r18,12(sp)
10009220:	dc400217 	ldw	r17,8(sp)
10009224:	dc000117 	ldw	r16,4(sp)
10009228:	dec00504 	addi	sp,sp,20
1000922c:	f800283a 	ret
10009230:	0005883a 	mov	r2,zero
10009234:	003ff806 	br	10009218 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x80>

10009238 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
10009238:	20803fcc 	andi	r2,r4,255
1000923c:	10803fe0 	cmpeqi	r2,r2,255
10009240:	1000101e 	bne	r2,zero,10009284 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10009244:	20801c0c 	andi	r2,r4,112
10009248:	10c00820 	cmpeqi	r3,r2,32
1000924c:	1800111e 	bne	r3,zero,10009294 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
10009250:	10c00868 	cmpgeui	r3,r2,33
10009254:	18000826 	beq	r3,zero,10009278 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
10009258:	10c01020 	cmpeqi	r3,r2,64
1000925c:	18000b1e 	bne	r3,zero,1000928c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x54>
10009260:	10c01420 	cmpeqi	r3,r2,80
10009264:	1800071e 	bne	r3,zero,10009284 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10009268:	10800c20 	cmpeqi	r2,r2,48
1000926c:	10000b26 	beq	r2,zero,1000929c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
10009270:	2809883a 	mov	r4,r5
10009274:	0014d201 	jmpi	10014d20 <_Unwind_GetDataRelBase>
10009278:	10000226 	beq	r2,zero,10009284 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
1000927c:	10800420 	cmpeqi	r2,r2,16
10009280:	10000626 	beq	r2,zero,1000929c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
10009284:	0005883a 	mov	r2,zero
10009288:	f800283a 	ret
1000928c:	2809883a 	mov	r4,r5
10009290:	0014d101 	jmpi	10014d10 <_Unwind_GetRegionStart>
10009294:	2809883a 	mov	r4,r5
10009298:	0014d281 	jmpi	10014d28 <_Unwind_GetTextRelBase>
1000929c:	deffff04 	addi	sp,sp,-4
100092a0:	dfc00015 	stw	ra,0(sp)
100092a4:	0014f6c0 	call	10014f6c <abort>

100092a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
100092a8:	defffb04 	addi	sp,sp,-20
100092ac:	dcc00315 	stw	r19,12(sp)
100092b0:	dc400115 	stw	r17,4(sp)
100092b4:	dc000015 	stw	r16,0(sp)
100092b8:	dfc00415 	stw	ra,16(sp)
100092bc:	dc800215 	stw	r18,8(sp)
100092c0:	2027883a 	mov	r19,r4
100092c4:	2821883a 	mov	r16,r5
100092c8:	3023883a 	mov	r17,r6
100092cc:	20003d26 	beq	r4,zero,100093c4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
100092d0:	0014d100 	call	10014d10 <_Unwind_GetRegionStart>
100092d4:	88800015 	stw	r2,0(r17)
100092d8:	84800003 	ldbu	r18,0(r16)
100092dc:	84000044 	addi	r16,r16,1
100092e0:	90c03fe0 	cmpeqi	r3,r18,255
100092e4:	18002d26 	beq	r3,zero,1000939c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
100092e8:	88800115 	stw	r2,4(r17)
100092ec:	81000003 	ldbu	r4,0(r16)
100092f0:	80800044 	addi	r2,r16,1
100092f4:	20c03fcc 	andi	r3,r4,255
100092f8:	89000505 	stb	r4,20(r17)
100092fc:	18c03fe0 	cmpeqi	r3,r3,255
10009300:	1800321e 	bne	r3,zero,100093cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
10009304:	000d883a 	mov	r6,zero
10009308:	000b883a 	mov	r5,zero
1000930c:	10800044 	addi	r2,r2,1
10009310:	10ffffc3 	ldbu	r3,-1(r2)
10009314:	19001fcc 	andi	r4,r3,127
10009318:	2148983a 	sll	r4,r4,r5
1000931c:	18c03fcc 	andi	r3,r3,255
10009320:	18c0201c 	xori	r3,r3,128
10009324:	18ffe004 	addi	r3,r3,-128
10009328:	310cb03a 	or	r6,r6,r4
1000932c:	294001c4 	addi	r5,r5,7
10009330:	183ff616 	blt	r3,zero,1000930c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
10009334:	118d883a 	add	r6,r2,r6
10009338:	89800315 	stw	r6,12(r17)
1000933c:	10c00003 	ldbu	r3,0(r2)
10009340:	000d883a 	mov	r6,zero
10009344:	10800044 	addi	r2,r2,1
10009348:	88c00545 	stb	r3,21(r17)
1000934c:	000b883a 	mov	r5,zero
10009350:	10800044 	addi	r2,r2,1
10009354:	10ffffc3 	ldbu	r3,-1(r2)
10009358:	19001fcc 	andi	r4,r3,127
1000935c:	2148983a 	sll	r4,r4,r5
10009360:	18c03fcc 	andi	r3,r3,255
10009364:	18c0201c 	xori	r3,r3,128
10009368:	18ffe004 	addi	r3,r3,-128
1000936c:	310cb03a 	or	r6,r6,r4
10009370:	294001c4 	addi	r5,r5,7
10009374:	183ff616 	blt	r3,zero,10009350 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
10009378:	118d883a 	add	r6,r2,r6
1000937c:	89800415 	stw	r6,16(r17)
10009380:	dfc00417 	ldw	ra,16(sp)
10009384:	dcc00317 	ldw	r19,12(sp)
10009388:	dc800217 	ldw	r18,8(sp)
1000938c:	dc400117 	ldw	r17,4(sp)
10009390:	dc000017 	ldw	r16,0(sp)
10009394:	dec00504 	addi	sp,sp,20
10009398:	f800283a 	ret
1000939c:	980b883a 	mov	r5,r19
100093a0:	9009883a 	mov	r4,r18
100093a4:	00092380 	call	10009238 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
100093a8:	800d883a 	mov	r6,r16
100093ac:	89c00104 	addi	r7,r17,4
100093b0:	100b883a 	mov	r5,r2
100093b4:	9009883a 	mov	r4,r18
100093b8:	0008f1c0 	call	10008f1c <_ZL28read_encoded_value_with_basehjPKhPj>
100093bc:	1021883a 	mov	r16,r2
100093c0:	003fca06 	br	100092ec <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
100093c4:	0005883a 	mov	r2,zero
100093c8:	003fc206 	br	100092d4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
100093cc:	88000315 	stw	zero,12(r17)
100093d0:	003fda06 	br	1000933c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

100093d4 <__gxx_personality_sj0>:
100093d4:	00c400b4 	movhi	r3,4098
100093d8:	deffdc04 	addi	sp,sp,-144
100093dc:	18d36204 	addi	r3,r3,19848
100093e0:	02040074 	movhi	r8,4097
100093e4:	00840074 	movhi	r2,4097
100093e8:	10a67304 	addi	r2,r2,-26164
100093ec:	4224f504 	addi	r8,r8,-27692
100093f0:	d9000015 	stw	r4,0(sp)
100093f4:	d8c01415 	stw	r3,80(sp)
100093f8:	d9000d04 	addi	r4,sp,52
100093fc:	d8c02204 	addi	r3,sp,136
10009400:	d8801615 	stw	r2,88(sp)
10009404:	dfc02315 	stw	ra,140(sp)
10009408:	df002215 	stw	fp,136(sp)
1000940c:	da001315 	stw	r8,76(sp)
10009410:	d8c01515 	stw	r3,84(sp)
10009414:	dec01715 	stw	sp,92(sp)
10009418:	d9400315 	stw	r5,12(sp)
1000941c:	d9800115 	stw	r6,4(sp)
10009420:	d9c00215 	stw	r7,8(sp)
10009424:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10009428:	d8800017 	ldw	r2,0(sp)
1000942c:	d8001a15 	stw	zero,104(sp)
10009430:	d8001b15 	stw	zero,108(sp)
10009434:	10800058 	cmpnei	r2,r2,1
10009438:	1000481e 	bne	r2,zero,1000955c <__gxx_personality_sj0+0x188>
1000943c:	d9800117 	ldw	r6,4(sp)
10009440:	00af3574 	movhi	r2,48341
10009444:	10b54004 	addi	r2,r2,-11008
10009448:	3085883a 	add	r2,r6,r2
1000944c:	d8800715 	stw	r2,28(sp)
10009450:	1185803a 	cmpltu	r2,r2,r6
10009454:	d9800217 	ldw	r6,8(sp)
10009458:	00ee2cb4 	movhi	r3,47282
1000945c:	18eaaf04 	addi	r3,r3,-21828
10009460:	d9000317 	ldw	r4,12(sp)
10009464:	30c7883a 	add	r3,r6,r3
10009468:	10c7883a 	add	r3,r2,r3
1000946c:	21000198 	cmpnei	r4,r4,6
10009470:	d8c00615 	stw	r3,24(sp)
10009474:	2000011e 	bne	r4,zero,1000947c <__gxx_personality_sj0+0xa8>
10009478:	1800d026 	beq	r3,zero,100097bc <__gxx_personality_sj0+0x3e8>
1000947c:	d9002517 	ldw	r4,148(sp)
10009480:	00bfffc4 	movi	r2,-1
10009484:	d8800e15 	stw	r2,56(sp)
10009488:	0014d040 	call	10014d04 <_Unwind_GetLanguageSpecificData>
1000948c:	d8800515 	stw	r2,20(sp)
10009490:	10006126 	beq	r2,zero,10009618 <__gxx_personality_sj0+0x244>
10009494:	d9002517 	ldw	r4,148(sp)
10009498:	d9400517 	ldw	r5,20(sp)
1000949c:	d9801c04 	addi	r6,sp,112
100094a0:	00bfffc4 	movi	r2,-1
100094a4:	d8800e15 	stw	r2,56(sp)
100094a8:	00092a80 	call	100092a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
100094ac:	d9402517 	ldw	r5,148(sp)
100094b0:	d9002103 	ldbu	r4,132(sp)
100094b4:	d8800015 	stw	r2,0(sp)
100094b8:	00092380 	call	10009238 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
100094bc:	d9002517 	ldw	r4,148(sp)
100094c0:	d9401b04 	addi	r5,sp,108
100094c4:	d8801e15 	stw	r2,120(sp)
100094c8:	0014cd40 	call	10014cd4 <_Unwind_GetIPInfo>
100094cc:	1007883a 	mov	r3,r2
100094d0:	d8800115 	stw	r2,4(sp)
100094d4:	d8801b17 	ldw	r2,108(sp)
100094d8:	10005226 	beq	r2,zero,10009624 <__gxx_personality_sj0+0x250>
100094dc:	d8800117 	ldw	r2,4(sp)
100094e0:	10004d16 	blt	r2,zero,10009618 <__gxx_personality_sj0+0x244>
100094e4:	1000381e 	bne	r2,zero,100095c8 <__gxx_personality_sj0+0x1f4>
100094e8:	d8000415 	stw	zero,16(sp)
100094ec:	d8000215 	stw	zero,8(sp)
100094f0:	00800044 	movi	r2,1
100094f4:	d8c00317 	ldw	r3,12(sp)
100094f8:	18c0004c 	andi	r3,r3,1
100094fc:	1800f51e 	bne	r3,zero,100098d4 <__gxx_personality_sj0+0x500>
10009500:	d8c00317 	ldw	r3,12(sp)
10009504:	18c0020c 	andi	r3,r3,8
10009508:	1800b526 	beq	r3,zero,100097e0 <__gxx_personality_sj0+0x40c>
1000950c:	10800058 	cmpnei	r2,r2,1
10009510:	10013026 	beq	r2,zero,100099d4 <__gxx_personality_sj0+0x600>
10009514:	d8800417 	ldw	r2,16(sp)
10009518:	10012916 	blt	r2,zero,100099c0 <__gxx_personality_sj0+0x5ec>
1000951c:	d9002517 	ldw	r4,148(sp)
10009520:	d9802417 	ldw	r6,144(sp)
10009524:	00bfffc4 	movi	r2,-1
10009528:	000b883a 	mov	r5,zero
1000952c:	d8800e15 	stw	r2,56(sp)
10009530:	0014cac0 	call	10014cac <_Unwind_SetGR>
10009534:	d9800417 	ldw	r6,16(sp)
10009538:	d9002517 	ldw	r4,148(sp)
1000953c:	01400044 	movi	r5,1
10009540:	0014cac0 	call	10014cac <_Unwind_SetGR>
10009544:	d9400117 	ldw	r5,4(sp)
10009548:	d9002517 	ldw	r4,148(sp)
1000954c:	0014cf40 	call	10014cf4 <_Unwind_SetIP>
10009550:	008001c4 	movi	r2,7
10009554:	d8800015 	stw	r2,0(sp)
10009558:	00000206 	br	10009564 <__gxx_personality_sj0+0x190>
1000955c:	008000c4 	movi	r2,3
10009560:	d8800015 	stw	r2,0(sp)
10009564:	d9000d04 	addi	r4,sp,52
10009568:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000956c:	d8800017 	ldw	r2,0(sp)
10009570:	dfc02317 	ldw	ra,140(sp)
10009574:	df002217 	ldw	fp,136(sp)
10009578:	dec02404 	addi	sp,sp,144
1000957c:	f800283a 	ret
10009580:	000b883a 	mov	r5,zero
10009584:	0009883a 	mov	r4,zero
10009588:	d8800017 	ldw	r2,0(sp)
1000958c:	10800044 	addi	r2,r2,1
10009590:	d8800015 	stw	r2,0(sp)
10009594:	10bfffc3 	ldbu	r2,-1(r2)
10009598:	10c01fcc 	andi	r3,r2,127
1000959c:	1906983a 	sll	r3,r3,r4
100095a0:	10803fcc 	andi	r2,r2,255
100095a4:	1080201c 	xori	r2,r2,128
100095a8:	10bfe004 	addi	r2,r2,-128
100095ac:	28cab03a 	or	r5,r5,r3
100095b0:	210001c4 	addi	r4,r4,7
100095b4:	103ff416 	blt	r2,zero,10009588 <__gxx_personality_sj0+0x1b4>
100095b8:	d8800117 	ldw	r2,4(sp)
100095bc:	10bfffc4 	addi	r2,r2,-1
100095c0:	d8800115 	stw	r2,4(sp)
100095c4:	10001a26 	beq	r2,zero,10009630 <__gxx_personality_sj0+0x25c>
100095c8:	000d883a 	mov	r6,zero
100095cc:	0009883a 	mov	r4,zero
100095d0:	d8800017 	ldw	r2,0(sp)
100095d4:	10800044 	addi	r2,r2,1
100095d8:	d8800015 	stw	r2,0(sp)
100095dc:	10bfffc3 	ldbu	r2,-1(r2)
100095e0:	10c01fcc 	andi	r3,r2,127
100095e4:	1906983a 	sll	r3,r3,r4
100095e8:	10803fcc 	andi	r2,r2,255
100095ec:	1080201c 	xori	r2,r2,128
100095f0:	10bfe004 	addi	r2,r2,-128
100095f4:	30ccb03a 	or	r6,r6,r3
100095f8:	210001c4 	addi	r4,r4,7
100095fc:	103ff416 	blt	r2,zero,100095d0 <__gxx_personality_sj0+0x1fc>
10009600:	003fdf06 	br	10009580 <__gxx_personality_sj0+0x1ac>
10009604:	d88008c3 	ldbu	r2,35(sp)
10009608:	10000326 	beq	r2,zero,10009618 <__gxx_personality_sj0+0x244>
1000960c:	d8800317 	ldw	r2,12(sp)
10009610:	1080004c 	andi	r2,r2,1
10009614:	1000e226 	beq	r2,zero,100099a0 <__gxx_personality_sj0+0x5cc>
10009618:	00800204 	movi	r2,8
1000961c:	d8800015 	stw	r2,0(sp)
10009620:	003fd006 	br	10009564 <__gxx_personality_sj0+0x190>
10009624:	18bfffc4 	addi	r2,r3,-1
10009628:	d8800115 	stw	r2,4(sp)
1000962c:	003fab06 	br	100094dc <__gxx_personality_sj0+0x108>
10009630:	30800044 	addi	r2,r6,1
10009634:	d8800b15 	stw	r2,44(sp)
10009638:	283ff326 	beq	r5,zero,10009608 <__gxx_personality_sj0+0x234>
1000963c:	d8800b17 	ldw	r2,44(sp)
10009640:	103ff526 	beq	r2,zero,10009618 <__gxx_personality_sj0+0x244>
10009644:	d8802017 	ldw	r2,128(sp)
10009648:	297fffc4 	addi	r5,r5,-1
1000964c:	1145883a 	add	r2,r2,r5
10009650:	d8800215 	stw	r2,8(sp)
10009654:	103fed26 	beq	r2,zero,1000960c <__gxx_personality_sj0+0x238>
10009658:	d8800317 	ldw	r2,12(sp)
1000965c:	1080020c 	andi	r2,r2,8
10009660:	d8800a15 	stw	r2,40(sp)
10009664:	1000a71e 	bne	r2,zero,10009904 <__gxx_personality_sj0+0x530>
10009668:	d8800617 	ldw	r2,24(sp)
1000966c:	1000bc26 	beq	r2,zero,10009960 <__gxx_personality_sj0+0x58c>
10009670:	008400f4 	movhi	r2,4099
10009674:	10a18e04 	addi	r2,r2,-31176
10009678:	d8800915 	stw	r2,36(sp)
1000967c:	d8800717 	ldw	r2,28(sp)
10009680:	d80008c5 	stb	zero,35(sp)
10009684:	108000a8 	cmpgeui	r2,r2,2
10009688:	d8800c15 	stw	r2,48(sp)
1000968c:	d8800217 	ldw	r2,8(sp)
10009690:	000b883a 	mov	r5,zero
10009694:	0007883a 	mov	r3,zero
10009698:	d8800015 	stw	r2,0(sp)
1000969c:	d8800017 	ldw	r2,0(sp)
100096a0:	10800044 	addi	r2,r2,1
100096a4:	113fffc3 	ldbu	r4,-1(r2)
100096a8:	d8800015 	stw	r2,0(sp)
100096ac:	20801fcc 	andi	r2,r4,127
100096b0:	10c4983a 	sll	r2,r2,r3
100096b4:	21803fcc 	andi	r6,r4,255
100096b8:	3180201c 	xori	r6,r6,128
100096bc:	31bfe004 	addi	r6,r6,-128
100096c0:	288ab03a 	or	r5,r5,r2
100096c4:	18c001c4 	addi	r3,r3,7
100096c8:	303ff416 	blt	r6,zero,1000969c <__gxx_personality_sj0+0x2c8>
100096cc:	18800828 	cmpgeui	r2,r3,32
100096d0:	1000061e 	bne	r2,zero,100096ec <__gxx_personality_sj0+0x318>
100096d4:	2100100c 	andi	r4,r4,64
100096d8:	20000426 	beq	r4,zero,100096ec <__gxx_personality_sj0+0x318>
100096dc:	00800044 	movi	r2,1
100096e0:	10c6983a 	sll	r3,r2,r3
100096e4:	00c7c83a 	sub	r3,zero,r3
100096e8:	28cab03a 	or	r5,r5,r3
100096ec:	d9800017 	ldw	r6,0(sp)
100096f0:	d9400415 	stw	r5,16(sp)
100096f4:	d8000115 	stw	zero,4(sp)
100096f8:	0007883a 	mov	r3,zero
100096fc:	31000003 	ldbu	r4,0(r6)
10009700:	da000117 	ldw	r8,4(sp)
10009704:	31800044 	addi	r6,r6,1
10009708:	20801fcc 	andi	r2,r4,127
1000970c:	10c4983a 	sll	r2,r2,r3
10009710:	21c03fcc 	andi	r7,r4,255
10009714:	39c0201c 	xori	r7,r7,128
10009718:	4084b03a 	or	r2,r8,r2
1000971c:	39ffe004 	addi	r7,r7,-128
10009720:	d8800115 	stw	r2,4(sp)
10009724:	18c001c4 	addi	r3,r3,7
10009728:	383ff416 	blt	r7,zero,100096fc <__gxx_personality_sj0+0x328>
1000972c:	18800828 	cmpgeui	r2,r3,32
10009730:	1000081e 	bne	r2,zero,10009754 <__gxx_personality_sj0+0x380>
10009734:	2100100c 	andi	r4,r4,64
10009738:	20000626 	beq	r4,zero,10009754 <__gxx_personality_sj0+0x380>
1000973c:	00800044 	movi	r2,1
10009740:	10c6983a 	sll	r3,r2,r3
10009744:	d8800117 	ldw	r2,4(sp)
10009748:	00c7c83a 	sub	r3,zero,r3
1000974c:	10c4b03a 	or	r2,r2,r3
10009750:	d8800115 	stw	r2,4(sp)
10009754:	28003b26 	beq	r5,zero,10009844 <__gxx_personality_sj0+0x470>
10009758:	01403d16 	blt	zero,r5,10009850 <__gxx_personality_sj0+0x47c>
1000975c:	d8c00917 	ldw	r3,36(sp)
10009760:	18004b26 	beq	r3,zero,10009890 <__gxx_personality_sj0+0x4bc>
10009764:	d8800a17 	ldw	r2,40(sp)
10009768:	1000491e 	bne	r2,zero,10009890 <__gxx_personality_sj0+0x4bc>
1000976c:	d8800617 	ldw	r2,24(sp)
10009770:	1000471e 	bne	r2,zero,10009890 <__gxx_personality_sj0+0x4bc>
10009774:	d8800c17 	ldw	r2,48(sp)
10009778:	1000451e 	bne	r2,zero,10009890 <__gxx_personality_sj0+0x4bc>
1000977c:	d9801a17 	ldw	r6,104(sp)
10009780:	00bfffc4 	movi	r2,-1
10009784:	280f883a 	mov	r7,r5
10009788:	d9001c04 	addi	r4,sp,112
1000978c:	180b883a 	mov	r5,r3
10009790:	d8800e15 	stw	r2,56(sp)
10009794:	00091980 	call	10009198 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
10009798:	1080005c 	xori	r2,r2,1
1000979c:	10803fcc 	andi	r2,r2,255
100097a0:	1000371e 	bne	r2,zero,10009880 <__gxx_personality_sj0+0x4ac>
100097a4:	d8800117 	ldw	r2,4(sp)
100097a8:	103f9626 	beq	r2,zero,10009604 <__gxx_personality_sj0+0x230>
100097ac:	d8c00017 	ldw	r3,0(sp)
100097b0:	1885883a 	add	r2,r3,r2
100097b4:	d8800215 	stw	r2,8(sp)
100097b8:	003fb406 	br	1000968c <__gxx_personality_sj0+0x2b8>
100097bc:	d8800717 	ldw	r2,28(sp)
100097c0:	108000a8 	cmpgeui	r2,r2,2
100097c4:	103f2d1e 	bne	r2,zero,1000947c <__gxx_personality_sj0+0xa8>
100097c8:	d8802417 	ldw	r2,144(sp)
100097cc:	10bffe17 	ldw	r2,-8(r2)
100097d0:	d8800115 	stw	r2,4(sp)
100097d4:	1000441e 	bne	r2,zero,100098e8 <__gxx_personality_sj0+0x514>
100097d8:	d9002417 	ldw	r4,144(sp)
100097dc:	000cce00 	call	1000cce0 <__cxa_call_terminate>
100097e0:	d8c00617 	ldw	r3,24(sp)
100097e4:	183f491e 	bne	r3,zero,1000950c <__gxx_personality_sj0+0x138>
100097e8:	d8c00717 	ldw	r3,28(sp)
100097ec:	18c000a8 	cmpgeui	r3,r3,2
100097f0:	183f461e 	bne	r3,zero,1000950c <__gxx_personality_sj0+0x138>
100097f4:	10800060 	cmpeqi	r2,r2,1
100097f8:	103ff71e 	bne	r2,zero,100097d8 <__gxx_personality_sj0+0x404>
100097fc:	d8800417 	ldw	r2,16(sp)
10009800:	103f460e 	bge	r2,zero,1000951c <__gxx_personality_sj0+0x148>
10009804:	d9002517 	ldw	r4,148(sp)
10009808:	d9400517 	ldw	r5,20(sp)
1000980c:	d9801c04 	addi	r6,sp,112
10009810:	00bfffc4 	movi	r2,-1
10009814:	d8800e15 	stw	r2,56(sp)
10009818:	00092a80 	call	100092a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
1000981c:	d9402517 	ldw	r5,148(sp)
10009820:	d9002103 	ldbu	r4,132(sp)
10009824:	00092380 	call	10009238 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10009828:	d9002103 	ldbu	r4,132(sp)
1000982c:	d9402517 	ldw	r5,148(sp)
10009830:	d8801e15 	stw	r2,120(sp)
10009834:	00092380 	call	10009238 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10009838:	d8c02417 	ldw	r3,144(sp)
1000983c:	18bffe15 	stw	r2,-8(r3)
10009840:	003f3606 	br	1000951c <__gxx_personality_sj0+0x148>
10009844:	00800044 	movi	r2,1
10009848:	d88008c5 	stb	r2,35(sp)
1000984c:	003fd506 	br	100097a4 <__gxx_personality_sj0+0x3d0>
10009850:	00bfffc4 	movi	r2,-1
10009854:	d9001c04 	addi	r4,sp,112
10009858:	d8800e15 	stw	r2,56(sp)
1000985c:	00091040 	call	10009104 <_ZL15get_ttype_entryP16lsda_header_infom>
10009860:	10000726 	beq	r2,zero,10009880 <__gxx_personality_sj0+0x4ac>
10009864:	d9400917 	ldw	r5,36(sp)
10009868:	283fce26 	beq	r5,zero,100097a4 <__gxx_personality_sj0+0x3d0>
1000986c:	d9801a04 	addi	r6,sp,104
10009870:	1009883a 	mov	r4,r2
10009874:	0008e940 	call	10008e94 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
10009878:	10803fcc 	andi	r2,r2,255
1000987c:	103fc926 	beq	r2,zero,100097a4 <__gxx_personality_sj0+0x3d0>
10009880:	d8800b17 	ldw	r2,44(sp)
10009884:	d8800115 	stw	r2,4(sp)
10009888:	008000c4 	movi	r2,3
1000988c:	003f1906 	br	100094f4 <__gxx_personality_sj0+0x120>
10009890:	d8801f17 	ldw	r2,124(sp)
10009894:	014a303a 	nor	r5,zero,r5
10009898:	000d883a 	mov	r6,zero
1000989c:	114b883a 	add	r5,r2,r5
100098a0:	0009883a 	mov	r4,zero
100098a4:	29400044 	addi	r5,r5,1
100098a8:	28bfffc3 	ldbu	r2,-1(r5)
100098ac:	10c01fcc 	andi	r3,r2,127
100098b0:	1906983a 	sll	r3,r3,r4
100098b4:	10803fcc 	andi	r2,r2,255
100098b8:	1080201c 	xori	r2,r2,128
100098bc:	10bfe004 	addi	r2,r2,-128
100098c0:	30ccb03a 	or	r6,r6,r3
100098c4:	210001c4 	addi	r4,r4,7
100098c8:	103ff616 	blt	r2,zero,100098a4 <__gxx_personality_sj0+0x4d0>
100098cc:	3005003a 	cmpeq	r2,r6,zero
100098d0:	003fb206 	br	1000979c <__gxx_personality_sj0+0x3c8>
100098d4:	d8800617 	ldw	r2,24(sp)
100098d8:	10000e26 	beq	r2,zero,10009914 <__gxx_personality_sj0+0x540>
100098dc:	00800184 	movi	r2,6
100098e0:	d8800015 	stw	r2,0(sp)
100098e4:	003f1f06 	br	10009564 <__gxx_personality_sj0+0x190>
100098e8:	d8802417 	ldw	r2,144(sp)
100098ec:	10bffb17 	ldw	r2,-20(r2)
100098f0:	d8800415 	stw	r2,16(sp)
100098f4:	d8802417 	ldw	r2,144(sp)
100098f8:	10bffd17 	ldw	r2,-12(r2)
100098fc:	d8800515 	stw	r2,20(sp)
10009900:	003fbe06 	br	100097fc <__gxx_personality_sj0+0x428>
10009904:	008400f4 	movhi	r2,4099
10009908:	10a18c04 	addi	r2,r2,-31184
1000990c:	d8800915 	stw	r2,36(sp)
10009910:	003f5a06 	br	1000967c <__gxx_personality_sj0+0x2a8>
10009914:	d8800717 	ldw	r2,28(sp)
10009918:	108000a8 	cmpgeui	r2,r2,2
1000991c:	103fef1e 	bne	r2,zero,100098dc <__gxx_personality_sj0+0x508>
10009920:	d8802417 	ldw	r2,144(sp)
10009924:	d8c00417 	ldw	r3,16(sp)
10009928:	10fffb15 	stw	r3,-20(r2)
1000992c:	d8c00217 	ldw	r3,8(sp)
10009930:	10fffc15 	stw	r3,-16(r2)
10009934:	d8c00517 	ldw	r3,20(sp)
10009938:	10fffd15 	stw	r3,-12(r2)
1000993c:	d8c02417 	ldw	r3,144(sp)
10009940:	d8801a17 	ldw	r2,104(sp)
10009944:	18bfff15 	stw	r2,-4(r3)
10009948:	1805883a 	mov	r2,r3
1000994c:	d8c00117 	ldw	r3,4(sp)
10009950:	10fffe15 	stw	r3,-8(r2)
10009954:	00800184 	movi	r2,6
10009958:	d8800015 	stw	r2,0(sp)
1000995c:	003f0106 	br	10009564 <__gxx_personality_sj0+0x190>
10009960:	d8800717 	ldw	r2,28(sp)
10009964:	108000a8 	cmpgeui	r2,r2,2
10009968:	103f411e 	bne	r2,zero,10009670 <__gxx_personality_sj0+0x29c>
1000996c:	d8802417 	ldw	r2,144(sp)
10009970:	10800017 	ldw	r2,0(r2)
10009974:	1080004c 	andi	r2,r2,1
10009978:	10000626 	beq	r2,zero,10009994 <__gxx_personality_sj0+0x5c0>
1000997c:	d8802417 	ldw	r2,144(sp)
10009980:	10bff517 	ldw	r2,-44(r2)
10009984:	d8801a15 	stw	r2,104(sp)
10009988:	10bff017 	ldw	r2,-64(r2)
1000998c:	d8800915 	stw	r2,36(sp)
10009990:	003f3a06 	br	1000967c <__gxx_personality_sj0+0x2a8>
10009994:	d8802417 	ldw	r2,144(sp)
10009998:	10800504 	addi	r2,r2,20
1000999c:	003ff906 	br	10009984 <__gxx_personality_sj0+0x5b0>
100099a0:	d8800317 	ldw	r2,12(sp)
100099a4:	1080020c 	andi	r2,r2,8
100099a8:	d8800415 	stw	r2,16(sp)
100099ac:	10000a26 	beq	r2,zero,100099d8 <__gxx_personality_sj0+0x604>
100099b0:	d8800b17 	ldw	r2,44(sp)
100099b4:	d8000415 	stw	zero,16(sp)
100099b8:	d8800115 	stw	r2,4(sp)
100099bc:	003ed706 	br	1000951c <__gxx_personality_sj0+0x148>
100099c0:	00800044 	movi	r2,1
100099c4:	d8800e15 	stw	r2,56(sp)
100099c8:	0008c040 	call	10008c04 <_ZSt10unexpectedv>
100099cc:	d9000f17 	ldw	r4,60(sp)
100099d0:	00089800 	call	10008980 <__cxa_begin_catch>
100099d4:	0008be00 	call	10008be0 <_ZSt9terminatev>
100099d8:	d8800617 	ldw	r2,24(sp)
100099dc:	103ff41e 	bne	r2,zero,100099b0 <__gxx_personality_sj0+0x5dc>
100099e0:	d8800717 	ldw	r2,28(sp)
100099e4:	108000a8 	cmpgeui	r2,r2,2
100099e8:	103ff11e 	bne	r2,zero,100099b0 <__gxx_personality_sj0+0x5dc>
100099ec:	d8800b17 	ldw	r2,44(sp)
100099f0:	d8800115 	stw	r2,4(sp)
100099f4:	003ec906 	br	1000951c <__gxx_personality_sj0+0x148>

100099f8 <__cxa_call_unexpected>:
100099f8:	00c400b4 	movhi	r3,4098
100099fc:	deffe704 	addi	sp,sp,-100
10009a00:	18d36604 	addi	r3,r3,19864
10009a04:	01440074 	movhi	r5,4097
10009a08:	00840074 	movhi	r2,4097
10009a0c:	2964f504 	addi	r5,r5,-27692
10009a10:	10a69f04 	addi	r2,r2,-25988
10009a14:	d9000015 	stw	r4,0(sp)
10009a18:	d8c00b15 	stw	r3,44(sp)
10009a1c:	d9000404 	addi	r4,sp,16
10009a20:	d8c01704 	addi	r3,sp,92
10009a24:	d8c00c15 	stw	r3,48(sp)
10009a28:	dfc01815 	stw	ra,96(sp)
10009a2c:	d9400a15 	stw	r5,40(sp)
10009a30:	d8800d15 	stw	r2,52(sp)
10009a34:	df001715 	stw	fp,92(sp)
10009a38:	dec00e15 	stw	sp,56(sp)
10009a3c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10009a40:	d9000017 	ldw	r4,0(sp)
10009a44:	00089800 	call	10008980 <__cxa_begin_catch>
10009a48:	d9000017 	ldw	r4,0(sp)
10009a4c:	20fffd17 	ldw	r3,-12(r4)
10009a50:	20bffe17 	ldw	r2,-8(r4)
10009a54:	d8c00115 	stw	r3,4(sp)
10009a58:	20fffb17 	ldw	r3,-20(r4)
10009a5c:	d8801315 	stw	r2,76(sp)
10009a60:	d8c00015 	stw	r3,0(sp)
10009a64:	20fff817 	ldw	r3,-32(r4)
10009a68:	d8c00215 	stw	r3,8(sp)
10009a6c:	00c00044 	movi	r3,1
10009a70:	d8c00515 	stw	r3,20(sp)
10009a74:	213ff717 	ldw	r4,-36(r4)
10009a78:	0008bf40 	call	10008bf4 <_ZN10__cxxabiv112__unexpectedEPFvvE>
10009a7c:	d8c00617 	ldw	r3,24(sp)
10009a80:	d8800517 	ldw	r2,20(sp)
10009a84:	d8c00315 	stw	r3,12(sp)
10009a88:	1000221e 	bne	r2,zero,10009b14 <__cxa_call_unexpected+0x11c>
10009a8c:	d9000617 	ldw	r4,24(sp)
10009a90:	00089800 	call	10008980 <__cxa_begin_catch>
10009a94:	000cffc0 	call	1000cffc <__cxa_get_globals_fast>
10009a98:	10800017 	ldw	r2,0(r2)
10009a9c:	10c00b17 	ldw	r3,44(r2)
10009aa0:	18c0004c 	andi	r3,r3,1
10009aa4:	1800251e 	bne	r3,zero,10009b3c <__cxa_call_unexpected+0x144>
10009aa8:	10801004 	addi	r2,r2,64
10009aac:	d8800315 	stw	r2,12(sp)
10009ab0:	d9400117 	ldw	r5,4(sp)
10009ab4:	00800084 	movi	r2,2
10009ab8:	d9801104 	addi	r6,sp,68
10009abc:	0009883a 	mov	r4,zero
10009ac0:	d8800515 	stw	r2,20(sp)
10009ac4:	00092a80 	call	100092a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10009ac8:	d9800317 	ldw	r6,12(sp)
10009acc:	d9c00017 	ldw	r7,0(sp)
10009ad0:	d9001104 	addi	r4,sp,68
10009ad4:	317ff017 	ldw	r5,-64(r6)
10009ad8:	00091980 	call	10009198 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
10009adc:	10803fcc 	andi	r2,r2,255
10009ae0:	1000191e 	bne	r2,zero,10009b48 <__cxa_call_unexpected+0x150>
10009ae4:	d9c00017 	ldw	r7,0(sp)
10009ae8:	014400b4 	movhi	r5,4098
10009aec:	00800084 	movi	r2,2
10009af0:	000d883a 	mov	r6,zero
10009af4:	29570104 	addi	r5,r5,23556
10009af8:	d9001104 	addi	r4,sp,68
10009afc:	d8800515 	stw	r2,20(sp)
10009b00:	00091980 	call	10009198 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
10009b04:	10803fcc 	andi	r2,r2,255
10009b08:	1000101e 	bne	r2,zero,10009b4c <__cxa_call_unexpected+0x154>
10009b0c:	d9000217 	ldw	r4,8(sp)
10009b10:	0008b180 	call	10008b18 <_ZN10__cxxabiv111__terminateEPFvvE>
10009b14:	10bfffc4 	addi	r2,r2,-1
10009b18:	10000126 	beq	r2,zero,10009b20 <__cxa_call_unexpected+0x128>
10009b1c:	003b68fa 	trap	3
10009b20:	d8000515 	stw	zero,20(sp)
10009b24:	0008a2c0 	call	10008a2c <__cxa_end_catch>
10009b28:	0008a2c0 	call	10008a2c <__cxa_end_catch>
10009b2c:	d9000317 	ldw	r4,12(sp)
10009b30:	00bfffc4 	movi	r2,-1
10009b34:	d8800515 	stw	r2,20(sp)
10009b38:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>
10009b3c:	10800017 	ldw	r2,0(r2)
10009b40:	d8800315 	stw	r2,12(sp)
10009b44:	003fda06 	br	10009ab0 <__cxa_call_unexpected+0xb8>
10009b48:	0008db80 	call	10008db8 <__cxa_rethrow>
10009b4c:	01000104 	movi	r4,4
10009b50:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
10009b54:	00c400b4 	movhi	r3,4098
10009b58:	01840074 	movhi	r6,4097
10009b5c:	014400b4 	movhi	r5,4098
10009b60:	18d71c04 	addi	r3,r3,23664
10009b64:	31b40604 	addi	r6,r6,-12264
10009b68:	29570104 	addi	r5,r5,23556
10009b6c:	1009883a 	mov	r4,r2
10009b70:	10c00015 	stw	r3,0(r2)
10009b74:	0008d240 	call	10008d24 <__cxa_throw>

10009b78 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
10009b78:	00c400f4 	movhi	r3,4099
10009b7c:	18e9a604 	addi	r3,r3,-22888
10009b80:	18800117 	ldw	r2,4(r3)
10009b84:	21ffff04 	addi	r7,r4,-4
10009b88:	10001926 	beq	r2,zero,10009bf0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
10009b8c:	227fff17 	ldw	r9,-4(r4)
10009b90:	3a4d883a 	add	r6,r7,r9
10009b94:	30801636 	bltu	r6,r2,10009bf0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
10009b98:	11400117 	ldw	r5,4(r2)
10009b9c:	11801f26 	beq	r2,r6,10009c1c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa4>
10009ba0:	28002426 	beq	r5,zero,10009c34 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xbc>
10009ba4:	31400336 	bltu	r6,r5,10009bb4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x3c>
10009ba8:	00002806 	br	10009c4c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xd4>
10009bac:	30c0052e 	bgeu	r6,r3,10009bc4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4c>
10009bb0:	180b883a 	mov	r5,r3
10009bb4:	28c00117 	ldw	r3,4(r5)
10009bb8:	12000104 	addi	r8,r2,4
10009bbc:	2805883a 	mov	r2,r5
10009bc0:	183ffa1e 	bne	r3,zero,10009bac <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
10009bc4:	30c01026 	beq	r6,r3,10009c08 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
10009bc8:	40800017 	ldw	r2,0(r8)
10009bcc:	10c00017 	ldw	r3,0(r2)
10009bd0:	10cb883a 	add	r5,r2,r3
10009bd4:	39400926 	beq	r7,r5,10009bfc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x84>
10009bd8:	10800117 	ldw	r2,4(r2)
10009bdc:	227fff15 	stw	r9,-4(r4)
10009be0:	20800015 	stw	r2,0(r4)
10009be4:	40800017 	ldw	r2,0(r8)
10009be8:	11c00115 	stw	r7,4(r2)
10009bec:	f800283a 	ret
10009bf0:	20800015 	stw	r2,0(r4)
10009bf4:	19c00115 	stw	r7,4(r3)
10009bf8:	f800283a 	ret
10009bfc:	1a53883a 	add	r9,r3,r9
10009c00:	12400015 	stw	r9,0(r2)
10009c04:	f800283a 	ret
10009c08:	30c00017 	ldw	r3,0(r6)
10009c0c:	30800117 	ldw	r2,4(r6)
10009c10:	48d3883a 	add	r9,r9,r3
10009c14:	28800115 	stw	r2,4(r5)
10009c18:	003feb06 	br	10009bc8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009c1c:	10800017 	ldw	r2,0(r2)
10009c20:	21400015 	stw	r5,0(r4)
10009c24:	1253883a 	add	r9,r2,r9
10009c28:	227fff15 	stw	r9,-4(r4)
10009c2c:	19c00115 	stw	r7,4(r3)
10009c30:	f800283a 	ret
10009c34:	020400f4 	movhi	r8,4099
10009c38:	0007883a 	mov	r3,zero
10009c3c:	100b883a 	mov	r5,r2
10009c40:	4229a704 	addi	r8,r8,-22884
10009c44:	30ffe01e 	bne	r6,r3,10009bc8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009c48:	003fef06 	br	10009c08 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
10009c4c:	020400f4 	movhi	r8,4099
10009c50:	2807883a 	mov	r3,r5
10009c54:	4229a704 	addi	r8,r8,-22884
10009c58:	100b883a 	mov	r5,r2
10009c5c:	30ffda1e 	bne	r6,r3,10009bc8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009c60:	003fe906 	br	10009c08 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>

10009c64 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
10009c64:	21000104 	addi	r4,r4,4
10009c68:	20800228 	cmpgeui	r2,r4,8
10009c6c:	1000011e 	bne	r2,zero,10009c74 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x10>
10009c70:	01000204 	movi	r4,8
10009c74:	008400f4 	movhi	r2,4099
10009c78:	10e9a717 	ldw	r3,-22884(r2)
10009c7c:	210000c4 	addi	r4,r4,3
10009c80:	017fff04 	movi	r5,-4
10009c84:	214a703a 	and	r5,r4,r5
10009c88:	18001a26 	beq	r3,zero,10009cf4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x90>
10009c8c:	19000017 	ldw	r4,0(r3)
10009c90:	21400436 	bltu	r4,r5,10009ca4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
10009c94:	00001906 	br	10009cfc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x98>
10009c98:	11000017 	ldw	r4,0(r2)
10009c9c:	2140042e 	bgeu	r4,r5,10009cb0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4c>
10009ca0:	1007883a 	mov	r3,r2
10009ca4:	18800117 	ldw	r2,4(r3)
10009ca8:	103ffb1e 	bne	r2,zero,10009c98 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
10009cac:	f800283a 	ret
10009cb0:	19800104 	addi	r6,r3,4
10009cb4:	2147c83a 	sub	r3,r4,r5
10009cb8:	1a000228 	cmpgeui	r8,r3,8
10009cbc:	11c00117 	ldw	r7,4(r2)
10009cc0:	40000826 	beq	r8,zero,10009ce4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x80>
10009cc4:	1149883a 	add	r4,r2,r5
10009cc8:	21c00115 	stw	r7,4(r4)
10009ccc:	30800017 	ldw	r2,0(r6)
10009cd0:	20c00015 	stw	r3,0(r4)
10009cd4:	11400015 	stw	r5,0(r2)
10009cd8:	31000015 	stw	r4,0(r6)
10009cdc:	10800104 	addi	r2,r2,4
10009ce0:	f800283a 	ret
10009ce4:	11000015 	stw	r4,0(r2)
10009ce8:	31c00015 	stw	r7,0(r6)
10009cec:	10800104 	addi	r2,r2,4
10009cf0:	f800283a 	ret
10009cf4:	0005883a 	mov	r2,zero
10009cf8:	f800283a 	ret
10009cfc:	018400f4 	movhi	r6,4099
10009d00:	1805883a 	mov	r2,r3
10009d04:	31a9a704 	addi	r6,r6,-22884
10009d08:	003fea06 	br	10009cb4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>

10009d0c <_ZN9__gnu_cxx9__freeresEv>:
10009d0c:	008400f4 	movhi	r2,4099
10009d10:	1129a817 	ldw	r4,-22880(r2)
10009d14:	20000826 	beq	r4,zero,10009d38 <_ZN9__gnu_cxx9__freeresEv+0x2c>
10009d18:	deffff04 	addi	sp,sp,-4
10009d1c:	dfc00015 	stw	ra,0(sp)
10009d20:	00162bc0 	call	100162bc <free>
10009d24:	008400f4 	movhi	r2,4099
10009d28:	1029a815 	stw	zero,-22880(r2)
10009d2c:	dfc00017 	ldw	ra,0(sp)
10009d30:	dec00104 	addi	sp,sp,4
10009d34:	f800283a 	ret
10009d38:	f800283a 	ret

10009d3c <__cxa_allocate_exception>:
10009d3c:	defffe04 	addi	sp,sp,-8
10009d40:	dc000015 	stw	r16,0(sp)
10009d44:	24001104 	addi	r16,r4,68
10009d48:	8009883a 	mov	r4,r16
10009d4c:	dfc00115 	stw	ra,4(sp)
10009d50:	00162ac0 	call	100162ac <malloc>
10009d54:	10000a26 	beq	r2,zero,10009d80 <__cxa_allocate_exception+0x44>
10009d58:	1007883a 	mov	r3,r2
10009d5c:	01801104 	movi	r6,68
10009d60:	000b883a 	mov	r5,zero
10009d64:	1809883a 	mov	r4,r3
10009d68:	0016e600 	call	10016e60 <memset>
10009d6c:	10801104 	addi	r2,r2,68
10009d70:	dfc00117 	ldw	ra,4(sp)
10009d74:	dc000017 	ldw	r16,0(sp)
10009d78:	dec00204 	addi	sp,sp,8
10009d7c:	f800283a 	ret
10009d80:	8009883a 	mov	r4,r16
10009d84:	0009c640 	call	10009c64 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
10009d88:	1007883a 	mov	r3,r2
10009d8c:	103ff31e 	bne	r2,zero,10009d5c <__cxa_allocate_exception+0x20>
10009d90:	0008be00 	call	10008be0 <_ZSt9terminatev>

10009d94 <__cxa_free_exception>:
10009d94:	008400f4 	movhi	r2,4099
10009d98:	10a9a604 	addi	r2,r2,-22888
10009d9c:	10c00217 	ldw	r3,8(r2)
10009da0:	213fef04 	addi	r4,r4,-68
10009da4:	1900042e 	bgeu	r3,r4,10009db8 <__cxa_free_exception+0x24>
10009da8:	10800317 	ldw	r2,12(r2)
10009dac:	1887883a 	add	r3,r3,r2
10009db0:	20c0012e 	bgeu	r4,r3,10009db8 <__cxa_free_exception+0x24>
10009db4:	0009b781 	jmpi	10009b78 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
10009db8:	00162bc1 	jmpi	100162bc <free>

10009dbc <__cxa_allocate_dependent_exception>:
10009dbc:	deffff04 	addi	sp,sp,-4
10009dc0:	01001004 	movi	r4,64
10009dc4:	dfc00015 	stw	ra,0(sp)
10009dc8:	00162ac0 	call	100162ac <malloc>
10009dcc:	10000826 	beq	r2,zero,10009df0 <__cxa_allocate_dependent_exception+0x34>
10009dd0:	1007883a 	mov	r3,r2
10009dd4:	01801004 	movi	r6,64
10009dd8:	000b883a 	mov	r5,zero
10009ddc:	1809883a 	mov	r4,r3
10009de0:	0016e600 	call	10016e60 <memset>
10009de4:	dfc00017 	ldw	ra,0(sp)
10009de8:	dec00104 	addi	sp,sp,4
10009dec:	f800283a 	ret
10009df0:	01001004 	movi	r4,64
10009df4:	0009c640 	call	10009c64 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
10009df8:	1007883a 	mov	r3,r2
10009dfc:	103ff51e 	bne	r2,zero,10009dd4 <__cxa_allocate_dependent_exception+0x18>
10009e00:	0008be00 	call	10008be0 <_ZSt9terminatev>

10009e04 <__cxa_free_dependent_exception>:
10009e04:	008400f4 	movhi	r2,4099
10009e08:	10a9a604 	addi	r2,r2,-22888
10009e0c:	10c00217 	ldw	r3,8(r2)
10009e10:	200b883a 	mov	r5,r4
10009e14:	1900042e 	bgeu	r3,r4,10009e28 <__cxa_free_dependent_exception+0x24>
10009e18:	10800317 	ldw	r2,12(r2)
10009e1c:	1887883a 	add	r3,r3,r2
10009e20:	20c0012e 	bgeu	r4,r3,10009e28 <__cxa_free_dependent_exception+0x24>
10009e24:	0009b781 	jmpi	10009b78 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
10009e28:	2809883a 	mov	r4,r5
10009e2c:	00162bc1 	jmpi	100162bc <free>

10009e30 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
10009e30:	defffd04 	addi	sp,sp,-12
10009e34:	dc000015 	stw	r16,0(sp)
10009e38:	040400f4 	movhi	r16,4099
10009e3c:	dc400115 	stw	r17,4(sp)
10009e40:	8429a604 	addi	r16,r16,-22888
10009e44:	04424004 	movi	r17,2304
10009e48:	01024004 	movi	r4,2304
10009e4c:	dfc00215 	stw	ra,8(sp)
10009e50:	84400315 	stw	r17,12(r16)
10009e54:	00162ac0 	call	100162ac <malloc>
10009e58:	80800215 	stw	r2,8(r16)
10009e5c:	10000826 	beq	r2,zero,10009e80 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
10009e60:	80800115 	stw	r2,4(r16)
10009e64:	14400015 	stw	r17,0(r2)
10009e68:	10000115 	stw	zero,4(r2)
10009e6c:	dfc00217 	ldw	ra,8(sp)
10009e70:	dc400117 	ldw	r17,4(sp)
10009e74:	dc000017 	ldw	r16,0(sp)
10009e78:	dec00304 	addi	sp,sp,12
10009e7c:	f800283a 	ret
10009e80:	008400f4 	movhi	r2,4099
10009e84:	1029a915 	stw	zero,-22876(r2)
10009e88:	008400f4 	movhi	r2,4099
10009e8c:	1029a715 	stw	zero,-22884(r2)
10009e90:	003ff606 	br	10009e6c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

10009e94 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
10009e94:	20800017 	ldw	r2,0(r4)
10009e98:	1000031e 	bne	r2,zero,10009ea8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x14>
10009e9c:	20800117 	ldw	r2,4(r4)
10009ea0:	10800117 	ldw	r2,4(r2)
10009ea4:	11001026 	beq	r2,r4,10009ee8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x54>
10009ea8:	20800217 	ldw	r2,8(r4)
10009eac:	1000021e 	bne	r2,zero,10009eb8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x24>
10009eb0:	00000406 	br	10009ec4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x30>
10009eb4:	1805883a 	mov	r2,r3
10009eb8:	10c00317 	ldw	r3,12(r2)
10009ebc:	183ffd1e 	bne	r3,zero,10009eb4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
10009ec0:	f800283a 	ret
10009ec4:	20c00117 	ldw	r3,4(r4)
10009ec8:	18800217 	ldw	r2,8(r3)
10009ecc:	20800226 	beq	r4,r2,10009ed8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x44>
10009ed0:	00000706 	br	10009ef0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x5c>
10009ed4:	1007883a 	mov	r3,r2
10009ed8:	18800117 	ldw	r2,4(r3)
10009edc:	11000217 	ldw	r4,8(r2)
10009ee0:	193ffc26 	beq	r3,r4,10009ed4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x40>
10009ee4:	f800283a 	ret
10009ee8:	10800317 	ldw	r2,12(r2)
10009eec:	f800283a 	ret
10009ef0:	1805883a 	mov	r2,r3
10009ef4:	003ff206 	br	10009ec0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x2c>

10009ef8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
10009ef8:	20800317 	ldw	r2,12(r4)
10009efc:	1000021e 	bne	r2,zero,10009f08 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
10009f00:	00000406 	br	10009f14 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
10009f04:	1805883a 	mov	r2,r3
10009f08:	10c00217 	ldw	r3,8(r2)
10009f0c:	183ffd1e 	bne	r3,zero,10009f04 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xc>
10009f10:	f800283a 	ret
10009f14:	20c00117 	ldw	r3,4(r4)
10009f18:	18800317 	ldw	r2,12(r3)
10009f1c:	20800226 	beq	r4,r2,10009f28 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x30>
10009f20:	00000806 	br	10009f44 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4c>
10009f24:	1007883a 	mov	r3,r2
10009f28:	18800117 	ldw	r2,4(r3)
10009f2c:	11000317 	ldw	r4,12(r2)
10009f30:	20fffc26 	beq	r4,r3,10009f24 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x2c>
10009f34:	19400317 	ldw	r5,12(r3)
10009f38:	117ff51e 	bne	r2,r5,10009f10 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009f3c:	1805883a 	mov	r2,r3
10009f40:	003ff306 	br	10009f10 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009f44:	1805883a 	mov	r2,r3
10009f48:	000b883a 	mov	r5,zero
10009f4c:	2007883a 	mov	r3,r4
10009f50:	117fef1e 	bne	r2,r5,10009f10 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009f54:	003ff906 	br	10009f3c <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x44>

10009f58 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>:
10009f58:	0009ef81 	jmpi	10009ef8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>

10009f5c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
10009f5c:	0009e941 	jmpi	10009e94 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

10009f60 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>:
10009f60:	0009e941 	jmpi	10009e94 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

10009f64 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
10009f64:	20800317 	ldw	r2,12(r4)
10009f68:	10c00217 	ldw	r3,8(r2)
10009f6c:	20c00315 	stw	r3,12(r4)
10009f70:	18000126 	beq	r3,zero,10009f78 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x14>
10009f74:	19000115 	stw	r4,4(r3)
10009f78:	20c00117 	ldw	r3,4(r4)
10009f7c:	10c00115 	stw	r3,4(r2)
10009f80:	29800017 	ldw	r6,0(r5)
10009f84:	21800a26 	beq	r4,r6,10009fb0 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x4c>
10009f88:	19400217 	ldw	r5,8(r3)
10009f8c:	21400426 	beq	r4,r5,10009fa0 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x3c>
10009f90:	18800315 	stw	r2,12(r3)
10009f94:	11000215 	stw	r4,8(r2)
10009f98:	20800115 	stw	r2,4(r4)
10009f9c:	f800283a 	ret
10009fa0:	18800215 	stw	r2,8(r3)
10009fa4:	11000215 	stw	r4,8(r2)
10009fa8:	20800115 	stw	r2,4(r4)
10009fac:	f800283a 	ret
10009fb0:	28800015 	stw	r2,0(r5)
10009fb4:	11000215 	stw	r4,8(r2)
10009fb8:	20800115 	stw	r2,4(r4)
10009fbc:	f800283a 	ret

10009fc0 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
10009fc0:	20800217 	ldw	r2,8(r4)
10009fc4:	10c00317 	ldw	r3,12(r2)
10009fc8:	20c00215 	stw	r3,8(r4)
10009fcc:	18000126 	beq	r3,zero,10009fd4 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x14>
10009fd0:	19000115 	stw	r4,4(r3)
10009fd4:	20c00117 	ldw	r3,4(r4)
10009fd8:	10c00115 	stw	r3,4(r2)
10009fdc:	29800017 	ldw	r6,0(r5)
10009fe0:	21800a26 	beq	r4,r6,1000a00c <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x4c>
10009fe4:	19400317 	ldw	r5,12(r3)
10009fe8:	21400426 	beq	r4,r5,10009ffc <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x3c>
10009fec:	18800215 	stw	r2,8(r3)
10009ff0:	11000315 	stw	r4,12(r2)
10009ff4:	20800115 	stw	r2,4(r4)
10009ff8:	f800283a 	ret
10009ffc:	18800315 	stw	r2,12(r3)
1000a000:	11000315 	stw	r4,12(r2)
1000a004:	20800115 	stw	r2,4(r4)
1000a008:	f800283a 	ret
1000a00c:	28800015 	stw	r2,0(r5)
1000a010:	11000315 	stw	r4,12(r2)
1000a014:	20800115 	stw	r2,4(r4)
1000a018:	f800283a 	ret

1000a01c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
1000a01c:	29800115 	stw	r6,4(r5)
1000a020:	28000215 	stw	zero,8(r5)
1000a024:	28000315 	stw	zero,12(r5)
1000a028:	28000015 	stw	zero,0(r5)
1000a02c:	21003fcc 	andi	r4,r4,255
1000a030:	20001826 	beq	r4,zero,1000a094 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x78>
1000a034:	31400215 	stw	r5,8(r6)
1000a038:	39807d26 	beq	r7,r6,1000a230 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x214>
1000a03c:	38800217 	ldw	r2,8(r7)
1000a040:	11808126 	beq	r2,r6,1000a248 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22c>
1000a044:	39800117 	ldw	r6,4(r7)
1000a048:	02000044 	movi	r8,1
1000a04c:	29800e26 	beq	r5,r6,1000a088 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
1000a050:	28c00117 	ldw	r3,4(r5)
1000a054:	18800017 	ldw	r2,0(r3)
1000a058:	10000b1e 	bne	r2,zero,1000a088 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
1000a05c:	18800117 	ldw	r2,4(r3)
1000a060:	11000217 	ldw	r4,8(r2)
1000a064:	19002526 	beq	r3,r4,1000a0fc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xe0>
1000a068:	20001026 	beq	r4,zero,1000a0ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
1000a06c:	22400017 	ldw	r9,0(r4)
1000a070:	48000e1e 	bne	r9,zero,1000a0ac <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
1000a074:	1a000015 	stw	r8,0(r3)
1000a078:	22000015 	stw	r8,0(r4)
1000a07c:	10000015 	stw	zero,0(r2)
1000a080:	100b883a 	mov	r5,r2
1000a084:	29bff21e 	bne	r5,r6,1000a050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x34>
1000a088:	00800044 	movi	r2,1
1000a08c:	30800015 	stw	r2,0(r6)
1000a090:	f800283a 	ret
1000a094:	31400315 	stw	r5,12(r6)
1000a098:	38800317 	ldw	r2,12(r7)
1000a09c:	11bfe91e 	bne	r2,r6,1000a044 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
1000a0a0:	39400315 	stw	r5,12(r7)
1000a0a4:	39800117 	ldw	r6,4(r7)
1000a0a8:	003fe706 	br	1000a048 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x2c>
1000a0ac:	19000217 	ldw	r4,8(r3)
1000a0b0:	21402e26 	beq	r4,r5,1000a16c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x150>
1000a0b4:	11000317 	ldw	r4,12(r2)
1000a0b8:	1a000015 	stw	r8,0(r3)
1000a0bc:	10000015 	stw	zero,0(r2)
1000a0c0:	20c00217 	ldw	r3,8(r4)
1000a0c4:	10c00315 	stw	r3,12(r2)
1000a0c8:	18000126 	beq	r3,zero,1000a0d0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb4>
1000a0cc:	18800115 	stw	r2,4(r3)
1000a0d0:	10c00117 	ldw	r3,4(r2)
1000a0d4:	20c00115 	stw	r3,4(r4)
1000a0d8:	39800117 	ldw	r6,4(r7)
1000a0dc:	11803426 	beq	r2,r6,1000a1b0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x194>
1000a0e0:	19800217 	ldw	r6,8(r3)
1000a0e4:	11803426 	beq	r2,r6,1000a1b8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x19c>
1000a0e8:	19000315 	stw	r4,12(r3)
1000a0ec:	20800215 	stw	r2,8(r4)
1000a0f0:	11000115 	stw	r4,4(r2)
1000a0f4:	39800117 	ldw	r6,4(r7)
1000a0f8:	003fd406 	br	1000a04c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
1000a0fc:	12400317 	ldw	r9,12(r2)
1000a100:	48000726 	beq	r9,zero,1000a120 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
1000a104:	4a800017 	ldw	r10,0(r9)
1000a108:	5000051e 	bne	r10,zero,1000a120 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
1000a10c:	1a000015 	stw	r8,0(r3)
1000a110:	4a000015 	stw	r8,0(r9)
1000a114:	10000015 	stw	zero,0(r2)
1000a118:	100b883a 	mov	r5,r2
1000a11c:	003fcb06 	br	1000a04c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
1000a120:	19800317 	ldw	r6,12(r3)
1000a124:	31402626 	beq	r6,r5,1000a1c0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1a4>
1000a128:	21800317 	ldw	r6,12(r4)
1000a12c:	1a000015 	stw	r8,0(r3)
1000a130:	10000015 	stw	zero,0(r2)
1000a134:	11800215 	stw	r6,8(r2)
1000a138:	30000126 	beq	r6,zero,1000a140 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x124>
1000a13c:	30800115 	stw	r2,4(r6)
1000a140:	10c00117 	ldw	r3,4(r2)
1000a144:	20c00115 	stw	r3,4(r4)
1000a148:	39800117 	ldw	r6,4(r7)
1000a14c:	11802e26 	beq	r2,r6,1000a208 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1ec>
1000a150:	19800317 	ldw	r6,12(r3)
1000a154:	11802e26 	beq	r2,r6,1000a210 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1f4>
1000a158:	19000215 	stw	r4,8(r3)
1000a15c:	20800315 	stw	r2,12(r4)
1000a160:	11000115 	stw	r4,4(r2)
1000a164:	39800117 	ldw	r6,4(r7)
1000a168:	003fb806 	br	1000a04c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
1000a16c:	29000317 	ldw	r4,12(r5)
1000a170:	19000215 	stw	r4,8(r3)
1000a174:	20002a26 	beq	r4,zero,1000a220 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x204>
1000a178:	20c00115 	stw	r3,4(r4)
1000a17c:	19000117 	ldw	r4,4(r3)
1000a180:	29000115 	stw	r4,4(r5)
1000a184:	39800117 	ldw	r6,4(r7)
1000a188:	19802326 	beq	r3,r6,1000a218 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1fc>
1000a18c:	21800317 	ldw	r6,12(r4)
1000a190:	19802526 	beq	r3,r6,1000a228 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20c>
1000a194:	21400215 	stw	r5,8(r4)
1000a198:	28c00315 	stw	r3,12(r5)
1000a19c:	2809883a 	mov	r4,r5
1000a1a0:	19400115 	stw	r5,4(r3)
1000a1a4:	180b883a 	mov	r5,r3
1000a1a8:	2007883a 	mov	r3,r4
1000a1ac:	003fc106 	br	1000a0b4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x98>
1000a1b0:	39000115 	stw	r4,4(r7)
1000a1b4:	003fcd06 	br	1000a0ec <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
1000a1b8:	19000215 	stw	r4,8(r3)
1000a1bc:	003fcb06 	br	1000a0ec <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
1000a1c0:	29000217 	ldw	r4,8(r5)
1000a1c4:	19000315 	stw	r4,12(r3)
1000a1c8:	20002126 	beq	r4,zero,1000a250 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x234>
1000a1cc:	20c00115 	stw	r3,4(r4)
1000a1d0:	19000117 	ldw	r4,4(r3)
1000a1d4:	29000115 	stw	r4,4(r5)
1000a1d8:	39800117 	ldw	r6,4(r7)
1000a1dc:	19802226 	beq	r3,r6,1000a268 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
1000a1e0:	21800217 	ldw	r6,8(r4)
1000a1e4:	19801e26 	beq	r3,r6,1000a260 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x244>
1000a1e8:	21400315 	stw	r5,12(r4)
1000a1ec:	28c00215 	stw	r3,8(r5)
1000a1f0:	280d883a 	mov	r6,r5
1000a1f4:	11000217 	ldw	r4,8(r2)
1000a1f8:	19400115 	stw	r5,4(r3)
1000a1fc:	180b883a 	mov	r5,r3
1000a200:	3007883a 	mov	r3,r6
1000a204:	003fc806 	br	1000a128 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x10c>
1000a208:	39000115 	stw	r4,4(r7)
1000a20c:	003fd306 	br	1000a15c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
1000a210:	19000315 	stw	r4,12(r3)
1000a214:	003fd106 	br	1000a15c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
1000a218:	39400115 	stw	r5,4(r7)
1000a21c:	003fde06 	br	1000a198 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
1000a220:	1009883a 	mov	r4,r2
1000a224:	003fd606 	br	1000a180 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x164>
1000a228:	21400315 	stw	r5,12(r4)
1000a22c:	003fda06 	br	1000a198 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
1000a230:	39400115 	stw	r5,4(r7)
1000a234:	39400315 	stw	r5,12(r7)
1000a238:	280d883a 	mov	r6,r5
1000a23c:	00800044 	movi	r2,1
1000a240:	30800015 	stw	r2,0(r6)
1000a244:	f800283a 	ret
1000a248:	39400215 	stw	r5,8(r7)
1000a24c:	003f7d06 	br	1000a044 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
1000a250:	28800115 	stw	r2,4(r5)
1000a254:	39000117 	ldw	r4,4(r7)
1000a258:	19000326 	beq	r3,r4,1000a268 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
1000a25c:	1009883a 	mov	r4,r2
1000a260:	21400215 	stw	r5,8(r4)
1000a264:	003fe106 	br	1000a1ec <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>
1000a268:	39400115 	stw	r5,4(r7)
1000a26c:	003fdf06 	br	1000a1ec <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>

1000a270 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>:
1000a270:	2005883a 	mov	r2,r4
1000a274:	21000217 	ldw	r4,8(r4)
1000a278:	12000317 	ldw	r8,12(r2)
1000a27c:	2000b326 	beq	r4,zero,1000a54c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2dc>
1000a280:	40004e26 	beq	r8,zero,1000a3bc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x14c>
1000a284:	400d883a 	mov	r6,r8
1000a288:	00000106 	br	1000a290 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x20>
1000a28c:	180d883a 	mov	r6,r3
1000a290:	30c00217 	ldw	r3,8(r6)
1000a294:	183ffd1e 	bne	r3,zero,1000a28c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1c>
1000a298:	31c00317 	ldw	r7,12(r6)
1000a29c:	3080aa26 	beq	r6,r2,1000a548 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d8>
1000a2a0:	21800115 	stw	r6,4(r4)
1000a2a4:	31000215 	stw	r4,8(r6)
1000a2a8:	32009f26 	beq	r6,r8,1000a528 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2b8>
1000a2ac:	30c00117 	ldw	r3,4(r6)
1000a2b0:	3800a326 	beq	r7,zero,1000a540 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d0>
1000a2b4:	38c00115 	stw	r3,4(r7)
1000a2b8:	31000117 	ldw	r4,4(r6)
1000a2bc:	21c00215 	stw	r7,8(r4)
1000a2c0:	32000315 	stw	r8,12(r6)
1000a2c4:	11000317 	ldw	r4,12(r2)
1000a2c8:	21800115 	stw	r6,4(r4)
1000a2cc:	29000117 	ldw	r4,4(r5)
1000a2d0:	20809226 	beq	r4,r2,1000a51c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2ac>
1000a2d4:	12000117 	ldw	r8,4(r2)
1000a2d8:	41000217 	ldw	r4,8(r8)
1000a2dc:	20809626 	beq	r4,r2,1000a538 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c8>
1000a2e0:	41800315 	stw	r6,12(r8)
1000a2e4:	12400017 	ldw	r9,0(r2)
1000a2e8:	31000017 	ldw	r4,0(r6)
1000a2ec:	32000115 	stw	r8,4(r6)
1000a2f0:	32400015 	stw	r9,0(r6)
1000a2f4:	11000015 	stw	r4,0(r2)
1000a2f8:	20004726 	beq	r4,zero,1000a418 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1a8>
1000a2fc:	29800117 	ldw	r6,4(r5)
1000a300:	02800044 	movi	r10,1
1000a304:	31c02926 	beq	r6,r7,1000a3ac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
1000a308:	38000326 	beq	r7,zero,1000a318 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xa8>
1000a30c:	39800017 	ldw	r6,0(r7)
1000a310:	31800060 	cmpeqi	r6,r6,1
1000a314:	30002626 	beq	r6,zero,1000a3b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
1000a318:	19800217 	ldw	r6,8(r3)
1000a31c:	31c03f26 	beq	r6,r7,1000a41c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1ac>
1000a320:	32400017 	ldw	r9,0(r6)
1000a324:	32000317 	ldw	r8,12(r6)
1000a328:	4800111e 	bne	r9,zero,1000a370 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x100>
1000a32c:	32800015 	stw	r10,0(r6)
1000a330:	18000015 	stw	zero,0(r3)
1000a334:	1a000215 	stw	r8,8(r3)
1000a338:	40000126 	beq	r8,zero,1000a340 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xd0>
1000a33c:	40c00115 	stw	r3,4(r8)
1000a340:	19000117 	ldw	r4,4(r3)
1000a344:	31000115 	stw	r4,4(r6)
1000a348:	2a400117 	ldw	r9,4(r5)
1000a34c:	1a406726 	beq	r3,r9,1000a4ec <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x27c>
1000a350:	22400317 	ldw	r9,12(r4)
1000a354:	1a406826 	beq	r3,r9,1000a4f8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x288>
1000a358:	21800215 	stw	r6,8(r4)
1000a35c:	19000217 	ldw	r4,8(r3)
1000a360:	30c00315 	stw	r3,12(r6)
1000a364:	22000317 	ldw	r8,12(r4)
1000a368:	19800115 	stw	r6,4(r3)
1000a36c:	200d883a 	mov	r6,r4
1000a370:	40000326 	beq	r8,zero,1000a380 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x110>
1000a374:	42400017 	ldw	r9,0(r8)
1000a378:	4a400058 	cmpnei	r9,r9,1
1000a37c:	4800831e 	bne	r9,zero,1000a58c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x31c>
1000a380:	32400217 	ldw	r9,8(r6)
1000a384:	48000326 	beq	r9,zero,1000a394 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
1000a388:	4a000017 	ldw	r8,0(r9)
1000a38c:	42000058 	cmpnei	r8,r8,1
1000a390:	40009b1e 	bne	r8,zero,1000a600 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x390>
1000a394:	30000015 	stw	zero,0(r6)
1000a398:	19800117 	ldw	r6,4(r3)
1000a39c:	180f883a 	mov	r7,r3
1000a3a0:	3007883a 	mov	r3,r6
1000a3a4:	29800117 	ldw	r6,4(r5)
1000a3a8:	31ffd71e 	bne	r6,r7,1000a308 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x98>
1000a3ac:	38004e26 	beq	r7,zero,1000a4e8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x278>
1000a3b0:	00c00044 	movi	r3,1
1000a3b4:	38c00015 	stw	r3,0(r7)
1000a3b8:	f800283a 	ret
1000a3bc:	10c00117 	ldw	r3,4(r2)
1000a3c0:	20c00115 	stw	r3,4(r4)
1000a3c4:	200f883a 	mov	r7,r4
1000a3c8:	29000117 	ldw	r4,4(r5)
1000a3cc:	20806426 	beq	r4,r2,1000a560 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f0>
1000a3d0:	11000117 	ldw	r4,4(r2)
1000a3d4:	21800217 	ldw	r6,8(r4)
1000a3d8:	30805526 	beq	r6,r2,1000a530 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c0>
1000a3dc:	21c00315 	stw	r7,12(r4)
1000a3e0:	29000217 	ldw	r4,8(r5)
1000a3e4:	20806026 	beq	r4,r2,1000a568 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f8>
1000a3e8:	29800317 	ldw	r6,12(r5)
1000a3ec:	11000017 	ldw	r4,0(r2)
1000a3f0:	30bfc11e 	bne	r6,r2,1000a2f8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
1000a3f4:	11800217 	ldw	r6,8(r2)
1000a3f8:	3000b626 	beq	r6,zero,1000a6d4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x464>
1000a3fc:	3811883a 	mov	r8,r7
1000a400:	00000106 	br	1000a408 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x198>
1000a404:	3011883a 	mov	r8,r6
1000a408:	41800317 	ldw	r6,12(r8)
1000a40c:	303ffd1e 	bne	r6,zero,1000a404 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x194>
1000a410:	2a000315 	stw	r8,12(r5)
1000a414:	203fb91e 	bne	r4,zero,1000a2fc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x8c>
1000a418:	f800283a 	ret
1000a41c:	19800317 	ldw	r6,12(r3)
1000a420:	31000017 	ldw	r4,0(r6)
1000a424:	32000217 	ldw	r8,8(r6)
1000a428:	2000111e 	bne	r4,zero,1000a470 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x200>
1000a42c:	32800015 	stw	r10,0(r6)
1000a430:	18000015 	stw	zero,0(r3)
1000a434:	1a000315 	stw	r8,12(r3)
1000a438:	40000126 	beq	r8,zero,1000a440 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1d0>
1000a43c:	40c00115 	stw	r3,4(r8)
1000a440:	19000117 	ldw	r4,4(r3)
1000a444:	31000115 	stw	r4,4(r6)
1000a448:	2a400117 	ldw	r9,4(r5)
1000a44c:	1a402d26 	beq	r3,r9,1000a504 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x294>
1000a450:	22400217 	ldw	r9,8(r4)
1000a454:	1a402e26 	beq	r3,r9,1000a510 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2a0>
1000a458:	21800315 	stw	r6,12(r4)
1000a45c:	19000317 	ldw	r4,12(r3)
1000a460:	30c00215 	stw	r3,8(r6)
1000a464:	22000217 	ldw	r8,8(r4)
1000a468:	19800115 	stw	r6,4(r3)
1000a46c:	200d883a 	mov	r6,r4
1000a470:	40000326 	beq	r8,zero,1000a480 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x210>
1000a474:	41000017 	ldw	r4,0(r8)
1000a478:	21000058 	cmpnei	r4,r4,1
1000a47c:	2000791e 	bne	r4,zero,1000a664 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3f4>
1000a480:	32400317 	ldw	r9,12(r6)
1000a484:	483fc326 	beq	r9,zero,1000a394 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
1000a488:	49000017 	ldw	r4,0(r9)
1000a48c:	21000058 	cmpnei	r4,r4,1
1000a490:	203fc026 	beq	r4,zero,1000a394 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
1000a494:	1a000017 	ldw	r8,0(r3)
1000a498:	19000317 	ldw	r4,12(r3)
1000a49c:	32000015 	stw	r8,0(r6)
1000a4a0:	01800044 	movi	r6,1
1000a4a4:	19800015 	stw	r6,0(r3)
1000a4a8:	01800044 	movi	r6,1
1000a4ac:	49800015 	stw	r6,0(r9)
1000a4b0:	21800217 	ldw	r6,8(r4)
1000a4b4:	19800315 	stw	r6,12(r3)
1000a4b8:	30000126 	beq	r6,zero,1000a4c0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x250>
1000a4bc:	30c00115 	stw	r3,4(r6)
1000a4c0:	19800117 	ldw	r6,4(r3)
1000a4c4:	21800115 	stw	r6,4(r4)
1000a4c8:	2a000117 	ldw	r8,4(r5)
1000a4cc:	1a008926 	beq	r3,r8,1000a6f4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x484>
1000a4d0:	31400217 	ldw	r5,8(r6)
1000a4d4:	19408d26 	beq	r3,r5,1000a70c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x49c>
1000a4d8:	31000315 	stw	r4,12(r6)
1000a4dc:	20c00215 	stw	r3,8(r4)
1000a4e0:	19000115 	stw	r4,4(r3)
1000a4e4:	383fb21e 	bne	r7,zero,1000a3b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
1000a4e8:	f800283a 	ret
1000a4ec:	29800115 	stw	r6,4(r5)
1000a4f0:	19000217 	ldw	r4,8(r3)
1000a4f4:	003f9a06 	br	1000a360 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
1000a4f8:	21800315 	stw	r6,12(r4)
1000a4fc:	4009883a 	mov	r4,r8
1000a500:	003f9706 	br	1000a360 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
1000a504:	29800115 	stw	r6,4(r5)
1000a508:	19000317 	ldw	r4,12(r3)
1000a50c:	003fd406 	br	1000a460 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
1000a510:	21800215 	stw	r6,8(r4)
1000a514:	4009883a 	mov	r4,r8
1000a518:	003fd106 	br	1000a460 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
1000a51c:	29800115 	stw	r6,4(r5)
1000a520:	12000117 	ldw	r8,4(r2)
1000a524:	003f6f06 	br	1000a2e4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
1000a528:	3007883a 	mov	r3,r6
1000a52c:	003f6706 	br	1000a2cc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x5c>
1000a530:	21c00215 	stw	r7,8(r4)
1000a534:	003faa06 	br	1000a3e0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
1000a538:	41800215 	stw	r6,8(r8)
1000a53c:	003f6906 	br	1000a2e4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
1000a540:	1809883a 	mov	r4,r3
1000a544:	003f5d06 	br	1000a2bc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4c>
1000a548:	3811883a 	mov	r8,r7
1000a54c:	10c00117 	ldw	r3,4(r2)
1000a550:	000f883a 	mov	r7,zero
1000a554:	403f9c26 	beq	r8,zero,1000a3c8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x158>
1000a558:	4009883a 	mov	r4,r8
1000a55c:	003f9806 	br	1000a3c0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x150>
1000a560:	29c00115 	stw	r7,4(r5)
1000a564:	003f9e06 	br	1000a3e0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
1000a568:	11000317 	ldw	r4,12(r2)
1000a56c:	20005c26 	beq	r4,zero,1000a6e0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x470>
1000a570:	380d883a 	mov	r6,r7
1000a574:	00000106 	br	1000a57c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x30c>
1000a578:	200d883a 	mov	r6,r4
1000a57c:	31000217 	ldw	r4,8(r6)
1000a580:	203ffd1e 	bne	r4,zero,1000a578 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x308>
1000a584:	29800215 	stw	r6,8(r5)
1000a588:	003f9706 	br	1000a3e8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
1000a58c:	32400217 	ldw	r9,8(r6)
1000a590:	4800181e 	bne	r9,zero,1000a5f4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x384>
1000a594:	41000217 	ldw	r4,8(r8)
1000a598:	02400044 	movi	r9,1
1000a59c:	42400015 	stw	r9,0(r8)
1000a5a0:	30000015 	stw	zero,0(r6)
1000a5a4:	31000315 	stw	r4,12(r6)
1000a5a8:	20000126 	beq	r4,zero,1000a5b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x340>
1000a5ac:	21800115 	stw	r6,4(r4)
1000a5b0:	31000117 	ldw	r4,4(r6)
1000a5b4:	41000115 	stw	r4,4(r8)
1000a5b8:	2a400117 	ldw	r9,4(r5)
1000a5bc:	32404b26 	beq	r6,r9,1000a6ec <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x47c>
1000a5c0:	22400217 	ldw	r9,8(r4)
1000a5c4:	32402326 	beq	r6,r9,1000a654 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3e4>
1000a5c8:	22000315 	stw	r8,12(r4)
1000a5cc:	41800215 	stw	r6,8(r8)
1000a5d0:	19000217 	ldw	r4,8(r3)
1000a5d4:	1a800017 	ldw	r10,0(r3)
1000a5d8:	32000115 	stw	r8,4(r6)
1000a5dc:	22400217 	ldw	r9,8(r4)
1000a5e0:	22800015 	stw	r10,0(r4)
1000a5e4:	01800044 	movi	r6,1
1000a5e8:	19800015 	stw	r6,0(r3)
1000a5ec:	48000b26 	beq	r9,zero,1000a61c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ac>
1000a5f0:	00000806 	br	1000a614 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3a4>
1000a5f4:	49000017 	ldw	r4,0(r9)
1000a5f8:	21000060 	cmpeqi	r4,r4,1
1000a5fc:	203fe51e 	bne	r4,zero,1000a594 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x324>
1000a600:	1a000017 	ldw	r8,0(r3)
1000a604:	19000217 	ldw	r4,8(r3)
1000a608:	32000015 	stw	r8,0(r6)
1000a60c:	01800044 	movi	r6,1
1000a610:	19800015 	stw	r6,0(r3)
1000a614:	01800044 	movi	r6,1
1000a618:	49800015 	stw	r6,0(r9)
1000a61c:	21800317 	ldw	r6,12(r4)
1000a620:	19800215 	stw	r6,8(r3)
1000a624:	30000126 	beq	r6,zero,1000a62c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3bc>
1000a628:	30c00115 	stw	r3,4(r6)
1000a62c:	19800117 	ldw	r6,4(r3)
1000a630:	21800115 	stw	r6,4(r4)
1000a634:	2a000117 	ldw	r8,4(r5)
1000a638:	1a000826 	beq	r3,r8,1000a65c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ec>
1000a63c:	31400317 	ldw	r5,12(r6)
1000a640:	19402226 	beq	r3,r5,1000a6cc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x45c>
1000a644:	31000215 	stw	r4,8(r6)
1000a648:	20c00315 	stw	r3,12(r4)
1000a64c:	19000115 	stw	r4,4(r3)
1000a650:	003f5606 	br	1000a3ac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
1000a654:	22000215 	stw	r8,8(r4)
1000a658:	003fdc06 	br	1000a5cc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
1000a65c:	29000115 	stw	r4,4(r5)
1000a660:	003ff906 	br	1000a648 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
1000a664:	32400317 	ldw	r9,12(r6)
1000a668:	4800241e 	bne	r9,zero,1000a6fc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x48c>
1000a66c:	41000317 	ldw	r4,12(r8)
1000a670:	02400044 	movi	r9,1
1000a674:	42400015 	stw	r9,0(r8)
1000a678:	30000015 	stw	zero,0(r6)
1000a67c:	31000215 	stw	r4,8(r6)
1000a680:	20000126 	beq	r4,zero,1000a688 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x418>
1000a684:	21800115 	stw	r6,4(r4)
1000a688:	31000117 	ldw	r4,4(r6)
1000a68c:	41000115 	stw	r4,4(r8)
1000a690:	2a400117 	ldw	r9,4(r5)
1000a694:	32401f26 	beq	r6,r9,1000a714 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4a4>
1000a698:	22400317 	ldw	r9,12(r4)
1000a69c:	32401f26 	beq	r6,r9,1000a71c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4ac>
1000a6a0:	22000215 	stw	r8,8(r4)
1000a6a4:	41800315 	stw	r6,12(r8)
1000a6a8:	19000317 	ldw	r4,12(r3)
1000a6ac:	1a800017 	ldw	r10,0(r3)
1000a6b0:	32000115 	stw	r8,4(r6)
1000a6b4:	22400317 	ldw	r9,12(r4)
1000a6b8:	22800015 	stw	r10,0(r4)
1000a6bc:	01800044 	movi	r6,1
1000a6c0:	19800015 	stw	r6,0(r3)
1000a6c4:	483f7a26 	beq	r9,zero,1000a4b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x240>
1000a6c8:	003f7706 	br	1000a4a8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x238>
1000a6cc:	31000315 	stw	r4,12(r6)
1000a6d0:	003fdd06 	br	1000a648 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
1000a6d4:	11800117 	ldw	r6,4(r2)
1000a6d8:	29800315 	stw	r6,12(r5)
1000a6dc:	003f0606 	br	1000a2f8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
1000a6e0:	11000117 	ldw	r4,4(r2)
1000a6e4:	29000215 	stw	r4,8(r5)
1000a6e8:	003f3f06 	br	1000a3e8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
1000a6ec:	2a000115 	stw	r8,4(r5)
1000a6f0:	003fb606 	br	1000a5cc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
1000a6f4:	29000115 	stw	r4,4(r5)
1000a6f8:	003f7806 	br	1000a4dc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
1000a6fc:	49000017 	ldw	r4,0(r9)
1000a700:	21000060 	cmpeqi	r4,r4,1
1000a704:	203fd91e 	bne	r4,zero,1000a66c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3fc>
1000a708:	003f6206 	br	1000a494 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x224>
1000a70c:	31000215 	stw	r4,8(r6)
1000a710:	003f7206 	br	1000a4dc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
1000a714:	2a000115 	stw	r8,4(r5)
1000a718:	003fe206 	br	1000a6a4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>
1000a71c:	22000315 	stw	r8,12(r4)
1000a720:	003fe006 	br	1000a6a4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>

1000a724 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_>:
1000a724:	0005883a 	mov	r2,zero
1000a728:	20000a26 	beq	r4,zero,1000a754 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
1000a72c:	20c00017 	ldw	r3,0(r4)
1000a730:	18c00058 	cmpnei	r3,r3,1
1000a734:	18000526 	beq	r3,zero,1000a74c <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x28>
1000a738:	21400626 	beq	r4,r5,1000a754 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
1000a73c:	21000117 	ldw	r4,4(r4)
1000a740:	20c00017 	ldw	r3,0(r4)
1000a744:	18c00058 	cmpnei	r3,r3,1
1000a748:	183ffb1e 	bne	r3,zero,1000a738 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x14>
1000a74c:	10800044 	addi	r2,r2,1
1000a750:	217ffa1e 	bne	r4,r5,1000a73c <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x18>
1000a754:	f800283a 	ret

1000a758 <_ZSt21__throw_bad_exceptionv>:
1000a758:	deffff04 	addi	sp,sp,-4
1000a75c:	01000104 	movi	r4,4
1000a760:	dfc00015 	stw	ra,0(sp)
1000a764:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a768:	00c400b4 	movhi	r3,4098
1000a76c:	01840074 	movhi	r6,4097
1000a770:	014400b4 	movhi	r5,4098
1000a774:	18d71c04 	addi	r3,r3,23664
1000a778:	31b40604 	addi	r6,r6,-12264
1000a77c:	29570104 	addi	r5,r5,23556
1000a780:	1009883a 	mov	r4,r2
1000a784:	10c00015 	stw	r3,0(r2)
1000a788:	0008d240 	call	10008d24 <__cxa_throw>

1000a78c <_ZSt17__throw_bad_allocv>:
1000a78c:	deffff04 	addi	sp,sp,-4
1000a790:	01000104 	movi	r4,4
1000a794:	dfc00015 	stw	ra,0(sp)
1000a798:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a79c:	00c400b4 	movhi	r3,4098
1000a7a0:	01840074 	movhi	r6,4097
1000a7a4:	014400b4 	movhi	r5,4098
1000a7a8:	18d6b604 	addi	r3,r3,23256
1000a7ac:	31a39304 	addi	r6,r6,-29108
1000a7b0:	2956b104 	addi	r5,r5,23236
1000a7b4:	1009883a 	mov	r4,r2
1000a7b8:	10c00015 	stw	r3,0(r2)
1000a7bc:	0008d240 	call	10008d24 <__cxa_throw>

1000a7c0 <_ZSt16__throw_bad_castv>:
1000a7c0:	deffff04 	addi	sp,sp,-4
1000a7c4:	01000104 	movi	r4,4
1000a7c8:	dfc00015 	stw	ra,0(sp)
1000a7cc:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a7d0:	00c400b4 	movhi	r3,4098
1000a7d4:	01840074 	movhi	r6,4097
1000a7d8:	014400b4 	movhi	r5,4098
1000a7dc:	18d74404 	addi	r3,r3,23824
1000a7e0:	31b42d04 	addi	r6,r6,-12108
1000a7e4:	29573f04 	addi	r5,r5,23804
1000a7e8:	1009883a 	mov	r4,r2
1000a7ec:	10c00015 	stw	r3,0(r2)
1000a7f0:	0008d240 	call	10008d24 <__cxa_throw>

1000a7f4 <_ZSt18__throw_bad_typeidv>:
1000a7f4:	deffff04 	addi	sp,sp,-4
1000a7f8:	01000104 	movi	r4,4
1000a7fc:	dfc00015 	stw	ra,0(sp)
1000a800:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a804:	00c400b4 	movhi	r3,4098
1000a808:	01840074 	movhi	r6,4097
1000a80c:	014400b4 	movhi	r5,4098
1000a810:	18d75404 	addi	r3,r3,23888
1000a814:	31b44204 	addi	r6,r6,-12024
1000a818:	29574f04 	addi	r5,r5,23868
1000a81c:	1009883a 	mov	r4,r2
1000a820:	10c00015 	stw	r3,0(r2)
1000a824:	0008d240 	call	10008d24 <__cxa_throw>

1000a828 <_ZSt19__throw_logic_errorPKc>:
1000a828:	00c400b4 	movhi	r3,4098
1000a82c:	deffef04 	addi	sp,sp,-68
1000a830:	18d36a04 	addi	r3,r3,19880
1000a834:	01440074 	movhi	r5,4097
1000a838:	00840074 	movhi	r2,4097
1000a83c:	2964f504 	addi	r5,r5,-27692
1000a840:	10aa2d04 	addi	r2,r2,-22348
1000a844:	d9000015 	stw	r4,0(sp)
1000a848:	d8c00915 	stw	r3,36(sp)
1000a84c:	d9000204 	addi	r4,sp,8
1000a850:	d8c00f04 	addi	r3,sp,60
1000a854:	d9400815 	stw	r5,32(sp)
1000a858:	d8c00a15 	stw	r3,40(sp)
1000a85c:	dfc01015 	stw	ra,64(sp)
1000a860:	d8800b15 	stw	r2,44(sp)
1000a864:	df000f15 	stw	fp,60(sp)
1000a868:	dec00c15 	stw	sp,48(sp)
1000a86c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000a870:	01000204 	movi	r4,8
1000a874:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a878:	d9400017 	ldw	r5,0(sp)
1000a87c:	1007883a 	mov	r3,r2
1000a880:	d8800115 	stw	r2,4(sp)
1000a884:	1809883a 	mov	r4,r3
1000a888:	00800044 	movi	r2,1
1000a88c:	d8800315 	stw	r2,12(sp)
1000a890:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000a894:	d9000117 	ldw	r4,4(sp)
1000a898:	01840074 	movhi	r6,4097
1000a89c:	014400b4 	movhi	r5,4098
1000a8a0:	00bfffc4 	movi	r2,-1
1000a8a4:	31b52204 	addi	r6,r6,-11128
1000a8a8:	29577e04 	addi	r5,r5,24056
1000a8ac:	d8800315 	stw	r2,12(sp)
1000a8b0:	0008d240 	call	10008d24 <__cxa_throw>
1000a8b4:	d8800417 	ldw	r2,16(sp)
1000a8b8:	d9000117 	ldw	r4,4(sp)
1000a8bc:	d8800015 	stw	r2,0(sp)
1000a8c0:	0009d940 	call	10009d94 <__cxa_free_exception>
1000a8c4:	d9000017 	ldw	r4,0(sp)
1000a8c8:	00bfffc4 	movi	r2,-1
1000a8cc:	d8800315 	stw	r2,12(sp)
1000a8d0:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000a8d4 <_ZSt20__throw_domain_errorPKc>:
1000a8d4:	00c400b4 	movhi	r3,4098
1000a8d8:	deffef04 	addi	sp,sp,-68
1000a8dc:	18d36b84 	addi	r3,r3,19886
1000a8e0:	01440074 	movhi	r5,4097
1000a8e4:	00840074 	movhi	r2,4097
1000a8e8:	2964f504 	addi	r5,r5,-27692
1000a8ec:	10aa5804 	addi	r2,r2,-22176
1000a8f0:	d9000015 	stw	r4,0(sp)
1000a8f4:	d8c00915 	stw	r3,36(sp)
1000a8f8:	d9000204 	addi	r4,sp,8
1000a8fc:	d8c00f04 	addi	r3,sp,60
1000a900:	d9400815 	stw	r5,32(sp)
1000a904:	d8c00a15 	stw	r3,40(sp)
1000a908:	dfc01015 	stw	ra,64(sp)
1000a90c:	d8800b15 	stw	r2,44(sp)
1000a910:	df000f15 	stw	fp,60(sp)
1000a914:	dec00c15 	stw	sp,48(sp)
1000a918:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000a91c:	01000204 	movi	r4,8
1000a920:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a924:	d9400017 	ldw	r5,0(sp)
1000a928:	1007883a 	mov	r3,r2
1000a92c:	d8800115 	stw	r2,4(sp)
1000a930:	1809883a 	mov	r4,r3
1000a934:	00800044 	movi	r2,1
1000a938:	d8800315 	stw	r2,12(sp)
1000a93c:	000b4700 	call	1000b470 <_ZNSt12domain_errorC1EPKc>
1000a940:	d9000117 	ldw	r4,4(sp)
1000a944:	01840074 	movhi	r6,4097
1000a948:	014400b4 	movhi	r5,4098
1000a94c:	00bfffc4 	movi	r2,-1
1000a950:	31b54504 	addi	r6,r6,-10988
1000a954:	29578604 	addi	r5,r5,24088
1000a958:	d8800315 	stw	r2,12(sp)
1000a95c:	0008d240 	call	10008d24 <__cxa_throw>
1000a960:	d8800417 	ldw	r2,16(sp)
1000a964:	d9000117 	ldw	r4,4(sp)
1000a968:	d8800015 	stw	r2,0(sp)
1000a96c:	0009d940 	call	10009d94 <__cxa_free_exception>
1000a970:	d9000017 	ldw	r4,0(sp)
1000a974:	00bfffc4 	movi	r2,-1
1000a978:	d8800315 	stw	r2,12(sp)
1000a97c:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000a980 <_ZSt24__throw_invalid_argumentPKc>:
1000a980:	00c400b4 	movhi	r3,4098
1000a984:	deffef04 	addi	sp,sp,-68
1000a988:	18d36d04 	addi	r3,r3,19892
1000a98c:	01440074 	movhi	r5,4097
1000a990:	00840074 	movhi	r2,4097
1000a994:	2964f504 	addi	r5,r5,-27692
1000a998:	10aa8304 	addi	r2,r2,-22004
1000a99c:	d9000015 	stw	r4,0(sp)
1000a9a0:	d8c00915 	stw	r3,36(sp)
1000a9a4:	d9000204 	addi	r4,sp,8
1000a9a8:	d8c00f04 	addi	r3,sp,60
1000a9ac:	d9400815 	stw	r5,32(sp)
1000a9b0:	d8c00a15 	stw	r3,40(sp)
1000a9b4:	dfc01015 	stw	ra,64(sp)
1000a9b8:	d8800b15 	stw	r2,44(sp)
1000a9bc:	df000f15 	stw	fp,60(sp)
1000a9c0:	dec00c15 	stw	sp,48(sp)
1000a9c4:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000a9c8:	01000204 	movi	r4,8
1000a9cc:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000a9d0:	d9400017 	ldw	r5,0(sp)
1000a9d4:	1007883a 	mov	r3,r2
1000a9d8:	d8800115 	stw	r2,4(sp)
1000a9dc:	1809883a 	mov	r4,r3
1000a9e0:	00800044 	movi	r2,1
1000a9e4:	d8800315 	stw	r2,12(sp)
1000a9e8:	000b4a00 	call	1000b4a0 <_ZNSt16invalid_argumentC1EPKc>
1000a9ec:	d9000117 	ldw	r4,4(sp)
1000a9f0:	01840074 	movhi	r6,4097
1000a9f4:	014400b4 	movhi	r5,4098
1000a9f8:	00bfffc4 	movi	r2,-1
1000a9fc:	31b55604 	addi	r6,r6,-10920
1000aa00:	29578f04 	addi	r5,r5,24124
1000aa04:	d8800315 	stw	r2,12(sp)
1000aa08:	0008d240 	call	10008d24 <__cxa_throw>
1000aa0c:	d8800417 	ldw	r2,16(sp)
1000aa10:	d9000117 	ldw	r4,4(sp)
1000aa14:	d8800015 	stw	r2,0(sp)
1000aa18:	0009d940 	call	10009d94 <__cxa_free_exception>
1000aa1c:	d9000017 	ldw	r4,0(sp)
1000aa20:	00bfffc4 	movi	r2,-1
1000aa24:	d8800315 	stw	r2,12(sp)
1000aa28:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000aa2c <_ZSt20__throw_length_errorPKc>:
1000aa2c:	00c400b4 	movhi	r3,4098
1000aa30:	deffef04 	addi	sp,sp,-68
1000aa34:	18d36e84 	addi	r3,r3,19898
1000aa38:	01440074 	movhi	r5,4097
1000aa3c:	00840074 	movhi	r2,4097
1000aa40:	2964f504 	addi	r5,r5,-27692
1000aa44:	10aaae04 	addi	r2,r2,-21832
1000aa48:	d9000015 	stw	r4,0(sp)
1000aa4c:	d8c00915 	stw	r3,36(sp)
1000aa50:	d9000204 	addi	r4,sp,8
1000aa54:	d8c00f04 	addi	r3,sp,60
1000aa58:	d9400815 	stw	r5,32(sp)
1000aa5c:	d8c00a15 	stw	r3,40(sp)
1000aa60:	dfc01015 	stw	ra,64(sp)
1000aa64:	d8800b15 	stw	r2,44(sp)
1000aa68:	df000f15 	stw	fp,60(sp)
1000aa6c:	dec00c15 	stw	sp,48(sp)
1000aa70:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000aa74:	01000204 	movi	r4,8
1000aa78:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000aa7c:	d9400017 	ldw	r5,0(sp)
1000aa80:	1007883a 	mov	r3,r2
1000aa84:	d8800115 	stw	r2,4(sp)
1000aa88:	1809883a 	mov	r4,r3
1000aa8c:	00800044 	movi	r2,1
1000aa90:	d8800315 	stw	r2,12(sp)
1000aa94:	000b4d00 	call	1000b4d0 <_ZNSt12length_errorC1EPKc>
1000aa98:	d9000117 	ldw	r4,4(sp)
1000aa9c:	01840074 	movhi	r6,4097
1000aaa0:	014400b4 	movhi	r5,4098
1000aaa4:	00bfffc4 	movi	r2,-1
1000aaa8:	31b56704 	addi	r6,r6,-10852
1000aaac:	29579704 	addi	r5,r5,24156
1000aab0:	d8800315 	stw	r2,12(sp)
1000aab4:	0008d240 	call	10008d24 <__cxa_throw>
1000aab8:	d8800417 	ldw	r2,16(sp)
1000aabc:	d9000117 	ldw	r4,4(sp)
1000aac0:	d8800015 	stw	r2,0(sp)
1000aac4:	0009d940 	call	10009d94 <__cxa_free_exception>
1000aac8:	d9000017 	ldw	r4,0(sp)
1000aacc:	00bfffc4 	movi	r2,-1
1000aad0:	d8800315 	stw	r2,12(sp)
1000aad4:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000aad8 <_ZSt20__throw_out_of_rangePKc>:
1000aad8:	00c400b4 	movhi	r3,4098
1000aadc:	deffef04 	addi	sp,sp,-68
1000aae0:	18d37004 	addi	r3,r3,19904
1000aae4:	01440074 	movhi	r5,4097
1000aae8:	00840074 	movhi	r2,4097
1000aaec:	2964f504 	addi	r5,r5,-27692
1000aaf0:	10aad904 	addi	r2,r2,-21660
1000aaf4:	d9000015 	stw	r4,0(sp)
1000aaf8:	d8c00915 	stw	r3,36(sp)
1000aafc:	d9000204 	addi	r4,sp,8
1000ab00:	d8c00f04 	addi	r3,sp,60
1000ab04:	d9400815 	stw	r5,32(sp)
1000ab08:	d8c00a15 	stw	r3,40(sp)
1000ab0c:	dfc01015 	stw	ra,64(sp)
1000ab10:	d8800b15 	stw	r2,44(sp)
1000ab14:	df000f15 	stw	fp,60(sp)
1000ab18:	dec00c15 	stw	sp,48(sp)
1000ab1c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000ab20:	01000204 	movi	r4,8
1000ab24:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000ab28:	d9400017 	ldw	r5,0(sp)
1000ab2c:	1007883a 	mov	r3,r2
1000ab30:	d8800115 	stw	r2,4(sp)
1000ab34:	1809883a 	mov	r4,r3
1000ab38:	00800044 	movi	r2,1
1000ab3c:	d8800315 	stw	r2,12(sp)
1000ab40:	000b5000 	call	1000b500 <_ZNSt12out_of_rangeC1EPKc>
1000ab44:	d9000117 	ldw	r4,4(sp)
1000ab48:	01840074 	movhi	r6,4097
1000ab4c:	014400b4 	movhi	r5,4098
1000ab50:	00bfffc4 	movi	r2,-1
1000ab54:	31b57804 	addi	r6,r6,-10784
1000ab58:	29579f04 	addi	r5,r5,24188
1000ab5c:	d8800315 	stw	r2,12(sp)
1000ab60:	0008d240 	call	10008d24 <__cxa_throw>
1000ab64:	d8800417 	ldw	r2,16(sp)
1000ab68:	d9000117 	ldw	r4,4(sp)
1000ab6c:	d8800015 	stw	r2,0(sp)
1000ab70:	0009d940 	call	10009d94 <__cxa_free_exception>
1000ab74:	d9000017 	ldw	r4,0(sp)
1000ab78:	00bfffc4 	movi	r2,-1
1000ab7c:	d8800315 	stw	r2,12(sp)
1000ab80:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>:
1000ab84:	deffec04 	addi	sp,sp,-80
1000ab88:	df000f15 	stw	fp,60(sp)
1000ab8c:	dfc01015 	stw	ra,64(sp)
1000ab90:	df000f04 	addi	fp,sp,60
1000ab94:	e13ff215 	stw	r4,-56(fp)
1000ab98:	e1400215 	stw	r5,8(fp)
1000ab9c:	e1800315 	stw	r6,12(fp)
1000aba0:	e1c00415 	stw	r7,16(fp)
1000aba4:	01040074 	movhi	r4,4097
1000aba8:	00c400b4 	movhi	r3,4098
1000abac:	00840074 	movhi	r2,4097
1000abb0:	18d37184 	addi	r3,r3,19910
1000abb4:	10ab1604 	addi	r2,r2,-21416
1000abb8:	2124f504 	addi	r4,r4,-27692
1000abbc:	e0fffa15 	stw	r3,-24(fp)
1000abc0:	e6fffd15 	stw	sp,-12(fp)
1000abc4:	e13ff915 	stw	r4,-28(fp)
1000abc8:	e0bffc15 	stw	r2,-16(fp)
1000abcc:	e13ff304 	addi	r4,fp,-52
1000abd0:	e73ffb15 	stw	fp,-20(fp)
1000abd4:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000abd8:	e13ff217 	ldw	r4,-56(fp)
1000abdc:	00178f00 	call	100178f0 <strlen>
1000abe0:	10c080c4 	addi	r3,r2,515
1000abe4:	1806d0ba 	srli	r3,r3,2
1000abe8:	11408004 	addi	r5,r2,512
1000abec:	e1bff217 	ldw	r6,-56(fp)
1000abf0:	180490ba 	slli	r2,r3,2
1000abf4:	e1c00204 	addi	r7,fp,8
1000abf8:	d8b7c83a 	sub	sp,sp,r2
1000abfc:	d805883a 	mov	r2,sp
1000ac00:	1009883a 	mov	r4,r2
1000ac04:	e0bff215 	stw	r2,-56(fp)
1000ac08:	00bfffc4 	movi	r2,-1
1000ac0c:	e6fffd15 	stw	sp,-12(fp)
1000ac10:	e0bff415 	stw	r2,-48(fp)
1000ac14:	000b0880 	call	1000b088 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>
1000ac18:	01000204 	movi	r4,8
1000ac1c:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000ac20:	e17ff217 	ldw	r5,-56(fp)
1000ac24:	1009883a 	mov	r4,r2
1000ac28:	e0bff115 	stw	r2,-60(fp)
1000ac2c:	00800044 	movi	r2,1
1000ac30:	e0bff415 	stw	r2,-48(fp)
1000ac34:	000b5000 	call	1000b500 <_ZNSt12out_of_rangeC1EPKc>
1000ac38:	e13ff117 	ldw	r4,-60(fp)
1000ac3c:	01840074 	movhi	r6,4097
1000ac40:	014400b4 	movhi	r5,4098
1000ac44:	00bfffc4 	movi	r2,-1
1000ac48:	e0bff415 	stw	r2,-48(fp)
1000ac4c:	31b57804 	addi	r6,r6,-10784
1000ac50:	29579f04 	addi	r5,r5,24188
1000ac54:	0008d240 	call	10008d24 <__cxa_throw>
1000ac58:	e0bff517 	ldw	r2,-44(fp)
1000ac5c:	e13ff117 	ldw	r4,-60(fp)
1000ac60:	e0bff215 	stw	r2,-56(fp)
1000ac64:	0009d940 	call	10009d94 <__cxa_free_exception>
1000ac68:	e13ff217 	ldw	r4,-56(fp)
1000ac6c:	00bfffc4 	movi	r2,-1
1000ac70:	e0bff415 	stw	r2,-48(fp)
1000ac74:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ac78 <_ZSt21__throw_runtime_errorPKc>:
1000ac78:	00c400b4 	movhi	r3,4098
1000ac7c:	deffef04 	addi	sp,sp,-68
1000ac80:	18d37304 	addi	r3,r3,19916
1000ac84:	01440074 	movhi	r5,4097
1000ac88:	00840074 	movhi	r2,4097
1000ac8c:	2964f504 	addi	r5,r5,-27692
1000ac90:	10ab4104 	addi	r2,r2,-21244
1000ac94:	d9000015 	stw	r4,0(sp)
1000ac98:	d8c00915 	stw	r3,36(sp)
1000ac9c:	d9000204 	addi	r4,sp,8
1000aca0:	d8c00f04 	addi	r3,sp,60
1000aca4:	d9400815 	stw	r5,32(sp)
1000aca8:	d8c00a15 	stw	r3,40(sp)
1000acac:	dfc01015 	stw	ra,64(sp)
1000acb0:	d8800b15 	stw	r2,44(sp)
1000acb4:	df000f15 	stw	fp,60(sp)
1000acb8:	dec00c15 	stw	sp,48(sp)
1000acbc:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000acc0:	01000204 	movi	r4,8
1000acc4:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000acc8:	d9400017 	ldw	r5,0(sp)
1000accc:	1007883a 	mov	r3,r2
1000acd0:	d8800115 	stw	r2,4(sp)
1000acd4:	1809883a 	mov	r4,r3
1000acd8:	00800044 	movi	r2,1
1000acdc:	d8800315 	stw	r2,12(sp)
1000ace0:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000ace4:	d9000117 	ldw	r4,4(sp)
1000ace8:	01840074 	movhi	r6,4097
1000acec:	014400b4 	movhi	r5,4098
1000acf0:	00bfffc4 	movi	r2,-1
1000acf4:	31b58904 	addi	r6,r6,-10716
1000acf8:	2957a704 	addi	r5,r5,24220
1000acfc:	d8800315 	stw	r2,12(sp)
1000ad00:	0008d240 	call	10008d24 <__cxa_throw>
1000ad04:	d8800417 	ldw	r2,16(sp)
1000ad08:	d9000117 	ldw	r4,4(sp)
1000ad0c:	d8800015 	stw	r2,0(sp)
1000ad10:	0009d940 	call	10009d94 <__cxa_free_exception>
1000ad14:	d9000017 	ldw	r4,0(sp)
1000ad18:	00bfffc4 	movi	r2,-1
1000ad1c:	d8800315 	stw	r2,12(sp)
1000ad20:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ad24 <_ZSt19__throw_range_errorPKc>:
1000ad24:	00c400b4 	movhi	r3,4098
1000ad28:	deffef04 	addi	sp,sp,-68
1000ad2c:	18d37484 	addi	r3,r3,19922
1000ad30:	01440074 	movhi	r5,4097
1000ad34:	00840074 	movhi	r2,4097
1000ad38:	2964f504 	addi	r5,r5,-27692
1000ad3c:	10ab6c04 	addi	r2,r2,-21072
1000ad40:	d9000015 	stw	r4,0(sp)
1000ad44:	d8c00915 	stw	r3,36(sp)
1000ad48:	d9000204 	addi	r4,sp,8
1000ad4c:	d8c00f04 	addi	r3,sp,60
1000ad50:	d9400815 	stw	r5,32(sp)
1000ad54:	d8c00a15 	stw	r3,40(sp)
1000ad58:	dfc01015 	stw	ra,64(sp)
1000ad5c:	d8800b15 	stw	r2,44(sp)
1000ad60:	df000f15 	stw	fp,60(sp)
1000ad64:	dec00c15 	stw	sp,48(sp)
1000ad68:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000ad6c:	01000204 	movi	r4,8
1000ad70:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000ad74:	d9400017 	ldw	r5,0(sp)
1000ad78:	1007883a 	mov	r3,r2
1000ad7c:	d8800115 	stw	r2,4(sp)
1000ad80:	1809883a 	mov	r4,r3
1000ad84:	00800044 	movi	r2,1
1000ad88:	d8800315 	stw	r2,12(sp)
1000ad8c:	000b5dc0 	call	1000b5dc <_ZNSt11range_errorC1EPKc>
1000ad90:	d9000117 	ldw	r4,4(sp)
1000ad94:	01840074 	movhi	r6,4097
1000ad98:	014400b4 	movhi	r5,4098
1000ad9c:	00bfffc4 	movi	r2,-1
1000ada0:	31b5ac04 	addi	r6,r6,-10576
1000ada4:	2957ae04 	addi	r5,r5,24248
1000ada8:	d8800315 	stw	r2,12(sp)
1000adac:	0008d240 	call	10008d24 <__cxa_throw>
1000adb0:	d8800417 	ldw	r2,16(sp)
1000adb4:	d9000117 	ldw	r4,4(sp)
1000adb8:	d8800015 	stw	r2,0(sp)
1000adbc:	0009d940 	call	10009d94 <__cxa_free_exception>
1000adc0:	d9000017 	ldw	r4,0(sp)
1000adc4:	00bfffc4 	movi	r2,-1
1000adc8:	d8800315 	stw	r2,12(sp)
1000adcc:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000add0 <_ZSt22__throw_overflow_errorPKc>:
1000add0:	00c400b4 	movhi	r3,4098
1000add4:	deffef04 	addi	sp,sp,-68
1000add8:	18d37604 	addi	r3,r3,19928
1000addc:	01440074 	movhi	r5,4097
1000ade0:	00840074 	movhi	r2,4097
1000ade4:	2964f504 	addi	r5,r5,-27692
1000ade8:	10ab9704 	addi	r2,r2,-20900
1000adec:	d9000015 	stw	r4,0(sp)
1000adf0:	d8c00915 	stw	r3,36(sp)
1000adf4:	d9000204 	addi	r4,sp,8
1000adf8:	d8c00f04 	addi	r3,sp,60
1000adfc:	d9400815 	stw	r5,32(sp)
1000ae00:	d8c00a15 	stw	r3,40(sp)
1000ae04:	dfc01015 	stw	ra,64(sp)
1000ae08:	d8800b15 	stw	r2,44(sp)
1000ae0c:	df000f15 	stw	fp,60(sp)
1000ae10:	dec00c15 	stw	sp,48(sp)
1000ae14:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000ae18:	01000204 	movi	r4,8
1000ae1c:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000ae20:	d9400017 	ldw	r5,0(sp)
1000ae24:	1007883a 	mov	r3,r2
1000ae28:	d8800115 	stw	r2,4(sp)
1000ae2c:	1809883a 	mov	r4,r3
1000ae30:	00800044 	movi	r2,1
1000ae34:	d8800315 	stw	r2,12(sp)
1000ae38:	000b60c0 	call	1000b60c <_ZNSt14overflow_errorC1EPKc>
1000ae3c:	d9000117 	ldw	r4,4(sp)
1000ae40:	01840074 	movhi	r6,4097
1000ae44:	014400b4 	movhi	r5,4098
1000ae48:	00bfffc4 	movi	r2,-1
1000ae4c:	31b5bd04 	addi	r6,r6,-10508
1000ae50:	2957b604 	addi	r5,r5,24280
1000ae54:	d8800315 	stw	r2,12(sp)
1000ae58:	0008d240 	call	10008d24 <__cxa_throw>
1000ae5c:	d8800417 	ldw	r2,16(sp)
1000ae60:	d9000117 	ldw	r4,4(sp)
1000ae64:	d8800015 	stw	r2,0(sp)
1000ae68:	0009d940 	call	10009d94 <__cxa_free_exception>
1000ae6c:	d9000017 	ldw	r4,0(sp)
1000ae70:	00bfffc4 	movi	r2,-1
1000ae74:	d8800315 	stw	r2,12(sp)
1000ae78:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ae7c <_ZSt23__throw_underflow_errorPKc>:
1000ae7c:	00c400b4 	movhi	r3,4098
1000ae80:	deffef04 	addi	sp,sp,-68
1000ae84:	18d37784 	addi	r3,r3,19934
1000ae88:	01440074 	movhi	r5,4097
1000ae8c:	00840074 	movhi	r2,4097
1000ae90:	2964f504 	addi	r5,r5,-27692
1000ae94:	10abc204 	addi	r2,r2,-20728
1000ae98:	d9000015 	stw	r4,0(sp)
1000ae9c:	d8c00915 	stw	r3,36(sp)
1000aea0:	d9000204 	addi	r4,sp,8
1000aea4:	d8c00f04 	addi	r3,sp,60
1000aea8:	d9400815 	stw	r5,32(sp)
1000aeac:	d8c00a15 	stw	r3,40(sp)
1000aeb0:	dfc01015 	stw	ra,64(sp)
1000aeb4:	d8800b15 	stw	r2,44(sp)
1000aeb8:	df000f15 	stw	fp,60(sp)
1000aebc:	dec00c15 	stw	sp,48(sp)
1000aec0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000aec4:	01000204 	movi	r4,8
1000aec8:	0009d3c0 	call	10009d3c <__cxa_allocate_exception>
1000aecc:	d9400017 	ldw	r5,0(sp)
1000aed0:	1007883a 	mov	r3,r2
1000aed4:	d8800115 	stw	r2,4(sp)
1000aed8:	1809883a 	mov	r4,r3
1000aedc:	00800044 	movi	r2,1
1000aee0:	d8800315 	stw	r2,12(sp)
1000aee4:	000b63c0 	call	1000b63c <_ZNSt15underflow_errorC1EPKc>
1000aee8:	d9000117 	ldw	r4,4(sp)
1000aeec:	01840074 	movhi	r6,4097
1000aef0:	014400b4 	movhi	r5,4098
1000aef4:	00bfffc4 	movi	r2,-1
1000aef8:	31b5ce04 	addi	r6,r6,-10440
1000aefc:	2957be04 	addi	r5,r5,24312
1000af00:	d8800315 	stw	r2,12(sp)
1000af04:	0008d240 	call	10008d24 <__cxa_throw>
1000af08:	d8800417 	ldw	r2,16(sp)
1000af0c:	d9000117 	ldw	r4,4(sp)
1000af10:	d8800015 	stw	r2,0(sp)
1000af14:	0009d940 	call	10009d94 <__cxa_free_exception>
1000af18:	d9000017 	ldw	r4,0(sp)
1000af1c:	00bfffc4 	movi	r2,-1
1000af20:	d8800315 	stw	r2,12(sp)
1000af24:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000af28 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
1000af28:	deffe004 	addi	sp,sp,-128
1000af2c:	df001e15 	stw	fp,120(sp)
1000af30:	dc401c15 	stw	r17,112(sp)
1000af34:	df001e04 	addi	fp,sp,120
1000af38:	2823883a 	mov	r17,r5
1000af3c:	014400b4 	movhi	r5,4098
1000af40:	8923c83a 	sub	r17,r17,r4
1000af44:	dc801d15 	stw	r18,116(sp)
1000af48:	01801a44 	movi	r6,105
1000af4c:	2025883a 	mov	r18,r4
1000af50:	2956b904 	addi	r5,r5,23268
1000af54:	e13fe2c4 	addi	r4,fp,-117
1000af58:	dfc01f15 	stw	ra,124(sp)
1000af5c:	dc001b15 	stw	r16,108(sp)
1000af60:	0016c340 	call	10016c34 <memcpy>
1000af64:	88801b04 	addi	r2,r17,108
1000af68:	1004d0ba 	srli	r2,r2,2
1000af6c:	01801a04 	movi	r6,104
1000af70:	e17fe2c4 	addi	r5,fp,-117
1000af74:	100490ba 	slli	r2,r2,2
1000af78:	d8b7c83a 	sub	sp,sp,r2
1000af7c:	d821883a 	mov	r16,sp
1000af80:	8009883a 	mov	r4,r16
1000af84:	0016c340 	call	10016c34 <memcpy>
1000af88:	81001a04 	addi	r4,r16,104
1000af8c:	880d883a 	mov	r6,r17
1000af90:	900b883a 	mov	r5,r18
1000af94:	0016c340 	call	10016c34 <memcpy>
1000af98:	8009883a 	mov	r4,r16
1000af9c:	8461883a 	add	r16,r16,r17
1000afa0:	80001a05 	stb	zero,104(r16)
1000afa4:	000a8280 	call	1000a828 <_ZSt19__throw_logic_errorPKc>

1000afa8 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
1000afa8:	defff704 	addi	sp,sp,-36
1000afac:	df000715 	stw	fp,28(sp)
1000afb0:	dd800615 	stw	r22,24(sp)
1000afb4:	dd400515 	stw	r21,20(sp)
1000afb8:	dd000415 	stw	r20,16(sp)
1000afbc:	dcc00315 	stw	r19,12(sp)
1000afc0:	dc800215 	stw	r18,8(sp)
1000afc4:	dc400115 	stw	r17,4(sp)
1000afc8:	dc000015 	stw	r16,0(sp)
1000afcc:	dfc00815 	stw	ra,32(sp)
1000afd0:	df000704 	addi	fp,sp,28
1000afd4:	defffd04 	addi	sp,sp,-12
1000afd8:	d829883a 	mov	r20,sp
1000afdc:	a4c00304 	addi	r19,r20,12
1000afe0:	048400b4 	movhi	r18,4098
1000afe4:	202d883a 	mov	r22,r4
1000afe8:	282b883a 	mov	r21,r5
1000afec:	3021883a 	mov	r16,r6
1000aff0:	9823883a 	mov	r17,r19
1000aff4:	9496d404 	addi	r18,r18,23376
1000aff8:	00000106 	br	1000b000 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x58>
1000affc:	1021883a 	mov	r16,r2
1000b000:	8009883a 	mov	r4,r16
1000b004:	01400284 	movi	r5,10
1000b008:	00149e80 	call	100149e8 <__umodsi3>
1000b00c:	9085883a 	add	r2,r18,r2
1000b010:	10800003 	ldbu	r2,0(r2)
1000b014:	8c7fffc4 	addi	r17,r17,-1
1000b018:	8009883a 	mov	r4,r16
1000b01c:	01400284 	movi	r5,10
1000b020:	88800005 	stb	r2,0(r17)
1000b024:	840002a8 	cmpgeui	r16,r16,10
1000b028:	00149840 	call	10014984 <__udivsi3>
1000b02c:	803ff31e 	bne	r16,zero,1000affc <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
1000b030:	9c63c83a 	sub	r17,r19,r17
1000b034:	ac401236 	bltu	r21,r17,1000b080 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xd8>
1000b038:	a44bc83a 	sub	r5,r20,r17
1000b03c:	880d883a 	mov	r6,r17
1000b040:	29400304 	addi	r5,r5,12
1000b044:	b009883a 	mov	r4,r22
1000b048:	0016c340 	call	10016c34 <memcpy>
1000b04c:	8805883a 	mov	r2,r17
1000b050:	e6fff904 	addi	sp,fp,-28
1000b054:	dfc00817 	ldw	ra,32(sp)
1000b058:	df000717 	ldw	fp,28(sp)
1000b05c:	dd800617 	ldw	r22,24(sp)
1000b060:	dd400517 	ldw	r21,20(sp)
1000b064:	dd000417 	ldw	r20,16(sp)
1000b068:	dcc00317 	ldw	r19,12(sp)
1000b06c:	dc800217 	ldw	r18,8(sp)
1000b070:	dc400117 	ldw	r17,4(sp)
1000b074:	dc000017 	ldw	r16,0(sp)
1000b078:	dec00904 	addi	sp,sp,36
1000b07c:	f800283a 	ret
1000b080:	047fffc4 	movi	r17,-1
1000b084:	003ff106 	br	1000b04c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xa4>

1000b088 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>:
1000b088:	defffa04 	addi	sp,sp,-24
1000b08c:	297fffc4 	addi	r5,r5,-1
1000b090:	dcc00315 	stw	r19,12(sp)
1000b094:	dc800215 	stw	r18,8(sp)
1000b098:	dc400115 	stw	r17,4(sp)
1000b09c:	dc000015 	stw	r16,0(sp)
1000b0a0:	dfc00515 	stw	ra,20(sp)
1000b0a4:	dd000415 	stw	r20,16(sp)
1000b0a8:	2027883a 	mov	r19,r4
1000b0ac:	3023883a 	mov	r17,r6
1000b0b0:	2165883a 	add	r18,r4,r5
1000b0b4:	2021883a 	mov	r16,r4
1000b0b8:	00000306 	br	1000b0c8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000b0bc:	80c00005 	stb	r3,0(r16)
1000b0c0:	8c400044 	addi	r17,r17,1
1000b0c4:	84000044 	addi	r16,r16,1
1000b0c8:	88c00003 	ldbu	r3,0(r17)
1000b0cc:	18803fcc 	andi	r2,r3,255
1000b0d0:	1080201c 	xori	r2,r2,128
1000b0d4:	10bfe004 	addi	r2,r2,-128
1000b0d8:	10003226 	beq	r2,zero,1000b1a4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x11c>
1000b0dc:	84803b2e 	bgeu	r16,r18,1000b1cc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000b0e0:	10800958 	cmpnei	r2,r2,37
1000b0e4:	103ff51e 	bne	r2,zero,1000b0bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000b0e8:	89000043 	ldbu	r4,1(r17)
1000b0ec:	20803fcc 	andi	r2,r4,255
1000b0f0:	1080201c 	xori	r2,r2,128
1000b0f4:	10bfe004 	addi	r2,r2,-128
1000b0f8:	11401ce0 	cmpeqi	r5,r2,115
1000b0fc:	2800141e 	bne	r5,zero,1000b150 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xc8>
1000b100:	11401ea0 	cmpeqi	r5,r2,122
1000b104:	2800051e 	bne	r5,zero,1000b11c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x94>
1000b108:	10800958 	cmpnei	r2,r2,37
1000b10c:	103feb1e 	bne	r2,zero,1000b0bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000b110:	8c400044 	addi	r17,r17,1
1000b114:	2007883a 	mov	r3,r4
1000b118:	003fe806 	br	1000b0bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000b11c:	88800087 	ldb	r2,2(r17)
1000b120:	10801d58 	cmpnei	r2,r2,117
1000b124:	103fe51e 	bne	r2,zero,1000b0bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000b128:	39800017 	ldw	r6,0(r7)
1000b12c:	940bc83a 	sub	r5,r18,r16
1000b130:	8009883a 	mov	r4,r16
1000b134:	3d000104 	addi	r20,r7,4
1000b138:	000afa80 	call	1000afa8 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
1000b13c:	0080230e 	bge	zero,r2,1000b1cc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000b140:	80a1883a 	add	r16,r16,r2
1000b144:	8c4000c4 	addi	r17,r17,3
1000b148:	a00f883a 	mov	r7,r20
1000b14c:	003fde06 	br	1000b0c8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000b150:	38800017 	ldw	r2,0(r7)
1000b154:	39c00104 	addi	r7,r7,4
1000b158:	10c00003 	ldbu	r3,0(r2)
1000b15c:	19003fcc 	andi	r4,r3,255
1000b160:	2100201c 	xori	r4,r4,128
1000b164:	213fe004 	addi	r4,r4,-128
1000b168:	20000c26 	beq	r4,zero,1000b19c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x114>
1000b16c:	940bc83a 	sub	r5,r18,r16
1000b170:	114b883a 	add	r5,r2,r5
1000b174:	00000106 	br	1000b17c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf4>
1000b178:	28801426 	beq	r5,r2,1000b1cc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000b17c:	84000044 	addi	r16,r16,1
1000b180:	10800044 	addi	r2,r2,1
1000b184:	80ffffc5 	stb	r3,-1(r16)
1000b188:	10c00003 	ldbu	r3,0(r2)
1000b18c:	19003fcc 	andi	r4,r3,255
1000b190:	2100201c 	xori	r4,r4,128
1000b194:	213fe004 	addi	r4,r4,-128
1000b198:	203ff71e 	bne	r4,zero,1000b178 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf0>
1000b19c:	8c400084 	addi	r17,r17,2
1000b1a0:	003fc906 	br	1000b0c8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000b1a4:	84c5c83a 	sub	r2,r16,r19
1000b1a8:	80000005 	stb	zero,0(r16)
1000b1ac:	dfc00517 	ldw	ra,20(sp)
1000b1b0:	dd000417 	ldw	r20,16(sp)
1000b1b4:	dcc00317 	ldw	r19,12(sp)
1000b1b8:	dc800217 	ldw	r18,8(sp)
1000b1bc:	dc400117 	ldw	r17,4(sp)
1000b1c0:	dc000017 	ldw	r16,0(sp)
1000b1c4:	dec00604 	addi	sp,sp,24
1000b1c8:	f800283a 	ret
1000b1cc:	800b883a 	mov	r5,r16
1000b1d0:	9809883a 	mov	r4,r19
1000b1d4:	000af280 	call	1000af28 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>

1000b1d8 <_Z27_txnal_cow_string_D1_commitPv>:
1000b1d8:	008400f4 	movhi	r2,4099
1000b1dc:	10a9aa04 	addi	r2,r2,-22872
1000b1e0:	2080011e 	bne	r4,r2,1000b1e8 <_Z27_txnal_cow_string_D1_commitPv+0x10>
1000b1e4:	f800283a 	ret
1000b1e8:	20800217 	ldw	r2,8(r4)
1000b1ec:	117fffc4 	addi	r5,r2,-1
1000b1f0:	21400215 	stw	r5,8(r4)
1000b1f4:	00bffb16 	blt	zero,r2,1000b1e4 <_Z27_txnal_cow_string_D1_commitPv+0xc>
1000b1f8:	defffe04 	addi	sp,sp,-8
1000b1fc:	d94000c4 	addi	r5,sp,3
1000b200:	dfc00115 	stw	ra,4(sp)
1000b204:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000b208:	dfc00117 	ldw	ra,4(sp)
1000b20c:	dec00204 	addi	sp,sp,8
1000b210:	f800283a 	ret

1000b214 <_ZNSt11logic_errorC1ERKS_>:
1000b214:	defff004 	addi	sp,sp,-64
1000b218:	00c40074 	movhi	r3,4097
1000b21c:	008400b4 	movhi	r2,4098
1000b220:	dc000d15 	stw	r16,52(sp)
1000b224:	18e4f504 	addi	r3,r3,-27692
1000b228:	2021883a 	mov	r16,r4
1000b22c:	10937904 	addi	r2,r2,19940
1000b230:	d809883a 	mov	r4,sp
1000b234:	dfc00f15 	stw	ra,60(sp)
1000b238:	dc400e15 	stw	r17,56(sp)
1000b23c:	d8c00615 	stw	r3,24(sp)
1000b240:	2823883a 	mov	r17,r5
1000b244:	d8800715 	stw	r2,28(sp)
1000b248:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b24c:	008400b4 	movhi	r2,4098
1000b250:	1097c304 	addi	r2,r2,24332
1000b254:	80800015 	stw	r2,0(r16)
1000b258:	89400104 	addi	r5,r17,4
1000b25c:	81000104 	addi	r4,r16,4
1000b260:	d8000115 	stw	zero,4(sp)
1000b264:	00104340 	call	10010434 <_ZNSsC1ERKSs>
1000b268:	d809883a 	mov	r4,sp
1000b26c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b270:	dfc00f17 	ldw	ra,60(sp)
1000b274:	dc400e17 	ldw	r17,56(sp)
1000b278:	dc000d17 	ldw	r16,52(sp)
1000b27c:	dec01004 	addi	sp,sp,64
1000b280:	f800283a 	ret

1000b284 <_ZNSt11logic_erroraSERKS_>:
1000b284:	defff004 	addi	sp,sp,-64
1000b288:	00c40074 	movhi	r3,4097
1000b28c:	008400b4 	movhi	r2,4098
1000b290:	dc000d15 	stw	r16,52(sp)
1000b294:	18e4f504 	addi	r3,r3,-27692
1000b298:	2021883a 	mov	r16,r4
1000b29c:	10937a04 	addi	r2,r2,19944
1000b2a0:	d809883a 	mov	r4,sp
1000b2a4:	dfc00f15 	stw	ra,60(sp)
1000b2a8:	dc400e15 	stw	r17,56(sp)
1000b2ac:	d8c00615 	stw	r3,24(sp)
1000b2b0:	2823883a 	mov	r17,r5
1000b2b4:	d8800715 	stw	r2,28(sp)
1000b2b8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b2bc:	89400104 	addi	r5,r17,4
1000b2c0:	81000104 	addi	r4,r16,4
1000b2c4:	d8000115 	stw	zero,4(sp)
1000b2c8:	00104900 	call	10010490 <_ZNSs6assignERKSs>
1000b2cc:	d809883a 	mov	r4,sp
1000b2d0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b2d4:	8005883a 	mov	r2,r16
1000b2d8:	dfc00f17 	ldw	ra,60(sp)
1000b2dc:	dc400e17 	ldw	r17,56(sp)
1000b2e0:	dc000d17 	ldw	r16,52(sp)
1000b2e4:	dec01004 	addi	sp,sp,64
1000b2e8:	f800283a 	ret

1000b2ec <_ZNSt13runtime_errorC1ERKS_>:
1000b2ec:	defff004 	addi	sp,sp,-64
1000b2f0:	00c40074 	movhi	r3,4097
1000b2f4:	008400b4 	movhi	r2,4098
1000b2f8:	dc000d15 	stw	r16,52(sp)
1000b2fc:	18e4f504 	addi	r3,r3,-27692
1000b300:	2021883a 	mov	r16,r4
1000b304:	10937b04 	addi	r2,r2,19948
1000b308:	d809883a 	mov	r4,sp
1000b30c:	dfc00f15 	stw	ra,60(sp)
1000b310:	dc400e15 	stw	r17,56(sp)
1000b314:	d8c00615 	stw	r3,24(sp)
1000b318:	2823883a 	mov	r17,r5
1000b31c:	d8800715 	stw	r2,28(sp)
1000b320:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b324:	008400b4 	movhi	r2,4098
1000b328:	1097dc04 	addi	r2,r2,24432
1000b32c:	80800015 	stw	r2,0(r16)
1000b330:	89400104 	addi	r5,r17,4
1000b334:	81000104 	addi	r4,r16,4
1000b338:	d8000115 	stw	zero,4(sp)
1000b33c:	00104340 	call	10010434 <_ZNSsC1ERKSs>
1000b340:	d809883a 	mov	r4,sp
1000b344:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b348:	dfc00f17 	ldw	ra,60(sp)
1000b34c:	dc400e17 	ldw	r17,56(sp)
1000b350:	dc000d17 	ldw	r16,52(sp)
1000b354:	dec01004 	addi	sp,sp,64
1000b358:	f800283a 	ret

1000b35c <_ZNSt13runtime_erroraSERKS_>:
1000b35c:	defff004 	addi	sp,sp,-64
1000b360:	00c40074 	movhi	r3,4097
1000b364:	008400b4 	movhi	r2,4098
1000b368:	dc000d15 	stw	r16,52(sp)
1000b36c:	18e4f504 	addi	r3,r3,-27692
1000b370:	2021883a 	mov	r16,r4
1000b374:	10937c04 	addi	r2,r2,19952
1000b378:	d809883a 	mov	r4,sp
1000b37c:	dfc00f15 	stw	ra,60(sp)
1000b380:	dc400e15 	stw	r17,56(sp)
1000b384:	d8c00615 	stw	r3,24(sp)
1000b388:	2823883a 	mov	r17,r5
1000b38c:	d8800715 	stw	r2,28(sp)
1000b390:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b394:	89400104 	addi	r5,r17,4
1000b398:	81000104 	addi	r4,r16,4
1000b39c:	d8000115 	stw	zero,4(sp)
1000b3a0:	00104900 	call	10010490 <_ZNSs6assignERKSs>
1000b3a4:	d809883a 	mov	r4,sp
1000b3a8:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b3ac:	8005883a 	mov	r2,r16
1000b3b0:	dfc00f17 	ldw	ra,60(sp)
1000b3b4:	dc400e17 	ldw	r17,56(sp)
1000b3b8:	dc000d17 	ldw	r16,52(sp)
1000b3bc:	dec01004 	addi	sp,sp,64
1000b3c0:	f800283a 	ret

1000b3c4 <_ZNSt11logic_errorC1EPKc>:
1000b3c4:	01840074 	movhi	r6,4097
1000b3c8:	deffee04 	addi	sp,sp,-72
1000b3cc:	31a4f504 	addi	r6,r6,-27692
1000b3d0:	00c400b4 	movhi	r3,4098
1000b3d4:	00840074 	movhi	r2,4097
1000b3d8:	18d37d04 	addi	r3,r3,19956
1000b3dc:	10ad1404 	addi	r2,r2,-19376
1000b3e0:	d9000015 	stw	r4,0(sp)
1000b3e4:	d9800815 	stw	r6,32(sp)
1000b3e8:	d9000204 	addi	r4,sp,8
1000b3ec:	d9801004 	addi	r6,sp,64
1000b3f0:	d8c00915 	stw	r3,36(sp)
1000b3f4:	d9800a15 	stw	r6,40(sp)
1000b3f8:	d8800b15 	stw	r2,44(sp)
1000b3fc:	d9400115 	stw	r5,4(sp)
1000b400:	dfc01115 	stw	ra,68(sp)
1000b404:	df001015 	stw	fp,64(sp)
1000b408:	dec00c15 	stw	sp,48(sp)
1000b40c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b410:	d8c00017 	ldw	r3,0(sp)
1000b414:	008400b4 	movhi	r2,4098
1000b418:	d9400117 	ldw	r5,4(sp)
1000b41c:	1097c304 	addi	r2,r2,24332
1000b420:	18800015 	stw	r2,0(r3)
1000b424:	d9800fc4 	addi	r6,sp,63
1000b428:	00800044 	movi	r2,1
1000b42c:	19000104 	addi	r4,r3,4
1000b430:	d8800315 	stw	r2,12(sp)
1000b434:	0010fec0 	call	10010fec <_ZNSsC1EPKcRKSaIcE>
1000b438:	d9000204 	addi	r4,sp,8
1000b43c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b440:	dfc01117 	ldw	ra,68(sp)
1000b444:	df001017 	ldw	fp,64(sp)
1000b448:	dec01204 	addi	sp,sp,72
1000b44c:	f800283a 	ret
1000b450:	d8800417 	ldw	r2,16(sp)
1000b454:	d9000017 	ldw	r4,0(sp)
1000b458:	d8800115 	stw	r2,4(sp)
1000b45c:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000b460:	d9000117 	ldw	r4,4(sp)
1000b464:	00bfffc4 	movi	r2,-1
1000b468:	d8800315 	stw	r2,12(sp)
1000b46c:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000b470 <_ZNSt12domain_errorC1EPKc>:
1000b470:	defffe04 	addi	sp,sp,-8
1000b474:	dc000015 	stw	r16,0(sp)
1000b478:	dfc00115 	stw	ra,4(sp)
1000b47c:	2021883a 	mov	r16,r4
1000b480:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000b484:	008400b4 	movhi	r2,4098
1000b488:	1097c804 	addi	r2,r2,24352
1000b48c:	80800015 	stw	r2,0(r16)
1000b490:	dfc00117 	ldw	ra,4(sp)
1000b494:	dc000017 	ldw	r16,0(sp)
1000b498:	dec00204 	addi	sp,sp,8
1000b49c:	f800283a 	ret

1000b4a0 <_ZNSt16invalid_argumentC1EPKc>:
1000b4a0:	defffe04 	addi	sp,sp,-8
1000b4a4:	dc000015 	stw	r16,0(sp)
1000b4a8:	dfc00115 	stw	ra,4(sp)
1000b4ac:	2021883a 	mov	r16,r4
1000b4b0:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000b4b4:	008400b4 	movhi	r2,4098
1000b4b8:	1097cd04 	addi	r2,r2,24372
1000b4bc:	80800015 	stw	r2,0(r16)
1000b4c0:	dfc00117 	ldw	ra,4(sp)
1000b4c4:	dc000017 	ldw	r16,0(sp)
1000b4c8:	dec00204 	addi	sp,sp,8
1000b4cc:	f800283a 	ret

1000b4d0 <_ZNSt12length_errorC1EPKc>:
1000b4d0:	defffe04 	addi	sp,sp,-8
1000b4d4:	dc000015 	stw	r16,0(sp)
1000b4d8:	dfc00115 	stw	ra,4(sp)
1000b4dc:	2021883a 	mov	r16,r4
1000b4e0:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000b4e4:	008400b4 	movhi	r2,4098
1000b4e8:	1097d204 	addi	r2,r2,24392
1000b4ec:	80800015 	stw	r2,0(r16)
1000b4f0:	dfc00117 	ldw	ra,4(sp)
1000b4f4:	dc000017 	ldw	r16,0(sp)
1000b4f8:	dec00204 	addi	sp,sp,8
1000b4fc:	f800283a 	ret

1000b500 <_ZNSt12out_of_rangeC1EPKc>:
1000b500:	defffe04 	addi	sp,sp,-8
1000b504:	dc000015 	stw	r16,0(sp)
1000b508:	dfc00115 	stw	ra,4(sp)
1000b50c:	2021883a 	mov	r16,r4
1000b510:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000b514:	008400b4 	movhi	r2,4098
1000b518:	1097d704 	addi	r2,r2,24412
1000b51c:	80800015 	stw	r2,0(r16)
1000b520:	dfc00117 	ldw	ra,4(sp)
1000b524:	dc000017 	ldw	r16,0(sp)
1000b528:	dec00204 	addi	sp,sp,8
1000b52c:	f800283a 	ret

1000b530 <_ZNSt13runtime_errorC1EPKc>:
1000b530:	01840074 	movhi	r6,4097
1000b534:	deffee04 	addi	sp,sp,-72
1000b538:	31a4f504 	addi	r6,r6,-27692
1000b53c:	00c400b4 	movhi	r3,4098
1000b540:	00840074 	movhi	r2,4097
1000b544:	18d37e84 	addi	r3,r3,19962
1000b548:	10ad6f04 	addi	r2,r2,-19012
1000b54c:	d9000015 	stw	r4,0(sp)
1000b550:	d9800815 	stw	r6,32(sp)
1000b554:	d9000204 	addi	r4,sp,8
1000b558:	d9801004 	addi	r6,sp,64
1000b55c:	d8c00915 	stw	r3,36(sp)
1000b560:	d9800a15 	stw	r6,40(sp)
1000b564:	d8800b15 	stw	r2,44(sp)
1000b568:	d9400115 	stw	r5,4(sp)
1000b56c:	dfc01115 	stw	ra,68(sp)
1000b570:	df001015 	stw	fp,64(sp)
1000b574:	dec00c15 	stw	sp,48(sp)
1000b578:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b57c:	d8c00017 	ldw	r3,0(sp)
1000b580:	008400b4 	movhi	r2,4098
1000b584:	d9400117 	ldw	r5,4(sp)
1000b588:	1097dc04 	addi	r2,r2,24432
1000b58c:	18800015 	stw	r2,0(r3)
1000b590:	d9800fc4 	addi	r6,sp,63
1000b594:	00800044 	movi	r2,1
1000b598:	19000104 	addi	r4,r3,4
1000b59c:	d8800315 	stw	r2,12(sp)
1000b5a0:	0010fec0 	call	10010fec <_ZNSsC1EPKcRKSaIcE>
1000b5a4:	d9000204 	addi	r4,sp,8
1000b5a8:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b5ac:	dfc01117 	ldw	ra,68(sp)
1000b5b0:	df001017 	ldw	fp,64(sp)
1000b5b4:	dec01204 	addi	sp,sp,72
1000b5b8:	f800283a 	ret
1000b5bc:	d8800417 	ldw	r2,16(sp)
1000b5c0:	d9000017 	ldw	r4,0(sp)
1000b5c4:	d8800115 	stw	r2,4(sp)
1000b5c8:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000b5cc:	d9000117 	ldw	r4,4(sp)
1000b5d0:	00bfffc4 	movi	r2,-1
1000b5d4:	d8800315 	stw	r2,12(sp)
1000b5d8:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000b5dc <_ZNSt11range_errorC1EPKc>:
1000b5dc:	defffe04 	addi	sp,sp,-8
1000b5e0:	dc000015 	stw	r16,0(sp)
1000b5e4:	dfc00115 	stw	ra,4(sp)
1000b5e8:	2021883a 	mov	r16,r4
1000b5ec:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000b5f0:	008400b4 	movhi	r2,4098
1000b5f4:	1097e104 	addi	r2,r2,24452
1000b5f8:	80800015 	stw	r2,0(r16)
1000b5fc:	dfc00117 	ldw	ra,4(sp)
1000b600:	dc000017 	ldw	r16,0(sp)
1000b604:	dec00204 	addi	sp,sp,8
1000b608:	f800283a 	ret

1000b60c <_ZNSt14overflow_errorC1EPKc>:
1000b60c:	defffe04 	addi	sp,sp,-8
1000b610:	dc000015 	stw	r16,0(sp)
1000b614:	dfc00115 	stw	ra,4(sp)
1000b618:	2021883a 	mov	r16,r4
1000b61c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000b620:	008400b4 	movhi	r2,4098
1000b624:	1097e604 	addi	r2,r2,24472
1000b628:	80800015 	stw	r2,0(r16)
1000b62c:	dfc00117 	ldw	ra,4(sp)
1000b630:	dc000017 	ldw	r16,0(sp)
1000b634:	dec00204 	addi	sp,sp,8
1000b638:	f800283a 	ret

1000b63c <_ZNSt15underflow_errorC1EPKc>:
1000b63c:	defffe04 	addi	sp,sp,-8
1000b640:	dc000015 	stw	r16,0(sp)
1000b644:	dfc00115 	stw	ra,4(sp)
1000b648:	2021883a 	mov	r16,r4
1000b64c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000b650:	008400b4 	movhi	r2,4098
1000b654:	1097eb04 	addi	r2,r2,24492
1000b658:	80800015 	stw	r2,0(r16)
1000b65c:	dfc00117 	ldw	ra,4(sp)
1000b660:	dc000017 	ldw	r16,0(sp)
1000b664:	dec00204 	addi	sp,sp,8
1000b668:	f800283a 	ret

1000b66c <_ZNSt12__sso_stringC1ERKSs>:
1000b66c:	29400017 	ldw	r5,0(r5)
1000b670:	29bffd17 	ldw	r6,-12(r5)
1000b674:	000da501 	jmpi	1000da50 <_ZNSt12__sso_stringC1EPKcj>

1000b678 <_ZNSt12__cow_stringC1Ev>:
1000b678:	008400f4 	movhi	r2,4099
1000b67c:	10a9ad04 	addi	r2,r2,-22860
1000b680:	20800015 	stw	r2,0(r4)
1000b684:	f800283a 	ret

1000b688 <_ZNSt12__cow_stringC1ERKSs>:
1000b688:	00104341 	jmpi	10010434 <_ZNSsC1ERKSs>

1000b68c <_ZNSt12__cow_stringC1EPKcj>:
1000b68c:	defffe04 	addi	sp,sp,-8
1000b690:	d9c000c4 	addi	r7,sp,3
1000b694:	dfc00115 	stw	ra,4(sp)
1000b698:	0010b000 	call	10010b00 <_ZNSsC1EPKcjRKSaIcE>
1000b69c:	dfc00117 	ldw	ra,4(sp)
1000b6a0:	dec00204 	addi	sp,sp,8
1000b6a4:	f800283a 	ret

1000b6a8 <_ZNSt12__cow_stringC1ERKS_>:
1000b6a8:	defff004 	addi	sp,sp,-64
1000b6ac:	00c40074 	movhi	r3,4097
1000b6b0:	008400b4 	movhi	r2,4098
1000b6b4:	dc000e15 	stw	r16,56(sp)
1000b6b8:	18e4f504 	addi	r3,r3,-27692
1000b6bc:	10938004 	addi	r2,r2,19968
1000b6c0:	2021883a 	mov	r16,r4
1000b6c4:	d9000104 	addi	r4,sp,4
1000b6c8:	dfc00f15 	stw	ra,60(sp)
1000b6cc:	d8c00715 	stw	r3,28(sp)
1000b6d0:	d8800815 	stw	r2,32(sp)
1000b6d4:	d9400015 	stw	r5,0(sp)
1000b6d8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b6dc:	d9400017 	ldw	r5,0(sp)
1000b6e0:	8009883a 	mov	r4,r16
1000b6e4:	d8000215 	stw	zero,8(sp)
1000b6e8:	00104340 	call	10010434 <_ZNSsC1ERKSs>
1000b6ec:	d9000104 	addi	r4,sp,4
1000b6f0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b6f4:	dfc00f17 	ldw	ra,60(sp)
1000b6f8:	dc000e17 	ldw	r16,56(sp)
1000b6fc:	dec01004 	addi	sp,sp,64
1000b700:	f800283a 	ret

1000b704 <_ZNSt12__cow_stringaSERKS_>:
1000b704:	defff004 	addi	sp,sp,-64
1000b708:	00c40074 	movhi	r3,4097
1000b70c:	008400b4 	movhi	r2,4098
1000b710:	dc000e15 	stw	r16,56(sp)
1000b714:	18e4f504 	addi	r3,r3,-27692
1000b718:	2021883a 	mov	r16,r4
1000b71c:	10938104 	addi	r2,r2,19972
1000b720:	d9000104 	addi	r4,sp,4
1000b724:	dfc00f15 	stw	ra,60(sp)
1000b728:	d8c00715 	stw	r3,28(sp)
1000b72c:	d9400015 	stw	r5,0(sp)
1000b730:	d8800815 	stw	r2,32(sp)
1000b734:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b738:	d9400017 	ldw	r5,0(sp)
1000b73c:	8009883a 	mov	r4,r16
1000b740:	d8000215 	stw	zero,8(sp)
1000b744:	00104900 	call	10010490 <_ZNSs6assignERKSs>
1000b748:	d9000104 	addi	r4,sp,4
1000b74c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b750:	8005883a 	mov	r2,r16
1000b754:	dfc00f17 	ldw	ra,60(sp)
1000b758:	dc000e17 	ldw	r16,56(sp)
1000b75c:	dec01004 	addi	sp,sp,64
1000b760:	f800283a 	ret

1000b764 <_ZNSt12__cow_stringD1Ev>:
1000b764:	20c00017 	ldw	r3,0(r4)
1000b768:	008400f4 	movhi	r2,4099
1000b76c:	10a9aa04 	addi	r2,r2,-22872
1000b770:	193ffd04 	addi	r4,r3,-12
1000b774:	2080011e 	bne	r4,r2,1000b77c <_ZNSt12__cow_stringD1Ev+0x18>
1000b778:	f800283a 	ret
1000b77c:	18bfff17 	ldw	r2,-4(r3)
1000b780:	117fffc4 	addi	r5,r2,-1
1000b784:	197fff15 	stw	r5,-4(r3)
1000b788:	00bffb16 	blt	zero,r2,1000b778 <_ZNSt12__cow_stringD1Ev+0x14>
1000b78c:	defffe04 	addi	sp,sp,-8
1000b790:	d94000c4 	addi	r5,sp,3
1000b794:	dfc00115 	stw	ra,4(sp)
1000b798:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000b79c:	dfc00117 	ldw	ra,4(sp)
1000b7a0:	dec00204 	addi	sp,sp,8
1000b7a4:	f800283a 	ret

1000b7a8 <_ZNSt12__cow_stringC1EOS_>:
1000b7a8:	28c00017 	ldw	r3,0(r5)
1000b7ac:	008400f4 	movhi	r2,4099
1000b7b0:	10a9ad04 	addi	r2,r2,-22860
1000b7b4:	20c00015 	stw	r3,0(r4)
1000b7b8:	28800015 	stw	r2,0(r5)
1000b7bc:	f800283a 	ret

1000b7c0 <_ZNSt12__cow_stringaSEOS_>:
1000b7c0:	defff004 	addi	sp,sp,-64
1000b7c4:	01840074 	movhi	r6,4097
1000b7c8:	00c400b4 	movhi	r3,4098
1000b7cc:	dc000e15 	stw	r16,56(sp)
1000b7d0:	31a4f504 	addi	r6,r6,-27692
1000b7d4:	18d38204 	addi	r3,r3,19976
1000b7d8:	2021883a 	mov	r16,r4
1000b7dc:	d9000104 	addi	r4,sp,4
1000b7e0:	dfc00f15 	stw	ra,60(sp)
1000b7e4:	d9800715 	stw	r6,28(sp)
1000b7e8:	d8c00815 	stw	r3,32(sp)
1000b7ec:	d9400015 	stw	r5,0(sp)
1000b7f0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b7f4:	d9400017 	ldw	r5,0(sp)
1000b7f8:	8009883a 	mov	r4,r16
1000b7fc:	d8000215 	stw	zero,8(sp)
1000b800:	000e04c0 	call	1000e04c <_ZNSs4swapERSs>
1000b804:	d9000104 	addi	r4,sp,4
1000b808:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b80c:	8005883a 	mov	r2,r16
1000b810:	dfc00f17 	ldw	ra,60(sp)
1000b814:	dc000e17 	ldw	r16,56(sp)
1000b818:	dec01004 	addi	sp,sp,64
1000b81c:	f800283a 	ret

1000b820 <_ZNKSt3_V214error_category10_M_messageEi>:
1000b820:	00c400b4 	movhi	r3,4098
1000b824:	deffec04 	addi	sp,sp,-80
1000b828:	18d38304 	addi	r3,r3,19980
1000b82c:	01c40074 	movhi	r7,4097
1000b830:	00840074 	movhi	r2,4097
1000b834:	39e4f504 	addi	r7,r7,-27692
1000b838:	10ae3d04 	addi	r2,r2,-18188
1000b83c:	d9000015 	stw	r4,0(sp)
1000b840:	d8c00a15 	stw	r3,40(sp)
1000b844:	d9000304 	addi	r4,sp,12
1000b848:	d8c01204 	addi	r3,sp,72
1000b84c:	dfc01315 	stw	ra,76(sp)
1000b850:	d9400115 	stw	r5,4(sp)
1000b854:	d9c00915 	stw	r7,36(sp)
1000b858:	d8c00b15 	stw	r3,44(sp)
1000b85c:	d8800c15 	stw	r2,48(sp)
1000b860:	d9800215 	stw	r6,8(sp)
1000b864:	df001215 	stw	fp,72(sp)
1000b868:	dec00d15 	stw	sp,52(sp)
1000b86c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b870:	d9400117 	ldw	r5,4(sp)
1000b874:	d9800217 	ldw	r6,8(sp)
1000b878:	00ffffc4 	movi	r3,-1
1000b87c:	28800017 	ldw	r2,0(r5)
1000b880:	d9001104 	addi	r4,sp,68
1000b884:	10800317 	ldw	r2,12(r2)
1000b888:	d8c00415 	stw	r3,16(sp)
1000b88c:	103ee83a 	callr	r2
1000b890:	d9401117 	ldw	r5,68(sp)
1000b894:	00800044 	movi	r2,1
1000b898:	d8800415 	stw	r2,16(sp)
1000b89c:	29bffd17 	ldw	r6,-12(r5)
1000b8a0:	d9000017 	ldw	r4,0(sp)
1000b8a4:	000da500 	call	1000da50 <_ZNSt12__sso_stringC1EPKcj>
1000b8a8:	d8c01117 	ldw	r3,68(sp)
1000b8ac:	008400f4 	movhi	r2,4099
1000b8b0:	10a9aa04 	addi	r2,r2,-22872
1000b8b4:	193ffd04 	addi	r4,r3,-12
1000b8b8:	2080071e 	bne	r4,r2,1000b8d8 <_ZNKSt3_V214error_category10_M_messageEi+0xb8>
1000b8bc:	d9000304 	addi	r4,sp,12
1000b8c0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000b8c4:	d8800017 	ldw	r2,0(sp)
1000b8c8:	dfc01317 	ldw	ra,76(sp)
1000b8cc:	df001217 	ldw	fp,72(sp)
1000b8d0:	dec01404 	addi	sp,sp,80
1000b8d4:	f800283a 	ret
1000b8d8:	18bfff17 	ldw	r2,-4(r3)
1000b8dc:	117fffc4 	addi	r5,r2,-1
1000b8e0:	197fff15 	stw	r5,-4(r3)
1000b8e4:	00bff516 	blt	zero,r2,1000b8bc <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000b8e8:	d94010c4 	addi	r5,sp,67
1000b8ec:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000b8f0:	003ff206 	br	1000b8bc <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000b8f4:	d8801117 	ldw	r2,68(sp)
1000b8f8:	d9400517 	ldw	r5,20(sp)
1000b8fc:	00c400f4 	movhi	r3,4099
1000b900:	18e9aa04 	addi	r3,r3,-22872
1000b904:	113ffd04 	addi	r4,r2,-12
1000b908:	d9400015 	stw	r5,0(sp)
1000b90c:	20c00626 	beq	r4,r3,1000b928 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000b910:	10ffff17 	ldw	r3,-4(r2)
1000b914:	197fffc4 	addi	r5,r3,-1
1000b918:	117fff15 	stw	r5,-4(r2)
1000b91c:	00c00216 	blt	zero,r3,1000b928 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000b920:	d94010c4 	addi	r5,sp,67
1000b924:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000b928:	d9000017 	ldw	r4,0(sp)
1000b92c:	00bfffc4 	movi	r2,-1
1000b930:	d8800415 	stw	r2,16(sp)
1000b934:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>:
1000b938:	00c400b4 	movhi	r3,4098
1000b93c:	deffed04 	addi	sp,sp,-76
1000b940:	18d38504 	addi	r3,r3,19988
1000b944:	01840074 	movhi	r6,4097
1000b948:	00840074 	movhi	r2,4097
1000b94c:	10ae8b04 	addi	r2,r2,-17876
1000b950:	31a4f504 	addi	r6,r6,-27692
1000b954:	d9000315 	stw	r4,12(sp)
1000b958:	d8c00b15 	stw	r3,44(sp)
1000b95c:	d9000404 	addi	r4,sp,16
1000b960:	d8c01104 	addi	r3,sp,68
1000b964:	d8c00c15 	stw	r3,48(sp)
1000b968:	d8800d15 	stw	r2,52(sp)
1000b96c:	dfc01215 	stw	ra,72(sp)
1000b970:	df001115 	stw	fp,68(sp)
1000b974:	d9400215 	stw	r5,8(sp)
1000b978:	d9800a15 	stw	r6,40(sp)
1000b97c:	dec00e15 	stw	sp,56(sp)
1000b980:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000b984:	d8800217 	ldw	r2,8(sp)
1000b988:	00c00044 	movi	r3,1
1000b98c:	d8c00015 	stw	r3,0(sp)
1000b990:	10bfffc4 	addi	r2,r2,-1
1000b994:	d8800115 	stw	r2,4(sp)
1000b998:	00000306 	br	1000b9a8 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x70>
1000b99c:	d8800017 	ldw	r2,0(sp)
1000b9a0:	10800044 	addi	r2,r2,1
1000b9a4:	d8800015 	stw	r2,0(sp)
1000b9a8:	00bfffc4 	movi	r2,-1
1000b9ac:	d8800515 	stw	r2,20(sp)
1000b9b0:	d8c00117 	ldw	r3,4(sp)
1000b9b4:	d8800017 	ldw	r2,0(sp)
1000b9b8:	1889883a 	add	r4,r3,r2
1000b9bc:	00000000 	call	10000000 <__alt_mem_sdram>
1000b9c0:	10803fcc 	andi	r2,r2,255
1000b9c4:	103ff51e 	bne	r2,zero,1000b99c <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x64>
1000b9c8:	d9800017 	ldw	r6,0(sp)
1000b9cc:	00800044 	movi	r2,1
1000b9d0:	d8800515 	stw	r2,20(sp)
1000b9d4:	31000304 	addi	r4,r6,12
1000b9d8:	00000000 	call	10000000 <__alt_mem_sdram>
1000b9dc:	d9800017 	ldw	r6,0(sp)
1000b9e0:	d9400217 	ldw	r5,8(sp)
1000b9e4:	11000304 	addi	r4,r2,12
1000b9e8:	30ffffc4 	addi	r3,r6,-1
1000b9ec:	10c00115 	stw	r3,4(r2)
1000b9f0:	10c00015 	stw	r3,0(r2)
1000b9f4:	10000215 	stw	zero,8(r2)
1000b9f8:	00bfffc4 	movi	r2,-1
1000b9fc:	d8800515 	stw	r2,20(sp)
1000ba00:	d9000015 	stw	r4,0(sp)
1000ba04:	00000000 	call	10000000 <__alt_mem_sdram>
1000ba08:	d9000017 	ldw	r4,0(sp)
1000ba0c:	d8800317 	ldw	r2,12(sp)
1000ba10:	11000015 	stw	r4,0(r2)
1000ba14:	d9000404 	addi	r4,sp,16
1000ba18:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000ba1c:	dfc01217 	ldw	ra,72(sp)
1000ba20:	df001117 	ldw	fp,68(sp)
1000ba24:	dec01304 	addi	sp,sp,76
1000ba28:	f800283a 	ret
1000ba2c:	d8c00617 	ldw	r3,24(sp)
1000ba30:	d8800517 	ldw	r2,20(sp)
1000ba34:	d8c00015 	stw	r3,0(sp)
1000ba38:	1000051e 	bne	r2,zero,1000ba50 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x118>
1000ba3c:	d9000617 	ldw	r4,24(sp)
1000ba40:	00089800 	call	10008980 <__cxa_begin_catch>
1000ba44:	00800084 	movi	r2,2
1000ba48:	d8800515 	stw	r2,20(sp)
1000ba4c:	0008db80 	call	10008db8 <__cxa_rethrow>
1000ba50:	10bfffc4 	addi	r2,r2,-1
1000ba54:	10000126 	beq	r2,zero,1000ba5c <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x124>
1000ba58:	003b68fa 	trap	3
1000ba5c:	d8000515 	stw	zero,20(sp)
1000ba60:	0008a2c0 	call	10008a2c <__cxa_end_catch>
1000ba64:	d9000017 	ldw	r4,0(sp)
1000ba68:	00bfffc4 	movi	r2,-1
1000ba6c:	d8800515 	stw	r2,20(sp)
1000ba70:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ba74 <_Z23_txnal_cow_string_c_strPKv>:
1000ba74:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000ba78 <_Z23_txnal_sso_string_c_strPKv>:
1000ba78:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000ba7c <_Z20_txnal_cow_string_D1Pv>:
1000ba7c:	deffff04 	addi	sp,sp,-4
1000ba80:	dfc00015 	stw	ra,0(sp)
1000ba84:	00000000 	call	10000000 <__alt_mem_sdram>
1000ba88:	01040074 	movhi	r4,4097
1000ba8c:	11fffd04 	addi	r7,r2,-12
1000ba90:	01400044 	movi	r5,1
1000ba94:	000d883a 	mov	r6,zero
1000ba98:	212c7604 	addi	r4,r4,-20008
1000ba9c:	dfc00017 	ldw	ra,0(sp)
1000baa0:	dec00104 	addi	sp,sp,4
1000baa4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000baa8 <_Z26_txnal_logic_error_get_msgPv>:
1000baa8:	20800104 	addi	r2,r4,4
1000baac:	f800283a 	ret

1000bab0 <_Z28_txnal_runtime_error_get_msgPv>:
1000bab0:	20800104 	addi	r2,r4,4
1000bab4:	f800283a 	ret

1000bab8 <_ZGTtNSt11logic_errorC1EPKc>:
1000bab8:	00c400b4 	movhi	r3,4098
1000babc:	deffed04 	addi	sp,sp,-76
1000bac0:	18d38904 	addi	r3,r3,20004
1000bac4:	01840074 	movhi	r6,4097
1000bac8:	00840074 	movhi	r2,4097
1000bacc:	31a4f504 	addi	r6,r6,-27692
1000bad0:	10aedb04 	addi	r2,r2,-17556
1000bad4:	d9000015 	stw	r4,0(sp)
1000bad8:	d8c00915 	stw	r3,36(sp)
1000badc:	d9000204 	addi	r4,sp,8
1000bae0:	d8c01104 	addi	r3,sp,68
1000bae4:	d9800815 	stw	r6,32(sp)
1000bae8:	dfc01215 	stw	ra,72(sp)
1000baec:	d8c00a15 	stw	r3,40(sp)
1000baf0:	d8800b15 	stw	r2,44(sp)
1000baf4:	d9400115 	stw	r5,4(sp)
1000baf8:	df001115 	stw	fp,68(sp)
1000bafc:	dec00c15 	stw	sp,48(sp)
1000bb00:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bb04:	d8800f04 	addi	r2,sp,60
1000bb08:	014400b4 	movhi	r5,4098
1000bb0c:	1009883a 	mov	r4,r2
1000bb10:	2956d304 	addi	r5,r5,23372
1000bb14:	00bfffc4 	movi	r2,-1
1000bb18:	d8800315 	stw	r2,12(sp)
1000bb1c:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000bb20:	00800044 	movi	r2,1
1000bb24:	d9000017 	ldw	r4,0(sp)
1000bb28:	d8800315 	stw	r2,12(sp)
1000bb2c:	d8800f04 	addi	r2,sp,60
1000bb30:	01800204 	movi	r6,8
1000bb34:	100b883a 	mov	r5,r2
1000bb38:	00000000 	call	10000000 <__alt_mem_sdram>
1000bb3c:	d9800017 	ldw	r6,0(sp)
1000bb40:	d9400117 	ldw	r5,4(sp)
1000bb44:	31000104 	addi	r4,r6,4
1000bb48:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bb4c:	d9000f04 	addi	r4,sp,60
1000bb50:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000bb54:	d9000204 	addi	r4,sp,8
1000bb58:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000bb5c:	dfc01217 	ldw	ra,72(sp)
1000bb60:	df001117 	ldw	fp,68(sp)
1000bb64:	dec01304 	addi	sp,sp,76
1000bb68:	f800283a 	ret
1000bb6c:	d8800417 	ldw	r2,16(sp)
1000bb70:	d9000f04 	addi	r4,sp,60
1000bb74:	d8800015 	stw	r2,0(sp)
1000bb78:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000bb7c:	d9000017 	ldw	r4,0(sp)
1000bb80:	00bfffc4 	movi	r2,-1
1000bb84:	d8800315 	stw	r2,12(sp)
1000bb88:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000bb8c <_ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bb8c:	00c400b4 	movhi	r3,4098
1000bb90:	deffed04 	addi	sp,sp,-76
1000bb94:	18d38a84 	addi	r3,r3,20010
1000bb98:	01840074 	movhi	r6,4097
1000bb9c:	00840074 	movhi	r2,4097
1000bba0:	31a4f504 	addi	r6,r6,-27692
1000bba4:	10af1504 	addi	r2,r2,-17324
1000bba8:	d9000015 	stw	r4,0(sp)
1000bbac:	d8c00915 	stw	r3,36(sp)
1000bbb0:	d9000204 	addi	r4,sp,8
1000bbb4:	d8c01104 	addi	r3,sp,68
1000bbb8:	d9800815 	stw	r6,32(sp)
1000bbbc:	dfc01215 	stw	ra,72(sp)
1000bbc0:	d8c00a15 	stw	r3,40(sp)
1000bbc4:	d8800b15 	stw	r2,44(sp)
1000bbc8:	d9400115 	stw	r5,4(sp)
1000bbcc:	df001115 	stw	fp,68(sp)
1000bbd0:	dec00c15 	stw	sp,48(sp)
1000bbd4:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bbd8:	d8c00f04 	addi	r3,sp,60
1000bbdc:	014400b4 	movhi	r5,4098
1000bbe0:	1809883a 	mov	r4,r3
1000bbe4:	00bfffc4 	movi	r2,-1
1000bbe8:	2956d304 	addi	r5,r5,23372
1000bbec:	d8800315 	stw	r2,12(sp)
1000bbf0:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000bbf4:	d9000017 	ldw	r4,0(sp)
1000bbf8:	d8c00f04 	addi	r3,sp,60
1000bbfc:	00800044 	movi	r2,1
1000bc00:	01800204 	movi	r6,8
1000bc04:	180b883a 	mov	r5,r3
1000bc08:	d8800315 	stw	r2,12(sp)
1000bc0c:	00000000 	call	10000000 <__alt_mem_sdram>
1000bc10:	d8800017 	ldw	r2,0(sp)
1000bc14:	d9000117 	ldw	r4,4(sp)
1000bc18:	10c00104 	addi	r3,r2,4
1000bc1c:	d8c00115 	stw	r3,4(sp)
1000bc20:	00000000 	call	10000000 <__alt_mem_sdram>
1000bc24:	d9800017 	ldw	r6,0(sp)
1000bc28:	d9000117 	ldw	r4,4(sp)
1000bc2c:	100b883a 	mov	r5,r2
1000bc30:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bc34:	d9000f04 	addi	r4,sp,60
1000bc38:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000bc3c:	d9000204 	addi	r4,sp,8
1000bc40:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000bc44:	dfc01217 	ldw	ra,72(sp)
1000bc48:	df001117 	ldw	fp,68(sp)
1000bc4c:	dec01304 	addi	sp,sp,76
1000bc50:	f800283a 	ret
1000bc54:	d8800417 	ldw	r2,16(sp)
1000bc58:	d9000f04 	addi	r4,sp,60
1000bc5c:	d8800015 	stw	r2,0(sp)
1000bc60:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000bc64:	d9000017 	ldw	r4,0(sp)
1000bc68:	00bfffc4 	movi	r2,-1
1000bc6c:	d8800315 	stw	r2,12(sp)
1000bc70:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000bc74 <_ZGTtNSt11logic_errorD1Ev>:
1000bc74:	21000104 	addi	r4,r4,4
1000bc78:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000bc7c <_ZGTtNSt11logic_errorD0Ev>:
1000bc7c:	defffe04 	addi	sp,sp,-8
1000bc80:	dc000015 	stw	r16,0(sp)
1000bc84:	2021883a 	mov	r16,r4
1000bc88:	21000104 	addi	r4,r4,4
1000bc8c:	dfc00115 	stw	ra,4(sp)
1000bc90:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000bc94:	8009883a 	mov	r4,r16
1000bc98:	dfc00117 	ldw	ra,4(sp)
1000bc9c:	dc000017 	ldw	r16,0(sp)
1000bca0:	dec00204 	addi	sp,sp,8
1000bca4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bca8 <_ZGTtNKSt11logic_error4whatEv>:
1000bca8:	21000104 	addi	r4,r4,4
1000bcac:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bcb0 <_ZGTtNSt12domain_errorC1EPKc>:
1000bcb0:	00c400b4 	movhi	r3,4098
1000bcb4:	deffed04 	addi	sp,sp,-76
1000bcb8:	18d38c04 	addi	r3,r3,20016
1000bcbc:	01840074 	movhi	r6,4097
1000bcc0:	00840074 	movhi	r2,4097
1000bcc4:	31a4f504 	addi	r6,r6,-27692
1000bcc8:	10af5c04 	addi	r2,r2,-17040
1000bccc:	d9000015 	stw	r4,0(sp)
1000bcd0:	d8c00915 	stw	r3,36(sp)
1000bcd4:	d9000204 	addi	r4,sp,8
1000bcd8:	d8c01104 	addi	r3,sp,68
1000bcdc:	d9800815 	stw	r6,32(sp)
1000bce0:	d8c00a15 	stw	r3,40(sp)
1000bce4:	dfc01215 	stw	ra,72(sp)
1000bce8:	d8800b15 	stw	r2,44(sp)
1000bcec:	d9400115 	stw	r5,4(sp)
1000bcf0:	df001115 	stw	fp,68(sp)
1000bcf4:	dec00c15 	stw	sp,48(sp)
1000bcf8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bcfc:	d8800f04 	addi	r2,sp,60
1000bd00:	014400b4 	movhi	r5,4098
1000bd04:	1009883a 	mov	r4,r2
1000bd08:	2956d304 	addi	r5,r5,23372
1000bd0c:	00bfffc4 	movi	r2,-1
1000bd10:	d8800315 	stw	r2,12(sp)
1000bd14:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000bd18:	00c00044 	movi	r3,1
1000bd1c:	d9000017 	ldw	r4,0(sp)
1000bd20:	008400b4 	movhi	r2,4098
1000bd24:	d8c00315 	stw	r3,12(sp)
1000bd28:	d8c00f04 	addi	r3,sp,60
1000bd2c:	1097c804 	addi	r2,r2,24352
1000bd30:	01800204 	movi	r6,8
1000bd34:	180b883a 	mov	r5,r3
1000bd38:	d8800f15 	stw	r2,60(sp)
1000bd3c:	00000000 	call	10000000 <__alt_mem_sdram>
1000bd40:	d9800017 	ldw	r6,0(sp)
1000bd44:	d9400117 	ldw	r5,4(sp)
1000bd48:	31000104 	addi	r4,r6,4
1000bd4c:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bd50:	d9000f04 	addi	r4,sp,60
1000bd54:	000d5140 	call	1000d514 <_ZNSt12domain_errorD1Ev>
1000bd58:	d9000204 	addi	r4,sp,8
1000bd5c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000bd60:	dfc01217 	ldw	ra,72(sp)
1000bd64:	df001117 	ldw	fp,68(sp)
1000bd68:	dec01304 	addi	sp,sp,76
1000bd6c:	f800283a 	ret
1000bd70:	d8800417 	ldw	r2,16(sp)
1000bd74:	d9000f04 	addi	r4,sp,60
1000bd78:	d8800015 	stw	r2,0(sp)
1000bd7c:	000d5140 	call	1000d514 <_ZNSt12domain_errorD1Ev>
1000bd80:	d9000017 	ldw	r4,0(sp)
1000bd84:	00bfffc4 	movi	r2,-1
1000bd88:	d8800315 	stw	r2,12(sp)
1000bd8c:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000bd90 <_ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bd90:	00c400b4 	movhi	r3,4098
1000bd94:	deffed04 	addi	sp,sp,-76
1000bd98:	18d38d84 	addi	r3,r3,20022
1000bd9c:	01840074 	movhi	r6,4097
1000bda0:	00840074 	movhi	r2,4097
1000bda4:	31a4f504 	addi	r6,r6,-27692
1000bda8:	10af9904 	addi	r2,r2,-16796
1000bdac:	d9000015 	stw	r4,0(sp)
1000bdb0:	d8c00915 	stw	r3,36(sp)
1000bdb4:	d9000204 	addi	r4,sp,8
1000bdb8:	d8c01104 	addi	r3,sp,68
1000bdbc:	d9800815 	stw	r6,32(sp)
1000bdc0:	dfc01215 	stw	ra,72(sp)
1000bdc4:	d8c00a15 	stw	r3,40(sp)
1000bdc8:	d8800b15 	stw	r2,44(sp)
1000bdcc:	d9400115 	stw	r5,4(sp)
1000bdd0:	df001115 	stw	fp,68(sp)
1000bdd4:	dec00c15 	stw	sp,48(sp)
1000bdd8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bddc:	d8c00f04 	addi	r3,sp,60
1000bde0:	014400b4 	movhi	r5,4098
1000bde4:	1809883a 	mov	r4,r3
1000bde8:	00bfffc4 	movi	r2,-1
1000bdec:	2956d304 	addi	r5,r5,23372
1000bdf0:	d8800315 	stw	r2,12(sp)
1000bdf4:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000bdf8:	00c00044 	movi	r3,1
1000bdfc:	d9000017 	ldw	r4,0(sp)
1000be00:	008400b4 	movhi	r2,4098
1000be04:	d8c00315 	stw	r3,12(sp)
1000be08:	d8c00f04 	addi	r3,sp,60
1000be0c:	1097c804 	addi	r2,r2,24352
1000be10:	01800204 	movi	r6,8
1000be14:	180b883a 	mov	r5,r3
1000be18:	d8800f15 	stw	r2,60(sp)
1000be1c:	00000000 	call	10000000 <__alt_mem_sdram>
1000be20:	d8800017 	ldw	r2,0(sp)
1000be24:	d9000117 	ldw	r4,4(sp)
1000be28:	10c00104 	addi	r3,r2,4
1000be2c:	d8c00115 	stw	r3,4(sp)
1000be30:	00000000 	call	10000000 <__alt_mem_sdram>
1000be34:	d9800017 	ldw	r6,0(sp)
1000be38:	d9000117 	ldw	r4,4(sp)
1000be3c:	100b883a 	mov	r5,r2
1000be40:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000be44:	d9000f04 	addi	r4,sp,60
1000be48:	000d5140 	call	1000d514 <_ZNSt12domain_errorD1Ev>
1000be4c:	d9000204 	addi	r4,sp,8
1000be50:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000be54:	dfc01217 	ldw	ra,72(sp)
1000be58:	df001117 	ldw	fp,68(sp)
1000be5c:	dec01304 	addi	sp,sp,76
1000be60:	f800283a 	ret
1000be64:	d8800417 	ldw	r2,16(sp)
1000be68:	d9000f04 	addi	r4,sp,60
1000be6c:	d8800015 	stw	r2,0(sp)
1000be70:	000d5140 	call	1000d514 <_ZNSt12domain_errorD1Ev>
1000be74:	d9000017 	ldw	r4,0(sp)
1000be78:	00bfffc4 	movi	r2,-1
1000be7c:	d8800315 	stw	r2,12(sp)
1000be80:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000be84 <_ZGTtNSt12domain_errorD1Ev>:
1000be84:	21000104 	addi	r4,r4,4
1000be88:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000be8c <_ZGTtNSt12domain_errorD0Ev>:
1000be8c:	defffe04 	addi	sp,sp,-8
1000be90:	dc000015 	stw	r16,0(sp)
1000be94:	2021883a 	mov	r16,r4
1000be98:	21000104 	addi	r4,r4,4
1000be9c:	dfc00115 	stw	ra,4(sp)
1000bea0:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000bea4:	8009883a 	mov	r4,r16
1000bea8:	dfc00117 	ldw	ra,4(sp)
1000beac:	dc000017 	ldw	r16,0(sp)
1000beb0:	dec00204 	addi	sp,sp,8
1000beb4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000beb8 <_ZGTtNSt16invalid_argumentC1EPKc>:
1000beb8:	00c400b4 	movhi	r3,4098
1000bebc:	deffed04 	addi	sp,sp,-76
1000bec0:	18d38f04 	addi	r3,r3,20028
1000bec4:	01840074 	movhi	r6,4097
1000bec8:	00840074 	movhi	r2,4097
1000becc:	31a4f504 	addi	r6,r6,-27692
1000bed0:	10afde04 	addi	r2,r2,-16520
1000bed4:	d9000015 	stw	r4,0(sp)
1000bed8:	d8c00915 	stw	r3,36(sp)
1000bedc:	d9000204 	addi	r4,sp,8
1000bee0:	d8c01104 	addi	r3,sp,68
1000bee4:	d9800815 	stw	r6,32(sp)
1000bee8:	d8c00a15 	stw	r3,40(sp)
1000beec:	dfc01215 	stw	ra,72(sp)
1000bef0:	d8800b15 	stw	r2,44(sp)
1000bef4:	d9400115 	stw	r5,4(sp)
1000bef8:	df001115 	stw	fp,68(sp)
1000befc:	dec00c15 	stw	sp,48(sp)
1000bf00:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bf04:	d8800f04 	addi	r2,sp,60
1000bf08:	014400b4 	movhi	r5,4098
1000bf0c:	1009883a 	mov	r4,r2
1000bf10:	2956d304 	addi	r5,r5,23372
1000bf14:	00bfffc4 	movi	r2,-1
1000bf18:	d8800315 	stw	r2,12(sp)
1000bf1c:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000bf20:	00c00044 	movi	r3,1
1000bf24:	d9000017 	ldw	r4,0(sp)
1000bf28:	008400b4 	movhi	r2,4098
1000bf2c:	d8c00315 	stw	r3,12(sp)
1000bf30:	d8c00f04 	addi	r3,sp,60
1000bf34:	1097cd04 	addi	r2,r2,24372
1000bf38:	01800204 	movi	r6,8
1000bf3c:	180b883a 	mov	r5,r3
1000bf40:	d8800f15 	stw	r2,60(sp)
1000bf44:	00000000 	call	10000000 <__alt_mem_sdram>
1000bf48:	d9800017 	ldw	r6,0(sp)
1000bf4c:	d9400117 	ldw	r5,4(sp)
1000bf50:	31000104 	addi	r4,r6,4
1000bf54:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bf58:	d9000f04 	addi	r4,sp,60
1000bf5c:	000d5580 	call	1000d558 <_ZNSt16invalid_argumentD1Ev>
1000bf60:	d9000204 	addi	r4,sp,8
1000bf64:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000bf68:	dfc01217 	ldw	ra,72(sp)
1000bf6c:	df001117 	ldw	fp,68(sp)
1000bf70:	dec01304 	addi	sp,sp,76
1000bf74:	f800283a 	ret
1000bf78:	d8800417 	ldw	r2,16(sp)
1000bf7c:	d9000f04 	addi	r4,sp,60
1000bf80:	d8800015 	stw	r2,0(sp)
1000bf84:	000d5580 	call	1000d558 <_ZNSt16invalid_argumentD1Ev>
1000bf88:	d9000017 	ldw	r4,0(sp)
1000bf8c:	00bfffc4 	movi	r2,-1
1000bf90:	d8800315 	stw	r2,12(sp)
1000bf94:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000bf98 <_ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bf98:	00c400b4 	movhi	r3,4098
1000bf9c:	deffed04 	addi	sp,sp,-76
1000bfa0:	18d39084 	addi	r3,r3,20034
1000bfa4:	01840074 	movhi	r6,4097
1000bfa8:	00840074 	movhi	r2,4097
1000bfac:	31a4f504 	addi	r6,r6,-27692
1000bfb0:	10b01b04 	addi	r2,r2,-16276
1000bfb4:	d9000015 	stw	r4,0(sp)
1000bfb8:	d8c00915 	stw	r3,36(sp)
1000bfbc:	d9000204 	addi	r4,sp,8
1000bfc0:	d8c01104 	addi	r3,sp,68
1000bfc4:	d9800815 	stw	r6,32(sp)
1000bfc8:	dfc01215 	stw	ra,72(sp)
1000bfcc:	d8c00a15 	stw	r3,40(sp)
1000bfd0:	d8800b15 	stw	r2,44(sp)
1000bfd4:	d9400115 	stw	r5,4(sp)
1000bfd8:	df001115 	stw	fp,68(sp)
1000bfdc:	dec00c15 	stw	sp,48(sp)
1000bfe0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000bfe4:	d8c00f04 	addi	r3,sp,60
1000bfe8:	014400b4 	movhi	r5,4098
1000bfec:	1809883a 	mov	r4,r3
1000bff0:	00bfffc4 	movi	r2,-1
1000bff4:	2956d304 	addi	r5,r5,23372
1000bff8:	d8800315 	stw	r2,12(sp)
1000bffc:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000c000:	00c00044 	movi	r3,1
1000c004:	d9000017 	ldw	r4,0(sp)
1000c008:	008400b4 	movhi	r2,4098
1000c00c:	d8c00315 	stw	r3,12(sp)
1000c010:	d8c00f04 	addi	r3,sp,60
1000c014:	1097cd04 	addi	r2,r2,24372
1000c018:	01800204 	movi	r6,8
1000c01c:	180b883a 	mov	r5,r3
1000c020:	d8800f15 	stw	r2,60(sp)
1000c024:	00000000 	call	10000000 <__alt_mem_sdram>
1000c028:	d8800017 	ldw	r2,0(sp)
1000c02c:	d9000117 	ldw	r4,4(sp)
1000c030:	10c00104 	addi	r3,r2,4
1000c034:	d8c00115 	stw	r3,4(sp)
1000c038:	00000000 	call	10000000 <__alt_mem_sdram>
1000c03c:	d9800017 	ldw	r6,0(sp)
1000c040:	d9000117 	ldw	r4,4(sp)
1000c044:	100b883a 	mov	r5,r2
1000c048:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c04c:	d9000f04 	addi	r4,sp,60
1000c050:	000d5580 	call	1000d558 <_ZNSt16invalid_argumentD1Ev>
1000c054:	d9000204 	addi	r4,sp,8
1000c058:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c05c:	dfc01217 	ldw	ra,72(sp)
1000c060:	df001117 	ldw	fp,68(sp)
1000c064:	dec01304 	addi	sp,sp,76
1000c068:	f800283a 	ret
1000c06c:	d8800417 	ldw	r2,16(sp)
1000c070:	d9000f04 	addi	r4,sp,60
1000c074:	d8800015 	stw	r2,0(sp)
1000c078:	000d5580 	call	1000d558 <_ZNSt16invalid_argumentD1Ev>
1000c07c:	d9000017 	ldw	r4,0(sp)
1000c080:	00bfffc4 	movi	r2,-1
1000c084:	d8800315 	stw	r2,12(sp)
1000c088:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c08c <_ZGTtNSt16invalid_argumentD1Ev>:
1000c08c:	21000104 	addi	r4,r4,4
1000c090:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000c094 <_ZGTtNSt16invalid_argumentD0Ev>:
1000c094:	defffe04 	addi	sp,sp,-8
1000c098:	dc000015 	stw	r16,0(sp)
1000c09c:	2021883a 	mov	r16,r4
1000c0a0:	21000104 	addi	r4,r4,4
1000c0a4:	dfc00115 	stw	ra,4(sp)
1000c0a8:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000c0ac:	8009883a 	mov	r4,r16
1000c0b0:	dfc00117 	ldw	ra,4(sp)
1000c0b4:	dc000017 	ldw	r16,0(sp)
1000c0b8:	dec00204 	addi	sp,sp,8
1000c0bc:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c0c0 <_ZGTtNSt12length_errorC1EPKc>:
1000c0c0:	00c400b4 	movhi	r3,4098
1000c0c4:	deffed04 	addi	sp,sp,-76
1000c0c8:	18d39204 	addi	r3,r3,20040
1000c0cc:	01840074 	movhi	r6,4097
1000c0d0:	00840074 	movhi	r2,4097
1000c0d4:	31a4f504 	addi	r6,r6,-27692
1000c0d8:	10b06004 	addi	r2,r2,-16000
1000c0dc:	d9000015 	stw	r4,0(sp)
1000c0e0:	d8c00915 	stw	r3,36(sp)
1000c0e4:	d9000204 	addi	r4,sp,8
1000c0e8:	d8c01104 	addi	r3,sp,68
1000c0ec:	d9800815 	stw	r6,32(sp)
1000c0f0:	d8c00a15 	stw	r3,40(sp)
1000c0f4:	dfc01215 	stw	ra,72(sp)
1000c0f8:	d8800b15 	stw	r2,44(sp)
1000c0fc:	d9400115 	stw	r5,4(sp)
1000c100:	df001115 	stw	fp,68(sp)
1000c104:	dec00c15 	stw	sp,48(sp)
1000c108:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c10c:	d8800f04 	addi	r2,sp,60
1000c110:	014400b4 	movhi	r5,4098
1000c114:	1009883a 	mov	r4,r2
1000c118:	2956d304 	addi	r5,r5,23372
1000c11c:	00bfffc4 	movi	r2,-1
1000c120:	d8800315 	stw	r2,12(sp)
1000c124:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000c128:	00c00044 	movi	r3,1
1000c12c:	d9000017 	ldw	r4,0(sp)
1000c130:	008400b4 	movhi	r2,4098
1000c134:	d8c00315 	stw	r3,12(sp)
1000c138:	d8c00f04 	addi	r3,sp,60
1000c13c:	1097d204 	addi	r2,r2,24392
1000c140:	01800204 	movi	r6,8
1000c144:	180b883a 	mov	r5,r3
1000c148:	d8800f15 	stw	r2,60(sp)
1000c14c:	00000000 	call	10000000 <__alt_mem_sdram>
1000c150:	d9800017 	ldw	r6,0(sp)
1000c154:	d9400117 	ldw	r5,4(sp)
1000c158:	31000104 	addi	r4,r6,4
1000c15c:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c160:	d9000f04 	addi	r4,sp,60
1000c164:	000d59c0 	call	1000d59c <_ZNSt12length_errorD1Ev>
1000c168:	d9000204 	addi	r4,sp,8
1000c16c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c170:	dfc01217 	ldw	ra,72(sp)
1000c174:	df001117 	ldw	fp,68(sp)
1000c178:	dec01304 	addi	sp,sp,76
1000c17c:	f800283a 	ret
1000c180:	d8800417 	ldw	r2,16(sp)
1000c184:	d9000f04 	addi	r4,sp,60
1000c188:	d8800015 	stw	r2,0(sp)
1000c18c:	000d59c0 	call	1000d59c <_ZNSt12length_errorD1Ev>
1000c190:	d9000017 	ldw	r4,0(sp)
1000c194:	00bfffc4 	movi	r2,-1
1000c198:	d8800315 	stw	r2,12(sp)
1000c19c:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c1a0 <_ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c1a0:	00c400b4 	movhi	r3,4098
1000c1a4:	deffed04 	addi	sp,sp,-76
1000c1a8:	18d39384 	addi	r3,r3,20046
1000c1ac:	01840074 	movhi	r6,4097
1000c1b0:	00840074 	movhi	r2,4097
1000c1b4:	31a4f504 	addi	r6,r6,-27692
1000c1b8:	10b09d04 	addi	r2,r2,-15756
1000c1bc:	d9000015 	stw	r4,0(sp)
1000c1c0:	d8c00915 	stw	r3,36(sp)
1000c1c4:	d9000204 	addi	r4,sp,8
1000c1c8:	d8c01104 	addi	r3,sp,68
1000c1cc:	d9800815 	stw	r6,32(sp)
1000c1d0:	dfc01215 	stw	ra,72(sp)
1000c1d4:	d8c00a15 	stw	r3,40(sp)
1000c1d8:	d8800b15 	stw	r2,44(sp)
1000c1dc:	d9400115 	stw	r5,4(sp)
1000c1e0:	df001115 	stw	fp,68(sp)
1000c1e4:	dec00c15 	stw	sp,48(sp)
1000c1e8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c1ec:	d8c00f04 	addi	r3,sp,60
1000c1f0:	014400b4 	movhi	r5,4098
1000c1f4:	1809883a 	mov	r4,r3
1000c1f8:	00bfffc4 	movi	r2,-1
1000c1fc:	2956d304 	addi	r5,r5,23372
1000c200:	d8800315 	stw	r2,12(sp)
1000c204:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000c208:	00c00044 	movi	r3,1
1000c20c:	d9000017 	ldw	r4,0(sp)
1000c210:	008400b4 	movhi	r2,4098
1000c214:	d8c00315 	stw	r3,12(sp)
1000c218:	d8c00f04 	addi	r3,sp,60
1000c21c:	1097d204 	addi	r2,r2,24392
1000c220:	01800204 	movi	r6,8
1000c224:	180b883a 	mov	r5,r3
1000c228:	d8800f15 	stw	r2,60(sp)
1000c22c:	00000000 	call	10000000 <__alt_mem_sdram>
1000c230:	d8800017 	ldw	r2,0(sp)
1000c234:	d9000117 	ldw	r4,4(sp)
1000c238:	10c00104 	addi	r3,r2,4
1000c23c:	d8c00115 	stw	r3,4(sp)
1000c240:	00000000 	call	10000000 <__alt_mem_sdram>
1000c244:	d9800017 	ldw	r6,0(sp)
1000c248:	d9000117 	ldw	r4,4(sp)
1000c24c:	100b883a 	mov	r5,r2
1000c250:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c254:	d9000f04 	addi	r4,sp,60
1000c258:	000d59c0 	call	1000d59c <_ZNSt12length_errorD1Ev>
1000c25c:	d9000204 	addi	r4,sp,8
1000c260:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c264:	dfc01217 	ldw	ra,72(sp)
1000c268:	df001117 	ldw	fp,68(sp)
1000c26c:	dec01304 	addi	sp,sp,76
1000c270:	f800283a 	ret
1000c274:	d8800417 	ldw	r2,16(sp)
1000c278:	d9000f04 	addi	r4,sp,60
1000c27c:	d8800015 	stw	r2,0(sp)
1000c280:	000d59c0 	call	1000d59c <_ZNSt12length_errorD1Ev>
1000c284:	d9000017 	ldw	r4,0(sp)
1000c288:	00bfffc4 	movi	r2,-1
1000c28c:	d8800315 	stw	r2,12(sp)
1000c290:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c294 <_ZGTtNSt12length_errorD1Ev>:
1000c294:	21000104 	addi	r4,r4,4
1000c298:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000c29c <_ZGTtNSt12length_errorD0Ev>:
1000c29c:	defffe04 	addi	sp,sp,-8
1000c2a0:	dc000015 	stw	r16,0(sp)
1000c2a4:	2021883a 	mov	r16,r4
1000c2a8:	21000104 	addi	r4,r4,4
1000c2ac:	dfc00115 	stw	ra,4(sp)
1000c2b0:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000c2b4:	8009883a 	mov	r4,r16
1000c2b8:	dfc00117 	ldw	ra,4(sp)
1000c2bc:	dc000017 	ldw	r16,0(sp)
1000c2c0:	dec00204 	addi	sp,sp,8
1000c2c4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c2c8 <_ZGTtNSt12out_of_rangeC1EPKc>:
1000c2c8:	00c400b4 	movhi	r3,4098
1000c2cc:	deffed04 	addi	sp,sp,-76
1000c2d0:	18d39504 	addi	r3,r3,20052
1000c2d4:	01840074 	movhi	r6,4097
1000c2d8:	00840074 	movhi	r2,4097
1000c2dc:	31a4f504 	addi	r6,r6,-27692
1000c2e0:	10b0e204 	addi	r2,r2,-15480
1000c2e4:	d9000015 	stw	r4,0(sp)
1000c2e8:	d8c00915 	stw	r3,36(sp)
1000c2ec:	d9000204 	addi	r4,sp,8
1000c2f0:	d8c01104 	addi	r3,sp,68
1000c2f4:	d9800815 	stw	r6,32(sp)
1000c2f8:	d8c00a15 	stw	r3,40(sp)
1000c2fc:	dfc01215 	stw	ra,72(sp)
1000c300:	d8800b15 	stw	r2,44(sp)
1000c304:	d9400115 	stw	r5,4(sp)
1000c308:	df001115 	stw	fp,68(sp)
1000c30c:	dec00c15 	stw	sp,48(sp)
1000c310:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c314:	d8800f04 	addi	r2,sp,60
1000c318:	014400b4 	movhi	r5,4098
1000c31c:	1009883a 	mov	r4,r2
1000c320:	2956d304 	addi	r5,r5,23372
1000c324:	00bfffc4 	movi	r2,-1
1000c328:	d8800315 	stw	r2,12(sp)
1000c32c:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000c330:	00c00044 	movi	r3,1
1000c334:	d9000017 	ldw	r4,0(sp)
1000c338:	008400b4 	movhi	r2,4098
1000c33c:	d8c00315 	stw	r3,12(sp)
1000c340:	d8c00f04 	addi	r3,sp,60
1000c344:	1097d704 	addi	r2,r2,24412
1000c348:	01800204 	movi	r6,8
1000c34c:	180b883a 	mov	r5,r3
1000c350:	d8800f15 	stw	r2,60(sp)
1000c354:	00000000 	call	10000000 <__alt_mem_sdram>
1000c358:	d9800017 	ldw	r6,0(sp)
1000c35c:	d9400117 	ldw	r5,4(sp)
1000c360:	31000104 	addi	r4,r6,4
1000c364:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c368:	d9000f04 	addi	r4,sp,60
1000c36c:	000d5e00 	call	1000d5e0 <_ZNSt12out_of_rangeD1Ev>
1000c370:	d9000204 	addi	r4,sp,8
1000c374:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c378:	dfc01217 	ldw	ra,72(sp)
1000c37c:	df001117 	ldw	fp,68(sp)
1000c380:	dec01304 	addi	sp,sp,76
1000c384:	f800283a 	ret
1000c388:	d8800417 	ldw	r2,16(sp)
1000c38c:	d9000f04 	addi	r4,sp,60
1000c390:	d8800015 	stw	r2,0(sp)
1000c394:	000d5e00 	call	1000d5e0 <_ZNSt12out_of_rangeD1Ev>
1000c398:	d9000017 	ldw	r4,0(sp)
1000c39c:	00bfffc4 	movi	r2,-1
1000c3a0:	d8800315 	stw	r2,12(sp)
1000c3a4:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c3a8 <_ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c3a8:	00c400b4 	movhi	r3,4098
1000c3ac:	deffed04 	addi	sp,sp,-76
1000c3b0:	18d39684 	addi	r3,r3,20058
1000c3b4:	01840074 	movhi	r6,4097
1000c3b8:	00840074 	movhi	r2,4097
1000c3bc:	31a4f504 	addi	r6,r6,-27692
1000c3c0:	10b11f04 	addi	r2,r2,-15236
1000c3c4:	d9000015 	stw	r4,0(sp)
1000c3c8:	d8c00915 	stw	r3,36(sp)
1000c3cc:	d9000204 	addi	r4,sp,8
1000c3d0:	d8c01104 	addi	r3,sp,68
1000c3d4:	d9800815 	stw	r6,32(sp)
1000c3d8:	dfc01215 	stw	ra,72(sp)
1000c3dc:	d8c00a15 	stw	r3,40(sp)
1000c3e0:	d8800b15 	stw	r2,44(sp)
1000c3e4:	d9400115 	stw	r5,4(sp)
1000c3e8:	df001115 	stw	fp,68(sp)
1000c3ec:	dec00c15 	stw	sp,48(sp)
1000c3f0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c3f4:	d8c00f04 	addi	r3,sp,60
1000c3f8:	014400b4 	movhi	r5,4098
1000c3fc:	1809883a 	mov	r4,r3
1000c400:	00bfffc4 	movi	r2,-1
1000c404:	2956d304 	addi	r5,r5,23372
1000c408:	d8800315 	stw	r2,12(sp)
1000c40c:	000b3c40 	call	1000b3c4 <_ZNSt11logic_errorC1EPKc>
1000c410:	00c00044 	movi	r3,1
1000c414:	d9000017 	ldw	r4,0(sp)
1000c418:	008400b4 	movhi	r2,4098
1000c41c:	d8c00315 	stw	r3,12(sp)
1000c420:	d8c00f04 	addi	r3,sp,60
1000c424:	1097d704 	addi	r2,r2,24412
1000c428:	01800204 	movi	r6,8
1000c42c:	180b883a 	mov	r5,r3
1000c430:	d8800f15 	stw	r2,60(sp)
1000c434:	00000000 	call	10000000 <__alt_mem_sdram>
1000c438:	d8800017 	ldw	r2,0(sp)
1000c43c:	d9000117 	ldw	r4,4(sp)
1000c440:	10c00104 	addi	r3,r2,4
1000c444:	d8c00115 	stw	r3,4(sp)
1000c448:	00000000 	call	10000000 <__alt_mem_sdram>
1000c44c:	d9800017 	ldw	r6,0(sp)
1000c450:	d9000117 	ldw	r4,4(sp)
1000c454:	100b883a 	mov	r5,r2
1000c458:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c45c:	d9000f04 	addi	r4,sp,60
1000c460:	000d5e00 	call	1000d5e0 <_ZNSt12out_of_rangeD1Ev>
1000c464:	d9000204 	addi	r4,sp,8
1000c468:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c46c:	dfc01217 	ldw	ra,72(sp)
1000c470:	df001117 	ldw	fp,68(sp)
1000c474:	dec01304 	addi	sp,sp,76
1000c478:	f800283a 	ret
1000c47c:	d8800417 	ldw	r2,16(sp)
1000c480:	d9000f04 	addi	r4,sp,60
1000c484:	d8800015 	stw	r2,0(sp)
1000c488:	000d5e00 	call	1000d5e0 <_ZNSt12out_of_rangeD1Ev>
1000c48c:	d9000017 	ldw	r4,0(sp)
1000c490:	00bfffc4 	movi	r2,-1
1000c494:	d8800315 	stw	r2,12(sp)
1000c498:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c49c <_ZGTtNSt12out_of_rangeD1Ev>:
1000c49c:	21000104 	addi	r4,r4,4
1000c4a0:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000c4a4 <_ZGTtNSt12out_of_rangeD0Ev>:
1000c4a4:	defffe04 	addi	sp,sp,-8
1000c4a8:	dc000015 	stw	r16,0(sp)
1000c4ac:	2021883a 	mov	r16,r4
1000c4b0:	21000104 	addi	r4,r4,4
1000c4b4:	dfc00115 	stw	ra,4(sp)
1000c4b8:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000c4bc:	8009883a 	mov	r4,r16
1000c4c0:	dfc00117 	ldw	ra,4(sp)
1000c4c4:	dc000017 	ldw	r16,0(sp)
1000c4c8:	dec00204 	addi	sp,sp,8
1000c4cc:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c4d0 <_ZGTtNSt13runtime_errorC1EPKc>:
1000c4d0:	00c400b4 	movhi	r3,4098
1000c4d4:	deffed04 	addi	sp,sp,-76
1000c4d8:	18d39804 	addi	r3,r3,20064
1000c4dc:	01840074 	movhi	r6,4097
1000c4e0:	00840074 	movhi	r2,4097
1000c4e4:	31a4f504 	addi	r6,r6,-27692
1000c4e8:	10b16104 	addi	r2,r2,-14972
1000c4ec:	d9000015 	stw	r4,0(sp)
1000c4f0:	d8c00915 	stw	r3,36(sp)
1000c4f4:	d9000204 	addi	r4,sp,8
1000c4f8:	d8c01104 	addi	r3,sp,68
1000c4fc:	d9800815 	stw	r6,32(sp)
1000c500:	dfc01215 	stw	ra,72(sp)
1000c504:	d8c00a15 	stw	r3,40(sp)
1000c508:	d8800b15 	stw	r2,44(sp)
1000c50c:	d9400115 	stw	r5,4(sp)
1000c510:	df001115 	stw	fp,68(sp)
1000c514:	dec00c15 	stw	sp,48(sp)
1000c518:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c51c:	d8800f04 	addi	r2,sp,60
1000c520:	014400b4 	movhi	r5,4098
1000c524:	1009883a 	mov	r4,r2
1000c528:	2956d304 	addi	r5,r5,23372
1000c52c:	00bfffc4 	movi	r2,-1
1000c530:	d8800315 	stw	r2,12(sp)
1000c534:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000c538:	00800044 	movi	r2,1
1000c53c:	d9000017 	ldw	r4,0(sp)
1000c540:	d8800315 	stw	r2,12(sp)
1000c544:	d8800f04 	addi	r2,sp,60
1000c548:	01800204 	movi	r6,8
1000c54c:	100b883a 	mov	r5,r2
1000c550:	00000000 	call	10000000 <__alt_mem_sdram>
1000c554:	d9800017 	ldw	r6,0(sp)
1000c558:	d9400117 	ldw	r5,4(sp)
1000c55c:	31000104 	addi	r4,r6,4
1000c560:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c564:	d9000f04 	addi	r4,sp,60
1000c568:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000c56c:	d9000204 	addi	r4,sp,8
1000c570:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c574:	dfc01217 	ldw	ra,72(sp)
1000c578:	df001117 	ldw	fp,68(sp)
1000c57c:	dec01304 	addi	sp,sp,76
1000c580:	f800283a 	ret
1000c584:	d8800417 	ldw	r2,16(sp)
1000c588:	d9000f04 	addi	r4,sp,60
1000c58c:	d8800015 	stw	r2,0(sp)
1000c590:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000c594:	d9000017 	ldw	r4,0(sp)
1000c598:	00bfffc4 	movi	r2,-1
1000c59c:	d8800315 	stw	r2,12(sp)
1000c5a0:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c5a4 <_ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c5a4:	00c400b4 	movhi	r3,4098
1000c5a8:	deffed04 	addi	sp,sp,-76
1000c5ac:	18d39984 	addi	r3,r3,20070
1000c5b0:	01840074 	movhi	r6,4097
1000c5b4:	00840074 	movhi	r2,4097
1000c5b8:	31a4f504 	addi	r6,r6,-27692
1000c5bc:	10b19b04 	addi	r2,r2,-14740
1000c5c0:	d9000015 	stw	r4,0(sp)
1000c5c4:	d8c00915 	stw	r3,36(sp)
1000c5c8:	d9000204 	addi	r4,sp,8
1000c5cc:	d8c01104 	addi	r3,sp,68
1000c5d0:	d9800815 	stw	r6,32(sp)
1000c5d4:	dfc01215 	stw	ra,72(sp)
1000c5d8:	d8c00a15 	stw	r3,40(sp)
1000c5dc:	d8800b15 	stw	r2,44(sp)
1000c5e0:	d9400115 	stw	r5,4(sp)
1000c5e4:	df001115 	stw	fp,68(sp)
1000c5e8:	dec00c15 	stw	sp,48(sp)
1000c5ec:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c5f0:	d8c00f04 	addi	r3,sp,60
1000c5f4:	014400b4 	movhi	r5,4098
1000c5f8:	1809883a 	mov	r4,r3
1000c5fc:	00bfffc4 	movi	r2,-1
1000c600:	2956d304 	addi	r5,r5,23372
1000c604:	d8800315 	stw	r2,12(sp)
1000c608:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000c60c:	d9000017 	ldw	r4,0(sp)
1000c610:	d8c00f04 	addi	r3,sp,60
1000c614:	00800044 	movi	r2,1
1000c618:	01800204 	movi	r6,8
1000c61c:	180b883a 	mov	r5,r3
1000c620:	d8800315 	stw	r2,12(sp)
1000c624:	00000000 	call	10000000 <__alt_mem_sdram>
1000c628:	d8800017 	ldw	r2,0(sp)
1000c62c:	d9000117 	ldw	r4,4(sp)
1000c630:	10c00104 	addi	r3,r2,4
1000c634:	d8c00115 	stw	r3,4(sp)
1000c638:	00000000 	call	10000000 <__alt_mem_sdram>
1000c63c:	d9800017 	ldw	r6,0(sp)
1000c640:	d9000117 	ldw	r4,4(sp)
1000c644:	100b883a 	mov	r5,r2
1000c648:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c64c:	d9000f04 	addi	r4,sp,60
1000c650:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000c654:	d9000204 	addi	r4,sp,8
1000c658:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c65c:	dfc01217 	ldw	ra,72(sp)
1000c660:	df001117 	ldw	fp,68(sp)
1000c664:	dec01304 	addi	sp,sp,76
1000c668:	f800283a 	ret
1000c66c:	d8800417 	ldw	r2,16(sp)
1000c670:	d9000f04 	addi	r4,sp,60
1000c674:	d8800015 	stw	r2,0(sp)
1000c678:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000c67c:	d9000017 	ldw	r4,0(sp)
1000c680:	00bfffc4 	movi	r2,-1
1000c684:	d8800315 	stw	r2,12(sp)
1000c688:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c68c <_ZGTtNSt13runtime_errorD1Ev>:
1000c68c:	21000104 	addi	r4,r4,4
1000c690:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000c694 <_ZGTtNSt13runtime_errorD0Ev>:
1000c694:	defffe04 	addi	sp,sp,-8
1000c698:	dc000015 	stw	r16,0(sp)
1000c69c:	2021883a 	mov	r16,r4
1000c6a0:	21000104 	addi	r4,r4,4
1000c6a4:	dfc00115 	stw	ra,4(sp)
1000c6a8:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000c6ac:	8009883a 	mov	r4,r16
1000c6b0:	dfc00117 	ldw	ra,4(sp)
1000c6b4:	dc000017 	ldw	r16,0(sp)
1000c6b8:	dec00204 	addi	sp,sp,8
1000c6bc:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c6c0 <_ZGTtNKSt13runtime_error4whatEv>:
1000c6c0:	21000104 	addi	r4,r4,4
1000c6c4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c6c8 <_ZGTtNSt11range_errorC1EPKc>:
1000c6c8:	00c400b4 	movhi	r3,4098
1000c6cc:	deffed04 	addi	sp,sp,-76
1000c6d0:	18d39b04 	addi	r3,r3,20076
1000c6d4:	01840074 	movhi	r6,4097
1000c6d8:	00840074 	movhi	r2,4097
1000c6dc:	31a4f504 	addi	r6,r6,-27692
1000c6e0:	10b1e204 	addi	r2,r2,-14456
1000c6e4:	d9000015 	stw	r4,0(sp)
1000c6e8:	d8c00915 	stw	r3,36(sp)
1000c6ec:	d9000204 	addi	r4,sp,8
1000c6f0:	d8c01104 	addi	r3,sp,68
1000c6f4:	d9800815 	stw	r6,32(sp)
1000c6f8:	d8c00a15 	stw	r3,40(sp)
1000c6fc:	dfc01215 	stw	ra,72(sp)
1000c700:	d8800b15 	stw	r2,44(sp)
1000c704:	d9400115 	stw	r5,4(sp)
1000c708:	df001115 	stw	fp,68(sp)
1000c70c:	dec00c15 	stw	sp,48(sp)
1000c710:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c714:	d8800f04 	addi	r2,sp,60
1000c718:	014400b4 	movhi	r5,4098
1000c71c:	1009883a 	mov	r4,r2
1000c720:	2956d304 	addi	r5,r5,23372
1000c724:	00bfffc4 	movi	r2,-1
1000c728:	d8800315 	stw	r2,12(sp)
1000c72c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000c730:	00c00044 	movi	r3,1
1000c734:	d9000017 	ldw	r4,0(sp)
1000c738:	008400b4 	movhi	r2,4098
1000c73c:	d8c00315 	stw	r3,12(sp)
1000c740:	d8c00f04 	addi	r3,sp,60
1000c744:	1097e104 	addi	r2,r2,24452
1000c748:	01800204 	movi	r6,8
1000c74c:	180b883a 	mov	r5,r3
1000c750:	d8800f15 	stw	r2,60(sp)
1000c754:	00000000 	call	10000000 <__alt_mem_sdram>
1000c758:	d9800017 	ldw	r6,0(sp)
1000c75c:	d9400117 	ldw	r5,4(sp)
1000c760:	31000104 	addi	r4,r6,4
1000c764:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c768:	d9000f04 	addi	r4,sp,60
1000c76c:	000d6b00 	call	1000d6b0 <_ZNSt11range_errorD1Ev>
1000c770:	d9000204 	addi	r4,sp,8
1000c774:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c778:	dfc01217 	ldw	ra,72(sp)
1000c77c:	df001117 	ldw	fp,68(sp)
1000c780:	dec01304 	addi	sp,sp,76
1000c784:	f800283a 	ret
1000c788:	d8800417 	ldw	r2,16(sp)
1000c78c:	d9000f04 	addi	r4,sp,60
1000c790:	d8800015 	stw	r2,0(sp)
1000c794:	000d6b00 	call	1000d6b0 <_ZNSt11range_errorD1Ev>
1000c798:	d9000017 	ldw	r4,0(sp)
1000c79c:	00bfffc4 	movi	r2,-1
1000c7a0:	d8800315 	stw	r2,12(sp)
1000c7a4:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c7a8 <_ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c7a8:	00c400b4 	movhi	r3,4098
1000c7ac:	deffed04 	addi	sp,sp,-76
1000c7b0:	18d39c84 	addi	r3,r3,20082
1000c7b4:	01840074 	movhi	r6,4097
1000c7b8:	00840074 	movhi	r2,4097
1000c7bc:	31a4f504 	addi	r6,r6,-27692
1000c7c0:	10b21f04 	addi	r2,r2,-14212
1000c7c4:	d9000015 	stw	r4,0(sp)
1000c7c8:	d8c00915 	stw	r3,36(sp)
1000c7cc:	d9000204 	addi	r4,sp,8
1000c7d0:	d8c01104 	addi	r3,sp,68
1000c7d4:	d9800815 	stw	r6,32(sp)
1000c7d8:	dfc01215 	stw	ra,72(sp)
1000c7dc:	d8c00a15 	stw	r3,40(sp)
1000c7e0:	d8800b15 	stw	r2,44(sp)
1000c7e4:	d9400115 	stw	r5,4(sp)
1000c7e8:	df001115 	stw	fp,68(sp)
1000c7ec:	dec00c15 	stw	sp,48(sp)
1000c7f0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c7f4:	d8c00f04 	addi	r3,sp,60
1000c7f8:	014400b4 	movhi	r5,4098
1000c7fc:	1809883a 	mov	r4,r3
1000c800:	00bfffc4 	movi	r2,-1
1000c804:	2956d304 	addi	r5,r5,23372
1000c808:	d8800315 	stw	r2,12(sp)
1000c80c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000c810:	00c00044 	movi	r3,1
1000c814:	d9000017 	ldw	r4,0(sp)
1000c818:	008400b4 	movhi	r2,4098
1000c81c:	d8c00315 	stw	r3,12(sp)
1000c820:	d8c00f04 	addi	r3,sp,60
1000c824:	1097e104 	addi	r2,r2,24452
1000c828:	01800204 	movi	r6,8
1000c82c:	180b883a 	mov	r5,r3
1000c830:	d8800f15 	stw	r2,60(sp)
1000c834:	00000000 	call	10000000 <__alt_mem_sdram>
1000c838:	d8800017 	ldw	r2,0(sp)
1000c83c:	d9000117 	ldw	r4,4(sp)
1000c840:	10c00104 	addi	r3,r2,4
1000c844:	d8c00115 	stw	r3,4(sp)
1000c848:	00000000 	call	10000000 <__alt_mem_sdram>
1000c84c:	d9800017 	ldw	r6,0(sp)
1000c850:	d9000117 	ldw	r4,4(sp)
1000c854:	100b883a 	mov	r5,r2
1000c858:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c85c:	d9000f04 	addi	r4,sp,60
1000c860:	000d6b00 	call	1000d6b0 <_ZNSt11range_errorD1Ev>
1000c864:	d9000204 	addi	r4,sp,8
1000c868:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c86c:	dfc01217 	ldw	ra,72(sp)
1000c870:	df001117 	ldw	fp,68(sp)
1000c874:	dec01304 	addi	sp,sp,76
1000c878:	f800283a 	ret
1000c87c:	d8800417 	ldw	r2,16(sp)
1000c880:	d9000f04 	addi	r4,sp,60
1000c884:	d8800015 	stw	r2,0(sp)
1000c888:	000d6b00 	call	1000d6b0 <_ZNSt11range_errorD1Ev>
1000c88c:	d9000017 	ldw	r4,0(sp)
1000c890:	00bfffc4 	movi	r2,-1
1000c894:	d8800315 	stw	r2,12(sp)
1000c898:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c89c <_ZGTtNSt11range_errorD1Ev>:
1000c89c:	21000104 	addi	r4,r4,4
1000c8a0:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000c8a4 <_ZGTtNSt11range_errorD0Ev>:
1000c8a4:	defffe04 	addi	sp,sp,-8
1000c8a8:	dc000015 	stw	r16,0(sp)
1000c8ac:	2021883a 	mov	r16,r4
1000c8b0:	21000104 	addi	r4,r4,4
1000c8b4:	dfc00115 	stw	ra,4(sp)
1000c8b8:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000c8bc:	8009883a 	mov	r4,r16
1000c8c0:	dfc00117 	ldw	ra,4(sp)
1000c8c4:	dc000017 	ldw	r16,0(sp)
1000c8c8:	dec00204 	addi	sp,sp,8
1000c8cc:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c8d0 <_ZGTtNSt14overflow_errorC1EPKc>:
1000c8d0:	00c400b4 	movhi	r3,4098
1000c8d4:	deffed04 	addi	sp,sp,-76
1000c8d8:	18d39e04 	addi	r3,r3,20088
1000c8dc:	01840074 	movhi	r6,4097
1000c8e0:	00840074 	movhi	r2,4097
1000c8e4:	31a4f504 	addi	r6,r6,-27692
1000c8e8:	10b26404 	addi	r2,r2,-13936
1000c8ec:	d9000015 	stw	r4,0(sp)
1000c8f0:	d8c00915 	stw	r3,36(sp)
1000c8f4:	d9000204 	addi	r4,sp,8
1000c8f8:	d8c01104 	addi	r3,sp,68
1000c8fc:	d9800815 	stw	r6,32(sp)
1000c900:	d8c00a15 	stw	r3,40(sp)
1000c904:	dfc01215 	stw	ra,72(sp)
1000c908:	d8800b15 	stw	r2,44(sp)
1000c90c:	d9400115 	stw	r5,4(sp)
1000c910:	df001115 	stw	fp,68(sp)
1000c914:	dec00c15 	stw	sp,48(sp)
1000c918:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c91c:	d8800f04 	addi	r2,sp,60
1000c920:	014400b4 	movhi	r5,4098
1000c924:	1009883a 	mov	r4,r2
1000c928:	2956d304 	addi	r5,r5,23372
1000c92c:	00bfffc4 	movi	r2,-1
1000c930:	d8800315 	stw	r2,12(sp)
1000c934:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000c938:	00c00044 	movi	r3,1
1000c93c:	d9000017 	ldw	r4,0(sp)
1000c940:	008400b4 	movhi	r2,4098
1000c944:	d8c00315 	stw	r3,12(sp)
1000c948:	d8c00f04 	addi	r3,sp,60
1000c94c:	1097e604 	addi	r2,r2,24472
1000c950:	01800204 	movi	r6,8
1000c954:	180b883a 	mov	r5,r3
1000c958:	d8800f15 	stw	r2,60(sp)
1000c95c:	00000000 	call	10000000 <__alt_mem_sdram>
1000c960:	d9800017 	ldw	r6,0(sp)
1000c964:	d9400117 	ldw	r5,4(sp)
1000c968:	31000104 	addi	r4,r6,4
1000c96c:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c970:	d9000f04 	addi	r4,sp,60
1000c974:	000d6f40 	call	1000d6f4 <_ZNSt14overflow_errorD1Ev>
1000c978:	d9000204 	addi	r4,sp,8
1000c97c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000c980:	dfc01217 	ldw	ra,72(sp)
1000c984:	df001117 	ldw	fp,68(sp)
1000c988:	dec01304 	addi	sp,sp,76
1000c98c:	f800283a 	ret
1000c990:	d8800417 	ldw	r2,16(sp)
1000c994:	d9000f04 	addi	r4,sp,60
1000c998:	d8800015 	stw	r2,0(sp)
1000c99c:	000d6f40 	call	1000d6f4 <_ZNSt14overflow_errorD1Ev>
1000c9a0:	d9000017 	ldw	r4,0(sp)
1000c9a4:	00bfffc4 	movi	r2,-1
1000c9a8:	d8800315 	stw	r2,12(sp)
1000c9ac:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000c9b0 <_ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c9b0:	00c400b4 	movhi	r3,4098
1000c9b4:	deffed04 	addi	sp,sp,-76
1000c9b8:	18d39f84 	addi	r3,r3,20094
1000c9bc:	01840074 	movhi	r6,4097
1000c9c0:	00840074 	movhi	r2,4097
1000c9c4:	31a4f504 	addi	r6,r6,-27692
1000c9c8:	10b2a104 	addi	r2,r2,-13692
1000c9cc:	d9000015 	stw	r4,0(sp)
1000c9d0:	d8c00915 	stw	r3,36(sp)
1000c9d4:	d9000204 	addi	r4,sp,8
1000c9d8:	d8c01104 	addi	r3,sp,68
1000c9dc:	d9800815 	stw	r6,32(sp)
1000c9e0:	dfc01215 	stw	ra,72(sp)
1000c9e4:	d8c00a15 	stw	r3,40(sp)
1000c9e8:	d8800b15 	stw	r2,44(sp)
1000c9ec:	d9400115 	stw	r5,4(sp)
1000c9f0:	df001115 	stw	fp,68(sp)
1000c9f4:	dec00c15 	stw	sp,48(sp)
1000c9f8:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000c9fc:	d8c00f04 	addi	r3,sp,60
1000ca00:	014400b4 	movhi	r5,4098
1000ca04:	1809883a 	mov	r4,r3
1000ca08:	00bfffc4 	movi	r2,-1
1000ca0c:	2956d304 	addi	r5,r5,23372
1000ca10:	d8800315 	stw	r2,12(sp)
1000ca14:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000ca18:	00c00044 	movi	r3,1
1000ca1c:	d9000017 	ldw	r4,0(sp)
1000ca20:	008400b4 	movhi	r2,4098
1000ca24:	d8c00315 	stw	r3,12(sp)
1000ca28:	d8c00f04 	addi	r3,sp,60
1000ca2c:	1097e604 	addi	r2,r2,24472
1000ca30:	01800204 	movi	r6,8
1000ca34:	180b883a 	mov	r5,r3
1000ca38:	d8800f15 	stw	r2,60(sp)
1000ca3c:	00000000 	call	10000000 <__alt_mem_sdram>
1000ca40:	d8800017 	ldw	r2,0(sp)
1000ca44:	d9000117 	ldw	r4,4(sp)
1000ca48:	10c00104 	addi	r3,r2,4
1000ca4c:	d8c00115 	stw	r3,4(sp)
1000ca50:	00000000 	call	10000000 <__alt_mem_sdram>
1000ca54:	d9800017 	ldw	r6,0(sp)
1000ca58:	d9000117 	ldw	r4,4(sp)
1000ca5c:	100b883a 	mov	r5,r2
1000ca60:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000ca64:	d9000f04 	addi	r4,sp,60
1000ca68:	000d6f40 	call	1000d6f4 <_ZNSt14overflow_errorD1Ev>
1000ca6c:	d9000204 	addi	r4,sp,8
1000ca70:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000ca74:	dfc01217 	ldw	ra,72(sp)
1000ca78:	df001117 	ldw	fp,68(sp)
1000ca7c:	dec01304 	addi	sp,sp,76
1000ca80:	f800283a 	ret
1000ca84:	d8800417 	ldw	r2,16(sp)
1000ca88:	d9000f04 	addi	r4,sp,60
1000ca8c:	d8800015 	stw	r2,0(sp)
1000ca90:	000d6f40 	call	1000d6f4 <_ZNSt14overflow_errorD1Ev>
1000ca94:	d9000017 	ldw	r4,0(sp)
1000ca98:	00bfffc4 	movi	r2,-1
1000ca9c:	d8800315 	stw	r2,12(sp)
1000caa0:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000caa4 <_ZGTtNSt14overflow_errorD1Ev>:
1000caa4:	21000104 	addi	r4,r4,4
1000caa8:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000caac <_ZGTtNSt14overflow_errorD0Ev>:
1000caac:	defffe04 	addi	sp,sp,-8
1000cab0:	dc000015 	stw	r16,0(sp)
1000cab4:	2021883a 	mov	r16,r4
1000cab8:	21000104 	addi	r4,r4,4
1000cabc:	dfc00115 	stw	ra,4(sp)
1000cac0:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000cac4:	8009883a 	mov	r4,r16
1000cac8:	dfc00117 	ldw	ra,4(sp)
1000cacc:	dc000017 	ldw	r16,0(sp)
1000cad0:	dec00204 	addi	sp,sp,8
1000cad4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000cad8 <_ZGTtNSt15underflow_errorC1EPKc>:
1000cad8:	00c400b4 	movhi	r3,4098
1000cadc:	deffed04 	addi	sp,sp,-76
1000cae0:	18d3a104 	addi	r3,r3,20100
1000cae4:	01840074 	movhi	r6,4097
1000cae8:	00840074 	movhi	r2,4097
1000caec:	31a4f504 	addi	r6,r6,-27692
1000caf0:	10b2e604 	addi	r2,r2,-13416
1000caf4:	d9000015 	stw	r4,0(sp)
1000caf8:	d8c00915 	stw	r3,36(sp)
1000cafc:	d9000204 	addi	r4,sp,8
1000cb00:	d8c01104 	addi	r3,sp,68
1000cb04:	d9800815 	stw	r6,32(sp)
1000cb08:	d8c00a15 	stw	r3,40(sp)
1000cb0c:	dfc01215 	stw	ra,72(sp)
1000cb10:	d8800b15 	stw	r2,44(sp)
1000cb14:	d9400115 	stw	r5,4(sp)
1000cb18:	df001115 	stw	fp,68(sp)
1000cb1c:	dec00c15 	stw	sp,48(sp)
1000cb20:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000cb24:	d8800f04 	addi	r2,sp,60
1000cb28:	014400b4 	movhi	r5,4098
1000cb2c:	1009883a 	mov	r4,r2
1000cb30:	2956d304 	addi	r5,r5,23372
1000cb34:	00bfffc4 	movi	r2,-1
1000cb38:	d8800315 	stw	r2,12(sp)
1000cb3c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000cb40:	00c00044 	movi	r3,1
1000cb44:	d9000017 	ldw	r4,0(sp)
1000cb48:	008400b4 	movhi	r2,4098
1000cb4c:	d8c00315 	stw	r3,12(sp)
1000cb50:	d8c00f04 	addi	r3,sp,60
1000cb54:	1097eb04 	addi	r2,r2,24492
1000cb58:	01800204 	movi	r6,8
1000cb5c:	180b883a 	mov	r5,r3
1000cb60:	d8800f15 	stw	r2,60(sp)
1000cb64:	00000000 	call	10000000 <__alt_mem_sdram>
1000cb68:	d9800017 	ldw	r6,0(sp)
1000cb6c:	d9400117 	ldw	r5,4(sp)
1000cb70:	31000104 	addi	r4,r6,4
1000cb74:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000cb78:	d9000f04 	addi	r4,sp,60
1000cb7c:	000d7380 	call	1000d738 <_ZNSt15underflow_errorD1Ev>
1000cb80:	d9000204 	addi	r4,sp,8
1000cb84:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000cb88:	dfc01217 	ldw	ra,72(sp)
1000cb8c:	df001117 	ldw	fp,68(sp)
1000cb90:	dec01304 	addi	sp,sp,76
1000cb94:	f800283a 	ret
1000cb98:	d8800417 	ldw	r2,16(sp)
1000cb9c:	d9000f04 	addi	r4,sp,60
1000cba0:	d8800015 	stw	r2,0(sp)
1000cba4:	000d7380 	call	1000d738 <_ZNSt15underflow_errorD1Ev>
1000cba8:	d9000017 	ldw	r4,0(sp)
1000cbac:	00bfffc4 	movi	r2,-1
1000cbb0:	d8800315 	stw	r2,12(sp)
1000cbb4:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000cbb8 <_ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000cbb8:	00c400b4 	movhi	r3,4098
1000cbbc:	deffed04 	addi	sp,sp,-76
1000cbc0:	18d3a284 	addi	r3,r3,20106
1000cbc4:	01840074 	movhi	r6,4097
1000cbc8:	00840074 	movhi	r2,4097
1000cbcc:	31a4f504 	addi	r6,r6,-27692
1000cbd0:	10b32304 	addi	r2,r2,-13172
1000cbd4:	d9000015 	stw	r4,0(sp)
1000cbd8:	d8c00915 	stw	r3,36(sp)
1000cbdc:	d9000204 	addi	r4,sp,8
1000cbe0:	d8c01104 	addi	r3,sp,68
1000cbe4:	d9800815 	stw	r6,32(sp)
1000cbe8:	dfc01215 	stw	ra,72(sp)
1000cbec:	d8c00a15 	stw	r3,40(sp)
1000cbf0:	d8800b15 	stw	r2,44(sp)
1000cbf4:	d9400115 	stw	r5,4(sp)
1000cbf8:	df001115 	stw	fp,68(sp)
1000cbfc:	dec00c15 	stw	sp,48(sp)
1000cc00:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000cc04:	d8c00f04 	addi	r3,sp,60
1000cc08:	014400b4 	movhi	r5,4098
1000cc0c:	1809883a 	mov	r4,r3
1000cc10:	00bfffc4 	movi	r2,-1
1000cc14:	2956d304 	addi	r5,r5,23372
1000cc18:	d8800315 	stw	r2,12(sp)
1000cc1c:	000b5300 	call	1000b530 <_ZNSt13runtime_errorC1EPKc>
1000cc20:	00c00044 	movi	r3,1
1000cc24:	d9000017 	ldw	r4,0(sp)
1000cc28:	008400b4 	movhi	r2,4098
1000cc2c:	d8c00315 	stw	r3,12(sp)
1000cc30:	d8c00f04 	addi	r3,sp,60
1000cc34:	1097eb04 	addi	r2,r2,24492
1000cc38:	01800204 	movi	r6,8
1000cc3c:	180b883a 	mov	r5,r3
1000cc40:	d8800f15 	stw	r2,60(sp)
1000cc44:	00000000 	call	10000000 <__alt_mem_sdram>
1000cc48:	d8800017 	ldw	r2,0(sp)
1000cc4c:	d9000117 	ldw	r4,4(sp)
1000cc50:	10c00104 	addi	r3,r2,4
1000cc54:	d8c00115 	stw	r3,4(sp)
1000cc58:	00000000 	call	10000000 <__alt_mem_sdram>
1000cc5c:	d9800017 	ldw	r6,0(sp)
1000cc60:	d9000117 	ldw	r4,4(sp)
1000cc64:	100b883a 	mov	r5,r2
1000cc68:	000b9380 	call	1000b938 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000cc6c:	d9000f04 	addi	r4,sp,60
1000cc70:	000d7380 	call	1000d738 <_ZNSt15underflow_errorD1Ev>
1000cc74:	d9000204 	addi	r4,sp,8
1000cc78:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000cc7c:	dfc01217 	ldw	ra,72(sp)
1000cc80:	df001117 	ldw	fp,68(sp)
1000cc84:	dec01304 	addi	sp,sp,76
1000cc88:	f800283a 	ret
1000cc8c:	d8800417 	ldw	r2,16(sp)
1000cc90:	d9000f04 	addi	r4,sp,60
1000cc94:	d8800015 	stw	r2,0(sp)
1000cc98:	000d7380 	call	1000d738 <_ZNSt15underflow_errorD1Ev>
1000cc9c:	d9000017 	ldw	r4,0(sp)
1000cca0:	00bfffc4 	movi	r2,-1
1000cca4:	d8800315 	stw	r2,12(sp)
1000cca8:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000ccac <_ZGTtNSt15underflow_errorD1Ev>:
1000ccac:	21000104 	addi	r4,r4,4
1000ccb0:	000ba7c1 	jmpi	1000ba7c <_Z20_txnal_cow_string_D1Pv>

1000ccb4 <_ZGTtNSt15underflow_errorD0Ev>:
1000ccb4:	defffe04 	addi	sp,sp,-8
1000ccb8:	dc000015 	stw	r16,0(sp)
1000ccbc:	2021883a 	mov	r16,r4
1000ccc0:	21000104 	addi	r4,r4,4
1000ccc4:	dfc00115 	stw	ra,4(sp)
1000ccc8:	000ba7c0 	call	1000ba7c <_Z20_txnal_cow_string_D1Pv>
1000cccc:	8009883a 	mov	r4,r16
1000ccd0:	dfc00117 	ldw	ra,4(sp)
1000ccd4:	dc000017 	ldw	r16,0(sp)
1000ccd8:	dec00204 	addi	sp,sp,8
1000ccdc:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000cce0 <__cxa_call_terminate>:
1000cce0:	defffe04 	addi	sp,sp,-8
1000cce4:	dfc00115 	stw	ra,4(sp)
1000cce8:	dc000015 	stw	r16,0(sp)
1000ccec:	20000d26 	beq	r4,zero,1000cd24 <__cxa_call_terminate+0x44>
1000ccf0:	2021883a 	mov	r16,r4
1000ccf4:	00089800 	call	10008980 <__cxa_begin_catch>
1000ccf8:	80800017 	ldw	r2,0(r16)
1000ccfc:	81000117 	ldw	r4,4(r16)
1000cd00:	00ef3574 	movhi	r3,48341
1000cd04:	18f54004 	addi	r3,r3,-11008
1000cd08:	016e2cb4 	movhi	r5,47282
1000cd0c:	296aaf04 	addi	r5,r5,-21828
1000cd10:	10c7883a 	add	r3,r2,r3
1000cd14:	1885803a 	cmpltu	r2,r3,r2
1000cd18:	2149883a 	add	r4,r4,r5
1000cd1c:	1105883a 	add	r2,r2,r4
1000cd20:	10000126 	beq	r2,zero,1000cd28 <__cxa_call_terminate+0x48>
1000cd24:	0008be00 	call	10008be0 <_ZSt9terminatev>
1000cd28:	18c000a8 	cmpgeui	r3,r3,2
1000cd2c:	183ffd1e 	bne	r3,zero,1000cd24 <__cxa_call_terminate+0x44>
1000cd30:	813ff817 	ldw	r4,-32(r16)
1000cd34:	0008b180 	call	10008b18 <_ZN10__cxxabiv111__terminateEPFvvE>

1000cd38 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
1000cd38:	008400b4 	movhi	r2,4098
1000cd3c:	1096e604 	addi	r2,r2,23448
1000cd40:	20800015 	stw	r2,0(r4)
1000cd44:	000d1e01 	jmpi	1000d1e0 <_ZN10__cxxabiv117__class_type_infoD1Ev>

1000cd48 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
1000cd48:	defffe04 	addi	sp,sp,-8
1000cd4c:	008400b4 	movhi	r2,4098
1000cd50:	dc000015 	stw	r16,0(sp)
1000cd54:	dfc00115 	stw	ra,4(sp)
1000cd58:	1096e604 	addi	r2,r2,23448
1000cd5c:	20800015 	stw	r2,0(r4)
1000cd60:	2021883a 	mov	r16,r4
1000cd64:	000d1e00 	call	1000d1e0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
1000cd68:	01400304 	movi	r5,12
1000cd6c:	8009883a 	mov	r4,r16
1000cd70:	dfc00117 	ldw	ra,4(sp)
1000cd74:	dc000017 	ldw	r16,0(sp)
1000cd78:	dec00204 	addi	sp,sp,8
1000cd7c:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000cd80 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
1000cd80:	defffa04 	addi	sp,sp,-24
1000cd84:	dc000215 	stw	r16,8(sp)
1000cd88:	dc000617 	ldw	r16,24(sp)
1000cd8c:	dc800415 	stw	r18,16(sp)
1000cd90:	dc400315 	stw	r17,12(sp)
1000cd94:	dfc00515 	stw	ra,20(sp)
1000cd98:	2023883a 	mov	r17,r4
1000cd9c:	2825883a 	mov	r18,r5
1000cda0:	81800b26 	beq	r16,r6,1000cdd0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
1000cda4:	89000217 	ldw	r4,8(r17)
1000cda8:	900b883a 	mov	r5,r18
1000cdac:	20800017 	ldw	r2,0(r4)
1000cdb0:	dc000615 	stw	r16,24(sp)
1000cdb4:	10800817 	ldw	r2,32(r2)
1000cdb8:	dfc00517 	ldw	ra,20(sp)
1000cdbc:	dc800417 	ldw	r18,16(sp)
1000cdc0:	dc400317 	ldw	r17,12(sp)
1000cdc4:	dc000217 	ldw	r16,8(sp)
1000cdc8:	dec00604 	addi	sp,sp,24
1000cdcc:	1000683a 	jmp	r2
1000cdd0:	21000117 	ldw	r4,4(r4)
1000cdd4:	39400117 	ldw	r5,4(r7)
1000cdd8:	21400926 	beq	r4,r5,1000ce00 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
1000cddc:	20800007 	ldb	r2,0(r4)
1000cde0:	10800aa0 	cmpeqi	r2,r2,42
1000cde4:	103fef1e 	bne	r2,zero,1000cda4 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000cde8:	d9c00115 	stw	r7,4(sp)
1000cdec:	d9800015 	stw	r6,0(sp)
1000cdf0:	00178180 	call	10017818 <strcmp>
1000cdf4:	d9800017 	ldw	r6,0(sp)
1000cdf8:	d9c00117 	ldw	r7,4(sp)
1000cdfc:	103fe91e 	bne	r2,zero,1000cda4 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000ce00:	00800184 	movi	r2,6
1000ce04:	dfc00517 	ldw	ra,20(sp)
1000ce08:	dc800417 	ldw	r18,16(sp)
1000ce0c:	dc400317 	ldw	r17,12(sp)
1000ce10:	dc000217 	ldw	r16,8(sp)
1000ce14:	dec00604 	addi	sp,sp,24
1000ce18:	f800283a 	ret

1000ce1c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
1000ce1c:	defff504 	addi	sp,sp,-44
1000ce20:	dc000215 	stw	r16,8(sp)
1000ce24:	38800117 	ldw	r2,4(r7)
1000ce28:	24000117 	ldw	r16,4(r4)
1000ce2c:	ddc00915 	stw	r23,36(sp)
1000ce30:	dd400715 	stw	r21,28(sp)
1000ce34:	dcc00515 	stw	r19,20(sp)
1000ce38:	dc800415 	stw	r18,16(sp)
1000ce3c:	dc400315 	stw	r17,12(sp)
1000ce40:	dfc00a15 	stw	ra,40(sp)
1000ce44:	dd800815 	stw	r22,32(sp)
1000ce48:	dd000615 	stw	r20,24(sp)
1000ce4c:	2827883a 	mov	r19,r5
1000ce50:	dc400b17 	ldw	r17,44(sp)
1000ce54:	ddc00c17 	ldw	r23,48(sp)
1000ce58:	dd400d17 	ldw	r21,52(sp)
1000ce5c:	dc800e17 	ldw	r18,56(sp)
1000ce60:	80802026 	beq	r16,r2,1000cee4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000ce64:	85800007 	ldb	r22,0(r16)
1000ce68:	2029883a 	mov	r20,r4
1000ce6c:	b0c00aa0 	cmpeqi	r3,r22,42
1000ce70:	1800081e 	bne	r3,zero,1000ce94 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
1000ce74:	100b883a 	mov	r5,r2
1000ce78:	8009883a 	mov	r4,r16
1000ce7c:	d9c00115 	stw	r7,4(sp)
1000ce80:	d9800015 	stw	r6,0(sp)
1000ce84:	00178180 	call	10017818 <strcmp>
1000ce88:	d9800017 	ldw	r6,0(sp)
1000ce8c:	d9c00117 	ldw	r7,4(sp)
1000ce90:	10001426 	beq	r2,zero,1000cee4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000ce94:	8d402926 	beq	r17,r21,1000cf3c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
1000ce98:	a1000217 	ldw	r4,8(r20)
1000ce9c:	980b883a 	mov	r5,r19
1000cea0:	20800017 	ldw	r2,0(r4)
1000cea4:	dc800e15 	stw	r18,56(sp)
1000cea8:	dd400d15 	stw	r21,52(sp)
1000ceac:	ddc00c15 	stw	r23,48(sp)
1000ceb0:	dc400b15 	stw	r17,44(sp)
1000ceb4:	10800717 	ldw	r2,28(r2)
1000ceb8:	dfc00a17 	ldw	ra,40(sp)
1000cebc:	ddc00917 	ldw	r23,36(sp)
1000cec0:	dd800817 	ldw	r22,32(sp)
1000cec4:	dd400717 	ldw	r21,28(sp)
1000cec8:	dd000617 	ldw	r20,24(sp)
1000cecc:	dcc00517 	ldw	r19,20(sp)
1000ced0:	dc800417 	ldw	r18,16(sp)
1000ced4:	dc400317 	ldw	r17,12(sp)
1000ced8:	dc000217 	ldw	r16,8(sp)
1000cedc:	dec00b04 	addi	sp,sp,44
1000cee0:	1000683a 	jmp	r2
1000cee4:	94400015 	stw	r17,0(r18)
1000cee8:	91800115 	stw	r6,4(r18)
1000ceec:	98001016 	blt	r19,zero,1000cf30 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x114>
1000cef0:	8ce3883a 	add	r17,r17,r19
1000cef4:	ac401e26 	beq	r21,r17,1000cf70 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
1000cef8:	00800044 	movi	r2,1
1000cefc:	90800315 	stw	r2,12(r18)
1000cf00:	0005883a 	mov	r2,zero
1000cf04:	dfc00a17 	ldw	ra,40(sp)
1000cf08:	ddc00917 	ldw	r23,36(sp)
1000cf0c:	dd800817 	ldw	r22,32(sp)
1000cf10:	dd400717 	ldw	r21,28(sp)
1000cf14:	dd000617 	ldw	r20,24(sp)
1000cf18:	dcc00517 	ldw	r19,20(sp)
1000cf1c:	dc800417 	ldw	r18,16(sp)
1000cf20:	dc400317 	ldw	r17,12(sp)
1000cf24:	dc000217 	ldw	r16,8(sp)
1000cf28:	dec00b04 	addi	sp,sp,44
1000cf2c:	f800283a 	ret
1000cf30:	9c7fff98 	cmpnei	r17,r19,-2
1000cf34:	883ff21e 	bne	r17,zero,1000cf00 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000cf38:	003fef06 	br	1000cef8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
1000cf3c:	b9400117 	ldw	r5,4(r23)
1000cf40:	81400926 	beq	r16,r5,1000cf68 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
1000cf44:	b5800aa0 	cmpeqi	r22,r22,42
1000cf48:	b03fd31e 	bne	r22,zero,1000ce98 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000cf4c:	8009883a 	mov	r4,r16
1000cf50:	d9c00115 	stw	r7,4(sp)
1000cf54:	d9800015 	stw	r6,0(sp)
1000cf58:	00178180 	call	10017818 <strcmp>
1000cf5c:	d9800017 	ldw	r6,0(sp)
1000cf60:	d9c00117 	ldw	r7,4(sp)
1000cf64:	103fcc1e 	bne	r2,zero,1000ce98 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000cf68:	91800215 	stw	r6,8(r18)
1000cf6c:	003fe406 	br	1000cf00 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000cf70:	00800184 	movi	r2,6
1000cf74:	003fe106 	br	1000cefc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe0>

1000cf78 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
1000cf78:	defffb04 	addi	sp,sp,-20
1000cf7c:	dcc00315 	stw	r19,12(sp)
1000cf80:	dc800215 	stw	r18,8(sp)
1000cf84:	dc400115 	stw	r17,4(sp)
1000cf88:	dc000015 	stw	r16,0(sp)
1000cf8c:	dfc00415 	stw	ra,16(sp)
1000cf90:	2027883a 	mov	r19,r4
1000cf94:	2821883a 	mov	r16,r5
1000cf98:	3023883a 	mov	r17,r6
1000cf9c:	3825883a 	mov	r18,r7
1000cfa0:	000d2f40 	call	1000d2f4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
1000cfa4:	10c03fcc 	andi	r3,r2,255
1000cfa8:	18000d1e 	bne	r3,zero,1000cfe0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
1000cfac:	99000217 	ldw	r4,8(r19)
1000cfb0:	900f883a 	mov	r7,r18
1000cfb4:	880d883a 	mov	r6,r17
1000cfb8:	20800017 	ldw	r2,0(r4)
1000cfbc:	800b883a 	mov	r5,r16
1000cfc0:	10800617 	ldw	r2,24(r2)
1000cfc4:	dfc00417 	ldw	ra,16(sp)
1000cfc8:	dcc00317 	ldw	r19,12(sp)
1000cfcc:	dc800217 	ldw	r18,8(sp)
1000cfd0:	dc400117 	ldw	r17,4(sp)
1000cfd4:	dc000017 	ldw	r16,0(sp)
1000cfd8:	dec00504 	addi	sp,sp,20
1000cfdc:	1000683a 	jmp	r2
1000cfe0:	dfc00417 	ldw	ra,16(sp)
1000cfe4:	dcc00317 	ldw	r19,12(sp)
1000cfe8:	dc800217 	ldw	r18,8(sp)
1000cfec:	dc400117 	ldw	r17,4(sp)
1000cff0:	dc000017 	ldw	r16,0(sp)
1000cff4:	dec00504 	addi	sp,sp,20
1000cff8:	f800283a 	ret

1000cffc <__cxa_get_globals_fast>:
1000cffc:	008400f4 	movhi	r2,4099
1000d000:	10a95804 	addi	r2,r2,-23200
1000d004:	f800283a 	ret

1000d008 <__cxa_get_globals>:
1000d008:	008400f4 	movhi	r2,4099
1000d00c:	10a95804 	addi	r2,r2,-23200
1000d010:	f800283a 	ret

1000d014 <_ZNSt9exceptionD1Ev>:
1000d014:	f800283a 	ret

1000d018 <_ZNSt13bad_exceptionD1Ev>:
1000d018:	f800283a 	ret

1000d01c <_ZGTtNKSt9exception4whatEv>:
1000d01c:	008400b4 	movhi	r2,4098
1000d020:	1096ef04 	addi	r2,r2,23484
1000d024:	f800283a 	ret

1000d028 <_ZGTtNKSt13bad_exception4whatEv>:
1000d028:	008400b4 	movhi	r2,4098
1000d02c:	1096f304 	addi	r2,r2,23500
1000d030:	f800283a 	ret

1000d034 <_ZNSt9exceptionD0Ev>:
1000d034:	01400104 	movi	r5,4
1000d038:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d03c <_ZNSt13bad_exceptionD0Ev>:
1000d03c:	01400104 	movi	r5,4
1000d040:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d044 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
1000d044:	f800283a 	ret

1000d048 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
1000d048:	01400104 	movi	r5,4
1000d04c:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d050 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
1000d050:	f800283a 	ret

1000d054 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
1000d054:	01400104 	movi	r5,4
1000d058:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d05c <_ZGTtNKSt9exceptionD1Ev>:
1000d05c:	f800283a 	ret

1000d060 <_ZGTtNKSt13bad_exceptionD1Ev>:
1000d060:	f800283a 	ret

1000d064 <__cxa_pure_virtual>:
1000d064:	014400b4 	movhi	r5,4098
1000d068:	deffff04 	addi	sp,sp,-4
1000d06c:	018006c4 	movi	r6,27
1000d070:	29572904 	addi	r5,r5,23716
1000d074:	01000084 	movi	r4,2
1000d078:	dfc00015 	stw	ra,0(sp)
1000d07c:	00231f40 	call	100231f4 <write>
1000d080:	0008be00 	call	10008be0 <_ZSt9terminatev>

1000d084 <__cxa_deleted_virtual>:
1000d084:	014400b4 	movhi	r5,4098
1000d088:	deffff04 	addi	sp,sp,-4
1000d08c:	01800784 	movi	r6,30
1000d090:	29573004 	addi	r5,r5,23744
1000d094:	01000084 	movi	r4,2
1000d098:	dfc00015 	stw	ra,0(sp)
1000d09c:	00231f40 	call	100231f4 <write>
1000d0a0:	0008be00 	call	10008be0 <_ZSt9terminatev>

1000d0a4 <_ZdlPvj>:
1000d0a4:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d0a8 <_ZNKSt8bad_cast4whatEv>:
1000d0a8:	008400b4 	movhi	r2,4098
1000d0ac:	10973804 	addi	r2,r2,23776
1000d0b0:	f800283a 	ret

1000d0b4 <_ZNSt8bad_castD1Ev>:
1000d0b4:	008400b4 	movhi	r2,4098
1000d0b8:	10974404 	addi	r2,r2,23824
1000d0bc:	20800015 	stw	r2,0(r4)
1000d0c0:	000d0141 	jmpi	1000d014 <_ZNSt9exceptionD1Ev>

1000d0c4 <_ZNSt8bad_castD0Ev>:
1000d0c4:	defffe04 	addi	sp,sp,-8
1000d0c8:	008400b4 	movhi	r2,4098
1000d0cc:	dc000015 	stw	r16,0(sp)
1000d0d0:	dfc00115 	stw	ra,4(sp)
1000d0d4:	10974404 	addi	r2,r2,23824
1000d0d8:	20800015 	stw	r2,0(r4)
1000d0dc:	2021883a 	mov	r16,r4
1000d0e0:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d0e4:	01400104 	movi	r5,4
1000d0e8:	8009883a 	mov	r4,r16
1000d0ec:	dfc00117 	ldw	ra,4(sp)
1000d0f0:	dc000017 	ldw	r16,0(sp)
1000d0f4:	dec00204 	addi	sp,sp,8
1000d0f8:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d0fc <_ZNKSt10bad_typeid4whatEv>:
1000d0fc:	008400b4 	movhi	r2,4098
1000d100:	10974704 	addi	r2,r2,23836
1000d104:	f800283a 	ret

1000d108 <_ZNSt10bad_typeidD1Ev>:
1000d108:	008400b4 	movhi	r2,4098
1000d10c:	10975404 	addi	r2,r2,23888
1000d110:	20800015 	stw	r2,0(r4)
1000d114:	000d0141 	jmpi	1000d014 <_ZNSt9exceptionD1Ev>

1000d118 <_ZNSt10bad_typeidD0Ev>:
1000d118:	defffe04 	addi	sp,sp,-8
1000d11c:	008400b4 	movhi	r2,4098
1000d120:	dc000015 	stw	r16,0(sp)
1000d124:	dfc00115 	stw	ra,4(sp)
1000d128:	10975404 	addi	r2,r2,23888
1000d12c:	20800015 	stw	r2,0(r4)
1000d130:	2021883a 	mov	r16,r4
1000d134:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d138:	01400104 	movi	r5,4
1000d13c:	8009883a 	mov	r4,r16
1000d140:	dfc00117 	ldw	ra,4(sp)
1000d144:	dc000017 	ldw	r16,0(sp)
1000d148:	dec00204 	addi	sp,sp,8
1000d14c:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d150 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
1000d150:	20800017 	ldw	r2,0(r4)
1000d154:	defffa04 	addi	sp,sp,-24
1000d158:	dc000415 	stw	r16,16(sp)
1000d15c:	10800617 	ldw	r2,24(r2)
1000d160:	3021883a 	mov	r16,r6
1000d164:	31800017 	ldw	r6,0(r6)
1000d168:	00c00404 	movi	r3,16
1000d16c:	dfc00515 	stw	ra,20(sp)
1000d170:	d8000015 	stw	zero,0(sp)
1000d174:	d8000115 	stw	zero,4(sp)
1000d178:	d8c00215 	stw	r3,8(sp)
1000d17c:	d8000315 	stw	zero,12(sp)
1000d180:	d80f883a 	mov	r7,sp
1000d184:	103ee83a 	callr	r2
1000d188:	d8800117 	ldw	r2,4(sp)
1000d18c:	1080018c 	andi	r2,r2,6
1000d190:	10800198 	cmpnei	r2,r2,6
1000d194:	1000071e 	bne	r2,zero,1000d1b4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
1000d198:	d8c00017 	ldw	r3,0(sp)
1000d19c:	00800044 	movi	r2,1
1000d1a0:	80c00015 	stw	r3,0(r16)
1000d1a4:	dfc00517 	ldw	ra,20(sp)
1000d1a8:	dc000417 	ldw	r16,16(sp)
1000d1ac:	dec00604 	addi	sp,sp,24
1000d1b0:	f800283a 	ret
1000d1b4:	0005883a 	mov	r2,zero
1000d1b8:	dfc00517 	ldw	ra,20(sp)
1000d1bc:	dc000417 	ldw	r16,16(sp)
1000d1c0:	dec00604 	addi	sp,sp,24
1000d1c4:	f800283a 	ret

1000d1c8 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
1000d1c8:	d8c00017 	ldw	r3,0(sp)
1000d1cc:	00800044 	movi	r2,1
1000d1d0:	19800126 	beq	r3,r6,1000d1d8 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
1000d1d4:	f800283a 	ret
1000d1d8:	00800184 	movi	r2,6
1000d1dc:	f800283a 	ret

1000d1e0 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
1000d1e0:	008400b4 	movhi	r2,4098
1000d1e4:	10976504 	addi	r2,r2,23956
1000d1e8:	20800015 	stw	r2,0(r4)
1000d1ec:	000d4181 	jmpi	1000d418 <_ZNSt9type_infoD1Ev>

1000d1f0 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
1000d1f0:	defffe04 	addi	sp,sp,-8
1000d1f4:	008400b4 	movhi	r2,4098
1000d1f8:	dc000015 	stw	r16,0(sp)
1000d1fc:	dfc00115 	stw	ra,4(sp)
1000d200:	10976504 	addi	r2,r2,23956
1000d204:	20800015 	stw	r2,0(r4)
1000d208:	2021883a 	mov	r16,r4
1000d20c:	000d4180 	call	1000d418 <_ZNSt9type_infoD1Ev>
1000d210:	01400204 	movi	r5,8
1000d214:	8009883a 	mov	r4,r16
1000d218:	dfc00117 	ldw	ra,4(sp)
1000d21c:	dc000017 	ldw	r16,0(sp)
1000d220:	dec00204 	addi	sp,sp,8
1000d224:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d228 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
1000d228:	defffa04 	addi	sp,sp,-24
1000d22c:	dc800315 	stw	r18,12(sp)
1000d230:	d8800817 	ldw	r2,32(sp)
1000d234:	dc800617 	ldw	r18,24(sp)
1000d238:	dcc00415 	stw	r19,16(sp)
1000d23c:	dc400215 	stw	r17,8(sp)
1000d240:	dc000115 	stw	r16,4(sp)
1000d244:	dfc00515 	stw	ra,20(sp)
1000d248:	3027883a 	mov	r19,r6
1000d24c:	dc400917 	ldw	r17,36(sp)
1000d250:	24000117 	ldw	r16,4(r4)
1000d254:	90801426 	beq	r18,r2,1000d2a8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x80>
1000d258:	39400117 	ldw	r5,4(r7)
1000d25c:	2c000626 	beq	r5,r16,1000d278 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000d260:	80800007 	ldb	r2,0(r16)
1000d264:	10800aa0 	cmpeqi	r2,r2,42
1000d268:	1000071e 	bne	r2,zero,1000d288 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000d26c:	8009883a 	mov	r4,r16
1000d270:	00178180 	call	10017818 <strcmp>
1000d274:	1000041e 	bne	r2,zero,1000d288 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000d278:	00800044 	movi	r2,1
1000d27c:	8c800015 	stw	r18,0(r17)
1000d280:	8cc00115 	stw	r19,4(r17)
1000d284:	88800315 	stw	r2,12(r17)
1000d288:	0005883a 	mov	r2,zero
1000d28c:	dfc00517 	ldw	ra,20(sp)
1000d290:	dcc00417 	ldw	r19,16(sp)
1000d294:	dc800317 	ldw	r18,12(sp)
1000d298:	dc400217 	ldw	r17,8(sp)
1000d29c:	dc000117 	ldw	r16,4(sp)
1000d2a0:	dec00604 	addi	sp,sp,24
1000d2a4:	f800283a 	ret
1000d2a8:	d8800717 	ldw	r2,28(sp)
1000d2ac:	11400117 	ldw	r5,4(r2)
1000d2b0:	2c000e26 	beq	r5,r16,1000d2ec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000d2b4:	80800007 	ldb	r2,0(r16)
1000d2b8:	10800aa0 	cmpeqi	r2,r2,42
1000d2bc:	1000081e 	bne	r2,zero,1000d2e0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
1000d2c0:	8009883a 	mov	r4,r16
1000d2c4:	d9c00015 	stw	r7,0(sp)
1000d2c8:	00178180 	call	10017818 <strcmp>
1000d2cc:	10000726 	beq	r2,zero,1000d2ec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000d2d0:	d9c00017 	ldw	r7,0(sp)
1000d2d4:	39400117 	ldw	r5,4(r7)
1000d2d8:	817fe41e 	bne	r16,r5,1000d26c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x44>
1000d2dc:	003fe606 	br	1000d278 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000d2e0:	38800117 	ldw	r2,4(r7)
1000d2e4:	143fe81e 	bne	r2,r16,1000d288 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000d2e8:	003fe306 	br	1000d278 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000d2ec:	8cc00215 	stw	r19,8(r17)
1000d2f0:	003fe506 	br	1000d288 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>

1000d2f4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
1000d2f4:	21000117 	ldw	r4,4(r4)
1000d2f8:	29400117 	ldw	r5,4(r5)
1000d2fc:	defffd04 	addi	sp,sp,-12
1000d300:	dfc00215 	stw	ra,8(sp)
1000d304:	21400d26 	beq	r4,r5,1000d33c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000d308:	20800007 	ldb	r2,0(r4)
1000d30c:	d9c00115 	stw	r7,4(sp)
1000d310:	d9800015 	stw	r6,0(sp)
1000d314:	10800aa0 	cmpeqi	r2,r2,42
1000d318:	1000041e 	bne	r2,zero,1000d32c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
1000d31c:	00178180 	call	10017818 <strcmp>
1000d320:	d9800017 	ldw	r6,0(sp)
1000d324:	d9c00117 	ldw	r7,4(sp)
1000d328:	10000426 	beq	r2,zero,1000d33c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000d32c:	0005883a 	mov	r2,zero
1000d330:	dfc00217 	ldw	ra,8(sp)
1000d334:	dec00304 	addi	sp,sp,12
1000d338:	f800283a 	ret
1000d33c:	00800204 	movi	r2,8
1000d340:	38800315 	stw	r2,12(r7)
1000d344:	00800184 	movi	r2,6
1000d348:	38800115 	stw	r2,4(r7)
1000d34c:	00800044 	movi	r2,1
1000d350:	39800015 	stw	r6,0(r7)
1000d354:	dfc00217 	ldw	ra,8(sp)
1000d358:	dec00304 	addi	sp,sp,12
1000d35c:	f800283a 	ret

1000d360 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
1000d360:	20800117 	ldw	r2,4(r4)
1000d364:	2a000117 	ldw	r8,4(r5)
1000d368:	12002726 	beq	r2,r8,1000d408 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xa8>
1000d36c:	defffb04 	addi	sp,sp,-20
1000d370:	dcc00315 	stw	r19,12(sp)
1000d374:	dc800215 	stw	r18,8(sp)
1000d378:	dc400115 	stw	r17,4(sp)
1000d37c:	dc000015 	stw	r16,0(sp)
1000d380:	dfc00415 	stw	ra,16(sp)
1000d384:	10c00007 	ldb	r3,0(r2)
1000d388:	3823883a 	mov	r17,r7
1000d38c:	3027883a 	mov	r19,r6
1000d390:	18c00aa0 	cmpeqi	r3,r3,42
1000d394:	2821883a 	mov	r16,r5
1000d398:	2025883a 	mov	r18,r4
1000d39c:	18000c1e 	bne	r3,zero,1000d3d0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000d3a0:	400b883a 	mov	r5,r8
1000d3a4:	1009883a 	mov	r4,r2
1000d3a8:	00178180 	call	10017818 <strcmp>
1000d3ac:	1000081e 	bne	r2,zero,1000d3d0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000d3b0:	00800044 	movi	r2,1
1000d3b4:	dfc00417 	ldw	ra,16(sp)
1000d3b8:	dcc00317 	ldw	r19,12(sp)
1000d3bc:	dc800217 	ldw	r18,8(sp)
1000d3c0:	dc400117 	ldw	r17,4(sp)
1000d3c4:	dc000017 	ldw	r16,0(sp)
1000d3c8:	dec00504 	addi	sp,sp,20
1000d3cc:	f800283a 	ret
1000d3d0:	89c00128 	cmpgeui	r7,r17,4
1000d3d4:	38000e1e 	bne	r7,zero,1000d410 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
1000d3d8:	80800017 	ldw	r2,0(r16)
1000d3dc:	980d883a 	mov	r6,r19
1000d3e0:	900b883a 	mov	r5,r18
1000d3e4:	10800517 	ldw	r2,20(r2)
1000d3e8:	8009883a 	mov	r4,r16
1000d3ec:	dfc00417 	ldw	ra,16(sp)
1000d3f0:	dcc00317 	ldw	r19,12(sp)
1000d3f4:	dc800217 	ldw	r18,8(sp)
1000d3f8:	dc400117 	ldw	r17,4(sp)
1000d3fc:	dc000017 	ldw	r16,0(sp)
1000d400:	dec00504 	addi	sp,sp,20
1000d404:	1000683a 	jmp	r2
1000d408:	00800044 	movi	r2,1
1000d40c:	f800283a 	ret
1000d410:	0005883a 	mov	r2,zero
1000d414:	003fe706 	br	1000d3b4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x54>

1000d418 <_ZNSt9type_infoD1Ev>:
1000d418:	f800283a 	ret

1000d41c <_ZNKSt9type_info14__is_pointer_pEv>:
1000d41c:	0005883a 	mov	r2,zero
1000d420:	f800283a 	ret

1000d424 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
1000d424:	0005883a 	mov	r2,zero
1000d428:	f800283a 	ret

1000d42c <_ZNSt9type_infoD0Ev>:
1000d42c:	01400204 	movi	r5,8
1000d430:	000d0a41 	jmpi	1000d0a4 <_ZdlPvj>

1000d434 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
1000d434:	21000117 	ldw	r4,4(r4)
1000d438:	29400117 	ldw	r5,4(r5)
1000d43c:	21400c26 	beq	r4,r5,1000d470 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
1000d440:	20800007 	ldb	r2,0(r4)
1000d444:	10800aa0 	cmpeqi	r2,r2,42
1000d448:	1000071e 	bne	r2,zero,1000d468 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
1000d44c:	deffff04 	addi	sp,sp,-4
1000d450:	dfc00015 	stw	ra,0(sp)
1000d454:	00178180 	call	10017818 <strcmp>
1000d458:	1005003a 	cmpeq	r2,r2,zero
1000d45c:	dfc00017 	ldw	ra,0(sp)
1000d460:	dec00104 	addi	sp,sp,4
1000d464:	f800283a 	ret
1000d468:	0005883a 	mov	r2,zero
1000d46c:	f800283a 	ret
1000d470:	00800044 	movi	r2,1
1000d474:	f800283a 	ret

1000d478 <_ZNKSt11logic_error4whatEv>:
1000d478:	20800117 	ldw	r2,4(r4)
1000d47c:	f800283a 	ret

1000d480 <_ZNKSt13runtime_error4whatEv>:
1000d480:	20800117 	ldw	r2,4(r4)
1000d484:	f800283a 	ret

1000d488 <_ZNSt11logic_errorD1Ev>:
1000d488:	21400117 	ldw	r5,4(r4)
1000d48c:	defffd04 	addi	sp,sp,-12
1000d490:	00c400b4 	movhi	r3,4098
1000d494:	dc000115 	stw	r16,4(sp)
1000d498:	dfc00215 	stw	ra,8(sp)
1000d49c:	18d7c304 	addi	r3,r3,24332
1000d4a0:	008400f4 	movhi	r2,4099
1000d4a4:	2021883a 	mov	r16,r4
1000d4a8:	20c00015 	stw	r3,0(r4)
1000d4ac:	10a9aa04 	addi	r2,r2,-22872
1000d4b0:	293ffd04 	addi	r4,r5,-12
1000d4b4:	2080061e 	bne	r4,r2,1000d4d0 <_ZNSt11logic_errorD1Ev+0x48>
1000d4b8:	8009883a 	mov	r4,r16
1000d4bc:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d4c0:	dfc00217 	ldw	ra,8(sp)
1000d4c4:	dc000117 	ldw	r16,4(sp)
1000d4c8:	dec00304 	addi	sp,sp,12
1000d4cc:	f800283a 	ret
1000d4d0:	28bfff17 	ldw	r2,-4(r5)
1000d4d4:	10ffffc4 	addi	r3,r2,-1
1000d4d8:	28ffff15 	stw	r3,-4(r5)
1000d4dc:	00bff616 	blt	zero,r2,1000d4b8 <_ZNSt11logic_errorD1Ev+0x30>
1000d4e0:	d94000c4 	addi	r5,sp,3
1000d4e4:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000d4e8:	003ff306 	br	1000d4b8 <_ZNSt11logic_errorD1Ev+0x30>

1000d4ec <_ZNSt11logic_errorD0Ev>:
1000d4ec:	defffe04 	addi	sp,sp,-8
1000d4f0:	dc000015 	stw	r16,0(sp)
1000d4f4:	dfc00115 	stw	ra,4(sp)
1000d4f8:	2021883a 	mov	r16,r4
1000d4fc:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000d500:	8009883a 	mov	r4,r16
1000d504:	dfc00117 	ldw	ra,4(sp)
1000d508:	dc000017 	ldw	r16,0(sp)
1000d50c:	dec00204 	addi	sp,sp,8
1000d510:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d514 <_ZNSt12domain_errorD1Ev>:
1000d514:	008400b4 	movhi	r2,4098
1000d518:	1097c804 	addi	r2,r2,24352
1000d51c:	20800015 	stw	r2,0(r4)
1000d520:	000d4881 	jmpi	1000d488 <_ZNSt11logic_errorD1Ev>

1000d524 <_ZNSt12domain_errorD0Ev>:
1000d524:	defffe04 	addi	sp,sp,-8
1000d528:	008400b4 	movhi	r2,4098
1000d52c:	dc000015 	stw	r16,0(sp)
1000d530:	dfc00115 	stw	ra,4(sp)
1000d534:	1097c804 	addi	r2,r2,24352
1000d538:	20800015 	stw	r2,0(r4)
1000d53c:	2021883a 	mov	r16,r4
1000d540:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000d544:	8009883a 	mov	r4,r16
1000d548:	dfc00117 	ldw	ra,4(sp)
1000d54c:	dc000017 	ldw	r16,0(sp)
1000d550:	dec00204 	addi	sp,sp,8
1000d554:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d558 <_ZNSt16invalid_argumentD1Ev>:
1000d558:	008400b4 	movhi	r2,4098
1000d55c:	1097cd04 	addi	r2,r2,24372
1000d560:	20800015 	stw	r2,0(r4)
1000d564:	000d4881 	jmpi	1000d488 <_ZNSt11logic_errorD1Ev>

1000d568 <_ZNSt16invalid_argumentD0Ev>:
1000d568:	defffe04 	addi	sp,sp,-8
1000d56c:	008400b4 	movhi	r2,4098
1000d570:	dc000015 	stw	r16,0(sp)
1000d574:	dfc00115 	stw	ra,4(sp)
1000d578:	1097cd04 	addi	r2,r2,24372
1000d57c:	20800015 	stw	r2,0(r4)
1000d580:	2021883a 	mov	r16,r4
1000d584:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000d588:	8009883a 	mov	r4,r16
1000d58c:	dfc00117 	ldw	ra,4(sp)
1000d590:	dc000017 	ldw	r16,0(sp)
1000d594:	dec00204 	addi	sp,sp,8
1000d598:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d59c <_ZNSt12length_errorD1Ev>:
1000d59c:	008400b4 	movhi	r2,4098
1000d5a0:	1097d204 	addi	r2,r2,24392
1000d5a4:	20800015 	stw	r2,0(r4)
1000d5a8:	000d4881 	jmpi	1000d488 <_ZNSt11logic_errorD1Ev>

1000d5ac <_ZNSt12length_errorD0Ev>:
1000d5ac:	defffe04 	addi	sp,sp,-8
1000d5b0:	008400b4 	movhi	r2,4098
1000d5b4:	dc000015 	stw	r16,0(sp)
1000d5b8:	dfc00115 	stw	ra,4(sp)
1000d5bc:	1097d204 	addi	r2,r2,24392
1000d5c0:	20800015 	stw	r2,0(r4)
1000d5c4:	2021883a 	mov	r16,r4
1000d5c8:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000d5cc:	8009883a 	mov	r4,r16
1000d5d0:	dfc00117 	ldw	ra,4(sp)
1000d5d4:	dc000017 	ldw	r16,0(sp)
1000d5d8:	dec00204 	addi	sp,sp,8
1000d5dc:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d5e0 <_ZNSt12out_of_rangeD1Ev>:
1000d5e0:	008400b4 	movhi	r2,4098
1000d5e4:	1097d704 	addi	r2,r2,24412
1000d5e8:	20800015 	stw	r2,0(r4)
1000d5ec:	000d4881 	jmpi	1000d488 <_ZNSt11logic_errorD1Ev>

1000d5f0 <_ZNSt12out_of_rangeD0Ev>:
1000d5f0:	defffe04 	addi	sp,sp,-8
1000d5f4:	008400b4 	movhi	r2,4098
1000d5f8:	dc000015 	stw	r16,0(sp)
1000d5fc:	dfc00115 	stw	ra,4(sp)
1000d600:	1097d704 	addi	r2,r2,24412
1000d604:	20800015 	stw	r2,0(r4)
1000d608:	2021883a 	mov	r16,r4
1000d60c:	000d4880 	call	1000d488 <_ZNSt11logic_errorD1Ev>
1000d610:	8009883a 	mov	r4,r16
1000d614:	dfc00117 	ldw	ra,4(sp)
1000d618:	dc000017 	ldw	r16,0(sp)
1000d61c:	dec00204 	addi	sp,sp,8
1000d620:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d624 <_ZNSt13runtime_errorD1Ev>:
1000d624:	21400117 	ldw	r5,4(r4)
1000d628:	defffd04 	addi	sp,sp,-12
1000d62c:	00c400b4 	movhi	r3,4098
1000d630:	dc000115 	stw	r16,4(sp)
1000d634:	dfc00215 	stw	ra,8(sp)
1000d638:	18d7dc04 	addi	r3,r3,24432
1000d63c:	008400f4 	movhi	r2,4099
1000d640:	2021883a 	mov	r16,r4
1000d644:	20c00015 	stw	r3,0(r4)
1000d648:	10a9aa04 	addi	r2,r2,-22872
1000d64c:	293ffd04 	addi	r4,r5,-12
1000d650:	2080061e 	bne	r4,r2,1000d66c <_ZNSt13runtime_errorD1Ev+0x48>
1000d654:	8009883a 	mov	r4,r16
1000d658:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d65c:	dfc00217 	ldw	ra,8(sp)
1000d660:	dc000117 	ldw	r16,4(sp)
1000d664:	dec00304 	addi	sp,sp,12
1000d668:	f800283a 	ret
1000d66c:	28bfff17 	ldw	r2,-4(r5)
1000d670:	10ffffc4 	addi	r3,r2,-1
1000d674:	28ffff15 	stw	r3,-4(r5)
1000d678:	00bff616 	blt	zero,r2,1000d654 <_ZNSt13runtime_errorD1Ev+0x30>
1000d67c:	d94000c4 	addi	r5,sp,3
1000d680:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000d684:	003ff306 	br	1000d654 <_ZNSt13runtime_errorD1Ev+0x30>

1000d688 <_ZNSt13runtime_errorD0Ev>:
1000d688:	defffe04 	addi	sp,sp,-8
1000d68c:	dc000015 	stw	r16,0(sp)
1000d690:	dfc00115 	stw	ra,4(sp)
1000d694:	2021883a 	mov	r16,r4
1000d698:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000d69c:	8009883a 	mov	r4,r16
1000d6a0:	dfc00117 	ldw	ra,4(sp)
1000d6a4:	dc000017 	ldw	r16,0(sp)
1000d6a8:	dec00204 	addi	sp,sp,8
1000d6ac:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d6b0 <_ZNSt11range_errorD1Ev>:
1000d6b0:	008400b4 	movhi	r2,4098
1000d6b4:	1097e104 	addi	r2,r2,24452
1000d6b8:	20800015 	stw	r2,0(r4)
1000d6bc:	000d6241 	jmpi	1000d624 <_ZNSt13runtime_errorD1Ev>

1000d6c0 <_ZNSt11range_errorD0Ev>:
1000d6c0:	defffe04 	addi	sp,sp,-8
1000d6c4:	008400b4 	movhi	r2,4098
1000d6c8:	dc000015 	stw	r16,0(sp)
1000d6cc:	dfc00115 	stw	ra,4(sp)
1000d6d0:	1097e104 	addi	r2,r2,24452
1000d6d4:	20800015 	stw	r2,0(r4)
1000d6d8:	2021883a 	mov	r16,r4
1000d6dc:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000d6e0:	8009883a 	mov	r4,r16
1000d6e4:	dfc00117 	ldw	ra,4(sp)
1000d6e8:	dc000017 	ldw	r16,0(sp)
1000d6ec:	dec00204 	addi	sp,sp,8
1000d6f0:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d6f4 <_ZNSt14overflow_errorD1Ev>:
1000d6f4:	008400b4 	movhi	r2,4098
1000d6f8:	1097e604 	addi	r2,r2,24472
1000d6fc:	20800015 	stw	r2,0(r4)
1000d700:	000d6241 	jmpi	1000d624 <_ZNSt13runtime_errorD1Ev>

1000d704 <_ZNSt14overflow_errorD0Ev>:
1000d704:	defffe04 	addi	sp,sp,-8
1000d708:	008400b4 	movhi	r2,4098
1000d70c:	dc000015 	stw	r16,0(sp)
1000d710:	dfc00115 	stw	ra,4(sp)
1000d714:	1097e604 	addi	r2,r2,24472
1000d718:	20800015 	stw	r2,0(r4)
1000d71c:	2021883a 	mov	r16,r4
1000d720:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000d724:	8009883a 	mov	r4,r16
1000d728:	dfc00117 	ldw	ra,4(sp)
1000d72c:	dc000017 	ldw	r16,0(sp)
1000d730:	dec00204 	addi	sp,sp,8
1000d734:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d738 <_ZNSt15underflow_errorD1Ev>:
1000d738:	008400b4 	movhi	r2,4098
1000d73c:	1097eb04 	addi	r2,r2,24492
1000d740:	20800015 	stw	r2,0(r4)
1000d744:	000d6241 	jmpi	1000d624 <_ZNSt13runtime_errorD1Ev>

1000d748 <_ZNSt15underflow_errorD0Ev>:
1000d748:	defffe04 	addi	sp,sp,-8
1000d74c:	008400b4 	movhi	r2,4098
1000d750:	dc000015 	stw	r16,0(sp)
1000d754:	dfc00115 	stw	ra,4(sp)
1000d758:	1097eb04 	addi	r2,r2,24492
1000d75c:	20800015 	stw	r2,0(r4)
1000d760:	2021883a 	mov	r16,r4
1000d764:	000d6240 	call	1000d624 <_ZNSt13runtime_errorD1Ev>
1000d768:	8009883a 	mov	r4,r16
1000d76c:	dfc00117 	ldw	ra,4(sp)
1000d770:	dc000017 	ldw	r16,0(sp)
1000d774:	dec00204 	addi	sp,sp,8
1000d778:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000d77c <_ZNSt11logic_errorC1ERKSs>:
1000d77c:	01840074 	movhi	r6,4097
1000d780:	deffef04 	addi	sp,sp,-68
1000d784:	31a4f504 	addi	r6,r6,-27692
1000d788:	00c400b4 	movhi	r3,4098
1000d78c:	00840074 	movhi	r2,4097
1000d790:	18d3a404 	addi	r3,r3,20112
1000d794:	10b60104 	addi	r2,r2,-10236
1000d798:	d9000015 	stw	r4,0(sp)
1000d79c:	d9800815 	stw	r6,32(sp)
1000d7a0:	d9000204 	addi	r4,sp,8
1000d7a4:	d9800f04 	addi	r6,sp,60
1000d7a8:	d8c00915 	stw	r3,36(sp)
1000d7ac:	d8800b15 	stw	r2,44(sp)
1000d7b0:	d9400115 	stw	r5,4(sp)
1000d7b4:	dfc01015 	stw	ra,64(sp)
1000d7b8:	df000f15 	stw	fp,60(sp)
1000d7bc:	d9800a15 	stw	r6,40(sp)
1000d7c0:	dec00c15 	stw	sp,48(sp)
1000d7c4:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000d7c8:	d8c00017 	ldw	r3,0(sp)
1000d7cc:	008400b4 	movhi	r2,4098
1000d7d0:	d9400117 	ldw	r5,4(sp)
1000d7d4:	1097c304 	addi	r2,r2,24332
1000d7d8:	18800015 	stw	r2,0(r3)
1000d7dc:	19000104 	addi	r4,r3,4
1000d7e0:	00800044 	movi	r2,1
1000d7e4:	d8800315 	stw	r2,12(sp)
1000d7e8:	00104340 	call	10010434 <_ZNSsC1ERKSs>
1000d7ec:	d9000204 	addi	r4,sp,8
1000d7f0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000d7f4:	dfc01017 	ldw	ra,64(sp)
1000d7f8:	df000f17 	ldw	fp,60(sp)
1000d7fc:	dec01104 	addi	sp,sp,68
1000d800:	f800283a 	ret
1000d804:	d8800417 	ldw	r2,16(sp)
1000d808:	d9000017 	ldw	r4,0(sp)
1000d80c:	d8800115 	stw	r2,4(sp)
1000d810:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d814:	d9000117 	ldw	r4,4(sp)
1000d818:	00bfffc4 	movi	r2,-1
1000d81c:	d8800315 	stw	r2,12(sp)
1000d820:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000d824 <_ZNSt12domain_errorC1ERKSs>:
1000d824:	defffe04 	addi	sp,sp,-8
1000d828:	dc000015 	stw	r16,0(sp)
1000d82c:	dfc00115 	stw	ra,4(sp)
1000d830:	2021883a 	mov	r16,r4
1000d834:	000d77c0 	call	1000d77c <_ZNSt11logic_errorC1ERKSs>
1000d838:	008400b4 	movhi	r2,4098
1000d83c:	1097c804 	addi	r2,r2,24352
1000d840:	80800015 	stw	r2,0(r16)
1000d844:	dfc00117 	ldw	ra,4(sp)
1000d848:	dc000017 	ldw	r16,0(sp)
1000d84c:	dec00204 	addi	sp,sp,8
1000d850:	f800283a 	ret

1000d854 <_ZNSt16invalid_argumentC1ERKSs>:
1000d854:	defffe04 	addi	sp,sp,-8
1000d858:	dc000015 	stw	r16,0(sp)
1000d85c:	dfc00115 	stw	ra,4(sp)
1000d860:	2021883a 	mov	r16,r4
1000d864:	000d77c0 	call	1000d77c <_ZNSt11logic_errorC1ERKSs>
1000d868:	008400b4 	movhi	r2,4098
1000d86c:	1097cd04 	addi	r2,r2,24372
1000d870:	80800015 	stw	r2,0(r16)
1000d874:	dfc00117 	ldw	ra,4(sp)
1000d878:	dc000017 	ldw	r16,0(sp)
1000d87c:	dec00204 	addi	sp,sp,8
1000d880:	f800283a 	ret

1000d884 <_ZNSt12length_errorC1ERKSs>:
1000d884:	defffe04 	addi	sp,sp,-8
1000d888:	dc000015 	stw	r16,0(sp)
1000d88c:	dfc00115 	stw	ra,4(sp)
1000d890:	2021883a 	mov	r16,r4
1000d894:	000d77c0 	call	1000d77c <_ZNSt11logic_errorC1ERKSs>
1000d898:	008400b4 	movhi	r2,4098
1000d89c:	1097d204 	addi	r2,r2,24392
1000d8a0:	80800015 	stw	r2,0(r16)
1000d8a4:	dfc00117 	ldw	ra,4(sp)
1000d8a8:	dc000017 	ldw	r16,0(sp)
1000d8ac:	dec00204 	addi	sp,sp,8
1000d8b0:	f800283a 	ret

1000d8b4 <_ZNSt12out_of_rangeC1ERKSs>:
1000d8b4:	defffe04 	addi	sp,sp,-8
1000d8b8:	dc000015 	stw	r16,0(sp)
1000d8bc:	dfc00115 	stw	ra,4(sp)
1000d8c0:	2021883a 	mov	r16,r4
1000d8c4:	000d77c0 	call	1000d77c <_ZNSt11logic_errorC1ERKSs>
1000d8c8:	008400b4 	movhi	r2,4098
1000d8cc:	1097d704 	addi	r2,r2,24412
1000d8d0:	80800015 	stw	r2,0(r16)
1000d8d4:	dfc00117 	ldw	ra,4(sp)
1000d8d8:	dc000017 	ldw	r16,0(sp)
1000d8dc:	dec00204 	addi	sp,sp,8
1000d8e0:	f800283a 	ret

1000d8e4 <_ZNSt13runtime_errorC1ERKSs>:
1000d8e4:	01840074 	movhi	r6,4097
1000d8e8:	deffef04 	addi	sp,sp,-68
1000d8ec:	31a4f504 	addi	r6,r6,-27692
1000d8f0:	00c400b4 	movhi	r3,4098
1000d8f4:	00840074 	movhi	r2,4097
1000d8f8:	18d3a584 	addi	r3,r3,20118
1000d8fc:	10b65b04 	addi	r2,r2,-9876
1000d900:	d9000015 	stw	r4,0(sp)
1000d904:	d9800815 	stw	r6,32(sp)
1000d908:	d9000204 	addi	r4,sp,8
1000d90c:	d9800f04 	addi	r6,sp,60
1000d910:	d8c00915 	stw	r3,36(sp)
1000d914:	d8800b15 	stw	r2,44(sp)
1000d918:	d9400115 	stw	r5,4(sp)
1000d91c:	dfc01015 	stw	ra,64(sp)
1000d920:	df000f15 	stw	fp,60(sp)
1000d924:	d9800a15 	stw	r6,40(sp)
1000d928:	dec00c15 	stw	sp,48(sp)
1000d92c:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000d930:	d8c00017 	ldw	r3,0(sp)
1000d934:	008400b4 	movhi	r2,4098
1000d938:	d9400117 	ldw	r5,4(sp)
1000d93c:	1097dc04 	addi	r2,r2,24432
1000d940:	18800015 	stw	r2,0(r3)
1000d944:	19000104 	addi	r4,r3,4
1000d948:	00800044 	movi	r2,1
1000d94c:	d8800315 	stw	r2,12(sp)
1000d950:	00104340 	call	10010434 <_ZNSsC1ERKSs>
1000d954:	d9000204 	addi	r4,sp,8
1000d958:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000d95c:	dfc01017 	ldw	ra,64(sp)
1000d960:	df000f17 	ldw	fp,60(sp)
1000d964:	dec01104 	addi	sp,sp,68
1000d968:	f800283a 	ret
1000d96c:	d8800417 	ldw	r2,16(sp)
1000d970:	d9000017 	ldw	r4,0(sp)
1000d974:	d8800115 	stw	r2,4(sp)
1000d978:	000d0140 	call	1000d014 <_ZNSt9exceptionD1Ev>
1000d97c:	d9000117 	ldw	r4,4(sp)
1000d980:	00bfffc4 	movi	r2,-1
1000d984:	d8800315 	stw	r2,12(sp)
1000d988:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1000d98c <_ZNSt11range_errorC1ERKSs>:
1000d98c:	defffe04 	addi	sp,sp,-8
1000d990:	dc000015 	stw	r16,0(sp)
1000d994:	dfc00115 	stw	ra,4(sp)
1000d998:	2021883a 	mov	r16,r4
1000d99c:	000d8e40 	call	1000d8e4 <_ZNSt13runtime_errorC1ERKSs>
1000d9a0:	008400b4 	movhi	r2,4098
1000d9a4:	1097e104 	addi	r2,r2,24452
1000d9a8:	80800015 	stw	r2,0(r16)
1000d9ac:	dfc00117 	ldw	ra,4(sp)
1000d9b0:	dc000017 	ldw	r16,0(sp)
1000d9b4:	dec00204 	addi	sp,sp,8
1000d9b8:	f800283a 	ret

1000d9bc <_ZNSt14overflow_errorC1ERKSs>:
1000d9bc:	defffe04 	addi	sp,sp,-8
1000d9c0:	dc000015 	stw	r16,0(sp)
1000d9c4:	dfc00115 	stw	ra,4(sp)
1000d9c8:	2021883a 	mov	r16,r4
1000d9cc:	000d8e40 	call	1000d8e4 <_ZNSt13runtime_errorC1ERKSs>
1000d9d0:	008400b4 	movhi	r2,4098
1000d9d4:	1097e604 	addi	r2,r2,24472
1000d9d8:	80800015 	stw	r2,0(r16)
1000d9dc:	dfc00117 	ldw	ra,4(sp)
1000d9e0:	dc000017 	ldw	r16,0(sp)
1000d9e4:	dec00204 	addi	sp,sp,8
1000d9e8:	f800283a 	ret

1000d9ec <_ZNSt15underflow_errorC1ERKSs>:
1000d9ec:	defffe04 	addi	sp,sp,-8
1000d9f0:	dc000015 	stw	r16,0(sp)
1000d9f4:	dfc00115 	stw	ra,4(sp)
1000d9f8:	2021883a 	mov	r16,r4
1000d9fc:	000d8e40 	call	1000d8e4 <_ZNSt13runtime_errorC1ERKSs>
1000da00:	008400b4 	movhi	r2,4098
1000da04:	1097eb04 	addi	r2,r2,24492
1000da08:	80800015 	stw	r2,0(r16)
1000da0c:	dfc00117 	ldw	ra,4(sp)
1000da10:	dc000017 	ldw	r16,0(sp)
1000da14:	dec00204 	addi	sp,sp,8
1000da18:	f800283a 	ret

1000da1c <_ZNSt12__sso_stringC1Ev>:
1000da1c:	20800204 	addi	r2,r4,8
1000da20:	20800015 	stw	r2,0(r4)
1000da24:	20000115 	stw	zero,4(r4)
1000da28:	20000205 	stb	zero,8(r4)
1000da2c:	f800283a 	ret

1000da30 <_ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000da30:	20c00204 	addi	r3,r4,8
1000da34:	20c00015 	stw	r3,0(r4)
1000da38:	28800017 	ldw	r2,0(r5)
1000da3c:	29800117 	ldw	r6,4(r5)
1000da40:	000f883a 	mov	r7,zero
1000da44:	100b883a 	mov	r5,r2
1000da48:	118d883a 	add	r6,r2,r6
1000da4c:	001438c1 	jmpi	1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

1000da50 <_ZNSt12__sso_stringC1EPKcj>:
1000da50:	20c00204 	addi	r3,r4,8
1000da54:	000f883a 	mov	r7,zero
1000da58:	298d883a 	add	r6,r5,r6
1000da5c:	20c00015 	stw	r3,0(r4)
1000da60:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

1000da64 <_ZNSt12__sso_stringC1ERKS_>:
1000da64:	defff004 	addi	sp,sp,-64
1000da68:	00c40074 	movhi	r3,4097
1000da6c:	008400b4 	movhi	r2,4098
1000da70:	dc000d15 	stw	r16,52(sp)
1000da74:	18e4f504 	addi	r3,r3,-27692
1000da78:	2021883a 	mov	r16,r4
1000da7c:	1093a704 	addi	r2,r2,20124
1000da80:	d809883a 	mov	r4,sp
1000da84:	dfc00f15 	stw	ra,60(sp)
1000da88:	dc400e15 	stw	r17,56(sp)
1000da8c:	d8c00615 	stw	r3,24(sp)
1000da90:	2823883a 	mov	r17,r5
1000da94:	d8800715 	stw	r2,28(sp)
1000da98:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000da9c:	80800204 	addi	r2,r16,8
1000daa0:	80800015 	stw	r2,0(r16)
1000daa4:	88800017 	ldw	r2,0(r17)
1000daa8:	89800117 	ldw	r6,4(r17)
1000daac:	000f883a 	mov	r7,zero
1000dab0:	100b883a 	mov	r5,r2
1000dab4:	118d883a 	add	r6,r2,r6
1000dab8:	8009883a 	mov	r4,r16
1000dabc:	d8000115 	stw	zero,4(sp)
1000dac0:	001438c0 	call	1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
1000dac4:	d809883a 	mov	r4,sp
1000dac8:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000dacc:	dfc00f17 	ldw	ra,60(sp)
1000dad0:	dc400e17 	ldw	r17,56(sp)
1000dad4:	dc000d17 	ldw	r16,52(sp)
1000dad8:	dec01004 	addi	sp,sp,64
1000dadc:	f800283a 	ret

1000dae0 <_ZNSt12__sso_stringaSERKS_>:
1000dae0:	defff004 	addi	sp,sp,-64
1000dae4:	01840074 	movhi	r6,4097
1000dae8:	00c400b4 	movhi	r3,4098
1000daec:	dc000e15 	stw	r16,56(sp)
1000daf0:	31a4f504 	addi	r6,r6,-27692
1000daf4:	18d3a804 	addi	r3,r3,20128
1000daf8:	2021883a 	mov	r16,r4
1000dafc:	d9000104 	addi	r4,sp,4
1000db00:	dfc00f15 	stw	ra,60(sp)
1000db04:	d9800715 	stw	r6,28(sp)
1000db08:	d8c00815 	stw	r3,32(sp)
1000db0c:	d9400015 	stw	r5,0(sp)
1000db10:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000db14:	d9400017 	ldw	r5,0(sp)
1000db18:	8009883a 	mov	r4,r16
1000db1c:	d8000215 	stw	zero,8(sp)
1000db20:	00115640 	call	10011564 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
1000db24:	d9000104 	addi	r4,sp,4
1000db28:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000db2c:	8005883a 	mov	r2,r16
1000db30:	dfc00f17 	ldw	ra,60(sp)
1000db34:	dc000e17 	ldw	r16,56(sp)
1000db38:	dec01004 	addi	sp,sp,64
1000db3c:	f800283a 	ret

1000db40 <_ZNSt12__sso_stringD1Ev>:
1000db40:	20c00017 	ldw	r3,0(r4)
1000db44:	20800204 	addi	r2,r4,8
1000db48:	18800226 	beq	r3,r2,1000db54 <_ZNSt12__sso_stringD1Ev+0x14>
1000db4c:	1809883a 	mov	r4,r3
1000db50:	0008e3c1 	jmpi	10008e3c <_ZdlPv>
1000db54:	f800283a 	ret

1000db58 <_ZNSt12__sso_stringC1EOS_>:
1000db58:	defffc04 	addi	sp,sp,-16
1000db5c:	dc800215 	stw	r18,8(sp)
1000db60:	dc400115 	stw	r17,4(sp)
1000db64:	dc000015 	stw	r16,0(sp)
1000db68:	dfc00315 	stw	ra,12(sp)
1000db6c:	2023883a 	mov	r17,r4
1000db70:	21000204 	addi	r4,r4,8
1000db74:	89000015 	stw	r4,0(r17)
1000db78:	28800017 	ldw	r2,0(r5)
1000db7c:	2c800204 	addi	r18,r5,8
1000db80:	2821883a 	mov	r16,r5
1000db84:	14800e26 	beq	r2,r18,1000dbc0 <_ZNSt12__sso_stringC1EOS_+0x68>
1000db88:	88800015 	stw	r2,0(r17)
1000db8c:	28800217 	ldw	r2,8(r5)
1000db90:	88800215 	stw	r2,8(r17)
1000db94:	80800117 	ldw	r2,4(r16)
1000db98:	88800115 	stw	r2,4(r17)
1000db9c:	84800015 	stw	r18,0(r16)
1000dba0:	80000115 	stw	zero,4(r16)
1000dba4:	80000205 	stb	zero,8(r16)
1000dba8:	dfc00317 	ldw	ra,12(sp)
1000dbac:	dc800217 	ldw	r18,8(sp)
1000dbb0:	dc400117 	ldw	r17,4(sp)
1000dbb4:	dc000017 	ldw	r16,0(sp)
1000dbb8:	dec00404 	addi	sp,sp,16
1000dbbc:	f800283a 	ret
1000dbc0:	01800404 	movi	r6,16
1000dbc4:	900b883a 	mov	r5,r18
1000dbc8:	0016c340 	call	10016c34 <memcpy>
1000dbcc:	003ff106 	br	1000db94 <_ZNSt12__sso_stringC1EOS_+0x3c>

1000dbd0 <_ZNSt12__sso_stringaSEOS_>:
1000dbd0:	defffd04 	addi	sp,sp,-12
1000dbd4:	dc400115 	stw	r17,4(sp)
1000dbd8:	dc000015 	stw	r16,0(sp)
1000dbdc:	dfc00215 	stw	ra,8(sp)
1000dbe0:	2821883a 	mov	r16,r5
1000dbe4:	29400017 	ldw	r5,0(r5)
1000dbe8:	80800204 	addi	r2,r16,8
1000dbec:	2023883a 	mov	r17,r4
1000dbf0:	21000017 	ldw	r4,0(r4)
1000dbf4:	28801a26 	beq	r5,r2,1000dc60 <_ZNSt12__sso_stringaSEOS_+0x90>
1000dbf8:	88c00204 	addi	r3,r17,8
1000dbfc:	89400015 	stw	r5,0(r17)
1000dc00:	20c01026 	beq	r4,r3,1000dc44 <_ZNSt12__sso_stringaSEOS_+0x74>
1000dc04:	81400117 	ldw	r5,4(r16)
1000dc08:	88c00217 	ldw	r3,8(r17)
1000dc0c:	89400115 	stw	r5,4(r17)
1000dc10:	81400217 	ldw	r5,8(r16)
1000dc14:	89400215 	stw	r5,8(r17)
1000dc18:	20000e26 	beq	r4,zero,1000dc54 <_ZNSt12__sso_stringaSEOS_+0x84>
1000dc1c:	81000015 	stw	r4,0(r16)
1000dc20:	80c00215 	stw	r3,8(r16)
1000dc24:	80000115 	stw	zero,4(r16)
1000dc28:	8805883a 	mov	r2,r17
1000dc2c:	20000005 	stb	zero,0(r4)
1000dc30:	dfc00217 	ldw	ra,8(sp)
1000dc34:	dc400117 	ldw	r17,4(sp)
1000dc38:	dc000017 	ldw	r16,0(sp)
1000dc3c:	dec00304 	addi	sp,sp,12
1000dc40:	f800283a 	ret
1000dc44:	80c00117 	ldw	r3,4(r16)
1000dc48:	88c00115 	stw	r3,4(r17)
1000dc4c:	80c00217 	ldw	r3,8(r16)
1000dc50:	88c00215 	stw	r3,8(r17)
1000dc54:	80800015 	stw	r2,0(r16)
1000dc58:	1009883a 	mov	r4,r2
1000dc5c:	003ff106 	br	1000dc24 <_ZNSt12__sso_stringaSEOS_+0x54>
1000dc60:	81800117 	ldw	r6,4(r16)
1000dc64:	30000526 	beq	r6,zero,1000dc7c <_ZNSt12__sso_stringaSEOS_+0xac>
1000dc68:	30800058 	cmpnei	r2,r6,1
1000dc6c:	10000826 	beq	r2,zero,1000dc90 <_ZNSt12__sso_stringaSEOS_+0xc0>
1000dc70:	0016c340 	call	10016c34 <memcpy>
1000dc74:	81800117 	ldw	r6,4(r16)
1000dc78:	89000017 	ldw	r4,0(r17)
1000dc7c:	89800115 	stw	r6,4(r17)
1000dc80:	2189883a 	add	r4,r4,r6
1000dc84:	20000005 	stb	zero,0(r4)
1000dc88:	81000017 	ldw	r4,0(r16)
1000dc8c:	003fe506 	br	1000dc24 <_ZNSt12__sso_stringaSEOS_+0x54>
1000dc90:	80800203 	ldbu	r2,8(r16)
1000dc94:	20800005 	stb	r2,0(r4)
1000dc98:	81800117 	ldw	r6,4(r16)
1000dc9c:	89000017 	ldw	r4,0(r17)
1000dca0:	003ff606 	br	1000dc7c <_ZNSt12__sso_stringaSEOS_+0xac>

1000dca4 <_ZNKSs7_M_dataEv>:
1000dca4:	20800017 	ldw	r2,0(r4)
1000dca8:	f800283a 	ret

1000dcac <_ZNSs7_M_dataEPc>:
1000dcac:	2805883a 	mov	r2,r5
1000dcb0:	21400015 	stw	r5,0(r4)
1000dcb4:	f800283a 	ret

1000dcb8 <_ZNKSs6_M_repEv>:
1000dcb8:	20800017 	ldw	r2,0(r4)
1000dcbc:	10bffd04 	addi	r2,r2,-12
1000dcc0:	f800283a 	ret

1000dcc4 <_ZNKSs9_M_ibeginEv>:
1000dcc4:	20800017 	ldw	r2,0(r4)
1000dcc8:	f800283a 	ret

1000dccc <_ZNKSs7_M_iendEv>:
1000dccc:	20800017 	ldw	r2,0(r4)
1000dcd0:	10fffd17 	ldw	r3,-12(r2)
1000dcd4:	10c5883a 	add	r2,r2,r3
1000dcd8:	f800283a 	ret

1000dcdc <_ZNKSs8_M_checkEjPKc>:
1000dcdc:	20c00017 	ldw	r3,0(r4)
1000dce0:	2805883a 	mov	r2,r5
1000dce4:	19fffd17 	ldw	r7,-12(r3)
1000dce8:	39400136 	bltu	r7,r5,1000dcf0 <_ZNKSs8_M_checkEjPKc+0x14>
1000dcec:	f800283a 	ret
1000dcf0:	010400b4 	movhi	r4,4098
1000dcf4:	deffff04 	addi	sp,sp,-4
1000dcf8:	300b883a 	mov	r5,r6
1000dcfc:	2117ee04 	addi	r4,r4,24504
1000dd00:	100d883a 	mov	r6,r2
1000dd04:	dfc00015 	stw	ra,0(sp)
1000dd08:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000dd0c <_ZNKSs15_M_check_lengthEjjPKc>:
1000dd0c:	20c00017 	ldw	r3,0(r4)
1000dd10:	00900034 	movhi	r2,16384
1000dd14:	10bfff04 	addi	r2,r2,-4
1000dd18:	18fffd17 	ldw	r3,-12(r3)
1000dd1c:	288b883a 	add	r5,r5,r2
1000dd20:	28cbc83a 	sub	r5,r5,r3
1000dd24:	29800136 	bltu	r5,r6,1000dd2c <_ZNKSs15_M_check_lengthEjjPKc+0x20>
1000dd28:	f800283a 	ret
1000dd2c:	deffff04 	addi	sp,sp,-4
1000dd30:	3809883a 	mov	r4,r7
1000dd34:	dfc00015 	stw	ra,0(sp)
1000dd38:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1000dd3c <_ZNKSs8_M_limitEjj>:
1000dd3c:	20800017 	ldw	r2,0(r4)
1000dd40:	10bffd17 	ldw	r2,-12(r2)
1000dd44:	1145c83a 	sub	r2,r2,r5
1000dd48:	3080012e 	bgeu	r6,r2,1000dd50 <_ZNKSs8_M_limitEjj+0x14>
1000dd4c:	3005883a 	mov	r2,r6
1000dd50:	f800283a 	ret

1000dd54 <_ZNKSs11_M_disjunctEPKc>:
1000dd54:	20800017 	ldw	r2,0(r4)
1000dd58:	28800436 	bltu	r5,r2,1000dd6c <_ZNKSs11_M_disjunctEPKc+0x18>
1000dd5c:	10fffd17 	ldw	r3,-12(r2)
1000dd60:	10c5883a 	add	r2,r2,r3
1000dd64:	1145803a 	cmpltu	r2,r2,r5
1000dd68:	f800283a 	ret
1000dd6c:	00800044 	movi	r2,1
1000dd70:	f800283a 	ret

1000dd74 <_ZNSs7_M_copyEPcPKcj>:
1000dd74:	30c00058 	cmpnei	r3,r6,1
1000dd78:	18000326 	beq	r3,zero,1000dd88 <_ZNSs7_M_copyEPcPKcj+0x14>
1000dd7c:	3000011e 	bne	r6,zero,1000dd84 <_ZNSs7_M_copyEPcPKcj+0x10>
1000dd80:	f800283a 	ret
1000dd84:	0016c341 	jmpi	10016c34 <memcpy>
1000dd88:	28800003 	ldbu	r2,0(r5)
1000dd8c:	20800005 	stb	r2,0(r4)
1000dd90:	f800283a 	ret

1000dd94 <_ZNSs7_M_moveEPcPKcj>:
1000dd94:	30c00058 	cmpnei	r3,r6,1
1000dd98:	18000326 	beq	r3,zero,1000dda8 <_ZNSs7_M_moveEPcPKcj+0x14>
1000dd9c:	3000011e 	bne	r6,zero,1000dda4 <_ZNSs7_M_moveEPcPKcj+0x10>
1000dda0:	f800283a 	ret
1000dda4:	0016d341 	jmpi	10016d34 <memmove>
1000dda8:	28800003 	ldbu	r2,0(r5)
1000ddac:	20800005 	stb	r2,0(r4)
1000ddb0:	f800283a 	ret

1000ddb4 <_ZNSs9_M_assignEPcjc>:
1000ddb4:	28800058 	cmpnei	r2,r5,1
1000ddb8:	200f883a 	mov	r7,r4
1000ddbc:	3007883a 	mov	r3,r6
1000ddc0:	10000726 	beq	r2,zero,1000dde0 <_ZNSs9_M_assignEPcjc+0x2c>
1000ddc4:	2800011e 	bne	r5,zero,1000ddcc <_ZNSs9_M_assignEPcjc+0x18>
1000ddc8:	f800283a 	ret
1000ddcc:	280d883a 	mov	r6,r5
1000ddd0:	19403fcc 	andi	r5,r3,255
1000ddd4:	2940201c 	xori	r5,r5,128
1000ddd8:	297fe004 	addi	r5,r5,-128
1000dddc:	0016e601 	jmpi	10016e60 <memset>
1000dde0:	39800005 	stb	r6,0(r7)
1000dde4:	f800283a 	ret

1000dde8 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_>:
1000dde8:	314dc83a 	sub	r6,r6,r5
1000ddec:	30c00058 	cmpnei	r3,r6,1
1000ddf0:	18000326 	beq	r3,zero,1000de00 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x18>
1000ddf4:	3000011e 	bne	r6,zero,1000ddfc <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x14>
1000ddf8:	f800283a 	ret
1000ddfc:	0016c341 	jmpi	10016c34 <memcpy>
1000de00:	28800003 	ldbu	r2,0(r5)
1000de04:	20800005 	stb	r2,0(r4)
1000de08:	f800283a 	ret

1000de0c <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_>:
1000de0c:	314dc83a 	sub	r6,r6,r5
1000de10:	30c00058 	cmpnei	r3,r6,1
1000de14:	18000326 	beq	r3,zero,1000de24 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x18>
1000de18:	3000011e 	bne	r6,zero,1000de20 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x14>
1000de1c:	f800283a 	ret
1000de20:	0016c341 	jmpi	10016c34 <memcpy>
1000de24:	28800003 	ldbu	r2,0(r5)
1000de28:	20800005 	stb	r2,0(r4)
1000de2c:	f800283a 	ret

1000de30 <_ZNSs13_S_copy_charsEPcS_S_>:
1000de30:	314dc83a 	sub	r6,r6,r5
1000de34:	30c00058 	cmpnei	r3,r6,1
1000de38:	18000326 	beq	r3,zero,1000de48 <_ZNSs13_S_copy_charsEPcS_S_+0x18>
1000de3c:	3000011e 	bne	r6,zero,1000de44 <_ZNSs13_S_copy_charsEPcS_S_+0x14>
1000de40:	f800283a 	ret
1000de44:	0016c341 	jmpi	10016c34 <memcpy>
1000de48:	28800003 	ldbu	r2,0(r5)
1000de4c:	20800005 	stb	r2,0(r4)
1000de50:	f800283a 	ret

1000de54 <_ZNSs13_S_copy_charsEPcPKcS1_>:
1000de54:	314dc83a 	sub	r6,r6,r5
1000de58:	30c00058 	cmpnei	r3,r6,1
1000de5c:	18000326 	beq	r3,zero,1000de6c <_ZNSs13_S_copy_charsEPcPKcS1_+0x18>
1000de60:	3000011e 	bne	r6,zero,1000de68 <_ZNSs13_S_copy_charsEPcPKcS1_+0x14>
1000de64:	f800283a 	ret
1000de68:	0016c341 	jmpi	10016c34 <memcpy>
1000de6c:	28800003 	ldbu	r2,0(r5)
1000de70:	20800005 	stb	r2,0(r4)
1000de74:	f800283a 	ret

1000de78 <_ZNSs10_S_compareEjj>:
1000de78:	2145c83a 	sub	r2,r4,r5
1000de7c:	f800283a 	ret

1000de80 <_ZNSs12_S_empty_repEv>:
1000de80:	008400f4 	movhi	r2,4099
1000de84:	10a9aa04 	addi	r2,r2,-22872
1000de88:	f800283a 	ret

1000de8c <_ZNSsC1Ev>:
1000de8c:	008400f4 	movhi	r2,4099
1000de90:	10a9ad04 	addi	r2,r2,-22860
1000de94:	20800015 	stw	r2,0(r4)
1000de98:	f800283a 	ret

1000de9c <_ZNSsC1EOSs>:
1000de9c:	28c00017 	ldw	r3,0(r5)
1000dea0:	008400f4 	movhi	r2,4099
1000dea4:	10a9ad04 	addi	r2,r2,-22860
1000dea8:	20c00015 	stw	r3,0(r4)
1000deac:	28800015 	stw	r2,0(r5)
1000deb0:	f800283a 	ret

1000deb4 <_ZNKSs5beginEv>:
1000deb4:	20800017 	ldw	r2,0(r4)
1000deb8:	f800283a 	ret

1000debc <_ZNKSs3endEv>:
1000debc:	20800017 	ldw	r2,0(r4)
1000dec0:	10fffd17 	ldw	r3,-12(r2)
1000dec4:	10c5883a 	add	r2,r2,r3
1000dec8:	f800283a 	ret

1000decc <_ZNKSs6rbeginEv>:
1000decc:	28c00017 	ldw	r3,0(r5)
1000ded0:	2005883a 	mov	r2,r4
1000ded4:	197ffd17 	ldw	r5,-12(r3)
1000ded8:	1947883a 	add	r3,r3,r5
1000dedc:	20c00015 	stw	r3,0(r4)
1000dee0:	f800283a 	ret

1000dee4 <_ZNKSs4rendEv>:
1000dee4:	28c00017 	ldw	r3,0(r5)
1000dee8:	2005883a 	mov	r2,r4
1000deec:	20c00015 	stw	r3,0(r4)
1000def0:	f800283a 	ret

1000def4 <_ZNKSs6cbeginEv>:
1000def4:	20800017 	ldw	r2,0(r4)
1000def8:	f800283a 	ret

1000defc <_ZNKSs4cendEv>:
1000defc:	20800017 	ldw	r2,0(r4)
1000df00:	10fffd17 	ldw	r3,-12(r2)
1000df04:	10c5883a 	add	r2,r2,r3
1000df08:	f800283a 	ret

1000df0c <_ZNKSs7crbeginEv>:
1000df0c:	28c00017 	ldw	r3,0(r5)
1000df10:	2005883a 	mov	r2,r4
1000df14:	197ffd17 	ldw	r5,-12(r3)
1000df18:	1947883a 	add	r3,r3,r5
1000df1c:	20c00015 	stw	r3,0(r4)
1000df20:	f800283a 	ret

1000df24 <_ZNKSs5crendEv>:
1000df24:	28c00017 	ldw	r3,0(r5)
1000df28:	2005883a 	mov	r2,r4
1000df2c:	20c00015 	stw	r3,0(r4)
1000df30:	f800283a 	ret

1000df34 <_ZNKSs4sizeEv>:
1000df34:	20800017 	ldw	r2,0(r4)
1000df38:	10bffd17 	ldw	r2,-12(r2)
1000df3c:	f800283a 	ret

1000df40 <_ZNKSs6lengthEv>:
1000df40:	20800017 	ldw	r2,0(r4)
1000df44:	10bffd17 	ldw	r2,-12(r2)
1000df48:	f800283a 	ret

1000df4c <_ZNKSs8max_sizeEv>:
1000df4c:	00900034 	movhi	r2,16384
1000df50:	10bfff04 	addi	r2,r2,-4
1000df54:	f800283a 	ret

1000df58 <_ZNKSs8capacityEv>:
1000df58:	20800017 	ldw	r2,0(r4)
1000df5c:	10bffe17 	ldw	r2,-8(r2)
1000df60:	f800283a 	ret

1000df64 <_ZNKSs5emptyEv>:
1000df64:	20800017 	ldw	r2,0(r4)
1000df68:	10bffd17 	ldw	r2,-12(r2)
1000df6c:	1005003a 	cmpeq	r2,r2,zero
1000df70:	f800283a 	ret

1000df74 <_ZNKSsixEj>:
1000df74:	20800017 	ldw	r2,0(r4)
1000df78:	1145883a 	add	r2,r2,r5
1000df7c:	f800283a 	ret

1000df80 <_ZNKSs2atEj>:
1000df80:	20c00017 	ldw	r3,0(r4)
1000df84:	19bffd17 	ldw	r6,-12(r3)
1000df88:	2980022e 	bgeu	r5,r6,1000df94 <_ZNKSs2atEj+0x14>
1000df8c:	1945883a 	add	r2,r3,r5
1000df90:	f800283a 	ret
1000df94:	010400b4 	movhi	r4,4098
1000df98:	deffff04 	addi	sp,sp,-4
1000df9c:	2117fc04 	addi	r4,r4,24560
1000dfa0:	dfc00015 	stw	ra,0(sp)
1000dfa4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000dfa8 <_ZNKSs5frontEv>:
1000dfa8:	20800017 	ldw	r2,0(r4)
1000dfac:	f800283a 	ret

1000dfb0 <_ZNKSs4backEv>:
1000dfb0:	20c00017 	ldw	r3,0(r4)
1000dfb4:	18bffd17 	ldw	r2,-12(r3)
1000dfb8:	10bfffc4 	addi	r2,r2,-1
1000dfbc:	1885883a 	add	r2,r3,r2
1000dfc0:	f800283a 	ret

1000dfc4 <_ZNKSs4copyEPcjj>:
1000dfc4:	20c00017 	ldw	r3,0(r4)
1000dfc8:	defffe04 	addi	sp,sp,-8
1000dfcc:	dc000015 	stw	r16,0(sp)
1000dfd0:	1c3ffd17 	ldw	r16,-12(r3)
1000dfd4:	dfc00115 	stw	ra,4(sp)
1000dfd8:	3805883a 	mov	r2,r7
1000dfdc:	81c01436 	bltu	r16,r7,1000e030 <_ZNKSs4copyEPcjj+0x6c>
1000dfe0:	81e1c83a 	sub	r16,r16,r7
1000dfe4:	2809883a 	mov	r4,r5
1000dfe8:	34000b36 	bltu	r6,r16,1000e018 <_ZNKSs4copyEPcjj+0x54>
1000dfec:	80000526 	beq	r16,zero,1000e004 <_ZNKSs4copyEPcjj+0x40>
1000dff0:	81800058 	cmpnei	r6,r16,1
1000dff4:	188b883a 	add	r5,r3,r2
1000dff8:	30000a26 	beq	r6,zero,1000e024 <_ZNKSs4copyEPcjj+0x60>
1000dffc:	800d883a 	mov	r6,r16
1000e000:	0016c340 	call	10016c34 <memcpy>
1000e004:	8005883a 	mov	r2,r16
1000e008:	dfc00117 	ldw	ra,4(sp)
1000e00c:	dc000017 	ldw	r16,0(sp)
1000e010:	dec00204 	addi	sp,sp,8
1000e014:	f800283a 	ret
1000e018:	3021883a 	mov	r16,r6
1000e01c:	803ff926 	beq	r16,zero,1000e004 <_ZNKSs4copyEPcjj+0x40>
1000e020:	003ff306 	br	1000dff0 <_ZNKSs4copyEPcjj+0x2c>
1000e024:	28800003 	ldbu	r2,0(r5)
1000e028:	20800005 	stb	r2,0(r4)
1000e02c:	003ff506 	br	1000e004 <_ZNKSs4copyEPcjj+0x40>
1000e030:	014400b4 	movhi	r5,4098
1000e034:	010400b4 	movhi	r4,4098
1000e038:	800f883a 	mov	r7,r16
1000e03c:	100d883a 	mov	r6,r2
1000e040:	29580d04 	addi	r5,r5,24628
1000e044:	2117ee04 	addi	r4,r4,24504
1000e048:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e04c <_ZNSs4swapERSs>:
1000e04c:	20800017 	ldw	r2,0(r4)
1000e050:	10ffff17 	ldw	r3,-4(r2)
1000e054:	1800010e 	bge	r3,zero,1000e05c <_ZNSs4swapERSs+0x10>
1000e058:	103fff15 	stw	zero,-4(r2)
1000e05c:	28c00017 	ldw	r3,0(r5)
1000e060:	19bfff17 	ldw	r6,-4(r3)
1000e064:	3000010e 	bge	r6,zero,1000e06c <_ZNSs4swapERSs+0x20>
1000e068:	183fff15 	stw	zero,-4(r3)
1000e06c:	20c00015 	stw	r3,0(r4)
1000e070:	28800015 	stw	r2,0(r5)
1000e074:	f800283a 	ret

1000e078 <_ZNSsaSEOSs>:
1000e078:	defffe04 	addi	sp,sp,-8
1000e07c:	dc000015 	stw	r16,0(sp)
1000e080:	dfc00115 	stw	ra,4(sp)
1000e084:	2021883a 	mov	r16,r4
1000e088:	000e04c0 	call	1000e04c <_ZNSs4swapERSs>
1000e08c:	8005883a 	mov	r2,r16
1000e090:	dfc00117 	ldw	ra,4(sp)
1000e094:	dc000017 	ldw	r16,0(sp)
1000e098:	dec00204 	addi	sp,sp,8
1000e09c:	f800283a 	ret

1000e0a0 <_ZNSs6assignEOSs>:
1000e0a0:	defffe04 	addi	sp,sp,-8
1000e0a4:	dc000015 	stw	r16,0(sp)
1000e0a8:	dfc00115 	stw	ra,4(sp)
1000e0ac:	2021883a 	mov	r16,r4
1000e0b0:	000e04c0 	call	1000e04c <_ZNSs4swapERSs>
1000e0b4:	8005883a 	mov	r2,r16
1000e0b8:	dfc00117 	ldw	ra,4(sp)
1000e0bc:	dc000017 	ldw	r16,0(sp)
1000e0c0:	dec00204 	addi	sp,sp,8
1000e0c4:	f800283a 	ret

1000e0c8 <_ZNKSs5c_strEv>:
1000e0c8:	20800017 	ldw	r2,0(r4)
1000e0cc:	f800283a 	ret

1000e0d0 <_ZNKSs4dataEv>:
1000e0d0:	20800017 	ldw	r2,0(r4)
1000e0d4:	f800283a 	ret

1000e0d8 <_ZNKSs13get_allocatorEv>:
1000e0d8:	2005883a 	mov	r2,r4
1000e0dc:	f800283a 	ret

1000e0e0 <_ZNKSs4findEPKcjj>:
1000e0e0:	defff804 	addi	sp,sp,-32
1000e0e4:	dd000415 	stw	r20,16(sp)
1000e0e8:	25000017 	ldw	r20,0(r4)
1000e0ec:	dc800215 	stw	r18,8(sp)
1000e0f0:	dfc00715 	stw	ra,28(sp)
1000e0f4:	dd800615 	stw	r22,24(sp)
1000e0f8:	dd400515 	stw	r21,20(sp)
1000e0fc:	dcc00315 	stw	r19,12(sp)
1000e100:	dc400115 	stw	r17,4(sp)
1000e104:	dc000015 	stw	r16,0(sp)
1000e108:	a4bffd17 	ldw	r18,-12(r20)
1000e10c:	38002526 	beq	r7,zero,1000e1a4 <_ZNKSs4findEPKcjj+0xc4>
1000e110:	3480192e 	bgeu	r6,r18,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e114:	9185c83a 	sub	r2,r18,r6
1000e118:	a189883a 	add	r4,r20,r6
1000e11c:	a4a5883a 	add	r18,r20,r18
1000e120:	11c01536 	bltu	r2,r7,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e124:	05400044 	movi	r21,1
1000e128:	a9ebc83a 	sub	r21,r21,r7
1000e12c:	a88d883a 	add	r6,r21,r2
1000e130:	30001126 	beq	r6,zero,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e134:	2d800007 	ldb	r22,0(r5)
1000e138:	2827883a 	mov	r19,r5
1000e13c:	3821883a 	mov	r16,r7
1000e140:	b00b883a 	mov	r5,r22
1000e144:	0016ac00 	call	10016ac0 <memchr>
1000e148:	1023883a 	mov	r17,r2
1000e14c:	800d883a 	mov	r6,r16
1000e150:	980b883a 	mov	r5,r19
1000e154:	1009883a 	mov	r4,r2
1000e158:	10000726 	beq	r2,zero,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e15c:	0016ba80 	call	10016ba8 <memcmp>
1000e160:	89000044 	addi	r4,r17,1
1000e164:	9107c83a 	sub	r3,r18,r4
1000e168:	a8cd883a 	add	r6,r21,r3
1000e16c:	10001026 	beq	r2,zero,1000e1b0 <_ZNKSs4findEPKcjj+0xd0>
1000e170:	1c000136 	bltu	r3,r16,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e174:	303ff21e 	bne	r6,zero,1000e140 <_ZNKSs4findEPKcjj+0x60>
1000e178:	00bfffc4 	movi	r2,-1
1000e17c:	dfc00717 	ldw	ra,28(sp)
1000e180:	dd800617 	ldw	r22,24(sp)
1000e184:	dd400517 	ldw	r21,20(sp)
1000e188:	dd000417 	ldw	r20,16(sp)
1000e18c:	dcc00317 	ldw	r19,12(sp)
1000e190:	dc800217 	ldw	r18,8(sp)
1000e194:	dc400117 	ldw	r17,4(sp)
1000e198:	dc000017 	ldw	r16,0(sp)
1000e19c:	dec00804 	addi	sp,sp,32
1000e1a0:	f800283a 	ret
1000e1a4:	91bff436 	bltu	r18,r6,1000e178 <_ZNKSs4findEPKcjj+0x98>
1000e1a8:	3005883a 	mov	r2,r6
1000e1ac:	003ff306 	br	1000e17c <_ZNKSs4findEPKcjj+0x9c>
1000e1b0:	8d05c83a 	sub	r2,r17,r20
1000e1b4:	003ff106 	br	1000e17c <_ZNKSs4findEPKcjj+0x9c>

1000e1b8 <_ZNKSs4findERKSsj>:
1000e1b8:	29400017 	ldw	r5,0(r5)
1000e1bc:	29fffd17 	ldw	r7,-12(r5)
1000e1c0:	000e0e01 	jmpi	1000e0e0 <_ZNKSs4findEPKcjj>

1000e1c4 <_ZNKSs4findEPKcj>:
1000e1c4:	defffc04 	addi	sp,sp,-16
1000e1c8:	dc000215 	stw	r16,8(sp)
1000e1cc:	2021883a 	mov	r16,r4
1000e1d0:	2809883a 	mov	r4,r5
1000e1d4:	dfc00315 	stw	ra,12(sp)
1000e1d8:	d9800115 	stw	r6,4(sp)
1000e1dc:	d9400015 	stw	r5,0(sp)
1000e1e0:	00178f00 	call	100178f0 <strlen>
1000e1e4:	d9800117 	ldw	r6,4(sp)
1000e1e8:	d9400017 	ldw	r5,0(sp)
1000e1ec:	100f883a 	mov	r7,r2
1000e1f0:	8009883a 	mov	r4,r16
1000e1f4:	dfc00317 	ldw	ra,12(sp)
1000e1f8:	dc000217 	ldw	r16,8(sp)
1000e1fc:	dec00404 	addi	sp,sp,16
1000e200:	000e0e01 	jmpi	1000e0e0 <_ZNKSs4findEPKcjj>

1000e204 <_ZNKSs4findEcj>:
1000e204:	defffe04 	addi	sp,sp,-8
1000e208:	dc000015 	stw	r16,0(sp)
1000e20c:	24000017 	ldw	r16,0(r4)
1000e210:	dfc00115 	stw	ra,4(sp)
1000e214:	80bffd17 	ldw	r2,-12(r16)
1000e218:	30800d2e 	bgeu	r6,r2,1000e250 <_ZNKSs4findEcj+0x4c>
1000e21c:	29403fcc 	andi	r5,r5,255
1000e220:	3009883a 	mov	r4,r6
1000e224:	2940201c 	xori	r5,r5,128
1000e228:	118dc83a 	sub	r6,r2,r6
1000e22c:	297fe004 	addi	r5,r5,-128
1000e230:	8109883a 	add	r4,r16,r4
1000e234:	0016ac00 	call	10016ac0 <memchr>
1000e238:	10000526 	beq	r2,zero,1000e250 <_ZNKSs4findEcj+0x4c>
1000e23c:	1405c83a 	sub	r2,r2,r16
1000e240:	dfc00117 	ldw	ra,4(sp)
1000e244:	dc000017 	ldw	r16,0(sp)
1000e248:	dec00204 	addi	sp,sp,8
1000e24c:	f800283a 	ret
1000e250:	00bfffc4 	movi	r2,-1
1000e254:	dfc00117 	ldw	ra,4(sp)
1000e258:	dc000017 	ldw	r16,0(sp)
1000e25c:	dec00204 	addi	sp,sp,8
1000e260:	f800283a 	ret

1000e264 <_ZNKSs5rfindEPKcjj>:
1000e264:	defffb04 	addi	sp,sp,-20
1000e268:	dcc00315 	stw	r19,12(sp)
1000e26c:	24c00017 	ldw	r19,0(r4)
1000e270:	dc000015 	stw	r16,0(sp)
1000e274:	dfc00415 	stw	ra,16(sp)
1000e278:	9c3ffd17 	ldw	r16,-12(r19)
1000e27c:	dc800215 	stw	r18,8(sp)
1000e280:	dc400115 	stw	r17,4(sp)
1000e284:	81c01b36 	bltu	r16,r7,1000e2f4 <_ZNKSs5rfindEPKcjj+0x90>
1000e288:	81e1c83a 	sub	r16,r16,r7
1000e28c:	2825883a 	mov	r18,r5
1000e290:	3823883a 	mov	r17,r7
1000e294:	34001536 	bltu	r6,r16,1000e2ec <_ZNKSs5rfindEPKcjj+0x88>
1000e298:	9c09883a 	add	r4,r19,r16
1000e29c:	880d883a 	mov	r6,r17
1000e2a0:	900b883a 	mov	r5,r18
1000e2a4:	88000926 	beq	r17,zero,1000e2cc <_ZNKSs5rfindEPKcjj+0x68>
1000e2a8:	0016ba80 	call	10016ba8 <memcmp>
1000e2ac:	10000726 	beq	r2,zero,1000e2cc <_ZNKSs5rfindEPKcjj+0x68>
1000e2b0:	80bfffc4 	addi	r2,r16,-1
1000e2b4:	80000f26 	beq	r16,zero,1000e2f4 <_ZNKSs5rfindEPKcjj+0x90>
1000e2b8:	1021883a 	mov	r16,r2
1000e2bc:	9c09883a 	add	r4,r19,r16
1000e2c0:	880d883a 	mov	r6,r17
1000e2c4:	900b883a 	mov	r5,r18
1000e2c8:	883ff71e 	bne	r17,zero,1000e2a8 <_ZNKSs5rfindEPKcjj+0x44>
1000e2cc:	8005883a 	mov	r2,r16
1000e2d0:	dfc00417 	ldw	ra,16(sp)
1000e2d4:	dcc00317 	ldw	r19,12(sp)
1000e2d8:	dc800217 	ldw	r18,8(sp)
1000e2dc:	dc400117 	ldw	r17,4(sp)
1000e2e0:	dc000017 	ldw	r16,0(sp)
1000e2e4:	dec00504 	addi	sp,sp,20
1000e2e8:	f800283a 	ret
1000e2ec:	3021883a 	mov	r16,r6
1000e2f0:	003fe906 	br	1000e298 <_ZNKSs5rfindEPKcjj+0x34>
1000e2f4:	043fffc4 	movi	r16,-1
1000e2f8:	003ff406 	br	1000e2cc <_ZNKSs5rfindEPKcjj+0x68>

1000e2fc <_ZNKSs5rfindERKSsj>:
1000e2fc:	29400017 	ldw	r5,0(r5)
1000e300:	29fffd17 	ldw	r7,-12(r5)
1000e304:	000e2641 	jmpi	1000e264 <_ZNKSs5rfindEPKcjj>

1000e308 <_ZNKSs5rfindEPKcj>:
1000e308:	defffc04 	addi	sp,sp,-16
1000e30c:	dc000215 	stw	r16,8(sp)
1000e310:	2021883a 	mov	r16,r4
1000e314:	2809883a 	mov	r4,r5
1000e318:	dfc00315 	stw	ra,12(sp)
1000e31c:	d9800115 	stw	r6,4(sp)
1000e320:	d9400015 	stw	r5,0(sp)
1000e324:	00178f00 	call	100178f0 <strlen>
1000e328:	d9800117 	ldw	r6,4(sp)
1000e32c:	d9400017 	ldw	r5,0(sp)
1000e330:	100f883a 	mov	r7,r2
1000e334:	8009883a 	mov	r4,r16
1000e338:	dfc00317 	ldw	ra,12(sp)
1000e33c:	dc000217 	ldw	r16,8(sp)
1000e340:	dec00404 	addi	sp,sp,16
1000e344:	000e2641 	jmpi	1000e264 <_ZNKSs5rfindEPKcjj>

1000e348 <_ZNKSs5rfindEcj>:
1000e348:	21000017 	ldw	r4,0(r4)
1000e34c:	20bffd17 	ldw	r2,-12(r4)
1000e350:	10000e26 	beq	r2,zero,1000e38c <_ZNKSs5rfindEcj+0x44>
1000e354:	10bfffc4 	addi	r2,r2,-1
1000e358:	30800a36 	bltu	r6,r2,1000e384 <_ZNKSs5rfindEcj+0x3c>
1000e35c:	29403fcc 	andi	r5,r5,255
1000e360:	2940201c 	xori	r5,r5,128
1000e364:	297fe004 	addi	r5,r5,-128
1000e368:	2087883a 	add	r3,r4,r2
1000e36c:	18c00007 	ldb	r3,0(r3)
1000e370:	19400826 	beq	r3,r5,1000e394 <_ZNKSs5rfindEcj+0x4c>
1000e374:	10bfffc4 	addi	r2,r2,-1
1000e378:	10ffffe0 	cmpeqi	r3,r2,-1
1000e37c:	183ffa26 	beq	r3,zero,1000e368 <_ZNKSs5rfindEcj+0x20>
1000e380:	f800283a 	ret
1000e384:	3005883a 	mov	r2,r6
1000e388:	003ff406 	br	1000e35c <_ZNKSs5rfindEcj+0x14>
1000e38c:	00bfffc4 	movi	r2,-1
1000e390:	f800283a 	ret
1000e394:	f800283a 	ret

1000e398 <_ZNKSs13find_first_ofEPKcjj>:
1000e398:	38002126 	beq	r7,zero,1000e420 <_ZNKSs13find_first_ofEPKcjj+0x88>
1000e39c:	defffa04 	addi	sp,sp,-24
1000e3a0:	dc800215 	stw	r18,8(sp)
1000e3a4:	24800017 	ldw	r18,0(r4)
1000e3a8:	dcc00315 	stw	r19,12(sp)
1000e3ac:	dd000415 	stw	r20,16(sp)
1000e3b0:	94fffd17 	ldw	r19,-12(r18)
1000e3b4:	dc400115 	stw	r17,4(sp)
1000e3b8:	dc000015 	stw	r16,0(sp)
1000e3bc:	dfc00515 	stw	ra,20(sp)
1000e3c0:	3823883a 	mov	r17,r7
1000e3c4:	2829883a 	mov	r20,r5
1000e3c8:	3021883a 	mov	r16,r6
1000e3cc:	34c00336 	bltu	r6,r19,1000e3dc <_ZNKSs13find_first_ofEPKcjj+0x44>
1000e3d0:	00001106 	br	1000e418 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000e3d4:	84000044 	addi	r16,r16,1
1000e3d8:	84c00f26 	beq	r16,r19,1000e418 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000e3dc:	9405883a 	add	r2,r18,r16
1000e3e0:	11400007 	ldb	r5,0(r2)
1000e3e4:	880d883a 	mov	r6,r17
1000e3e8:	a009883a 	mov	r4,r20
1000e3ec:	0016ac00 	call	10016ac0 <memchr>
1000e3f0:	103ff826 	beq	r2,zero,1000e3d4 <_ZNKSs13find_first_ofEPKcjj+0x3c>
1000e3f4:	8005883a 	mov	r2,r16
1000e3f8:	dfc00517 	ldw	ra,20(sp)
1000e3fc:	dd000417 	ldw	r20,16(sp)
1000e400:	dcc00317 	ldw	r19,12(sp)
1000e404:	dc800217 	ldw	r18,8(sp)
1000e408:	dc400117 	ldw	r17,4(sp)
1000e40c:	dc000017 	ldw	r16,0(sp)
1000e410:	dec00604 	addi	sp,sp,24
1000e414:	f800283a 	ret
1000e418:	00bfffc4 	movi	r2,-1
1000e41c:	003ff606 	br	1000e3f8 <_ZNKSs13find_first_ofEPKcjj+0x60>
1000e420:	00bfffc4 	movi	r2,-1
1000e424:	f800283a 	ret

1000e428 <_ZNKSs13find_first_ofERKSsj>:
1000e428:	29400017 	ldw	r5,0(r5)
1000e42c:	29fffd17 	ldw	r7,-12(r5)
1000e430:	000e3981 	jmpi	1000e398 <_ZNKSs13find_first_ofEPKcjj>

1000e434 <_ZNKSs13find_first_ofEPKcj>:
1000e434:	defffc04 	addi	sp,sp,-16
1000e438:	dc000215 	stw	r16,8(sp)
1000e43c:	2021883a 	mov	r16,r4
1000e440:	2809883a 	mov	r4,r5
1000e444:	dfc00315 	stw	ra,12(sp)
1000e448:	d9800115 	stw	r6,4(sp)
1000e44c:	d9400015 	stw	r5,0(sp)
1000e450:	00178f00 	call	100178f0 <strlen>
1000e454:	d9800117 	ldw	r6,4(sp)
1000e458:	d9400017 	ldw	r5,0(sp)
1000e45c:	100f883a 	mov	r7,r2
1000e460:	8009883a 	mov	r4,r16
1000e464:	dfc00317 	ldw	ra,12(sp)
1000e468:	dc000217 	ldw	r16,8(sp)
1000e46c:	dec00404 	addi	sp,sp,16
1000e470:	000e3981 	jmpi	1000e398 <_ZNKSs13find_first_ofEPKcjj>

1000e474 <_ZNKSs13find_first_ofEcj>:
1000e474:	29403fcc 	andi	r5,r5,255
1000e478:	2940201c 	xori	r5,r5,128
1000e47c:	297fe004 	addi	r5,r5,-128
1000e480:	000e2041 	jmpi	1000e204 <_ZNKSs4findEcj>

1000e484 <_ZNKSs12find_last_ofEPKcjj>:
1000e484:	defffb04 	addi	sp,sp,-20
1000e488:	dc800215 	stw	r18,8(sp)
1000e48c:	24800017 	ldw	r18,0(r4)
1000e490:	dc000015 	stw	r16,0(sp)
1000e494:	dfc00415 	stw	ra,16(sp)
1000e498:	943ffd17 	ldw	r16,-12(r18)
1000e49c:	dcc00315 	stw	r19,12(sp)
1000e4a0:	dc400115 	stw	r17,4(sp)
1000e4a4:	80001126 	beq	r16,zero,1000e4ec <_ZNKSs12find_last_ofEPKcjj+0x68>
1000e4a8:	38001026 	beq	r7,zero,1000e4ec <_ZNKSs12find_last_ofEPKcjj+0x68>
1000e4ac:	843fffc4 	addi	r16,r16,-1
1000e4b0:	3823883a 	mov	r17,r7
1000e4b4:	2827883a 	mov	r19,r5
1000e4b8:	3400052e 	bgeu	r6,r16,1000e4d0 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000e4bc:	3021883a 	mov	r16,r6
1000e4c0:	00000306 	br	1000e4d0 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000e4c4:	843fffc4 	addi	r16,r16,-1
1000e4c8:	80bfffd8 	cmpnei	r2,r16,-1
1000e4cc:	10000826 	beq	r2,zero,1000e4f0 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000e4d0:	9405883a 	add	r2,r18,r16
1000e4d4:	11400007 	ldb	r5,0(r2)
1000e4d8:	880d883a 	mov	r6,r17
1000e4dc:	9809883a 	mov	r4,r19
1000e4e0:	0016ac00 	call	10016ac0 <memchr>
1000e4e4:	103ff726 	beq	r2,zero,1000e4c4 <_ZNKSs12find_last_ofEPKcjj+0x40>
1000e4e8:	00000106 	br	1000e4f0 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000e4ec:	043fffc4 	movi	r16,-1
1000e4f0:	8005883a 	mov	r2,r16
1000e4f4:	dfc00417 	ldw	ra,16(sp)
1000e4f8:	dcc00317 	ldw	r19,12(sp)
1000e4fc:	dc800217 	ldw	r18,8(sp)
1000e500:	dc400117 	ldw	r17,4(sp)
1000e504:	dc000017 	ldw	r16,0(sp)
1000e508:	dec00504 	addi	sp,sp,20
1000e50c:	f800283a 	ret

1000e510 <_ZNKSs12find_last_ofERKSsj>:
1000e510:	29400017 	ldw	r5,0(r5)
1000e514:	29fffd17 	ldw	r7,-12(r5)
1000e518:	000e4841 	jmpi	1000e484 <_ZNKSs12find_last_ofEPKcjj>

1000e51c <_ZNKSs12find_last_ofEPKcj>:
1000e51c:	defffc04 	addi	sp,sp,-16
1000e520:	dc000215 	stw	r16,8(sp)
1000e524:	2021883a 	mov	r16,r4
1000e528:	2809883a 	mov	r4,r5
1000e52c:	dfc00315 	stw	ra,12(sp)
1000e530:	d9800115 	stw	r6,4(sp)
1000e534:	d9400015 	stw	r5,0(sp)
1000e538:	00178f00 	call	100178f0 <strlen>
1000e53c:	d9800117 	ldw	r6,4(sp)
1000e540:	d9400017 	ldw	r5,0(sp)
1000e544:	100f883a 	mov	r7,r2
1000e548:	8009883a 	mov	r4,r16
1000e54c:	dfc00317 	ldw	ra,12(sp)
1000e550:	dc000217 	ldw	r16,8(sp)
1000e554:	dec00404 	addi	sp,sp,16
1000e558:	000e4841 	jmpi	1000e484 <_ZNKSs12find_last_ofEPKcjj>

1000e55c <_ZNKSs12find_last_ofEcj>:
1000e55c:	29403fcc 	andi	r5,r5,255
1000e560:	2940201c 	xori	r5,r5,128
1000e564:	297fe004 	addi	r5,r5,-128
1000e568:	000e3481 	jmpi	1000e348 <_ZNKSs5rfindEcj>

1000e56c <_ZNKSs17find_first_not_ofEPKcjj>:
1000e56c:	defffa04 	addi	sp,sp,-24
1000e570:	dc400115 	stw	r17,4(sp)
1000e574:	24400017 	ldw	r17,0(r4)
1000e578:	dcc00315 	stw	r19,12(sp)
1000e57c:	dfc00515 	stw	ra,20(sp)
1000e580:	8cfffd17 	ldw	r19,-12(r17)
1000e584:	dd000415 	stw	r20,16(sp)
1000e588:	dc800215 	stw	r18,8(sp)
1000e58c:	dc000015 	stw	r16,0(sp)
1000e590:	34c0162e 	bgeu	r6,r19,1000e5ec <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000e594:	3021883a 	mov	r16,r6
1000e598:	2829883a 	mov	r20,r5
1000e59c:	3825883a 	mov	r18,r7
1000e5a0:	3800031e 	bne	r7,zero,1000e5b0 <_ZNKSs17find_first_not_ofEPKcjj+0x44>
1000e5a4:	00000806 	br	1000e5c8 <_ZNKSs17find_first_not_ofEPKcjj+0x5c>
1000e5a8:	84000044 	addi	r16,r16,1
1000e5ac:	84c00f26 	beq	r16,r19,1000e5ec <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000e5b0:	8c05883a 	add	r2,r17,r16
1000e5b4:	11400007 	ldb	r5,0(r2)
1000e5b8:	900d883a 	mov	r6,r18
1000e5bc:	a009883a 	mov	r4,r20
1000e5c0:	0016ac00 	call	10016ac0 <memchr>
1000e5c4:	103ff81e 	bne	r2,zero,1000e5a8 <_ZNKSs17find_first_not_ofEPKcjj+0x3c>
1000e5c8:	8005883a 	mov	r2,r16
1000e5cc:	dfc00517 	ldw	ra,20(sp)
1000e5d0:	dd000417 	ldw	r20,16(sp)
1000e5d4:	dcc00317 	ldw	r19,12(sp)
1000e5d8:	dc800217 	ldw	r18,8(sp)
1000e5dc:	dc400117 	ldw	r17,4(sp)
1000e5e0:	dc000017 	ldw	r16,0(sp)
1000e5e4:	dec00604 	addi	sp,sp,24
1000e5e8:	f800283a 	ret
1000e5ec:	00bfffc4 	movi	r2,-1
1000e5f0:	003ff606 	br	1000e5cc <_ZNKSs17find_first_not_ofEPKcjj+0x60>

1000e5f4 <_ZNKSs17find_first_not_ofERKSsj>:
1000e5f4:	29400017 	ldw	r5,0(r5)
1000e5f8:	29fffd17 	ldw	r7,-12(r5)
1000e5fc:	000e56c1 	jmpi	1000e56c <_ZNKSs17find_first_not_ofEPKcjj>

1000e600 <_ZNKSs17find_first_not_ofEPKcj>:
1000e600:	defffc04 	addi	sp,sp,-16
1000e604:	dc000215 	stw	r16,8(sp)
1000e608:	2021883a 	mov	r16,r4
1000e60c:	2809883a 	mov	r4,r5
1000e610:	dfc00315 	stw	ra,12(sp)
1000e614:	d9800115 	stw	r6,4(sp)
1000e618:	d9400015 	stw	r5,0(sp)
1000e61c:	00178f00 	call	100178f0 <strlen>
1000e620:	d9800117 	ldw	r6,4(sp)
1000e624:	d9400017 	ldw	r5,0(sp)
1000e628:	100f883a 	mov	r7,r2
1000e62c:	8009883a 	mov	r4,r16
1000e630:	dfc00317 	ldw	ra,12(sp)
1000e634:	dc000217 	ldw	r16,8(sp)
1000e638:	dec00404 	addi	sp,sp,16
1000e63c:	000e56c1 	jmpi	1000e56c <_ZNKSs17find_first_not_ofEPKcjj>

1000e640 <_ZNKSs17find_first_not_ofEcj>:
1000e640:	20c00017 	ldw	r3,0(r4)
1000e644:	19fffd17 	ldw	r7,-12(r3)
1000e648:	31c00d2e 	bgeu	r6,r7,1000e680 <_ZNKSs17find_first_not_ofEcj+0x40>
1000e64c:	1985883a 	add	r2,r3,r6
1000e650:	29403fcc 	andi	r5,r5,255
1000e654:	10800007 	ldb	r2,0(r2)
1000e658:	2940201c 	xori	r5,r5,128
1000e65c:	297fe004 	addi	r5,r5,-128
1000e660:	2880091e 	bne	r5,r2,1000e688 <_ZNKSs17find_first_not_ofEcj+0x48>
1000e664:	2809883a 	mov	r4,r5
1000e668:	00000206 	br	1000e674 <_ZNKSs17find_first_not_ofEcj+0x34>
1000e66c:	10800007 	ldb	r2,0(r2)
1000e670:	1100051e 	bne	r2,r4,1000e688 <_ZNKSs17find_first_not_ofEcj+0x48>
1000e674:	31800044 	addi	r6,r6,1
1000e678:	1985883a 	add	r2,r3,r6
1000e67c:	31fffb1e 	bne	r6,r7,1000e66c <_ZNKSs17find_first_not_ofEcj+0x2c>
1000e680:	00bfffc4 	movi	r2,-1
1000e684:	f800283a 	ret
1000e688:	3005883a 	mov	r2,r6
1000e68c:	f800283a 	ret

1000e690 <_ZNKSs16find_last_not_ofEPKcjj>:
1000e690:	defffb04 	addi	sp,sp,-20
1000e694:	dcc00315 	stw	r19,12(sp)
1000e698:	24c00017 	ldw	r19,0(r4)
1000e69c:	dc000015 	stw	r16,0(sp)
1000e6a0:	dfc00415 	stw	ra,16(sp)
1000e6a4:	9c3ffd17 	ldw	r16,-12(r19)
1000e6a8:	dc800215 	stw	r18,8(sp)
1000e6ac:	dc400115 	stw	r17,4(sp)
1000e6b0:	80001826 	beq	r16,zero,1000e714 <_ZNKSs16find_last_not_ofEPKcjj+0x84>
1000e6b4:	843fffc4 	addi	r16,r16,-1
1000e6b8:	3823883a 	mov	r17,r7
1000e6bc:	2825883a 	mov	r18,r5
1000e6c0:	34001236 	bltu	r6,r16,1000e70c <_ZNKSs16find_last_not_ofEPKcjj+0x7c>
1000e6c4:	9c05883a 	add	r2,r19,r16
1000e6c8:	880d883a 	mov	r6,r17
1000e6cc:	9009883a 	mov	r4,r18
1000e6d0:	88000626 	beq	r17,zero,1000e6ec <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000e6d4:	11400007 	ldb	r5,0(r2)
1000e6d8:	0016ac00 	call	10016ac0 <memchr>
1000e6dc:	10000326 	beq	r2,zero,1000e6ec <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000e6e0:	843fffc4 	addi	r16,r16,-1
1000e6e4:	80bfffd8 	cmpnei	r2,r16,-1
1000e6e8:	103ff61e 	bne	r2,zero,1000e6c4 <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000e6ec:	8005883a 	mov	r2,r16
1000e6f0:	dfc00417 	ldw	ra,16(sp)
1000e6f4:	dcc00317 	ldw	r19,12(sp)
1000e6f8:	dc800217 	ldw	r18,8(sp)
1000e6fc:	dc400117 	ldw	r17,4(sp)
1000e700:	dc000017 	ldw	r16,0(sp)
1000e704:	dec00504 	addi	sp,sp,20
1000e708:	f800283a 	ret
1000e70c:	3021883a 	mov	r16,r6
1000e710:	003fec06 	br	1000e6c4 <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000e714:	043fffc4 	movi	r16,-1
1000e718:	003ff406 	br	1000e6ec <_ZNKSs16find_last_not_ofEPKcjj+0x5c>

1000e71c <_ZNKSs16find_last_not_ofERKSsj>:
1000e71c:	29400017 	ldw	r5,0(r5)
1000e720:	29fffd17 	ldw	r7,-12(r5)
1000e724:	000e6901 	jmpi	1000e690 <_ZNKSs16find_last_not_ofEPKcjj>

1000e728 <_ZNKSs16find_last_not_ofEPKcj>:
1000e728:	defffc04 	addi	sp,sp,-16
1000e72c:	dc000215 	stw	r16,8(sp)
1000e730:	2021883a 	mov	r16,r4
1000e734:	2809883a 	mov	r4,r5
1000e738:	dfc00315 	stw	ra,12(sp)
1000e73c:	d9800115 	stw	r6,4(sp)
1000e740:	d9400015 	stw	r5,0(sp)
1000e744:	00178f00 	call	100178f0 <strlen>
1000e748:	d9800117 	ldw	r6,4(sp)
1000e74c:	d9400017 	ldw	r5,0(sp)
1000e750:	100f883a 	mov	r7,r2
1000e754:	8009883a 	mov	r4,r16
1000e758:	dfc00317 	ldw	ra,12(sp)
1000e75c:	dc000217 	ldw	r16,8(sp)
1000e760:	dec00404 	addi	sp,sp,16
1000e764:	000e6901 	jmpi	1000e690 <_ZNKSs16find_last_not_ofEPKcjj>

1000e768 <_ZNKSs16find_last_not_ofEcj>:
1000e768:	21000017 	ldw	r4,0(r4)
1000e76c:	20bffd17 	ldw	r2,-12(r4)
1000e770:	10000f26 	beq	r2,zero,1000e7b0 <_ZNKSs16find_last_not_ofEcj+0x48>
1000e774:	10bfffc4 	addi	r2,r2,-1
1000e778:	30800b36 	bltu	r6,r2,1000e7a8 <_ZNKSs16find_last_not_ofEcj+0x40>
1000e77c:	29403fcc 	andi	r5,r5,255
1000e780:	2940201c 	xori	r5,r5,128
1000e784:	297fe004 	addi	r5,r5,-128
1000e788:	00000306 	br	1000e798 <_ZNKSs16find_last_not_ofEcj+0x30>
1000e78c:	10bfffc4 	addi	r2,r2,-1
1000e790:	10ffffd8 	cmpnei	r3,r2,-1
1000e794:	18000826 	beq	r3,zero,1000e7b8 <_ZNKSs16find_last_not_ofEcj+0x50>
1000e798:	2087883a 	add	r3,r4,r2
1000e79c:	18c00007 	ldb	r3,0(r3)
1000e7a0:	197ffa26 	beq	r3,r5,1000e78c <_ZNKSs16find_last_not_ofEcj+0x24>
1000e7a4:	f800283a 	ret
1000e7a8:	3005883a 	mov	r2,r6
1000e7ac:	003ff306 	br	1000e77c <_ZNKSs16find_last_not_ofEcj+0x14>
1000e7b0:	00bfffc4 	movi	r2,-1
1000e7b4:	f800283a 	ret
1000e7b8:	f800283a 	ret

1000e7bc <_ZNKSs7compareERKSs>:
1000e7bc:	21000017 	ldw	r4,0(r4)
1000e7c0:	29400017 	ldw	r5,0(r5)
1000e7c4:	defffd04 	addi	sp,sp,-12
1000e7c8:	dc400115 	stw	r17,4(sp)
1000e7cc:	dc000015 	stw	r16,0(sp)
1000e7d0:	247ffd17 	ldw	r17,-12(r4)
1000e7d4:	2c3ffd17 	ldw	r16,-12(r5)
1000e7d8:	dfc00215 	stw	ra,8(sp)
1000e7dc:	8c000a2e 	bgeu	r17,r16,1000e808 <_ZNKSs7compareERKSs+0x4c>
1000e7e0:	880d883a 	mov	r6,r17
1000e7e4:	30000226 	beq	r6,zero,1000e7f0 <_ZNKSs7compareERKSs+0x34>
1000e7e8:	0016ba80 	call	10016ba8 <memcmp>
1000e7ec:	1000011e 	bne	r2,zero,1000e7f4 <_ZNKSs7compareERKSs+0x38>
1000e7f0:	8c05c83a 	sub	r2,r17,r16
1000e7f4:	dfc00217 	ldw	ra,8(sp)
1000e7f8:	dc400117 	ldw	r17,4(sp)
1000e7fc:	dc000017 	ldw	r16,0(sp)
1000e800:	dec00304 	addi	sp,sp,12
1000e804:	f800283a 	ret
1000e808:	800d883a 	mov	r6,r16
1000e80c:	003ff506 	br	1000e7e4 <_ZNKSs7compareERKSs+0x28>

1000e810 <_ZNKSs7compareEjjRKSs>:
1000e810:	21000017 	ldw	r4,0(r4)
1000e814:	defffd04 	addi	sp,sp,-12
1000e818:	dc000015 	stw	r16,0(sp)
1000e81c:	243ffd17 	ldw	r16,-12(r4)
1000e820:	dfc00215 	stw	ra,8(sp)
1000e824:	dc400115 	stw	r17,4(sp)
1000e828:	2805883a 	mov	r2,r5
1000e82c:	81401836 	bltu	r16,r5,1000e890 <_ZNKSs7compareEjjRKSs+0x80>
1000e830:	8161c83a 	sub	r16,r16,r5
1000e834:	34001036 	bltu	r6,r16,1000e878 <_ZNKSs7compareEjjRKSs+0x68>
1000e838:	39400017 	ldw	r5,0(r7)
1000e83c:	2c7ffd17 	ldw	r17,-12(r5)
1000e840:	880d883a 	mov	r6,r17
1000e844:	84400a36 	bltu	r16,r17,1000e870 <_ZNKSs7compareEjjRKSs+0x60>
1000e848:	30000326 	beq	r6,zero,1000e858 <_ZNKSs7compareEjjRKSs+0x48>
1000e84c:	2089883a 	add	r4,r4,r2
1000e850:	0016ba80 	call	10016ba8 <memcmp>
1000e854:	1000011e 	bne	r2,zero,1000e85c <_ZNKSs7compareEjjRKSs+0x4c>
1000e858:	8445c83a 	sub	r2,r16,r17
1000e85c:	dfc00217 	ldw	ra,8(sp)
1000e860:	dc400117 	ldw	r17,4(sp)
1000e864:	dc000017 	ldw	r16,0(sp)
1000e868:	dec00304 	addi	sp,sp,12
1000e86c:	f800283a 	ret
1000e870:	800d883a 	mov	r6,r16
1000e874:	003ff406 	br	1000e848 <_ZNKSs7compareEjjRKSs+0x38>
1000e878:	39400017 	ldw	r5,0(r7)
1000e87c:	3021883a 	mov	r16,r6
1000e880:	2c7ffd17 	ldw	r17,-12(r5)
1000e884:	880d883a 	mov	r6,r17
1000e888:	847fef2e 	bgeu	r16,r17,1000e848 <_ZNKSs7compareEjjRKSs+0x38>
1000e88c:	003ff806 	br	1000e870 <_ZNKSs7compareEjjRKSs+0x60>
1000e890:	014400b4 	movhi	r5,4098
1000e894:	010400b4 	movhi	r4,4098
1000e898:	800f883a 	mov	r7,r16
1000e89c:	100d883a 	mov	r6,r2
1000e8a0:	29581204 	addi	r5,r5,24648
1000e8a4:	2117ee04 	addi	r4,r4,24504
1000e8a8:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e8ac <_ZNKSs7compareEjjRKSsjj>:
1000e8ac:	21000017 	ldw	r4,0(r4)
1000e8b0:	defffd04 	addi	sp,sp,-12
1000e8b4:	dc400115 	stw	r17,4(sp)
1000e8b8:	247ffd17 	ldw	r17,-12(r4)
1000e8bc:	dfc00215 	stw	ra,8(sp)
1000e8c0:	dc000015 	stw	r16,0(sp)
1000e8c4:	2805883a 	mov	r2,r5
1000e8c8:	d8c00317 	ldw	r3,12(sp)
1000e8cc:	da000417 	ldw	r8,16(sp)
1000e8d0:	89402536 	bltu	r17,r5,1000e968 <_ZNKSs7compareEjjRKSsjj+0xbc>
1000e8d4:	39400017 	ldw	r5,0(r7)
1000e8d8:	2c3ffd17 	ldw	r16,-12(r5)
1000e8dc:	80c01b36 	bltu	r16,r3,1000e94c <_ZNKSs7compareEjjRKSsjj+0xa0>
1000e8e0:	88a3c83a 	sub	r17,r17,r2
1000e8e4:	34401536 	bltu	r6,r17,1000e93c <_ZNKSs7compareEjjRKSsjj+0x90>
1000e8e8:	80e1c83a 	sub	r16,r16,r3
1000e8ec:	44000f36 	bltu	r8,r16,1000e92c <_ZNKSs7compareEjjRKSsjj+0x80>
1000e8f0:	800d883a 	mov	r6,r16
1000e8f4:	8c000b36 	bltu	r17,r16,1000e924 <_ZNKSs7compareEjjRKSsjj+0x78>
1000e8f8:	30000426 	beq	r6,zero,1000e90c <_ZNKSs7compareEjjRKSsjj+0x60>
1000e8fc:	28cb883a 	add	r5,r5,r3
1000e900:	2089883a 	add	r4,r4,r2
1000e904:	0016ba80 	call	10016ba8 <memcmp>
1000e908:	1000011e 	bne	r2,zero,1000e910 <_ZNKSs7compareEjjRKSsjj+0x64>
1000e90c:	8c05c83a 	sub	r2,r17,r16
1000e910:	dfc00217 	ldw	ra,8(sp)
1000e914:	dc400117 	ldw	r17,4(sp)
1000e918:	dc000017 	ldw	r16,0(sp)
1000e91c:	dec00304 	addi	sp,sp,12
1000e920:	f800283a 	ret
1000e924:	880d883a 	mov	r6,r17
1000e928:	003ff306 	br	1000e8f8 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000e92c:	4021883a 	mov	r16,r8
1000e930:	800d883a 	mov	r6,r16
1000e934:	8c3ff02e 	bgeu	r17,r16,1000e8f8 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000e938:	003ffa06 	br	1000e924 <_ZNKSs7compareEjjRKSsjj+0x78>
1000e93c:	80e1c83a 	sub	r16,r16,r3
1000e940:	3023883a 	mov	r17,r6
1000e944:	443fea2e 	bgeu	r8,r16,1000e8f0 <_ZNKSs7compareEjjRKSsjj+0x44>
1000e948:	003ff806 	br	1000e92c <_ZNKSs7compareEjjRKSsjj+0x80>
1000e94c:	014400b4 	movhi	r5,4098
1000e950:	010400b4 	movhi	r4,4098
1000e954:	800f883a 	mov	r7,r16
1000e958:	180d883a 	mov	r6,r3
1000e95c:	29581204 	addi	r5,r5,24648
1000e960:	2117ee04 	addi	r4,r4,24504
1000e964:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
1000e968:	014400b4 	movhi	r5,4098
1000e96c:	010400b4 	movhi	r4,4098
1000e970:	880f883a 	mov	r7,r17
1000e974:	100d883a 	mov	r6,r2
1000e978:	29581204 	addi	r5,r5,24648
1000e97c:	2117ee04 	addi	r4,r4,24504
1000e980:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000e984 <_ZNKSs7compareEPKc>:
1000e984:	defffb04 	addi	sp,sp,-20
1000e988:	dc800215 	stw	r18,8(sp)
1000e98c:	24800017 	ldw	r18,0(r4)
1000e990:	dc400115 	stw	r17,4(sp)
1000e994:	2809883a 	mov	r4,r5
1000e998:	947ffd17 	ldw	r17,-12(r18)
1000e99c:	dcc00315 	stw	r19,12(sp)
1000e9a0:	dc000015 	stw	r16,0(sp)
1000e9a4:	dfc00415 	stw	ra,16(sp)
1000e9a8:	2827883a 	mov	r19,r5
1000e9ac:	00178f00 	call	100178f0 <strlen>
1000e9b0:	1021883a 	mov	r16,r2
1000e9b4:	88800e2e 	bgeu	r17,r2,1000e9f0 <_ZNKSs7compareEPKc+0x6c>
1000e9b8:	880d883a 	mov	r6,r17
1000e9bc:	30000426 	beq	r6,zero,1000e9d0 <_ZNKSs7compareEPKc+0x4c>
1000e9c0:	980b883a 	mov	r5,r19
1000e9c4:	9009883a 	mov	r4,r18
1000e9c8:	0016ba80 	call	10016ba8 <memcmp>
1000e9cc:	1000011e 	bne	r2,zero,1000e9d4 <_ZNKSs7compareEPKc+0x50>
1000e9d0:	8c05c83a 	sub	r2,r17,r16
1000e9d4:	dfc00417 	ldw	ra,16(sp)
1000e9d8:	dcc00317 	ldw	r19,12(sp)
1000e9dc:	dc800217 	ldw	r18,8(sp)
1000e9e0:	dc400117 	ldw	r17,4(sp)
1000e9e4:	dc000017 	ldw	r16,0(sp)
1000e9e8:	dec00504 	addi	sp,sp,20
1000e9ec:	f800283a 	ret
1000e9f0:	100d883a 	mov	r6,r2
1000e9f4:	003ff106 	br	1000e9bc <_ZNKSs7compareEPKc+0x38>

1000e9f8 <_ZNKSs7compareEjjPKc>:
1000e9f8:	defffa04 	addi	sp,sp,-24
1000e9fc:	dcc00315 	stw	r19,12(sp)
1000ea00:	24c00017 	ldw	r19,0(r4)
1000ea04:	dc000015 	stw	r16,0(sp)
1000ea08:	dc800215 	stw	r18,8(sp)
1000ea0c:	9c3ffd17 	ldw	r16,-12(r19)
1000ea10:	dfc00515 	stw	ra,20(sp)
1000ea14:	dd000415 	stw	r20,16(sp)
1000ea18:	dc400115 	stw	r17,4(sp)
1000ea1c:	2825883a 	mov	r18,r5
1000ea20:	81401a36 	bltu	r16,r5,1000ea8c <_ZNKSs7compareEjjPKc+0x94>
1000ea24:	8161c83a 	sub	r16,r16,r5
1000ea28:	3829883a 	mov	r20,r7
1000ea2c:	34001536 	bltu	r6,r16,1000ea84 <_ZNKSs7compareEjjPKc+0x8c>
1000ea30:	a009883a 	mov	r4,r20
1000ea34:	00178f00 	call	100178f0 <strlen>
1000ea38:	1023883a 	mov	r17,r2
1000ea3c:	100d883a 	mov	r6,r2
1000ea40:	80800e36 	bltu	r16,r2,1000ea7c <_ZNKSs7compareEjjPKc+0x84>
1000ea44:	30000426 	beq	r6,zero,1000ea58 <_ZNKSs7compareEjjPKc+0x60>
1000ea48:	a00b883a 	mov	r5,r20
1000ea4c:	9c89883a 	add	r4,r19,r18
1000ea50:	0016ba80 	call	10016ba8 <memcmp>
1000ea54:	1000011e 	bne	r2,zero,1000ea5c <_ZNKSs7compareEjjPKc+0x64>
1000ea58:	8445c83a 	sub	r2,r16,r17
1000ea5c:	dfc00517 	ldw	ra,20(sp)
1000ea60:	dd000417 	ldw	r20,16(sp)
1000ea64:	dcc00317 	ldw	r19,12(sp)
1000ea68:	dc800217 	ldw	r18,8(sp)
1000ea6c:	dc400117 	ldw	r17,4(sp)
1000ea70:	dc000017 	ldw	r16,0(sp)
1000ea74:	dec00604 	addi	sp,sp,24
1000ea78:	f800283a 	ret
1000ea7c:	800d883a 	mov	r6,r16
1000ea80:	003ff006 	br	1000ea44 <_ZNKSs7compareEjjPKc+0x4c>
1000ea84:	3021883a 	mov	r16,r6
1000ea88:	003fe906 	br	1000ea30 <_ZNKSs7compareEjjPKc+0x38>
1000ea8c:	014400b4 	movhi	r5,4098
1000ea90:	010400b4 	movhi	r4,4098
1000ea94:	800f883a 	mov	r7,r16
1000ea98:	900d883a 	mov	r6,r18
1000ea9c:	29581204 	addi	r5,r5,24648
1000eaa0:	2117ee04 	addi	r4,r4,24504
1000eaa4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000eaa8 <_ZNKSs7compareEjjPKcj>:
1000eaa8:	21000017 	ldw	r4,0(r4)
1000eaac:	defffd04 	addi	sp,sp,-12
1000eab0:	dc000015 	stw	r16,0(sp)
1000eab4:	243ffd17 	ldw	r16,-12(r4)
1000eab8:	dc400115 	stw	r17,4(sp)
1000eabc:	dfc00215 	stw	ra,8(sp)
1000eac0:	2805883a 	mov	r2,r5
1000eac4:	dc400317 	ldw	r17,12(sp)
1000eac8:	81401536 	bltu	r16,r5,1000eb20 <_ZNKSs7compareEjjPKcj+0x78>
1000eacc:	8161c83a 	sub	r16,r16,r5
1000ead0:	34000f36 	bltu	r6,r16,1000eb10 <_ZNKSs7compareEjjPKcj+0x68>
1000ead4:	800d883a 	mov	r6,r16
1000ead8:	8c000b36 	bltu	r17,r16,1000eb08 <_ZNKSs7compareEjjPKcj+0x60>
1000eadc:	30000426 	beq	r6,zero,1000eaf0 <_ZNKSs7compareEjjPKcj+0x48>
1000eae0:	380b883a 	mov	r5,r7
1000eae4:	2089883a 	add	r4,r4,r2
1000eae8:	0016ba80 	call	10016ba8 <memcmp>
1000eaec:	1000011e 	bne	r2,zero,1000eaf4 <_ZNKSs7compareEjjPKcj+0x4c>
1000eaf0:	8445c83a 	sub	r2,r16,r17
1000eaf4:	dfc00217 	ldw	ra,8(sp)
1000eaf8:	dc400117 	ldw	r17,4(sp)
1000eafc:	dc000017 	ldw	r16,0(sp)
1000eb00:	dec00304 	addi	sp,sp,12
1000eb04:	f800283a 	ret
1000eb08:	880d883a 	mov	r6,r17
1000eb0c:	003ff306 	br	1000eadc <_ZNKSs7compareEjjPKcj+0x34>
1000eb10:	3021883a 	mov	r16,r6
1000eb14:	800d883a 	mov	r6,r16
1000eb18:	8c3ff02e 	bgeu	r17,r16,1000eadc <_ZNKSs7compareEjjPKcj+0x34>
1000eb1c:	003ffa06 	br	1000eb08 <_ZNKSs7compareEjjPKcj+0x60>
1000eb20:	014400b4 	movhi	r5,4098
1000eb24:	010400b4 	movhi	r4,4098
1000eb28:	800f883a 	mov	r7,r16
1000eb2c:	100d883a 	mov	r6,r2
1000eb30:	29581204 	addi	r5,r5,24648
1000eb34:	2117ee04 	addi	r4,r4,24504
1000eb38:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000eb3c <_ZNSs12_Alloc_hiderC1EPcRKSaIcE>:
1000eb3c:	21400015 	stw	r5,0(r4)
1000eb40:	f800283a 	ret

1000eb44 <_ZNSs4_Rep12_S_empty_repEv>:
1000eb44:	008400f4 	movhi	r2,4099
1000eb48:	10a9aa04 	addi	r2,r2,-22872
1000eb4c:	f800283a 	ret

1000eb50 <_ZNKSs4_Rep12_M_is_leakedEv>:
1000eb50:	20800217 	ldw	r2,8(r4)
1000eb54:	1004d7fa 	srli	r2,r2,31
1000eb58:	f800283a 	ret

1000eb5c <_ZNKSs4_Rep12_M_is_sharedEv>:
1000eb5c:	20800217 	ldw	r2,8(r4)
1000eb60:	0084803a 	cmplt	r2,zero,r2
1000eb64:	f800283a 	ret

1000eb68 <_ZNSs4_Rep13_M_set_leakedEv>:
1000eb68:	00bfffc4 	movi	r2,-1
1000eb6c:	20800215 	stw	r2,8(r4)
1000eb70:	f800283a 	ret

1000eb74 <_ZNSs4_Rep15_M_set_sharableEv>:
1000eb74:	20000215 	stw	zero,8(r4)
1000eb78:	f800283a 	ret

1000eb7c <_ZNSs4_Rep26_M_set_length_and_sharableEj>:
1000eb7c:	008400f4 	movhi	r2,4099
1000eb80:	10a9aa04 	addi	r2,r2,-22872
1000eb84:	2080011e 	bne	r4,r2,1000eb8c <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x10>
1000eb88:	f800283a 	ret
1000eb8c:	20000215 	stw	zero,8(r4)
1000eb90:	21400015 	stw	r5,0(r4)
1000eb94:	2149883a 	add	r4,r4,r5
1000eb98:	20000305 	stb	zero,12(r4)
1000eb9c:	003ffa06 	br	1000eb88 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0xc>

1000eba0 <_ZNSs4_Rep10_M_refdataEv>:
1000eba0:	20800304 	addi	r2,r4,12
1000eba4:	f800283a 	ret

1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
1000eba8:	defffe04 	addi	sp,sp,-8
1000ebac:	00900034 	movhi	r2,16384
1000ebb0:	dfc00115 	stw	ra,4(sp)
1000ebb4:	dc000015 	stw	r16,0(sp)
1000ebb8:	10bfff04 	addi	r2,r2,-4
1000ebbc:	11001a36 	bltu	r2,r4,1000ec28 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x80>
1000ebc0:	2021883a 	mov	r16,r4
1000ebc4:	29000e2e 	bgeu	r5,r4,1000ec00 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000ebc8:	2945883a 	add	r2,r5,r5
1000ebcc:	2080012e 	bgeu	r4,r2,1000ebd4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x2c>
1000ebd0:	1021883a 	mov	r16,r2
1000ebd4:	80800744 	addi	r2,r16,29
1000ebd8:	10c40070 	cmpltui	r3,r2,4097
1000ebdc:	81000344 	addi	r4,r16,13
1000ebe0:	1800081e 	bne	r3,zero,1000ec04 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000ebe4:	2c00072e 	bgeu	r5,r16,1000ec04 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000ebe8:	84040004 	addi	r16,r16,4096
1000ebec:	1083ffcc 	andi	r2,r2,4095
1000ebf0:	00d00034 	movhi	r3,16384
1000ebf4:	80a1c83a 	sub	r16,r16,r2
1000ebf8:	18ffff04 	addi	r3,r3,-4
1000ebfc:	1c000836 	bltu	r3,r16,1000ec20 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x78>
1000ec00:	81000344 	addi	r4,r16,13
1000ec04:	00088e80 	call	100088e8 <_Znwj>
1000ec08:	14000115 	stw	r16,4(r2)
1000ec0c:	10000215 	stw	zero,8(r2)
1000ec10:	dfc00117 	ldw	ra,4(sp)
1000ec14:	dc000017 	ldw	r16,0(sp)
1000ec18:	dec00204 	addi	sp,sp,8
1000ec1c:	f800283a 	ret
1000ec20:	1821883a 	mov	r16,r3
1000ec24:	003ff606 	br	1000ec00 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000ec28:	010400b4 	movhi	r4,4098
1000ec2c:	21181804 	addi	r4,r4,24672
1000ec30:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1000ec34 <_ZNSs12_S_constructEjcRKSaIcE>:
1000ec34:	2000041e 	bne	r4,zero,1000ec48 <_ZNSs12_S_constructEjcRKSaIcE+0x14>
1000ec38:	00c400f4 	movhi	r3,4099
1000ec3c:	18e9ad04 	addi	r3,r3,-22860
1000ec40:	1805883a 	mov	r2,r3
1000ec44:	f800283a 	ret
1000ec48:	defffc04 	addi	sp,sp,-16
1000ec4c:	dc400115 	stw	r17,4(sp)
1000ec50:	2823883a 	mov	r17,r5
1000ec54:	000b883a 	mov	r5,zero
1000ec58:	dc800215 	stw	r18,8(sp)
1000ec5c:	dc000015 	stw	r16,0(sp)
1000ec60:	dfc00315 	stw	ra,12(sp)
1000ec64:	2021883a 	mov	r16,r4
1000ec68:	000eba80 	call	1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000ec6c:	1025883a 	mov	r18,r2
1000ec70:	80800058 	cmpnei	r2,r16,1
1000ec74:	90c00304 	addi	r3,r18,12
1000ec78:	10001126 	beq	r2,zero,1000ecc0 <_ZNSs12_S_constructEjcRKSaIcE+0x8c>
1000ec7c:	89403fcc 	andi	r5,r17,255
1000ec80:	2940201c 	xori	r5,r5,128
1000ec84:	1809883a 	mov	r4,r3
1000ec88:	800d883a 	mov	r6,r16
1000ec8c:	297fe004 	addi	r5,r5,-128
1000ec90:	0016e600 	call	10016e60 <memset>
1000ec94:	1007883a 	mov	r3,r2
1000ec98:	008400f4 	movhi	r2,4099
1000ec9c:	10a9aa04 	addi	r2,r2,-22872
1000eca0:	9080091e 	bne	r18,r2,1000ecc8 <_ZNSs12_S_constructEjcRKSaIcE+0x94>
1000eca4:	1805883a 	mov	r2,r3
1000eca8:	dfc00317 	ldw	ra,12(sp)
1000ecac:	dc800217 	ldw	r18,8(sp)
1000ecb0:	dc400117 	ldw	r17,4(sp)
1000ecb4:	dc000017 	ldw	r16,0(sp)
1000ecb8:	dec00404 	addi	sp,sp,16
1000ecbc:	f800283a 	ret
1000ecc0:	94400305 	stb	r17,12(r18)
1000ecc4:	003ff406 	br	1000ec98 <_ZNSs12_S_constructEjcRKSaIcE+0x64>
1000ecc8:	90000215 	stw	zero,8(r18)
1000eccc:	94000015 	stw	r16,0(r18)
1000ecd0:	9405883a 	add	r2,r18,r16
1000ecd4:	10000305 	stb	zero,12(r2)
1000ecd8:	003ff206 	br	1000eca4 <_ZNSs12_S_constructEjcRKSaIcE+0x70>

1000ecdc <_ZNSsC1ERKSaIcE>:
1000ecdc:	defffe04 	addi	sp,sp,-8
1000ece0:	dc000015 	stw	r16,0(sp)
1000ece4:	280d883a 	mov	r6,r5
1000ece8:	2021883a 	mov	r16,r4
1000ecec:	000b883a 	mov	r5,zero
1000ecf0:	0009883a 	mov	r4,zero
1000ecf4:	dfc00115 	stw	ra,4(sp)
1000ecf8:	000ec340 	call	1000ec34 <_ZNSs12_S_constructEjcRKSaIcE>
1000ecfc:	80800015 	stw	r2,0(r16)
1000ed00:	dfc00117 	ldw	ra,4(sp)
1000ed04:	dc000017 	ldw	r16,0(sp)
1000ed08:	dec00204 	addi	sp,sp,8
1000ed0c:	f800283a 	ret

1000ed10 <_ZNSsC1EjcRKSaIcE>:
1000ed10:	2805883a 	mov	r2,r5
1000ed14:	31403fcc 	andi	r5,r6,255
1000ed18:	defffe04 	addi	sp,sp,-8
1000ed1c:	2940201c 	xori	r5,r5,128
1000ed20:	dc000015 	stw	r16,0(sp)
1000ed24:	297fe004 	addi	r5,r5,-128
1000ed28:	2021883a 	mov	r16,r4
1000ed2c:	380d883a 	mov	r6,r7
1000ed30:	1009883a 	mov	r4,r2
1000ed34:	dfc00115 	stw	ra,4(sp)
1000ed38:	000ec340 	call	1000ec34 <_ZNSs12_S_constructEjcRKSaIcE>
1000ed3c:	80800015 	stw	r2,0(r16)
1000ed40:	dfc00117 	ldw	ra,4(sp)
1000ed44:	dc000017 	ldw	r16,0(sp)
1000ed48:	dec00204 	addi	sp,sp,8
1000ed4c:	f800283a 	ret

1000ed50 <_ZNSs18_S_construct_aux_2EjcRKSaIcE>:
1000ed50:	29403fcc 	andi	r5,r5,255
1000ed54:	2940201c 	xori	r5,r5,128
1000ed58:	297fe004 	addi	r5,r5,-128
1000ed5c:	000ec341 	jmpi	1000ec34 <_ZNSs12_S_constructEjcRKSaIcE>

1000ed60 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>:
1000ed60:	defffc04 	addi	sp,sp,-16
1000ed64:	dc000015 	stw	r16,0(sp)
1000ed68:	2921c83a 	sub	r16,r5,r4
1000ed6c:	dc800215 	stw	r18,8(sp)
1000ed70:	000b883a 	mov	r5,zero
1000ed74:	2025883a 	mov	r18,r4
1000ed78:	8009883a 	mov	r4,r16
1000ed7c:	dc400115 	stw	r17,4(sp)
1000ed80:	dfc00315 	stw	ra,12(sp)
1000ed84:	000eba80 	call	1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000ed88:	1023883a 	mov	r17,r2
1000ed8c:	80800058 	cmpnei	r2,r16,1
1000ed90:	88c00304 	addi	r3,r17,12
1000ed94:	10000f26 	beq	r2,zero,1000edd4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x74>
1000ed98:	1809883a 	mov	r4,r3
1000ed9c:	800d883a 	mov	r6,r16
1000eda0:	900b883a 	mov	r5,r18
1000eda4:	0016c340 	call	10016c34 <memcpy>
1000eda8:	1007883a 	mov	r3,r2
1000edac:	008400f4 	movhi	r2,4099
1000edb0:	10a9aa04 	addi	r2,r2,-22872
1000edb4:	88800c1e 	bne	r17,r2,1000ede8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x88>
1000edb8:	1805883a 	mov	r2,r3
1000edbc:	dfc00317 	ldw	ra,12(sp)
1000edc0:	dc800217 	ldw	r18,8(sp)
1000edc4:	dc400117 	ldw	r17,4(sp)
1000edc8:	dc000017 	ldw	r16,0(sp)
1000edcc:	dec00404 	addi	sp,sp,16
1000edd0:	f800283a 	ret
1000edd4:	90800003 	ldbu	r2,0(r18)
1000edd8:	88800305 	stb	r2,12(r17)
1000eddc:	008400f4 	movhi	r2,4099
1000ede0:	10a9aa04 	addi	r2,r2,-22872
1000ede4:	88bff426 	beq	r17,r2,1000edb8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>
1000ede8:	8c000015 	stw	r16,0(r17)
1000edec:	88000215 	stw	zero,8(r17)
1000edf0:	8c21883a 	add	r16,r17,r16
1000edf4:	80000305 	stb	zero,12(r16)
1000edf8:	003fef06 	br	1000edb8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>

1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>:
1000edfc:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

1000ee00 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>:
1000ee00:	20800217 	ldw	r2,8(r4)
1000ee04:	11bfffc4 	addi	r6,r2,-1
1000ee08:	21800215 	stw	r6,8(r4)
1000ee0c:	0080010e 	bge	zero,r2,1000ee14 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12+0x14>
1000ee10:	f800283a 	ret
1000ee14:	000edfc1 	jmpi	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000ee18 <_ZNSs4_Rep10_M_disposeERKSaIcE>:
1000ee18:	008400f4 	movhi	r2,4099
1000ee1c:	10a9aa04 	addi	r2,r2,-22872
1000ee20:	2080011e 	bne	r4,r2,1000ee28 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x10>
1000ee24:	f800283a 	ret
1000ee28:	20800217 	ldw	r2,8(r4)
1000ee2c:	11bfffc4 	addi	r6,r2,-1
1000ee30:	21800215 	stw	r6,8(r4)
1000ee34:	00bffb16 	blt	zero,r2,1000ee24 <_ZNSs4_Rep10_M_disposeERKSaIcE+0xc>
1000ee38:	000edfc1 	jmpi	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000ee3c <_ZNSsD1Ev>:
1000ee3c:	20c00017 	ldw	r3,0(r4)
1000ee40:	008400f4 	movhi	r2,4099
1000ee44:	10a9aa04 	addi	r2,r2,-22872
1000ee48:	193ffd04 	addi	r4,r3,-12
1000ee4c:	2080011e 	bne	r4,r2,1000ee54 <_ZNSsD1Ev+0x18>
1000ee50:	f800283a 	ret
1000ee54:	18bfff17 	ldw	r2,-4(r3)
1000ee58:	117fffc4 	addi	r5,r2,-1
1000ee5c:	197fff15 	stw	r5,-4(r3)
1000ee60:	00bffb16 	blt	zero,r2,1000ee50 <_ZNSsD1Ev+0x14>
1000ee64:	defffe04 	addi	sp,sp,-8
1000ee68:	d94000c4 	addi	r5,sp,3
1000ee6c:	dfc00115 	stw	ra,4(sp)
1000ee70:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000ee74:	dfc00117 	ldw	ra,4(sp)
1000ee78:	dec00204 	addi	sp,sp,8
1000ee7c:	f800283a 	ret

1000ee80 <_ZNSs5clearEv>:
1000ee80:	20800017 	ldw	r2,0(r4)
1000ee84:	00c400f4 	movhi	r3,4099
1000ee88:	18e9aa04 	addi	r3,r3,-22872
1000ee8c:	117fff17 	ldw	r5,-4(r2)
1000ee90:	11bffd04 	addi	r6,r2,-12
1000ee94:	0140050e 	bge	zero,r5,1000eeac <_ZNSs5clearEv+0x2c>
1000ee98:	30c0061e 	bne	r6,r3,1000eeb4 <_ZNSs5clearEv+0x34>
1000ee9c:	008400f4 	movhi	r2,4099
1000eea0:	10a9ad04 	addi	r2,r2,-22860
1000eea4:	20800015 	stw	r2,0(r4)
1000eea8:	f800283a 	ret
1000eeac:	30c0041e 	bne	r6,r3,1000eec0 <_ZNSs5clearEv+0x40>
1000eeb0:	f800283a 	ret
1000eeb4:	297fffc4 	addi	r5,r5,-1
1000eeb8:	117fff15 	stw	r5,-4(r2)
1000eebc:	003ff706 	br	1000ee9c <_ZNSs5clearEv+0x1c>
1000eec0:	103fff15 	stw	zero,-4(r2)
1000eec4:	103ffd15 	stw	zero,-12(r2)
1000eec8:	10000005 	stb	zero,0(r2)
1000eecc:	003ff806 	br	1000eeb0 <_ZNSs5clearEv+0x30>

1000eed0 <_ZNSs9_M_mutateEjjj>:
1000eed0:	defff604 	addi	sp,sp,-40
1000eed4:	dc000115 	stw	r16,4(sp)
1000eed8:	24000017 	ldw	r16,0(r4)
1000eedc:	dd000515 	stw	r20,20(sp)
1000eee0:	39a9c83a 	sub	r20,r7,r6
1000eee4:	80bffd17 	ldw	r2,-12(r16)
1000eee8:	80fffe17 	ldw	r3,-8(r16)
1000eeec:	ddc00815 	stw	r23,32(sp)
1000eef0:	dd800715 	stw	r22,28(sp)
1000eef4:	dd400615 	stw	r21,24(sp)
1000eef8:	dcc00415 	stw	r19,16(sp)
1000eefc:	dc400215 	stw	r17,8(sp)
1000ef00:	316f883a 	add	r23,r6,r5
1000ef04:	dfc00915 	stw	ra,36(sp)
1000ef08:	dc800315 	stw	r18,12(sp)
1000ef0c:	a0a9883a 	add	r20,r20,r2
1000ef10:	202b883a 	mov	r21,r4
1000ef14:	382d883a 	mov	r22,r7
1000ef18:	2823883a 	mov	r17,r5
1000ef1c:	15e7c83a 	sub	r19,r2,r23
1000ef20:	1d000236 	bltu	r3,r20,1000ef2c <_ZNSs9_M_mutateEjjj+0x5c>
1000ef24:	80bfff17 	ldw	r2,-4(r16)
1000ef28:	00802b0e 	bge	zero,r2,1000efd8 <_ZNSs9_M_mutateEjjj+0x108>
1000ef2c:	d98000c4 	addi	r6,sp,3
1000ef30:	180b883a 	mov	r5,r3
1000ef34:	a009883a 	mov	r4,r20
1000ef38:	000eba80 	call	1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000ef3c:	1025883a 	mov	r18,r2
1000ef40:	88001d1e 	bne	r17,zero,1000efb8 <_ZNSs9_M_mutateEjjj+0xe8>
1000ef44:	14000304 	addi	r16,r2,12
1000ef48:	a9400017 	ldw	r5,0(r21)
1000ef4c:	98000926 	beq	r19,zero,1000ef74 <_ZNSs9_M_mutateEjjj+0xa4>
1000ef50:	8c400304 	addi	r17,r17,12
1000ef54:	8da3883a 	add	r17,r17,r22
1000ef58:	98800058 	cmpnei	r2,r19,1
1000ef5c:	9449883a 	add	r4,r18,r17
1000ef60:	2dcb883a 	add	r5,r5,r23
1000ef64:	10003626 	beq	r2,zero,1000f040 <_ZNSs9_M_mutateEjjj+0x170>
1000ef68:	980d883a 	mov	r6,r19
1000ef6c:	0016c340 	call	10016c34 <memcpy>
1000ef70:	a9400017 	ldw	r5,0(r21)
1000ef74:	044400f4 	movhi	r17,4099
1000ef78:	293ffd04 	addi	r4,r5,-12
1000ef7c:	8c69aa04 	addi	r17,r17,-22872
1000ef80:	2440331e 	bne	r4,r17,1000f050 <_ZNSs9_M_mutateEjjj+0x180>
1000ef84:	ac000015 	stw	r16,0(r21)
1000ef88:	9440211e 	bne	r18,r17,1000f010 <_ZNSs9_M_mutateEjjj+0x140>
1000ef8c:	dfc00917 	ldw	ra,36(sp)
1000ef90:	ddc00817 	ldw	r23,32(sp)
1000ef94:	dd800717 	ldw	r22,28(sp)
1000ef98:	dd400617 	ldw	r21,24(sp)
1000ef9c:	dd000517 	ldw	r20,20(sp)
1000efa0:	dcc00417 	ldw	r19,16(sp)
1000efa4:	dc800317 	ldw	r18,12(sp)
1000efa8:	dc400217 	ldw	r17,8(sp)
1000efac:	dc000117 	ldw	r16,4(sp)
1000efb0:	dec00a04 	addi	sp,sp,40
1000efb4:	f800283a 	ret
1000efb8:	88800058 	cmpnei	r2,r17,1
1000efbc:	94000304 	addi	r16,r18,12
1000efc0:	a9400017 	ldw	r5,0(r21)
1000efc4:	10001b26 	beq	r2,zero,1000f034 <_ZNSs9_M_mutateEjjj+0x164>
1000efc8:	880d883a 	mov	r6,r17
1000efcc:	8009883a 	mov	r4,r16
1000efd0:	0016c340 	call	10016c34 <memcpy>
1000efd4:	003fdc06 	br	1000ef48 <_ZNSs9_M_mutateEjjj+0x78>
1000efd8:	98001226 	beq	r19,zero,1000f024 <_ZNSs9_M_mutateEjjj+0x154>
1000efdc:	39801126 	beq	r7,r6,1000f024 <_ZNSs9_M_mutateEjjj+0x154>
1000efe0:	3963883a 	add	r17,r7,r5
1000efe4:	98800058 	cmpnei	r2,r19,1
1000efe8:	8449883a 	add	r4,r16,r17
1000efec:	85cb883a 	add	r5,r16,r23
1000eff0:	10001e26 	beq	r2,zero,1000f06c <_ZNSs9_M_mutateEjjj+0x19c>
1000eff4:	980d883a 	mov	r6,r19
1000eff8:	0016d340 	call	10016d34 <memmove>
1000effc:	ac000017 	ldw	r16,0(r21)
1000f000:	044400f4 	movhi	r17,4099
1000f004:	8c69aa04 	addi	r17,r17,-22872
1000f008:	84bffd04 	addi	r18,r16,-12
1000f00c:	947fdf26 	beq	r18,r17,1000ef8c <_ZNSs9_M_mutateEjjj+0xbc>
1000f010:	803fff15 	stw	zero,-4(r16)
1000f014:	853ffd15 	stw	r20,-12(r16)
1000f018:	8521883a 	add	r16,r16,r20
1000f01c:	80000005 	stb	zero,0(r16)
1000f020:	003fda06 	br	1000ef8c <_ZNSs9_M_mutateEjjj+0xbc>
1000f024:	044400f4 	movhi	r17,4099
1000f028:	84bffd04 	addi	r18,r16,-12
1000f02c:	8c69aa04 	addi	r17,r17,-22872
1000f030:	003fd506 	br	1000ef88 <_ZNSs9_M_mutateEjjj+0xb8>
1000f034:	28800003 	ldbu	r2,0(r5)
1000f038:	90800305 	stb	r2,12(r18)
1000f03c:	003fc206 	br	1000ef48 <_ZNSs9_M_mutateEjjj+0x78>
1000f040:	28800003 	ldbu	r2,0(r5)
1000f044:	20800005 	stb	r2,0(r4)
1000f048:	a9400017 	ldw	r5,0(r21)
1000f04c:	003fc906 	br	1000ef74 <_ZNSs9_M_mutateEjjj+0xa4>
1000f050:	28bfff17 	ldw	r2,-4(r5)
1000f054:	10ffffc4 	addi	r3,r2,-1
1000f058:	28ffff15 	stw	r3,-4(r5)
1000f05c:	00bfc916 	blt	zero,r2,1000ef84 <_ZNSs9_M_mutateEjjj+0xb4>
1000f060:	d94000c4 	addi	r5,sp,3
1000f064:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000f068:	003fc606 	br	1000ef84 <_ZNSs9_M_mutateEjjj+0xb4>
1000f06c:	28800003 	ldbu	r2,0(r5)
1000f070:	044400f4 	movhi	r17,4099
1000f074:	8c69aa04 	addi	r17,r17,-22872
1000f078:	20800005 	stb	r2,0(r4)
1000f07c:	ac000017 	ldw	r16,0(r21)
1000f080:	84bffd04 	addi	r18,r16,-12
1000f084:	003fc006 	br	1000ef88 <_ZNSs9_M_mutateEjjj+0xb8>

1000f088 <_ZNSs12_M_leak_hardEv>:
1000f088:	20c00017 	ldw	r3,0(r4)
1000f08c:	008400f4 	movhi	r2,4099
1000f090:	10a9aa04 	addi	r2,r2,-22872
1000f094:	19bffd04 	addi	r6,r3,-12
1000f098:	30800526 	beq	r6,r2,1000f0b0 <_ZNSs12_M_leak_hardEv+0x28>
1000f09c:	18bfff17 	ldw	r2,-4(r3)
1000f0a0:	00800416 	blt	zero,r2,1000f0b4 <_ZNSs12_M_leak_hardEv+0x2c>
1000f0a4:	00bfffc4 	movi	r2,-1
1000f0a8:	18bfff15 	stw	r2,-4(r3)
1000f0ac:	f800283a 	ret
1000f0b0:	f800283a 	ret
1000f0b4:	defffe04 	addi	sp,sp,-8
1000f0b8:	000f883a 	mov	r7,zero
1000f0bc:	000d883a 	mov	r6,zero
1000f0c0:	000b883a 	mov	r5,zero
1000f0c4:	dc000015 	stw	r16,0(sp)
1000f0c8:	dfc00115 	stw	ra,4(sp)
1000f0cc:	2021883a 	mov	r16,r4
1000f0d0:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f0d4:	80c00017 	ldw	r3,0(r16)
1000f0d8:	00bfffc4 	movi	r2,-1
1000f0dc:	18bfff15 	stw	r2,-4(r3)
1000f0e0:	dfc00117 	ldw	ra,4(sp)
1000f0e4:	dc000017 	ldw	r16,0(sp)
1000f0e8:	dec00204 	addi	sp,sp,8
1000f0ec:	f800283a 	ret

1000f0f0 <_ZNSs7_M_leakEv>:
1000f0f0:	20800017 	ldw	r2,0(r4)
1000f0f4:	10bfff17 	ldw	r2,-4(r2)
1000f0f8:	1000010e 	bge	r2,zero,1000f100 <_ZNSs7_M_leakEv+0x10>
1000f0fc:	f800283a 	ret
1000f100:	000f0881 	jmpi	1000f088 <_ZNSs12_M_leak_hardEv>

1000f104 <_ZNSs5beginEv>:
1000f104:	20800017 	ldw	r2,0(r4)
1000f108:	117fff17 	ldw	r5,-4(r2)
1000f10c:	2800010e 	bge	r5,zero,1000f114 <_ZNSs5beginEv+0x10>
1000f110:	f800283a 	ret
1000f114:	defffe04 	addi	sp,sp,-8
1000f118:	dc000015 	stw	r16,0(sp)
1000f11c:	dfc00115 	stw	ra,4(sp)
1000f120:	2021883a 	mov	r16,r4
1000f124:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f128:	80800017 	ldw	r2,0(r16)
1000f12c:	dfc00117 	ldw	ra,4(sp)
1000f130:	dc000017 	ldw	r16,0(sp)
1000f134:	dec00204 	addi	sp,sp,8
1000f138:	f800283a 	ret

1000f13c <_ZNSs4rendEv>:
1000f13c:	28c00017 	ldw	r3,0(r5)
1000f140:	2005883a 	mov	r2,r4
1000f144:	193fff17 	ldw	r4,-4(r3)
1000f148:	2000020e 	bge	r4,zero,1000f154 <_ZNSs4rendEv+0x18>
1000f14c:	10c00015 	stw	r3,0(r2)
1000f150:	f800283a 	ret
1000f154:	defffd04 	addi	sp,sp,-12
1000f158:	2809883a 	mov	r4,r5
1000f15c:	dfc00215 	stw	ra,8(sp)
1000f160:	d8800115 	stw	r2,4(sp)
1000f164:	d9400015 	stw	r5,0(sp)
1000f168:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f16c:	d9400017 	ldw	r5,0(sp)
1000f170:	d8800117 	ldw	r2,4(sp)
1000f174:	28c00017 	ldw	r3,0(r5)
1000f178:	10c00015 	stw	r3,0(r2)
1000f17c:	dfc00217 	ldw	ra,8(sp)
1000f180:	dec00304 	addi	sp,sp,12
1000f184:	f800283a 	ret

1000f188 <_ZNSs3endEv>:
1000f188:	20800017 	ldw	r2,0(r4)
1000f18c:	117fff17 	ldw	r5,-4(r2)
1000f190:	2800030e 	bge	r5,zero,1000f1a0 <_ZNSs3endEv+0x18>
1000f194:	10fffd17 	ldw	r3,-12(r2)
1000f198:	10c5883a 	add	r2,r2,r3
1000f19c:	f800283a 	ret
1000f1a0:	defffe04 	addi	sp,sp,-8
1000f1a4:	dc000015 	stw	r16,0(sp)
1000f1a8:	dfc00115 	stw	ra,4(sp)
1000f1ac:	2021883a 	mov	r16,r4
1000f1b0:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f1b4:	80800017 	ldw	r2,0(r16)
1000f1b8:	10fffd17 	ldw	r3,-12(r2)
1000f1bc:	10c5883a 	add	r2,r2,r3
1000f1c0:	dfc00117 	ldw	ra,4(sp)
1000f1c4:	dc000017 	ldw	r16,0(sp)
1000f1c8:	dec00204 	addi	sp,sp,8
1000f1cc:	f800283a 	ret

1000f1d0 <_ZNSs6rbeginEv>:
1000f1d0:	28c00017 	ldw	r3,0(r5)
1000f1d4:	defffd04 	addi	sp,sp,-12
1000f1d8:	dc000115 	stw	r16,4(sp)
1000f1dc:	18bfff17 	ldw	r2,-4(r3)
1000f1e0:	dfc00215 	stw	ra,8(sp)
1000f1e4:	2021883a 	mov	r16,r4
1000f1e8:	10000516 	blt	r2,zero,1000f200 <_ZNSs6rbeginEv+0x30>
1000f1ec:	2809883a 	mov	r4,r5
1000f1f0:	d9400015 	stw	r5,0(sp)
1000f1f4:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f1f8:	d9400017 	ldw	r5,0(sp)
1000f1fc:	28c00017 	ldw	r3,0(r5)
1000f200:	193ffd17 	ldw	r4,-12(r3)
1000f204:	8005883a 	mov	r2,r16
1000f208:	1907883a 	add	r3,r3,r4
1000f20c:	80c00015 	stw	r3,0(r16)
1000f210:	dfc00217 	ldw	ra,8(sp)
1000f214:	dc000117 	ldw	r16,4(sp)
1000f218:	dec00304 	addi	sp,sp,12
1000f21c:	f800283a 	ret

1000f220 <_ZNSsixEj>:
1000f220:	20800017 	ldw	r2,0(r4)
1000f224:	10ffff17 	ldw	r3,-4(r2)
1000f228:	1800020e 	bge	r3,zero,1000f234 <_ZNSsixEj+0x14>
1000f22c:	1145883a 	add	r2,r2,r5
1000f230:	f800283a 	ret
1000f234:	defffd04 	addi	sp,sp,-12
1000f238:	dc000115 	stw	r16,4(sp)
1000f23c:	dfc00215 	stw	ra,8(sp)
1000f240:	2021883a 	mov	r16,r4
1000f244:	d9400015 	stw	r5,0(sp)
1000f248:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f24c:	80800017 	ldw	r2,0(r16)
1000f250:	d9400017 	ldw	r5,0(sp)
1000f254:	1145883a 	add	r2,r2,r5
1000f258:	dfc00217 	ldw	ra,8(sp)
1000f25c:	dc000117 	ldw	r16,4(sp)
1000f260:	dec00304 	addi	sp,sp,12
1000f264:	f800283a 	ret

1000f268 <_ZNSs5frontEv>:
1000f268:	20800017 	ldw	r2,0(r4)
1000f26c:	117fff17 	ldw	r5,-4(r2)
1000f270:	2800010e 	bge	r5,zero,1000f278 <_ZNSs5frontEv+0x10>
1000f274:	f800283a 	ret
1000f278:	defffe04 	addi	sp,sp,-8
1000f27c:	dc000015 	stw	r16,0(sp)
1000f280:	dfc00115 	stw	ra,4(sp)
1000f284:	2021883a 	mov	r16,r4
1000f288:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f28c:	80800017 	ldw	r2,0(r16)
1000f290:	dfc00117 	ldw	ra,4(sp)
1000f294:	dc000017 	ldw	r16,0(sp)
1000f298:	dec00204 	addi	sp,sp,8
1000f29c:	f800283a 	ret

1000f2a0 <_ZNSs4backEv>:
1000f2a0:	20c00017 	ldw	r3,0(r4)
1000f2a4:	defffd04 	addi	sp,sp,-12
1000f2a8:	dc000015 	stw	r16,0(sp)
1000f2ac:	197fff17 	ldw	r5,-4(r3)
1000f2b0:	1c3ffd17 	ldw	r16,-12(r3)
1000f2b4:	dfc00215 	stw	ra,8(sp)
1000f2b8:	dc400115 	stw	r17,4(sp)
1000f2bc:	843fffc4 	addi	r16,r16,-1
1000f2c0:	28000316 	blt	r5,zero,1000f2d0 <_ZNSs4backEv+0x30>
1000f2c4:	2023883a 	mov	r17,r4
1000f2c8:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f2cc:	88c00017 	ldw	r3,0(r17)
1000f2d0:	1c05883a 	add	r2,r3,r16
1000f2d4:	dfc00217 	ldw	ra,8(sp)
1000f2d8:	dc400117 	ldw	r17,4(sp)
1000f2dc:	dc000017 	ldw	r16,0(sp)
1000f2e0:	dec00304 	addi	sp,sp,12
1000f2e4:	f800283a 	ret

1000f2e8 <_ZNSs2atEj>:
1000f2e8:	20800017 	ldw	r2,0(r4)
1000f2ec:	defffd04 	addi	sp,sp,-12
1000f2f0:	dfc00215 	stw	ra,8(sp)
1000f2f4:	11bffd17 	ldw	r6,-12(r2)
1000f2f8:	dc400115 	stw	r17,4(sp)
1000f2fc:	dc000015 	stw	r16,0(sp)
1000f300:	29800c2e 	bgeu	r5,r6,1000f334 <_ZNSs2atEj+0x4c>
1000f304:	10ffff17 	ldw	r3,-4(r2)
1000f308:	2821883a 	mov	r16,r5
1000f30c:	18000316 	blt	r3,zero,1000f31c <_ZNSs2atEj+0x34>
1000f310:	2023883a 	mov	r17,r4
1000f314:	000f0880 	call	1000f088 <_ZNSs12_M_leak_hardEv>
1000f318:	88800017 	ldw	r2,0(r17)
1000f31c:	1405883a 	add	r2,r2,r16
1000f320:	dfc00217 	ldw	ra,8(sp)
1000f324:	dc400117 	ldw	r17,4(sp)
1000f328:	dc000017 	ldw	r16,0(sp)
1000f32c:	dec00304 	addi	sp,sp,12
1000f330:	f800283a 	ret
1000f334:	010400b4 	movhi	r4,4098
1000f338:	2117fc04 	addi	r4,r4,24560
1000f33c:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f340 <_ZNSs5eraseEjj>:
1000f340:	20800017 	ldw	r2,0(r4)
1000f344:	defffe04 	addi	sp,sp,-8
1000f348:	dfc00115 	stw	ra,4(sp)
1000f34c:	10fffd17 	ldw	r3,-12(r2)
1000f350:	dc000015 	stw	r16,0(sp)
1000f354:	2811883a 	mov	r8,r5
1000f358:	19400f36 	bltu	r3,r5,1000f398 <_ZNSs5eraseEjj+0x58>
1000f35c:	1947c83a 	sub	r3,r3,r5
1000f360:	2021883a 	mov	r16,r4
1000f364:	30c00a36 	bltu	r6,r3,1000f390 <_ZNSs5eraseEjj+0x50>
1000f368:	000f883a 	mov	r7,zero
1000f36c:	180d883a 	mov	r6,r3
1000f370:	400b883a 	mov	r5,r8
1000f374:	8009883a 	mov	r4,r16
1000f378:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f37c:	8005883a 	mov	r2,r16
1000f380:	dfc00117 	ldw	ra,4(sp)
1000f384:	dc000017 	ldw	r16,0(sp)
1000f388:	dec00204 	addi	sp,sp,8
1000f38c:	f800283a 	ret
1000f390:	3007883a 	mov	r3,r6
1000f394:	003ff406 	br	1000f368 <_ZNSs5eraseEjj+0x28>
1000f398:	014400b4 	movhi	r5,4098
1000f39c:	010400b4 	movhi	r4,4098
1000f3a0:	180f883a 	mov	r7,r3
1000f3a4:	400d883a 	mov	r6,r8
1000f3a8:	29581e04 	addi	r5,r5,24696
1000f3ac:	2117ee04 	addi	r4,r4,24504
1000f3b0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f3b4 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE>:
1000f3b4:	defffd04 	addi	sp,sp,-12
1000f3b8:	dc000015 	stw	r16,0(sp)
1000f3bc:	24000017 	ldw	r16,0(r4)
1000f3c0:	000f883a 	mov	r7,zero
1000f3c4:	01800044 	movi	r6,1
1000f3c8:	2c21c83a 	sub	r16,r5,r16
1000f3cc:	800b883a 	mov	r5,r16
1000f3d0:	dc400115 	stw	r17,4(sp)
1000f3d4:	dfc00215 	stw	ra,8(sp)
1000f3d8:	2023883a 	mov	r17,r4
1000f3dc:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f3e0:	88800017 	ldw	r2,0(r17)
1000f3e4:	00ffffc4 	movi	r3,-1
1000f3e8:	10ffff15 	stw	r3,-4(r2)
1000f3ec:	1405883a 	add	r2,r2,r16
1000f3f0:	dfc00217 	ldw	ra,8(sp)
1000f3f4:	dc400117 	ldw	r17,4(sp)
1000f3f8:	dc000017 	ldw	r16,0(sp)
1000f3fc:	dec00304 	addi	sp,sp,12
1000f400:	f800283a 	ret

1000f404 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_>:
1000f404:	314dc83a 	sub	r6,r6,r5
1000f408:	3000021e 	bne	r6,zero,1000f414 <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_+0x10>
1000f40c:	2805883a 	mov	r2,r5
1000f410:	f800283a 	ret
1000f414:	20800017 	ldw	r2,0(r4)
1000f418:	defffd04 	addi	sp,sp,-12
1000f41c:	dc000015 	stw	r16,0(sp)
1000f420:	28a1c83a 	sub	r16,r5,r2
1000f424:	800b883a 	mov	r5,r16
1000f428:	000f883a 	mov	r7,zero
1000f42c:	dc400115 	stw	r17,4(sp)
1000f430:	dfc00215 	stw	ra,8(sp)
1000f434:	2023883a 	mov	r17,r4
1000f438:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f43c:	89400017 	ldw	r5,0(r17)
1000f440:	00bfffc4 	movi	r2,-1
1000f444:	28bfff15 	stw	r2,-4(r5)
1000f448:	2c05883a 	add	r2,r5,r16
1000f44c:	dfc00217 	ldw	ra,8(sp)
1000f450:	dc400117 	ldw	r17,4(sp)
1000f454:	dc000017 	ldw	r16,0(sp)
1000f458:	dec00304 	addi	sp,sp,12
1000f45c:	f800283a 	ret

1000f460 <_ZNSs14_M_replace_auxEjjjc>:
1000f460:	20c00017 	ldw	r3,0(r4)
1000f464:	00900034 	movhi	r2,16384
1000f468:	10bfff04 	addi	r2,r2,-4
1000f46c:	18fffd17 	ldw	r3,-12(r3)
1000f470:	defffb04 	addi	sp,sp,-20
1000f474:	3085883a 	add	r2,r6,r2
1000f478:	dcc00315 	stw	r19,12(sp)
1000f47c:	dfc00415 	stw	ra,16(sp)
1000f480:	dc800215 	stw	r18,8(sp)
1000f484:	dc400115 	stw	r17,4(sp)
1000f488:	dc000015 	stw	r16,0(sp)
1000f48c:	10c5c83a 	sub	r2,r2,r3
1000f490:	dcc00517 	ldw	r19,20(sp)
1000f494:	11c01836 	bltu	r2,r7,1000f4f8 <_ZNSs14_M_replace_auxEjjjc+0x98>
1000f498:	3821883a 	mov	r16,r7
1000f49c:	2023883a 	mov	r17,r4
1000f4a0:	2825883a 	mov	r18,r5
1000f4a4:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f4a8:	80000926 	beq	r16,zero,1000f4d0 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000f4ac:	89000017 	ldw	r4,0(r17)
1000f4b0:	80800058 	cmpnei	r2,r16,1
1000f4b4:	2489883a 	add	r4,r4,r18
1000f4b8:	10000d26 	beq	r2,zero,1000f4f0 <_ZNSs14_M_replace_auxEjjjc+0x90>
1000f4bc:	99403fcc 	andi	r5,r19,255
1000f4c0:	2940201c 	xori	r5,r5,128
1000f4c4:	800d883a 	mov	r6,r16
1000f4c8:	297fe004 	addi	r5,r5,-128
1000f4cc:	0016e600 	call	10016e60 <memset>
1000f4d0:	8805883a 	mov	r2,r17
1000f4d4:	dfc00417 	ldw	ra,16(sp)
1000f4d8:	dcc00317 	ldw	r19,12(sp)
1000f4dc:	dc800217 	ldw	r18,8(sp)
1000f4e0:	dc400117 	ldw	r17,4(sp)
1000f4e4:	dc000017 	ldw	r16,0(sp)
1000f4e8:	dec00504 	addi	sp,sp,20
1000f4ec:	f800283a 	ret
1000f4f0:	24c00005 	stb	r19,0(r4)
1000f4f4:	003ff606 	br	1000f4d0 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000f4f8:	010400b4 	movhi	r4,4098
1000f4fc:	21182304 	addi	r4,r4,24716
1000f500:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1000f504 <_ZNSs6assignEjc>:
1000f504:	31803fcc 	andi	r6,r6,255
1000f508:	20800017 	ldw	r2,0(r4)
1000f50c:	3180201c 	xori	r6,r6,128
1000f510:	defffe04 	addi	sp,sp,-8
1000f514:	31bfe004 	addi	r6,r6,-128
1000f518:	d9800015 	stw	r6,0(sp)
1000f51c:	11bffd17 	ldw	r6,-12(r2)
1000f520:	280f883a 	mov	r7,r5
1000f524:	000b883a 	mov	r5,zero
1000f528:	dfc00115 	stw	ra,4(sp)
1000f52c:	000f4600 	call	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f530:	dfc00117 	ldw	ra,4(sp)
1000f534:	dec00204 	addi	sp,sp,8
1000f538:	f800283a 	ret

1000f53c <_ZNSsaSEc>:
1000f53c:	29403fcc 	andi	r5,r5,255
1000f540:	20800017 	ldw	r2,0(r4)
1000f544:	2940201c 	xori	r5,r5,128
1000f548:	defffd04 	addi	sp,sp,-12
1000f54c:	297fe004 	addi	r5,r5,-128
1000f550:	d9400015 	stw	r5,0(sp)
1000f554:	11bffd17 	ldw	r6,-12(r2)
1000f558:	01c00044 	movi	r7,1
1000f55c:	000b883a 	mov	r5,zero
1000f560:	dc000115 	stw	r16,4(sp)
1000f564:	dfc00215 	stw	ra,8(sp)
1000f568:	2021883a 	mov	r16,r4
1000f56c:	000f4600 	call	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f570:	8005883a 	mov	r2,r16
1000f574:	dfc00217 	ldw	ra,8(sp)
1000f578:	dc000117 	ldw	r16,4(sp)
1000f57c:	dec00304 	addi	sp,sp,12
1000f580:	f800283a 	ret

1000f584 <_ZNSs6insertEjjc>:
1000f584:	20c00017 	ldw	r3,0(r4)
1000f588:	defffe04 	addi	sp,sp,-8
1000f58c:	dfc00115 	stw	ra,4(sp)
1000f590:	18fffd17 	ldw	r3,-12(r3)
1000f594:	19400a36 	bltu	r3,r5,1000f5c0 <_ZNSs6insertEjjc+0x3c>
1000f598:	39c03fcc 	andi	r7,r7,255
1000f59c:	39c0201c 	xori	r7,r7,128
1000f5a0:	39ffe004 	addi	r7,r7,-128
1000f5a4:	d9c00015 	stw	r7,0(sp)
1000f5a8:	300f883a 	mov	r7,r6
1000f5ac:	000d883a 	mov	r6,zero
1000f5b0:	000f4600 	call	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f5b4:	dfc00117 	ldw	ra,4(sp)
1000f5b8:	dec00204 	addi	sp,sp,8
1000f5bc:	f800283a 	ret
1000f5c0:	2805883a 	mov	r2,r5
1000f5c4:	010400b4 	movhi	r4,4098
1000f5c8:	014400b4 	movhi	r5,4098
1000f5cc:	180f883a 	mov	r7,r3
1000f5d0:	100d883a 	mov	r6,r2
1000f5d4:	29582b04 	addi	r5,r5,24748
1000f5d8:	2117ee04 	addi	r4,r4,24504
1000f5dc:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f5e0 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>:
1000f5e0:	defffc04 	addi	sp,sp,-16
1000f5e4:	dc000115 	stw	r16,4(sp)
1000f5e8:	24000017 	ldw	r16,0(r4)
1000f5ec:	31803fcc 	andi	r6,r6,255
1000f5f0:	3180201c 	xori	r6,r6,128
1000f5f4:	2c21c83a 	sub	r16,r5,r16
1000f5f8:	31bfe004 	addi	r6,r6,-128
1000f5fc:	d9800015 	stw	r6,0(sp)
1000f600:	01c00044 	movi	r7,1
1000f604:	000d883a 	mov	r6,zero
1000f608:	800b883a 	mov	r5,r16
1000f60c:	dc400215 	stw	r17,8(sp)
1000f610:	dfc00315 	stw	ra,12(sp)
1000f614:	2023883a 	mov	r17,r4
1000f618:	000f4600 	call	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f61c:	88800017 	ldw	r2,0(r17)
1000f620:	00ffffc4 	movi	r3,-1
1000f624:	10ffff15 	stw	r3,-4(r2)
1000f628:	1405883a 	add	r2,r2,r16
1000f62c:	dfc00317 	ldw	ra,12(sp)
1000f630:	dc400217 	ldw	r17,8(sp)
1000f634:	dc000117 	ldw	r16,4(sp)
1000f638:	dec00404 	addi	sp,sp,16
1000f63c:	f800283a 	ret

1000f640 <_ZNSs7replaceEjjjc>:
1000f640:	20800017 	ldw	r2,0(r4)
1000f644:	deffff04 	addi	sp,sp,-4
1000f648:	dfc00015 	stw	ra,0(sp)
1000f64c:	10bffd17 	ldw	r2,-12(r2)
1000f650:	d8c00117 	ldw	r3,4(sp)
1000f654:	11400c36 	bltu	r2,r5,1000f688 <_ZNSs7replaceEjjjc+0x48>
1000f658:	1145c83a 	sub	r2,r2,r5
1000f65c:	30800836 	bltu	r6,r2,1000f680 <_ZNSs7replaceEjjjc+0x40>
1000f660:	18c03fcc 	andi	r3,r3,255
1000f664:	18c0201c 	xori	r3,r3,128
1000f668:	18ffe004 	addi	r3,r3,-128
1000f66c:	100d883a 	mov	r6,r2
1000f670:	d8c00115 	stw	r3,4(sp)
1000f674:	dfc00017 	ldw	ra,0(sp)
1000f678:	dec00104 	addi	sp,sp,4
1000f67c:	000f4601 	jmpi	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f680:	3005883a 	mov	r2,r6
1000f684:	003ff606 	br	1000f660 <_ZNSs7replaceEjjjc+0x20>
1000f688:	280d883a 	mov	r6,r5
1000f68c:	010400b4 	movhi	r4,4098
1000f690:	014400b4 	movhi	r5,4098
1000f694:	100f883a 	mov	r7,r2
1000f698:	29583104 	addi	r5,r5,24772
1000f69c:	2117ee04 	addi	r4,r4,24504
1000f6a0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f6a4 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc>:
1000f6a4:	20800017 	ldw	r2,0(r4)
1000f6a8:	d8c00007 	ldb	r3,0(sp)
1000f6ac:	314dc83a 	sub	r6,r6,r5
1000f6b0:	288bc83a 	sub	r5,r5,r2
1000f6b4:	d8c00015 	stw	r3,0(sp)
1000f6b8:	000f4601 	jmpi	1000f460 <_ZNSs14_M_replace_auxEjjjc>

1000f6bc <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc>:
1000f6bc:	20800017 	ldw	r2,0(r4)
1000f6c0:	39c03fcc 	andi	r7,r7,255
1000f6c4:	39c0201c 	xori	r7,r7,128
1000f6c8:	defffe04 	addi	sp,sp,-8
1000f6cc:	39ffe004 	addi	r7,r7,-128
1000f6d0:	d9c00015 	stw	r7,0(sp)
1000f6d4:	288bc83a 	sub	r5,r5,r2
1000f6d8:	300f883a 	mov	r7,r6
1000f6dc:	000d883a 	mov	r6,zero
1000f6e0:	dfc00115 	stw	ra,4(sp)
1000f6e4:	000f4600 	call	1000f460 <_ZNSs14_M_replace_auxEjjjc>
1000f6e8:	dfc00117 	ldw	ra,4(sp)
1000f6ec:	dec00204 	addi	sp,sp,8
1000f6f0:	f800283a 	ret

1000f6f4 <_ZNSs15_M_replace_safeEjjPKcj>:
1000f6f4:	defffb04 	addi	sp,sp,-20
1000f6f8:	dc000015 	stw	r16,0(sp)
1000f6fc:	dc000517 	ldw	r16,20(sp)
1000f700:	dc800215 	stw	r18,8(sp)
1000f704:	3825883a 	mov	r18,r7
1000f708:	800f883a 	mov	r7,r16
1000f70c:	dcc00315 	stw	r19,12(sp)
1000f710:	dc400115 	stw	r17,4(sp)
1000f714:	dfc00415 	stw	ra,16(sp)
1000f718:	2023883a 	mov	r17,r4
1000f71c:	2827883a 	mov	r19,r5
1000f720:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f724:	80000726 	beq	r16,zero,1000f744 <_ZNSs15_M_replace_safeEjjPKcj+0x50>
1000f728:	89000017 	ldw	r4,0(r17)
1000f72c:	80800058 	cmpnei	r2,r16,1
1000f730:	24c9883a 	add	r4,r4,r19
1000f734:	10000b26 	beq	r2,zero,1000f764 <_ZNSs15_M_replace_safeEjjPKcj+0x70>
1000f738:	800d883a 	mov	r6,r16
1000f73c:	900b883a 	mov	r5,r18
1000f740:	0016c340 	call	10016c34 <memcpy>
1000f744:	8805883a 	mov	r2,r17
1000f748:	dfc00417 	ldw	ra,16(sp)
1000f74c:	dcc00317 	ldw	r19,12(sp)
1000f750:	dc800217 	ldw	r18,8(sp)
1000f754:	dc400117 	ldw	r17,4(sp)
1000f758:	dc000017 	ldw	r16,0(sp)
1000f75c:	dec00504 	addi	sp,sp,20
1000f760:	f800283a 	ret
1000f764:	90800003 	ldbu	r2,0(r18)
1000f768:	20800005 	stb	r2,0(r4)
1000f76c:	003ff506 	br	1000f744 <_ZNSs15_M_replace_safeEjjPKcj+0x50>

1000f770 <_ZNSs6assignEPKcj>:
1000f770:	defffc04 	addi	sp,sp,-16
1000f774:	dc000115 	stw	r16,4(sp)
1000f778:	2021883a 	mov	r16,r4
1000f77c:	21000017 	ldw	r4,0(r4)
1000f780:	00900034 	movhi	r2,16384
1000f784:	dfc00315 	stw	ra,12(sp)
1000f788:	dc400215 	stw	r17,8(sp)
1000f78c:	10bfff04 	addi	r2,r2,-4
1000f790:	20fffd17 	ldw	r3,-12(r4)
1000f794:	11802c36 	bltu	r2,r6,1000f848 <_ZNSs6assignEPKcj+0xd8>
1000f798:	3023883a 	mov	r17,r6
1000f79c:	280f883a 	mov	r7,r5
1000f7a0:	29000a2e 	bgeu	r5,r4,1000f7cc <_ZNSs6assignEPKcj+0x5c>
1000f7a4:	dc400015 	stw	r17,0(sp)
1000f7a8:	180d883a 	mov	r6,r3
1000f7ac:	000b883a 	mov	r5,zero
1000f7b0:	8009883a 	mov	r4,r16
1000f7b4:	000f6f40 	call	1000f6f4 <_ZNSs15_M_replace_safeEjjPKcj>
1000f7b8:	dfc00317 	ldw	ra,12(sp)
1000f7bc:	dc400217 	ldw	r17,8(sp)
1000f7c0:	dc000117 	ldw	r16,4(sp)
1000f7c4:	dec00404 	addi	sp,sp,16
1000f7c8:	f800283a 	ret
1000f7cc:	20c5883a 	add	r2,r4,r3
1000f7d0:	117ff436 	bltu	r2,r5,1000f7a4 <_ZNSs6assignEPKcj+0x34>
1000f7d4:	20bfff17 	ldw	r2,-4(r4)
1000f7d8:	00bff216 	blt	zero,r2,1000f7a4 <_ZNSs6assignEPKcj+0x34>
1000f7dc:	2905c83a 	sub	r2,r5,r4
1000f7e0:	11800f2e 	bgeu	r2,r6,1000f820 <_ZNSs6assignEPKcj+0xb0>
1000f7e4:	10000426 	beq	r2,zero,1000f7f8 <_ZNSs6assignEPKcj+0x88>
1000f7e8:	30800058 	cmpnei	r2,r6,1
1000f7ec:	10001226 	beq	r2,zero,1000f838 <_ZNSs6assignEPKcj+0xc8>
1000f7f0:	0016d340 	call	10016d34 <memmove>
1000f7f4:	81000017 	ldw	r4,0(r16)
1000f7f8:	00c400f4 	movhi	r3,4099
1000f7fc:	217ffd04 	addi	r5,r4,-12
1000f800:	18e9aa04 	addi	r3,r3,-22872
1000f804:	8005883a 	mov	r2,r16
1000f808:	28ffeb26 	beq	r5,r3,1000f7b8 <_ZNSs6assignEPKcj+0x48>
1000f80c:	203fff15 	stw	zero,-4(r4)
1000f810:	247ffd15 	stw	r17,-12(r4)
1000f814:	2449883a 	add	r4,r4,r17
1000f818:	20000005 	stb	zero,0(r4)
1000f81c:	003fe606 	br	1000f7b8 <_ZNSs6assignEPKcj+0x48>
1000f820:	30800058 	cmpnei	r2,r6,1
1000f824:	10000426 	beq	r2,zero,1000f838 <_ZNSs6assignEPKcj+0xc8>
1000f828:	303ff326 	beq	r6,zero,1000f7f8 <_ZNSs6assignEPKcj+0x88>
1000f82c:	0016c340 	call	10016c34 <memcpy>
1000f830:	81000017 	ldw	r4,0(r16)
1000f834:	003ff006 	br	1000f7f8 <_ZNSs6assignEPKcj+0x88>
1000f838:	38800003 	ldbu	r2,0(r7)
1000f83c:	20800005 	stb	r2,0(r4)
1000f840:	81000017 	ldw	r4,0(r16)
1000f844:	003fec06 	br	1000f7f8 <_ZNSs6assignEPKcj+0x88>
1000f848:	010400b4 	movhi	r4,4098
1000f84c:	21183704 	addi	r4,r4,24796
1000f850:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1000f854 <_ZNSsaSESt16initializer_listIcE>:
1000f854:	defffe04 	addi	sp,sp,-8
1000f858:	dc000015 	stw	r16,0(sp)
1000f85c:	dfc00115 	stw	ra,4(sp)
1000f860:	2021883a 	mov	r16,r4
1000f864:	000f7700 	call	1000f770 <_ZNSs6assignEPKcj>
1000f868:	8005883a 	mov	r2,r16
1000f86c:	dfc00117 	ldw	ra,4(sp)
1000f870:	dc000017 	ldw	r16,0(sp)
1000f874:	dec00204 	addi	sp,sp,8
1000f878:	f800283a 	ret

1000f87c <_ZNSs6assignERKSsjj>:
1000f87c:	29400017 	ldw	r5,0(r5)
1000f880:	28bffd17 	ldw	r2,-12(r5)
1000f884:	11800836 	bltu	r2,r6,1000f8a8 <_ZNSs6assignERKSsjj+0x2c>
1000f888:	3007883a 	mov	r3,r6
1000f88c:	118dc83a 	sub	r6,r2,r6
1000f890:	39800236 	bltu	r7,r6,1000f89c <_ZNSs6assignERKSsjj+0x20>
1000f894:	28cb883a 	add	r5,r5,r3
1000f898:	000f7701 	jmpi	1000f770 <_ZNSs6assignEPKcj>
1000f89c:	380d883a 	mov	r6,r7
1000f8a0:	28cb883a 	add	r5,r5,r3
1000f8a4:	000f7701 	jmpi	1000f770 <_ZNSs6assignEPKcj>
1000f8a8:	014400b4 	movhi	r5,4098
1000f8ac:	010400b4 	movhi	r4,4098
1000f8b0:	deffff04 	addi	sp,sp,-4
1000f8b4:	100f883a 	mov	r7,r2
1000f8b8:	29583704 	addi	r5,r5,24796
1000f8bc:	2117ee04 	addi	r4,r4,24504
1000f8c0:	dfc00015 	stw	ra,0(sp)
1000f8c4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000f8c8 <_ZNSs6assignEPKc>:
1000f8c8:	defffd04 	addi	sp,sp,-12
1000f8cc:	dc000115 	stw	r16,4(sp)
1000f8d0:	2021883a 	mov	r16,r4
1000f8d4:	2809883a 	mov	r4,r5
1000f8d8:	dfc00215 	stw	ra,8(sp)
1000f8dc:	d9400015 	stw	r5,0(sp)
1000f8e0:	00178f00 	call	100178f0 <strlen>
1000f8e4:	d9400017 	ldw	r5,0(sp)
1000f8e8:	100d883a 	mov	r6,r2
1000f8ec:	8009883a 	mov	r4,r16
1000f8f0:	dfc00217 	ldw	ra,8(sp)
1000f8f4:	dc000117 	ldw	r16,4(sp)
1000f8f8:	dec00304 	addi	sp,sp,12
1000f8fc:	000f7701 	jmpi	1000f770 <_ZNSs6assignEPKcj>

1000f900 <_ZNSsaSEPKc>:
1000f900:	defffd04 	addi	sp,sp,-12
1000f904:	dc000115 	stw	r16,4(sp)
1000f908:	2021883a 	mov	r16,r4
1000f90c:	2809883a 	mov	r4,r5
1000f910:	dfc00215 	stw	ra,8(sp)
1000f914:	d9400015 	stw	r5,0(sp)
1000f918:	00178f00 	call	100178f0 <strlen>
1000f91c:	d9400017 	ldw	r5,0(sp)
1000f920:	100d883a 	mov	r6,r2
1000f924:	8009883a 	mov	r4,r16
1000f928:	dfc00217 	ldw	ra,8(sp)
1000f92c:	dc000117 	ldw	r16,4(sp)
1000f930:	dec00304 	addi	sp,sp,12
1000f934:	000f7701 	jmpi	1000f770 <_ZNSs6assignEPKcj>

1000f938 <_ZNSs6assignESt16initializer_listIcE>:
1000f938:	000f7701 	jmpi	1000f770 <_ZNSs6assignEPKcj>

1000f93c <_ZNSs6insertEjPKcj>:
1000f93c:	22000017 	ldw	r8,0(r4)
1000f940:	defffa04 	addi	sp,sp,-24
1000f944:	dcc00415 	stw	r19,16(sp)
1000f948:	40bffd17 	ldw	r2,-12(r8)
1000f94c:	dfc00515 	stw	ra,20(sp)
1000f950:	dc800315 	stw	r18,12(sp)
1000f954:	dc400215 	stw	r17,8(sp)
1000f958:	dc000115 	stw	r16,4(sp)
1000f95c:	2827883a 	mov	r19,r5
1000f960:	11405636 	bltu	r2,r5,1000fabc <_ZNSs6insertEjPKcj+0x180>
1000f964:	00d00034 	movhi	r3,16384
1000f968:	18ffff04 	addi	r3,r3,-4
1000f96c:	1887c83a 	sub	r3,r3,r2
1000f970:	3825883a 	mov	r18,r7
1000f974:	19c04e36 	bltu	r3,r7,1000fab0 <_ZNSs6insertEjPKcj+0x174>
1000f978:	2021883a 	mov	r16,r4
1000f97c:	3023883a 	mov	r17,r6
1000f980:	32000d2e 	bgeu	r6,r8,1000f9b8 <_ZNSs6insertEjPKcj+0x7c>
1000f984:	dc800015 	stw	r18,0(sp)
1000f988:	880f883a 	mov	r7,r17
1000f98c:	000d883a 	mov	r6,zero
1000f990:	980b883a 	mov	r5,r19
1000f994:	8009883a 	mov	r4,r16
1000f998:	000f6f40 	call	1000f6f4 <_ZNSs15_M_replace_safeEjjPKcj>
1000f99c:	dfc00517 	ldw	ra,20(sp)
1000f9a0:	dcc00417 	ldw	r19,16(sp)
1000f9a4:	dc800317 	ldw	r18,12(sp)
1000f9a8:	dc400217 	ldw	r17,8(sp)
1000f9ac:	dc000117 	ldw	r16,4(sp)
1000f9b0:	dec00604 	addi	sp,sp,24
1000f9b4:	f800283a 	ret
1000f9b8:	4085883a 	add	r2,r8,r2
1000f9bc:	11bff136 	bltu	r2,r6,1000f984 <_ZNSs6insertEjPKcj+0x48>
1000f9c0:	40bfff17 	ldw	r2,-4(r8)
1000f9c4:	00bfef16 	blt	zero,r2,1000f984 <_ZNSs6insertEjPKcj+0x48>
1000f9c8:	000d883a 	mov	r6,zero
1000f9cc:	8a23c83a 	sub	r17,r17,r8
1000f9d0:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
1000f9d4:	80c00017 	ldw	r3,0(r16)
1000f9d8:	1c4b883a 	add	r5,r3,r17
1000f9dc:	2c85883a 	add	r2,r5,r18
1000f9e0:	1cc7883a 	add	r3,r3,r19
1000f9e4:	18800836 	bltu	r3,r2,1000fa08 <_ZNSs6insertEjPKcj+0xcc>
1000f9e8:	90800058 	cmpnei	r2,r18,1
1000f9ec:	10002126 	beq	r2,zero,1000fa74 <_ZNSs6insertEjPKcj+0x138>
1000f9f0:	90001e26 	beq	r18,zero,1000fa6c <_ZNSs6insertEjPKcj+0x130>
1000f9f4:	900d883a 	mov	r6,r18
1000f9f8:	1809883a 	mov	r4,r3
1000f9fc:	0016c340 	call	10016c34 <memcpy>
1000fa00:	8005883a 	mov	r2,r16
1000fa04:	003fe506 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000fa08:	28c00936 	bltu	r5,r3,1000fa30 <_ZNSs6insertEjPKcj+0xf4>
1000fa0c:	91000058 	cmpnei	r4,r18,1
1000fa10:	20001f26 	beq	r4,zero,1000fa90 <_ZNSs6insertEjPKcj+0x154>
1000fa14:	90001526 	beq	r18,zero,1000fa6c <_ZNSs6insertEjPKcj+0x130>
1000fa18:	900d883a 	mov	r6,r18
1000fa1c:	100b883a 	mov	r5,r2
1000fa20:	1809883a 	mov	r4,r3
1000fa24:	0016c340 	call	10016c34 <memcpy>
1000fa28:	8005883a 	mov	r2,r16
1000fa2c:	003fdb06 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000fa30:	9c63c83a 	sub	r17,r19,r17
1000fa34:	88800058 	cmpnei	r2,r17,1
1000fa38:	10001226 	beq	r2,zero,1000fa84 <_ZNSs6insertEjPKcj+0x148>
1000fa3c:	88000426 	beq	r17,zero,1000fa50 <_ZNSs6insertEjPKcj+0x114>
1000fa40:	1809883a 	mov	r4,r3
1000fa44:	880d883a 	mov	r6,r17
1000fa48:	0016c340 	call	10016c34 <memcpy>
1000fa4c:	1007883a 	mov	r3,r2
1000fa50:	944dc83a 	sub	r6,r18,r17
1000fa54:	30800058 	cmpnei	r2,r6,1
1000fa58:	1c49883a 	add	r4,r3,r17
1000fa5c:	1c8b883a 	add	r5,r3,r18
1000fa60:	10000f26 	beq	r2,zero,1000faa0 <_ZNSs6insertEjPKcj+0x164>
1000fa64:	30000126 	beq	r6,zero,1000fa6c <_ZNSs6insertEjPKcj+0x130>
1000fa68:	0016c340 	call	10016c34 <memcpy>
1000fa6c:	8005883a 	mov	r2,r16
1000fa70:	003fca06 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000fa74:	29000003 	ldbu	r4,0(r5)
1000fa78:	8005883a 	mov	r2,r16
1000fa7c:	19000005 	stb	r4,0(r3)
1000fa80:	003fc606 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000fa84:	28800003 	ldbu	r2,0(r5)
1000fa88:	18800005 	stb	r2,0(r3)
1000fa8c:	003ff006 	br	1000fa50 <_ZNSs6insertEjPKcj+0x114>
1000fa90:	11000003 	ldbu	r4,0(r2)
1000fa94:	8005883a 	mov	r2,r16
1000fa98:	19000005 	stb	r4,0(r3)
1000fa9c:	003fbf06 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000faa0:	28c00003 	ldbu	r3,0(r5)
1000faa4:	8005883a 	mov	r2,r16
1000faa8:	20c00005 	stb	r3,0(r4)
1000faac:	003fbb06 	br	1000f99c <_ZNSs6insertEjPKcj+0x60>
1000fab0:	010400b4 	movhi	r4,4098
1000fab4:	21182b04 	addi	r4,r4,24748
1000fab8:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>
1000fabc:	014400b4 	movhi	r5,4098
1000fac0:	010400b4 	movhi	r4,4098
1000fac4:	100f883a 	mov	r7,r2
1000fac8:	980d883a 	mov	r6,r19
1000facc:	29582b04 	addi	r5,r5,24748
1000fad0:	2117ee04 	addi	r4,r4,24504
1000fad4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000fad8 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE>:
1000fad8:	20800017 	ldw	r2,0(r4)
1000fadc:	288bc83a 	sub	r5,r5,r2
1000fae0:	000f93c1 	jmpi	1000f93c <_ZNSs6insertEjPKcj>

1000fae4 <_ZNSs6insertEjRKSsjj>:
1000fae4:	31800017 	ldw	r6,0(r6)
1000fae8:	3805883a 	mov	r2,r7
1000faec:	deffff04 	addi	sp,sp,-4
1000faf0:	31fffd17 	ldw	r7,-12(r6)
1000faf4:	dfc00015 	stw	ra,0(sp)
1000faf8:	d8c00117 	ldw	r3,4(sp)
1000fafc:	38800b36 	bltu	r7,r2,1000fb2c <_ZNSs6insertEjRKSsjj+0x48>
1000fb00:	388fc83a 	sub	r7,r7,r2
1000fb04:	19c00436 	bltu	r3,r7,1000fb18 <_ZNSs6insertEjRKSsjj+0x34>
1000fb08:	308d883a 	add	r6,r6,r2
1000fb0c:	dfc00017 	ldw	ra,0(sp)
1000fb10:	dec00104 	addi	sp,sp,4
1000fb14:	000f93c1 	jmpi	1000f93c <_ZNSs6insertEjPKcj>
1000fb18:	180f883a 	mov	r7,r3
1000fb1c:	308d883a 	add	r6,r6,r2
1000fb20:	dfc00017 	ldw	ra,0(sp)
1000fb24:	dec00104 	addi	sp,sp,4
1000fb28:	000f93c1 	jmpi	1000f93c <_ZNSs6insertEjPKcj>
1000fb2c:	014400b4 	movhi	r5,4098
1000fb30:	010400b4 	movhi	r4,4098
1000fb34:	100d883a 	mov	r6,r2
1000fb38:	29582b04 	addi	r5,r5,24748
1000fb3c:	2117ee04 	addi	r4,r4,24504
1000fb40:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000fb44 <_ZNSs6insertEjPKc>:
1000fb44:	defffc04 	addi	sp,sp,-16
1000fb48:	dc000215 	stw	r16,8(sp)
1000fb4c:	2021883a 	mov	r16,r4
1000fb50:	3009883a 	mov	r4,r6
1000fb54:	dfc00315 	stw	ra,12(sp)
1000fb58:	d9400115 	stw	r5,4(sp)
1000fb5c:	d9800015 	stw	r6,0(sp)
1000fb60:	00178f00 	call	100178f0 <strlen>
1000fb64:	d9800017 	ldw	r6,0(sp)
1000fb68:	d9400117 	ldw	r5,4(sp)
1000fb6c:	100f883a 	mov	r7,r2
1000fb70:	8009883a 	mov	r4,r16
1000fb74:	dfc00317 	ldw	ra,12(sp)
1000fb78:	dc000217 	ldw	r16,8(sp)
1000fb7c:	dec00404 	addi	sp,sp,16
1000fb80:	000f93c1 	jmpi	1000f93c <_ZNSs6insertEjPKcj>

1000fb84 <_ZNSs6insertEjRKSs>:
1000fb84:	31800017 	ldw	r6,0(r6)
1000fb88:	31fffd17 	ldw	r7,-12(r6)
1000fb8c:	000f93c1 	jmpi	1000f93c <_ZNSs6insertEjPKcj>

1000fb90 <_ZNSs8pop_backEv>:
1000fb90:	20800017 	ldw	r2,0(r4)
1000fb94:	10bffd17 	ldw	r2,-12(r2)
1000fb98:	117fffc4 	addi	r5,r2,-1
1000fb9c:	11400336 	bltu	r2,r5,1000fbac <_ZNSs8pop_backEv+0x1c>
1000fba0:	000f883a 	mov	r7,zero
1000fba4:	01800044 	movi	r6,1
1000fba8:	000eed01 	jmpi	1000eed0 <_ZNSs9_M_mutateEjjj>
1000fbac:	014400b4 	movhi	r5,4098
1000fbb0:	010400b4 	movhi	r4,4098
1000fbb4:	deffff04 	addi	sp,sp,-4
1000fbb8:	000f883a 	mov	r7,zero
1000fbbc:	01bfffc4 	movi	r6,-1
1000fbc0:	29581e04 	addi	r5,r5,24696
1000fbc4:	2117ee04 	addi	r4,r4,24504
1000fbc8:	dfc00015 	stw	ra,0(sp)
1000fbcc:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000fbd0 <_ZNSs4_Rep10_M_refcopyEv>:
1000fbd0:	00c400f4 	movhi	r3,4099
1000fbd4:	18e9aa04 	addi	r3,r3,-22872
1000fbd8:	20c0021e 	bne	r4,r3,1000fbe4 <_ZNSs4_Rep10_M_refcopyEv+0x14>
1000fbdc:	20800304 	addi	r2,r4,12
1000fbe0:	f800283a 	ret
1000fbe4:	20800217 	ldw	r2,8(r4)
1000fbe8:	10800044 	addi	r2,r2,1
1000fbec:	20800215 	stw	r2,8(r4)
1000fbf0:	003ffa06 	br	1000fbdc <_ZNSs4_Rep10_M_refcopyEv+0xc>

1000fbf4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>:
1000fbf4:	defffd04 	addi	sp,sp,-12
1000fbf8:	dc000015 	stw	r16,0(sp)
1000fbfc:	2021883a 	mov	r16,r4
1000fc00:	21000017 	ldw	r4,0(r4)
1000fc04:	dc400115 	stw	r17,4(sp)
1000fc08:	dfc00215 	stw	ra,8(sp)
1000fc0c:	3109883a 	add	r4,r6,r4
1000fc10:	280d883a 	mov	r6,r5
1000fc14:	81400117 	ldw	r5,4(r16)
1000fc18:	000eba80 	call	1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000fc1c:	81800017 	ldw	r6,0(r16)
1000fc20:	1023883a 	mov	r17,r2
1000fc24:	30000a1e 	bne	r6,zero,1000fc50 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x5c>
1000fc28:	10c00304 	addi	r3,r2,12
1000fc2c:	008400f4 	movhi	r2,4099
1000fc30:	10a9aa04 	addi	r2,r2,-22872
1000fc34:	8880111e 	bne	r17,r2,1000fc7c <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x88>
1000fc38:	1805883a 	mov	r2,r3
1000fc3c:	dfc00217 	ldw	ra,8(sp)
1000fc40:	dc400117 	ldw	r17,4(sp)
1000fc44:	dc000017 	ldw	r16,0(sp)
1000fc48:	dec00304 	addi	sp,sp,12
1000fc4c:	f800283a 	ret
1000fc50:	30800058 	cmpnei	r2,r6,1
1000fc54:	88c00304 	addi	r3,r17,12
1000fc58:	10000d26 	beq	r2,zero,1000fc90 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x9c>
1000fc5c:	1809883a 	mov	r4,r3
1000fc60:	81400304 	addi	r5,r16,12
1000fc64:	0016c340 	call	10016c34 <memcpy>
1000fc68:	1007883a 	mov	r3,r2
1000fc6c:	008400f4 	movhi	r2,4099
1000fc70:	10a9aa04 	addi	r2,r2,-22872
1000fc74:	81800017 	ldw	r6,0(r16)
1000fc78:	88bfef26 	beq	r17,r2,1000fc38 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000fc7c:	88000215 	stw	zero,8(r17)
1000fc80:	89800015 	stw	r6,0(r17)
1000fc84:	89a3883a 	add	r17,r17,r6
1000fc88:	88000305 	stb	zero,12(r17)
1000fc8c:	003fea06 	br	1000fc38 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000fc90:	80800303 	ldbu	r2,12(r16)
1000fc94:	88800305 	stb	r2,12(r17)
1000fc98:	81800017 	ldw	r6,0(r16)
1000fc9c:	003fe306 	br	1000fc2c <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x38>

1000fca0 <_ZNSs7reserveEj>:
1000fca0:	20800017 	ldw	r2,0(r4)
1000fca4:	10fffe17 	ldw	r3,-8(r2)
1000fca8:	28c01626 	beq	r5,r3,1000fd04 <_ZNSs7reserveEj+0x64>
1000fcac:	11bffd17 	ldw	r6,-12(r2)
1000fcb0:	defffc04 	addi	sp,sp,-16
1000fcb4:	dfc00315 	stw	ra,12(sp)
1000fcb8:	dc000215 	stw	r16,8(sp)
1000fcbc:	29800f36 	bltu	r5,r6,1000fcfc <_ZNSs7reserveEj+0x5c>
1000fcc0:	2021883a 	mov	r16,r4
1000fcc4:	298dc83a 	sub	r6,r5,r6
1000fcc8:	113ffd04 	addi	r4,r2,-12
1000fccc:	d94001c4 	addi	r5,sp,7
1000fcd0:	000fbf40 	call	1000fbf4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000fcd4:	81400017 	ldw	r5,0(r16)
1000fcd8:	00c400f4 	movhi	r3,4099
1000fcdc:	18e9aa04 	addi	r3,r3,-22872
1000fce0:	293ffd04 	addi	r4,r5,-12
1000fce4:	20c00a1e 	bne	r4,r3,1000fd10 <_ZNSs7reserveEj+0x70>
1000fce8:	80800015 	stw	r2,0(r16)
1000fcec:	dfc00317 	ldw	ra,12(sp)
1000fcf0:	dc000217 	ldw	r16,8(sp)
1000fcf4:	dec00404 	addi	sp,sp,16
1000fcf8:	f800283a 	ret
1000fcfc:	300b883a 	mov	r5,r6
1000fd00:	003fef06 	br	1000fcc0 <_ZNSs7reserveEj+0x20>
1000fd04:	10ffff17 	ldw	r3,-4(r2)
1000fd08:	00ffe816 	blt	zero,r3,1000fcac <_ZNSs7reserveEj+0xc>
1000fd0c:	f800283a 	ret
1000fd10:	28ffff17 	ldw	r3,-4(r5)
1000fd14:	19bfffc4 	addi	r6,r3,-1
1000fd18:	29bfff15 	stw	r6,-4(r5)
1000fd1c:	00fff216 	blt	zero,r3,1000fce8 <_ZNSs7reserveEj+0x48>
1000fd20:	d94001c4 	addi	r5,sp,7
1000fd24:	d8800015 	stw	r2,0(sp)
1000fd28:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000fd2c:	d8800017 	ldw	r2,0(sp)
1000fd30:	003fed06 	br	1000fce8 <_ZNSs7reserveEj+0x48>

1000fd34 <_ZNSs13shrink_to_fitEv>:
1000fd34:	deffe704 	addi	sp,sp,-100
1000fd38:	00c400b4 	movhi	r3,4098
1000fd3c:	d9800204 	addi	r6,sp,8
1000fd40:	18d3a904 	addi	r3,r3,20132
1000fd44:	01440074 	movhi	r5,4097
1000fd48:	00840074 	movhi	r2,4097
1000fd4c:	10bf8204 	addi	r2,r2,-504
1000fd50:	2964f504 	addi	r5,r5,-27692
1000fd54:	d9000015 	stw	r4,0(sp)
1000fd58:	d8c00915 	stw	r3,36(sp)
1000fd5c:	3009883a 	mov	r4,r6
1000fd60:	d8c00f04 	addi	r3,sp,60
1000fd64:	d8c00a15 	stw	r3,40(sp)
1000fd68:	d8800b15 	stw	r2,44(sp)
1000fd6c:	dfc01815 	stw	ra,96(sp)
1000fd70:	df001715 	stw	fp,92(sp)
1000fd74:	ddc01615 	stw	r23,88(sp)
1000fd78:	dd801515 	stw	r22,84(sp)
1000fd7c:	dd401415 	stw	r21,80(sp)
1000fd80:	dd001315 	stw	r20,76(sp)
1000fd84:	dcc01215 	stw	r19,72(sp)
1000fd88:	dc801115 	stw	r18,68(sp)
1000fd8c:	dc401015 	stw	r17,64(sp)
1000fd90:	dc000f15 	stw	r16,60(sp)
1000fd94:	d9800115 	stw	r6,4(sp)
1000fd98:	d9400815 	stw	r5,32(sp)
1000fd9c:	dec00c15 	stw	sp,48(sp)
1000fda0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1000fda4:	d8800017 	ldw	r2,0(sp)
1000fda8:	10800017 	ldw	r2,0(r2)
1000fdac:	10fffd17 	ldw	r3,-12(r2)
1000fdb0:	10bffe17 	ldw	r2,-8(r2)
1000fdb4:	18800e36 	bltu	r3,r2,1000fdf0 <_ZNSs13shrink_to_fitEv+0xbc>
1000fdb8:	d9000117 	ldw	r4,4(sp)
1000fdbc:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
1000fdc0:	dfc01817 	ldw	ra,96(sp)
1000fdc4:	df001717 	ldw	fp,92(sp)
1000fdc8:	ddc01617 	ldw	r23,88(sp)
1000fdcc:	dd801517 	ldw	r22,84(sp)
1000fdd0:	dd401417 	ldw	r21,80(sp)
1000fdd4:	dd001317 	ldw	r20,76(sp)
1000fdd8:	dcc01217 	ldw	r19,72(sp)
1000fddc:	dc801117 	ldw	r18,68(sp)
1000fde0:	dc401017 	ldw	r17,64(sp)
1000fde4:	dc000f17 	ldw	r16,60(sp)
1000fde8:	dec01904 	addi	sp,sp,100
1000fdec:	f800283a 	ret
1000fdf0:	d9000017 	ldw	r4,0(sp)
1000fdf4:	00800044 	movi	r2,1
1000fdf8:	000b883a 	mov	r5,zero
1000fdfc:	d8800315 	stw	r2,12(sp)
1000fe00:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
1000fe04:	003fec06 	br	1000fdb8 <_ZNSs13shrink_to_fitEv+0x84>
1000fe08:	d9000417 	ldw	r4,16(sp)
1000fe0c:	d8800204 	addi	r2,sp,8
1000fe10:	d8800115 	stw	r2,4(sp)
1000fe14:	00089800 	call	10008980 <__cxa_begin_catch>
1000fe18:	d8000315 	stw	zero,12(sp)
1000fe1c:	0008a2c0 	call	10008a2c <__cxa_end_catch>
1000fe20:	003fe506 	br	1000fdb8 <_ZNSs13shrink_to_fitEv+0x84>

1000fe24 <_ZNSs6appendERKSs>:
1000fe24:	defffb04 	addi	sp,sp,-20
1000fe28:	dc800215 	stw	r18,8(sp)
1000fe2c:	2825883a 	mov	r18,r5
1000fe30:	29400017 	ldw	r5,0(r5)
1000fe34:	dc400115 	stw	r17,4(sp)
1000fe38:	dc000015 	stw	r16,0(sp)
1000fe3c:	2c7ffd17 	ldw	r17,-12(r5)
1000fe40:	dfc00415 	stw	ra,16(sp)
1000fe44:	dcc00315 	stw	r19,12(sp)
1000fe48:	2021883a 	mov	r16,r4
1000fe4c:	88001726 	beq	r17,zero,1000feac <_ZNSs6appendERKSs+0x88>
1000fe50:	21000017 	ldw	r4,0(r4)
1000fe54:	20fffd17 	ldw	r3,-12(r4)
1000fe58:	20bffe17 	ldw	r2,-8(r4)
1000fe5c:	1c67883a 	add	r19,r3,r17
1000fe60:	14c00236 	bltu	r2,r19,1000fe6c <_ZNSs6appendERKSs+0x48>
1000fe64:	20bfff17 	ldw	r2,-4(r4)
1000fe68:	0080060e 	bge	zero,r2,1000fe84 <_ZNSs6appendERKSs+0x60>
1000fe6c:	980b883a 	mov	r5,r19
1000fe70:	8009883a 	mov	r4,r16
1000fe74:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
1000fe78:	81000017 	ldw	r4,0(r16)
1000fe7c:	91400017 	ldw	r5,0(r18)
1000fe80:	20fffd17 	ldw	r3,-12(r4)
1000fe84:	88800058 	cmpnei	r2,r17,1
1000fe88:	20c9883a 	add	r4,r4,r3
1000fe8c:	10001426 	beq	r2,zero,1000fee0 <_ZNSs6appendERKSs+0xbc>
1000fe90:	880d883a 	mov	r6,r17
1000fe94:	0016c340 	call	10016c34 <memcpy>
1000fe98:	80c00017 	ldw	r3,0(r16)
1000fe9c:	008400f4 	movhi	r2,4099
1000fea0:	10a9aa04 	addi	r2,r2,-22872
1000fea4:	193ffd04 	addi	r4,r3,-12
1000fea8:	2080081e 	bne	r4,r2,1000fecc <_ZNSs6appendERKSs+0xa8>
1000feac:	8005883a 	mov	r2,r16
1000feb0:	dfc00417 	ldw	ra,16(sp)
1000feb4:	dcc00317 	ldw	r19,12(sp)
1000feb8:	dc800217 	ldw	r18,8(sp)
1000febc:	dc400117 	ldw	r17,4(sp)
1000fec0:	dc000017 	ldw	r16,0(sp)
1000fec4:	dec00504 	addi	sp,sp,20
1000fec8:	f800283a 	ret
1000fecc:	1cfffd15 	stw	r19,-12(r3)
1000fed0:	183fff15 	stw	zero,-4(r3)
1000fed4:	1ce7883a 	add	r19,r3,r19
1000fed8:	98000005 	stb	zero,0(r19)
1000fedc:	003ff306 	br	1000feac <_ZNSs6appendERKSs+0x88>
1000fee0:	28800003 	ldbu	r2,0(r5)
1000fee4:	20800005 	stb	r2,0(r4)
1000fee8:	003feb06 	br	1000fe98 <_ZNSs6appendERKSs+0x74>

1000feec <_ZNSspLERKSs>:
1000feec:	000fe241 	jmpi	1000fe24 <_ZNSs6appendERKSs>

1000fef0 <_ZNSs6appendERKSsjj>:
1000fef0:	defffa04 	addi	sp,sp,-24
1000fef4:	dcc00315 	stw	r19,12(sp)
1000fef8:	2827883a 	mov	r19,r5
1000fefc:	29400017 	ldw	r5,0(r5)
1000ff00:	dc000015 	stw	r16,0(sp)
1000ff04:	dfc00515 	stw	ra,20(sp)
1000ff08:	2c3ffd17 	ldw	r16,-12(r5)
1000ff0c:	dd000415 	stw	r20,16(sp)
1000ff10:	dc800215 	stw	r18,8(sp)
1000ff14:	dc400115 	stw	r17,4(sp)
1000ff18:	81803136 	bltu	r16,r6,1000ffe0 <_ZNSs6appendERKSsjj+0xf0>
1000ff1c:	81a1c83a 	sub	r16,r16,r6
1000ff20:	3025883a 	mov	r18,r6
1000ff24:	2023883a 	mov	r17,r4
1000ff28:	3c002236 	bltu	r7,r16,1000ffb4 <_ZNSs6appendERKSsjj+0xc4>
1000ff2c:	80001826 	beq	r16,zero,1000ff90 <_ZNSs6appendERKSsjj+0xa0>
1000ff30:	89000017 	ldw	r4,0(r17)
1000ff34:	20fffd17 	ldw	r3,-12(r4)
1000ff38:	20bffe17 	ldw	r2,-8(r4)
1000ff3c:	1c29883a 	add	r20,r3,r16
1000ff40:	15000236 	bltu	r2,r20,1000ff4c <_ZNSs6appendERKSsjj+0x5c>
1000ff44:	20bfff17 	ldw	r2,-4(r4)
1000ff48:	0080060e 	bge	zero,r2,1000ff64 <_ZNSs6appendERKSsjj+0x74>
1000ff4c:	a00b883a 	mov	r5,r20
1000ff50:	8809883a 	mov	r4,r17
1000ff54:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
1000ff58:	89000017 	ldw	r4,0(r17)
1000ff5c:	99400017 	ldw	r5,0(r19)
1000ff60:	20fffd17 	ldw	r3,-12(r4)
1000ff64:	80800058 	cmpnei	r2,r16,1
1000ff68:	20c9883a 	add	r4,r4,r3
1000ff6c:	2c8b883a 	add	r5,r5,r18
1000ff70:	10001326 	beq	r2,zero,1000ffc0 <_ZNSs6appendERKSsjj+0xd0>
1000ff74:	800d883a 	mov	r6,r16
1000ff78:	0016c340 	call	10016c34 <memcpy>
1000ff7c:	88c00017 	ldw	r3,0(r17)
1000ff80:	008400f4 	movhi	r2,4099
1000ff84:	10a9aa04 	addi	r2,r2,-22872
1000ff88:	193ffd04 	addi	r4,r3,-12
1000ff8c:	20800f1e 	bne	r4,r2,1000ffcc <_ZNSs6appendERKSsjj+0xdc>
1000ff90:	8805883a 	mov	r2,r17
1000ff94:	dfc00517 	ldw	ra,20(sp)
1000ff98:	dd000417 	ldw	r20,16(sp)
1000ff9c:	dcc00317 	ldw	r19,12(sp)
1000ffa0:	dc800217 	ldw	r18,8(sp)
1000ffa4:	dc400117 	ldw	r17,4(sp)
1000ffa8:	dc000017 	ldw	r16,0(sp)
1000ffac:	dec00604 	addi	sp,sp,24
1000ffb0:	f800283a 	ret
1000ffb4:	3821883a 	mov	r16,r7
1000ffb8:	803ff526 	beq	r16,zero,1000ff90 <_ZNSs6appendERKSsjj+0xa0>
1000ffbc:	003fdc06 	br	1000ff30 <_ZNSs6appendERKSsjj+0x40>
1000ffc0:	28800003 	ldbu	r2,0(r5)
1000ffc4:	20800005 	stb	r2,0(r4)
1000ffc8:	003fec06 	br	1000ff7c <_ZNSs6appendERKSsjj+0x8c>
1000ffcc:	1d3ffd15 	stw	r20,-12(r3)
1000ffd0:	183fff15 	stw	zero,-4(r3)
1000ffd4:	1d29883a 	add	r20,r3,r20
1000ffd8:	a0000005 	stb	zero,0(r20)
1000ffdc:	003fec06 	br	1000ff90 <_ZNSs6appendERKSsjj+0xa0>
1000ffe0:	014400b4 	movhi	r5,4098
1000ffe4:	010400b4 	movhi	r4,4098
1000ffe8:	800f883a 	mov	r7,r16
1000ffec:	29583d04 	addi	r5,r5,24820
1000fff0:	2117ee04 	addi	r4,r4,24504
1000fff4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1000fff8 <_ZNSs6appendEPKcj>:
1000fff8:	defffb04 	addi	sp,sp,-20
1000fffc:	dc000115 	stw	r16,4(sp)
10010000:	dfc00415 	stw	ra,16(sp)
10010004:	dc800315 	stw	r18,12(sp)
10010008:	dc400215 	stw	r17,8(sp)
1001000c:	2021883a 	mov	r16,r4
10010010:	30001e26 	beq	r6,zero,1001008c <_ZNSs6appendEPKcj+0x94>
10010014:	20800017 	ldw	r2,0(r4)
10010018:	00d00034 	movhi	r3,16384
1001001c:	18ffff04 	addi	r3,r3,-4
10010020:	113ffd17 	ldw	r4,-12(r2)
10010024:	1907c83a 	sub	r3,r3,r4
10010028:	19803136 	bltu	r3,r6,100100f0 <_ZNSs6appendEPKcj+0xf8>
1001002c:	10fffe17 	ldw	r3,-8(r2)
10010030:	3125883a 	add	r18,r6,r4
10010034:	2823883a 	mov	r17,r5
10010038:	1c800236 	bltu	r3,r18,10010044 <_ZNSs6appendEPKcj+0x4c>
1001003c:	10ffff17 	ldw	r3,-4(r2)
10010040:	00c0080e 	bge	zero,r3,10010064 <_ZNSs6appendEPKcj+0x6c>
10010044:	d9800015 	stw	r6,0(sp)
10010048:	900b883a 	mov	r5,r18
1001004c:	8880162e 	bgeu	r17,r2,100100a8 <_ZNSs6appendEPKcj+0xb0>
10010050:	8009883a 	mov	r4,r16
10010054:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
10010058:	80800017 	ldw	r2,0(r16)
1001005c:	d9800017 	ldw	r6,0(sp)
10010060:	113ffd17 	ldw	r4,-12(r2)
10010064:	30c00058 	cmpnei	r3,r6,1
10010068:	1109883a 	add	r4,r2,r4
1001006c:	18001826 	beq	r3,zero,100100d0 <_ZNSs6appendEPKcj+0xd8>
10010070:	880b883a 	mov	r5,r17
10010074:	0016c340 	call	10016c34 <memcpy>
10010078:	80c00017 	ldw	r3,0(r16)
1001007c:	008400f4 	movhi	r2,4099
10010080:	10a9aa04 	addi	r2,r2,-22872
10010084:	193ffd04 	addi	r4,r3,-12
10010088:	2080141e 	bne	r4,r2,100100dc <_ZNSs6appendEPKcj+0xe4>
1001008c:	8005883a 	mov	r2,r16
10010090:	dfc00417 	ldw	ra,16(sp)
10010094:	dc800317 	ldw	r18,12(sp)
10010098:	dc400217 	ldw	r17,8(sp)
1001009c:	dc000117 	ldw	r16,4(sp)
100100a0:	dec00504 	addi	sp,sp,20
100100a4:	f800283a 	ret
100100a8:	1109883a 	add	r4,r2,r4
100100ac:	247fe836 	bltu	r4,r17,10010050 <_ZNSs6appendEPKcj+0x58>
100100b0:	8009883a 	mov	r4,r16
100100b4:	88a3c83a 	sub	r17,r17,r2
100100b8:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100100bc:	80800017 	ldw	r2,0(r16)
100100c0:	d9800017 	ldw	r6,0(sp)
100100c4:	1463883a 	add	r17,r2,r17
100100c8:	113ffd17 	ldw	r4,-12(r2)
100100cc:	003fe506 	br	10010064 <_ZNSs6appendEPKcj+0x6c>
100100d0:	88800003 	ldbu	r2,0(r17)
100100d4:	20800005 	stb	r2,0(r4)
100100d8:	003fe706 	br	10010078 <_ZNSs6appendEPKcj+0x80>
100100dc:	1cbffd15 	stw	r18,-12(r3)
100100e0:	183fff15 	stw	zero,-4(r3)
100100e4:	1ca5883a 	add	r18,r3,r18
100100e8:	90000005 	stb	zero,0(r18)
100100ec:	003fe706 	br	1001008c <_ZNSs6appendEPKcj+0x94>
100100f0:	010400b4 	movhi	r4,4098
100100f4:	21183d04 	addi	r4,r4,24820
100100f8:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

100100fc <_ZNSspLESt16initializer_listIcE>:
100100fc:	000fff81 	jmpi	1000fff8 <_ZNSs6appendEPKcj>

10010100 <_ZNSs6appendEPKc>:
10010100:	defffd04 	addi	sp,sp,-12
10010104:	dc000115 	stw	r16,4(sp)
10010108:	2021883a 	mov	r16,r4
1001010c:	2809883a 	mov	r4,r5
10010110:	dfc00215 	stw	ra,8(sp)
10010114:	d9400015 	stw	r5,0(sp)
10010118:	00178f00 	call	100178f0 <strlen>
1001011c:	d9400017 	ldw	r5,0(sp)
10010120:	100d883a 	mov	r6,r2
10010124:	8009883a 	mov	r4,r16
10010128:	dfc00217 	ldw	ra,8(sp)
1001012c:	dc000117 	ldw	r16,4(sp)
10010130:	dec00304 	addi	sp,sp,12
10010134:	000fff81 	jmpi	1000fff8 <_ZNSs6appendEPKcj>

10010138 <_ZNSspLEPKc>:
10010138:	defffd04 	addi	sp,sp,-12
1001013c:	dc000115 	stw	r16,4(sp)
10010140:	2021883a 	mov	r16,r4
10010144:	2809883a 	mov	r4,r5
10010148:	dfc00215 	stw	ra,8(sp)
1001014c:	d9400015 	stw	r5,0(sp)
10010150:	00178f00 	call	100178f0 <strlen>
10010154:	d9400017 	ldw	r5,0(sp)
10010158:	100d883a 	mov	r6,r2
1001015c:	8009883a 	mov	r4,r16
10010160:	dfc00217 	ldw	ra,8(sp)
10010164:	dc000117 	ldw	r16,4(sp)
10010168:	dec00304 	addi	sp,sp,12
1001016c:	000fff81 	jmpi	1000fff8 <_ZNSs6appendEPKcj>

10010170 <_ZNSs6appendESt16initializer_listIcE>:
10010170:	000fff81 	jmpi	1000fff8 <_ZNSs6appendEPKcj>

10010174 <_ZNSs6appendEjc>:
10010174:	defffb04 	addi	sp,sp,-20
10010178:	dc400115 	stw	r17,4(sp)
1001017c:	dfc00415 	stw	ra,16(sp)
10010180:	dcc00315 	stw	r19,12(sp)
10010184:	dc800215 	stw	r18,8(sp)
10010188:	dc000015 	stw	r16,0(sp)
1001018c:	2023883a 	mov	r17,r4
10010190:	28001f26 	beq	r5,zero,10010210 <_ZNSs6appendEjc+0x9c>
10010194:	21000017 	ldw	r4,0(r4)
10010198:	00900034 	movhi	r2,16384
1001019c:	10bfff04 	addi	r2,r2,-4
100101a0:	20fffd17 	ldw	r3,-12(r4)
100101a4:	2821883a 	mov	r16,r5
100101a8:	10c5c83a 	sub	r2,r2,r3
100101ac:	11402736 	bltu	r2,r5,1001024c <_ZNSs6appendEjc+0xd8>
100101b0:	20bffe17 	ldw	r2,-8(r4)
100101b4:	28e7883a 	add	r19,r5,r3
100101b8:	3025883a 	mov	r18,r6
100101bc:	14c00236 	bltu	r2,r19,100101c8 <_ZNSs6appendEjc+0x54>
100101c0:	20bfff17 	ldw	r2,-4(r4)
100101c4:	0080050e 	bge	zero,r2,100101dc <_ZNSs6appendEjc+0x68>
100101c8:	8809883a 	mov	r4,r17
100101cc:	980b883a 	mov	r5,r19
100101d0:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100101d4:	89000017 	ldw	r4,0(r17)
100101d8:	20fffd17 	ldw	r3,-12(r4)
100101dc:	80800058 	cmpnei	r2,r16,1
100101e0:	20c9883a 	add	r4,r4,r3
100101e4:	10001226 	beq	r2,zero,10010230 <_ZNSs6appendEjc+0xbc>
100101e8:	91403fcc 	andi	r5,r18,255
100101ec:	2940201c 	xori	r5,r5,128
100101f0:	800d883a 	mov	r6,r16
100101f4:	297fe004 	addi	r5,r5,-128
100101f8:	0016e600 	call	10016e60 <memset>
100101fc:	88c00017 	ldw	r3,0(r17)
10010200:	008400f4 	movhi	r2,4099
10010204:	10a9aa04 	addi	r2,r2,-22872
10010208:	193ffd04 	addi	r4,r3,-12
1001020c:	20800a1e 	bne	r4,r2,10010238 <_ZNSs6appendEjc+0xc4>
10010210:	8805883a 	mov	r2,r17
10010214:	dfc00417 	ldw	ra,16(sp)
10010218:	dcc00317 	ldw	r19,12(sp)
1001021c:	dc800217 	ldw	r18,8(sp)
10010220:	dc400117 	ldw	r17,4(sp)
10010224:	dc000017 	ldw	r16,0(sp)
10010228:	dec00504 	addi	sp,sp,20
1001022c:	f800283a 	ret
10010230:	24800005 	stb	r18,0(r4)
10010234:	003ff106 	br	100101fc <_ZNSs6appendEjc+0x88>
10010238:	1cfffd15 	stw	r19,-12(r3)
1001023c:	183fff15 	stw	zero,-4(r3)
10010240:	1ce7883a 	add	r19,r3,r19
10010244:	98000005 	stb	zero,0(r19)
10010248:	003ff106 	br	10010210 <_ZNSs6appendEjc+0x9c>
1001024c:	010400b4 	movhi	r4,4098
10010250:	21183d04 	addi	r4,r4,24820
10010254:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

10010258 <_ZNSs6resizeEjc>:
10010258:	21c00017 	ldw	r7,0(r4)
1001025c:	00d00034 	movhi	r3,16384
10010260:	18ffff04 	addi	r3,r3,-4
10010264:	3a3ffd17 	ldw	r8,-12(r7)
10010268:	19400b36 	bltu	r3,r5,10010298 <_ZNSs6resizeEjc+0x40>
1001026c:	41400536 	bltu	r8,r5,10010284 <_ZNSs6resizeEjc+0x2c>
10010270:	2a000136 	bltu	r5,r8,10010278 <_ZNSs6resizeEjc+0x20>
10010274:	f800283a 	ret
10010278:	000f883a 	mov	r7,zero
1001027c:	414dc83a 	sub	r6,r8,r5
10010280:	000eed01 	jmpi	1000eed0 <_ZNSs9_M_mutateEjjj>
10010284:	31803fcc 	andi	r6,r6,255
10010288:	3180201c 	xori	r6,r6,128
1001028c:	31bfe004 	addi	r6,r6,-128
10010290:	2a0bc83a 	sub	r5,r5,r8
10010294:	00101741 	jmpi	10010174 <_ZNSs6appendEjc>
10010298:	010400b4 	movhi	r4,4098
1001029c:	deffff04 	addi	sp,sp,-4
100102a0:	21184304 	addi	r4,r4,24844
100102a4:	dfc00015 	stw	ra,0(sp)
100102a8:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

100102ac <_ZNSs6resizeEj>:
100102ac:	000d883a 	mov	r6,zero
100102b0:	00102581 	jmpi	10010258 <_ZNSs6resizeEjc>

100102b4 <_ZNSs9push_backEc>:
100102b4:	20800017 	ldw	r2,0(r4)
100102b8:	defffb04 	addi	sp,sp,-20
100102bc:	dc800215 	stw	r18,8(sp)
100102c0:	14bffd17 	ldw	r18,-12(r2)
100102c4:	10fffe17 	ldw	r3,-8(r2)
100102c8:	dcc00315 	stw	r19,12(sp)
100102cc:	dc400115 	stw	r17,4(sp)
100102d0:	dc000015 	stw	r16,0(sp)
100102d4:	dfc00415 	stw	ra,16(sp)
100102d8:	94400044 	addi	r17,r18,1
100102dc:	2021883a 	mov	r16,r4
100102e0:	2827883a 	mov	r19,r5
100102e4:	1c400236 	bltu	r3,r17,100102f0 <_ZNSs9push_backEc+0x3c>
100102e8:	10ffff17 	ldw	r3,-4(r2)
100102ec:	00c0130e 	bge	zero,r3,1001033c <_ZNSs9push_backEc+0x88>
100102f0:	880b883a 	mov	r5,r17
100102f4:	8009883a 	mov	r4,r16
100102f8:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100102fc:	80800017 	ldw	r2,0(r16)
10010300:	10fffd17 	ldw	r3,-12(r2)
10010304:	10c5883a 	add	r2,r2,r3
10010308:	14c00005 	stb	r19,0(r2)
1001030c:	81000017 	ldw	r4,0(r16)
10010310:	008400f4 	movhi	r2,4099
10010314:	10a9aa04 	addi	r2,r2,-22872
10010318:	20fffd04 	addi	r3,r4,-12
1001031c:	1880091e 	bne	r3,r2,10010344 <_ZNSs9push_backEc+0x90>
10010320:	dfc00417 	ldw	ra,16(sp)
10010324:	dcc00317 	ldw	r19,12(sp)
10010328:	dc800217 	ldw	r18,8(sp)
1001032c:	dc400117 	ldw	r17,4(sp)
10010330:	dc000017 	ldw	r16,0(sp)
10010334:	dec00504 	addi	sp,sp,20
10010338:	f800283a 	ret
1001033c:	9007883a 	mov	r3,r18
10010340:	003ff006 	br	10010304 <_ZNSs9push_backEc+0x50>
10010344:	203fff15 	stw	zero,-4(r4)
10010348:	247ffd15 	stw	r17,-12(r4)
1001034c:	1ca5883a 	add	r18,r3,r18
10010350:	90000345 	stb	zero,13(r18)
10010354:	003ff206 	br	10010320 <_ZNSs9push_backEc+0x6c>

10010358 <_ZNSspLEc>:
10010358:	20c00017 	ldw	r3,0(r4)
1001035c:	defffb04 	addi	sp,sp,-20
10010360:	dc800215 	stw	r18,8(sp)
10010364:	1cbffd17 	ldw	r18,-12(r3)
10010368:	18bffe17 	ldw	r2,-8(r3)
1001036c:	dcc00315 	stw	r19,12(sp)
10010370:	dc400115 	stw	r17,4(sp)
10010374:	dc000015 	stw	r16,0(sp)
10010378:	dfc00415 	stw	ra,16(sp)
1001037c:	94400044 	addi	r17,r18,1
10010380:	2021883a 	mov	r16,r4
10010384:	2827883a 	mov	r19,r5
10010388:	14400236 	bltu	r2,r17,10010394 <_ZNSspLEc+0x3c>
1001038c:	18bfff17 	ldw	r2,-4(r3)
10010390:	0080140e 	bge	zero,r2,100103e4 <_ZNSspLEc+0x8c>
10010394:	880b883a 	mov	r5,r17
10010398:	8009883a 	mov	r4,r16
1001039c:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100103a0:	80c00017 	ldw	r3,0(r16)
100103a4:	18bffd17 	ldw	r2,-12(r3)
100103a8:	1887883a 	add	r3,r3,r2
100103ac:	1cc00005 	stb	r19,0(r3)
100103b0:	81000017 	ldw	r4,0(r16)
100103b4:	008400f4 	movhi	r2,4099
100103b8:	10a9aa04 	addi	r2,r2,-22872
100103bc:	20fffd04 	addi	r3,r4,-12
100103c0:	18800a1e 	bne	r3,r2,100103ec <_ZNSspLEc+0x94>
100103c4:	8005883a 	mov	r2,r16
100103c8:	dfc00417 	ldw	ra,16(sp)
100103cc:	dcc00317 	ldw	r19,12(sp)
100103d0:	dc800217 	ldw	r18,8(sp)
100103d4:	dc400117 	ldw	r17,4(sp)
100103d8:	dc000017 	ldw	r16,0(sp)
100103dc:	dec00504 	addi	sp,sp,20
100103e0:	f800283a 	ret
100103e4:	9005883a 	mov	r2,r18
100103e8:	003fef06 	br	100103a8 <_ZNSspLEc+0x50>
100103ec:	203fff15 	stw	zero,-4(r4)
100103f0:	247ffd15 	stw	r17,-12(r4)
100103f4:	1ca5883a 	add	r18,r3,r18
100103f8:	90000345 	stb	zero,13(r18)
100103fc:	003ff106 	br	100103c4 <_ZNSspLEc+0x6c>

10010400 <_ZNSs4_Rep7_M_grabERKSaIcES2_>:
10010400:	21800217 	ldw	r6,8(r4)
10010404:	2005883a 	mov	r2,r4
10010408:	30000516 	blt	r6,zero,10010420 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x20>
1001040c:	00c400f4 	movhi	r3,4099
10010410:	18e9aa04 	addi	r3,r3,-22872
10010414:	20c0041e 	bne	r4,r3,10010428 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x28>
10010418:	10800304 	addi	r2,r2,12
1001041c:	f800283a 	ret
10010420:	000d883a 	mov	r6,zero
10010424:	000fbf41 	jmpi	1000fbf4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
10010428:	31800044 	addi	r6,r6,1
1001042c:	21800215 	stw	r6,8(r4)
10010430:	003ff906 	br	10010418 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x18>

10010434 <_ZNSsC1ERKSs>:
10010434:	28800017 	ldw	r2,0(r5)
10010438:	defffd04 	addi	sp,sp,-12
1001043c:	dc000115 	stw	r16,4(sp)
10010440:	117fff17 	ldw	r5,-4(r2)
10010444:	dfc00215 	stw	ra,8(sp)
10010448:	2021883a 	mov	r16,r4
1001044c:	113ffd04 	addi	r4,r2,-12
10010450:	28000816 	blt	r5,zero,10010474 <_ZNSsC1ERKSs+0x40>
10010454:	00c400f4 	movhi	r3,4099
10010458:	18e9aa04 	addi	r3,r3,-22872
1001045c:	20c0091e 	bne	r4,r3,10010484 <_ZNSsC1ERKSs+0x50>
10010460:	80800015 	stw	r2,0(r16)
10010464:	dfc00217 	ldw	ra,8(sp)
10010468:	dc000117 	ldw	r16,4(sp)
1001046c:	dec00304 	addi	sp,sp,12
10010470:	f800283a 	ret
10010474:	000d883a 	mov	r6,zero
10010478:	d94000c4 	addi	r5,sp,3
1001047c:	000fbf40 	call	1000fbf4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
10010480:	003ff706 	br	10010460 <_ZNSsC1ERKSs+0x2c>
10010484:	29400044 	addi	r5,r5,1
10010488:	117fff15 	stw	r5,-4(r2)
1001048c:	003ff406 	br	10010460 <_ZNSsC1ERKSs+0x2c>

10010490 <_ZNSs6assignERKSs>:
10010490:	21800017 	ldw	r6,0(r4)
10010494:	28800017 	ldw	r2,0(r5)
10010498:	defffc04 	addi	sp,sp,-16
1001049c:	dc000215 	stw	r16,8(sp)
100104a0:	dfc00315 	stw	ra,12(sp)
100104a4:	2021883a 	mov	r16,r4
100104a8:	30800926 	beq	r6,r2,100104d0 <_ZNSs6assignERKSs+0x40>
100104ac:	117fff17 	ldw	r5,-4(r2)
100104b0:	113ffd04 	addi	r4,r2,-12
100104b4:	28000e16 	blt	r5,zero,100104f0 <_ZNSs6assignERKSs+0x60>
100104b8:	00c400f4 	movhi	r3,4099
100104bc:	18e9aa04 	addi	r3,r3,-22872
100104c0:	20c0081e 	bne	r4,r3,100104e4 <_ZNSs6assignERKSs+0x54>
100104c4:	313ffd04 	addi	r4,r6,-12
100104c8:	20c0101e 	bne	r4,r3,1001050c <_ZNSs6assignERKSs+0x7c>
100104cc:	80800015 	stw	r2,0(r16)
100104d0:	8005883a 	mov	r2,r16
100104d4:	dfc00317 	ldw	ra,12(sp)
100104d8:	dc000217 	ldw	r16,8(sp)
100104dc:	dec00404 	addi	sp,sp,16
100104e0:	f800283a 	ret
100104e4:	29400044 	addi	r5,r5,1
100104e8:	117fff15 	stw	r5,-4(r2)
100104ec:	003ff506 	br	100104c4 <_ZNSs6assignERKSs+0x34>
100104f0:	000d883a 	mov	r6,zero
100104f4:	d94001c4 	addi	r5,sp,7
100104f8:	000fbf40 	call	1000fbf4 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
100104fc:	00c400f4 	movhi	r3,4099
10010500:	81800017 	ldw	r6,0(r16)
10010504:	18e9aa04 	addi	r3,r3,-22872
10010508:	003fee06 	br	100104c4 <_ZNSs6assignERKSs+0x34>
1001050c:	30ffff17 	ldw	r3,-4(r6)
10010510:	197fffc4 	addi	r5,r3,-1
10010514:	317fff15 	stw	r5,-4(r6)
10010518:	00ffec16 	blt	zero,r3,100104cc <_ZNSs6assignERKSs+0x3c>
1001051c:	d94001c4 	addi	r5,sp,7
10010520:	d8800015 	stw	r2,0(sp)
10010524:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
10010528:	d8800017 	ldw	r2,0(sp)
1001052c:	003fe706 	br	100104cc <_ZNSs6assignERKSs+0x3c>

10010530 <_ZNSsaSERKSs>:
10010530:	00104901 	jmpi	10010490 <_ZNSs6assignERKSs>

10010534 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_>:
10010534:	01c40074 	movhi	r7,4097
10010538:	deffec04 	addi	sp,sp,-80
1001053c:	39e4f504 	addi	r7,r7,-27692
10010540:	00c400b4 	movhi	r3,4098
10010544:	00840074 	movhi	r2,4097
10010548:	18d3ad04 	addi	r3,r3,20148
1001054c:	10817f04 	addi	r2,r2,1532
10010550:	d9000015 	stw	r4,0(sp)
10010554:	d9c00a15 	stw	r7,40(sp)
10010558:	d9000404 	addi	r4,sp,16
1001055c:	d9c01204 	addi	r7,sp,72
10010560:	d9400115 	stw	r5,4(sp)
10010564:	d8c00b15 	stw	r3,44(sp)
10010568:	d9c00c15 	stw	r7,48(sp)
1001056c:	dfc01315 	stw	ra,76(sp)
10010570:	d8800d15 	stw	r2,52(sp)
10010574:	d9800215 	stw	r6,8(sp)
10010578:	df001215 	stw	fp,72(sp)
1001057c:	dec00e15 	stw	sp,56(sp)
10010580:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10010584:	d9000117 	ldw	r4,4(sp)
10010588:	00178f00 	call	100178f0 <strlen>
1001058c:	d8c00017 	ldw	r3,0(sp)
10010590:	100f883a 	mov	r7,r2
10010594:	d9000217 	ldw	r4,8(sp)
10010598:	008400f4 	movhi	r2,4099
1001059c:	10a9ad04 	addi	r2,r2,-22860
100105a0:	18800015 	stw	r2,0(r3)
100105a4:	20800017 	ldw	r2,0(r4)
100105a8:	1809883a 	mov	r4,r3
100105ac:	d9c00315 	stw	r7,12(sp)
100105b0:	117ffd17 	ldw	r5,-12(r2)
100105b4:	00800044 	movi	r2,1
100105b8:	d8800515 	stw	r2,20(sp)
100105bc:	394b883a 	add	r5,r7,r5
100105c0:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100105c4:	d9800317 	ldw	r6,12(sp)
100105c8:	d9400117 	ldw	r5,4(sp)
100105cc:	d9000017 	ldw	r4,0(sp)
100105d0:	000fff80 	call	1000fff8 <_ZNSs6appendEPKcj>
100105d4:	d9400217 	ldw	r5,8(sp)
100105d8:	d9000017 	ldw	r4,0(sp)
100105dc:	000fe240 	call	1000fe24 <_ZNSs6appendERKSs>
100105e0:	d9000404 	addi	r4,sp,16
100105e4:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100105e8:	d8800017 	ldw	r2,0(sp)
100105ec:	dfc01317 	ldw	ra,76(sp)
100105f0:	df001217 	ldw	fp,72(sp)
100105f4:	dec01404 	addi	sp,sp,80
100105f8:	f800283a 	ret
100105fc:	d8800017 	ldw	r2,0(sp)
10010600:	d8c00617 	ldw	r3,24(sp)
10010604:	11000017 	ldw	r4,0(r2)
10010608:	008400f4 	movhi	r2,4099
1001060c:	10a9aa04 	addi	r2,r2,-22872
10010610:	213ffd04 	addi	r4,r4,-12
10010614:	d8c00015 	stw	r3,0(sp)
10010618:	20800226 	beq	r4,r2,10010624 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_+0xf0>
1001061c:	d94011c4 	addi	r5,sp,71
10010620:	000ee000 	call	1000ee00 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
10010624:	d9000017 	ldw	r4,0(sp)
10010628:	00bfffc4 	movi	r2,-1
1001062c:	d8800515 	stw	r2,20(sp)
10010630:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

10010634 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_>:
10010634:	01c40074 	movhi	r7,4097
10010638:	deffed04 	addi	sp,sp,-76
1001063c:	39e4f504 	addi	r7,r7,-27692
10010640:	00c400b4 	movhi	r3,4098
10010644:	00840074 	movhi	r2,4097
10010648:	18d3ae84 	addi	r3,r3,20154
1001064c:	1081bb04 	addi	r2,r2,1772
10010650:	d9000015 	stw	r4,0(sp)
10010654:	d9c00915 	stw	r7,36(sp)
10010658:	d9000304 	addi	r4,sp,12
1001065c:	d9c01104 	addi	r7,sp,68
10010660:	d8c00a15 	stw	r3,40(sp)
10010664:	d8800c15 	stw	r2,48(sp)
10010668:	d9400215 	stw	r5,8(sp)
1001066c:	dfc01215 	stw	ra,72(sp)
10010670:	df001115 	stw	fp,68(sp)
10010674:	d9c00b15 	stw	r7,44(sp)
10010678:	dec00d15 	stw	sp,52(sp)
1001067c:	d9800115 	stw	r6,4(sp)
10010680:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10010684:	d8c00017 	ldw	r3,0(sp)
10010688:	008400f4 	movhi	r2,4099
1001068c:	10a9ad04 	addi	r2,r2,-22860
10010690:	18800015 	stw	r2,0(r3)
10010694:	d8800117 	ldw	r2,4(sp)
10010698:	1809883a 	mov	r4,r3
1001069c:	10800017 	ldw	r2,0(r2)
100106a0:	117ffd17 	ldw	r5,-12(r2)
100106a4:	00800044 	movi	r2,1
100106a8:	d8800415 	stw	r2,16(sp)
100106ac:	29400044 	addi	r5,r5,1
100106b0:	000fca00 	call	1000fca0 <_ZNSs7reserveEj>
100106b4:	d9800207 	ldb	r6,8(sp)
100106b8:	d9000017 	ldw	r4,0(sp)
100106bc:	01400044 	movi	r5,1
100106c0:	00101740 	call	10010174 <_ZNSs6appendEjc>
100106c4:	d9400117 	ldw	r5,4(sp)
100106c8:	d9000017 	ldw	r4,0(sp)
100106cc:	000fe240 	call	1000fe24 <_ZNSs6appendERKSs>
100106d0:	d9000304 	addi	r4,sp,12
100106d4:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100106d8:	d8800017 	ldw	r2,0(sp)
100106dc:	dfc01217 	ldw	ra,72(sp)
100106e0:	df001117 	ldw	fp,68(sp)
100106e4:	dec01304 	addi	sp,sp,76
100106e8:	f800283a 	ret
100106ec:	d8800017 	ldw	r2,0(sp)
100106f0:	d8c00517 	ldw	r3,20(sp)
100106f4:	11000017 	ldw	r4,0(r2)
100106f8:	008400f4 	movhi	r2,4099
100106fc:	10a9aa04 	addi	r2,r2,-22872
10010700:	213ffd04 	addi	r4,r4,-12
10010704:	d8c00015 	stw	r3,0(sp)
10010708:	20800226 	beq	r4,r2,10010714 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_+0xe0>
1001070c:	d94010c4 	addi	r5,sp,67
10010710:	000ee000 	call	1000ee00 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
10010714:	d9000017 	ldw	r4,0(sp)
10010718:	00bfffc4 	movi	r2,-1
1001071c:	d8800415 	stw	r2,16(sp)
10010720:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

10010724 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_>:
10010724:	00c400b4 	movhi	r3,4098
10010728:	deffed04 	addi	sp,sp,-76
1001072c:	18d3b004 	addi	r3,r3,20160
10010730:	01c40074 	movhi	r7,4097
10010734:	00840074 	movhi	r2,4097
10010738:	39e4f504 	addi	r7,r7,-27692
1001073c:	1081ee04 	addi	r2,r2,1976
10010740:	d9000015 	stw	r4,0(sp)
10010744:	d8c00a15 	stw	r3,40(sp)
10010748:	d9000304 	addi	r4,sp,12
1001074c:	d8c01104 	addi	r3,sp,68
10010750:	dfc01215 	stw	ra,72(sp)
10010754:	d9c00915 	stw	r7,36(sp)
10010758:	d8c00b15 	stw	r3,44(sp)
1001075c:	d8800c15 	stw	r2,48(sp)
10010760:	d9800215 	stw	r6,8(sp)
10010764:	d9400115 	stw	r5,4(sp)
10010768:	df001115 	stw	fp,68(sp)
1001076c:	dec00d15 	stw	sp,52(sp)
10010770:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10010774:	d9400117 	ldw	r5,4(sp)
10010778:	d9000017 	ldw	r4,0(sp)
1001077c:	00bfffc4 	movi	r2,-1
10010780:	d8800415 	stw	r2,16(sp)
10010784:	00104340 	call	10010434 <_ZNSsC1ERKSs>
10010788:	d9400217 	ldw	r5,8(sp)
1001078c:	d9000017 	ldw	r4,0(sp)
10010790:	00800044 	movi	r2,1
10010794:	d8800415 	stw	r2,16(sp)
10010798:	000fe240 	call	1000fe24 <_ZNSs6appendERKSs>
1001079c:	d9000304 	addi	r4,sp,12
100107a0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100107a4:	d8800017 	ldw	r2,0(sp)
100107a8:	dfc01217 	ldw	ra,72(sp)
100107ac:	df001117 	ldw	fp,68(sp)
100107b0:	dec01304 	addi	sp,sp,76
100107b4:	f800283a 	ret
100107b8:	d8800017 	ldw	r2,0(sp)
100107bc:	d8c00517 	ldw	r3,20(sp)
100107c0:	11000017 	ldw	r4,0(r2)
100107c4:	008400f4 	movhi	r2,4099
100107c8:	10a9aa04 	addi	r2,r2,-22872
100107cc:	213ffd04 	addi	r4,r4,-12
100107d0:	d8c00015 	stw	r3,0(sp)
100107d4:	20800226 	beq	r4,r2,100107e0 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_+0xbc>
100107d8:	d94010c4 	addi	r5,sp,67
100107dc:	000ee000 	call	1000ee00 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
100107e0:	d9000017 	ldw	r4,0(sp)
100107e4:	00bfffc4 	movi	r2,-1
100107e8:	d8800415 	stw	r2,16(sp)
100107ec:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

100107f0 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>:
100107f0:	29001d26 	beq	r5,r4,10010868 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x78>
100107f4:	defffc04 	addi	sp,sp,-16
100107f8:	dc000015 	stw	r16,0(sp)
100107fc:	2921c83a 	sub	r16,r5,r4
10010800:	dc400115 	stw	r17,4(sp)
10010804:	000b883a 	mov	r5,zero
10010808:	2023883a 	mov	r17,r4
1001080c:	8009883a 	mov	r4,r16
10010810:	dc800215 	stw	r18,8(sp)
10010814:	dfc00315 	stw	ra,12(sp)
10010818:	000eba80 	call	1000eba8 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1001081c:	1025883a 	mov	r18,r2
10010820:	80800058 	cmpnei	r2,r16,1
10010824:	90c00304 	addi	r3,r18,12
10010828:	10001326 	beq	r2,zero,10010878 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x88>
1001082c:	1809883a 	mov	r4,r3
10010830:	800d883a 	mov	r6,r16
10010834:	880b883a 	mov	r5,r17
10010838:	0016c340 	call	10016c34 <memcpy>
1001083c:	1007883a 	mov	r3,r2
10010840:	008400f4 	movhi	r2,4099
10010844:	10a9aa04 	addi	r2,r2,-22872
10010848:	90800e1e 	bne	r18,r2,10010884 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x94>
1001084c:	1805883a 	mov	r2,r3
10010850:	dfc00317 	ldw	ra,12(sp)
10010854:	dc800217 	ldw	r18,8(sp)
10010858:	dc400117 	ldw	r17,4(sp)
1001085c:	dc000017 	ldw	r16,0(sp)
10010860:	dec00404 	addi	sp,sp,16
10010864:	f800283a 	ret
10010868:	00c400f4 	movhi	r3,4099
1001086c:	18e9ad04 	addi	r3,r3,-22860
10010870:	1805883a 	mov	r2,r3
10010874:	f800283a 	ret
10010878:	88800003 	ldbu	r2,0(r17)
1001087c:	90800305 	stb	r2,12(r18)
10010880:	003fef06 	br	10010840 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x50>
10010884:	94000015 	stw	r16,0(r18)
10010888:	90000215 	stw	zero,8(r18)
1001088c:	9421883a 	add	r16,r18,r16
10010890:	80000305 	stb	zero,12(r16)
10010894:	003fed06 	br	1001084c <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x5c>

10010898 <_ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE>:
10010898:	defffe04 	addi	sp,sp,-8
1001089c:	2805883a 	mov	r2,r5
100108a0:	dc000015 	stw	r16,0(sp)
100108a4:	300b883a 	mov	r5,r6
100108a8:	2021883a 	mov	r16,r4
100108ac:	380d883a 	mov	r6,r7
100108b0:	1009883a 	mov	r4,r2
100108b4:	000f883a 	mov	r7,zero
100108b8:	dfc00115 	stw	ra,4(sp)
100108bc:	00107f00 	call	100107f0 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>
100108c0:	80800015 	stw	r2,0(r16)
100108c4:	dfc00117 	ldw	ra,4(sp)
100108c8:	dc000017 	ldw	r16,0(sp)
100108cc:	dec00204 	addi	sp,sp,8
100108d0:	f800283a 	ret

100108d4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>:
100108d4:	21400226 	beq	r4,r5,100108e0 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0xc>
100108d8:	20000426 	beq	r4,zero,100108ec <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0x18>
100108dc:	000ed601 	jmpi	1000ed60 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
100108e0:	008400f4 	movhi	r2,4099
100108e4:	10a9ad04 	addi	r2,r2,-22860
100108e8:	f800283a 	ret
100108ec:	010400b4 	movhi	r4,4098
100108f0:	deffff04 	addi	sp,sp,-4
100108f4:	21184904 	addi	r4,r4,24868
100108f8:	dfc00015 	stw	ra,0(sp)
100108fc:	000a8280 	call	1000a828 <_ZSt19__throw_logic_errorPKc>

10010900 <_ZNSsC1ERKSsjRKSaIcE>:
10010900:	28800017 	ldw	r2,0(r5)
10010904:	defffe04 	addi	sp,sp,-8
10010908:	dfc00115 	stw	ra,4(sp)
1001090c:	10fffd17 	ldw	r3,-12(r2)
10010910:	dc000015 	stw	r16,0(sp)
10010914:	19800d36 	bltu	r3,r6,1001094c <_ZNSsC1ERKSsjRKSaIcE+0x4c>
10010918:	3011883a 	mov	r8,r6
1001091c:	2021883a 	mov	r16,r4
10010920:	3809883a 	mov	r4,r7
10010924:	200d883a 	mov	r6,r4
10010928:	000f883a 	mov	r7,zero
1001092c:	10cb883a 	add	r5,r2,r3
10010930:	1209883a 	add	r4,r2,r8
10010934:	00108d40 	call	100108d4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010938:	80800015 	stw	r2,0(r16)
1001093c:	dfc00117 	ldw	ra,4(sp)
10010940:	dc000017 	ldw	r16,0(sp)
10010944:	dec00204 	addi	sp,sp,8
10010948:	f800283a 	ret
1001094c:	014400b4 	movhi	r5,4098
10010950:	010400b4 	movhi	r4,4098
10010954:	180f883a 	mov	r7,r3
10010958:	29585404 	addi	r5,r5,24912
1001095c:	2117ee04 	addi	r4,r4,24504
10010960:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10010964 <_ZNSsC1ERKSsjj>:
10010964:	2a000017 	ldw	r8,0(r5)
10010968:	defffd04 	addi	sp,sp,-12
1001096c:	dfc00215 	stw	ra,8(sp)
10010970:	40bffd17 	ldw	r2,-12(r8)
10010974:	dc000115 	stw	r16,4(sp)
10010978:	11801136 	bltu	r2,r6,100109c0 <_ZNSsC1ERKSsjj+0x5c>
1001097c:	118bc83a 	sub	r5,r2,r6
10010980:	3007883a 	mov	r3,r6
10010984:	2021883a 	mov	r16,r4
10010988:	39400b36 	bltu	r7,r5,100109b8 <_ZNSsC1ERKSsjj+0x54>
1001098c:	28cb883a 	add	r5,r5,r3
10010990:	000f883a 	mov	r7,zero
10010994:	d98000c4 	addi	r6,sp,3
10010998:	414b883a 	add	r5,r8,r5
1001099c:	40c9883a 	add	r4,r8,r3
100109a0:	00108d40 	call	100108d4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
100109a4:	80800015 	stw	r2,0(r16)
100109a8:	dfc00217 	ldw	ra,8(sp)
100109ac:	dc000117 	ldw	r16,4(sp)
100109b0:	dec00304 	addi	sp,sp,12
100109b4:	f800283a 	ret
100109b8:	380b883a 	mov	r5,r7
100109bc:	003ff306 	br	1001098c <_ZNSsC1ERKSsjj+0x28>
100109c0:	014400b4 	movhi	r5,4098
100109c4:	010400b4 	movhi	r4,4098
100109c8:	100f883a 	mov	r7,r2
100109cc:	29585404 	addi	r5,r5,24912
100109d0:	2117ee04 	addi	r4,r4,24504
100109d4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100109d8 <_ZNKSs6substrEjj>:
100109d8:	28c00017 	ldw	r3,0(r5)
100109dc:	defffe04 	addi	sp,sp,-8
100109e0:	dfc00115 	stw	ra,4(sp)
100109e4:	18fffd17 	ldw	r3,-12(r3)
100109e8:	dc000015 	stw	r16,0(sp)
100109ec:	19800736 	bltu	r3,r6,10010a0c <_ZNKSs6substrEjj+0x34>
100109f0:	2021883a 	mov	r16,r4
100109f4:	00109640 	call	10010964 <_ZNSsC1ERKSsjj>
100109f8:	8005883a 	mov	r2,r16
100109fc:	dfc00117 	ldw	ra,4(sp)
10010a00:	dc000017 	ldw	r16,0(sp)
10010a04:	dec00204 	addi	sp,sp,8
10010a08:	f800283a 	ret
10010a0c:	014400b4 	movhi	r5,4098
10010a10:	010400b4 	movhi	r4,4098
10010a14:	180f883a 	mov	r7,r3
10010a18:	29585b04 	addi	r5,r5,24940
10010a1c:	2117ee04 	addi	r4,r4,24504
10010a20:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10010a24 <_ZNSsC1ERKSsjjRKSaIcE>:
10010a24:	2a000017 	ldw	r8,0(r5)
10010a28:	defffe04 	addi	sp,sp,-8
10010a2c:	dfc00115 	stw	ra,4(sp)
10010a30:	40bffd17 	ldw	r2,-12(r8)
10010a34:	dc000015 	stw	r16,0(sp)
10010a38:	11801136 	bltu	r2,r6,10010a80 <_ZNSsC1ERKSsjjRKSaIcE+0x5c>
10010a3c:	118bc83a 	sub	r5,r2,r6
10010a40:	3007883a 	mov	r3,r6
10010a44:	2021883a 	mov	r16,r4
10010a48:	39400b36 	bltu	r7,r5,10010a78 <_ZNSsC1ERKSsjjRKSaIcE+0x54>
10010a4c:	d9800217 	ldw	r6,8(sp)
10010a50:	28cb883a 	add	r5,r5,r3
10010a54:	000f883a 	mov	r7,zero
10010a58:	414b883a 	add	r5,r8,r5
10010a5c:	40c9883a 	add	r4,r8,r3
10010a60:	00108d40 	call	100108d4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010a64:	80800015 	stw	r2,0(r16)
10010a68:	dfc00117 	ldw	ra,4(sp)
10010a6c:	dc000017 	ldw	r16,0(sp)
10010a70:	dec00204 	addi	sp,sp,8
10010a74:	f800283a 	ret
10010a78:	380b883a 	mov	r5,r7
10010a7c:	003ff306 	br	10010a4c <_ZNSsC1ERKSsjjRKSaIcE+0x28>
10010a80:	014400b4 	movhi	r5,4098
10010a84:	010400b4 	movhi	r4,4098
10010a88:	100f883a 	mov	r7,r2
10010a8c:	29585404 	addi	r5,r5,24912
10010a90:	2117ee04 	addi	r4,r4,24504
10010a94:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10010a98 <_ZNSsC1IPcEET_S1_RKSaIcE>:
10010a98:	defffe04 	addi	sp,sp,-8
10010a9c:	2805883a 	mov	r2,r5
10010aa0:	dc000015 	stw	r16,0(sp)
10010aa4:	300b883a 	mov	r5,r6
10010aa8:	2021883a 	mov	r16,r4
10010aac:	380d883a 	mov	r6,r7
10010ab0:	1009883a 	mov	r4,r2
10010ab4:	000f883a 	mov	r7,zero
10010ab8:	dfc00115 	stw	ra,4(sp)
10010abc:	00108d40 	call	100108d4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010ac0:	80800015 	stw	r2,0(r16)
10010ac4:	dfc00117 	ldw	ra,4(sp)
10010ac8:	dc000017 	ldw	r16,0(sp)
10010acc:	dec00204 	addi	sp,sp,8
10010ad0:	f800283a 	ret

10010ad4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>:
10010ad4:	21400226 	beq	r4,r5,10010ae0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0xc>
10010ad8:	20000426 	beq	r4,zero,10010aec <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x18>
10010adc:	000ed601 	jmpi	1000ed60 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
10010ae0:	008400f4 	movhi	r2,4099
10010ae4:	10a9ad04 	addi	r2,r2,-22860
10010ae8:	f800283a 	ret
10010aec:	010400b4 	movhi	r4,4098
10010af0:	deffff04 	addi	sp,sp,-4
10010af4:	21184904 	addi	r4,r4,24868
10010af8:	dfc00015 	stw	ra,0(sp)
10010afc:	000a8280 	call	1000a828 <_ZSt19__throw_logic_errorPKc>

10010b00 <_ZNSsC1EPKcjRKSaIcE>:
10010b00:	defffe04 	addi	sp,sp,-8
10010b04:	2805883a 	mov	r2,r5
10010b08:	dc000015 	stw	r16,0(sp)
10010b0c:	298b883a 	add	r5,r5,r6
10010b10:	2021883a 	mov	r16,r4
10010b14:	380d883a 	mov	r6,r7
10010b18:	1009883a 	mov	r4,r2
10010b1c:	000f883a 	mov	r7,zero
10010b20:	dfc00115 	stw	ra,4(sp)
10010b24:	0010ad40 	call	10010ad4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10010b28:	80800015 	stw	r2,0(r16)
10010b2c:	dfc00117 	ldw	ra,4(sp)
10010b30:	dc000017 	ldw	r16,0(sp)
10010b34:	dec00204 	addi	sp,sp,8
10010b38:	f800283a 	ret

10010b3c <_ZNSs7replaceEjjPKcj>:
10010b3c:	00c400b4 	movhi	r3,4098
10010b40:	deffe904 	addi	sp,sp,-92
10010b44:	18d3b184 	addi	r3,r3,20166
10010b48:	d8c00d15 	stw	r3,52(sp)
10010b4c:	d8c01504 	addi	r3,sp,84
10010b50:	d8c00e15 	stw	r3,56(sp)
10010b54:	02040074 	movhi	r8,4097
10010b58:	d8c00604 	addi	r3,sp,24
10010b5c:	00840074 	movhi	r2,4097
10010b60:	10836d04 	addi	r2,r2,3508
10010b64:	4224f504 	addi	r8,r8,-27692
10010b68:	d9000315 	stw	r4,12(sp)
10010b6c:	1809883a 	mov	r4,r3
10010b70:	d8800f15 	stw	r2,60(sp)
10010b74:	d9c00415 	stw	r7,16(sp)
10010b78:	dfc01615 	stw	ra,88(sp)
10010b7c:	df001515 	stw	fp,84(sp)
10010b80:	da000c15 	stw	r8,48(sp)
10010b84:	dec01015 	stw	sp,64(sp)
10010b88:	d9400115 	stw	r5,4(sp)
10010b8c:	d9800515 	stw	r6,20(sp)
10010b90:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10010b94:	d8800317 	ldw	r2,12(sp)
10010b98:	10c00017 	ldw	r3,0(r2)
10010b9c:	d8800117 	ldw	r2,4(sp)
10010ba0:	19fffd17 	ldw	r7,-12(r3)
10010ba4:	38807b36 	bltu	r7,r2,10010d94 <_ZNSs7replaceEjjPKcj+0x258>
10010ba8:	d8800117 	ldw	r2,4(sp)
10010bac:	d9000517 	ldw	r4,20(sp)
10010bb0:	3885c83a 	sub	r2,r7,r2
10010bb4:	d8800215 	stw	r2,8(sp)
10010bb8:	20801a36 	bltu	r4,r2,10010c24 <_ZNSs7replaceEjjPKcj+0xe8>
10010bbc:	d9000217 	ldw	r4,8(sp)
10010bc0:	00900034 	movhi	r2,16384
10010bc4:	10bfff04 	addi	r2,r2,-4
10010bc8:	11c5c83a 	sub	r2,r2,r7
10010bcc:	1105883a 	add	r2,r2,r4
10010bd0:	d9001717 	ldw	r4,92(sp)
10010bd4:	11006a36 	bltu	r2,r4,10010d80 <_ZNSs7replaceEjjPKcj+0x244>
10010bd8:	d9000417 	ldw	r4,16(sp)
10010bdc:	20c0132e 	bgeu	r4,r3,10010c2c <_ZNSs7replaceEjjPKcj+0xf0>
10010be0:	d8801717 	ldw	r2,92(sp)
10010be4:	d9c00417 	ldw	r7,16(sp)
10010be8:	d9800217 	ldw	r6,8(sp)
10010bec:	d9400117 	ldw	r5,4(sp)
10010bf0:	d9000317 	ldw	r4,12(sp)
10010bf4:	d8800015 	stw	r2,0(sp)
10010bf8:	00bfffc4 	movi	r2,-1
10010bfc:	d8800715 	stw	r2,28(sp)
10010c00:	000f6f40 	call	1000f6f4 <_ZNSs15_M_replace_safeEjjPKcj>
10010c04:	d8800115 	stw	r2,4(sp)
10010c08:	d9000604 	addi	r4,sp,24
10010c0c:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10010c10:	d8800117 	ldw	r2,4(sp)
10010c14:	dfc01617 	ldw	ra,88(sp)
10010c18:	df001517 	ldw	fp,84(sp)
10010c1c:	dec01704 	addi	sp,sp,92
10010c20:	f800283a 	ret
10010c24:	d9000215 	stw	r4,8(sp)
10010c28:	003fe406 	br	10010bbc <_ZNSs7replaceEjjPKcj+0x80>
10010c2c:	19cf883a 	add	r7,r3,r7
10010c30:	393feb36 	bltu	r7,r4,10010be0 <_ZNSs7replaceEjjPKcj+0xa4>
10010c34:	18bfff17 	ldw	r2,-4(r3)
10010c38:	00bfe916 	blt	zero,r2,10010be0 <_ZNSs7replaceEjjPKcj+0xa4>
10010c3c:	d8801717 	ldw	r2,92(sp)
10010c40:	2085883a 	add	r2,r4,r2
10010c44:	d9000117 	ldw	r4,4(sp)
10010c48:	1909883a 	add	r4,r3,r4
10010c4c:	2080402e 	bgeu	r4,r2,10010d50 <_ZNSs7replaceEjjPKcj+0x214>
10010c50:	d8800117 	ldw	r2,4(sp)
10010c54:	d9000217 	ldw	r4,8(sp)
10010c58:	d9400417 	ldw	r5,16(sp)
10010c5c:	1105883a 	add	r2,r2,r4
10010c60:	1885883a 	add	r2,r3,r2
10010c64:	28801e36 	bltu	r5,r2,10010ce0 <_ZNSs7replaceEjjPKcj+0x1a4>
10010c68:	d8800417 	ldw	r2,16(sp)
10010c6c:	10c7c83a 	sub	r3,r2,r3
10010c70:	d8801717 	ldw	r2,92(sp)
10010c74:	1887883a 	add	r3,r3,r2
10010c78:	d8800217 	ldw	r2,8(sp)
10010c7c:	1885c83a 	sub	r2,r3,r2
10010c80:	d8800415 	stw	r2,16(sp)
10010c84:	d9400117 	ldw	r5,4(sp)
10010c88:	d9000317 	ldw	r4,12(sp)
10010c8c:	d9c01717 	ldw	r7,92(sp)
10010c90:	d9800217 	ldw	r6,8(sp)
10010c94:	00bfffc4 	movi	r2,-1
10010c98:	d8800715 	stw	r2,28(sp)
10010c9c:	000eed00 	call	1000eed0 <_ZNSs9_M_mutateEjjj>
10010ca0:	d8800317 	ldw	r2,12(sp)
10010ca4:	d8c00117 	ldw	r3,4(sp)
10010ca8:	11400017 	ldw	r5,0(r2)
10010cac:	d8801717 	ldw	r2,92(sp)
10010cb0:	28c9883a 	add	r4,r5,r3
10010cb4:	d8c00417 	ldw	r3,16(sp)
10010cb8:	10800058 	cmpnei	r2,r2,1
10010cbc:	28cb883a 	add	r5,r5,r3
10010cc0:	10002726 	beq	r2,zero,10010d60 <_ZNSs7replaceEjjPKcj+0x224>
10010cc4:	d8801717 	ldw	r2,92(sp)
10010cc8:	10002a26 	beq	r2,zero,10010d74 <_ZNSs7replaceEjjPKcj+0x238>
10010ccc:	100d883a 	mov	r6,r2
10010cd0:	0016c340 	call	10016c34 <memcpy>
10010cd4:	d8800317 	ldw	r2,12(sp)
10010cd8:	d8800115 	stw	r2,4(sp)
10010cdc:	003fca06 	br	10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010ce0:	d9801717 	ldw	r6,92(sp)
10010ce4:	00bfffc4 	movi	r2,-1
10010ce8:	d9c013c4 	addi	r7,sp,79
10010cec:	d9001404 	addi	r4,sp,80
10010cf0:	d8800715 	stw	r2,28(sp)
10010cf4:	0010b000 	call	10010b00 <_ZNSsC1EPKcjRKSaIcE>
10010cf8:	d8c01717 	ldw	r3,92(sp)
10010cfc:	d9c01417 	ldw	r7,80(sp)
10010d00:	d9800217 	ldw	r6,8(sp)
10010d04:	d9400117 	ldw	r5,4(sp)
10010d08:	d9000317 	ldw	r4,12(sp)
10010d0c:	00800044 	movi	r2,1
10010d10:	d8c00015 	stw	r3,0(sp)
10010d14:	d8800715 	stw	r2,28(sp)
10010d18:	000f6f40 	call	1000f6f4 <_ZNSs15_M_replace_safeEjjPKcj>
10010d1c:	d8c01417 	ldw	r3,80(sp)
10010d20:	d8800115 	stw	r2,4(sp)
10010d24:	008400f4 	movhi	r2,4099
10010d28:	10a9aa04 	addi	r2,r2,-22872
10010d2c:	193ffd04 	addi	r4,r3,-12
10010d30:	20bfb526 	beq	r4,r2,10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010d34:	18bfff17 	ldw	r2,-4(r3)
10010d38:	117fffc4 	addi	r5,r2,-1
10010d3c:	197fff15 	stw	r5,-4(r3)
10010d40:	00bfb116 	blt	zero,r2,10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010d44:	d94013c4 	addi	r5,sp,79
10010d48:	000edfc0 	call	1000edfc <_ZNSs4_Rep10_M_destroyERKSaIcE>
10010d4c:	003fae06 	br	10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010d50:	d8800417 	ldw	r2,16(sp)
10010d54:	10c5c83a 	sub	r2,r2,r3
10010d58:	d8800415 	stw	r2,16(sp)
10010d5c:	003fc906 	br	10010c84 <_ZNSs7replaceEjjPKcj+0x148>
10010d60:	28800003 	ldbu	r2,0(r5)
10010d64:	d8c00317 	ldw	r3,12(sp)
10010d68:	20800005 	stb	r2,0(r4)
10010d6c:	d8c00115 	stw	r3,4(sp)
10010d70:	003fa506 	br	10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010d74:	d8800317 	ldw	r2,12(sp)
10010d78:	d8800115 	stw	r2,4(sp)
10010d7c:	003fa206 	br	10010c08 <_ZNSs7replaceEjjPKcj+0xcc>
10010d80:	010400b4 	movhi	r4,4098
10010d84:	00bfffc4 	movi	r2,-1
10010d88:	21183104 	addi	r4,r4,24772
10010d8c:	d8800715 	stw	r2,28(sp)
10010d90:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>
10010d94:	d9800117 	ldw	r6,4(sp)
10010d98:	014400b4 	movhi	r5,4098
10010d9c:	010400b4 	movhi	r4,4098
10010da0:	00bfffc4 	movi	r2,-1
10010da4:	29583104 	addi	r5,r5,24772
10010da8:	2117ee04 	addi	r4,r4,24504
10010dac:	d8800715 	stw	r2,28(sp)
10010db0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
10010db4:	d9001417 	ldw	r4,80(sp)
10010db8:	d8c00817 	ldw	r3,32(sp)
10010dbc:	008400f4 	movhi	r2,4099
10010dc0:	10a9aa04 	addi	r2,r2,-22872
10010dc4:	213ffd04 	addi	r4,r4,-12
10010dc8:	d8c00115 	stw	r3,4(sp)
10010dcc:	20800226 	beq	r4,r2,10010dd8 <_ZNSs7replaceEjjPKcj+0x29c>
10010dd0:	d94013c4 	addi	r5,sp,79
10010dd4:	000ee000 	call	1000ee00 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
10010dd8:	d9000117 	ldw	r4,4(sp)
10010ddc:	00bfffc4 	movi	r2,-1
10010de0:	d8800715 	stw	r2,28(sp)
10010de4:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

10010de8 <_ZNSs7replaceEjjRKSs>:
10010de8:	39c00017 	ldw	r7,0(r7)
10010dec:	defffe04 	addi	sp,sp,-8
10010df0:	dfc00115 	stw	ra,4(sp)
10010df4:	38bffd17 	ldw	r2,-12(r7)
10010df8:	d8800015 	stw	r2,0(sp)
10010dfc:	0010b3c0 	call	10010b3c <_ZNSs7replaceEjjPKcj>
10010e00:	dfc00117 	ldw	ra,4(sp)
10010e04:	dec00204 	addi	sp,sp,8
10010e08:	f800283a 	ret

10010e0c <_ZNSs7replaceEjjRKSsjj>:
10010e0c:	39c00017 	ldw	r7,0(r7)
10010e10:	deffff04 	addi	sp,sp,-4
10010e14:	d8c00117 	ldw	r3,4(sp)
10010e18:	38bffd17 	ldw	r2,-12(r7)
10010e1c:	dfc00015 	stw	ra,0(sp)
10010e20:	da000217 	ldw	r8,8(sp)
10010e24:	10c00c36 	bltu	r2,r3,10010e58 <_ZNSs7replaceEjjRKSsjj+0x4c>
10010e28:	10c5c83a 	sub	r2,r2,r3
10010e2c:	38cf883a 	add	r7,r7,r3
10010e30:	40800436 	bltu	r8,r2,10010e44 <_ZNSs7replaceEjjRKSsjj+0x38>
10010e34:	d8800115 	stw	r2,4(sp)
10010e38:	dfc00017 	ldw	ra,0(sp)
10010e3c:	dec00104 	addi	sp,sp,4
10010e40:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>
10010e44:	4005883a 	mov	r2,r8
10010e48:	d8800115 	stw	r2,4(sp)
10010e4c:	dfc00017 	ldw	ra,0(sp)
10010e50:	dec00104 	addi	sp,sp,4
10010e54:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>
10010e58:	014400b4 	movhi	r5,4098
10010e5c:	010400b4 	movhi	r4,4098
10010e60:	100f883a 	mov	r7,r2
10010e64:	180d883a 	mov	r6,r3
10010e68:	29583104 	addi	r5,r5,24772
10010e6c:	2117ee04 	addi	r4,r4,24504
10010e70:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10010e74 <_ZNSs7replaceEjjPKc>:
10010e74:	defffa04 	addi	sp,sp,-24
10010e78:	dc000415 	stw	r16,16(sp)
10010e7c:	2021883a 	mov	r16,r4
10010e80:	3809883a 	mov	r4,r7
10010e84:	dfc00515 	stw	ra,20(sp)
10010e88:	d9c00315 	stw	r7,12(sp)
10010e8c:	d9400215 	stw	r5,8(sp)
10010e90:	d9800115 	stw	r6,4(sp)
10010e94:	00178f00 	call	100178f0 <strlen>
10010e98:	d9c00317 	ldw	r7,12(sp)
10010e9c:	d9800117 	ldw	r6,4(sp)
10010ea0:	d9400217 	ldw	r5,8(sp)
10010ea4:	d8800015 	stw	r2,0(sp)
10010ea8:	8009883a 	mov	r4,r16
10010eac:	0010b3c0 	call	10010b3c <_ZNSs7replaceEjjPKcj>
10010eb0:	dfc00517 	ldw	ra,20(sp)
10010eb4:	dc000417 	ldw	r16,16(sp)
10010eb8:	dec00604 	addi	sp,sp,24
10010ebc:	f800283a 	ret

10010ec0 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj>:
10010ec0:	20800017 	ldw	r2,0(r4)
10010ec4:	314dc83a 	sub	r6,r6,r5
10010ec8:	288bc83a 	sub	r5,r5,r2
10010ecc:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010ed0 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs>:
10010ed0:	39c00017 	ldw	r7,0(r7)
10010ed4:	20800017 	ldw	r2,0(r4)
10010ed8:	defffe04 	addi	sp,sp,-8
10010edc:	38fffd17 	ldw	r3,-12(r7)
10010ee0:	314dc83a 	sub	r6,r6,r5
10010ee4:	288bc83a 	sub	r5,r5,r2
10010ee8:	d8c00015 	stw	r3,0(sp)
10010eec:	dfc00115 	stw	ra,4(sp)
10010ef0:	0010b3c0 	call	10010b3c <_ZNSs7replaceEjjPKcj>
10010ef4:	dfc00117 	ldw	ra,4(sp)
10010ef8:	dec00204 	addi	sp,sp,8
10010efc:	f800283a 	ret

10010f00 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc>:
10010f00:	defffa04 	addi	sp,sp,-24
10010f04:	dc000215 	stw	r16,8(sp)
10010f08:	2021883a 	mov	r16,r4
10010f0c:	3809883a 	mov	r4,r7
10010f10:	dfc00515 	stw	ra,20(sp)
10010f14:	dc800415 	stw	r18,16(sp)
10010f18:	dc400315 	stw	r17,12(sp)
10010f1c:	d9c00115 	stw	r7,4(sp)
10010f20:	2823883a 	mov	r17,r5
10010f24:	3025883a 	mov	r18,r6
10010f28:	00178f00 	call	100178f0 <strlen>
10010f2c:	81400017 	ldw	r5,0(r16)
10010f30:	d9c00117 	ldw	r7,4(sp)
10010f34:	d8800015 	stw	r2,0(sp)
10010f38:	944dc83a 	sub	r6,r18,r17
10010f3c:	894bc83a 	sub	r5,r17,r5
10010f40:	8009883a 	mov	r4,r16
10010f44:	0010b3c0 	call	10010b3c <_ZNSs7replaceEjjPKcj>
10010f48:	dfc00517 	ldw	ra,20(sp)
10010f4c:	dc800417 	ldw	r18,16(sp)
10010f50:	dc400317 	ldw	r17,12(sp)
10010f54:	dc000217 	ldw	r16,8(sp)
10010f58:	dec00604 	addi	sp,sp,24
10010f5c:	f800283a 	ret

10010f60 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_>:
10010f60:	d8800017 	ldw	r2,0(sp)
10010f64:	20c00017 	ldw	r3,0(r4)
10010f68:	314dc83a 	sub	r6,r6,r5
10010f6c:	11c5c83a 	sub	r2,r2,r7
10010f70:	28cbc83a 	sub	r5,r5,r3
10010f74:	d8800015 	stw	r2,0(sp)
10010f78:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010f7c <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_>:
10010f7c:	d8800017 	ldw	r2,0(sp)
10010f80:	20c00017 	ldw	r3,0(r4)
10010f84:	314dc83a 	sub	r6,r6,r5
10010f88:	11c5c83a 	sub	r2,r2,r7
10010f8c:	28cbc83a 	sub	r5,r5,r3
10010f90:	d8800015 	stw	r2,0(sp)
10010f94:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010f98 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE>:
10010f98:	20800017 	ldw	r2,0(r4)
10010f9c:	deffff04 	addi	sp,sp,-4
10010fa0:	314dc83a 	sub	r6,r6,r5
10010fa4:	288bc83a 	sub	r5,r5,r2
10010fa8:	d9c00015 	stw	r7,0(sp)
10010fac:	dec00104 	addi	sp,sp,4
10010fb0:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010fb4 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_>:
10010fb4:	d8800017 	ldw	r2,0(sp)
10010fb8:	20c00017 	ldw	r3,0(r4)
10010fbc:	314dc83a 	sub	r6,r6,r5
10010fc0:	11c5c83a 	sub	r2,r2,r7
10010fc4:	28cbc83a 	sub	r5,r5,r3
10010fc8:	d8800015 	stw	r2,0(sp)
10010fcc:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010fd0 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_>:
10010fd0:	d8800017 	ldw	r2,0(sp)
10010fd4:	20c00017 	ldw	r3,0(r4)
10010fd8:	314dc83a 	sub	r6,r6,r5
10010fdc:	11c5c83a 	sub	r2,r2,r7
10010fe0:	28cbc83a 	sub	r5,r5,r3
10010fe4:	d8800015 	stw	r2,0(sp)
10010fe8:	0010b3c1 	jmpi	10010b3c <_ZNSs7replaceEjjPKcj>

10010fec <_ZNSsC1EPKcRKSaIcE>:
10010fec:	defffc04 	addi	sp,sp,-16
10010ff0:	dc400215 	stw	r17,8(sp)
10010ff4:	dc000115 	stw	r16,4(sp)
10010ff8:	dfc00315 	stw	ra,12(sp)
10010ffc:	2821883a 	mov	r16,r5
10011000:	2023883a 	mov	r17,r4
10011004:	28000e26 	beq	r5,zero,10011040 <_ZNSsC1EPKcRKSaIcE+0x54>
10011008:	2809883a 	mov	r4,r5
1001100c:	d9800015 	stw	r6,0(sp)
10011010:	00178f00 	call	100178f0 <strlen>
10011014:	d9800017 	ldw	r6,0(sp)
10011018:	808b883a 	add	r5,r16,r2
1001101c:	000f883a 	mov	r7,zero
10011020:	8009883a 	mov	r4,r16
10011024:	0010ad40 	call	10010ad4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10011028:	88800015 	stw	r2,0(r17)
1001102c:	dfc00317 	ldw	ra,12(sp)
10011030:	dc400217 	ldw	r17,8(sp)
10011034:	dc000117 	ldw	r16,4(sp)
10011038:	dec00404 	addi	sp,sp,16
1001103c:	f800283a 	ret
10011040:	017fffc4 	movi	r5,-1
10011044:	003ff506 	br	1001101c <_ZNSsC1EPKcRKSaIcE+0x30>

10011048 <_ZNSsC1ESt16initializer_listIcERKSaIcE>:
10011048:	defffe04 	addi	sp,sp,-8
1001104c:	2805883a 	mov	r2,r5
10011050:	dc000015 	stw	r16,0(sp)
10011054:	298b883a 	add	r5,r5,r6
10011058:	2021883a 	mov	r16,r4
1001105c:	380d883a 	mov	r6,r7
10011060:	1009883a 	mov	r4,r2
10011064:	000f883a 	mov	r7,zero
10011068:	dfc00115 	stw	ra,4(sp)
1001106c:	0010ad40 	call	10010ad4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10011070:	80800015 	stw	r2,0(r16)
10011074:	dfc00117 	ldw	ra,4(sp)
10011078:	dc000017 	ldw	r16,0(sp)
1001107c:	dec00204 	addi	sp,sp,8
10011080:	f800283a 	ret

10011084 <_ZNSsC1IPKcEET_S2_RKSaIcE>:
10011084:	defffe04 	addi	sp,sp,-8
10011088:	2805883a 	mov	r2,r5
1001108c:	dc000015 	stw	r16,0(sp)
10011090:	300b883a 	mov	r5,r6
10011094:	2021883a 	mov	r16,r4
10011098:	380d883a 	mov	r6,r7
1001109c:	1009883a 	mov	r4,r2
100110a0:	000f883a 	mov	r7,zero
100110a4:	dfc00115 	stw	ra,4(sp)
100110a8:	0010ad40 	call	10010ad4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
100110ac:	80800015 	stw	r2,0(r16)
100110b0:	dfc00117 	ldw	ra,4(sp)
100110b4:	dc000017 	ldw	r16,0(sp)
100110b8:	dec00204 	addi	sp,sp,8
100110bc:	f800283a 	ret

100110c0 <_ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_>:
100110c0:	20800017 	ldw	r2,0(r4)
100110c4:	28c00017 	ldw	r3,0(r5)
100110c8:	10c5003a 	cmpeq	r2,r2,r3
100110cc:	f800283a 	ret

100110d0 <_ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_>:
100110d0:	20800017 	ldw	r2,0(r4)
100110d4:	28c00017 	ldw	r3,0(r5)
100110d8:	10c5003a 	cmpeq	r2,r2,r3
100110dc:	f800283a 	ret

100110e0 <_ZNSt13random_device7_M_initERKSs>:
100110e0:	defffc04 	addi	sp,sp,-16
100110e4:	dc000015 	stw	r16,0(sp)
100110e8:	2821883a 	mov	r16,r5
100110ec:	014400b4 	movhi	r5,4098
100110f0:	dc800215 	stw	r18,8(sp)
100110f4:	29586504 	addi	r5,r5,24980
100110f8:	2025883a 	mov	r18,r4
100110fc:	8009883a 	mov	r4,r16
10011100:	dc400115 	stw	r17,4(sp)
10011104:	dfc00315 	stw	ra,12(sp)
10011108:	84400017 	ldw	r17,0(r16)
1001110c:	000e9840 	call	1000e984 <_ZNKSs7compareEPKc>
10011110:	10001126 	beq	r2,zero,10011158 <_ZNSt13random_device7_M_initERKSs+0x78>
10011114:	014400b4 	movhi	r5,4098
10011118:	29586104 	addi	r5,r5,24964
1001111c:	8009883a 	mov	r4,r16
10011120:	000e9840 	call	1000e984 <_ZNKSs7compareEPKc>
10011124:	10000f1e 	bne	r2,zero,10011164 <_ZNSt13random_device7_M_initERKSs+0x84>
10011128:	014400b4 	movhi	r5,4098
1001112c:	29587704 	addi	r5,r5,25052
10011130:	8809883a 	mov	r4,r17
10011134:	00156680 	call	10015668 <fopen>
10011138:	90800015 	stw	r2,0(r18)
1001113c:	10000e26 	beq	r2,zero,10011178 <_ZNSt13random_device7_M_initERKSs+0x98>
10011140:	dfc00317 	ldw	ra,12(sp)
10011144:	dc800217 	ldw	r18,8(sp)
10011148:	dc400117 	ldw	r17,4(sp)
1001114c:	dc000017 	ldw	r16,0(sp)
10011150:	dec00404 	addi	sp,sp,16
10011154:	f800283a 	ret
10011158:	044400b4 	movhi	r17,4098
1001115c:	8c586104 	addi	r17,r17,24964
10011160:	003ff106 	br	10011128 <_ZNSt13random_device7_M_initERKSs+0x48>
10011164:	014400b4 	movhi	r5,4098
10011168:	29586704 	addi	r5,r5,24988
1001116c:	8009883a 	mov	r4,r16
10011170:	000e9840 	call	1000e984 <_ZNKSs7compareEPKc>
10011174:	103fec26 	beq	r2,zero,10011128 <_ZNSt13random_device7_M_initERKSs+0x48>
10011178:	010400b4 	movhi	r4,4098
1001117c:	21186a04 	addi	r4,r4,25000
10011180:	000ac780 	call	1000ac78 <_ZSt21__throw_runtime_errorPKc>

10011184 <_ZNSt13random_device14_M_init_pretr1ERKSs>:
10011184:	defffc04 	addi	sp,sp,-16
10011188:	dc400215 	stw	r17,8(sp)
1001118c:	2823883a 	mov	r17,r5
10011190:	014400b4 	movhi	r5,4098
10011194:	dc000115 	stw	r16,4(sp)
10011198:	29587804 	addi	r5,r5,25056
1001119c:	2021883a 	mov	r16,r4
100111a0:	8809883a 	mov	r4,r17
100111a4:	dfc00315 	stw	ra,12(sp)
100111a8:	000e9840 	call	1000e984 <_ZNKSs7compareEPKc>
100111ac:	1000161e 	bne	r2,zero,10011208 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x84>
100111b0:	01055c44 	movi	r4,5489
100111b4:	019b0234 	movhi	r6,27656
100111b8:	81000015 	stw	r4,0(r16)
100111bc:	81400104 	addi	r5,r16,4
100111c0:	00c00044 	movi	r3,1
100111c4:	31a25944 	addi	r6,r6,-30363
100111c8:	00000106 	br	100111d0 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x4c>
100111cc:	29400104 	addi	r5,r5,4
100111d0:	2004d7ba 	srli	r2,r4,30
100111d4:	1104f03a 	xor	r2,r2,r4
100111d8:	1185383a 	mul	r2,r2,r6
100111dc:	10c9883a 	add	r4,r2,r3
100111e0:	18c00044 	addi	r3,r3,1
100111e4:	29000015 	stw	r4,0(r5)
100111e8:	18809c20 	cmpeqi	r2,r3,624
100111ec:	103ff726 	beq	r2,zero,100111cc <_ZNSt13random_device14_M_init_pretr1ERKSs+0x48>
100111f0:	80c27015 	stw	r3,2496(r16)
100111f4:	dfc00317 	ldw	ra,12(sp)
100111f8:	dc400217 	ldw	r17,8(sp)
100111fc:	dc000117 	ldw	r16,4(sp)
10011200:	dec00404 	addi	sp,sp,16
10011204:	f800283a 	ret
10011208:	8c400017 	ldw	r17,0(r17)
1001120c:	000d883a 	mov	r6,zero
10011210:	d80b883a 	mov	r5,sp
10011214:	8809883a 	mov	r4,r17
10011218:	0017bf40 	call	10017bf4 <strtoul>
1001121c:	1009883a 	mov	r4,r2
10011220:	88800007 	ldb	r2,0(r17)
10011224:	10000326 	beq	r2,zero,10011234 <_ZNSt13random_device14_M_init_pretr1ERKSs+0xb0>
10011228:	d8800017 	ldw	r2,0(sp)
1001122c:	10800007 	ldb	r2,0(r2)
10011230:	103fe026 	beq	r2,zero,100111b4 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x30>
10011234:	010400b4 	movhi	r4,4098
10011238:	21186a04 	addi	r4,r4,25000
1001123c:	000ac780 	call	1000ac78 <_ZSt21__throw_runtime_errorPKc>

10011240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
10011240:	21400015 	stw	r5,0(r4)
10011244:	f800283a 	ret

10011248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj>:
10011248:	21400115 	stw	r5,4(r4)
1001124c:	f800283a 	ret

10011250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
10011250:	20800017 	ldw	r2,0(r4)
10011254:	f800283a 	ret

10011258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10011258:	20800204 	addi	r2,r4,8
1001125c:	f800283a 	ret

10011260 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10011260:	20800204 	addi	r2,r4,8
10011264:	f800283a 	ret

10011268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
10011268:	21400215 	stw	r5,8(r4)
1001126c:	f800283a 	ret

10011270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
10011270:	20800017 	ldw	r2,0(r4)
10011274:	21400115 	stw	r5,4(r4)
10011278:	1145883a 	add	r2,r2,r5
1001127c:	10000005 	stb	zero,0(r2)
10011280:	f800283a 	ret

10011284 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
10011284:	20800017 	ldw	r2,0(r4)
10011288:	21000204 	addi	r4,r4,8
1001128c:	1105003a 	cmpeq	r2,r2,r4
10011290:	f800283a 	ret

10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
10011294:	29000017 	ldw	r4,0(r5)
10011298:	20000e16 	blt	r4,zero,100112d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>
1001129c:	3100062e 	bgeu	r6,r4,100112b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
100112a0:	318d883a 	add	r6,r6,r6
100112a4:	2180042e 	bgeu	r4,r6,100112b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
100112a8:	30000516 	blt	r6,zero,100112c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
100112ac:	29800015 	stw	r6,0(r5)
100112b0:	31000044 	addi	r4,r6,1
100112b4:	00088e81 	jmpi	100088e8 <_Znwj>
100112b8:	21000044 	addi	r4,r4,1
100112bc:	00088e81 	jmpi	100088e8 <_Znwj>
100112c0:	00a00034 	movhi	r2,32768
100112c4:	10bfffc4 	addi	r2,r2,-1
100112c8:	28800015 	stw	r2,0(r5)
100112cc:	01200034 	movhi	r4,32768
100112d0:	00088e81 	jmpi	100088e8 <_Znwj>
100112d4:	010400b4 	movhi	r4,4098
100112d8:	deffff04 	addi	sp,sp,-4
100112dc:	21187a04 	addi	r4,r4,25064
100112e0:	dfc00015 	stw	ra,0(sp)
100112e4:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

100112e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
100112e8:	20c00017 	ldw	r3,0(r4)
100112ec:	20800204 	addi	r2,r4,8
100112f0:	18800226 	beq	r3,r2,100112fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x14>
100112f4:	1809883a 	mov	r4,r3
100112f8:	0008e3c1 	jmpi	10008e3c <_ZdlPv>
100112fc:	f800283a 	ret

10011300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj>:
10011300:	21000017 	ldw	r4,0(r4)
10011304:	0008e3c1 	jmpi	10008e3c <_ZdlPv>

10011308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>:
10011308:	defffc04 	addi	sp,sp,-16
1001130c:	dc400215 	stw	r17,8(sp)
10011310:	dc000115 	stw	r16,4(sp)
10011314:	dfc00315 	stw	ra,12(sp)
10011318:	d9400015 	stw	r5,0(sp)
1001131c:	28800428 	cmpgeui	r2,r5,16
10011320:	2021883a 	mov	r16,r4
10011324:	3023883a 	mov	r17,r6
10011328:	1000151e 	bne	r2,zero,10011380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x78>
1001132c:	20800017 	ldw	r2,0(r4)
10011330:	2807883a 	mov	r3,r5
10011334:	18000a26 	beq	r3,zero,10011360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>
10011338:	19000058 	cmpnei	r4,r3,1
1001133c:	20001726 	beq	r4,zero,1001139c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x94>
10011340:	89403fcc 	andi	r5,r17,255
10011344:	2940201c 	xori	r5,r5,128
10011348:	180d883a 	mov	r6,r3
1001134c:	1009883a 	mov	r4,r2
10011350:	297fe004 	addi	r5,r5,-128
10011354:	0016e600 	call	10016e60 <memset>
10011358:	d8c00017 	ldw	r3,0(sp)
1001135c:	80800017 	ldw	r2,0(r16)
10011360:	80c00115 	stw	r3,4(r16)
10011364:	10c5883a 	add	r2,r2,r3
10011368:	10000005 	stb	zero,0(r2)
1001136c:	dfc00317 	ldw	ra,12(sp)
10011370:	dc400217 	ldw	r17,8(sp)
10011374:	dc000117 	ldw	r16,4(sp)
10011378:	dec00404 	addi	sp,sp,16
1001137c:	f800283a 	ret
10011380:	000d883a 	mov	r6,zero
10011384:	d80b883a 	mov	r5,sp
10011388:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
1001138c:	d8c00017 	ldw	r3,0(sp)
10011390:	80800015 	stw	r2,0(r16)
10011394:	80c00215 	stw	r3,8(r16)
10011398:	003fe606 	br	10011334 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x2c>
1001139c:	14400005 	stb	r17,0(r2)
100113a0:	d8c00017 	ldw	r3,0(sp)
100113a4:	80800017 	ldw	r2,0(r16)
100113a8:	003fed06 	br	10011360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>

100113ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc>:
100113ac:	31803fcc 	andi	r6,r6,255
100113b0:	3180201c 	xori	r6,r6,128
100113b4:	31bfe004 	addi	r6,r6,-128
100113b8:	00113081 	jmpi	10011308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

100113bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
100113bc:	2005883a 	mov	r2,r4
100113c0:	f800283a 	ret

100113c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
100113c4:	2005883a 	mov	r2,r4
100113c8:	f800283a 	ret

100113cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
100113cc:	21c00117 	ldw	r7,4(r4)
100113d0:	2805883a 	mov	r2,r5
100113d4:	39400136 	bltu	r7,r5,100113dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x10>
100113d8:	f800283a 	ret
100113dc:	010400b4 	movhi	r4,4098
100113e0:	deffff04 	addi	sp,sp,-4
100113e4:	300b883a 	mov	r5,r6
100113e8:	2117ee04 	addi	r4,r4,24504
100113ec:	100d883a 	mov	r6,r2
100113f0:	dfc00015 	stw	ra,0(sp)
100113f4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100113f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
100113f8:	00a00034 	movhi	r2,32768
100113fc:	20c00117 	ldw	r3,4(r4)
10011400:	10bfffc4 	addi	r2,r2,-1
10011404:	288b883a 	add	r5,r5,r2
10011408:	28cbc83a 	sub	r5,r5,r3
1001140c:	29800136 	bltu	r5,r6,10011414 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x1c>
10011410:	f800283a 	ret
10011414:	deffff04 	addi	sp,sp,-4
10011418:	3809883a 	mov	r4,r7
1001141c:	dfc00015 	stw	ra,0(sp)
10011420:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

10011424 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj>:
10011424:	20800117 	ldw	r2,4(r4)
10011428:	1145c83a 	sub	r2,r2,r5
1001142c:	3080012e 	bgeu	r6,r2,10011434 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj+0x10>
10011430:	3005883a 	mov	r2,r6
10011434:	f800283a 	ret

10011438 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
10011438:	20800017 	ldw	r2,0(r4)
1001143c:	28800436 	bltu	r5,r2,10011450 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x18>
10011440:	20c00117 	ldw	r3,4(r4)
10011444:	10c5883a 	add	r2,r2,r3
10011448:	1145803a 	cmpltu	r2,r2,r5
1001144c:	f800283a 	ret
10011450:	00800044 	movi	r2,1
10011454:	f800283a 	ret

10011458 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
10011458:	30c00058 	cmpnei	r3,r6,1
1001145c:	18000326 	beq	r3,zero,1001146c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x14>
10011460:	3000011e 	bne	r6,zero,10011468 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
10011464:	f800283a 	ret
10011468:	0016c341 	jmpi	10016c34 <memcpy>
1001146c:	28800003 	ldbu	r2,0(r5)
10011470:	20800005 	stb	r2,0(r4)
10011474:	f800283a 	ret

10011478 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
10011478:	30c00058 	cmpnei	r3,r6,1
1001147c:	18000326 	beq	r3,zero,1001148c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x14>
10011480:	3000011e 	bne	r6,zero,10011488 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x10>
10011484:	f800283a 	ret
10011488:	0016d341 	jmpi	10016d34 <memmove>
1001148c:	28800003 	ldbu	r2,0(r5)
10011490:	20800005 	stb	r2,0(r4)
10011494:	f800283a 	ret

10011498 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>:
10011498:	28800058 	cmpnei	r2,r5,1
1001149c:	200f883a 	mov	r7,r4
100114a0:	3007883a 	mov	r3,r6
100114a4:	10000726 	beq	r2,zero,100114c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x2c>
100114a8:	2800011e 	bne	r5,zero,100114b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x18>
100114ac:	f800283a 	ret
100114b0:	280d883a 	mov	r6,r5
100114b4:	19403fcc 	andi	r5,r3,255
100114b8:	2940201c 	xori	r5,r5,128
100114bc:	297fe004 	addi	r5,r5,-128
100114c0:	0016e601 	jmpi	10016e60 <memset>
100114c4:	39800005 	stb	r6,0(r7)
100114c8:	f800283a 	ret

100114cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_>:
100114cc:	314dc83a 	sub	r6,r6,r5
100114d0:	30c00058 	cmpnei	r3,r6,1
100114d4:	18000326 	beq	r3,zero,100114e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x18>
100114d8:	3000011e 	bne	r6,zero,100114e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x14>
100114dc:	f800283a 	ret
100114e0:	0016c341 	jmpi	10016c34 <memcpy>
100114e4:	28800003 	ldbu	r2,0(r5)
100114e8:	20800005 	stb	r2,0(r4)
100114ec:	f800283a 	ret

100114f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_>:
100114f0:	314dc83a 	sub	r6,r6,r5
100114f4:	30c00058 	cmpnei	r3,r6,1
100114f8:	18000326 	beq	r3,zero,10011508 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x18>
100114fc:	3000011e 	bne	r6,zero,10011504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x14>
10011500:	f800283a 	ret
10011504:	0016c341 	jmpi	10016c34 <memcpy>
10011508:	28800003 	ldbu	r2,0(r5)
1001150c:	20800005 	stb	r2,0(r4)
10011510:	f800283a 	ret

10011514 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
10011514:	314dc83a 	sub	r6,r6,r5
10011518:	30c00058 	cmpnei	r3,r6,1
1001151c:	18000326 	beq	r3,zero,1001152c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x18>
10011520:	3000011e 	bne	r6,zero,10011528 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x14>
10011524:	f800283a 	ret
10011528:	0016c341 	jmpi	10016c34 <memcpy>
1001152c:	28800003 	ldbu	r2,0(r5)
10011530:	20800005 	stb	r2,0(r4)
10011534:	f800283a 	ret

10011538 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
10011538:	314dc83a 	sub	r6,r6,r5
1001153c:	30c00058 	cmpnei	r3,r6,1
10011540:	18000326 	beq	r3,zero,10011550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x18>
10011544:	3000011e 	bne	r6,zero,1001154c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x14>
10011548:	f800283a 	ret
1001154c:	0016c341 	jmpi	10016c34 <memcpy>
10011550:	28800003 	ldbu	r2,0(r5)
10011554:	20800005 	stb	r2,0(r4)
10011558:	f800283a 	ret

1001155c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj>:
1001155c:	2145c83a 	sub	r2,r4,r5
10011560:	f800283a 	ret

10011564 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
10011564:	21402e26 	beq	r4,r5,10011620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xbc>
10011568:	defff904 	addi	sp,sp,-28
1001156c:	dd000515 	stw	r20,20(sp)
10011570:	dfc00615 	stw	ra,24(sp)
10011574:	dcc00415 	stw	r19,16(sp)
10011578:	dc800315 	stw	r18,12(sp)
1001157c:	dc400215 	stw	r17,8(sp)
10011580:	dc000115 	stw	r16,4(sp)
10011584:	24400017 	ldw	r17,0(r4)
10011588:	25000204 	addi	r20,r4,8
1001158c:	2cc00117 	ldw	r19,4(r5)
10011590:	a4402426 	beq	r20,r17,10011624 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc0>
10011594:	21800217 	ldw	r6,8(r4)
10011598:	2825883a 	mov	r18,r5
1001159c:	2021883a 	mov	r16,r4
100115a0:	34c01336 	bltu	r6,r19,100115f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x8c>
100115a4:	98000726 	beq	r19,zero,100115c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
100115a8:	98800058 	cmpnei	r2,r19,1
100115ac:	91400017 	ldw	r5,0(r18)
100115b0:	10001e26 	beq	r2,zero,1001162c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc8>
100115b4:	8809883a 	mov	r4,r17
100115b8:	980d883a 	mov	r6,r19
100115bc:	0016c340 	call	10016c34 <memcpy>
100115c0:	84400017 	ldw	r17,0(r16)
100115c4:	84c00115 	stw	r19,4(r16)
100115c8:	8ce3883a 	add	r17,r17,r19
100115cc:	88000005 	stb	zero,0(r17)
100115d0:	dfc00617 	ldw	ra,24(sp)
100115d4:	dd000517 	ldw	r20,20(sp)
100115d8:	dcc00417 	ldw	r19,16(sp)
100115dc:	dc800317 	ldw	r18,12(sp)
100115e0:	dc400217 	ldw	r17,8(sp)
100115e4:	dc000117 	ldw	r16,4(sp)
100115e8:	dec00704 	addi	sp,sp,28
100115ec:	f800283a 	ret
100115f0:	d80b883a 	mov	r5,sp
100115f4:	dcc00015 	stw	r19,0(sp)
100115f8:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100115fc:	81000017 	ldw	r4,0(r16)
10011600:	1023883a 	mov	r17,r2
10011604:	a1000126 	beq	r20,r4,1001160c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xa8>
10011608:	0008e3c0 	call	10008e3c <_ZdlPv>
1001160c:	d8800017 	ldw	r2,0(sp)
10011610:	84400015 	stw	r17,0(r16)
10011614:	80800215 	stw	r2,8(r16)
10011618:	983fea26 	beq	r19,zero,100115c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
1001161c:	003fe206 	br	100115a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x44>
10011620:	f800283a 	ret
10011624:	018003c4 	movi	r6,15
10011628:	003fdb06 	br	10011598 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
1001162c:	28800003 	ldbu	r2,0(r5)
10011630:	88800005 	stb	r2,0(r17)
10011634:	84400017 	ldw	r17,0(r16)
10011638:	003fe206 	br	100115c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>

1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
1001163c:	defff604 	addi	sp,sp,-40
10011640:	ddc00815 	stw	r23,32(sp)
10011644:	dd400615 	stw	r21,24(sp)
10011648:	dd000515 	stw	r20,20(sp)
1001164c:	dcc00415 	stw	r19,16(sp)
10011650:	dc400215 	stw	r17,8(sp)
10011654:	dc000115 	stw	r16,4(sp)
10011658:	dfc00915 	stw	ra,36(sp)
1001165c:	dd800715 	stw	r22,28(sp)
10011660:	dc800315 	stw	r18,12(sp)
10011664:	dd400a17 	ldw	r21,40(sp)
10011668:	24800117 	ldw	r18,4(r4)
1001166c:	20c00017 	ldw	r3,0(r4)
10011670:	a985c83a 	sub	r2,r21,r6
10011674:	1485883a 	add	r2,r2,r18
10011678:	29a7883a 	add	r19,r5,r6
1001167c:	d8800015 	stw	r2,0(sp)
10011680:	25000204 	addi	r20,r4,8
10011684:	2021883a 	mov	r16,r4
10011688:	2823883a 	mov	r17,r5
1001168c:	382f883a 	mov	r23,r7
10011690:	94e5c83a 	sub	r18,r18,r19
10011694:	a0c03626 	beq	r20,r3,10011770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x134>
10011698:	21800217 	ldw	r6,8(r4)
1001169c:	d80b883a 	mov	r5,sp
100116a0:	8009883a 	mov	r4,r16
100116a4:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100116a8:	102d883a 	mov	r22,r2
100116ac:	88000626 	beq	r17,zero,100116c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
100116b0:	88800058 	cmpnei	r2,r17,1
100116b4:	81400017 	ldw	r5,0(r16)
100116b8:	10002a26 	beq	r2,zero,10011764 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x128>
100116bc:	880d883a 	mov	r6,r17
100116c0:	b009883a 	mov	r4,r22
100116c4:	0016c340 	call	10016c34 <memcpy>
100116c8:	b8000726 	beq	r23,zero,100116e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
100116cc:	a8000626 	beq	r21,zero,100116e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
100116d0:	a8800058 	cmpnei	r2,r21,1
100116d4:	b449883a 	add	r4,r22,r17
100116d8:	10002726 	beq	r2,zero,10011778 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x13c>
100116dc:	a80d883a 	mov	r6,r21
100116e0:	b80b883a 	mov	r5,r23
100116e4:	0016c340 	call	10016c34 <memcpy>
100116e8:	81000017 	ldw	r4,0(r16)
100116ec:	90000926 	beq	r18,zero,10011714 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
100116f0:	8d63883a 	add	r17,r17,r21
100116f4:	90800058 	cmpnei	r2,r18,1
100116f8:	b463883a 	add	r17,r22,r17
100116fc:	24cb883a 	add	r5,r4,r19
10011700:	10001426 	beq	r2,zero,10011754 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x118>
10011704:	8809883a 	mov	r4,r17
10011708:	900d883a 	mov	r6,r18
1001170c:	0016c340 	call	10016c34 <memcpy>
10011710:	81000017 	ldw	r4,0(r16)
10011714:	a1000126 	beq	r20,r4,1001171c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xe0>
10011718:	0008e3c0 	call	10008e3c <_ZdlPv>
1001171c:	d8800017 	ldw	r2,0(sp)
10011720:	85800015 	stw	r22,0(r16)
10011724:	80800215 	stw	r2,8(r16)
10011728:	dfc00917 	ldw	ra,36(sp)
1001172c:	ddc00817 	ldw	r23,32(sp)
10011730:	dd800717 	ldw	r22,28(sp)
10011734:	dd400617 	ldw	r21,24(sp)
10011738:	dd000517 	ldw	r20,20(sp)
1001173c:	dcc00417 	ldw	r19,16(sp)
10011740:	dc800317 	ldw	r18,12(sp)
10011744:	dc400217 	ldw	r17,8(sp)
10011748:	dc000117 	ldw	r16,4(sp)
1001174c:	dec00a04 	addi	sp,sp,40
10011750:	f800283a 	ret
10011754:	28800003 	ldbu	r2,0(r5)
10011758:	88800005 	stb	r2,0(r17)
1001175c:	81000017 	ldw	r4,0(r16)
10011760:	003fec06 	br	10011714 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
10011764:	28800003 	ldbu	r2,0(r5)
10011768:	b0800005 	stb	r2,0(r22)
1001176c:	003fd606 	br	100116c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
10011770:	018003c4 	movi	r6,15
10011774:	003fc906 	br	1001169c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x60>
10011778:	b8800003 	ldbu	r2,0(r23)
1001177c:	20800005 	stb	r2,0(r4)
10011780:	003fd906 	br	100116e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>

10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
10011784:	defffd04 	addi	sp,sp,-12
10011788:	dc400115 	stw	r17,4(sp)
1001178c:	dc000015 	stw	r16,0(sp)
10011790:	dfc00215 	stw	ra,8(sp)
10011794:	20800117 	ldw	r2,4(r4)
10011798:	298f883a 	add	r7,r5,r6
1001179c:	3023883a 	mov	r17,r6
100117a0:	11cdc83a 	sub	r6,r2,r7
100117a4:	2021883a 	mov	r16,r4
100117a8:	20c00017 	ldw	r3,0(r4)
100117ac:	30000826 	beq	r6,zero,100117d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
100117b0:	88000726 	beq	r17,zero,100117d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
100117b4:	30800058 	cmpnei	r2,r6,1
100117b8:	1949883a 	add	r4,r3,r5
100117bc:	19cb883a 	add	r5,r3,r7
100117c0:	10000c26 	beq	r2,zero,100117f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x70>
100117c4:	0016d340 	call	10016d34 <memmove>
100117c8:	80800117 	ldw	r2,4(r16)
100117cc:	80c00017 	ldw	r3,0(r16)
100117d0:	1445c83a 	sub	r2,r2,r17
100117d4:	80800115 	stw	r2,4(r16)
100117d8:	1885883a 	add	r2,r3,r2
100117dc:	10000005 	stb	zero,0(r2)
100117e0:	dfc00217 	ldw	ra,8(sp)
100117e4:	dc400117 	ldw	r17,4(sp)
100117e8:	dc000017 	ldw	r16,0(sp)
100117ec:	dec00304 	addi	sp,sp,12
100117f0:	f800283a 	ret
100117f4:	28800003 	ldbu	r2,0(r5)
100117f8:	20800005 	stb	r2,0(r4)
100117fc:	80800117 	ldw	r2,4(r16)
10011800:	80c00017 	ldw	r3,0(r16)
10011804:	003ff206 	br	100117d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>

10011808 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
10011808:	20800204 	addi	r2,r4,8
1001180c:	20800015 	stw	r2,0(r4)
10011810:	20000115 	stw	zero,4(r4)
10011814:	20000205 	stb	zero,8(r4)
10011818:	f800283a 	ret

1001181c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>:
1001181c:	20800204 	addi	r2,r4,8
10011820:	20800015 	stw	r2,0(r4)
10011824:	20000115 	stw	zero,4(r4)
10011828:	20000205 	stb	zero,8(r4)
1001182c:	f800283a 	ret

10011830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_>:
10011830:	31803fcc 	andi	r6,r6,255
10011834:	3180201c 	xori	r6,r6,128
10011838:	20c00204 	addi	r3,r4,8
1001183c:	31bfe004 	addi	r6,r6,-128
10011840:	20c00015 	stw	r3,0(r4)
10011844:	00113081 	jmpi	10011308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

10011848 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
10011848:	defffc04 	addi	sp,sp,-16
1001184c:	dc800215 	stw	r18,8(sp)
10011850:	dc400115 	stw	r17,4(sp)
10011854:	dc000015 	stw	r16,0(sp)
10011858:	dfc00315 	stw	ra,12(sp)
1001185c:	2023883a 	mov	r17,r4
10011860:	21000204 	addi	r4,r4,8
10011864:	89000015 	stw	r4,0(r17)
10011868:	28800017 	ldw	r2,0(r5)
1001186c:	2c800204 	addi	r18,r5,8
10011870:	2821883a 	mov	r16,r5
10011874:	90800e26 	beq	r18,r2,100118b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x68>
10011878:	88800015 	stw	r2,0(r17)
1001187c:	28800217 	ldw	r2,8(r5)
10011880:	88800215 	stw	r2,8(r17)
10011884:	80800117 	ldw	r2,4(r16)
10011888:	88800115 	stw	r2,4(r17)
1001188c:	84800015 	stw	r18,0(r16)
10011890:	80000115 	stw	zero,4(r16)
10011894:	80000205 	stb	zero,8(r16)
10011898:	dfc00317 	ldw	ra,12(sp)
1001189c:	dc800217 	ldw	r18,8(sp)
100118a0:	dc400117 	ldw	r17,4(sp)
100118a4:	dc000017 	ldw	r16,0(sp)
100118a8:	dec00404 	addi	sp,sp,16
100118ac:	f800283a 	ret
100118b0:	01800404 	movi	r6,16
100118b4:	900b883a 	mov	r5,r18
100118b8:	0016c340 	call	10016c34 <memcpy>
100118bc:	003ff106 	br	10011884 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x3c>

100118c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_>:
100118c0:	21c00204 	addi	r7,r4,8
100118c4:	21c00015 	stw	r7,0(r4)
100118c8:	28c00017 	ldw	r3,0(r5)
100118cc:	28800204 	addi	r2,r5,8
100118d0:	10c00926 	beq	r2,r3,100118f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_+0x38>
100118d4:	20c00015 	stw	r3,0(r4)
100118d8:	28c00117 	ldw	r3,4(r5)
100118dc:	20c00115 	stw	r3,4(r4)
100118e0:	28c00217 	ldw	r3,8(r5)
100118e4:	20c00215 	stw	r3,8(r4)
100118e8:	28800015 	stw	r2,0(r5)
100118ec:	28000115 	stw	zero,4(r5)
100118f0:	28000205 	stb	zero,8(r5)
100118f4:	f800283a 	ret
100118f8:	defffd04 	addi	sp,sp,-12
100118fc:	dc400115 	stw	r17,4(sp)
10011900:	dc000015 	stw	r16,0(sp)
10011904:	2023883a 	mov	r17,r4
10011908:	2821883a 	mov	r16,r5
1001190c:	01800404 	movi	r6,16
10011910:	100b883a 	mov	r5,r2
10011914:	3809883a 	mov	r4,r7
10011918:	dfc00215 	stw	ra,8(sp)
1001191c:	0016c340 	call	10016c34 <memcpy>
10011920:	80800117 	ldw	r2,4(r16)
10011924:	88800115 	stw	r2,4(r17)
10011928:	80800017 	ldw	r2,0(r16)
1001192c:	80000115 	stw	zero,4(r16)
10011930:	10000005 	stb	zero,0(r2)
10011934:	dfc00217 	ldw	ra,8(sp)
10011938:	dc400117 	ldw	r17,4(sp)
1001193c:	dc000017 	ldw	r16,0(sp)
10011940:	dec00304 	addi	sp,sp,12
10011944:	f800283a 	ret

10011948 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
10011948:	20c00017 	ldw	r3,0(r4)
1001194c:	20800204 	addi	r2,r4,8
10011950:	18800226 	beq	r3,r2,1001195c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev+0x14>
10011954:	1809883a 	mov	r4,r3
10011958:	0008e3c1 	jmpi	10008e3c <_ZdlPv>
1001195c:	f800283a 	ret

10011960 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
10011960:	defffe04 	addi	sp,sp,-8
10011964:	dc000015 	stw	r16,0(sp)
10011968:	dfc00115 	stw	ra,4(sp)
1001196c:	2021883a 	mov	r16,r4
10011970:	00115640 	call	10011564 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
10011974:	8005883a 	mov	r2,r16
10011978:	dfc00117 	ldw	ra,4(sp)
1001197c:	dc000017 	ldw	r16,0(sp)
10011980:	dec00204 	addi	sp,sp,8
10011984:	f800283a 	ret

10011988 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
10011988:	defffd04 	addi	sp,sp,-12
1001198c:	dc400115 	stw	r17,4(sp)
10011990:	dc000015 	stw	r16,0(sp)
10011994:	dfc00215 	stw	ra,8(sp)
10011998:	28800017 	ldw	r2,0(r5)
1001199c:	2821883a 	mov	r16,r5
100119a0:	29400204 	addi	r5,r5,8
100119a4:	2023883a 	mov	r17,r4
100119a8:	21000017 	ldw	r4,0(r4)
100119ac:	28801a26 	beq	r5,r2,10011a18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x90>
100119b0:	88c00204 	addi	r3,r17,8
100119b4:	88800015 	stw	r2,0(r17)
100119b8:	20c01026 	beq	r4,r3,100119fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x74>
100119bc:	80c00117 	ldw	r3,4(r16)
100119c0:	88800217 	ldw	r2,8(r17)
100119c4:	88c00115 	stw	r3,4(r17)
100119c8:	80c00217 	ldw	r3,8(r16)
100119cc:	88c00215 	stw	r3,8(r17)
100119d0:	20000e26 	beq	r4,zero,10011a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x84>
100119d4:	81000015 	stw	r4,0(r16)
100119d8:	80800215 	stw	r2,8(r16)
100119dc:	80000115 	stw	zero,4(r16)
100119e0:	8805883a 	mov	r2,r17
100119e4:	20000005 	stb	zero,0(r4)
100119e8:	dfc00217 	ldw	ra,8(sp)
100119ec:	dc400117 	ldw	r17,4(sp)
100119f0:	dc000017 	ldw	r16,0(sp)
100119f4:	dec00304 	addi	sp,sp,12
100119f8:	f800283a 	ret
100119fc:	80800117 	ldw	r2,4(r16)
10011a00:	88800115 	stw	r2,4(r17)
10011a04:	80800217 	ldw	r2,8(r16)
10011a08:	88800215 	stw	r2,8(r17)
10011a0c:	81400015 	stw	r5,0(r16)
10011a10:	2809883a 	mov	r4,r5
10011a14:	003ff106 	br	100119dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
10011a18:	81800117 	ldw	r6,4(r16)
10011a1c:	30000526 	beq	r6,zero,10011a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>
10011a20:	30800058 	cmpnei	r2,r6,1
10011a24:	10000826 	beq	r2,zero,10011a48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xc0>
10011a28:	0016c340 	call	10016c34 <memcpy>
10011a2c:	89000017 	ldw	r4,0(r17)
10011a30:	81800117 	ldw	r6,4(r16)
10011a34:	89800115 	stw	r6,4(r17)
10011a38:	2189883a 	add	r4,r4,r6
10011a3c:	20000005 	stb	zero,0(r4)
10011a40:	81000017 	ldw	r4,0(r16)
10011a44:	003fe506 	br	100119dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
10011a48:	80800203 	ldbu	r2,8(r16)
10011a4c:	20800005 	stb	r2,0(r4)
10011a50:	89000017 	ldw	r4,0(r17)
10011a54:	81800117 	ldw	r6,4(r16)
10011a58:	003ff606 	br	10011a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>

10011a5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
10011a5c:	20800017 	ldw	r2,0(r4)
10011a60:	f800283a 	ret

10011a64 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
10011a64:	20800017 	ldw	r2,0(r4)
10011a68:	f800283a 	ret

10011a6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
10011a6c:	20c00017 	ldw	r3,0(r4)
10011a70:	20800117 	ldw	r2,4(r4)
10011a74:	1885883a 	add	r2,r3,r2
10011a78:	f800283a 	ret

10011a7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
10011a7c:	20c00017 	ldw	r3,0(r4)
10011a80:	20800117 	ldw	r2,4(r4)
10011a84:	1885883a 	add	r2,r3,r2
10011a88:	f800283a 	ret

10011a8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
10011a8c:	28c00017 	ldw	r3,0(r5)
10011a90:	29400117 	ldw	r5,4(r5)
10011a94:	2005883a 	mov	r2,r4
10011a98:	1947883a 	add	r3,r3,r5
10011a9c:	20c00015 	stw	r3,0(r4)
10011aa0:	f800283a 	ret

10011aa4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
10011aa4:	28c00017 	ldw	r3,0(r5)
10011aa8:	29400117 	ldw	r5,4(r5)
10011aac:	2005883a 	mov	r2,r4
10011ab0:	1947883a 	add	r3,r3,r5
10011ab4:	20c00015 	stw	r3,0(r4)
10011ab8:	f800283a 	ret

10011abc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
10011abc:	28c00017 	ldw	r3,0(r5)
10011ac0:	2005883a 	mov	r2,r4
10011ac4:	20c00015 	stw	r3,0(r4)
10011ac8:	f800283a 	ret

10011acc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
10011acc:	28c00017 	ldw	r3,0(r5)
10011ad0:	2005883a 	mov	r2,r4
10011ad4:	20c00015 	stw	r3,0(r4)
10011ad8:	f800283a 	ret

10011adc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv>:
10011adc:	20800017 	ldw	r2,0(r4)
10011ae0:	f800283a 	ret

10011ae4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv>:
10011ae4:	20c00017 	ldw	r3,0(r4)
10011ae8:	20800117 	ldw	r2,4(r4)
10011aec:	1885883a 	add	r2,r3,r2
10011af0:	f800283a 	ret

10011af4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv>:
10011af4:	28c00017 	ldw	r3,0(r5)
10011af8:	29400117 	ldw	r5,4(r5)
10011afc:	2005883a 	mov	r2,r4
10011b00:	1947883a 	add	r3,r3,r5
10011b04:	20c00015 	stw	r3,0(r4)
10011b08:	f800283a 	ret

10011b0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv>:
10011b0c:	28c00017 	ldw	r3,0(r5)
10011b10:	2005883a 	mov	r2,r4
10011b14:	20c00015 	stw	r3,0(r4)
10011b18:	f800283a 	ret

10011b1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
10011b1c:	20800117 	ldw	r2,4(r4)
10011b20:	f800283a 	ret

10011b24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
10011b24:	20800117 	ldw	r2,4(r4)
10011b28:	f800283a 	ret

10011b2c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
10011b2c:	00a00034 	movhi	r2,32768
10011b30:	10bfffc4 	addi	r2,r2,-1
10011b34:	f800283a 	ret

10011b38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
10011b38:	20c00017 	ldw	r3,0(r4)
10011b3c:	20800204 	addi	r2,r4,8
10011b40:	18800226 	beq	r3,r2,10011b4c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x14>
10011b44:	20800217 	ldw	r2,8(r4)
10011b48:	f800283a 	ret
10011b4c:	008003c4 	movi	r2,15
10011b50:	f800283a 	ret

10011b54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
10011b54:	defffb04 	addi	sp,sp,-20
10011b58:	dc000115 	stw	r16,4(sp)
10011b5c:	dfc00415 	stw	ra,16(sp)
10011b60:	dc800315 	stw	r18,12(sp)
10011b64:	dc400215 	stw	r17,8(sp)
10011b68:	20800117 	ldw	r2,4(r4)
10011b6c:	d9400015 	stw	r5,0(sp)
10011b70:	2021883a 	mov	r16,r4
10011b74:	2880022e 	bgeu	r5,r2,10011b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2c>
10011b78:	d8800015 	stw	r2,0(sp)
10011b7c:	100b883a 	mov	r5,r2
10011b80:	84800017 	ldw	r18,0(r16)
10011b84:	84400204 	addi	r17,r16,8
10011b88:	8c802926 	beq	r17,r18,10011c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xdc>
10011b8c:	81800217 	ldw	r6,8(r16)
10011b90:	31400d26 	beq	r6,r5,10011bc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
10011b94:	31401236 	bltu	r6,r5,10011be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011b98:	29400430 	cmpltui	r5,r5,16
10011b9c:	28001026 	beq	r5,zero,10011be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011ba0:	8c800926 	beq	r17,r18,10011bc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
10011ba4:	11800044 	addi	r6,r2,1
10011ba8:	10002726 	beq	r2,zero,10011c48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xf4>
10011bac:	30000326 	beq	r6,zero,10011bbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>
10011bb0:	900b883a 	mov	r5,r18
10011bb4:	8809883a 	mov	r4,r17
10011bb8:	0016c340 	call	10016c34 <memcpy>
10011bbc:	9009883a 	mov	r4,r18
10011bc0:	0008e3c0 	call	10008e3c <_ZdlPv>
10011bc4:	84400015 	stw	r17,0(r16)
10011bc8:	dfc00417 	ldw	ra,16(sp)
10011bcc:	dc800317 	ldw	r18,12(sp)
10011bd0:	dc400217 	ldw	r17,8(sp)
10011bd4:	dc000117 	ldw	r16,4(sp)
10011bd8:	dec00504 	addi	sp,sp,20
10011bdc:	f800283a 	ret
10011be0:	8009883a 	mov	r4,r16
10011be4:	d80b883a 	mov	r5,sp
10011be8:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10011bec:	1025883a 	mov	r18,r2
10011bf0:	80800117 	ldw	r2,4(r16)
10011bf4:	81000017 	ldw	r4,0(r16)
10011bf8:	11800044 	addi	r6,r2,1
10011bfc:	10000e26 	beq	r2,zero,10011c38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xe4>
10011c00:	3000061e 	bne	r6,zero,10011c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xc8>
10011c04:	89000126 	beq	r17,r4,10011c0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb8>
10011c08:	0008e3c0 	call	10008e3c <_ZdlPv>
10011c0c:	d8800017 	ldw	r2,0(sp)
10011c10:	84800015 	stw	r18,0(r16)
10011c14:	80800215 	stw	r2,8(r16)
10011c18:	003feb06 	br	10011bc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
10011c1c:	200b883a 	mov	r5,r4
10011c20:	9009883a 	mov	r4,r18
10011c24:	0016c340 	call	10016c34 <memcpy>
10011c28:	81000017 	ldw	r4,0(r16)
10011c2c:	003ff506 	br	10011c04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
10011c30:	018003c4 	movi	r6,15
10011c34:	003fd606 	br	10011b90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x3c>
10011c38:	20800003 	ldbu	r2,0(r4)
10011c3c:	90800005 	stb	r2,0(r18)
10011c40:	81000017 	ldw	r4,0(r16)
10011c44:	003fef06 	br	10011c04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
10011c48:	90800003 	ldbu	r2,0(r18)
10011c4c:	80800205 	stb	r2,8(r16)
10011c50:	003fda06 	br	10011bbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>

10011c54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv>:
10011c54:	deffe704 	addi	sp,sp,-100
10011c58:	00c400b4 	movhi	r3,4098
10011c5c:	d9800204 	addi	r6,sp,8
10011c60:	18d3b304 	addi	r3,r3,20172
10011c64:	01440074 	movhi	r5,4097
10011c68:	00840074 	movhi	r2,4097
10011c6c:	10874f04 	addi	r2,r2,7484
10011c70:	2964f504 	addi	r5,r5,-27692
10011c74:	d9000015 	stw	r4,0(sp)
10011c78:	d8c00915 	stw	r3,36(sp)
10011c7c:	3009883a 	mov	r4,r6
10011c80:	d8c00f04 	addi	r3,sp,60
10011c84:	d8c00a15 	stw	r3,40(sp)
10011c88:	d8800b15 	stw	r2,44(sp)
10011c8c:	dfc01815 	stw	ra,96(sp)
10011c90:	df001715 	stw	fp,92(sp)
10011c94:	ddc01615 	stw	r23,88(sp)
10011c98:	dd801515 	stw	r22,84(sp)
10011c9c:	dd401415 	stw	r21,80(sp)
10011ca0:	dd001315 	stw	r20,76(sp)
10011ca4:	dcc01215 	stw	r19,72(sp)
10011ca8:	dc801115 	stw	r18,68(sp)
10011cac:	dc401015 	stw	r17,64(sp)
10011cb0:	dc000f15 	stw	r16,60(sp)
10011cb4:	d9800115 	stw	r6,4(sp)
10011cb8:	d9400815 	stw	r5,32(sp)
10011cbc:	dec00c15 	stw	sp,48(sp)
10011cc0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
10011cc4:	d9000017 	ldw	r4,0(sp)
10011cc8:	20c00017 	ldw	r3,0(r4)
10011ccc:	20800204 	addi	r2,r4,8
10011cd0:	18801826 	beq	r3,r2,10011d34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xe0>
10011cd4:	20c00217 	ldw	r3,8(r4)
10011cd8:	d8800017 	ldw	r2,0(sp)
10011cdc:	10800117 	ldw	r2,4(r2)
10011ce0:	10c00e36 	bltu	r2,r3,10011d1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xc8>
10011ce4:	d9000117 	ldw	r4,4(sp)
10011ce8:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10011cec:	dfc01817 	ldw	ra,96(sp)
10011cf0:	df001717 	ldw	fp,92(sp)
10011cf4:	ddc01617 	ldw	r23,88(sp)
10011cf8:	dd801517 	ldw	r22,84(sp)
10011cfc:	dd401417 	ldw	r21,80(sp)
10011d00:	dd001317 	ldw	r20,76(sp)
10011d04:	dcc01217 	ldw	r19,72(sp)
10011d08:	dc801117 	ldw	r18,68(sp)
10011d0c:	dc401017 	ldw	r17,64(sp)
10011d10:	dc000f17 	ldw	r16,60(sp)
10011d14:	dec01904 	addi	sp,sp,100
10011d18:	f800283a 	ret
10011d1c:	d9000017 	ldw	r4,0(sp)
10011d20:	00800044 	movi	r2,1
10011d24:	000b883a 	mov	r5,zero
10011d28:	d8800315 	stw	r2,12(sp)
10011d2c:	0011b540 	call	10011b54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
10011d30:	003fec06 	br	10011ce4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>
10011d34:	00c003c4 	movi	r3,15
10011d38:	003fe706 	br	10011cd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x84>
10011d3c:	d9000417 	ldw	r4,16(sp)
10011d40:	d8800204 	addi	r2,sp,8
10011d44:	d8800115 	stw	r2,4(sp)
10011d48:	00089800 	call	10008980 <__cxa_begin_catch>
10011d4c:	d8000315 	stw	zero,12(sp)
10011d50:	0008a2c0 	call	10008a2c <__cxa_end_catch>
10011d54:	003fe306 	br	10011ce4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>

10011d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>:
10011d58:	20800017 	ldw	r2,0(r4)
10011d5c:	20000115 	stw	zero,4(r4)
10011d60:	10000005 	stb	zero,0(r2)
10011d64:	f800283a 	ret

10011d68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
10011d68:	20800117 	ldw	r2,4(r4)
10011d6c:	1005003a 	cmpeq	r2,r2,zero
10011d70:	f800283a 	ret

10011d74 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
10011d74:	20800017 	ldw	r2,0(r4)
10011d78:	1145883a 	add	r2,r2,r5
10011d7c:	f800283a 	ret

10011d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
10011d80:	20800017 	ldw	r2,0(r4)
10011d84:	1145883a 	add	r2,r2,r5
10011d88:	f800283a 	ret

10011d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
10011d8c:	21800117 	ldw	r6,4(r4)
10011d90:	2980032e 	bgeu	r5,r6,10011da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
10011d94:	20c00017 	ldw	r3,0(r4)
10011d98:	1945883a 	add	r2,r3,r5
10011d9c:	f800283a 	ret
10011da0:	010400b4 	movhi	r4,4098
10011da4:	deffff04 	addi	sp,sp,-4
10011da8:	2117fc04 	addi	r4,r4,24560
10011dac:	dfc00015 	stw	ra,0(sp)
10011db0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10011db4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
10011db4:	21800117 	ldw	r6,4(r4)
10011db8:	2980032e 	bgeu	r5,r6,10011dc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
10011dbc:	20c00017 	ldw	r3,0(r4)
10011dc0:	1945883a 	add	r2,r3,r5
10011dc4:	f800283a 	ret
10011dc8:	010400b4 	movhi	r4,4098
10011dcc:	deffff04 	addi	sp,sp,-4
10011dd0:	2117fc04 	addi	r4,r4,24560
10011dd4:	dfc00015 	stw	ra,0(sp)
10011dd8:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10011ddc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
10011ddc:	20800017 	ldw	r2,0(r4)
10011de0:	f800283a 	ret

10011de4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
10011de4:	20800017 	ldw	r2,0(r4)
10011de8:	f800283a 	ret

10011dec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
10011dec:	20c00117 	ldw	r3,4(r4)
10011df0:	20800017 	ldw	r2,0(r4)
10011df4:	18ffffc4 	addi	r3,r3,-1
10011df8:	10c5883a 	add	r2,r2,r3
10011dfc:	f800283a 	ret

10011e00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
10011e00:	20c00117 	ldw	r3,4(r4)
10011e04:	20800017 	ldw	r2,0(r4)
10011e08:	18ffffc4 	addi	r3,r3,-1
10011e0c:	10c5883a 	add	r2,r2,r3
10011e10:	f800283a 	ret

10011e14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
10011e14:	defffa04 	addi	sp,sp,-24
10011e18:	dc800415 	stw	r18,16(sp)
10011e1c:	dc000215 	stw	r16,8(sp)
10011e20:	dfc00515 	stw	ra,20(sp)
10011e24:	dc400315 	stw	r17,12(sp)
10011e28:	24400117 	ldw	r17,4(r4)
10011e2c:	20c00017 	ldw	r3,0(r4)
10011e30:	2005883a 	mov	r2,r4
10011e34:	21000204 	addi	r4,r4,8
10011e38:	2825883a 	mov	r18,r5
10011e3c:	8c000044 	addi	r16,r17,1
10011e40:	19001926 	beq	r3,r4,10011ea8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x94>
10011e44:	11000217 	ldw	r4,8(r2)
10011e48:	24000c36 	bltu	r4,r16,10011e7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x68>
10011e4c:	1c47883a 	add	r3,r3,r17
10011e50:	1c800005 	stb	r18,0(r3)
10011e54:	10c00017 	ldw	r3,0(r2)
10011e58:	14000115 	stw	r16,4(r2)
10011e5c:	1c07883a 	add	r3,r3,r16
10011e60:	18000005 	stb	zero,0(r3)
10011e64:	dfc00517 	ldw	ra,20(sp)
10011e68:	dc800417 	ldw	r18,16(sp)
10011e6c:	dc400317 	ldw	r17,12(sp)
10011e70:	dc000217 	ldw	r16,8(sp)
10011e74:	dec00604 	addi	sp,sp,24
10011e78:	f800283a 	ret
10011e7c:	00c00044 	movi	r3,1
10011e80:	d8c00015 	stw	r3,0(sp)
10011e84:	1009883a 	mov	r4,r2
10011e88:	000f883a 	mov	r7,zero
10011e8c:	000d883a 	mov	r6,zero
10011e90:	880b883a 	mov	r5,r17
10011e94:	d8800115 	stw	r2,4(sp)
10011e98:	001163c0 	call	1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011e9c:	d8800117 	ldw	r2,4(sp)
10011ea0:	10c00017 	ldw	r3,0(r2)
10011ea4:	003fe906 	br	10011e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x38>
10011ea8:	010003c4 	movi	r4,15
10011eac:	003fe606 	br	10011e48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x34>

10011eb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
10011eb0:	defffa04 	addi	sp,sp,-24
10011eb4:	dcc00415 	stw	r19,16(sp)
10011eb8:	dc400215 	stw	r17,8(sp)
10011ebc:	dc000115 	stw	r16,4(sp)
10011ec0:	dfc00515 	stw	ra,20(sp)
10011ec4:	dc800315 	stw	r18,12(sp)
10011ec8:	24800117 	ldw	r18,4(r4)
10011ecc:	20800017 	ldw	r2,0(r4)
10011ed0:	20c00204 	addi	r3,r4,8
10011ed4:	2021883a 	mov	r16,r4
10011ed8:	2827883a 	mov	r19,r5
10011edc:	94400044 	addi	r17,r18,1
10011ee0:	10c01826 	beq	r2,r3,10011f44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x94>
10011ee4:	20c00217 	ldw	r3,8(r4)
10011ee8:	1c400d36 	bltu	r3,r17,10011f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x70>
10011eec:	1485883a 	add	r2,r2,r18
10011ef0:	14c00005 	stb	r19,0(r2)
10011ef4:	80800017 	ldw	r2,0(r16)
10011ef8:	84400115 	stw	r17,4(r16)
10011efc:	1445883a 	add	r2,r2,r17
10011f00:	10000005 	stb	zero,0(r2)
10011f04:	dfc00517 	ldw	ra,20(sp)
10011f08:	dcc00417 	ldw	r19,16(sp)
10011f0c:	dc800317 	ldw	r18,12(sp)
10011f10:	dc400217 	ldw	r17,8(sp)
10011f14:	dc000117 	ldw	r16,4(sp)
10011f18:	dec00604 	addi	sp,sp,24
10011f1c:	f800283a 	ret
10011f20:	00800044 	movi	r2,1
10011f24:	d8800015 	stw	r2,0(sp)
10011f28:	000f883a 	mov	r7,zero
10011f2c:	000d883a 	mov	r6,zero
10011f30:	900b883a 	mov	r5,r18
10011f34:	8009883a 	mov	r4,r16
10011f38:	001163c0 	call	1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011f3c:	80800017 	ldw	r2,0(r16)
10011f40:	003fea06 	br	10011eec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x3c>
10011f44:	00c003c4 	movi	r3,15
10011f48:	003fe706 	br	10011ee8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x38>

10011f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>:
10011f4c:	defffe04 	addi	sp,sp,-8
10011f50:	dc000015 	stw	r16,0(sp)
10011f54:	dfc00115 	stw	ra,4(sp)
10011f58:	2021883a 	mov	r16,r4
10011f5c:	00115640 	call	10011564 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
10011f60:	8005883a 	mov	r2,r16
10011f64:	dfc00117 	ldw	ra,4(sp)
10011f68:	dc000017 	ldw	r16,0(sp)
10011f6c:	dec00204 	addi	sp,sp,8
10011f70:	f800283a 	ret

10011f74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_>:
10011f74:	defffd04 	addi	sp,sp,-12
10011f78:	dc400115 	stw	r17,4(sp)
10011f7c:	dc000015 	stw	r16,0(sp)
10011f80:	dfc00215 	stw	ra,8(sp)
10011f84:	2821883a 	mov	r16,r5
10011f88:	29400017 	ldw	r5,0(r5)
10011f8c:	80800204 	addi	r2,r16,8
10011f90:	2023883a 	mov	r17,r4
10011f94:	21000017 	ldw	r4,0(r4)
10011f98:	28801a26 	beq	r5,r2,10012004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x90>
10011f9c:	88c00204 	addi	r3,r17,8
10011fa0:	89400015 	stw	r5,0(r17)
10011fa4:	20c01026 	beq	r4,r3,10011fe8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x74>
10011fa8:	81400117 	ldw	r5,4(r16)
10011fac:	88c00217 	ldw	r3,8(r17)
10011fb0:	89400115 	stw	r5,4(r17)
10011fb4:	81400217 	ldw	r5,8(r16)
10011fb8:	89400215 	stw	r5,8(r17)
10011fbc:	20000e26 	beq	r4,zero,10011ff8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x84>
10011fc0:	81000015 	stw	r4,0(r16)
10011fc4:	80c00215 	stw	r3,8(r16)
10011fc8:	80000115 	stw	zero,4(r16)
10011fcc:	8805883a 	mov	r2,r17
10011fd0:	20000005 	stb	zero,0(r4)
10011fd4:	dfc00217 	ldw	ra,8(sp)
10011fd8:	dc400117 	ldw	r17,4(sp)
10011fdc:	dc000017 	ldw	r16,0(sp)
10011fe0:	dec00304 	addi	sp,sp,12
10011fe4:	f800283a 	ret
10011fe8:	80c00117 	ldw	r3,4(r16)
10011fec:	88c00115 	stw	r3,4(r17)
10011ff0:	80c00217 	ldw	r3,8(r16)
10011ff4:	88c00215 	stw	r3,8(r17)
10011ff8:	80800015 	stw	r2,0(r16)
10011ffc:	1009883a 	mov	r4,r2
10012000:	003ff106 	br	10011fc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
10012004:	81800117 	ldw	r6,4(r16)
10012008:	30000526 	beq	r6,zero,10012020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>
1001200c:	30800058 	cmpnei	r2,r6,1
10012010:	10000826 	beq	r2,zero,10012034 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xc0>
10012014:	0016c340 	call	10016c34 <memcpy>
10012018:	81800117 	ldw	r6,4(r16)
1001201c:	89000017 	ldw	r4,0(r17)
10012020:	89800115 	stw	r6,4(r17)
10012024:	2189883a 	add	r4,r4,r6
10012028:	20000005 	stb	zero,0(r4)
1001202c:	81000017 	ldw	r4,0(r16)
10012030:	003fe506 	br	10011fc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
10012034:	80800203 	ldbu	r2,8(r16)
10012038:	20800005 	stb	r2,0(r4)
1001203c:	81800117 	ldw	r6,4(r16)
10012040:	89000017 	ldw	r4,0(r17)
10012044:	003ff606 	br	10012020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>

10012048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj>:
10012048:	defffe04 	addi	sp,sp,-8
1001204c:	dfc00115 	stw	ra,4(sp)
10012050:	21c00117 	ldw	r7,4(r4)
10012054:	2807883a 	mov	r3,r5
10012058:	39401836 	bltu	r7,r5,100120bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x74>
1001205c:	2005883a 	mov	r2,r4
10012060:	313fffd8 	cmpnei	r4,r6,-1
10012064:	20000c26 	beq	r4,zero,10012098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x50>
10012068:	30000826 	beq	r6,zero,1001208c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x44>
1001206c:	394fc83a 	sub	r7,r7,r5
10012070:	31c01036 	bltu	r6,r7,100120b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x6c>
10012074:	1009883a 	mov	r4,r2
10012078:	380d883a 	mov	r6,r7
1001207c:	180b883a 	mov	r5,r3
10012080:	d8800015 	stw	r2,0(sp)
10012084:	00117840 	call	10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
10012088:	d8800017 	ldw	r2,0(sp)
1001208c:	dfc00117 	ldw	ra,4(sp)
10012090:	dec00204 	addi	sp,sp,8
10012094:	f800283a 	ret
10012098:	11000017 	ldw	r4,0(r2)
1001209c:	11400115 	stw	r5,4(r2)
100120a0:	2147883a 	add	r3,r4,r5
100120a4:	18000005 	stb	zero,0(r3)
100120a8:	dfc00117 	ldw	ra,4(sp)
100120ac:	dec00204 	addi	sp,sp,8
100120b0:	f800283a 	ret
100120b4:	300f883a 	mov	r7,r6
100120b8:	003fee06 	br	10012074 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x2c>
100120bc:	014400b4 	movhi	r5,4098
100120c0:	010400b4 	movhi	r4,4098
100120c4:	180d883a 	mov	r6,r3
100120c8:	29581e04 	addi	r5,r5,24696
100120cc:	2117ee04 	addi	r4,r4,24504
100120d0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100120d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE>:
100120d4:	defffd04 	addi	sp,sp,-12
100120d8:	dc000015 	stw	r16,0(sp)
100120dc:	24000017 	ldw	r16,0(r4)
100120e0:	01800044 	movi	r6,1
100120e4:	dc400115 	stw	r17,4(sp)
100120e8:	2c21c83a 	sub	r16,r5,r16
100120ec:	800b883a 	mov	r5,r16
100120f0:	dfc00215 	stw	ra,8(sp)
100120f4:	2023883a 	mov	r17,r4
100120f8:	00117840 	call	10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
100120fc:	88800017 	ldw	r2,0(r17)
10012100:	1405883a 	add	r2,r2,r16
10012104:	dfc00217 	ldw	ra,8(sp)
10012108:	dc400117 	ldw	r17,4(sp)
1001210c:	dc000017 	ldw	r16,0(sp)
10012110:	dec00304 	addi	sp,sp,12
10012114:	f800283a 	ret

10012118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_>:
10012118:	20800017 	ldw	r2,0(r4)
1001211c:	20c00117 	ldw	r3,4(r4)
10012120:	defffd04 	addi	sp,sp,-12
10012124:	dc400115 	stw	r17,4(sp)
10012128:	dc000015 	stw	r16,0(sp)
1001212c:	dfc00215 	stw	ra,8(sp)
10012130:	10c7883a 	add	r3,r2,r3
10012134:	2023883a 	mov	r17,r4
10012138:	28a1c83a 	sub	r16,r5,r2
1001213c:	30c00a26 	beq	r6,r3,10012168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x50>
10012140:	314dc83a 	sub	r6,r6,r5
10012144:	800b883a 	mov	r5,r16
10012148:	00117840 	call	10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
1001214c:	88800017 	ldw	r2,0(r17)
10012150:	1405883a 	add	r2,r2,r16
10012154:	dfc00217 	ldw	ra,8(sp)
10012158:	dc400117 	ldw	r17,4(sp)
1001215c:	dc000017 	ldw	r16,0(sp)
10012160:	dec00304 	addi	sp,sp,12
10012164:	f800283a 	ret
10012168:	24000115 	stw	r16,4(r4)
1001216c:	28000005 	stb	zero,0(r5)
10012170:	003ff606 	br	1001214c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x34>

10012174 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
10012174:	defff104 	addi	sp,sp,-60
10012178:	00c40074 	movhi	r3,4097
1001217c:	008400b4 	movhi	r2,4098
10012180:	dc000d15 	stw	r16,52(sp)
10012184:	18e4f504 	addi	r3,r3,-27692
10012188:	1093b704 	addi	r2,r2,20188
1001218c:	2021883a 	mov	r16,r4
10012190:	d809883a 	mov	r4,sp
10012194:	dfc00e15 	stw	ra,56(sp)
10012198:	d8c00615 	stw	r3,24(sp)
1001219c:	d8800715 	stw	r2,28(sp)
100121a0:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
100121a4:	81400117 	ldw	r5,4(r16)
100121a8:	01800044 	movi	r6,1
100121ac:	8009883a 	mov	r4,r16
100121b0:	297fffc4 	addi	r5,r5,-1
100121b4:	d8000115 	stw	zero,4(sp)
100121b8:	00117840 	call	10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
100121bc:	d809883a 	mov	r4,sp
100121c0:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100121c4:	dfc00e17 	ldw	ra,56(sp)
100121c8:	dc000d17 	ldw	r16,52(sp)
100121cc:	dec00f04 	addi	sp,sp,60
100121d0:	f800283a 	ret

100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>:
100121d4:	defff904 	addi	sp,sp,-28
100121d8:	dd000515 	stw	r20,20(sp)
100121dc:	dfc00615 	stw	ra,24(sp)
100121e0:	dcc00415 	stw	r19,16(sp)
100121e4:	dc800315 	stw	r18,12(sp)
100121e8:	dc400215 	stw	r17,8(sp)
100121ec:	dc000115 	stw	r16,4(sp)
100121f0:	20c00117 	ldw	r3,4(r4)
100121f4:	00a00034 	movhi	r2,32768
100121f8:	10bfffc4 	addi	r2,r2,-1
100121fc:	3085883a 	add	r2,r6,r2
10012200:	10c5c83a 	sub	r2,r2,r3
10012204:	dd000717 	ldw	r20,28(sp)
10012208:	11c03e36 	bltu	r2,r7,10012304 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x130>
1001220c:	2021883a 	mov	r16,r4
10012210:	21000017 	ldw	r4,0(r4)
10012214:	39a3c83a 	sub	r17,r7,r6
10012218:	80800204 	addi	r2,r16,8
1001221c:	3825883a 	mov	r18,r7
10012220:	2827883a 	mov	r19,r5
10012224:	88e3883a 	add	r17,r17,r3
10012228:	20803126 	beq	r4,r2,100122f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x11c>
1001222c:	80800217 	ldw	r2,8(r16)
10012230:	14402236 	bltu	r2,r17,100122bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xe8>
10012234:	34c5883a 	add	r2,r6,r19
10012238:	1887c83a 	sub	r3,r3,r2
1001223c:	18000926 	beq	r3,zero,10012264 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
10012240:	34800826 	beq	r6,r18,10012264 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
10012244:	24cb883a 	add	r5,r4,r19
10012248:	18800058 	cmpnei	r2,r3,1
1001224c:	2c89883a 	add	r4,r5,r18
10012250:	298b883a 	add	r5,r5,r6
10012254:	10002126 	beq	r2,zero,100122dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x108>
10012258:	180d883a 	mov	r6,r3
1001225c:	0016d340 	call	10016d34 <memmove>
10012260:	81000017 	ldw	r4,0(r16)
10012264:	90000926 	beq	r18,zero,1001228c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
10012268:	90800058 	cmpnei	r2,r18,1
1001226c:	24c9883a 	add	r4,r4,r19
10012270:	10002126 	beq	r2,zero,100122f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x124>
10012274:	a1403fcc 	andi	r5,r20,255
10012278:	2940201c 	xori	r5,r5,128
1001227c:	900d883a 	mov	r6,r18
10012280:	297fe004 	addi	r5,r5,-128
10012284:	0016e600 	call	10016e60 <memset>
10012288:	81000017 	ldw	r4,0(r16)
1001228c:	84400115 	stw	r17,4(r16)
10012290:	2449883a 	add	r4,r4,r17
10012294:	8005883a 	mov	r2,r16
10012298:	20000005 	stb	zero,0(r4)
1001229c:	dfc00617 	ldw	ra,24(sp)
100122a0:	dd000517 	ldw	r20,20(sp)
100122a4:	dcc00417 	ldw	r19,16(sp)
100122a8:	dc800317 	ldw	r18,12(sp)
100122ac:	dc400217 	ldw	r17,8(sp)
100122b0:	dc000117 	ldw	r16,4(sp)
100122b4:	dec00704 	addi	sp,sp,28
100122b8:	f800283a 	ret
100122bc:	8009883a 	mov	r4,r16
100122c0:	dc800015 	stw	r18,0(sp)
100122c4:	000f883a 	mov	r7,zero
100122c8:	980b883a 	mov	r5,r19
100122cc:	001163c0 	call	1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
100122d0:	81000017 	ldw	r4,0(r16)
100122d4:	903fed26 	beq	r18,zero,1001228c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100122d8:	003fe306 	br	10012268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
100122dc:	28800003 	ldbu	r2,0(r5)
100122e0:	20800005 	stb	r2,0(r4)
100122e4:	81000017 	ldw	r4,0(r16)
100122e8:	903fe826 	beq	r18,zero,1001228c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100122ec:	003fde06 	br	10012268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
100122f0:	008003c4 	movi	r2,15
100122f4:	003fce06 	br	10012230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x5c>
100122f8:	25000005 	stb	r20,0(r4)
100122fc:	81000017 	ldw	r4,0(r16)
10012300:	003fe206 	br	1001228c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
10012304:	010400b4 	movhi	r4,4098
10012308:	21182304 	addi	r4,r4,24716
1001230c:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

10012310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc>:
10012310:	31803fcc 	andi	r6,r6,255
10012314:	3180201c 	xori	r6,r6,128
10012318:	defffe04 	addi	sp,sp,-8
1001231c:	31bfe004 	addi	r6,r6,-128
10012320:	dfc00115 	stw	ra,4(sp)
10012324:	d9800015 	stw	r6,0(sp)
10012328:	280f883a 	mov	r7,r5
1001232c:	21400117 	ldw	r5,4(r4)
10012330:	000d883a 	mov	r6,zero
10012334:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012338:	dfc00117 	ldw	ra,4(sp)
1001233c:	dec00204 	addi	sp,sp,8
10012340:	f800283a 	ret

10012344 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>:
10012344:	20800117 	ldw	r2,4(r4)
10012348:	11400736 	bltu	r2,r5,10012368 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x24>
1001234c:	2880052e 	bgeu	r5,r2,10012364 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x20>
10012350:	21c00017 	ldw	r7,0(r4)
10012354:	21400115 	stw	r5,4(r4)
10012358:	394b883a 	add	r5,r7,r5
1001235c:	28000005 	stb	zero,0(r5)
10012360:	f800283a 	ret
10012364:	f800283a 	ret
10012368:	31803fcc 	andi	r6,r6,255
1001236c:	3180201c 	xori	r6,r6,128
10012370:	defffe04 	addi	sp,sp,-8
10012374:	31bfe004 	addi	r6,r6,-128
10012378:	d9800015 	stw	r6,0(sp)
1001237c:	288fc83a 	sub	r7,r5,r2
10012380:	000d883a 	mov	r6,zero
10012384:	100b883a 	mov	r5,r2
10012388:	dfc00115 	stw	ra,4(sp)
1001238c:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012390:	dfc00117 	ldw	ra,4(sp)
10012394:	dec00204 	addi	sp,sp,8
10012398:	f800283a 	ret

1001239c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj>:
1001239c:	000d883a 	mov	r6,zero
100123a0:	00123441 	jmpi	10012344 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>

100123a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc>:
100123a4:	31803fcc 	andi	r6,r6,255
100123a8:	3180201c 	xori	r6,r6,128
100123ac:	defffe04 	addi	sp,sp,-8
100123b0:	31bfe004 	addi	r6,r6,-128
100123b4:	dfc00115 	stw	ra,4(sp)
100123b8:	d9800015 	stw	r6,0(sp)
100123bc:	21800117 	ldw	r6,4(r4)
100123c0:	280f883a 	mov	r7,r5
100123c4:	000b883a 	mov	r5,zero
100123c8:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
100123cc:	dfc00117 	ldw	ra,4(sp)
100123d0:	dec00204 	addi	sp,sp,8
100123d4:	f800283a 	ret

100123d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc>:
100123d8:	29403fcc 	andi	r5,r5,255
100123dc:	21800117 	ldw	r6,4(r4)
100123e0:	2940201c 	xori	r5,r5,128
100123e4:	defffd04 	addi	sp,sp,-12
100123e8:	297fe004 	addi	r5,r5,-128
100123ec:	d9400015 	stw	r5,0(sp)
100123f0:	01c00044 	movi	r7,1
100123f4:	000b883a 	mov	r5,zero
100123f8:	dc000115 	stw	r16,4(sp)
100123fc:	dfc00215 	stw	ra,8(sp)
10012400:	2021883a 	mov	r16,r4
10012404:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012408:	8005883a 	mov	r2,r16
1001240c:	dfc00217 	ldw	ra,8(sp)
10012410:	dc000117 	ldw	r16,4(sp)
10012414:	dec00304 	addi	sp,sp,12
10012418:	f800283a 	ret

1001241c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc>:
1001241c:	defffe04 	addi	sp,sp,-8
10012420:	dfc00115 	stw	ra,4(sp)
10012424:	20c00117 	ldw	r3,4(r4)
10012428:	19400a36 	bltu	r3,r5,10012454 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc+0x38>
1001242c:	39c03fcc 	andi	r7,r7,255
10012430:	39c0201c 	xori	r7,r7,128
10012434:	39ffe004 	addi	r7,r7,-128
10012438:	d9c00015 	stw	r7,0(sp)
1001243c:	300f883a 	mov	r7,r6
10012440:	000d883a 	mov	r6,zero
10012444:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012448:	dfc00117 	ldw	ra,4(sp)
1001244c:	dec00204 	addi	sp,sp,8
10012450:	f800283a 	ret
10012454:	2805883a 	mov	r2,r5
10012458:	010400b4 	movhi	r4,4098
1001245c:	014400b4 	movhi	r5,4098
10012460:	180f883a 	mov	r7,r3
10012464:	100d883a 	mov	r6,r2
10012468:	29582b04 	addi	r5,r5,24748
1001246c:	2117ee04 	addi	r4,r4,24504
10012470:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012474 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>:
10012474:	defffc04 	addi	sp,sp,-16
10012478:	dc000115 	stw	r16,4(sp)
1001247c:	24000017 	ldw	r16,0(r4)
10012480:	31803fcc 	andi	r6,r6,255
10012484:	3180201c 	xori	r6,r6,128
10012488:	2c21c83a 	sub	r16,r5,r16
1001248c:	31bfe004 	addi	r6,r6,-128
10012490:	d9800015 	stw	r6,0(sp)
10012494:	01c00044 	movi	r7,1
10012498:	000d883a 	mov	r6,zero
1001249c:	800b883a 	mov	r5,r16
100124a0:	dc400215 	stw	r17,8(sp)
100124a4:	dfc00315 	stw	ra,12(sp)
100124a8:	2023883a 	mov	r17,r4
100124ac:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
100124b0:	88800017 	ldw	r2,0(r17)
100124b4:	1405883a 	add	r2,r2,r16
100124b8:	dfc00317 	ldw	ra,12(sp)
100124bc:	dc400217 	ldw	r17,8(sp)
100124c0:	dc000117 	ldw	r16,4(sp)
100124c4:	dec00404 	addi	sp,sp,16
100124c8:	f800283a 	ret

100124cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc>:
100124cc:	deffff04 	addi	sp,sp,-4
100124d0:	dfc00015 	stw	ra,0(sp)
100124d4:	20800117 	ldw	r2,4(r4)
100124d8:	d8c00117 	ldw	r3,4(sp)
100124dc:	11400c36 	bltu	r2,r5,10012510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x44>
100124e0:	1145c83a 	sub	r2,r2,r5
100124e4:	30800836 	bltu	r6,r2,10012508 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x3c>
100124e8:	18c03fcc 	andi	r3,r3,255
100124ec:	18c0201c 	xori	r3,r3,128
100124f0:	18ffe004 	addi	r3,r3,-128
100124f4:	100d883a 	mov	r6,r2
100124f8:	d8c00115 	stw	r3,4(sp)
100124fc:	dfc00017 	ldw	ra,0(sp)
10012500:	dec00104 	addi	sp,sp,4
10012504:	00121d41 	jmpi	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012508:	3005883a 	mov	r2,r6
1001250c:	003ff606 	br	100124e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x1c>
10012510:	280d883a 	mov	r6,r5
10012514:	010400b4 	movhi	r4,4098
10012518:	014400b4 	movhi	r5,4098
1001251c:	100f883a 	mov	r7,r2
10012520:	29583104 	addi	r5,r5,24772
10012524:	2117ee04 	addi	r4,r4,24504
10012528:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1001252c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc>:
1001252c:	20800017 	ldw	r2,0(r4)
10012530:	d8c00007 	ldb	r3,0(sp)
10012534:	314dc83a 	sub	r6,r6,r5
10012538:	288bc83a 	sub	r5,r5,r2
1001253c:	d8c00015 	stw	r3,0(sp)
10012540:	00121d41 	jmpi	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>

10012544 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc>:
10012544:	defffc04 	addi	sp,sp,-16
10012548:	dc000115 	stw	r16,4(sp)
1001254c:	24000017 	ldw	r16,0(r4)
10012550:	39c03fcc 	andi	r7,r7,255
10012554:	39c0201c 	xori	r7,r7,128
10012558:	2c21c83a 	sub	r16,r5,r16
1001255c:	39ffe004 	addi	r7,r7,-128
10012560:	d9c00015 	stw	r7,0(sp)
10012564:	800b883a 	mov	r5,r16
10012568:	300f883a 	mov	r7,r6
1001256c:	000d883a 	mov	r6,zero
10012570:	dc400215 	stw	r17,8(sp)
10012574:	dfc00315 	stw	ra,12(sp)
10012578:	2023883a 	mov	r17,r4
1001257c:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10012580:	88800017 	ldw	r2,0(r17)
10012584:	1405883a 	add	r2,r2,r16
10012588:	dfc00317 	ldw	ra,12(sp)
1001258c:	dc400217 	ldw	r17,8(sp)
10012590:	dc000117 	ldw	r16,4(sp)
10012594:	dec00404 	addi	sp,sp,16
10012598:	f800283a 	ret

1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
1001259c:	defff504 	addi	sp,sp,-44
100125a0:	dc400315 	stw	r17,12(sp)
100125a4:	dfc00a15 	stw	ra,40(sp)
100125a8:	ddc00915 	stw	r23,36(sp)
100125ac:	dd800815 	stw	r22,32(sp)
100125b0:	dd400715 	stw	r21,28(sp)
100125b4:	dd000615 	stw	r20,24(sp)
100125b8:	dcc00515 	stw	r19,20(sp)
100125bc:	dc800415 	stw	r18,16(sp)
100125c0:	dc000215 	stw	r16,8(sp)
100125c4:	20c00117 	ldw	r3,4(r4)
100125c8:	00a00034 	movhi	r2,32768
100125cc:	10bfffc4 	addi	r2,r2,-1
100125d0:	dc400b17 	ldw	r17,44(sp)
100125d4:	3085883a 	add	r2,r6,r2
100125d8:	10c5c83a 	sub	r2,r2,r3
100125dc:	14408836 	bltu	r2,r17,10012800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x264>
100125e0:	20800017 	ldw	r2,0(r4)
100125e4:	89adc83a 	sub	r22,r17,r6
100125e8:	3025883a 	mov	r18,r6
100125ec:	21800204 	addi	r6,r4,8
100125f0:	2021883a 	mov	r16,r4
100125f4:	1dab883a 	add	r21,r3,r22
100125f8:	11803e26 	beq	r2,r6,100126f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x158>
100125fc:	21000217 	ldw	r4,8(r4)
10012600:	25403436 	bltu	r4,r21,100126d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x138>
10012604:	9167883a 	add	r19,r18,r5
10012608:	1169883a 	add	r20,r2,r5
1001260c:	1ce7c83a 	sub	r19,r3,r19
10012610:	3880212e 	bgeu	r7,r2,10012698 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xfc>
10012614:	98000926 	beq	r19,zero,1001263c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
10012618:	94400826 	beq	r18,r17,1001263c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
1001261c:	98800058 	cmpnei	r2,r19,1
10012620:	a449883a 	add	r4,r20,r17
10012624:	a48b883a 	add	r5,r20,r18
10012628:	10004926 	beq	r2,zero,10012750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1b4>
1001262c:	980d883a 	mov	r6,r19
10012630:	d9c00115 	stw	r7,4(sp)
10012634:	0016d340 	call	10016d34 <memmove>
10012638:	d9c00117 	ldw	r7,4(sp)
1001263c:	88000626 	beq	r17,zero,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012640:	88800058 	cmpnei	r2,r17,1
10012644:	10002826 	beq	r2,zero,100126e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
10012648:	880d883a 	mov	r6,r17
1001264c:	380b883a 	mov	r5,r7
10012650:	a009883a 	mov	r4,r20
10012654:	0016c340 	call	10016c34 <memcpy>
10012658:	80800017 	ldw	r2,0(r16)
1001265c:	85400115 	stw	r21,4(r16)
10012660:	1545883a 	add	r2,r2,r21
10012664:	10000005 	stb	zero,0(r2)
10012668:	8005883a 	mov	r2,r16
1001266c:	dfc00a17 	ldw	ra,40(sp)
10012670:	ddc00917 	ldw	r23,36(sp)
10012674:	dd800817 	ldw	r22,32(sp)
10012678:	dd400717 	ldw	r21,28(sp)
1001267c:	dd000617 	ldw	r20,24(sp)
10012680:	dcc00517 	ldw	r19,20(sp)
10012684:	dc800417 	ldw	r18,16(sp)
10012688:	dc400317 	ldw	r17,12(sp)
1001268c:	dc000217 	ldw	r16,8(sp)
10012690:	dec00b04 	addi	sp,sp,44
10012694:	f800283a 	ret
10012698:	10c5883a 	add	r2,r2,r3
1001269c:	11ffdd36 	bltu	r2,r7,10012614 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x78>
100126a0:	88001e26 	beq	r17,zero,1001271c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
100126a4:	9440152e 	bgeu	r18,r17,100126fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x160>
100126a8:	a4af883a 	add	r23,r20,r18
100126ac:	98001d1e 	bne	r19,zero,10012724 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x188>
100126b0:	3c45883a 	add	r2,r7,r17
100126b4:	b8802e36 	bltu	r23,r2,10012770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1d4>
100126b8:	88800058 	cmpnei	r2,r17,1
100126bc:	10000a26 	beq	r2,zero,100126e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
100126c0:	880d883a 	mov	r6,r17
100126c4:	380b883a 	mov	r5,r7
100126c8:	a009883a 	mov	r4,r20
100126cc:	0016d340 	call	10016d34 <memmove>
100126d0:	003fe106 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100126d4:	dc400015 	stw	r17,0(sp)
100126d8:	900d883a 	mov	r6,r18
100126dc:	8009883a 	mov	r4,r16
100126e0:	001163c0 	call	1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
100126e4:	003fdc06 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100126e8:	38800003 	ldbu	r2,0(r7)
100126ec:	a0800005 	stb	r2,0(r20)
100126f0:	003fd906 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100126f4:	010003c4 	movi	r4,15
100126f8:	003fc106 	br	10012600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x64>
100126fc:	88800058 	cmpnei	r2,r17,1
10012700:	10003326 	beq	r2,zero,100127d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x234>
10012704:	380b883a 	mov	r5,r7
10012708:	880d883a 	mov	r6,r17
1001270c:	a009883a 	mov	r4,r20
10012710:	d9c00115 	stw	r7,4(sp)
10012714:	0016d340 	call	10016d34 <memmove>
10012718:	d9c00117 	ldw	r7,4(sp)
1001271c:	983fce26 	beq	r19,zero,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012720:	947fcd26 	beq	r18,r17,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012724:	98800058 	cmpnei	r2,r19,1
10012728:	a449883a 	add	r4,r20,r17
1001272c:	a4af883a 	add	r23,r20,r18
10012730:	10000b26 	beq	r2,zero,10012760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1c4>
10012734:	980d883a 	mov	r6,r19
10012738:	b80b883a 	mov	r5,r23
1001273c:	d9c00115 	stw	r7,4(sp)
10012740:	0016d340 	call	10016d34 <memmove>
10012744:	d9c00117 	ldw	r7,4(sp)
10012748:	947fd936 	bltu	r18,r17,100126b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
1001274c:	003fc206 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012750:	28800003 	ldbu	r2,0(r5)
10012754:	20800005 	stb	r2,0(r4)
10012758:	883fbf26 	beq	r17,zero,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
1001275c:	003fb806 	br	10012640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa4>
10012760:	b8800003 	ldbu	r2,0(r23)
10012764:	20800005 	stb	r2,0(r4)
10012768:	947fd136 	bltu	r18,r17,100126b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
1001276c:	003fba06 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012770:	3dc00736 	bltu	r7,r23,10012790 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1f4>
10012774:	88800058 	cmpnei	r2,r17,1
10012778:	3d8b883a 	add	r5,r7,r22
1001277c:	10001a26 	beq	r2,zero,100127e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x24c>
10012780:	880d883a 	mov	r6,r17
10012784:	a009883a 	mov	r4,r20
10012788:	0016c340 	call	10016c34 <memcpy>
1001278c:	003fb206 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012790:	b9efc83a 	sub	r23,r23,r7
10012794:	b8800058 	cmpnei	r2,r23,1
10012798:	10001026 	beq	r2,zero,100127dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x240>
1001279c:	b8000426 	beq	r23,zero,100127b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
100127a0:	b80d883a 	mov	r6,r23
100127a4:	380b883a 	mov	r5,r7
100127a8:	a009883a 	mov	r4,r20
100127ac:	0016d340 	call	10016d34 <memmove>
100127b0:	8dcdc83a 	sub	r6,r17,r23
100127b4:	30800058 	cmpnei	r2,r6,1
100127b8:	a5c9883a 	add	r4,r20,r23
100127bc:	a44b883a 	add	r5,r20,r17
100127c0:	10000c26 	beq	r2,zero,100127f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x258>
100127c4:	303fa426 	beq	r6,zero,10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100127c8:	0016c340 	call	10016c34 <memcpy>
100127cc:	003fa206 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100127d0:	38800003 	ldbu	r2,0(r7)
100127d4:	a0800005 	stb	r2,0(r20)
100127d8:	003fd006 	br	1001271c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
100127dc:	38800003 	ldbu	r2,0(r7)
100127e0:	a0800005 	stb	r2,0(r20)
100127e4:	003ff206 	br	100127b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
100127e8:	28800003 	ldbu	r2,0(r5)
100127ec:	a0800005 	stb	r2,0(r20)
100127f0:	003f9906 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
100127f4:	28800003 	ldbu	r2,0(r5)
100127f8:	20800005 	stb	r2,0(r4)
100127fc:	003f9606 	br	10012658 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10012800:	010400b4 	movhi	r4,4098
10012804:	21188004 	addi	r4,r4,25088
10012808:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1001280c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj>:
1001280c:	defffe04 	addi	sp,sp,-8
10012810:	dfc00115 	stw	ra,4(sp)
10012814:	28800117 	ldw	r2,4(r5)
10012818:	22000117 	ldw	r8,4(r4)
1001281c:	29400017 	ldw	r5,0(r5)
10012820:	11800d36 	bltu	r2,r6,10012858 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x4c>
10012824:	1185c83a 	sub	r2,r2,r6
10012828:	2987883a 	add	r3,r5,r6
1001282c:	38800836 	bltu	r7,r2,10012850 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x44>
10012830:	d8800015 	stw	r2,0(sp)
10012834:	180f883a 	mov	r7,r3
10012838:	400d883a 	mov	r6,r8
1001283c:	000b883a 	mov	r5,zero
10012840:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012844:	dfc00117 	ldw	ra,4(sp)
10012848:	dec00204 	addi	sp,sp,8
1001284c:	f800283a 	ret
10012850:	3805883a 	mov	r2,r7
10012854:	003ff606 	br	10012830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x24>
10012858:	014400b4 	movhi	r5,4098
1001285c:	010400b4 	movhi	r4,4098
10012860:	100f883a 	mov	r7,r2
10012864:	29583704 	addi	r5,r5,24796
10012868:	2117ee04 	addi	r4,r4,24504
1001286c:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj>:
10012870:	defffe04 	addi	sp,sp,-8
10012874:	dfc00115 	stw	ra,4(sp)
10012878:	d9800015 	stw	r6,0(sp)
1001287c:	21800117 	ldw	r6,4(r4)
10012880:	280f883a 	mov	r7,r5
10012884:	000b883a 	mov	r5,zero
10012888:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001288c:	dfc00117 	ldw	ra,4(sp)
10012890:	dec00204 	addi	sp,sp,8
10012894:	f800283a 	ret

10012898 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE>:
10012898:	defffd04 	addi	sp,sp,-12
1001289c:	d9800015 	stw	r6,0(sp)
100128a0:	21800117 	ldw	r6,4(r4)
100128a4:	280f883a 	mov	r7,r5
100128a8:	000b883a 	mov	r5,zero
100128ac:	dc000115 	stw	r16,4(sp)
100128b0:	dfc00215 	stw	ra,8(sp)
100128b4:	2021883a 	mov	r16,r4
100128b8:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100128bc:	8005883a 	mov	r2,r16
100128c0:	dfc00217 	ldw	ra,8(sp)
100128c4:	dc000117 	ldw	r16,4(sp)
100128c8:	dec00304 	addi	sp,sp,12
100128cc:	f800283a 	ret

100128d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE>:
100128d0:	defffe04 	addi	sp,sp,-8
100128d4:	dfc00115 	stw	ra,4(sp)
100128d8:	d9800015 	stw	r6,0(sp)
100128dc:	21800117 	ldw	r6,4(r4)
100128e0:	280f883a 	mov	r7,r5
100128e4:	000b883a 	mov	r5,zero
100128e8:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100128ec:	dfc00117 	ldw	ra,4(sp)
100128f0:	dec00204 	addi	sp,sp,8
100128f4:	f800283a 	ret

100128f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
100128f8:	defffc04 	addi	sp,sp,-16
100128fc:	dc000115 	stw	r16,4(sp)
10012900:	2021883a 	mov	r16,r4
10012904:	2809883a 	mov	r4,r5
10012908:	dfc00315 	stw	ra,12(sp)
1001290c:	dc400215 	stw	r17,8(sp)
10012910:	2823883a 	mov	r17,r5
10012914:	00178f00 	call	100178f0 <strlen>
10012918:	81800117 	ldw	r6,4(r16)
1001291c:	880f883a 	mov	r7,r17
10012920:	d8800015 	stw	r2,0(sp)
10012924:	000b883a 	mov	r5,zero
10012928:	8009883a 	mov	r4,r16
1001292c:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012930:	dfc00317 	ldw	ra,12(sp)
10012934:	dc400217 	ldw	r17,8(sp)
10012938:	dc000117 	ldw	r16,4(sp)
1001293c:	dec00404 	addi	sp,sp,16
10012940:	f800283a 	ret

10012944 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
10012944:	deffff04 	addi	sp,sp,-4
10012948:	dfc00015 	stw	ra,0(sp)
1001294c:	20800117 	ldw	r2,4(r4)
10012950:	d8c00117 	ldw	r3,4(sp)
10012954:	11400936 	bltu	r2,r5,1001297c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x38>
10012958:	1145c83a 	sub	r2,r2,r5
1001295c:	30800536 	bltu	r6,r2,10012974 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x30>
10012960:	100d883a 	mov	r6,r2
10012964:	d8c00115 	stw	r3,4(sp)
10012968:	dfc00017 	ldw	ra,0(sp)
1001296c:	dec00104 	addi	sp,sp,4
10012970:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012974:	3005883a 	mov	r2,r6
10012978:	003ff906 	br	10012960 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x1c>
1001297c:	280d883a 	mov	r6,r5
10012980:	010400b4 	movhi	r4,4098
10012984:	014400b4 	movhi	r5,4098
10012988:	100f883a 	mov	r7,r2
1001298c:	29583104 	addi	r5,r5,24772
10012990:	2117ee04 	addi	r4,r4,24504
10012994:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012998 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
10012998:	defffc04 	addi	sp,sp,-16
1001299c:	dc000115 	stw	r16,4(sp)
100129a0:	2021883a 	mov	r16,r4
100129a4:	2809883a 	mov	r4,r5
100129a8:	dfc00315 	stw	ra,12(sp)
100129ac:	dc400215 	stw	r17,8(sp)
100129b0:	2823883a 	mov	r17,r5
100129b4:	00178f00 	call	100178f0 <strlen>
100129b8:	81800117 	ldw	r6,4(r16)
100129bc:	880f883a 	mov	r7,r17
100129c0:	d8800015 	stw	r2,0(sp)
100129c4:	000b883a 	mov	r5,zero
100129c8:	8009883a 	mov	r4,r16
100129cc:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100129d0:	dfc00317 	ldw	ra,12(sp)
100129d4:	dc400217 	ldw	r17,8(sp)
100129d8:	dc000117 	ldw	r16,4(sp)
100129dc:	dec00404 	addi	sp,sp,16
100129e0:	f800283a 	ret

100129e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj>:
100129e4:	defffe04 	addi	sp,sp,-8
100129e8:	dfc00115 	stw	ra,4(sp)
100129ec:	20c00117 	ldw	r3,4(r4)
100129f0:	19400736 	bltu	r3,r5,10012a10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj+0x2c>
100129f4:	d9c00015 	stw	r7,0(sp)
100129f8:	300f883a 	mov	r7,r6
100129fc:	000d883a 	mov	r6,zero
10012a00:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012a04:	dfc00117 	ldw	ra,4(sp)
10012a08:	dec00204 	addi	sp,sp,8
10012a0c:	f800283a 	ret
10012a10:	2805883a 	mov	r2,r5
10012a14:	010400b4 	movhi	r4,4098
10012a18:	014400b4 	movhi	r5,4098
10012a1c:	180f883a 	mov	r7,r3
10012a20:	100d883a 	mov	r6,r2
10012a24:	29583104 	addi	r5,r5,24772
10012a28:	2117ee04 	addi	r4,r4,24504
10012a2c:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_>:
10012a30:	defffe04 	addi	sp,sp,-8
10012a34:	dfc00115 	stw	ra,4(sp)
10012a38:	20800117 	ldw	r2,4(r4)
10012a3c:	2807883a 	mov	r3,r5
10012a40:	39400017 	ldw	r5,0(r7)
10012a44:	39c00117 	ldw	r7,4(r7)
10012a48:	10c00c36 	bltu	r2,r3,10012a7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x4c>
10012a4c:	10c5c83a 	sub	r2,r2,r3
10012a50:	30800836 	bltu	r6,r2,10012a74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x44>
10012a54:	d9c00015 	stw	r7,0(sp)
10012a58:	100d883a 	mov	r6,r2
10012a5c:	280f883a 	mov	r7,r5
10012a60:	180b883a 	mov	r5,r3
10012a64:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012a68:	dfc00117 	ldw	ra,4(sp)
10012a6c:	dec00204 	addi	sp,sp,8
10012a70:	f800283a 	ret
10012a74:	3005883a 	mov	r2,r6
10012a78:	003ff606 	br	10012a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x24>
10012a7c:	014400b4 	movhi	r5,4098
10012a80:	010400b4 	movhi	r4,4098
10012a84:	100f883a 	mov	r7,r2
10012a88:	180d883a 	mov	r6,r3
10012a8c:	29583104 	addi	r5,r5,24772
10012a90:	2117ee04 	addi	r4,r4,24504
10012a94:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012a98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
10012a98:	defffe04 	addi	sp,sp,-8
10012a9c:	dfc00115 	stw	ra,4(sp)
10012aa0:	20c00117 	ldw	r3,4(r4)
10012aa4:	31c00017 	ldw	r7,0(r6)
10012aa8:	31800117 	ldw	r6,4(r6)
10012aac:	19400636 	bltu	r3,r5,10012ac8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_+0x30>
10012ab0:	d9800015 	stw	r6,0(sp)
10012ab4:	000d883a 	mov	r6,zero
10012ab8:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012abc:	dfc00117 	ldw	ra,4(sp)
10012ac0:	dec00204 	addi	sp,sp,8
10012ac4:	f800283a 	ret
10012ac8:	2805883a 	mov	r2,r5
10012acc:	010400b4 	movhi	r4,4098
10012ad0:	014400b4 	movhi	r5,4098
10012ad4:	180f883a 	mov	r7,r3
10012ad8:	100d883a 	mov	r6,r2
10012adc:	29583104 	addi	r5,r5,24772
10012ae0:	2117ee04 	addi	r4,r4,24504
10012ae4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc>:
10012ae8:	defffa04 	addi	sp,sp,-24
10012aec:	dc400215 	stw	r17,8(sp)
10012af0:	2023883a 	mov	r17,r4
10012af4:	3809883a 	mov	r4,r7
10012af8:	dcc00415 	stw	r19,16(sp)
10012afc:	dc800315 	stw	r18,12(sp)
10012b00:	dc000115 	stw	r16,4(sp)
10012b04:	3025883a 	mov	r18,r6
10012b08:	dfc00515 	stw	ra,20(sp)
10012b0c:	3827883a 	mov	r19,r7
10012b10:	2821883a 	mov	r16,r5
10012b14:	00178f00 	call	100178f0 <strlen>
10012b18:	89800117 	ldw	r6,4(r17)
10012b1c:	34001036 	bltu	r6,r16,10012b60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x78>
10012b20:	340dc83a 	sub	r6,r6,r16
10012b24:	91800c36 	bltu	r18,r6,10012b58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x70>
10012b28:	d8800015 	stw	r2,0(sp)
10012b2c:	980f883a 	mov	r7,r19
10012b30:	800b883a 	mov	r5,r16
10012b34:	8809883a 	mov	r4,r17
10012b38:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012b3c:	dfc00517 	ldw	ra,20(sp)
10012b40:	dcc00417 	ldw	r19,16(sp)
10012b44:	dc800317 	ldw	r18,12(sp)
10012b48:	dc400217 	ldw	r17,8(sp)
10012b4c:	dc000117 	ldw	r16,4(sp)
10012b50:	dec00604 	addi	sp,sp,24
10012b54:	f800283a 	ret
10012b58:	900d883a 	mov	r6,r18
10012b5c:	003ff206 	br	10012b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x40>
10012b60:	014400b4 	movhi	r5,4098
10012b64:	010400b4 	movhi	r4,4098
10012b68:	300f883a 	mov	r7,r6
10012b6c:	29583104 	addi	r5,r5,24772
10012b70:	800d883a 	mov	r6,r16
10012b74:	2117ee04 	addi	r4,r4,24504
10012b78:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
10012b7c:	defffb04 	addi	sp,sp,-20
10012b80:	dc400215 	stw	r17,8(sp)
10012b84:	2023883a 	mov	r17,r4
10012b88:	3009883a 	mov	r4,r6
10012b8c:	dc800315 	stw	r18,12(sp)
10012b90:	dc000115 	stw	r16,4(sp)
10012b94:	dfc00415 	stw	ra,16(sp)
10012b98:	3025883a 	mov	r18,r6
10012b9c:	2821883a 	mov	r16,r5
10012ba0:	00178f00 	call	100178f0 <strlen>
10012ba4:	89c00117 	ldw	r7,4(r17)
10012ba8:	3c000c36 	bltu	r7,r16,10012bdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc+0x60>
10012bac:	d8800015 	stw	r2,0(sp)
10012bb0:	900f883a 	mov	r7,r18
10012bb4:	000d883a 	mov	r6,zero
10012bb8:	800b883a 	mov	r5,r16
10012bbc:	8809883a 	mov	r4,r17
10012bc0:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012bc4:	dfc00417 	ldw	ra,16(sp)
10012bc8:	dc800317 	ldw	r18,12(sp)
10012bcc:	dc400217 	ldw	r17,8(sp)
10012bd0:	dc000117 	ldw	r16,4(sp)
10012bd4:	dec00504 	addi	sp,sp,20
10012bd8:	f800283a 	ret
10012bdc:	014400b4 	movhi	r5,4098
10012be0:	010400b4 	movhi	r4,4098
10012be4:	800d883a 	mov	r6,r16
10012be8:	29583104 	addi	r5,r5,24772
10012bec:	2117ee04 	addi	r4,r4,24504
10012bf0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j>:
10012bf4:	deffff04 	addi	sp,sp,-4
10012bf8:	dfc00015 	stw	ra,0(sp)
10012bfc:	20c00017 	ldw	r3,0(r4)
10012c00:	20800117 	ldw	r2,4(r4)
10012c04:	da000117 	ldw	r8,4(sp)
10012c08:	28c7c83a 	sub	r3,r5,r3
10012c0c:	314bc83a 	sub	r5,r6,r5
10012c10:	10c00936 	bltu	r2,r3,10012c38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x44>
10012c14:	10cdc83a 	sub	r6,r2,r3
10012c18:	29800536 	bltu	r5,r6,10012c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x3c>
10012c1c:	180b883a 	mov	r5,r3
10012c20:	da000115 	stw	r8,4(sp)
10012c24:	dfc00017 	ldw	ra,0(sp)
10012c28:	dec00104 	addi	sp,sp,4
10012c2c:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012c30:	280d883a 	mov	r6,r5
10012c34:	003ff906 	br	10012c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x28>
10012c38:	014400b4 	movhi	r5,4098
10012c3c:	010400b4 	movhi	r4,4098
10012c40:	100f883a 	mov	r7,r2
10012c44:	180d883a 	mov	r6,r3
10012c48:	29583104 	addi	r5,r5,24772
10012c4c:	2117ee04 	addi	r4,r4,24504
10012c50:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012c54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_>:
10012c54:	deffff04 	addi	sp,sp,-4
10012c58:	dfc00015 	stw	ra,0(sp)
10012c5c:	20c00017 	ldw	r3,0(r4)
10012c60:	20800117 	ldw	r2,4(r4)
10012c64:	28c7c83a 	sub	r3,r5,r3
10012c68:	314bc83a 	sub	r5,r6,r5
10012c6c:	d9800117 	ldw	r6,4(sp)
10012c70:	31d1c83a 	sub	r8,r6,r7
10012c74:	10c00936 	bltu	r2,r3,10012c9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x48>
10012c78:	10cdc83a 	sub	r6,r2,r3
10012c7c:	29800536 	bltu	r5,r6,10012c94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x40>
10012c80:	180b883a 	mov	r5,r3
10012c84:	da000115 	stw	r8,4(sp)
10012c88:	dfc00017 	ldw	ra,0(sp)
10012c8c:	dec00104 	addi	sp,sp,4
10012c90:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012c94:	280d883a 	mov	r6,r5
10012c98:	003ff906 	br	10012c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x2c>
10012c9c:	014400b4 	movhi	r5,4098
10012ca0:	010400b4 	movhi	r4,4098
10012ca4:	100f883a 	mov	r7,r2
10012ca8:	180d883a 	mov	r6,r3
10012cac:	29583104 	addi	r5,r5,24772
10012cb0:	2117ee04 	addi	r4,r4,24504
10012cb4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012cb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_>:
10012cb8:	deffff04 	addi	sp,sp,-4
10012cbc:	dfc00015 	stw	ra,0(sp)
10012cc0:	20c00017 	ldw	r3,0(r4)
10012cc4:	20800117 	ldw	r2,4(r4)
10012cc8:	28c7c83a 	sub	r3,r5,r3
10012ccc:	314bc83a 	sub	r5,r6,r5
10012cd0:	d9800117 	ldw	r6,4(sp)
10012cd4:	31d1c83a 	sub	r8,r6,r7
10012cd8:	10c00936 	bltu	r2,r3,10012d00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x48>
10012cdc:	10cdc83a 	sub	r6,r2,r3
10012ce0:	29800536 	bltu	r5,r6,10012cf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x40>
10012ce4:	180b883a 	mov	r5,r3
10012ce8:	da000115 	stw	r8,4(sp)
10012cec:	dfc00017 	ldw	ra,0(sp)
10012cf0:	dec00104 	addi	sp,sp,4
10012cf4:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012cf8:	280d883a 	mov	r6,r5
10012cfc:	003ff906 	br	10012ce4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x2c>
10012d00:	014400b4 	movhi	r5,4098
10012d04:	010400b4 	movhi	r4,4098
10012d08:	100f883a 	mov	r7,r2
10012d0c:	180d883a 	mov	r6,r3
10012d10:	29583104 	addi	r5,r5,24772
10012d14:	2117ee04 	addi	r4,r4,24504
10012d18:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012d1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE>:
10012d1c:	defffe04 	addi	sp,sp,-8
10012d20:	dfc00015 	stw	ra,0(sp)
10012d24:	20c00017 	ldw	r3,0(r4)
10012d28:	20800117 	ldw	r2,4(r4)
10012d2c:	d9c00115 	stw	r7,4(sp)
10012d30:	28c7c83a 	sub	r3,r5,r3
10012d34:	da000217 	ldw	r8,8(sp)
10012d38:	314bc83a 	sub	r5,r6,r5
10012d3c:	10c00936 	bltu	r2,r3,10012d64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x48>
10012d40:	10cdc83a 	sub	r6,r2,r3
10012d44:	29800536 	bltu	r5,r6,10012d5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x40>
10012d48:	180b883a 	mov	r5,r3
10012d4c:	da000215 	stw	r8,8(sp)
10012d50:	dfc00017 	ldw	ra,0(sp)
10012d54:	dec00204 	addi	sp,sp,8
10012d58:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012d5c:	280d883a 	mov	r6,r5
10012d60:	003ff906 	br	10012d48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x2c>
10012d64:	014400b4 	movhi	r5,4098
10012d68:	010400b4 	movhi	r4,4098
10012d6c:	100f883a 	mov	r7,r2
10012d70:	180d883a 	mov	r6,r3
10012d74:	29583104 	addi	r5,r5,24772
10012d78:	2117ee04 	addi	r4,r4,24504
10012d7c:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_>:
10012d80:	defffe04 	addi	sp,sp,-8
10012d84:	dfc00115 	stw	ra,4(sp)
10012d88:	20c00017 	ldw	r3,0(r4)
10012d8c:	20800117 	ldw	r2,4(r4)
10012d90:	3a000017 	ldw	r8,0(r7)
10012d94:	28c7c83a 	sub	r3,r5,r3
10012d98:	39c00117 	ldw	r7,4(r7)
10012d9c:	314bc83a 	sub	r5,r6,r5
10012da0:	10c00b36 	bltu	r2,r3,10012dd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x50>
10012da4:	10cdc83a 	sub	r6,r2,r3
10012da8:	29800736 	bltu	r5,r6,10012dc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x48>
10012dac:	d9c00015 	stw	r7,0(sp)
10012db0:	180b883a 	mov	r5,r3
10012db4:	400f883a 	mov	r7,r8
10012db8:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012dbc:	dfc00117 	ldw	ra,4(sp)
10012dc0:	dec00204 	addi	sp,sp,8
10012dc4:	f800283a 	ret
10012dc8:	280d883a 	mov	r6,r5
10012dcc:	003ff706 	br	10012dac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x2c>
10012dd0:	014400b4 	movhi	r5,4098
10012dd4:	010400b4 	movhi	r4,4098
10012dd8:	100f883a 	mov	r7,r2
10012ddc:	180d883a 	mov	r6,r3
10012de0:	29583104 	addi	r5,r5,24772
10012de4:	2117ee04 	addi	r4,r4,24504
10012de8:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012dec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_>:
10012dec:	deffff04 	addi	sp,sp,-4
10012df0:	dfc00015 	stw	ra,0(sp)
10012df4:	20c00017 	ldw	r3,0(r4)
10012df8:	20800117 	ldw	r2,4(r4)
10012dfc:	28c7c83a 	sub	r3,r5,r3
10012e00:	314bc83a 	sub	r5,r6,r5
10012e04:	d9800117 	ldw	r6,4(sp)
10012e08:	31d1c83a 	sub	r8,r6,r7
10012e0c:	10c00936 	bltu	r2,r3,10012e34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x48>
10012e10:	10cdc83a 	sub	r6,r2,r3
10012e14:	29800536 	bltu	r5,r6,10012e2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x40>
10012e18:	180b883a 	mov	r5,r3
10012e1c:	da000115 	stw	r8,4(sp)
10012e20:	dfc00017 	ldw	ra,0(sp)
10012e24:	dec00104 	addi	sp,sp,4
10012e28:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012e2c:	280d883a 	mov	r6,r5
10012e30:	003ff906 	br	10012e18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x2c>
10012e34:	014400b4 	movhi	r5,4098
10012e38:	010400b4 	movhi	r4,4098
10012e3c:	100f883a 	mov	r7,r2
10012e40:	180d883a 	mov	r6,r3
10012e44:	29583104 	addi	r5,r5,24772
10012e48:	2117ee04 	addi	r4,r4,24504
10012e4c:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012e50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_>:
10012e50:	deffff04 	addi	sp,sp,-4
10012e54:	dfc00015 	stw	ra,0(sp)
10012e58:	20c00017 	ldw	r3,0(r4)
10012e5c:	20800117 	ldw	r2,4(r4)
10012e60:	28c7c83a 	sub	r3,r5,r3
10012e64:	314bc83a 	sub	r5,r6,r5
10012e68:	d9800117 	ldw	r6,4(sp)
10012e6c:	31d1c83a 	sub	r8,r6,r7
10012e70:	10c00936 	bltu	r2,r3,10012e98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x48>
10012e74:	10cdc83a 	sub	r6,r2,r3
10012e78:	29800536 	bltu	r5,r6,10012e90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x40>
10012e7c:	180b883a 	mov	r5,r3
10012e80:	da000115 	stw	r8,4(sp)
10012e84:	dfc00017 	ldw	ra,0(sp)
10012e88:	dec00104 	addi	sp,sp,4
10012e8c:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012e90:	280d883a 	mov	r6,r5
10012e94:	003ff906 	br	10012e7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x2c>
10012e98:	014400b4 	movhi	r5,4098
10012e9c:	010400b4 	movhi	r4,4098
10012ea0:	100f883a 	mov	r7,r2
10012ea4:	180d883a 	mov	r6,r3
10012ea8:	29583104 	addi	r5,r5,24772
10012eac:	2117ee04 	addi	r4,r4,24504
10012eb0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012eb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_>:
10012eb4:	defffa04 	addi	sp,sp,-24
10012eb8:	dc800315 	stw	r18,12(sp)
10012ebc:	2025883a 	mov	r18,r4
10012ec0:	3809883a 	mov	r4,r7
10012ec4:	dcc00415 	stw	r19,16(sp)
10012ec8:	dc400215 	stw	r17,8(sp)
10012ecc:	dc000115 	stw	r16,4(sp)
10012ed0:	3023883a 	mov	r17,r6
10012ed4:	2821883a 	mov	r16,r5
10012ed8:	dfc00515 	stw	ra,20(sp)
10012edc:	3827883a 	mov	r19,r7
10012ee0:	00178f00 	call	100178f0 <strlen>
10012ee4:	90c00017 	ldw	r3,0(r18)
10012ee8:	91800117 	ldw	r6,4(r18)
10012eec:	8c09c83a 	sub	r4,r17,r16
10012ef0:	80c7c83a 	sub	r3,r16,r3
10012ef4:	30c01036 	bltu	r6,r3,10012f38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x84>
10012ef8:	30cdc83a 	sub	r6,r6,r3
10012efc:	21800c36 	bltu	r4,r6,10012f30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x7c>
10012f00:	d8800015 	stw	r2,0(sp)
10012f04:	980f883a 	mov	r7,r19
10012f08:	180b883a 	mov	r5,r3
10012f0c:	9009883a 	mov	r4,r18
10012f10:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012f14:	dfc00517 	ldw	ra,20(sp)
10012f18:	dcc00417 	ldw	r19,16(sp)
10012f1c:	dc800317 	ldw	r18,12(sp)
10012f20:	dc400217 	ldw	r17,8(sp)
10012f24:	dc000117 	ldw	r16,4(sp)
10012f28:	dec00604 	addi	sp,sp,24
10012f2c:	f800283a 	ret
10012f30:	200d883a 	mov	r6,r4
10012f34:	003ff206 	br	10012f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x4c>
10012f38:	014400b4 	movhi	r5,4098
10012f3c:	010400b4 	movhi	r4,4098
10012f40:	300f883a 	mov	r7,r6
10012f44:	29583104 	addi	r5,r5,24772
10012f48:	180d883a 	mov	r6,r3
10012f4c:	2117ee04 	addi	r4,r4,24504
10012f50:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012f54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE>:
10012f54:	defffe04 	addi	sp,sp,-8
10012f58:	dfc00115 	stw	ra,4(sp)
10012f5c:	20800017 	ldw	r2,0(r4)
10012f60:	20c00117 	ldw	r3,4(r4)
10012f64:	2885c83a 	sub	r2,r5,r2
10012f68:	18800836 	bltu	r3,r2,10012f8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE+0x38>
10012f6c:	d9c00015 	stw	r7,0(sp)
10012f70:	100b883a 	mov	r5,r2
10012f74:	300f883a 	mov	r7,r6
10012f78:	000d883a 	mov	r6,zero
10012f7c:	001259c0 	call	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012f80:	dfc00117 	ldw	ra,4(sp)
10012f84:	dec00204 	addi	sp,sp,8
10012f88:	f800283a 	ret
10012f8c:	014400b4 	movhi	r5,4098
10012f90:	010400b4 	movhi	r4,4098
10012f94:	180f883a 	mov	r7,r3
10012f98:	100d883a 	mov	r6,r2
10012f9c:	29583104 	addi	r5,r5,24772
10012fa0:	2117ee04 	addi	r4,r4,24504
10012fa4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10012fa8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj>:
10012fa8:	deffff04 	addi	sp,sp,-4
10012fac:	dfc00015 	stw	ra,0(sp)
10012fb0:	30800117 	ldw	r2,4(r6)
10012fb4:	3807883a 	mov	r3,r7
10012fb8:	2811883a 	mov	r8,r5
10012fbc:	31c00017 	ldw	r7,0(r6)
10012fc0:	d9400117 	ldw	r5,4(sp)
10012fc4:	10c00d36 	bltu	r2,r3,10012ffc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x54>
10012fc8:	10c5c83a 	sub	r2,r2,r3
10012fcc:	38cf883a 	add	r7,r7,r3
10012fd0:	28800836 	bltu	r5,r2,10012ff4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x4c>
10012fd4:	20c00117 	ldw	r3,4(r4)
10012fd8:	1a000f36 	bltu	r3,r8,10013018 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x70>
10012fdc:	000d883a 	mov	r6,zero
10012fe0:	400b883a 	mov	r5,r8
10012fe4:	d8800115 	stw	r2,4(sp)
10012fe8:	dfc00017 	ldw	ra,0(sp)
10012fec:	dec00104 	addi	sp,sp,4
10012ff0:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012ff4:	2805883a 	mov	r2,r5
10012ff8:	003ff606 	br	10012fd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x2c>
10012ffc:	014400b4 	movhi	r5,4098
10013000:	010400b4 	movhi	r4,4098
10013004:	100f883a 	mov	r7,r2
10013008:	180d883a 	mov	r6,r3
1001300c:	29582b04 	addi	r5,r5,24748
10013010:	2117ee04 	addi	r4,r4,24504
10013014:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
10013018:	014400b4 	movhi	r5,4098
1001301c:	010400b4 	movhi	r4,4098
10013020:	180f883a 	mov	r7,r3
10013024:	400d883a 	mov	r6,r8
10013028:	29583104 	addi	r5,r5,24772
1001302c:	2117ee04 	addi	r4,r4,24504
10013030:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10013034 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj>:
10013034:	deffff04 	addi	sp,sp,-4
10013038:	dfc00015 	stw	ra,0(sp)
1001303c:	38800117 	ldw	r2,4(r7)
10013040:	d8c00117 	ldw	r3,4(sp)
10013044:	2811883a 	mov	r8,r5
10013048:	39c00017 	ldw	r7,0(r7)
1001304c:	d9400217 	ldw	r5,8(sp)
10013050:	10c01136 	bltu	r2,r3,10013098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x64>
10013054:	10c5c83a 	sub	r2,r2,r3
10013058:	38cf883a 	add	r7,r7,r3
1001305c:	28800a36 	bltu	r5,r2,10013088 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x54>
10013060:	20c00117 	ldw	r3,4(r4)
10013064:	1a001336 	bltu	r3,r8,100130b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x80>
10013068:	1a07c83a 	sub	r3,r3,r8
1001306c:	30c00836 	bltu	r6,r3,10013090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x5c>
10013070:	180d883a 	mov	r6,r3
10013074:	400b883a 	mov	r5,r8
10013078:	d8800115 	stw	r2,4(sp)
1001307c:	dfc00017 	ldw	ra,0(sp)
10013080:	dec00104 	addi	sp,sp,4
10013084:	001259c1 	jmpi	1001259c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10013088:	2805883a 	mov	r2,r5
1001308c:	003ff406 	br	10013060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x2c>
10013090:	3007883a 	mov	r3,r6
10013094:	003ff606 	br	10013070 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x3c>
10013098:	014400b4 	movhi	r5,4098
1001309c:	010400b4 	movhi	r4,4098
100130a0:	100f883a 	mov	r7,r2
100130a4:	180d883a 	mov	r6,r3
100130a8:	29583104 	addi	r5,r5,24772
100130ac:	2117ee04 	addi	r4,r4,24504
100130b0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
100130b4:	014400b4 	movhi	r5,4098
100130b8:	010400b4 	movhi	r4,4098
100130bc:	180f883a 	mov	r7,r3
100130c0:	400d883a 	mov	r6,r8
100130c4:	29583104 	addi	r5,r5,24772
100130c8:	2117ee04 	addi	r4,r4,24504
100130cc:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
100130d0:	defffc04 	addi	sp,sp,-16
100130d4:	dc400215 	stw	r17,8(sp)
100130d8:	dc000115 	stw	r16,4(sp)
100130dc:	dfc00315 	stw	ra,12(sp)
100130e0:	2021883a 	mov	r16,r4
100130e4:	20800117 	ldw	r2,4(r4)
100130e8:	21000017 	ldw	r4,0(r4)
100130ec:	80c00204 	addi	r3,r16,8
100130f0:	11a3883a 	add	r17,r2,r6
100130f4:	20c01926 	beq	r4,r3,1001315c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x8c>
100130f8:	80c00217 	ldw	r3,8(r16)
100130fc:	1c400f36 	bltu	r3,r17,1001313c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x6c>
10013100:	30000526 	beq	r6,zero,10013118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
10013104:	30c00058 	cmpnei	r3,r6,1
10013108:	2089883a 	add	r4,r4,r2
1001310c:	18001526 	beq	r3,zero,10013164 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x94>
10013110:	0016c340 	call	10016c34 <memcpy>
10013114:	81000017 	ldw	r4,0(r16)
10013118:	84400115 	stw	r17,4(r16)
1001311c:	2449883a 	add	r4,r4,r17
10013120:	8005883a 	mov	r2,r16
10013124:	20000005 	stb	zero,0(r4)
10013128:	dfc00317 	ldw	ra,12(sp)
1001312c:	dc400217 	ldw	r17,8(sp)
10013130:	dc000117 	ldw	r16,4(sp)
10013134:	dec00404 	addi	sp,sp,16
10013138:	f800283a 	ret
1001313c:	d9800015 	stw	r6,0(sp)
10013140:	280f883a 	mov	r7,r5
10013144:	8009883a 	mov	r4,r16
10013148:	000d883a 	mov	r6,zero
1001314c:	100b883a 	mov	r5,r2
10013150:	001163c0 	call	1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10013154:	81000017 	ldw	r4,0(r16)
10013158:	003fef06 	br	10013118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
1001315c:	00c003c4 	movi	r3,15
10013160:	003fe606 	br	100130fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x2c>
10013164:	28800003 	ldbu	r2,0(r5)
10013168:	20800005 	stb	r2,0(r4)
1001316c:	81000017 	ldw	r4,0(r16)
10013170:	003fe906 	br	10013118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>

10013174 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
10013174:	29800117 	ldw	r6,4(r5)
10013178:	29400017 	ldw	r5,0(r5)
1001317c:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

10013180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
10013180:	29800117 	ldw	r6,4(r5)
10013184:	29400017 	ldw	r5,0(r5)
10013188:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

1001318c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj>:
1001318c:	28800117 	ldw	r2,4(r5)
10013190:	29400017 	ldw	r5,0(r5)
10013194:	11800836 	bltu	r2,r6,100131b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x2c>
10013198:	3007883a 	mov	r3,r6
1001319c:	118dc83a 	sub	r6,r2,r6
100131a0:	39800236 	bltu	r7,r6,100131ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x20>
100131a4:	28cb883a 	add	r5,r5,r3
100131a8:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100131ac:	380d883a 	mov	r6,r7
100131b0:	28cb883a 	add	r5,r5,r3
100131b4:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100131b8:	014400b4 	movhi	r5,4098
100131bc:	010400b4 	movhi	r4,4098
100131c0:	deffff04 	addi	sp,sp,-4
100131c4:	100f883a 	mov	r7,r2
100131c8:	29583d04 	addi	r5,r5,24820
100131cc:	2117ee04 	addi	r4,r4,24504
100131d0:	dfc00015 	stw	ra,0(sp)
100131d4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100131d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
100131d8:	20c00117 	ldw	r3,4(r4)
100131dc:	00a00034 	movhi	r2,32768
100131e0:	10bfffc4 	addi	r2,r2,-1
100131e4:	10c5c83a 	sub	r2,r2,r3
100131e8:	11800136 	bltu	r2,r6,100131f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x18>
100131ec:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100131f0:	010400b4 	movhi	r4,4098
100131f4:	deffff04 	addi	sp,sp,-4
100131f8:	21183d04 	addi	r4,r4,24820
100131fc:	dfc00015 	stw	ra,0(sp)
10013200:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

10013204 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
10013204:	defffd04 	addi	sp,sp,-12
10013208:	dc000015 	stw	r16,0(sp)
1001320c:	2021883a 	mov	r16,r4
10013210:	2809883a 	mov	r4,r5
10013214:	dc400115 	stw	r17,4(sp)
10013218:	dfc00215 	stw	ra,8(sp)
1001321c:	2823883a 	mov	r17,r5
10013220:	00178f00 	call	100178f0 <strlen>
10013224:	81000117 	ldw	r4,4(r16)
10013228:	00e00034 	movhi	r3,32768
1001322c:	18ffffc4 	addi	r3,r3,-1
10013230:	1907c83a 	sub	r3,r3,r4
10013234:	18800836 	bltu	r3,r2,10013258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x54>
10013238:	100d883a 	mov	r6,r2
1001323c:	880b883a 	mov	r5,r17
10013240:	8009883a 	mov	r4,r16
10013244:	dfc00217 	ldw	ra,8(sp)
10013248:	dc400117 	ldw	r17,4(sp)
1001324c:	dc000017 	ldw	r16,0(sp)
10013250:	dec00304 	addi	sp,sp,12
10013254:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013258:	010400b4 	movhi	r4,4098
1001325c:	21183d04 	addi	r4,r4,24820
10013260:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

10013264 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
10013264:	defffd04 	addi	sp,sp,-12
10013268:	dc000015 	stw	r16,0(sp)
1001326c:	2021883a 	mov	r16,r4
10013270:	2809883a 	mov	r4,r5
10013274:	dc400115 	stw	r17,4(sp)
10013278:	dfc00215 	stw	ra,8(sp)
1001327c:	2823883a 	mov	r17,r5
10013280:	00178f00 	call	100178f0 <strlen>
10013284:	81000117 	ldw	r4,4(r16)
10013288:	00e00034 	movhi	r3,32768
1001328c:	18ffffc4 	addi	r3,r3,-1
10013290:	1907c83a 	sub	r3,r3,r4
10013294:	18800836 	bltu	r3,r2,100132b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc+0x54>
10013298:	100d883a 	mov	r6,r2
1001329c:	880b883a 	mov	r5,r17
100132a0:	8009883a 	mov	r4,r16
100132a4:	dfc00217 	ldw	ra,8(sp)
100132a8:	dc400117 	ldw	r17,4(sp)
100132ac:	dc000017 	ldw	r16,0(sp)
100132b0:	dec00304 	addi	sp,sp,12
100132b4:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100132b8:	010400b4 	movhi	r4,4098
100132bc:	21183d04 	addi	r4,r4,24820
100132c0:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

100132c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE>:
100132c4:	20c00117 	ldw	r3,4(r4)
100132c8:	00a00034 	movhi	r2,32768
100132cc:	10bfffc4 	addi	r2,r2,-1
100132d0:	10c5c83a 	sub	r2,r2,r3
100132d4:	11800136 	bltu	r2,r6,100132dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE+0x18>
100132d8:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100132dc:	010400b4 	movhi	r4,4098
100132e0:	deffff04 	addi	sp,sp,-4
100132e4:	21183d04 	addi	r4,r4,24820
100132e8:	dfc00015 	stw	ra,0(sp)
100132ec:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

100132f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE>:
100132f0:	20c00117 	ldw	r3,4(r4)
100132f4:	00a00034 	movhi	r2,32768
100132f8:	10bfffc4 	addi	r2,r2,-1
100132fc:	10c5c83a 	sub	r2,r2,r3
10013300:	11800136 	bltu	r2,r6,10013308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE+0x18>
10013304:	00130d01 	jmpi	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013308:	010400b4 	movhi	r4,4098
1001330c:	deffff04 	addi	sp,sp,-4
10013310:	21183d04 	addi	r4,r4,24820
10013314:	dfc00015 	stw	ra,0(sp)
10013318:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>

1001331c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj>:
1001331c:	defffe04 	addi	sp,sp,-8
10013320:	dfc00115 	stw	ra,4(sp)
10013324:	dc000015 	stw	r16,0(sp)
10013328:	24000117 	ldw	r16,4(r4)
1001332c:	3805883a 	mov	r2,r7
10013330:	81c01636 	bltu	r16,r7,1001338c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x70>
10013334:	80a1c83a 	sub	r16,r16,r2
10013338:	280f883a 	mov	r7,r5
1001333c:	34000d36 	bltu	r6,r16,10013374 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x58>
10013340:	80000726 	beq	r16,zero,10013360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
10013344:	21400017 	ldw	r5,0(r4)
10013348:	80c00058 	cmpnei	r3,r16,1
1001334c:	288b883a 	add	r5,r5,r2
10013350:	18000b26 	beq	r3,zero,10013380 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x64>
10013354:	800d883a 	mov	r6,r16
10013358:	3809883a 	mov	r4,r7
1001335c:	0016c340 	call	10016c34 <memcpy>
10013360:	8005883a 	mov	r2,r16
10013364:	dfc00117 	ldw	ra,4(sp)
10013368:	dc000017 	ldw	r16,0(sp)
1001336c:	dec00204 	addi	sp,sp,8
10013370:	f800283a 	ret
10013374:	3021883a 	mov	r16,r6
10013378:	803ff926 	beq	r16,zero,10013360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
1001337c:	003ff106 	br	10013344 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x28>
10013380:	28800003 	ldbu	r2,0(r5)
10013384:	38800005 	stb	r2,0(r7)
10013388:	003ff506 	br	10013360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
1001338c:	014400b4 	movhi	r5,4098
10013390:	010400b4 	movhi	r4,4098
10013394:	800f883a 	mov	r7,r16
10013398:	100d883a 	mov	r6,r2
1001339c:	29580d04 	addi	r5,r5,24628
100133a0:	2117ee04 	addi	r4,r4,24504
100133a4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100133a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>:
100133a8:	21404626 	beq	r4,r5,100134c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x11c>
100133ac:	defff404 	addi	sp,sp,-48
100133b0:	dd400915 	stw	r21,36(sp)
100133b4:	dd000815 	stw	r20,32(sp)
100133b8:	dc400515 	stw	r17,20(sp)
100133bc:	dc000415 	stw	r16,16(sp)
100133c0:	dfc00b15 	stw	ra,44(sp)
100133c4:	dd800a15 	stw	r22,40(sp)
100133c8:	dcc00715 	stw	r19,28(sp)
100133cc:	dc800615 	stw	r18,24(sp)
100133d0:	24c00017 	ldw	r19,0(r4)
100133d4:	25400204 	addi	r21,r4,8
100133d8:	2823883a 	mov	r17,r5
100133dc:	2021883a 	mov	r16,r4
100133e0:	2c800017 	ldw	r18,0(r5)
100133e4:	2d000204 	addi	r20,r5,8
100133e8:	acc01526 	beq	r21,r19,10013440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x98>
100133ec:	25800217 	ldw	r22,8(r4)
100133f0:	a4802d26 	beq	r20,r18,100134a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x100>
100133f4:	24800015 	stw	r18,0(r4)
100133f8:	28800217 	ldw	r2,8(r5)
100133fc:	2cc00015 	stw	r19,0(r5)
10013400:	20800215 	stw	r2,8(r4)
10013404:	8d800215 	stw	r22,8(r17)
10013408:	88800117 	ldw	r2,4(r17)
1001340c:	80c00117 	ldw	r3,4(r16)
10013410:	80800115 	stw	r2,4(r16)
10013414:	88c00115 	stw	r3,4(r17)
10013418:	dfc00b17 	ldw	ra,44(sp)
1001341c:	dd800a17 	ldw	r22,40(sp)
10013420:	dd400917 	ldw	r21,36(sp)
10013424:	dd000817 	ldw	r20,32(sp)
10013428:	dcc00717 	ldw	r19,28(sp)
1001342c:	dc800617 	ldw	r18,24(sp)
10013430:	dc400517 	ldw	r17,20(sp)
10013434:	dc000417 	ldw	r16,16(sp)
10013438:	dec00c04 	addi	sp,sp,48
1001343c:	f800283a 	ret
10013440:	a4800b26 	beq	r20,r18,10013470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xc8>
10013444:	2cc00217 	ldw	r19,8(r5)
10013448:	01800404 	movi	r6,16
1001344c:	a80b883a 	mov	r5,r21
10013450:	a009883a 	mov	r4,r20
10013454:	0016c340 	call	10016c34 <memcpy>
10013458:	84800015 	stw	r18,0(r16)
1001345c:	8d000015 	stw	r20,0(r17)
10013460:	84c00215 	stw	r19,8(r16)
10013464:	88800117 	ldw	r2,4(r17)
10013468:	80c00117 	ldw	r3,4(r16)
1001346c:	003fe806 	br	10013410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10013470:	20c00117 	ldw	r3,4(r4)
10013474:	28800117 	ldw	r2,4(r5)
10013478:	18001326 	beq	r3,zero,100134c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x120>
1001347c:	01800404 	movi	r6,16
10013480:	1000141e 	bne	r2,zero,100134d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x12c>
10013484:	a80b883a 	mov	r5,r21
10013488:	a009883a 	mov	r4,r20
1001348c:	0016c340 	call	10016c34 <memcpy>
10013490:	80800117 	ldw	r2,4(r16)
10013494:	88800115 	stw	r2,4(r17)
10013498:	80800017 	ldw	r2,0(r16)
1001349c:	80000115 	stw	zero,4(r16)
100134a0:	10000005 	stb	zero,0(r2)
100134a4:	003fdc06 	br	10013418 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>
100134a8:	01800404 	movi	r6,16
100134ac:	a00b883a 	mov	r5,r20
100134b0:	a809883a 	mov	r4,r21
100134b4:	0016c340 	call	10016c34 <memcpy>
100134b8:	8cc00015 	stw	r19,0(r17)
100134bc:	85400015 	stw	r21,0(r16)
100134c0:	003fd006 	br	10013404 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x5c>
100134c4:	f800283a 	ret
100134c8:	1000101e 	bne	r2,zero,1001350c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x164>
100134cc:	0007883a 	mov	r3,zero
100134d0:	003fcf06 	br	10013410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
100134d4:	a00b883a 	mov	r5,r20
100134d8:	d809883a 	mov	r4,sp
100134dc:	0016c340 	call	10016c34 <memcpy>
100134e0:	01800404 	movi	r6,16
100134e4:	a80b883a 	mov	r5,r21
100134e8:	a009883a 	mov	r4,r20
100134ec:	0016c340 	call	10016c34 <memcpy>
100134f0:	01800404 	movi	r6,16
100134f4:	d80b883a 	mov	r5,sp
100134f8:	a809883a 	mov	r4,r21
100134fc:	0016c340 	call	10016c34 <memcpy>
10013500:	88800117 	ldw	r2,4(r17)
10013504:	80c00117 	ldw	r3,4(r16)
10013508:	003fc106 	br	10013410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
1001350c:	01800404 	movi	r6,16
10013510:	a00b883a 	mov	r5,r20
10013514:	a809883a 	mov	r4,r21
10013518:	0016c340 	call	10016c34 <memcpy>
1001351c:	88800117 	ldw	r2,4(r17)
10013520:	80800115 	stw	r2,4(r16)
10013524:	88800017 	ldw	r2,0(r17)
10013528:	88000115 	stw	zero,4(r17)
1001352c:	10000005 	stb	zero,0(r2)
10013530:	003fb906 	br	10013418 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>

10013534 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
10013534:	20800017 	ldw	r2,0(r4)
10013538:	f800283a 	ret

1001353c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
1001353c:	20800017 	ldw	r2,0(r4)
10013540:	f800283a 	ret

10013544 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
10013544:	2005883a 	mov	r2,r4
10013548:	f800283a 	ret

1001354c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>:
1001354c:	defff804 	addi	sp,sp,-32
10013550:	dfc00715 	stw	ra,28(sp)
10013554:	dd800615 	stw	r22,24(sp)
10013558:	dd400515 	stw	r21,20(sp)
1001355c:	dd000415 	stw	r20,16(sp)
10013560:	dcc00315 	stw	r19,12(sp)
10013564:	dc800215 	stw	r18,8(sp)
10013568:	dc400115 	stw	r17,4(sp)
1001356c:	dc000015 	stw	r16,0(sp)
10013570:	24800117 	ldw	r18,4(r4)
10013574:	38002626 	beq	r7,zero,10013610 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xc4>
10013578:	34801a2e 	bgeu	r6,r18,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
1001357c:	25000017 	ldw	r20,0(r4)
10013580:	9185c83a 	sub	r2,r18,r6
10013584:	a189883a 	add	r4,r20,r6
10013588:	a4a5883a 	add	r18,r20,r18
1001358c:	11c01536 	bltu	r2,r7,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10013590:	05400044 	movi	r21,1
10013594:	a9ebc83a 	sub	r21,r21,r7
10013598:	a88d883a 	add	r6,r21,r2
1001359c:	30001126 	beq	r6,zero,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
100135a0:	2d800007 	ldb	r22,0(r5)
100135a4:	2827883a 	mov	r19,r5
100135a8:	3821883a 	mov	r16,r7
100135ac:	b00b883a 	mov	r5,r22
100135b0:	0016ac00 	call	10016ac0 <memchr>
100135b4:	1023883a 	mov	r17,r2
100135b8:	800d883a 	mov	r6,r16
100135bc:	980b883a 	mov	r5,r19
100135c0:	1009883a 	mov	r4,r2
100135c4:	10000726 	beq	r2,zero,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
100135c8:	0016ba80 	call	10016ba8 <memcmp>
100135cc:	89000044 	addi	r4,r17,1
100135d0:	9107c83a 	sub	r3,r18,r4
100135d4:	a8cd883a 	add	r6,r21,r3
100135d8:	10001026 	beq	r2,zero,1001361c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xd0>
100135dc:	1c000136 	bltu	r3,r16,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
100135e0:	303ff21e 	bne	r6,zero,100135ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x60>
100135e4:	00bfffc4 	movi	r2,-1
100135e8:	dfc00717 	ldw	ra,28(sp)
100135ec:	dd800617 	ldw	r22,24(sp)
100135f0:	dd400517 	ldw	r21,20(sp)
100135f4:	dd000417 	ldw	r20,16(sp)
100135f8:	dcc00317 	ldw	r19,12(sp)
100135fc:	dc800217 	ldw	r18,8(sp)
10013600:	dc400117 	ldw	r17,4(sp)
10013604:	dc000017 	ldw	r16,0(sp)
10013608:	dec00804 	addi	sp,sp,32
1001360c:	f800283a 	ret
10013610:	91bff436 	bltu	r18,r6,100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10013614:	3005883a 	mov	r2,r6
10013618:	003ff306 	br	100135e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>
1001361c:	8d05c83a 	sub	r2,r17,r20
10013620:	003ff106 	br	100135e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>

10013624 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j>:
10013624:	29c00117 	ldw	r7,4(r5)
10013628:	29400017 	ldw	r5,0(r5)
1001362c:	001354c1 	jmpi	1001354c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10013630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj>:
10013630:	defffc04 	addi	sp,sp,-16
10013634:	dc000215 	stw	r16,8(sp)
10013638:	2021883a 	mov	r16,r4
1001363c:	2809883a 	mov	r4,r5
10013640:	dfc00315 	stw	ra,12(sp)
10013644:	d9800115 	stw	r6,4(sp)
10013648:	d9400015 	stw	r5,0(sp)
1001364c:	00178f00 	call	100178f0 <strlen>
10013650:	d9800117 	ldw	r6,4(sp)
10013654:	d9400017 	ldw	r5,0(sp)
10013658:	100f883a 	mov	r7,r2
1001365c:	8009883a 	mov	r4,r16
10013660:	dfc00317 	ldw	ra,12(sp)
10013664:	dc000217 	ldw	r16,8(sp)
10013668:	dec00404 	addi	sp,sp,16
1001366c:	001354c1 	jmpi	1001354c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10013670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>:
10013670:	20800117 	ldw	r2,4(r4)
10013674:	3080112e 	bgeu	r6,r2,100136bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x4c>
10013678:	defffe04 	addi	sp,sp,-8
1001367c:	dfc00115 	stw	ra,4(sp)
10013680:	dc000015 	stw	r16,0(sp)
10013684:	24000017 	ldw	r16,0(r4)
10013688:	29403fcc 	andi	r5,r5,255
1001368c:	3007883a 	mov	r3,r6
10013690:	2940201c 	xori	r5,r5,128
10013694:	118dc83a 	sub	r6,r2,r6
10013698:	297fe004 	addi	r5,r5,-128
1001369c:	80c9883a 	add	r4,r16,r3
100136a0:	0016ac00 	call	10016ac0 <memchr>
100136a4:	10000726 	beq	r2,zero,100136c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x54>
100136a8:	1405c83a 	sub	r2,r2,r16
100136ac:	dfc00117 	ldw	ra,4(sp)
100136b0:	dc000017 	ldw	r16,0(sp)
100136b4:	dec00204 	addi	sp,sp,8
100136b8:	f800283a 	ret
100136bc:	00bfffc4 	movi	r2,-1
100136c0:	f800283a 	ret
100136c4:	00bfffc4 	movi	r2,-1
100136c8:	dfc00117 	ldw	ra,4(sp)
100136cc:	dc000017 	ldw	r16,0(sp)
100136d0:	dec00204 	addi	sp,sp,8
100136d4:	f800283a 	ret

100136d8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>:
100136d8:	defffb04 	addi	sp,sp,-20
100136dc:	dfc00415 	stw	ra,16(sp)
100136e0:	dcc00315 	stw	r19,12(sp)
100136e4:	dc800215 	stw	r18,8(sp)
100136e8:	dc400115 	stw	r17,4(sp)
100136ec:	dc000015 	stw	r16,0(sp)
100136f0:	24000117 	ldw	r16,4(r4)
100136f4:	81c01c36 	bltu	r16,r7,10013768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
100136f8:	81e1c83a 	sub	r16,r16,r7
100136fc:	34001836 	bltu	r6,r16,10013760 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x88>
10013700:	24c00017 	ldw	r19,0(r4)
10013704:	2825883a 	mov	r18,r5
10013708:	3823883a 	mov	r17,r7
1001370c:	9c09883a 	add	r4,r19,r16
10013710:	880d883a 	mov	r6,r17
10013714:	900b883a 	mov	r5,r18
10013718:	88000926 	beq	r17,zero,10013740 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
1001371c:	0016ba80 	call	10016ba8 <memcmp>
10013720:	10000726 	beq	r2,zero,10013740 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
10013724:	80bfffc4 	addi	r2,r16,-1
10013728:	80000f26 	beq	r16,zero,10013768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
1001372c:	1021883a 	mov	r16,r2
10013730:	9c09883a 	add	r4,r19,r16
10013734:	880d883a 	mov	r6,r17
10013738:	900b883a 	mov	r5,r18
1001373c:	883ff71e 	bne	r17,zero,1001371c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x44>
10013740:	8005883a 	mov	r2,r16
10013744:	dfc00417 	ldw	ra,16(sp)
10013748:	dcc00317 	ldw	r19,12(sp)
1001374c:	dc800217 	ldw	r18,8(sp)
10013750:	dc400117 	ldw	r17,4(sp)
10013754:	dc000017 	ldw	r16,0(sp)
10013758:	dec00504 	addi	sp,sp,20
1001375c:	f800283a 	ret
10013760:	3021883a 	mov	r16,r6
10013764:	003fe606 	br	10013700 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x28>
10013768:	043fffc4 	movi	r16,-1
1001376c:	003ff406 	br	10013740 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>

10013770 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j>:
10013770:	29c00117 	ldw	r7,4(r5)
10013774:	29400017 	ldw	r5,0(r5)
10013778:	00136d81 	jmpi	100136d8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

1001377c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj>:
1001377c:	defffc04 	addi	sp,sp,-16
10013780:	dc000215 	stw	r16,8(sp)
10013784:	2021883a 	mov	r16,r4
10013788:	2809883a 	mov	r4,r5
1001378c:	dfc00315 	stw	ra,12(sp)
10013790:	d9800115 	stw	r6,4(sp)
10013794:	d9400015 	stw	r5,0(sp)
10013798:	00178f00 	call	100178f0 <strlen>
1001379c:	d9800117 	ldw	r6,4(sp)
100137a0:	d9400017 	ldw	r5,0(sp)
100137a4:	100f883a 	mov	r7,r2
100137a8:	8009883a 	mov	r4,r16
100137ac:	dfc00317 	ldw	ra,12(sp)
100137b0:	dc000217 	ldw	r16,8(sp)
100137b4:	dec00404 	addi	sp,sp,16
100137b8:	00136d81 	jmpi	100136d8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

100137bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>:
100137bc:	20800117 	ldw	r2,4(r4)
100137c0:	10000f26 	beq	r2,zero,10013800 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x44>
100137c4:	10bfffc4 	addi	r2,r2,-1
100137c8:	30800b36 	bltu	r6,r2,100137f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x3c>
100137cc:	29403fcc 	andi	r5,r5,255
100137d0:	21000017 	ldw	r4,0(r4)
100137d4:	2940201c 	xori	r5,r5,128
100137d8:	297fe004 	addi	r5,r5,-128
100137dc:	2087883a 	add	r3,r4,r2
100137e0:	18c00007 	ldb	r3,0(r3)
100137e4:	19400826 	beq	r3,r5,10013808 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x4c>
100137e8:	10bfffc4 	addi	r2,r2,-1
100137ec:	10ffffe0 	cmpeqi	r3,r2,-1
100137f0:	183ffa26 	beq	r3,zero,100137dc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x20>
100137f4:	f800283a 	ret
100137f8:	3005883a 	mov	r2,r6
100137fc:	003ff306 	br	100137cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x10>
10013800:	00bfffc4 	movi	r2,-1
10013804:	f800283a 	ret
10013808:	f800283a 	ret

1001380c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>:
1001380c:	38002126 	beq	r7,zero,10013894 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x88>
10013810:	defffa04 	addi	sp,sp,-24
10013814:	dc000015 	stw	r16,0(sp)
10013818:	dfc00515 	stw	ra,20(sp)
1001381c:	dd000415 	stw	r20,16(sp)
10013820:	dcc00315 	stw	r19,12(sp)
10013824:	dc800215 	stw	r18,8(sp)
10013828:	dc400115 	stw	r17,4(sp)
1001382c:	24800117 	ldw	r18,4(r4)
10013830:	3021883a 	mov	r16,r6
10013834:	3480152e 	bgeu	r6,r18,1001388c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10013838:	3823883a 	mov	r17,r7
1001383c:	2827883a 	mov	r19,r5
10013840:	25000017 	ldw	r20,0(r4)
10013844:	00000206 	br	10013850 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x44>
10013848:	84000044 	addi	r16,r16,1
1001384c:	84800f26 	beq	r16,r18,1001388c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10013850:	a405883a 	add	r2,r20,r16
10013854:	11400007 	ldb	r5,0(r2)
10013858:	880d883a 	mov	r6,r17
1001385c:	9809883a 	mov	r4,r19
10013860:	0016ac00 	call	10016ac0 <memchr>
10013864:	103ff826 	beq	r2,zero,10013848 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x3c>
10013868:	8005883a 	mov	r2,r16
1001386c:	dfc00517 	ldw	ra,20(sp)
10013870:	dd000417 	ldw	r20,16(sp)
10013874:	dcc00317 	ldw	r19,12(sp)
10013878:	dc800217 	ldw	r18,8(sp)
1001387c:	dc400117 	ldw	r17,4(sp)
10013880:	dc000017 	ldw	r16,0(sp)
10013884:	dec00604 	addi	sp,sp,24
10013888:	f800283a 	ret
1001388c:	00bfffc4 	movi	r2,-1
10013890:	003ff606 	br	1001386c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x60>
10013894:	00bfffc4 	movi	r2,-1
10013898:	f800283a 	ret

1001389c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j>:
1001389c:	29c00117 	ldw	r7,4(r5)
100138a0:	29400017 	ldw	r5,0(r5)
100138a4:	001380c1 	jmpi	1001380c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

100138a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj>:
100138a8:	defffc04 	addi	sp,sp,-16
100138ac:	dc000215 	stw	r16,8(sp)
100138b0:	2021883a 	mov	r16,r4
100138b4:	2809883a 	mov	r4,r5
100138b8:	dfc00315 	stw	ra,12(sp)
100138bc:	d9800115 	stw	r6,4(sp)
100138c0:	d9400015 	stw	r5,0(sp)
100138c4:	00178f00 	call	100178f0 <strlen>
100138c8:	d9800117 	ldw	r6,4(sp)
100138cc:	d9400017 	ldw	r5,0(sp)
100138d0:	100f883a 	mov	r7,r2
100138d4:	8009883a 	mov	r4,r16
100138d8:	dfc00317 	ldw	ra,12(sp)
100138dc:	dc000217 	ldw	r16,8(sp)
100138e0:	dec00404 	addi	sp,sp,16
100138e4:	001380c1 	jmpi	1001380c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

100138e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj>:
100138e8:	29403fcc 	andi	r5,r5,255
100138ec:	2940201c 	xori	r5,r5,128
100138f0:	297fe004 	addi	r5,r5,-128
100138f4:	00136701 	jmpi	10013670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>

100138f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>:
100138f8:	defffb04 	addi	sp,sp,-20
100138fc:	dfc00415 	stw	ra,16(sp)
10013900:	dcc00315 	stw	r19,12(sp)
10013904:	dc800215 	stw	r18,8(sp)
10013908:	dc400115 	stw	r17,4(sp)
1001390c:	dc000015 	stw	r16,0(sp)
10013910:	24000117 	ldw	r16,4(r4)
10013914:	80001226 	beq	r16,zero,10013960 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
10013918:	38001126 	beq	r7,zero,10013960 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
1001391c:	843fffc4 	addi	r16,r16,-1
10013920:	3400012e 	bgeu	r6,r16,10013928 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x30>
10013924:	3021883a 	mov	r16,r6
10013928:	3823883a 	mov	r17,r7
1001392c:	2825883a 	mov	r18,r5
10013930:	24c00017 	ldw	r19,0(r4)
10013934:	00000306 	br	10013944 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x4c>
10013938:	843fffc4 	addi	r16,r16,-1
1001393c:	80bfffd8 	cmpnei	r2,r16,-1
10013940:	10000826 	beq	r2,zero,10013964 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
10013944:	9c05883a 	add	r2,r19,r16
10013948:	11400007 	ldb	r5,0(r2)
1001394c:	880d883a 	mov	r6,r17
10013950:	9009883a 	mov	r4,r18
10013954:	0016ac00 	call	10016ac0 <memchr>
10013958:	103ff726 	beq	r2,zero,10013938 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x40>
1001395c:	00000106 	br	10013964 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
10013960:	043fffc4 	movi	r16,-1
10013964:	8005883a 	mov	r2,r16
10013968:	dfc00417 	ldw	ra,16(sp)
1001396c:	dcc00317 	ldw	r19,12(sp)
10013970:	dc800217 	ldw	r18,8(sp)
10013974:	dc400117 	ldw	r17,4(sp)
10013978:	dc000017 	ldw	r16,0(sp)
1001397c:	dec00504 	addi	sp,sp,20
10013980:	f800283a 	ret

10013984 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j>:
10013984:	29c00117 	ldw	r7,4(r5)
10013988:	29400017 	ldw	r5,0(r5)
1001398c:	00138f81 	jmpi	100138f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

10013990 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj>:
10013990:	defffc04 	addi	sp,sp,-16
10013994:	dc000215 	stw	r16,8(sp)
10013998:	2021883a 	mov	r16,r4
1001399c:	2809883a 	mov	r4,r5
100139a0:	dfc00315 	stw	ra,12(sp)
100139a4:	d9800115 	stw	r6,4(sp)
100139a8:	d9400015 	stw	r5,0(sp)
100139ac:	00178f00 	call	100178f0 <strlen>
100139b0:	d9800117 	ldw	r6,4(sp)
100139b4:	d9400017 	ldw	r5,0(sp)
100139b8:	100f883a 	mov	r7,r2
100139bc:	8009883a 	mov	r4,r16
100139c0:	dfc00317 	ldw	ra,12(sp)
100139c4:	dc000217 	ldw	r16,8(sp)
100139c8:	dec00404 	addi	sp,sp,16
100139cc:	00138f81 	jmpi	100138f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

100139d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj>:
100139d0:	29403fcc 	andi	r5,r5,255
100139d4:	2940201c 	xori	r5,r5,128
100139d8:	297fe004 	addi	r5,r5,-128
100139dc:	00137bc1 	jmpi	100137bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>

100139e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>:
100139e0:	defffa04 	addi	sp,sp,-24
100139e4:	dfc00515 	stw	ra,20(sp)
100139e8:	dd000415 	stw	r20,16(sp)
100139ec:	dcc00315 	stw	r19,12(sp)
100139f0:	dc800215 	stw	r18,8(sp)
100139f4:	dc400115 	stw	r17,4(sp)
100139f8:	dc000015 	stw	r16,0(sp)
100139fc:	24800117 	ldw	r18,4(r4)
10013a00:	3480172e 	bgeu	r6,r18,10013a60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
10013a04:	3021883a 	mov	r16,r6
10013a08:	2827883a 	mov	r19,r5
10013a0c:	3823883a 	mov	r17,r7
10013a10:	25000017 	ldw	r20,0(r4)
10013a14:	3800031e 	bne	r7,zero,10013a24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x44>
10013a18:	00000806 	br	10013a3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x5c>
10013a1c:	84000044 	addi	r16,r16,1
10013a20:	94000f26 	beq	r18,r16,10013a60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
10013a24:	a405883a 	add	r2,r20,r16
10013a28:	11400007 	ldb	r5,0(r2)
10013a2c:	880d883a 	mov	r6,r17
10013a30:	9809883a 	mov	r4,r19
10013a34:	0016ac00 	call	10016ac0 <memchr>
10013a38:	103ff81e 	bne	r2,zero,10013a1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x3c>
10013a3c:	8005883a 	mov	r2,r16
10013a40:	dfc00517 	ldw	ra,20(sp)
10013a44:	dd000417 	ldw	r20,16(sp)
10013a48:	dcc00317 	ldw	r19,12(sp)
10013a4c:	dc800217 	ldw	r18,8(sp)
10013a50:	dc400117 	ldw	r17,4(sp)
10013a54:	dc000017 	ldw	r16,0(sp)
10013a58:	dec00604 	addi	sp,sp,24
10013a5c:	f800283a 	ret
10013a60:	00bfffc4 	movi	r2,-1
10013a64:	003ff606 	br	10013a40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x60>

10013a68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j>:
10013a68:	29c00117 	ldw	r7,4(r5)
10013a6c:	29400017 	ldw	r5,0(r5)
10013a70:	00139e01 	jmpi	100139e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

10013a74 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj>:
10013a74:	defffc04 	addi	sp,sp,-16
10013a78:	dc000215 	stw	r16,8(sp)
10013a7c:	2021883a 	mov	r16,r4
10013a80:	2809883a 	mov	r4,r5
10013a84:	dfc00315 	stw	ra,12(sp)
10013a88:	d9800115 	stw	r6,4(sp)
10013a8c:	d9400015 	stw	r5,0(sp)
10013a90:	00178f00 	call	100178f0 <strlen>
10013a94:	d9800117 	ldw	r6,4(sp)
10013a98:	d9400017 	ldw	r5,0(sp)
10013a9c:	100f883a 	mov	r7,r2
10013aa0:	8009883a 	mov	r4,r16
10013aa4:	dfc00317 	ldw	ra,12(sp)
10013aa8:	dc000217 	ldw	r16,8(sp)
10013aac:	dec00404 	addi	sp,sp,16
10013ab0:	00139e01 	jmpi	100139e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

10013ab4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>:
10013ab4:	21c00117 	ldw	r7,4(r4)
10013ab8:	31c00e2e 	bgeu	r6,r7,10013af4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x40>
10013abc:	21000017 	ldw	r4,0(r4)
10013ac0:	29403fcc 	andi	r5,r5,255
10013ac4:	2940201c 	xori	r5,r5,128
10013ac8:	2185883a 	add	r2,r4,r6
10013acc:	10800007 	ldb	r2,0(r2)
10013ad0:	297fe004 	addi	r5,r5,-128
10013ad4:	2880091e 	bne	r5,r2,10013afc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
10013ad8:	2807883a 	mov	r3,r5
10013adc:	00000206 	br	10013ae8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x34>
10013ae0:	10800007 	ldb	r2,0(r2)
10013ae4:	10c0051e 	bne	r2,r3,10013afc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
10013ae8:	31800044 	addi	r6,r6,1
10013aec:	2185883a 	add	r2,r4,r6
10013af0:	31fffb1e 	bne	r6,r7,10013ae0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x2c>
10013af4:	00bfffc4 	movi	r2,-1
10013af8:	f800283a 	ret
10013afc:	3005883a 	mov	r2,r6
10013b00:	f800283a 	ret

10013b04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>:
10013b04:	defffb04 	addi	sp,sp,-20
10013b08:	dfc00415 	stw	ra,16(sp)
10013b0c:	dcc00315 	stw	r19,12(sp)
10013b10:	dc800215 	stw	r18,8(sp)
10013b14:	dc400115 	stw	r17,4(sp)
10013b18:	dc000015 	stw	r16,0(sp)
10013b1c:	24000117 	ldw	r16,4(r4)
10013b20:	80001926 	beq	r16,zero,10013b88 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x84>
10013b24:	843fffc4 	addi	r16,r16,-1
10013b28:	34001536 	bltu	r6,r16,10013b80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x7c>
10013b2c:	24c00017 	ldw	r19,0(r4)
10013b30:	3823883a 	mov	r17,r7
10013b34:	2825883a 	mov	r18,r5
10013b38:	9c05883a 	add	r2,r19,r16
10013b3c:	880d883a 	mov	r6,r17
10013b40:	9009883a 	mov	r4,r18
10013b44:	88000626 	beq	r17,zero,10013b60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
10013b48:	11400007 	ldb	r5,0(r2)
10013b4c:	0016ac00 	call	10016ac0 <memchr>
10013b50:	10000326 	beq	r2,zero,10013b60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
10013b54:	843fffc4 	addi	r16,r16,-1
10013b58:	80bfffd8 	cmpnei	r2,r16,-1
10013b5c:	103ff61e 	bne	r2,zero,10013b38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x34>
10013b60:	8005883a 	mov	r2,r16
10013b64:	dfc00417 	ldw	ra,16(sp)
10013b68:	dcc00317 	ldw	r19,12(sp)
10013b6c:	dc800217 	ldw	r18,8(sp)
10013b70:	dc400117 	ldw	r17,4(sp)
10013b74:	dc000017 	ldw	r16,0(sp)
10013b78:	dec00504 	addi	sp,sp,20
10013b7c:	f800283a 	ret
10013b80:	3021883a 	mov	r16,r6
10013b84:	003fe906 	br	10013b2c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x28>
10013b88:	043fffc4 	movi	r16,-1
10013b8c:	003ff406 	br	10013b60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>

10013b90 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j>:
10013b90:	29c00117 	ldw	r7,4(r5)
10013b94:	29400017 	ldw	r5,0(r5)
10013b98:	0013b041 	jmpi	10013b04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

10013b9c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj>:
10013b9c:	defffc04 	addi	sp,sp,-16
10013ba0:	dc000215 	stw	r16,8(sp)
10013ba4:	2021883a 	mov	r16,r4
10013ba8:	2809883a 	mov	r4,r5
10013bac:	dfc00315 	stw	ra,12(sp)
10013bb0:	d9800115 	stw	r6,4(sp)
10013bb4:	d9400015 	stw	r5,0(sp)
10013bb8:	00178f00 	call	100178f0 <strlen>
10013bbc:	d9800117 	ldw	r6,4(sp)
10013bc0:	d9400017 	ldw	r5,0(sp)
10013bc4:	100f883a 	mov	r7,r2
10013bc8:	8009883a 	mov	r4,r16
10013bcc:	dfc00317 	ldw	ra,12(sp)
10013bd0:	dc000217 	ldw	r16,8(sp)
10013bd4:	dec00404 	addi	sp,sp,16
10013bd8:	0013b041 	jmpi	10013b04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

10013bdc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj>:
10013bdc:	20800117 	ldw	r2,4(r4)
10013be0:	10001026 	beq	r2,zero,10013c24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x48>
10013be4:	10bfffc4 	addi	r2,r2,-1
10013be8:	30800c36 	bltu	r6,r2,10013c1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x40>
10013bec:	29403fcc 	andi	r5,r5,255
10013bf0:	2940201c 	xori	r5,r5,128
10013bf4:	21000017 	ldw	r4,0(r4)
10013bf8:	297fe004 	addi	r5,r5,-128
10013bfc:	00000306 	br	10013c0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x30>
10013c00:	10bfffc4 	addi	r2,r2,-1
10013c04:	10ffffd8 	cmpnei	r3,r2,-1
10013c08:	18000826 	beq	r3,zero,10013c2c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x50>
10013c0c:	2087883a 	add	r3,r4,r2
10013c10:	18c00007 	ldb	r3,0(r3)
10013c14:	197ffa26 	beq	r3,r5,10013c00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x24>
10013c18:	f800283a 	ret
10013c1c:	3005883a 	mov	r2,r6
10013c20:	003ff206 	br	10013bec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x10>
10013c24:	00bfffc4 	movi	r2,-1
10013c28:	f800283a 	ret
10013c2c:	f800283a 	ret

10013c30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
10013c30:	defffd04 	addi	sp,sp,-12
10013c34:	dfc00215 	stw	ra,8(sp)
10013c38:	dc400115 	stw	r17,4(sp)
10013c3c:	dc000015 	stw	r16,0(sp)
10013c40:	2c000117 	ldw	r16,4(r5)
10013c44:	24400117 	ldw	r17,4(r4)
10013c48:	8c000c2e 	bgeu	r17,r16,10013c7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x4c>
10013c4c:	880d883a 	mov	r6,r17
10013c50:	30000426 	beq	r6,zero,10013c64 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x34>
10013c54:	29400017 	ldw	r5,0(r5)
10013c58:	21000017 	ldw	r4,0(r4)
10013c5c:	0016ba80 	call	10016ba8 <memcmp>
10013c60:	1000011e 	bne	r2,zero,10013c68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x38>
10013c64:	8c05c83a 	sub	r2,r17,r16
10013c68:	dfc00217 	ldw	ra,8(sp)
10013c6c:	dc400117 	ldw	r17,4(sp)
10013c70:	dc000017 	ldw	r16,0(sp)
10013c74:	dec00304 	addi	sp,sp,12
10013c78:	f800283a 	ret
10013c7c:	800d883a 	mov	r6,r16
10013c80:	003ff306 	br	10013c50 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x20>

10013c84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_>:
10013c84:	defffd04 	addi	sp,sp,-12
10013c88:	dfc00215 	stw	ra,8(sp)
10013c8c:	dc400115 	stw	r17,4(sp)
10013c90:	dc000015 	stw	r16,0(sp)
10013c94:	24000117 	ldw	r16,4(r4)
10013c98:	2805883a 	mov	r2,r5
10013c9c:	81401836 	bltu	r16,r5,10013d00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x7c>
10013ca0:	8161c83a 	sub	r16,r16,r5
10013ca4:	34001136 	bltu	r6,r16,10013cec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x68>
10013ca8:	3c400117 	ldw	r17,4(r7)
10013cac:	880d883a 	mov	r6,r17
10013cb0:	84400c36 	bltu	r16,r17,10013ce4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
10013cb4:	30000526 	beq	r6,zero,10013ccc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x48>
10013cb8:	21000017 	ldw	r4,0(r4)
10013cbc:	39400017 	ldw	r5,0(r7)
10013cc0:	2089883a 	add	r4,r4,r2
10013cc4:	0016ba80 	call	10016ba8 <memcmp>
10013cc8:	1000011e 	bne	r2,zero,10013cd0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x4c>
10013ccc:	8445c83a 	sub	r2,r16,r17
10013cd0:	dfc00217 	ldw	ra,8(sp)
10013cd4:	dc400117 	ldw	r17,4(sp)
10013cd8:	dc000017 	ldw	r16,0(sp)
10013cdc:	dec00304 	addi	sp,sp,12
10013ce0:	f800283a 	ret
10013ce4:	800d883a 	mov	r6,r16
10013ce8:	003ff206 	br	10013cb4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
10013cec:	3c400117 	ldw	r17,4(r7)
10013cf0:	3021883a 	mov	r16,r6
10013cf4:	880d883a 	mov	r6,r17
10013cf8:	847fee2e 	bgeu	r16,r17,10013cb4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
10013cfc:	003ff906 	br	10013ce4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
10013d00:	014400b4 	movhi	r5,4098
10013d04:	010400b4 	movhi	r4,4098
10013d08:	800f883a 	mov	r7,r16
10013d0c:	100d883a 	mov	r6,r2
10013d10:	29581204 	addi	r5,r5,24648
10013d14:	2117ee04 	addi	r4,r4,24504
10013d18:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10013d1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj>:
10013d1c:	defffd04 	addi	sp,sp,-12
10013d20:	dfc00215 	stw	ra,8(sp)
10013d24:	dc400115 	stw	r17,4(sp)
10013d28:	dc000015 	stw	r16,0(sp)
10013d2c:	24400117 	ldw	r17,4(r4)
10013d30:	2805883a 	mov	r2,r5
10013d34:	d8c00317 	ldw	r3,12(sp)
10013d38:	d9400417 	ldw	r5,16(sp)
10013d3c:	88802636 	bltu	r17,r2,10013dd8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xbc>
10013d40:	3c000117 	ldw	r16,4(r7)
10013d44:	80c01d36 	bltu	r16,r3,10013dbc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xa0>
10013d48:	88a3c83a 	sub	r17,r17,r2
10013d4c:	34401736 	bltu	r6,r17,10013dac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x90>
10013d50:	80e1c83a 	sub	r16,r16,r3
10013d54:	2c001136 	bltu	r5,r16,10013d9c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
10013d58:	800d883a 	mov	r6,r16
10013d5c:	8c000d36 	bltu	r17,r16,10013d94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
10013d60:	30000626 	beq	r6,zero,10013d7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x60>
10013d64:	39400017 	ldw	r5,0(r7)
10013d68:	21000017 	ldw	r4,0(r4)
10013d6c:	28cb883a 	add	r5,r5,r3
10013d70:	2089883a 	add	r4,r4,r2
10013d74:	0016ba80 	call	10016ba8 <memcmp>
10013d78:	1000011e 	bne	r2,zero,10013d80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x64>
10013d7c:	8c05c83a 	sub	r2,r17,r16
10013d80:	dfc00217 	ldw	ra,8(sp)
10013d84:	dc400117 	ldw	r17,4(sp)
10013d88:	dc000017 	ldw	r16,0(sp)
10013d8c:	dec00304 	addi	sp,sp,12
10013d90:	f800283a 	ret
10013d94:	880d883a 	mov	r6,r17
10013d98:	003ff106 	br	10013d60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
10013d9c:	2821883a 	mov	r16,r5
10013da0:	800d883a 	mov	r6,r16
10013da4:	8c3fee2e 	bgeu	r17,r16,10013d60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
10013da8:	003ffa06 	br	10013d94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
10013dac:	80e1c83a 	sub	r16,r16,r3
10013db0:	3023883a 	mov	r17,r6
10013db4:	2c3fe82e 	bgeu	r5,r16,10013d58 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x3c>
10013db8:	003ff806 	br	10013d9c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
10013dbc:	014400b4 	movhi	r5,4098
10013dc0:	010400b4 	movhi	r4,4098
10013dc4:	800f883a 	mov	r7,r16
10013dc8:	180d883a 	mov	r6,r3
10013dcc:	29581204 	addi	r5,r5,24648
10013dd0:	2117ee04 	addi	r4,r4,24504
10013dd4:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
10013dd8:	014400b4 	movhi	r5,4098
10013ddc:	010400b4 	movhi	r4,4098
10013de0:	880f883a 	mov	r7,r17
10013de4:	100d883a 	mov	r6,r2
10013de8:	29581204 	addi	r5,r5,24648
10013dec:	2117ee04 	addi	r4,r4,24504
10013df0:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10013df4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
10013df4:	defffb04 	addi	sp,sp,-20
10013df8:	dcc00315 	stw	r19,12(sp)
10013dfc:	dc800215 	stw	r18,8(sp)
10013e00:	dc000015 	stw	r16,0(sp)
10013e04:	dfc00415 	stw	ra,16(sp)
10013e08:	dc400115 	stw	r17,4(sp)
10013e0c:	24400117 	ldw	r17,4(r4)
10013e10:	2027883a 	mov	r19,r4
10013e14:	2809883a 	mov	r4,r5
10013e18:	2825883a 	mov	r18,r5
10013e1c:	00178f00 	call	100178f0 <strlen>
10013e20:	1021883a 	mov	r16,r2
10013e24:	88800e2e 	bgeu	r17,r2,10013e60 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x6c>
10013e28:	880d883a 	mov	r6,r17
10013e2c:	30000426 	beq	r6,zero,10013e40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x4c>
10013e30:	99000017 	ldw	r4,0(r19)
10013e34:	900b883a 	mov	r5,r18
10013e38:	0016ba80 	call	10016ba8 <memcmp>
10013e3c:	1000011e 	bne	r2,zero,10013e44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x50>
10013e40:	8c05c83a 	sub	r2,r17,r16
10013e44:	dfc00417 	ldw	ra,16(sp)
10013e48:	dcc00317 	ldw	r19,12(sp)
10013e4c:	dc800217 	ldw	r18,8(sp)
10013e50:	dc400117 	ldw	r17,4(sp)
10013e54:	dc000017 	ldw	r16,0(sp)
10013e58:	dec00504 	addi	sp,sp,20
10013e5c:	f800283a 	ret
10013e60:	100d883a 	mov	r6,r2
10013e64:	003ff106 	br	10013e2c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x38>

10013e68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc>:
10013e68:	defffa04 	addi	sp,sp,-24
10013e6c:	dc800215 	stw	r18,8(sp)
10013e70:	dfc00515 	stw	ra,20(sp)
10013e74:	dd000415 	stw	r20,16(sp)
10013e78:	dcc00315 	stw	r19,12(sp)
10013e7c:	dc400115 	stw	r17,4(sp)
10013e80:	dc000015 	stw	r16,0(sp)
10013e84:	24000117 	ldw	r16,4(r4)
10013e88:	2825883a 	mov	r18,r5
10013e8c:	81401c36 	bltu	r16,r5,10013f00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x98>
10013e90:	8161c83a 	sub	r16,r16,r5
10013e94:	2027883a 	mov	r19,r4
10013e98:	3829883a 	mov	r20,r7
10013e9c:	34001636 	bltu	r6,r16,10013ef8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x90>
10013ea0:	a009883a 	mov	r4,r20
10013ea4:	00178f00 	call	100178f0 <strlen>
10013ea8:	1023883a 	mov	r17,r2
10013eac:	100d883a 	mov	r6,r2
10013eb0:	80800f36 	bltu	r16,r2,10013ef0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x88>
10013eb4:	30000526 	beq	r6,zero,10013ecc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x64>
10013eb8:	99000017 	ldw	r4,0(r19)
10013ebc:	a00b883a 	mov	r5,r20
10013ec0:	2489883a 	add	r4,r4,r18
10013ec4:	0016ba80 	call	10016ba8 <memcmp>
10013ec8:	1000011e 	bne	r2,zero,10013ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x68>
10013ecc:	8445c83a 	sub	r2,r16,r17
10013ed0:	dfc00517 	ldw	ra,20(sp)
10013ed4:	dd000417 	ldw	r20,16(sp)
10013ed8:	dcc00317 	ldw	r19,12(sp)
10013edc:	dc800217 	ldw	r18,8(sp)
10013ee0:	dc400117 	ldw	r17,4(sp)
10013ee4:	dc000017 	ldw	r16,0(sp)
10013ee8:	dec00604 	addi	sp,sp,24
10013eec:	f800283a 	ret
10013ef0:	800d883a 	mov	r6,r16
10013ef4:	003fef06 	br	10013eb4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x4c>
10013ef8:	3021883a 	mov	r16,r6
10013efc:	003fe806 	br	10013ea0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x38>
10013f00:	014400b4 	movhi	r5,4098
10013f04:	010400b4 	movhi	r4,4098
10013f08:	800f883a 	mov	r7,r16
10013f0c:	900d883a 	mov	r6,r18
10013f10:	29581204 	addi	r5,r5,24648
10013f14:	2117ee04 	addi	r4,r4,24504
10013f18:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10013f1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj>:
10013f1c:	defffd04 	addi	sp,sp,-12
10013f20:	dc400115 	stw	r17,4(sp)
10013f24:	dfc00215 	stw	ra,8(sp)
10013f28:	dc000015 	stw	r16,0(sp)
10013f2c:	24000117 	ldw	r16,4(r4)
10013f30:	2805883a 	mov	r2,r5
10013f34:	dc400317 	ldw	r17,12(sp)
10013f38:	81401636 	bltu	r16,r5,10013f94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x78>
10013f3c:	8161c83a 	sub	r16,r16,r5
10013f40:	34001036 	bltu	r6,r16,10013f84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x68>
10013f44:	800d883a 	mov	r6,r16
10013f48:	8c000c36 	bltu	r17,r16,10013f7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
10013f4c:	30000526 	beq	r6,zero,10013f64 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x48>
10013f50:	21000017 	ldw	r4,0(r4)
10013f54:	380b883a 	mov	r5,r7
10013f58:	2089883a 	add	r4,r4,r2
10013f5c:	0016ba80 	call	10016ba8 <memcmp>
10013f60:	1000011e 	bne	r2,zero,10013f68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x4c>
10013f64:	8445c83a 	sub	r2,r16,r17
10013f68:	dfc00217 	ldw	ra,8(sp)
10013f6c:	dc400117 	ldw	r17,4(sp)
10013f70:	dc000017 	ldw	r16,0(sp)
10013f74:	dec00304 	addi	sp,sp,12
10013f78:	f800283a 	ret
10013f7c:	880d883a 	mov	r6,r17
10013f80:	003ff206 	br	10013f4c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
10013f84:	3021883a 	mov	r16,r6
10013f88:	800d883a 	mov	r6,r16
10013f8c:	8c3fef2e 	bgeu	r17,r16,10013f4c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
10013f90:	003ffa06 	br	10013f7c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
10013f94:	014400b4 	movhi	r5,4098
10013f98:	010400b4 	movhi	r4,4098
10013f9c:	800f883a 	mov	r7,r16
10013fa0:	100d883a 	mov	r6,r2
10013fa4:	29581204 	addi	r5,r5,24648
10013fa8:	2117ee04 	addi	r4,r4,24504
10013fac:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

10013fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
10013fb0:	21400015 	stw	r5,0(r4)
10013fb4:	f800283a 	ret

10013fb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
10013fb8:	21400015 	stw	r5,0(r4)
10013fbc:	f800283a 	ret

10013fc0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
10013fc0:	00c400b4 	movhi	r3,4098
10013fc4:	00840074 	movhi	r2,4097
10013fc8:	deffec04 	addi	sp,sp,-80
10013fcc:	2011883a 	mov	r8,r4
10013fd0:	18d3b804 	addi	r3,r3,20192
10013fd4:	10903304 	addi	r2,r2,16588
10013fd8:	01c40074 	movhi	r7,4097
10013fdc:	39e4f504 	addi	r7,r7,-27692
10013fe0:	d8c00c15 	stw	r3,48(sp)
10013fe4:	d8800e15 	stw	r2,56(sp)
10013fe8:	d8c01204 	addi	r3,sp,72
10013fec:	40800204 	addi	r2,r8,8
10013ff0:	d9000504 	addi	r4,sp,20
10013ff4:	d9400215 	stw	r5,8(sp)
10013ff8:	d8c00d15 	stw	r3,52(sp)
10013ffc:	dfc01315 	stw	ra,76(sp)
10014000:	d9c00b15 	stw	r7,44(sp)
10014004:	d9800315 	stw	r6,12(sp)
10014008:	da000015 	stw	r8,0(sp)
1001400c:	d8800415 	stw	r2,16(sp)
10014010:	df001215 	stw	fp,72(sp)
10014014:	dec00f15 	stw	sp,60(sp)
10014018:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1001401c:	d9000217 	ldw	r4,8(sp)
10014020:	00178f00 	call	100178f0 <strlen>
10014024:	1009883a 	mov	r4,r2
10014028:	d8c00017 	ldw	r3,0(sp)
1001402c:	d8800417 	ldw	r2,16(sp)
10014030:	d9000115 	stw	r4,4(sp)
10014034:	18000115 	stw	zero,4(r3)
10014038:	18800015 	stw	r2,0(r3)
1001403c:	d8800317 	ldw	r2,12(sp)
10014040:	18000205 	stb	zero,8(r3)
10014044:	11400117 	ldw	r5,4(r2)
10014048:	00800044 	movi	r2,1
1001404c:	d8800615 	stw	r2,24(sp)
10014050:	214b883a 	add	r5,r4,r5
10014054:	1809883a 	mov	r4,r3
10014058:	0011b540 	call	10011b54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
1001405c:	d8c00017 	ldw	r3,0(sp)
10014060:	00a00034 	movhi	r2,32768
10014064:	d9000117 	ldw	r4,4(sp)
10014068:	18c00117 	ldw	r3,4(r3)
1001406c:	10bfffc4 	addi	r2,r2,-1
10014070:	10c5c83a 	sub	r2,r2,r3
10014074:	11001236 	bltu	r2,r4,100140c0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x100>
10014078:	d9800117 	ldw	r6,4(sp)
1001407c:	d9400217 	ldw	r5,8(sp)
10014080:	d9000017 	ldw	r4,0(sp)
10014084:	00800044 	movi	r2,1
10014088:	d8800615 	stw	r2,24(sp)
1001408c:	00130d00 	call	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10014090:	d8800317 	ldw	r2,12(sp)
10014094:	d9000017 	ldw	r4,0(sp)
10014098:	11800117 	ldw	r6,4(r2)
1001409c:	11400017 	ldw	r5,0(r2)
100140a0:	00130d00 	call	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100140a4:	d9000504 	addi	r4,sp,20
100140a8:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100140ac:	d8800017 	ldw	r2,0(sp)
100140b0:	dfc01317 	ldw	ra,76(sp)
100140b4:	df001217 	ldw	fp,72(sp)
100140b8:	dec01404 	addi	sp,sp,80
100140bc:	f800283a 	ret
100140c0:	010400b4 	movhi	r4,4098
100140c4:	21183d04 	addi	r4,r4,24820
100140c8:	000aa2c0 	call	1000aa2c <_ZSt20__throw_length_errorPKc>
100140cc:	d8c00717 	ldw	r3,28(sp)
100140d0:	d8800017 	ldw	r2,0(sp)
100140d4:	d8c00115 	stw	r3,4(sp)
100140d8:	10800017 	ldw	r2,0(r2)
100140dc:	d8c00417 	ldw	r3,16(sp)
100140e0:	18800326 	beq	r3,r2,100140f0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x130>
100140e4:	d8800017 	ldw	r2,0(sp)
100140e8:	11000017 	ldw	r4,0(r2)
100140ec:	0008e3c0 	call	10008e3c <_ZdlPv>
100140f0:	d9000117 	ldw	r4,4(sp)
100140f4:	00bfffc4 	movi	r2,-1
100140f8:	d8800615 	stw	r2,24(sp)
100140fc:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

10014100 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_>:
10014100:	00c400b4 	movhi	r3,4098
10014104:	00840074 	movhi	r2,4097
10014108:	deffec04 	addi	sp,sp,-80
1001410c:	2011883a 	mov	r8,r4
10014110:	18d3b984 	addi	r3,r3,20198
10014114:	10907704 	addi	r2,r2,16860
10014118:	01c40074 	movhi	r7,4097
1001411c:	39e4f504 	addi	r7,r7,-27692
10014120:	d9000504 	addi	r4,sp,20
10014124:	d8c00c15 	stw	r3,48(sp)
10014128:	d8800e15 	stw	r2,56(sp)
1001412c:	d8c01204 	addi	r3,sp,72
10014130:	40800204 	addi	r2,r8,8
10014134:	d8c00d15 	stw	r3,52(sp)
10014138:	d8800315 	stw	r2,12(sp)
1001413c:	d9400415 	stw	r5,16(sp)
10014140:	dfc01315 	stw	ra,76(sp)
10014144:	df001215 	stw	fp,72(sp)
10014148:	d9c00b15 	stw	r7,44(sp)
1001414c:	dec00f15 	stw	sp,60(sp)
10014150:	da000115 	stw	r8,4(sp)
10014154:	d9800215 	stw	r6,8(sp)
10014158:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
1001415c:	d8c00117 	ldw	r3,4(sp)
10014160:	d9000317 	ldw	r4,12(sp)
10014164:	d8800217 	ldw	r2,8(sp)
10014168:	18000115 	stw	zero,4(r3)
1001416c:	19000015 	stw	r4,0(r3)
10014170:	18000205 	stb	zero,8(r3)
10014174:	11400117 	ldw	r5,4(r2)
10014178:	1809883a 	mov	r4,r3
1001417c:	00800044 	movi	r2,1
10014180:	29400044 	addi	r5,r5,1
10014184:	d8800615 	stw	r2,24(sp)
10014188:	0011b540 	call	10011b54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
1001418c:	d8c00117 	ldw	r3,4(sp)
10014190:	d8800407 	ldb	r2,16(sp)
10014194:	01c00044 	movi	r7,1
10014198:	19400117 	ldw	r5,4(r3)
1001419c:	000d883a 	mov	r6,zero
100141a0:	d8800015 	stw	r2,0(sp)
100141a4:	1809883a 	mov	r4,r3
100141a8:	00121d40 	call	100121d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
100141ac:	d8800217 	ldw	r2,8(sp)
100141b0:	d9000117 	ldw	r4,4(sp)
100141b4:	11800117 	ldw	r6,4(r2)
100141b8:	11400017 	ldw	r5,0(r2)
100141bc:	00130d00 	call	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100141c0:	d9000504 	addi	r4,sp,20
100141c4:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
100141c8:	d8800117 	ldw	r2,4(sp)
100141cc:	dfc01317 	ldw	ra,76(sp)
100141d0:	df001217 	ldw	fp,72(sp)
100141d4:	dec01404 	addi	sp,sp,80
100141d8:	f800283a 	ret
100141dc:	d8c00117 	ldw	r3,4(sp)
100141e0:	d9000717 	ldw	r4,28(sp)
100141e4:	18800017 	ldw	r2,0(r3)
100141e8:	d9000115 	stw	r4,4(sp)
100141ec:	d9000317 	ldw	r4,12(sp)
100141f0:	20800226 	beq	r4,r2,100141fc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_+0xfc>
100141f4:	1009883a 	mov	r4,r2
100141f8:	0008e3c0 	call	10008e3c <_ZdlPv>
100141fc:	d9000117 	ldw	r4,4(sp)
10014200:	00bfffc4 	movi	r2,-1
10014204:	d8800615 	stw	r2,24(sp)
10014208:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1001420c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>:
1001420c:	defffb04 	addi	sp,sp,-20
10014210:	dc000115 	stw	r16,4(sp)
10014214:	3161c83a 	sub	r16,r6,r5
10014218:	dc800315 	stw	r18,12(sp)
1001421c:	dc400215 	stw	r17,8(sp)
10014220:	dfc00415 	stw	ra,16(sp)
10014224:	dc000015 	stw	r16,0(sp)
10014228:	80800430 	cmpltui	r2,r16,16
1001422c:	2825883a 	mov	r18,r5
10014230:	2023883a 	mov	r17,r4
10014234:	10001226 	beq	r2,zero,10014280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x74>
10014238:	80c00058 	cmpnei	r3,r16,1
1001423c:	20800017 	ldw	r2,0(r4)
10014240:	18000d1e 	bne	r3,zero,10014278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x6c>
10014244:	28c00003 	ldbu	r3,0(r5)
10014248:	10c00005 	stb	r3,0(r2)
1001424c:	dc000017 	ldw	r16,0(sp)
10014250:	20800017 	ldw	r2,0(r4)
10014254:	8c000115 	stw	r16,4(r17)
10014258:	1405883a 	add	r2,r2,r16
1001425c:	10000005 	stb	zero,0(r2)
10014260:	dfc00417 	ldw	ra,16(sp)
10014264:	dc800317 	ldw	r18,12(sp)
10014268:	dc400217 	ldw	r17,8(sp)
1001426c:	dc000117 	ldw	r16,4(sp)
10014270:	dec00504 	addi	sp,sp,20
10014274:	f800283a 	ret
10014278:	803ff626 	beq	r16,zero,10014254 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>
1001427c:	00000606 	br	10014298 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x8c>
10014280:	000d883a 	mov	r6,zero
10014284:	d80b883a 	mov	r5,sp
10014288:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
1001428c:	d8c00017 	ldw	r3,0(sp)
10014290:	88800015 	stw	r2,0(r17)
10014294:	88c00215 	stw	r3,8(r17)
10014298:	800d883a 	mov	r6,r16
1001429c:	1009883a 	mov	r4,r2
100142a0:	900b883a 	mov	r5,r18
100142a4:	0016c340 	call	10016c34 <memcpy>
100142a8:	88800017 	ldw	r2,0(r17)
100142ac:	dc000017 	ldw	r16,0(sp)
100142b0:	003fe806 	br	10014254 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>

100142b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_>:
100142b4:	20c00204 	addi	r3,r4,8
100142b8:	000f883a 	mov	r7,zero
100142bc:	20c00015 	stw	r3,0(r4)
100142c0:	001420c1 	jmpi	1001420c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>

100142c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>:
100142c4:	defffb04 	addi	sp,sp,-20
100142c8:	dc000115 	stw	r16,4(sp)
100142cc:	3161c83a 	sub	r16,r6,r5
100142d0:	dc800315 	stw	r18,12(sp)
100142d4:	dc400215 	stw	r17,8(sp)
100142d8:	dfc00415 	stw	ra,16(sp)
100142dc:	dc000015 	stw	r16,0(sp)
100142e0:	80800430 	cmpltui	r2,r16,16
100142e4:	2825883a 	mov	r18,r5
100142e8:	2023883a 	mov	r17,r4
100142ec:	10001226 	beq	r2,zero,10014338 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x74>
100142f0:	80c00058 	cmpnei	r3,r16,1
100142f4:	20800017 	ldw	r2,0(r4)
100142f8:	18000d1e 	bne	r3,zero,10014330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x6c>
100142fc:	28c00003 	ldbu	r3,0(r5)
10014300:	10c00005 	stb	r3,0(r2)
10014304:	dc000017 	ldw	r16,0(sp)
10014308:	20800017 	ldw	r2,0(r4)
1001430c:	8c000115 	stw	r16,4(r17)
10014310:	1405883a 	add	r2,r2,r16
10014314:	10000005 	stb	zero,0(r2)
10014318:	dfc00417 	ldw	ra,16(sp)
1001431c:	dc800317 	ldw	r18,12(sp)
10014320:	dc400217 	ldw	r17,8(sp)
10014324:	dc000117 	ldw	r16,4(sp)
10014328:	dec00504 	addi	sp,sp,20
1001432c:	f800283a 	ret
10014330:	803ff626 	beq	r16,zero,1001430c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>
10014334:	00000606 	br	10014350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x8c>
10014338:	000d883a 	mov	r6,zero
1001433c:	d80b883a 	mov	r5,sp
10014340:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10014344:	d8c00017 	ldw	r3,0(sp)
10014348:	88800015 	stw	r2,0(r17)
1001434c:	88c00215 	stw	r3,8(r17)
10014350:	800d883a 	mov	r6,r16
10014354:	1009883a 	mov	r4,r2
10014358:	900b883a 	mov	r5,r18
1001435c:	0016c340 	call	10016c34 <memcpy>
10014360:	88800017 	ldw	r2,0(r17)
10014364:	dc000017 	ldw	r16,0(sp)
10014368:	003fe806 	br	1001430c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>

1001436c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_>:
1001436c:	20c00204 	addi	r3,r4,8
10014370:	20c00015 	stw	r3,0(r4)
10014374:	28800017 	ldw	r2,0(r5)
10014378:	29800117 	ldw	r6,4(r5)
1001437c:	000f883a 	mov	r7,zero
10014380:	100b883a 	mov	r5,r2
10014384:	118d883a 	add	r6,r2,r6
10014388:	00142c41 	jmpi	100142c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>

1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
1001438c:	defffb04 	addi	sp,sp,-20
10014390:	dc400215 	stw	r17,8(sp)
10014394:	dfc00415 	stw	ra,16(sp)
10014398:	dc800315 	stw	r18,12(sp)
1001439c:	dc000115 	stw	r16,4(sp)
100143a0:	2023883a 	mov	r17,r4
100143a4:	28002226 	beq	r5,zero,10014430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa4>
100143a8:	3161c83a 	sub	r16,r6,r5
100143ac:	dc000015 	stw	r16,0(sp)
100143b0:	80800430 	cmpltui	r2,r16,16
100143b4:	2825883a 	mov	r18,r5
100143b8:	10001026 	beq	r2,zero,100143fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x70>
100143bc:	80c00058 	cmpnei	r3,r16,1
100143c0:	20800017 	ldw	r2,0(r4)
100143c4:	18001e1e 	bne	r3,zero,10014440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xb4>
100143c8:	28c00003 	ldbu	r3,0(r5)
100143cc:	10c00005 	stb	r3,0(r2)
100143d0:	dc000017 	ldw	r16,0(sp)
100143d4:	20800017 	ldw	r2,0(r4)
100143d8:	8c000115 	stw	r16,4(r17)
100143dc:	1405883a 	add	r2,r2,r16
100143e0:	10000005 	stb	zero,0(r2)
100143e4:	dfc00417 	ldw	ra,16(sp)
100143e8:	dc800317 	ldw	r18,12(sp)
100143ec:	dc400217 	ldw	r17,8(sp)
100143f0:	dc000117 	ldw	r16,4(sp)
100143f4:	dec00504 	addi	sp,sp,20
100143f8:	f800283a 	ret
100143fc:	000d883a 	mov	r6,zero
10014400:	d80b883a 	mov	r5,sp
10014404:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10014408:	d8c00017 	ldw	r3,0(sp)
1001440c:	88800015 	stw	r2,0(r17)
10014410:	88c00215 	stw	r3,8(r17)
10014414:	800d883a 	mov	r6,r16
10014418:	1009883a 	mov	r4,r2
1001441c:	900b883a 	mov	r5,r18
10014420:	0016c340 	call	10016c34 <memcpy>
10014424:	88800017 	ldw	r2,0(r17)
10014428:	dc000017 	ldw	r16,0(sp)
1001442c:	003fea06 	br	100143d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10014430:	3000051e 	bne	r6,zero,10014448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xbc>
10014434:	20800017 	ldw	r2,0(r4)
10014438:	0021883a 	mov	r16,zero
1001443c:	003fe606 	br	100143d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10014440:	803fe526 	beq	r16,zero,100143d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10014444:	003ff306 	br	10014414 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x88>
10014448:	010400b4 	movhi	r4,4098
1001444c:	21188704 	addi	r4,r4,25116
10014450:	000a8280 	call	1000a828 <_ZSt19__throw_logic_errorPKc>

10014454 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
10014454:	20c00204 	addi	r3,r4,8
10014458:	20c00015 	stw	r3,0(r4)
1001445c:	28800017 	ldw	r2,0(r5)
10014460:	29800117 	ldw	r6,4(r5)
10014464:	000f883a 	mov	r7,zero
10014468:	100b883a 	mov	r5,r2
1001446c:	118d883a 	add	r6,r2,r6
10014470:	001438c1 	jmpi	1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

10014474 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
10014474:	00c400b4 	movhi	r3,4098
10014478:	00840074 	movhi	r2,4097
1001447c:	deffed04 	addi	sp,sp,-76
10014480:	2011883a 	mov	r8,r4
10014484:	18d3bb04 	addi	r3,r3,20204
10014488:	10914f04 	addi	r2,r2,17724
1001448c:	01c40074 	movhi	r7,4097
10014490:	39e4f504 	addi	r7,r7,-27692
10014494:	d9000404 	addi	r4,sp,16
10014498:	d8c00b15 	stw	r3,44(sp)
1001449c:	d8800d15 	stw	r2,52(sp)
100144a0:	d8c01104 	addi	r3,sp,68
100144a4:	40800204 	addi	r2,r8,8
100144a8:	dfc01215 	stw	ra,72(sp)
100144ac:	d9c00a15 	stw	r7,40(sp)
100144b0:	d8c00c15 	stw	r3,48(sp)
100144b4:	da000015 	stw	r8,0(sp)
100144b8:	d8800115 	stw	r2,4(sp)
100144bc:	d9400215 	stw	r5,8(sp)
100144c0:	d9800315 	stw	r6,12(sp)
100144c4:	df001115 	stw	fp,68(sp)
100144c8:	dec00e15 	stw	sp,56(sp)
100144cc:	0014c540 	call	10014c54 <_Unwind_SjLj_Register>
100144d0:	d8c00017 	ldw	r3,0(sp)
100144d4:	d8800117 	ldw	r2,4(sp)
100144d8:	d9000217 	ldw	r4,8(sp)
100144dc:	000f883a 	mov	r7,zero
100144e0:	18800015 	stw	r2,0(r3)
100144e4:	20800017 	ldw	r2,0(r4)
100144e8:	21800117 	ldw	r6,4(r4)
100144ec:	1809883a 	mov	r4,r3
100144f0:	100b883a 	mov	r5,r2
100144f4:	118d883a 	add	r6,r2,r6
100144f8:	00bfffc4 	movi	r2,-1
100144fc:	d8800515 	stw	r2,20(sp)
10014500:	001438c0 	call	1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
10014504:	00800044 	movi	r2,1
10014508:	d8800515 	stw	r2,20(sp)
1001450c:	d8800317 	ldw	r2,12(sp)
10014510:	d9000017 	ldw	r4,0(sp)
10014514:	11800117 	ldw	r6,4(r2)
10014518:	11400017 	ldw	r5,0(r2)
1001451c:	00130d00 	call	100130d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10014520:	d9000404 	addi	r4,sp,16
10014524:	0014c6c0 	call	10014c6c <_Unwind_SjLj_Unregister>
10014528:	d8800017 	ldw	r2,0(sp)
1001452c:	dfc01217 	ldw	ra,72(sp)
10014530:	df001117 	ldw	fp,68(sp)
10014534:	dec01304 	addi	sp,sp,76
10014538:	f800283a 	ret
1001453c:	d8c00017 	ldw	r3,0(sp)
10014540:	d9000617 	ldw	r4,24(sp)
10014544:	18800017 	ldw	r2,0(r3)
10014548:	d9000015 	stw	r4,0(sp)
1001454c:	d9000117 	ldw	r4,4(sp)
10014550:	20800226 	beq	r4,r2,1001455c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_+0xe8>
10014554:	1009883a 	mov	r4,r2
10014558:	0008e3c0 	call	10008e3c <_ZdlPv>
1001455c:	d9000017 	ldw	r4,0(sp)
10014560:	00bfffc4 	movi	r2,-1
10014564:	d8800515 	stw	r2,20(sp)
10014568:	0014e3c0 	call	10014e3c <_Unwind_SjLj_Resume>

1001456c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
1001456c:	20c00204 	addi	r3,r4,8
10014570:	000f883a 	mov	r7,zero
10014574:	20c00015 	stw	r3,0(r4)
10014578:	001438c1 	jmpi	1001438c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
1001457c:	defffb04 	addi	sp,sp,-20
10014580:	dc400215 	stw	r17,8(sp)
10014584:	dfc00415 	stw	ra,16(sp)
10014588:	dc800315 	stw	r18,12(sp)
1001458c:	dc000115 	stw	r16,4(sp)
10014590:	2023883a 	mov	r17,r4
10014594:	28002226 	beq	r5,zero,10014620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa4>
10014598:	3161c83a 	sub	r16,r6,r5
1001459c:	dc000015 	stw	r16,0(sp)
100145a0:	80800430 	cmpltui	r2,r16,16
100145a4:	2825883a 	mov	r18,r5
100145a8:	10001026 	beq	r2,zero,100145ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x70>
100145ac:	80c00058 	cmpnei	r3,r16,1
100145b0:	20800017 	ldw	r2,0(r4)
100145b4:	18001e1e 	bne	r3,zero,10014630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xb4>
100145b8:	28c00003 	ldbu	r3,0(r5)
100145bc:	10c00005 	stb	r3,0(r2)
100145c0:	dc000017 	ldw	r16,0(sp)
100145c4:	20800017 	ldw	r2,0(r4)
100145c8:	8c000115 	stw	r16,4(r17)
100145cc:	1405883a 	add	r2,r2,r16
100145d0:	10000005 	stb	zero,0(r2)
100145d4:	dfc00417 	ldw	ra,16(sp)
100145d8:	dc800317 	ldw	r18,12(sp)
100145dc:	dc400217 	ldw	r17,8(sp)
100145e0:	dc000117 	ldw	r16,4(sp)
100145e4:	dec00504 	addi	sp,sp,20
100145e8:	f800283a 	ret
100145ec:	000d883a 	mov	r6,zero
100145f0:	d80b883a 	mov	r5,sp
100145f4:	00112940 	call	10011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100145f8:	d8c00017 	ldw	r3,0(sp)
100145fc:	88800015 	stw	r2,0(r17)
10014600:	88c00215 	stw	r3,8(r17)
10014604:	800d883a 	mov	r6,r16
10014608:	1009883a 	mov	r4,r2
1001460c:	900b883a 	mov	r5,r18
10014610:	0016c340 	call	10016c34 <memcpy>
10014614:	88800017 	ldw	r2,0(r17)
10014618:	dc000017 	ldw	r16,0(sp)
1001461c:	003fea06 	br	100145c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10014620:	3000051e 	bne	r6,zero,10014638 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbc>
10014624:	20800017 	ldw	r2,0(r4)
10014628:	0021883a 	mov	r16,zero
1001462c:	003fe606 	br	100145c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10014630:	803fe526 	beq	r16,zero,100145c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10014634:	003ff306 	br	10014604 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x88>
10014638:	010400b4 	movhi	r4,4098
1001463c:	21188704 	addi	r4,r4,25116
10014640:	000a8280 	call	1000a828 <_ZSt19__throw_logic_errorPKc>

10014644 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_>:
10014644:	20c00204 	addi	r3,r4,8
10014648:	20c00015 	stw	r3,0(r4)
1001464c:	28800117 	ldw	r2,4(r5)
10014650:	29400017 	ldw	r5,0(r5)
10014654:	11800536 	bltu	r2,r6,1001466c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_+0x28>
10014658:	3007883a 	mov	r3,r6
1001465c:	000f883a 	mov	r7,zero
10014660:	288d883a 	add	r6,r5,r2
10014664:	28cb883a 	add	r5,r5,r3
10014668:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
1001466c:	014400b4 	movhi	r5,4098
10014670:	010400b4 	movhi	r4,4098
10014674:	deffff04 	addi	sp,sp,-4
10014678:	100f883a 	mov	r7,r2
1001467c:	29585404 	addi	r5,r5,24912
10014680:	2117ee04 	addi	r4,r4,24504
10014684:	dfc00015 	stw	ra,0(sp)
10014688:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1001468c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj>:
1001468c:	20800204 	addi	r2,r4,8
10014690:	20800015 	stw	r2,0(r4)
10014694:	28800117 	ldw	r2,4(r5)
10014698:	29400017 	ldw	r5,0(r5)
1001469c:	11800b36 	bltu	r2,r6,100146cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x40>
100146a0:	3007883a 	mov	r3,r6
100146a4:	118dc83a 	sub	r6,r2,r6
100146a8:	28cb883a 	add	r5,r5,r3
100146ac:	39800336 	bltu	r7,r6,100146bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x30>
100146b0:	000f883a 	mov	r7,zero
100146b4:	298d883a 	add	r6,r5,r6
100146b8:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
100146bc:	380d883a 	mov	r6,r7
100146c0:	298d883a 	add	r6,r5,r6
100146c4:	000f883a 	mov	r7,zero
100146c8:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
100146cc:	014400b4 	movhi	r5,4098
100146d0:	010400b4 	movhi	r4,4098
100146d4:	deffff04 	addi	sp,sp,-4
100146d8:	100f883a 	mov	r7,r2
100146dc:	29585404 	addi	r5,r5,24912
100146e0:	2117ee04 	addi	r4,r4,24504
100146e4:	dfc00015 	stw	ra,0(sp)
100146e8:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

100146ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_>:
100146ec:	20800204 	addi	r2,r4,8
100146f0:	20800015 	stw	r2,0(r4)
100146f4:	28800117 	ldw	r2,4(r5)
100146f8:	29400017 	ldw	r5,0(r5)
100146fc:	11800b36 	bltu	r2,r6,1001472c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x40>
10014700:	3007883a 	mov	r3,r6
10014704:	118dc83a 	sub	r6,r2,r6
10014708:	28cb883a 	add	r5,r5,r3
1001470c:	39800336 	bltu	r7,r6,1001471c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x30>
10014710:	000f883a 	mov	r7,zero
10014714:	298d883a 	add	r6,r5,r6
10014718:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
1001471c:	380d883a 	mov	r6,r7
10014720:	298d883a 	add	r6,r5,r6
10014724:	000f883a 	mov	r7,zero
10014728:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
1001472c:	014400b4 	movhi	r5,4098
10014730:	010400b4 	movhi	r4,4098
10014734:	deffff04 	addi	sp,sp,-4
10014738:	100f883a 	mov	r7,r2
1001473c:	29589204 	addi	r5,r5,25160
10014740:	2117ee04 	addi	r4,r4,24504
10014744:	dfc00015 	stw	ra,0(sp)
10014748:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1001474c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_>:
1001474c:	20c00204 	addi	r3,r4,8
10014750:	000f883a 	mov	r7,zero
10014754:	298d883a 	add	r6,r5,r6
10014758:	20c00015 	stw	r3,0(r4)
1001475c:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10014760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
10014760:	defffd04 	addi	sp,sp,-12
10014764:	dc000115 	stw	r16,4(sp)
10014768:	dfc00215 	stw	ra,8(sp)
1001476c:	20800204 	addi	r2,r4,8
10014770:	20800015 	stw	r2,0(r4)
10014774:	2021883a 	mov	r16,r4
10014778:	28000b26 	beq	r5,zero,100147a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x48>
1001477c:	2809883a 	mov	r4,r5
10014780:	d9400015 	stw	r5,0(sp)
10014784:	00178f00 	call	100178f0 <strlen>
10014788:	d9400017 	ldw	r5,0(sp)
1001478c:	288d883a 	add	r6,r5,r2
10014790:	000f883a 	mov	r7,zero
10014794:	8009883a 	mov	r4,r16
10014798:	dfc00217 	ldw	ra,8(sp)
1001479c:	dc000117 	ldw	r16,4(sp)
100147a0:	dec00304 	addi	sp,sp,12
100147a4:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
100147a8:	01bfffc4 	movi	r6,-1
100147ac:	003ff806 	br	10014790 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x30>

100147b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_>:
100147b0:	20c00204 	addi	r3,r4,8
100147b4:	000f883a 	mov	r7,zero
100147b8:	298d883a 	add	r6,r5,r6
100147bc:	20c00015 	stw	r3,0(r4)
100147c0:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

100147c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_>:
100147c4:	20c00204 	addi	r3,r4,8
100147c8:	000f883a 	mov	r7,zero
100147cc:	20c00015 	stw	r3,0(r4)
100147d0:	001457c1 	jmpi	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

100147d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj>:
100147d4:	defffe04 	addi	sp,sp,-8
100147d8:	dfc00115 	stw	ra,4(sp)
100147dc:	dc000015 	stw	r16,0(sp)
100147e0:	28800117 	ldw	r2,4(r5)
100147e4:	11801b36 	bltu	r2,r6,10014854 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x80>
100147e8:	20800204 	addi	r2,r4,8
100147ec:	20800015 	stw	r2,0(r4)
100147f0:	28c00117 	ldw	r3,4(r5)
100147f4:	3011883a 	mov	r8,r6
100147f8:	2021883a 	mov	r16,r4
100147fc:	29400017 	ldw	r5,0(r5)
10014800:	19800e36 	bltu	r3,r6,1001483c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x68>
10014804:	198dc83a 	sub	r6,r3,r6
10014808:	2a0b883a 	add	r5,r5,r8
1001480c:	39800936 	bltu	r7,r6,10014834 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x60>
10014810:	000f883a 	mov	r7,zero
10014814:	298d883a 	add	r6,r5,r6
10014818:	8009883a 	mov	r4,r16
1001481c:	001457c0 	call	1001457c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10014820:	8005883a 	mov	r2,r16
10014824:	dfc00117 	ldw	ra,4(sp)
10014828:	dc000017 	ldw	r16,0(sp)
1001482c:	dec00204 	addi	sp,sp,8
10014830:	f800283a 	ret
10014834:	380d883a 	mov	r6,r7
10014838:	003ff506 	br	10014810 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x3c>
1001483c:	014400b4 	movhi	r5,4098
10014840:	010400b4 	movhi	r4,4098
10014844:	180f883a 	mov	r7,r3
10014848:	29585404 	addi	r5,r5,24912
1001484c:	2117ee04 	addi	r4,r4,24504
10014850:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>
10014854:	014400b4 	movhi	r5,4098
10014858:	010400b4 	movhi	r4,4098
1001485c:	100f883a 	mov	r7,r2
10014860:	29585b04 	addi	r5,r5,24940
10014864:	2117ee04 	addi	r4,r4,24504
10014868:	000ab840 	call	1000ab84 <_ZSt24__throw_out_of_range_fmtPKcz>

1001486c <_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
1001486c:	20800017 	ldw	r2,0(r4)
10014870:	28c00017 	ldw	r3,0(r5)
10014874:	10c5003a 	cmpeq	r2,r2,r3
10014878:	f800283a 	ret

1001487c <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_>:
1001487c:	20800017 	ldw	r2,0(r4)
10014880:	28c00017 	ldw	r3,0(r5)
10014884:	10c5003a 	cmpeq	r2,r2,r3
10014888:	f800283a 	ret

1001488c <__divsi3>:
1001488c:	20001a16 	blt	r4,zero,100148f8 <__divsi3+0x6c>
10014890:	000f883a 	mov	r7,zero
10014894:	2800020e 	bge	r5,zero,100148a0 <__divsi3+0x14>
10014898:	014bc83a 	sub	r5,zero,r5
1001489c:	39c0005c 	xori	r7,r7,1
100148a0:	200d883a 	mov	r6,r4
100148a4:	00c00044 	movi	r3,1
100148a8:	2900092e 	bgeu	r5,r4,100148d0 <__divsi3+0x44>
100148ac:	00800804 	movi	r2,32
100148b0:	00c00044 	movi	r3,1
100148b4:	00000106 	br	100148bc <__divsi3+0x30>
100148b8:	10001226 	beq	r2,zero,10014904 <__divsi3+0x78>
100148bc:	294b883a 	add	r5,r5,r5
100148c0:	10bfffc4 	addi	r2,r2,-1
100148c4:	18c7883a 	add	r3,r3,r3
100148c8:	293ffb36 	bltu	r5,r4,100148b8 <__divsi3+0x2c>
100148cc:	18000d26 	beq	r3,zero,10014904 <__divsi3+0x78>
100148d0:	0005883a 	mov	r2,zero
100148d4:	31400236 	bltu	r6,r5,100148e0 <__divsi3+0x54>
100148d8:	314dc83a 	sub	r6,r6,r5
100148dc:	10c4b03a 	or	r2,r2,r3
100148e0:	1806d07a 	srli	r3,r3,1
100148e4:	280ad07a 	srli	r5,r5,1
100148e8:	183ffa1e 	bne	r3,zero,100148d4 <__divsi3+0x48>
100148ec:	38000126 	beq	r7,zero,100148f4 <__divsi3+0x68>
100148f0:	0085c83a 	sub	r2,zero,r2
100148f4:	f800283a 	ret
100148f8:	0109c83a 	sub	r4,zero,r4
100148fc:	01c00044 	movi	r7,1
10014900:	003fe406 	br	10014894 <__divsi3+0x8>
10014904:	0005883a 	mov	r2,zero
10014908:	003ff806 	br	100148ec <__divsi3+0x60>

1001490c <__modsi3>:
1001490c:	20001a16 	blt	r4,zero,10014978 <__modsi3+0x6c>
10014910:	000f883a 	mov	r7,zero
10014914:	2005883a 	mov	r2,r4
10014918:	2800010e 	bge	r5,zero,10014920 <__modsi3+0x14>
1001491c:	014bc83a 	sub	r5,zero,r5
10014920:	00c00044 	movi	r3,1
10014924:	2900092e 	bgeu	r5,r4,1001494c <__modsi3+0x40>
10014928:	01800804 	movi	r6,32
1001492c:	00c00044 	movi	r3,1
10014930:	00000106 	br	10014938 <__modsi3+0x2c>
10014934:	30000d26 	beq	r6,zero,1001496c <__modsi3+0x60>
10014938:	294b883a 	add	r5,r5,r5
1001493c:	31bfffc4 	addi	r6,r6,-1
10014940:	18c7883a 	add	r3,r3,r3
10014944:	293ffb36 	bltu	r5,r4,10014934 <__modsi3+0x28>
10014948:	18000826 	beq	r3,zero,1001496c <__modsi3+0x60>
1001494c:	1806d07a 	srli	r3,r3,1
10014950:	11400136 	bltu	r2,r5,10014958 <__modsi3+0x4c>
10014954:	1145c83a 	sub	r2,r2,r5
10014958:	280ad07a 	srli	r5,r5,1
1001495c:	183ffb1e 	bne	r3,zero,1001494c <__modsi3+0x40>
10014960:	38000126 	beq	r7,zero,10014968 <__modsi3+0x5c>
10014964:	0085c83a 	sub	r2,zero,r2
10014968:	f800283a 	ret
1001496c:	2005883a 	mov	r2,r4
10014970:	383ffd26 	beq	r7,zero,10014968 <__modsi3+0x5c>
10014974:	003ffb06 	br	10014964 <__modsi3+0x58>
10014978:	0109c83a 	sub	r4,zero,r4
1001497c:	01c00044 	movi	r7,1
10014980:	003fe406 	br	10014914 <__modsi3+0x8>

10014984 <__udivsi3>:
10014984:	200d883a 	mov	r6,r4
10014988:	2900152e 	bgeu	r5,r4,100149e0 <__udivsi3+0x5c>
1001498c:	28001416 	blt	r5,zero,100149e0 <__udivsi3+0x5c>
10014990:	00800804 	movi	r2,32
10014994:	00c00044 	movi	r3,1
10014998:	00000206 	br	100149a4 <__udivsi3+0x20>
1001499c:	10000e26 	beq	r2,zero,100149d8 <__udivsi3+0x54>
100149a0:	28000516 	blt	r5,zero,100149b8 <__udivsi3+0x34>
100149a4:	294b883a 	add	r5,r5,r5
100149a8:	10bfffc4 	addi	r2,r2,-1
100149ac:	18c7883a 	add	r3,r3,r3
100149b0:	293ffa36 	bltu	r5,r4,1001499c <__udivsi3+0x18>
100149b4:	18000826 	beq	r3,zero,100149d8 <__udivsi3+0x54>
100149b8:	0005883a 	mov	r2,zero
100149bc:	31400236 	bltu	r6,r5,100149c8 <__udivsi3+0x44>
100149c0:	314dc83a 	sub	r6,r6,r5
100149c4:	10c4b03a 	or	r2,r2,r3
100149c8:	1806d07a 	srli	r3,r3,1
100149cc:	280ad07a 	srli	r5,r5,1
100149d0:	183ffa1e 	bne	r3,zero,100149bc <__udivsi3+0x38>
100149d4:	f800283a 	ret
100149d8:	0005883a 	mov	r2,zero
100149dc:	f800283a 	ret
100149e0:	00c00044 	movi	r3,1
100149e4:	003ff406 	br	100149b8 <__udivsi3+0x34>

100149e8 <__umodsi3>:
100149e8:	2005883a 	mov	r2,r4
100149ec:	2900132e 	bgeu	r5,r4,10014a3c <__umodsi3+0x54>
100149f0:	28001216 	blt	r5,zero,10014a3c <__umodsi3+0x54>
100149f4:	01800804 	movi	r6,32
100149f8:	00c00044 	movi	r3,1
100149fc:	00000206 	br	10014a08 <__umodsi3+0x20>
10014a00:	30000c26 	beq	r6,zero,10014a34 <__umodsi3+0x4c>
10014a04:	28000516 	blt	r5,zero,10014a1c <__umodsi3+0x34>
10014a08:	294b883a 	add	r5,r5,r5
10014a0c:	31bfffc4 	addi	r6,r6,-1
10014a10:	18c7883a 	add	r3,r3,r3
10014a14:	293ffa36 	bltu	r5,r4,10014a00 <__umodsi3+0x18>
10014a18:	18000626 	beq	r3,zero,10014a34 <__umodsi3+0x4c>
10014a1c:	1806d07a 	srli	r3,r3,1
10014a20:	11400136 	bltu	r2,r5,10014a28 <__umodsi3+0x40>
10014a24:	1145c83a 	sub	r2,r2,r5
10014a28:	280ad07a 	srli	r5,r5,1
10014a2c:	183ffb1e 	bne	r3,zero,10014a1c <__umodsi3+0x34>
10014a30:	f800283a 	ret
10014a34:	2005883a 	mov	r2,r4
10014a38:	f800283a 	ret
10014a3c:	00c00044 	movi	r3,1
10014a40:	003ff606 	br	10014a1c <__umodsi3+0x34>

10014a44 <_Unwind_ForcedUnwind_Phase2>:
10014a44:	28800017 	ldw	r2,0(r5)
10014a48:	defff504 	addi	sp,sp,-44
10014a4c:	dd400815 	stw	r21,32(sp)
10014a50:	dd000715 	stw	r20,28(sp)
10014a54:	dcc00615 	stw	r19,24(sp)
10014a58:	dc800515 	stw	r18,20(sp)
10014a5c:	dc400415 	stw	r17,16(sp)
10014a60:	dc000315 	stw	r16,12(sp)
10014a64:	dfc00a15 	stw	ra,40(sp)
10014a68:	dd800915 	stw	r22,36(sp)
10014a6c:	302b883a 	mov	r21,r6
10014a70:	2823883a 	mov	r17,r5
10014a74:	2021883a 	mov	r16,r4
10014a78:	24c00317 	ldw	r19,12(r4)
10014a7c:	25000417 	ldw	r20,16(r4)
10014a80:	21800017 	ldw	r6,0(r4)
10014a84:	21c00117 	ldw	r7,4(r4)
10014a88:	04800044 	movi	r18,1
10014a8c:	10001d26 	beq	r2,zero,10014b04 <_Unwind_ForcedUnwind_Phase2+0xc0>
10014a90:	15800617 	ldw	r22,24(r2)
10014a94:	01400284 	movi	r5,10
10014a98:	01000044 	movi	r4,1
10014a9c:	dd000215 	stw	r20,8(sp)
10014aa0:	dc400115 	stw	r17,4(sp)
10014aa4:	dc000015 	stw	r16,0(sp)
10014aa8:	983ee83a 	callr	r19
10014aac:	01400284 	movi	r5,10
10014ab0:	01000044 	movi	r4,1
10014ab4:	10001a1e 	bne	r2,zero,10014b20 <_Unwind_ForcedUnwind_Phase2+0xdc>
10014ab8:	81800017 	ldw	r6,0(r16)
10014abc:	81c00117 	ldw	r7,4(r16)
10014ac0:	b0000926 	beq	r22,zero,10014ae8 <_Unwind_ForcedUnwind_Phase2+0xa4>
10014ac4:	dc400115 	stw	r17,4(sp)
10014ac8:	dc000015 	stw	r16,0(sp)
10014acc:	b03ee83a 	callr	r22
10014ad0:	10c001e0 	cmpeqi	r3,r2,7
10014ad4:	11000218 	cmpnei	r4,r2,8
10014ad8:	18001d1e 	bne	r3,zero,10014b50 <_Unwind_ForcedUnwind_Phase2+0x10c>
10014adc:	2000101e 	bne	r4,zero,10014b20 <_Unwind_ForcedUnwind_Phase2+0xdc>
10014ae0:	81800017 	ldw	r6,0(r16)
10014ae4:	81c00117 	ldw	r7,4(r16)
10014ae8:	88800017 	ldw	r2,0(r17)
10014aec:	00c400f4 	movhi	r3,4099
10014af0:	94800044 	addi	r18,r18,1
10014af4:	10800017 	ldw	r2,0(r2)
10014af8:	18a95a15 	stw	r2,-23192(r3)
10014afc:	88800015 	stw	r2,0(r17)
10014b00:	103fe31e 	bne	r2,zero,10014a90 <_Unwind_ForcedUnwind_Phase2+0x4c>
10014b04:	dd000215 	stw	r20,8(sp)
10014b08:	dc400115 	stw	r17,4(sp)
10014b0c:	dc000015 	stw	r16,0(sp)
10014b10:	01400684 	movi	r5,26
10014b14:	01000044 	movi	r4,1
10014b18:	983ee83a 	callr	r19
10014b1c:	10000b26 	beq	r2,zero,10014b4c <_Unwind_ForcedUnwind_Phase2+0x108>
10014b20:	00800084 	movi	r2,2
10014b24:	dfc00a17 	ldw	ra,40(sp)
10014b28:	dd800917 	ldw	r22,36(sp)
10014b2c:	dd400817 	ldw	r21,32(sp)
10014b30:	dd000717 	ldw	r20,28(sp)
10014b34:	dcc00617 	ldw	r19,24(sp)
10014b38:	dc800517 	ldw	r18,20(sp)
10014b3c:	dc400417 	ldw	r17,16(sp)
10014b40:	dc000317 	ldw	r16,12(sp)
10014b44:	dec00b04 	addi	sp,sp,44
10014b48:	f800283a 	ret
10014b4c:	00800144 	movi	r2,5
10014b50:	ac800015 	stw	r18,0(r21)
10014b54:	003ff306 	br	10014b24 <_Unwind_ForcedUnwind_Phase2+0xe0>

10014b58 <_Unwind_RaiseException_Phase2>:
10014b58:	28800017 	ldw	r2,0(r5)
10014b5c:	10002f26 	beq	r2,zero,10014c1c <_Unwind_RaiseException_Phase2+0xc4>
10014b60:	defff804 	addi	sp,sp,-32
10014b64:	dcc00515 	stw	r19,20(sp)
10014b68:	dc800415 	stw	r18,16(sp)
10014b6c:	dc400315 	stw	r17,12(sp)
10014b70:	dc000215 	stw	r16,8(sp)
10014b74:	dfc00715 	stw	ra,28(sp)
10014b78:	dd000615 	stw	r20,24(sp)
10014b7c:	3025883a 	mov	r18,r6
10014b80:	2021883a 	mov	r16,r4
10014b84:	2823883a 	mov	r17,r5
10014b88:	04c00044 	movi	r19,1
10014b8c:	00001306 	br	10014bdc <_Unwind_RaiseException_Phase2+0x84>
10014b90:	18000e26 	beq	r3,zero,10014bcc <_Unwind_RaiseException_Phase2+0x74>
10014b94:	01400084 	movi	r5,2
10014b98:	0029883a 	mov	r20,zero
10014b9c:	81800017 	ldw	r6,0(r16)
10014ba0:	81c00117 	ldw	r7,4(r16)
10014ba4:	01000044 	movi	r4,1
10014ba8:	dc400115 	stw	r17,4(sp)
10014bac:	dc000015 	stw	r16,0(sp)
10014bb0:	183ee83a 	callr	r3
10014bb4:	10c001e0 	cmpeqi	r3,r2,7
10014bb8:	18001a1e 	bne	r3,zero,10014c24 <_Unwind_RaiseException_Phase2+0xcc>
10014bbc:	10800218 	cmpnei	r2,r2,8
10014bc0:	10000d1e 	bne	r2,zero,10014bf8 <_Unwind_RaiseException_Phase2+0xa0>
10014bc4:	a000191e 	bne	r20,zero,10014c2c <_Unwind_RaiseException_Phase2+0xd4>
10014bc8:	88800017 	ldw	r2,0(r17)
10014bcc:	10800017 	ldw	r2,0(r2)
10014bd0:	9cc00044 	addi	r19,r19,1
10014bd4:	88800015 	stw	r2,0(r17)
10014bd8:	10000726 	beq	r2,zero,10014bf8 <_Unwind_RaiseException_Phase2+0xa0>
10014bdc:	81000417 	ldw	r4,16(r16)
10014be0:	10c00617 	ldw	r3,24(r2)
10014be4:	113fea1e 	bne	r2,r4,10014b90 <_Unwind_RaiseException_Phase2+0x38>
10014be8:	18001026 	beq	r3,zero,10014c2c <_Unwind_RaiseException_Phase2+0xd4>
10014bec:	01400184 	movi	r5,6
10014bf0:	05000104 	movi	r20,4
10014bf4:	003fe906 	br	10014b9c <_Unwind_RaiseException_Phase2+0x44>
10014bf8:	00800084 	movi	r2,2
10014bfc:	dfc00717 	ldw	ra,28(sp)
10014c00:	dd000617 	ldw	r20,24(sp)
10014c04:	dcc00517 	ldw	r19,20(sp)
10014c08:	dc800417 	ldw	r18,16(sp)
10014c0c:	dc400317 	ldw	r17,12(sp)
10014c10:	dc000217 	ldw	r16,8(sp)
10014c14:	dec00804 	addi	sp,sp,32
10014c18:	f800283a 	ret
10014c1c:	00800084 	movi	r2,2
10014c20:	f800283a 	ret
10014c24:	94c00015 	stw	r19,0(r18)
10014c28:	003ff406 	br	10014bfc <_Unwind_RaiseException_Phase2+0xa4>
10014c2c:	0014f6c0 	call	10014f6c <abort>

10014c30 <uw_install_context.isra.4>:
10014c30:	20c00917 	ldw	r3,36(r4)
10014c34:	deffff04 	addi	sp,sp,-4
10014c38:	df000015 	stw	fp,0(sp)
10014c3c:	014400f4 	movhi	r5,4099
10014c40:	d839883a 	mov	fp,sp
10014c44:	29295a15 	stw	r4,-23192(r5)
10014c48:	27000817 	ldw	fp,32(r4)
10014c4c:	26c00a17 	ldw	sp,40(r4)
10014c50:	1800683a 	jmp	r3

10014c54 <_Unwind_SjLj_Register>:
10014c54:	008400f4 	movhi	r2,4099
10014c58:	10a95a17 	ldw	r2,-23192(r2)
10014c5c:	20800015 	stw	r2,0(r4)
10014c60:	008400f4 	movhi	r2,4099
10014c64:	11295a15 	stw	r4,-23192(r2)
10014c68:	f800283a 	ret

10014c6c <_Unwind_SjLj_Unregister>:
10014c6c:	20c00017 	ldw	r3,0(r4)
10014c70:	008400f4 	movhi	r2,4099
10014c74:	10e95a15 	stw	r3,-23192(r2)
10014c78:	f800283a 	ret

10014c7c <_Unwind_GetGR>:
10014c7c:	29400084 	addi	r5,r5,2
10014c80:	20800017 	ldw	r2,0(r4)
10014c84:	280a90ba 	slli	r5,r5,2
10014c88:	1145883a 	add	r2,r2,r5
10014c8c:	10800017 	ldw	r2,0(r2)
10014c90:	f800283a 	ret

10014c94 <_Unwind_GetCFA>:
10014c94:	20800017 	ldw	r2,0(r4)
10014c98:	10000226 	beq	r2,zero,10014ca4 <_Unwind_GetCFA+0x10>
10014c9c:	10800a17 	ldw	r2,40(r2)
10014ca0:	f800283a 	ret
10014ca4:	0005883a 	mov	r2,zero
10014ca8:	f800283a 	ret

10014cac <_Unwind_SetGR>:
10014cac:	29400084 	addi	r5,r5,2
10014cb0:	20800017 	ldw	r2,0(r4)
10014cb4:	280a90ba 	slli	r5,r5,2
10014cb8:	1145883a 	add	r2,r2,r5
10014cbc:	11800015 	stw	r6,0(r2)
10014cc0:	f800283a 	ret

10014cc4 <_Unwind_GetIP>:
10014cc4:	20800017 	ldw	r2,0(r4)
10014cc8:	10800117 	ldw	r2,4(r2)
10014ccc:	10800044 	addi	r2,r2,1
10014cd0:	f800283a 	ret

10014cd4 <_Unwind_GetIPInfo>:
10014cd4:	20800017 	ldw	r2,0(r4)
10014cd8:	28000015 	stw	zero,0(r5)
10014cdc:	10000326 	beq	r2,zero,10014cec <_Unwind_GetIPInfo+0x18>
10014ce0:	10800117 	ldw	r2,4(r2)
10014ce4:	10800044 	addi	r2,r2,1
10014ce8:	f800283a 	ret
10014cec:	0005883a 	mov	r2,zero
10014cf0:	f800283a 	ret

10014cf4 <_Unwind_SetIP>:
10014cf4:	20800017 	ldw	r2,0(r4)
10014cf8:	297fffc4 	addi	r5,r5,-1
10014cfc:	11400115 	stw	r5,4(r2)
10014d00:	f800283a 	ret

10014d04 <_Unwind_GetLanguageSpecificData>:
10014d04:	20800017 	ldw	r2,0(r4)
10014d08:	10800717 	ldw	r2,28(r2)
10014d0c:	f800283a 	ret

10014d10 <_Unwind_GetRegionStart>:
10014d10:	0005883a 	mov	r2,zero
10014d14:	f800283a 	ret

10014d18 <_Unwind_FindEnclosingFunction>:
10014d18:	0005883a 	mov	r2,zero
10014d1c:	f800283a 	ret

10014d20 <_Unwind_GetDataRelBase>:
10014d20:	0005883a 	mov	r2,zero
10014d24:	f800283a 	ret

10014d28 <_Unwind_GetTextRelBase>:
10014d28:	0005883a 	mov	r2,zero
10014d2c:	f800283a 	ret

10014d30 <_Unwind_SjLj_RaiseException>:
10014d30:	defff804 	addi	sp,sp,-32
10014d34:	008400f4 	movhi	r2,4099
10014d38:	dc400515 	stw	r17,20(sp)
10014d3c:	14695a17 	ldw	r17,-23192(r2)
10014d40:	dfc00715 	stw	ra,28(sp)
10014d44:	dc800615 	stw	r18,24(sp)
10014d48:	dc000415 	stw	r16,16(sp)
10014d4c:	dc400215 	stw	r17,8(sp)
10014d50:	88001426 	beq	r17,zero,10014da4 <_Unwind_SjLj_RaiseException+0x74>
10014d54:	2021883a 	mov	r16,r4
10014d58:	8805883a 	mov	r2,r17
10014d5c:	dc800204 	addi	r18,sp,8
10014d60:	10800617 	ldw	r2,24(r2)
10014d64:	10000b26 	beq	r2,zero,10014d94 <_Unwind_SjLj_RaiseException+0x64>
10014d68:	81800017 	ldw	r6,0(r16)
10014d6c:	81c00117 	ldw	r7,4(r16)
10014d70:	01400044 	movi	r5,1
10014d74:	dc800115 	stw	r18,4(sp)
10014d78:	dc000015 	stw	r16,0(sp)
10014d7c:	01000044 	movi	r4,1
10014d80:	103ee83a 	callr	r2
10014d84:	10c001a0 	cmpeqi	r3,r2,6
10014d88:	18000d1e 	bne	r3,zero,10014dc0 <_Unwind_SjLj_RaiseException+0x90>
10014d8c:	10800218 	cmpnei	r2,r2,8
10014d90:	1000171e 	bne	r2,zero,10014df0 <_Unwind_SjLj_RaiseException+0xc0>
10014d94:	d8800217 	ldw	r2,8(sp)
10014d98:	10800017 	ldw	r2,0(r2)
10014d9c:	d8800215 	stw	r2,8(sp)
10014da0:	103fef1e 	bne	r2,zero,10014d60 <_Unwind_SjLj_RaiseException+0x30>
10014da4:	00800144 	movi	r2,5
10014da8:	dfc00717 	ldw	ra,28(sp)
10014dac:	dc800617 	ldw	r18,24(sp)
10014db0:	dc400517 	ldw	r17,20(sp)
10014db4:	dc000417 	ldw	r16,16(sp)
10014db8:	dec00804 	addi	sp,sp,32
10014dbc:	f800283a 	ret
10014dc0:	d8800217 	ldw	r2,8(sp)
10014dc4:	80000315 	stw	zero,12(r16)
10014dc8:	d9800304 	addi	r6,sp,12
10014dcc:	80800415 	stw	r2,16(r16)
10014dd0:	900b883a 	mov	r5,r18
10014dd4:	8009883a 	mov	r4,r16
10014dd8:	dc400215 	stw	r17,8(sp)
10014ddc:	0014b580 	call	10014b58 <_Unwind_RaiseException_Phase2>
10014de0:	10c001d8 	cmpnei	r3,r2,7
10014de4:	183ff01e 	bne	r3,zero,10014da8 <_Unwind_SjLj_RaiseException+0x78>
10014de8:	d9000217 	ldw	r4,8(sp)
10014dec:	0014c300 	call	10014c30 <uw_install_context.isra.4>
10014df0:	008000c4 	movi	r2,3
10014df4:	003fec06 	br	10014da8 <_Unwind_SjLj_RaiseException+0x78>

10014df8 <_Unwind_SjLj_ForcedUnwind>:
10014df8:	008400f4 	movhi	r2,4099
10014dfc:	defffd04 	addi	sp,sp,-12
10014e00:	10e95a17 	ldw	r3,-23192(r2)
10014e04:	dfc00215 	stw	ra,8(sp)
10014e08:	21400315 	stw	r5,12(r4)
10014e0c:	21800415 	stw	r6,16(r4)
10014e10:	d80b883a 	mov	r5,sp
10014e14:	d9800104 	addi	r6,sp,4
10014e18:	d8c00015 	stw	r3,0(sp)
10014e1c:	0014a440 	call	10014a44 <_Unwind_ForcedUnwind_Phase2>
10014e20:	10c001e0 	cmpeqi	r3,r2,7
10014e24:	1800031e 	bne	r3,zero,10014e34 <_Unwind_SjLj_ForcedUnwind+0x3c>
10014e28:	dfc00217 	ldw	ra,8(sp)
10014e2c:	dec00304 	addi	sp,sp,12
10014e30:	f800283a 	ret
10014e34:	d9000017 	ldw	r4,0(sp)
10014e38:	0014c300 	call	10014c30 <uw_install_context.isra.4>

10014e3c <_Unwind_SjLj_Resume>:
10014e3c:	008400f4 	movhi	r2,4099
10014e40:	10e95a17 	ldw	r3,-23192(r2)
10014e44:	20800317 	ldw	r2,12(r4)
10014e48:	defffd04 	addi	sp,sp,-12
10014e4c:	dfc00215 	stw	ra,8(sp)
10014e50:	d8c00015 	stw	r3,0(sp)
10014e54:	d9800104 	addi	r6,sp,4
10014e58:	d80b883a 	mov	r5,sp
10014e5c:	1000051e 	bne	r2,zero,10014e74 <_Unwind_SjLj_Resume+0x38>
10014e60:	0014b580 	call	10014b58 <_Unwind_RaiseException_Phase2>
10014e64:	108001e0 	cmpeqi	r2,r2,7
10014e68:	10000426 	beq	r2,zero,10014e7c <_Unwind_SjLj_Resume+0x40>
10014e6c:	d9000017 	ldw	r4,0(sp)
10014e70:	0014c300 	call	10014c30 <uw_install_context.isra.4>
10014e74:	0014a440 	call	10014a44 <_Unwind_ForcedUnwind_Phase2>
10014e78:	003ffa06 	br	10014e64 <_Unwind_SjLj_Resume+0x28>
10014e7c:	0014f6c0 	call	10014f6c <abort>

10014e80 <_Unwind_SjLj_Resume_or_Rethrow>:
10014e80:	20800317 	ldw	r2,12(r4)
10014e84:	defffd04 	addi	sp,sp,-12
10014e88:	dfc00215 	stw	ra,8(sp)
10014e8c:	10000a26 	beq	r2,zero,10014eb8 <_Unwind_SjLj_Resume_or_Rethrow+0x38>
10014e90:	008400f4 	movhi	r2,4099
10014e94:	10a95a17 	ldw	r2,-23192(r2)
10014e98:	d9800104 	addi	r6,sp,4
10014e9c:	d80b883a 	mov	r5,sp
10014ea0:	d8800015 	stw	r2,0(sp)
10014ea4:	0014a440 	call	10014a44 <_Unwind_ForcedUnwind_Phase2>
10014ea8:	108001e0 	cmpeqi	r2,r2,7
10014eac:	10000626 	beq	r2,zero,10014ec8 <_Unwind_SjLj_Resume_or_Rethrow+0x48>
10014eb0:	d9000017 	ldw	r4,0(sp)
10014eb4:	0014c300 	call	10014c30 <uw_install_context.isra.4>
10014eb8:	0014d300 	call	10014d30 <_Unwind_SjLj_RaiseException>
10014ebc:	dfc00217 	ldw	ra,8(sp)
10014ec0:	dec00304 	addi	sp,sp,12
10014ec4:	f800283a 	ret
10014ec8:	0014f6c0 	call	10014f6c <abort>

10014ecc <_Unwind_DeleteException>:
10014ecc:	20800217 	ldw	r2,8(r4)
10014ed0:	10000326 	beq	r2,zero,10014ee0 <_Unwind_DeleteException+0x14>
10014ed4:	200b883a 	mov	r5,r4
10014ed8:	01000044 	movi	r4,1
10014edc:	1000683a 	jmp	r2
10014ee0:	f800283a 	ret

10014ee4 <_Unwind_Backtrace>:
10014ee4:	008400f4 	movhi	r2,4099
10014ee8:	10a95a17 	ldw	r2,-23192(r2)
10014eec:	defffb04 	addi	sp,sp,-20
10014ef0:	dc800315 	stw	r18,12(sp)
10014ef4:	dc400215 	stw	r17,8(sp)
10014ef8:	dc000115 	stw	r16,4(sp)
10014efc:	dfc00415 	stw	ra,16(sp)
10014f00:	d8800015 	stw	r2,0(sp)
10014f04:	2021883a 	mov	r16,r4
10014f08:	2823883a 	mov	r17,r5
10014f0c:	d825883a 	mov	r18,sp
10014f10:	10000826 	beq	r2,zero,10014f34 <_Unwind_Backtrace+0x50>
10014f14:	880b883a 	mov	r5,r17
10014f18:	9009883a 	mov	r4,r18
10014f1c:	803ee83a 	callr	r16
10014f20:	1000101e 	bne	r2,zero,10014f64 <_Unwind_Backtrace+0x80>
10014f24:	d8800017 	ldw	r2,0(sp)
10014f28:	10800017 	ldw	r2,0(r2)
10014f2c:	d8800015 	stw	r2,0(sp)
10014f30:	103ff81e 	bne	r2,zero,10014f14 <_Unwind_Backtrace+0x30>
10014f34:	880b883a 	mov	r5,r17
10014f38:	9009883a 	mov	r4,r18
10014f3c:	803ee83a 	callr	r16
10014f40:	00c00144 	movi	r3,5
10014f44:	1000071e 	bne	r2,zero,10014f64 <_Unwind_Backtrace+0x80>
10014f48:	1805883a 	mov	r2,r3
10014f4c:	dfc00417 	ldw	ra,16(sp)
10014f50:	dc800317 	ldw	r18,12(sp)
10014f54:	dc400217 	ldw	r17,8(sp)
10014f58:	dc000117 	ldw	r16,4(sp)
10014f5c:	dec00504 	addi	sp,sp,20
10014f60:	f800283a 	ret
10014f64:	00c000c4 	movi	r3,3
10014f68:	003ff706 	br	10014f48 <_Unwind_Backtrace+0x64>

10014f6c <abort>:
10014f6c:	deffff04 	addi	sp,sp,-4
10014f70:	01000184 	movi	r4,6
10014f74:	dfc00015 	stw	ra,0(sp)
10014f78:	00176240 	call	10017624 <raise>
10014f7c:	01000044 	movi	r4,1
10014f80:	00226b80 	call	100226b8 <_exit>

10014f84 <__sflush_r>:
10014f84:	2880030b 	ldhu	r2,12(r5)
10014f88:	defffb04 	addi	sp,sp,-20
10014f8c:	dcc00315 	stw	r19,12(sp)
10014f90:	dc000015 	stw	r16,0(sp)
10014f94:	dfc00415 	stw	ra,16(sp)
10014f98:	dc800215 	stw	r18,8(sp)
10014f9c:	dc400115 	stw	r17,4(sp)
10014fa0:	10c0020c 	andi	r3,r2,8
10014fa4:	2821883a 	mov	r16,r5
10014fa8:	2027883a 	mov	r19,r4
10014fac:	18003f1e 	bne	r3,zero,100150ac <__sflush_r+0x128>
10014fb0:	28c00117 	ldw	r3,4(r5)
10014fb4:	10820014 	ori	r2,r2,2048
10014fb8:	2880030d 	sth	r2,12(r5)
10014fbc:	00c0550e 	bge	zero,r3,10015114 <__sflush_r+0x190>
10014fc0:	82000a17 	ldw	r8,40(r16)
10014fc4:	40003126 	beq	r8,zero,1001508c <__sflush_r+0x108>
10014fc8:	9c400017 	ldw	r17,0(r19)
10014fcc:	1104000c 	andi	r4,r2,4096
10014fd0:	98000015 	stw	zero,0(r19)
10014fd4:	1007883a 	mov	r3,r2
10014fd8:	81400717 	ldw	r5,28(r16)
10014fdc:	2000521e 	bne	r4,zero,10015128 <__sflush_r+0x1a4>
10014fe0:	01c00044 	movi	r7,1
10014fe4:	000d883a 	mov	r6,zero
10014fe8:	9809883a 	mov	r4,r19
10014fec:	403ee83a 	callr	r8
10014ff0:	10ffffd8 	cmpnei	r3,r2,-1
10014ff4:	18005826 	beq	r3,zero,10015158 <__sflush_r+0x1d4>
10014ff8:	80c0030b 	ldhu	r3,12(r16)
10014ffc:	82000a17 	ldw	r8,40(r16)
10015000:	81400717 	ldw	r5,28(r16)
10015004:	18c0010c 	andi	r3,r3,4
10015008:	18000626 	beq	r3,zero,10015024 <__sflush_r+0xa0>
1001500c:	81000117 	ldw	r4,4(r16)
10015010:	80c00c17 	ldw	r3,48(r16)
10015014:	1105c83a 	sub	r2,r2,r4
10015018:	18000226 	beq	r3,zero,10015024 <__sflush_r+0xa0>
1001501c:	80c00f17 	ldw	r3,60(r16)
10015020:	10c5c83a 	sub	r2,r2,r3
10015024:	000f883a 	mov	r7,zero
10015028:	100d883a 	mov	r6,r2
1001502c:	9809883a 	mov	r4,r19
10015030:	403ee83a 	callr	r8
10015034:	10ffffd8 	cmpnei	r3,r2,-1
10015038:	18003d1e 	bne	r3,zero,10015130 <__sflush_r+0x1ac>
1001503c:	99000017 	ldw	r4,0(r19)
10015040:	80c0030b 	ldhu	r3,12(r16)
10015044:	20004e26 	beq	r4,zero,10015180 <__sflush_r+0x1fc>
10015048:	21400760 	cmpeqi	r5,r4,29
1001504c:	2800021e 	bne	r5,zero,10015058 <__sflush_r+0xd4>
10015050:	210005a0 	cmpeqi	r4,r4,22
10015054:	20002c26 	beq	r4,zero,10015108 <__sflush_r+0x184>
10015058:	80800417 	ldw	r2,16(r16)
1001505c:	18fdffcc 	andi	r3,r3,63487
10015060:	80c0030d 	sth	r3,12(r16)
10015064:	80000115 	stw	zero,4(r16)
10015068:	80800015 	stw	r2,0(r16)
1001506c:	81400c17 	ldw	r5,48(r16)
10015070:	9c400015 	stw	r17,0(r19)
10015074:	28000526 	beq	r5,zero,1001508c <__sflush_r+0x108>
10015078:	80801004 	addi	r2,r16,64
1001507c:	28800226 	beq	r5,r2,10015088 <__sflush_r+0x104>
10015080:	9809883a 	mov	r4,r19
10015084:	00157980 	call	10015798 <_free_r>
10015088:	80000c15 	stw	zero,48(r16)
1001508c:	0005883a 	mov	r2,zero
10015090:	dfc00417 	ldw	ra,16(sp)
10015094:	dcc00317 	ldw	r19,12(sp)
10015098:	dc800217 	ldw	r18,8(sp)
1001509c:	dc400117 	ldw	r17,4(sp)
100150a0:	dc000017 	ldw	r16,0(sp)
100150a4:	dec00504 	addi	sp,sp,20
100150a8:	f800283a 	ret
100150ac:	2c800417 	ldw	r18,16(r5)
100150b0:	903ff626 	beq	r18,zero,1001508c <__sflush_r+0x108>
100150b4:	2c400017 	ldw	r17,0(r5)
100150b8:	108000cc 	andi	r2,r2,3
100150bc:	2c800015 	stw	r18,0(r5)
100150c0:	8ca3c83a 	sub	r17,r17,r18
100150c4:	1000161e 	bne	r2,zero,10015120 <__sflush_r+0x19c>
100150c8:	28800517 	ldw	r2,20(r5)
100150cc:	80800215 	stw	r2,8(r16)
100150d0:	04400316 	blt	zero,r17,100150e0 <__sflush_r+0x15c>
100150d4:	003fed06 	br	1001508c <__sflush_r+0x108>
100150d8:	90a5883a 	add	r18,r18,r2
100150dc:	047feb0e 	bge	zero,r17,1001508c <__sflush_r+0x108>
100150e0:	80800917 	ldw	r2,36(r16)
100150e4:	81400717 	ldw	r5,28(r16)
100150e8:	880f883a 	mov	r7,r17
100150ec:	900d883a 	mov	r6,r18
100150f0:	9809883a 	mov	r4,r19
100150f4:	103ee83a 	callr	r2
100150f8:	88a3c83a 	sub	r17,r17,r2
100150fc:	00bff616 	blt	zero,r2,100150d8 <__sflush_r+0x154>
10015100:	80c0030b 	ldhu	r3,12(r16)
10015104:	00bfffc4 	movi	r2,-1
10015108:	18c01014 	ori	r3,r3,64
1001510c:	80c0030d 	sth	r3,12(r16)
10015110:	003fdf06 	br	10015090 <__sflush_r+0x10c>
10015114:	28c00f17 	ldw	r3,60(r5)
10015118:	00ffa916 	blt	zero,r3,10014fc0 <__sflush_r+0x3c>
1001511c:	003fdb06 	br	1001508c <__sflush_r+0x108>
10015120:	0005883a 	mov	r2,zero
10015124:	003fe906 	br	100150cc <__sflush_r+0x148>
10015128:	80801417 	ldw	r2,80(r16)
1001512c:	003fb506 	br	10015004 <__sflush_r+0x80>
10015130:	80c0030b 	ldhu	r3,12(r16)
10015134:	81000417 	ldw	r4,16(r16)
10015138:	80000115 	stw	zero,4(r16)
1001513c:	197dffcc 	andi	r5,r3,63487
10015140:	8140030d 	sth	r5,12(r16)
10015144:	81000015 	stw	r4,0(r16)
10015148:	18c4000c 	andi	r3,r3,4096
1001514c:	183fc726 	beq	r3,zero,1001506c <__sflush_r+0xe8>
10015150:	80801415 	stw	r2,80(r16)
10015154:	003fc506 	br	1001506c <__sflush_r+0xe8>
10015158:	98c00017 	ldw	r3,0(r19)
1001515c:	183fa626 	beq	r3,zero,10014ff8 <__sflush_r+0x74>
10015160:	19000760 	cmpeqi	r4,r3,29
10015164:	20000e1e 	bne	r4,zero,100151a0 <__sflush_r+0x21c>
10015168:	18c00598 	cmpnei	r3,r3,22
1001516c:	18000c26 	beq	r3,zero,100151a0 <__sflush_r+0x21c>
10015170:	80c0030b 	ldhu	r3,12(r16)
10015174:	18c01014 	ori	r3,r3,64
10015178:	80c0030d 	sth	r3,12(r16)
1001517c:	003fc406 	br	10015090 <__sflush_r+0x10c>
10015180:	81000417 	ldw	r4,16(r16)
10015184:	197dffcc 	andi	r5,r3,63487
10015188:	8140030d 	sth	r5,12(r16)
1001518c:	80000115 	stw	zero,4(r16)
10015190:	81000015 	stw	r4,0(r16)
10015194:	18c4000c 	andi	r3,r3,4096
10015198:	183fb426 	beq	r3,zero,1001506c <__sflush_r+0xe8>
1001519c:	003fec06 	br	10015150 <__sflush_r+0x1cc>
100151a0:	9c400015 	stw	r17,0(r19)
100151a4:	0005883a 	mov	r2,zero
100151a8:	003fb906 	br	10015090 <__sflush_r+0x10c>

100151ac <_fflush_r>:
100151ac:	defffd04 	addi	sp,sp,-12
100151b0:	dc000115 	stw	r16,4(sp)
100151b4:	dfc00215 	stw	ra,8(sp)
100151b8:	2021883a 	mov	r16,r4
100151bc:	20000226 	beq	r4,zero,100151c8 <_fflush_r+0x1c>
100151c0:	20800e17 	ldw	r2,56(r4)
100151c4:	10000726 	beq	r2,zero,100151e4 <_fflush_r+0x38>
100151c8:	2880030f 	ldh	r2,12(r5)
100151cc:	10000a1e 	bne	r2,zero,100151f8 <_fflush_r+0x4c>
100151d0:	0005883a 	mov	r2,zero
100151d4:	dfc00217 	ldw	ra,8(sp)
100151d8:	dc000117 	ldw	r16,4(sp)
100151dc:	dec00304 	addi	sp,sp,12
100151e0:	f800283a 	ret
100151e4:	d9400015 	stw	r5,0(sp)
100151e8:	00155300 	call	10015530 <__sinit>
100151ec:	d9400017 	ldw	r5,0(sp)
100151f0:	2880030f 	ldh	r2,12(r5)
100151f4:	103ff626 	beq	r2,zero,100151d0 <_fflush_r+0x24>
100151f8:	8009883a 	mov	r4,r16
100151fc:	dfc00217 	ldw	ra,8(sp)
10015200:	dc000117 	ldw	r16,4(sp)
10015204:	dec00304 	addi	sp,sp,12
10015208:	0014f841 	jmpi	10014f84 <__sflush_r>

1001520c <fflush>:
1001520c:	200b883a 	mov	r5,r4
10015210:	20000326 	beq	r4,zero,10015220 <fflush+0x14>
10015214:	008400f4 	movhi	r2,4099
10015218:	11219817 	ldw	r4,-31136(r2)
1001521c:	00151ac1 	jmpi	100151ac <_fflush_r>
10015220:	008400f4 	movhi	r2,4099
10015224:	11219717 	ldw	r4,-31140(r2)
10015228:	01440074 	movhi	r5,4097
1001522c:	29546b04 	addi	r5,r5,20908
10015230:	00160241 	jmpi	10016024 <_fwalk_reent>

10015234 <__fp_lock>:
10015234:	0005883a 	mov	r2,zero
10015238:	f800283a 	ret

1001523c <_cleanup_r>:
1001523c:	014400b4 	movhi	r5,4098
10015240:	296e4e04 	addi	r5,r5,-18120
10015244:	00160241 	jmpi	10016024 <_fwalk_reent>

10015248 <__sinit.part.0>:
10015248:	00c40074 	movhi	r3,4097
1001524c:	20800117 	ldw	r2,4(r4)
10015250:	18d48f04 	addi	r3,r3,21052
10015254:	20c00f15 	stw	r3,60(r4)
10015258:	2140bb04 	addi	r5,r4,748
1001525c:	00c000c4 	movi	r3,3
10015260:	20c0b915 	stw	r3,740(r4)
10015264:	2140ba15 	stw	r5,744(r4)
10015268:	2000b815 	stw	zero,736(r4)
1001526c:	10001705 	stb	zero,92(r2)
10015270:	10001745 	stb	zero,93(r2)
10015274:	10001785 	stb	zero,94(r2)
10015278:	100017c5 	stb	zero,95(r2)
1001527c:	10001805 	stb	zero,96(r2)
10015280:	10001845 	stb	zero,97(r2)
10015284:	10001885 	stb	zero,98(r2)
10015288:	100018c5 	stb	zero,99(r2)
1001528c:	00c00104 	movi	r3,4
10015290:	10c00315 	stw	r3,12(r2)
10015294:	02040074 	movhi	r8,4097
10015298:	20c00217 	ldw	r3,8(r4)
1001529c:	01c40074 	movhi	r7,4097
100152a0:	01840074 	movhi	r6,4097
100152a4:	01440074 	movhi	r5,4097
100152a8:	421db604 	addi	r8,r8,30424
100152ac:	39ddcd04 	addi	r7,r7,30516
100152b0:	319ded04 	addi	r6,r6,30644
100152b4:	295e0404 	addi	r5,r5,30736
100152b8:	02400074 	movhi	r9,1
100152bc:	10001915 	stw	zero,100(r2)
100152c0:	10000015 	stw	zero,0(r2)
100152c4:	10000115 	stw	zero,4(r2)
100152c8:	10000215 	stw	zero,8(r2)
100152cc:	10000415 	stw	zero,16(r2)
100152d0:	10000515 	stw	zero,20(r2)
100152d4:	10000615 	stw	zero,24(r2)
100152d8:	10800715 	stw	r2,28(r2)
100152dc:	12000815 	stw	r8,32(r2)
100152e0:	11c00915 	stw	r7,36(r2)
100152e4:	11800a15 	stw	r6,40(r2)
100152e8:	11400b15 	stw	r5,44(r2)
100152ec:	4a400284 	addi	r9,r9,10
100152f0:	1a400315 	stw	r9,12(r3)
100152f4:	18001915 	stw	zero,100(r3)
100152f8:	18000015 	stw	zero,0(r3)
100152fc:	18000115 	stw	zero,4(r3)
10015300:	18000215 	stw	zero,8(r3)
10015304:	18000415 	stw	zero,16(r3)
10015308:	18001705 	stb	zero,92(r3)
1001530c:	18001745 	stb	zero,93(r3)
10015310:	18001785 	stb	zero,94(r3)
10015314:	180017c5 	stb	zero,95(r3)
10015318:	18001805 	stb	zero,96(r3)
1001531c:	18001845 	stb	zero,97(r3)
10015320:	18001885 	stb	zero,98(r3)
10015324:	180018c5 	stb	zero,99(r3)
10015328:	20800317 	ldw	r2,12(r4)
1001532c:	024000b4 	movhi	r9,2
10015330:	18000515 	stw	zero,20(r3)
10015334:	18000615 	stw	zero,24(r3)
10015338:	18c00715 	stw	r3,28(r3)
1001533c:	1a000815 	stw	r8,32(r3)
10015340:	19c00915 	stw	r7,36(r3)
10015344:	19800a15 	stw	r6,40(r3)
10015348:	19400b15 	stw	r5,44(r3)
1001534c:	4a400484 	addi	r9,r9,18
10015350:	10001915 	stw	zero,100(r2)
10015354:	10000015 	stw	zero,0(r2)
10015358:	10000115 	stw	zero,4(r2)
1001535c:	10000215 	stw	zero,8(r2)
10015360:	12400315 	stw	r9,12(r2)
10015364:	10000415 	stw	zero,16(r2)
10015368:	10000515 	stw	zero,20(r2)
1001536c:	10000615 	stw	zero,24(r2)
10015370:	10001705 	stb	zero,92(r2)
10015374:	10001745 	stb	zero,93(r2)
10015378:	10001785 	stb	zero,94(r2)
1001537c:	100017c5 	stb	zero,95(r2)
10015380:	10001805 	stb	zero,96(r2)
10015384:	10001845 	stb	zero,97(r2)
10015388:	10001885 	stb	zero,98(r2)
1001538c:	100018c5 	stb	zero,99(r2)
10015390:	10800715 	stw	r2,28(r2)
10015394:	12000815 	stw	r8,32(r2)
10015398:	11c00915 	stw	r7,36(r2)
1001539c:	11800a15 	stw	r6,40(r2)
100153a0:	11400b15 	stw	r5,44(r2)
100153a4:	00800044 	movi	r2,1
100153a8:	20800e15 	stw	r2,56(r4)
100153ac:	f800283a 	ret

100153b0 <__fp_unlock>:
100153b0:	0005883a 	mov	r2,zero
100153b4:	f800283a 	ret

100153b8 <__sfmoreglue>:
100153b8:	defffc04 	addi	sp,sp,-16
100153bc:	dc400115 	stw	r17,4(sp)
100153c0:	2c7fffc4 	addi	r17,r5,-1
100153c4:	8c401a24 	muli	r17,r17,104
100153c8:	dc800215 	stw	r18,8(sp)
100153cc:	2825883a 	mov	r18,r5
100153d0:	89401d04 	addi	r5,r17,116
100153d4:	dc000015 	stw	r16,0(sp)
100153d8:	dfc00315 	stw	ra,12(sp)
100153dc:	00162cc0 	call	100162cc <_malloc_r>
100153e0:	1021883a 	mov	r16,r2
100153e4:	10000726 	beq	r2,zero,10015404 <__sfmoreglue+0x4c>
100153e8:	11000304 	addi	r4,r2,12
100153ec:	10000015 	stw	zero,0(r2)
100153f0:	14800115 	stw	r18,4(r2)
100153f4:	11000215 	stw	r4,8(r2)
100153f8:	89801a04 	addi	r6,r17,104
100153fc:	000b883a 	mov	r5,zero
10015400:	0016e600 	call	10016e60 <memset>
10015404:	8005883a 	mov	r2,r16
10015408:	dfc00317 	ldw	ra,12(sp)
1001540c:	dc800217 	ldw	r18,8(sp)
10015410:	dc400117 	ldw	r17,4(sp)
10015414:	dc000017 	ldw	r16,0(sp)
10015418:	dec00404 	addi	sp,sp,16
1001541c:	f800283a 	ret

10015420 <__sfp>:
10015420:	defffd04 	addi	sp,sp,-12
10015424:	008400f4 	movhi	r2,4099
10015428:	dc000015 	stw	r16,0(sp)
1001542c:	14219717 	ldw	r16,-31140(r2)
10015430:	dc400115 	stw	r17,4(sp)
10015434:	dfc00215 	stw	ra,8(sp)
10015438:	80800e17 	ldw	r2,56(r16)
1001543c:	2023883a 	mov	r17,r4
10015440:	10002b26 	beq	r2,zero,100154f0 <__sfp+0xd0>
10015444:	8400b804 	addi	r16,r16,736
10015448:	80c00117 	ldw	r3,4(r16)
1001544c:	80800217 	ldw	r2,8(r16)
10015450:	18ffffc4 	addi	r3,r3,-1
10015454:	1800050e 	bge	r3,zero,1001546c <__sfp+0x4c>
10015458:	00002106 	br	100154e0 <__sfp+0xc0>
1001545c:	18ffffc4 	addi	r3,r3,-1
10015460:	193fffd8 	cmpnei	r4,r3,-1
10015464:	10801a04 	addi	r2,r2,104
10015468:	20001d26 	beq	r4,zero,100154e0 <__sfp+0xc0>
1001546c:	1100030f 	ldh	r4,12(r2)
10015470:	203ffa1e 	bne	r4,zero,1001545c <__sfp+0x3c>
10015474:	00fffff4 	movhi	r3,65535
10015478:	18c00044 	addi	r3,r3,1
1001547c:	10001915 	stw	zero,100(r2)
10015480:	10000015 	stw	zero,0(r2)
10015484:	10000115 	stw	zero,4(r2)
10015488:	10000215 	stw	zero,8(r2)
1001548c:	10c00315 	stw	r3,12(r2)
10015490:	10000415 	stw	zero,16(r2)
10015494:	10000515 	stw	zero,20(r2)
10015498:	10000615 	stw	zero,24(r2)
1001549c:	10001705 	stb	zero,92(r2)
100154a0:	10001745 	stb	zero,93(r2)
100154a4:	10001785 	stb	zero,94(r2)
100154a8:	100017c5 	stb	zero,95(r2)
100154ac:	10001805 	stb	zero,96(r2)
100154b0:	10001845 	stb	zero,97(r2)
100154b4:	10001885 	stb	zero,98(r2)
100154b8:	100018c5 	stb	zero,99(r2)
100154bc:	10000c15 	stw	zero,48(r2)
100154c0:	10000d15 	stw	zero,52(r2)
100154c4:	10001115 	stw	zero,68(r2)
100154c8:	10001215 	stw	zero,72(r2)
100154cc:	dfc00217 	ldw	ra,8(sp)
100154d0:	dc400117 	ldw	r17,4(sp)
100154d4:	dc000017 	ldw	r16,0(sp)
100154d8:	dec00304 	addi	sp,sp,12
100154dc:	f800283a 	ret
100154e0:	80800017 	ldw	r2,0(r16)
100154e4:	10000526 	beq	r2,zero,100154fc <__sfp+0xdc>
100154e8:	1021883a 	mov	r16,r2
100154ec:	003fd606 	br	10015448 <__sfp+0x28>
100154f0:	8009883a 	mov	r4,r16
100154f4:	00152480 	call	10015248 <__sinit.part.0>
100154f8:	003fd206 	br	10015444 <__sfp+0x24>
100154fc:	01400104 	movi	r5,4
10015500:	8809883a 	mov	r4,r17
10015504:	00153b80 	call	100153b8 <__sfmoreglue>
10015508:	80800015 	stw	r2,0(r16)
1001550c:	103ff61e 	bne	r2,zero,100154e8 <__sfp+0xc8>
10015510:	00c00304 	movi	r3,12
10015514:	88c00015 	stw	r3,0(r17)
10015518:	003fec06 	br	100154cc <__sfp+0xac>

1001551c <_cleanup>:
1001551c:	008400f4 	movhi	r2,4099
10015520:	11219717 	ldw	r4,-31140(r2)
10015524:	014400b4 	movhi	r5,4098
10015528:	296e4e04 	addi	r5,r5,-18120
1001552c:	00160241 	jmpi	10016024 <_fwalk_reent>

10015530 <__sinit>:
10015530:	20800e17 	ldw	r2,56(r4)
10015534:	10000126 	beq	r2,zero,1001553c <__sinit+0xc>
10015538:	f800283a 	ret
1001553c:	00152481 	jmpi	10015248 <__sinit.part.0>

10015540 <__sfp_lock_acquire>:
10015540:	f800283a 	ret

10015544 <__sfp_lock_release>:
10015544:	f800283a 	ret

10015548 <__sinit_lock_acquire>:
10015548:	f800283a 	ret

1001554c <__sinit_lock_release>:
1001554c:	f800283a 	ret

10015550 <__fp_lock_all>:
10015550:	008400f4 	movhi	r2,4099
10015554:	11219817 	ldw	r4,-31136(r2)
10015558:	01440074 	movhi	r5,4097
1001555c:	29548d04 	addi	r5,r5,21044
10015560:	0015f801 	jmpi	10015f80 <_fwalk>

10015564 <__fp_unlock_all>:
10015564:	008400f4 	movhi	r2,4099
10015568:	11219817 	ldw	r4,-31136(r2)
1001556c:	01440074 	movhi	r5,4097
10015570:	2954ec04 	addi	r5,r5,21424
10015574:	0015f801 	jmpi	10015f80 <_fwalk>

10015578 <_fopen_r>:
10015578:	defffa04 	addi	sp,sp,-24
1001557c:	3005883a 	mov	r2,r6
10015580:	dcc00415 	stw	r19,16(sp)
10015584:	d80d883a 	mov	r6,sp
10015588:	2827883a 	mov	r19,r5
1001558c:	100b883a 	mov	r5,r2
10015590:	dc800315 	stw	r18,12(sp)
10015594:	dfc00515 	stw	ra,20(sp)
10015598:	dc400215 	stw	r17,8(sp)
1001559c:	dc000115 	stw	r16,4(sp)
100155a0:	2025883a 	mov	r18,r4
100155a4:	001ba400 	call	1001ba40 <__sflags>
100155a8:	10002726 	beq	r2,zero,10015648 <_fopen_r+0xd0>
100155ac:	9009883a 	mov	r4,r18
100155b0:	1023883a 	mov	r17,r2
100155b4:	00154200 	call	10015420 <__sfp>
100155b8:	1021883a 	mov	r16,r2
100155bc:	10002226 	beq	r2,zero,10015648 <_fopen_r+0xd0>
100155c0:	d9800017 	ldw	r6,0(sp)
100155c4:	01c06d84 	movi	r7,438
100155c8:	980b883a 	mov	r5,r19
100155cc:	9009883a 	mov	r4,r18
100155d0:	0016f500 	call	10016f50 <_open_r>
100155d4:	10001916 	blt	r2,zero,1001563c <_fopen_r+0xc4>
100155d8:	01840074 	movhi	r6,4097
100155dc:	01440074 	movhi	r5,4097
100155e0:	01040074 	movhi	r4,4097
100155e4:	00c40074 	movhi	r3,4097
100155e8:	319db604 	addi	r6,r6,30424
100155ec:	295dcd04 	addi	r5,r5,30516
100155f0:	211ded04 	addi	r4,r4,30644
100155f4:	18de0404 	addi	r3,r3,30736
100155f8:	8440030d 	sth	r17,12(r16)
100155fc:	8080038d 	sth	r2,14(r16)
10015600:	84000715 	stw	r16,28(r16)
10015604:	81800815 	stw	r6,32(r16)
10015608:	81400915 	stw	r5,36(r16)
1001560c:	81000a15 	stw	r4,40(r16)
10015610:	80c00b15 	stw	r3,44(r16)
10015614:	8c40400c 	andi	r17,r17,256
10015618:	88000d1e 	bne	r17,zero,10015650 <_fopen_r+0xd8>
1001561c:	8005883a 	mov	r2,r16
10015620:	dfc00517 	ldw	ra,20(sp)
10015624:	dcc00417 	ldw	r19,16(sp)
10015628:	dc800317 	ldw	r18,12(sp)
1001562c:	dc400217 	ldw	r17,8(sp)
10015630:	dc000117 	ldw	r16,4(sp)
10015634:	dec00604 	addi	sp,sp,24
10015638:	f800283a 	ret
1001563c:	00155400 	call	10015540 <__sfp_lock_acquire>
10015640:	8000030d 	sth	zero,12(r16)
10015644:	00155440 	call	10015544 <__sfp_lock_release>
10015648:	0021883a 	mov	r16,zero
1001564c:	003ff306 	br	1001561c <_fopen_r+0xa4>
10015650:	01c00084 	movi	r7,2
10015654:	000d883a 	mov	r6,zero
10015658:	800b883a 	mov	r5,r16
1001565c:	9009883a 	mov	r4,r18
10015660:	0015a940 	call	10015a94 <_fseek_r>
10015664:	003fed06 	br	1001561c <_fopen_r+0xa4>

10015668 <fopen>:
10015668:	008400f4 	movhi	r2,4099
1001566c:	280d883a 	mov	r6,r5
10015670:	200b883a 	mov	r5,r4
10015674:	11219817 	ldw	r4,-31136(r2)
10015678:	00155781 	jmpi	10015578 <_fopen_r>

1001567c <_malloc_trim_r>:
1001567c:	defffb04 	addi	sp,sp,-20
10015680:	dcc00315 	stw	r19,12(sp)
10015684:	04c400b4 	movhi	r19,4098
10015688:	dc800215 	stw	r18,8(sp)
1001568c:	dc400115 	stw	r17,4(sp)
10015690:	dc000015 	stw	r16,0(sp)
10015694:	dfc00415 	stw	ra,16(sp)
10015698:	2821883a 	mov	r16,r5
1001569c:	9cdba804 	addi	r19,r19,28320
100156a0:	2025883a 	mov	r18,r4
100156a4:	0022cb80 	call	10022cb8 <__malloc_lock>
100156a8:	98800217 	ldw	r2,8(r19)
100156ac:	14400117 	ldw	r17,4(r2)
100156b0:	00bfff04 	movi	r2,-4
100156b4:	88a2703a 	and	r17,r17,r2
100156b8:	8c21c83a 	sub	r16,r17,r16
100156bc:	8403fbc4 	addi	r16,r16,4079
100156c0:	8020d33a 	srli	r16,r16,12
100156c4:	843fffc4 	addi	r16,r16,-1
100156c8:	8020933a 	slli	r16,r16,12
100156cc:	80840008 	cmpgei	r2,r16,4096
100156d0:	10000626 	beq	r2,zero,100156ec <_malloc_trim_r+0x70>
100156d4:	000b883a 	mov	r5,zero
100156d8:	9009883a 	mov	r4,r18
100156dc:	00173740 	call	10017374 <_sbrk_r>
100156e0:	98c00217 	ldw	r3,8(r19)
100156e4:	1c47883a 	add	r3,r3,r17
100156e8:	10c00a26 	beq	r2,r3,10015714 <_malloc_trim_r+0x98>
100156ec:	9009883a 	mov	r4,r18
100156f0:	0022cdc0 	call	10022cdc <__malloc_unlock>
100156f4:	0005883a 	mov	r2,zero
100156f8:	dfc00417 	ldw	ra,16(sp)
100156fc:	dcc00317 	ldw	r19,12(sp)
10015700:	dc800217 	ldw	r18,8(sp)
10015704:	dc400117 	ldw	r17,4(sp)
10015708:	dc000017 	ldw	r16,0(sp)
1001570c:	dec00504 	addi	sp,sp,20
10015710:	f800283a 	ret
10015714:	040bc83a 	sub	r5,zero,r16
10015718:	9009883a 	mov	r4,r18
1001571c:	00173740 	call	10017374 <_sbrk_r>
10015720:	10bfffd8 	cmpnei	r2,r2,-1
10015724:	10000d26 	beq	r2,zero,1001575c <_malloc_trim_r+0xe0>
10015728:	008400f4 	movhi	r2,4099
1001572c:	10a9ae17 	ldw	r2,-22856(r2)
10015730:	98c00217 	ldw	r3,8(r19)
10015734:	8c23c83a 	sub	r17,r17,r16
10015738:	8c400054 	ori	r17,r17,1
1001573c:	1421c83a 	sub	r16,r2,r16
10015740:	1c400115 	stw	r17,4(r3)
10015744:	008400f4 	movhi	r2,4099
10015748:	9009883a 	mov	r4,r18
1001574c:	1429ae15 	stw	r16,-22856(r2)
10015750:	0022cdc0 	call	10022cdc <__malloc_unlock>
10015754:	00800044 	movi	r2,1
10015758:	003fe706 	br	100156f8 <_malloc_trim_r+0x7c>
1001575c:	000b883a 	mov	r5,zero
10015760:	9009883a 	mov	r4,r18
10015764:	00173740 	call	10017374 <_sbrk_r>
10015768:	99000217 	ldw	r4,8(r19)
1001576c:	1107c83a 	sub	r3,r2,r4
10015770:	19400410 	cmplti	r5,r3,16
10015774:	283fdd1e 	bne	r5,zero,100156ec <_malloc_trim_r+0x70>
10015778:	014400f4 	movhi	r5,4099
1001577c:	29619917 	ldw	r5,-31132(r5)
10015780:	18c00054 	ori	r3,r3,1
10015784:	20c00115 	stw	r3,4(r4)
10015788:	1145c83a 	sub	r2,r2,r5
1001578c:	014400f4 	movhi	r5,4099
10015790:	28a9ae15 	stw	r2,-22856(r5)
10015794:	003fd506 	br	100156ec <_malloc_trim_r+0x70>

10015798 <_free_r>:
10015798:	28004f26 	beq	r5,zero,100158d8 <_free_r+0x140>
1001579c:	defffd04 	addi	sp,sp,-12
100157a0:	dc400115 	stw	r17,4(sp)
100157a4:	dc000015 	stw	r16,0(sp)
100157a8:	2023883a 	mov	r17,r4
100157ac:	2821883a 	mov	r16,r5
100157b0:	dfc00215 	stw	ra,8(sp)
100157b4:	0022cb80 	call	10022cb8 <__malloc_lock>
100157b8:	81ffff17 	ldw	r7,-4(r16)
100157bc:	00bfff84 	movi	r2,-2
100157c0:	80fffe04 	addi	r3,r16,-8
100157c4:	3884703a 	and	r2,r7,r2
100157c8:	018400b4 	movhi	r6,4098
100157cc:	1889883a 	add	r4,r3,r2
100157d0:	319ba804 	addi	r6,r6,28320
100157d4:	21400117 	ldw	r5,4(r4)
100157d8:	32000217 	ldw	r8,8(r6)
100157dc:	027fff04 	movi	r9,-4
100157e0:	2a4a703a 	and	r5,r5,r9
100157e4:	41006426 	beq	r8,r4,10015978 <_free_r+0x1e0>
100157e8:	21400115 	stw	r5,4(r4)
100157ec:	39c0004c 	andi	r7,r7,1
100157f0:	2151883a 	add	r8,r4,r5
100157f4:	3800281e 	bne	r7,zero,10015898 <_free_r+0x100>
100157f8:	82bffe17 	ldw	r10,-8(r16)
100157fc:	42000117 	ldw	r8,4(r8)
10015800:	01c400b4 	movhi	r7,4098
10015804:	1a87c83a 	sub	r3,r3,r10
10015808:	1a400217 	ldw	r9,8(r3)
1001580c:	39dbaa04 	addi	r7,r7,28328
10015810:	1285883a 	add	r2,r2,r10
10015814:	4200004c 	andi	r8,r8,1
10015818:	49c04c26 	beq	r9,r7,1001594c <_free_r+0x1b4>
1001581c:	1a800317 	ldw	r10,12(r3)
10015820:	4a800315 	stw	r10,12(r9)
10015824:	52400215 	stw	r9,8(r10)
10015828:	40007126 	beq	r8,zero,100159f0 <_free_r+0x258>
1001582c:	11400054 	ori	r5,r2,1
10015830:	19400115 	stw	r5,4(r3)
10015834:	20800015 	stw	r2,0(r4)
10015838:	11008028 	cmpgeui	r4,r2,512
1001583c:	20002c1e 	bne	r4,zero,100158f0 <_free_r+0x158>
10015840:	1008d0fa 	srli	r4,r2,3
10015844:	31c00117 	ldw	r7,4(r6)
10015848:	20800044 	addi	r2,r4,1
1001584c:	200bd0ba 	srai	r5,r4,2
10015850:	100490fa 	slli	r2,r2,3
10015854:	01000044 	movi	r4,1
10015858:	2148983a 	sll	r4,r4,r5
1001585c:	3085883a 	add	r2,r6,r2
10015860:	11400017 	ldw	r5,0(r2)
10015864:	21c8b03a 	or	r4,r4,r7
10015868:	11fffe04 	addi	r7,r2,-8
1001586c:	19c00315 	stw	r7,12(r3)
10015870:	19400215 	stw	r5,8(r3)
10015874:	31000115 	stw	r4,4(r6)
10015878:	10c00015 	stw	r3,0(r2)
1001587c:	28c00315 	stw	r3,12(r5)
10015880:	8809883a 	mov	r4,r17
10015884:	dfc00217 	ldw	ra,8(sp)
10015888:	dc400117 	ldw	r17,4(sp)
1001588c:	dc000017 	ldw	r16,0(sp)
10015890:	dec00304 	addi	sp,sp,12
10015894:	0022cdc1 	jmpi	10022cdc <__malloc_unlock>
10015898:	41c00117 	ldw	r7,4(r8)
1001589c:	39c0004c 	andi	r7,r7,1
100158a0:	38000e1e 	bne	r7,zero,100158dc <_free_r+0x144>
100158a4:	01c400b4 	movhi	r7,4098
100158a8:	1145883a 	add	r2,r2,r5
100158ac:	39dbaa04 	addi	r7,r7,28328
100158b0:	21400217 	ldw	r5,8(r4)
100158b4:	12400054 	ori	r9,r2,1
100158b8:	1891883a 	add	r8,r3,r2
100158bc:	29c05226 	beq	r5,r7,10015a08 <_free_r+0x270>
100158c0:	21000317 	ldw	r4,12(r4)
100158c4:	29000315 	stw	r4,12(r5)
100158c8:	21400215 	stw	r5,8(r4)
100158cc:	1a400115 	stw	r9,4(r3)
100158d0:	40800015 	stw	r2,0(r8)
100158d4:	003fd806 	br	10015838 <_free_r+0xa0>
100158d8:	f800283a 	ret
100158dc:	11400054 	ori	r5,r2,1
100158e0:	817fff15 	stw	r5,-4(r16)
100158e4:	20800015 	stw	r2,0(r4)
100158e8:	11008028 	cmpgeui	r4,r2,512
100158ec:	203fd426 	beq	r4,zero,10015840 <_free_r+0xa8>
100158f0:	1008d27a 	srli	r4,r2,9
100158f4:	21400168 	cmpgeui	r5,r4,5
100158f8:	2800341e 	bne	r5,zero,100159cc <_free_r+0x234>
100158fc:	1008d1ba 	srli	r4,r2,6
10015900:	21c00e44 	addi	r7,r4,57
10015904:	380e90fa 	slli	r7,r7,3
10015908:	21400e04 	addi	r5,r4,56
1001590c:	31cf883a 	add	r7,r6,r7
10015910:	39000017 	ldw	r4,0(r7)
10015914:	39fffe04 	addi	r7,r7,-8
10015918:	39004226 	beq	r7,r4,10015a24 <_free_r+0x28c>
1001591c:	01bfff04 	movi	r6,-4
10015920:	21400117 	ldw	r5,4(r4)
10015924:	298a703a 	and	r5,r5,r6
10015928:	1140022e 	bgeu	r2,r5,10015934 <_free_r+0x19c>
1001592c:	21000217 	ldw	r4,8(r4)
10015930:	393ffb1e 	bne	r7,r4,10015920 <_free_r+0x188>
10015934:	21c00317 	ldw	r7,12(r4)
10015938:	19c00315 	stw	r7,12(r3)
1001593c:	19000215 	stw	r4,8(r3)
10015940:	38c00215 	stw	r3,8(r7)
10015944:	20c00315 	stw	r3,12(r4)
10015948:	003fcd06 	br	10015880 <_free_r+0xe8>
1001594c:	40004d1e 	bne	r8,zero,10015a84 <_free_r+0x2ec>
10015950:	21800317 	ldw	r6,12(r4)
10015954:	21000217 	ldw	r4,8(r4)
10015958:	2885883a 	add	r2,r5,r2
1001595c:	11400054 	ori	r5,r2,1
10015960:	21800315 	stw	r6,12(r4)
10015964:	31000215 	stw	r4,8(r6)
10015968:	19400115 	stw	r5,4(r3)
1001596c:	1887883a 	add	r3,r3,r2
10015970:	18800015 	stw	r2,0(r3)
10015974:	003fc206 	br	10015880 <_free_r+0xe8>
10015978:	39c0004c 	andi	r7,r7,1
1001597c:	1145883a 	add	r2,r2,r5
10015980:	3800071e 	bne	r7,zero,100159a0 <_free_r+0x208>
10015984:	81fffe17 	ldw	r7,-8(r16)
10015988:	19c7c83a 	sub	r3,r3,r7
1001598c:	19000317 	ldw	r4,12(r3)
10015990:	19400217 	ldw	r5,8(r3)
10015994:	11c5883a 	add	r2,r2,r7
10015998:	29000315 	stw	r4,12(r5)
1001599c:	21400215 	stw	r5,8(r4)
100159a0:	010400f4 	movhi	r4,4099
100159a4:	11400054 	ori	r5,r2,1
100159a8:	21219a17 	ldw	r4,-31128(r4)
100159ac:	19400115 	stw	r5,4(r3)
100159b0:	30c00215 	stw	r3,8(r6)
100159b4:	113fb236 	bltu	r2,r4,10015880 <_free_r+0xe8>
100159b8:	008400f4 	movhi	r2,4099
100159bc:	11695e17 	ldw	r5,-23176(r2)
100159c0:	8809883a 	mov	r4,r17
100159c4:	001567c0 	call	1001567c <_malloc_trim_r>
100159c8:	003fad06 	br	10015880 <_free_r+0xe8>
100159cc:	21400568 	cmpgeui	r5,r4,21
100159d0:	28000926 	beq	r5,zero,100159f8 <_free_r+0x260>
100159d4:	21401568 	cmpgeui	r5,r4,85
100159d8:	2800191e 	bne	r5,zero,10015a40 <_free_r+0x2a8>
100159dc:	1008d33a 	srli	r4,r2,12
100159e0:	21c01bc4 	addi	r7,r4,111
100159e4:	21401b84 	addi	r5,r4,110
100159e8:	380e90fa 	slli	r7,r7,3
100159ec:	003fc706 	br	1001590c <_free_r+0x174>
100159f0:	1145883a 	add	r2,r2,r5
100159f4:	003fae06 	br	100158b0 <_free_r+0x118>
100159f8:	21c01704 	addi	r7,r4,92
100159fc:	214016c4 	addi	r5,r4,91
10015a00:	380e90fa 	slli	r7,r7,3
10015a04:	003fc106 	br	1001590c <_free_r+0x174>
10015a08:	30c00515 	stw	r3,20(r6)
10015a0c:	30c00415 	stw	r3,16(r6)
10015a10:	19c00315 	stw	r7,12(r3)
10015a14:	19c00215 	stw	r7,8(r3)
10015a18:	1a400115 	stw	r9,4(r3)
10015a1c:	40800015 	stw	r2,0(r8)
10015a20:	003f9706 	br	10015880 <_free_r+0xe8>
10015a24:	280bd0ba 	srai	r5,r5,2
10015a28:	00800044 	movi	r2,1
10015a2c:	32000117 	ldw	r8,4(r6)
10015a30:	114a983a 	sll	r5,r2,r5
10015a34:	2a0ab03a 	or	r5,r5,r8
10015a38:	31400115 	stw	r5,4(r6)
10015a3c:	003fbe06 	br	10015938 <_free_r+0x1a0>
10015a40:	21405568 	cmpgeui	r5,r4,341
10015a44:	2800051e 	bne	r5,zero,10015a5c <_free_r+0x2c4>
10015a48:	1008d3fa 	srli	r4,r2,15
10015a4c:	21c01e04 	addi	r7,r4,120
10015a50:	21401dc4 	addi	r5,r4,119
10015a54:	380e90fa 	slli	r7,r7,3
10015a58:	003fac06 	br	1001590c <_free_r+0x174>
10015a5c:	21015568 	cmpgeui	r4,r4,1365
10015a60:	2000051e 	bne	r4,zero,10015a78 <_free_r+0x2e0>
10015a64:	1008d4ba 	srli	r4,r2,18
10015a68:	21c01f44 	addi	r7,r4,125
10015a6c:	21401f04 	addi	r5,r4,124
10015a70:	380e90fa 	slli	r7,r7,3
10015a74:	003fa506 	br	1001590c <_free_r+0x174>
10015a78:	01c0fe04 	movi	r7,1016
10015a7c:	01401f84 	movi	r5,126
10015a80:	003fa206 	br	1001590c <_free_r+0x174>
10015a84:	11400054 	ori	r5,r2,1
10015a88:	19400115 	stw	r5,4(r3)
10015a8c:	20800015 	stw	r2,0(r4)
10015a90:	003f7b06 	br	10015880 <_free_r+0xe8>

10015a94 <_fseek_r>:
10015a94:	0015ab01 	jmpi	10015ab0 <_fseeko_r>

10015a98 <fseek>:
10015a98:	008400f4 	movhi	r2,4099
10015a9c:	300f883a 	mov	r7,r6
10015aa0:	280d883a 	mov	r6,r5
10015aa4:	200b883a 	mov	r5,r4
10015aa8:	11219817 	ldw	r4,-31136(r2)
10015aac:	0015ab01 	jmpi	10015ab0 <_fseeko_r>

10015ab0 <_fseeko_r>:
10015ab0:	deffe504 	addi	sp,sp,-108
10015ab4:	dd401715 	stw	r21,92(sp)
10015ab8:	dc801415 	stw	r18,80(sp)
10015abc:	dc401315 	stw	r17,76(sp)
10015ac0:	dc001215 	stw	r16,72(sp)
10015ac4:	dfc01a15 	stw	ra,104(sp)
10015ac8:	ddc01915 	stw	r23,100(sp)
10015acc:	dd801815 	stw	r22,96(sp)
10015ad0:	dd001615 	stw	r20,88(sp)
10015ad4:	dcc01515 	stw	r19,84(sp)
10015ad8:	2023883a 	mov	r17,r4
10015adc:	2821883a 	mov	r16,r5
10015ae0:	302b883a 	mov	r21,r6
10015ae4:	3825883a 	mov	r18,r7
10015ae8:	20000226 	beq	r4,zero,10015af4 <_fseeko_r+0x44>
10015aec:	20800e17 	ldw	r2,56(r4)
10015af0:	10001a26 	beq	r2,zero,10015b5c <_fseeko_r+0xac>
10015af4:	8080030b 	ldhu	r2,12(r16)
10015af8:	1080420c 	andi	r2,r2,264
10015afc:	10804218 	cmpnei	r2,r2,264
10015b00:	10001b26 	beq	r2,zero,10015b70 <_fseeko_r+0xc0>
10015b04:	84c00a17 	ldw	r19,40(r16)
10015b08:	9800fb26 	beq	r19,zero,10015ef8 <_fseeko_r+0x448>
10015b0c:	90800060 	cmpeqi	r2,r18,1
10015b10:	10004b1e 	bne	r2,zero,10015c40 <_fseeko_r+0x190>
10015b14:	908000a0 	cmpeqi	r2,r18,2
10015b18:	1000191e 	bne	r2,zero,10015b80 <_fseeko_r+0xd0>
10015b1c:	90001826 	beq	r18,zero,10015b80 <_fseeko_r+0xd0>
10015b20:	00800584 	movi	r2,22
10015b24:	88800015 	stw	r2,0(r17)
10015b28:	053fffc4 	movi	r20,-1
10015b2c:	a005883a 	mov	r2,r20
10015b30:	dfc01a17 	ldw	ra,104(sp)
10015b34:	ddc01917 	ldw	r23,100(sp)
10015b38:	dd801817 	ldw	r22,96(sp)
10015b3c:	dd401717 	ldw	r21,92(sp)
10015b40:	dd001617 	ldw	r20,88(sp)
10015b44:	dcc01517 	ldw	r19,84(sp)
10015b48:	dc801417 	ldw	r18,80(sp)
10015b4c:	dc401317 	ldw	r17,76(sp)
10015b50:	dc001217 	ldw	r16,72(sp)
10015b54:	dec01b04 	addi	sp,sp,108
10015b58:	f800283a 	ret
10015b5c:	00155300 	call	10015530 <__sinit>
10015b60:	8080030b 	ldhu	r2,12(r16)
10015b64:	1080420c 	andi	r2,r2,264
10015b68:	10804218 	cmpnei	r2,r2,264
10015b6c:	103fe51e 	bne	r2,zero,10015b04 <_fseeko_r+0x54>
10015b70:	800b883a 	mov	r5,r16
10015b74:	8809883a 	mov	r4,r17
10015b78:	00151ac0 	call	100151ac <_fflush_r>
10015b7c:	003fe106 	br	10015b04 <_fseeko_r+0x54>
10015b80:	81000417 	ldw	r4,16(r16)
10015b84:	002f883a 	mov	r23,zero
10015b88:	0029883a 	mov	r20,zero
10015b8c:	20004826 	beq	r4,zero,10015cb0 <_fseeko_r+0x200>
10015b90:	8080030b 	ldhu	r2,12(r16)
10015b94:	10c2068c 	andi	r3,r2,2074
10015b98:	1800071e 	bne	r3,zero,10015bb8 <_fseeko_r+0x108>
10015b9c:	10c1000c 	andi	r3,r2,1024
10015ba0:	1800561e 	bne	r3,zero,10015cfc <_fseeko_r+0x24c>
10015ba4:	00c40074 	movhi	r3,4097
10015ba8:	18dded04 	addi	r3,r3,30644
10015bac:	98c04426 	beq	r19,r3,10015cc0 <_fseeko_r+0x210>
10015bb0:	10820014 	ori	r2,r2,2048
10015bb4:	8080030d 	sth	r2,12(r16)
10015bb8:	800b883a 	mov	r5,r16
10015bbc:	8809883a 	mov	r4,r17
10015bc0:	00151ac0 	call	100151ac <_fflush_r>
10015bc4:	1029883a 	mov	r20,r2
10015bc8:	103fd71e 	bne	r2,zero,10015b28 <_fseeko_r+0x78>
10015bcc:	81400717 	ldw	r5,28(r16)
10015bd0:	900f883a 	mov	r7,r18
10015bd4:	a80d883a 	mov	r6,r21
10015bd8:	8809883a 	mov	r4,r17
10015bdc:	983ee83a 	callr	r19
10015be0:	10bfffe0 	cmpeqi	r2,r2,-1
10015be4:	103fd01e 	bne	r2,zero,10015b28 <_fseeko_r+0x78>
10015be8:	81400c17 	ldw	r5,48(r16)
10015bec:	28000526 	beq	r5,zero,10015c04 <_fseeko_r+0x154>
10015bf0:	80801004 	addi	r2,r16,64
10015bf4:	28800226 	beq	r5,r2,10015c00 <_fseeko_r+0x150>
10015bf8:	8809883a 	mov	r4,r17
10015bfc:	00157980 	call	10015798 <_free_r>
10015c00:	80000c15 	stw	zero,48(r16)
10015c04:	8080030b 	ldhu	r2,12(r16)
10015c08:	80c00417 	ldw	r3,16(r16)
10015c0c:	80000115 	stw	zero,4(r16)
10015c10:	10bdf7cc 	andi	r2,r2,63455
10015c14:	80c00015 	stw	r3,0(r16)
10015c18:	8080030d 	sth	r2,12(r16)
10015c1c:	80001705 	stb	zero,92(r16)
10015c20:	80001745 	stb	zero,93(r16)
10015c24:	80001785 	stb	zero,94(r16)
10015c28:	800017c5 	stb	zero,95(r16)
10015c2c:	80001805 	stb	zero,96(r16)
10015c30:	80001845 	stb	zero,97(r16)
10015c34:	80001885 	stb	zero,98(r16)
10015c38:	800018c5 	stb	zero,99(r16)
10015c3c:	003fbb06 	br	10015b2c <_fseeko_r+0x7c>
10015c40:	800b883a 	mov	r5,r16
10015c44:	8809883a 	mov	r4,r17
10015c48:	00151ac0 	call	100151ac <_fflush_r>
10015c4c:	8080030b 	ldhu	r2,12(r16)
10015c50:	10c4000c 	andi	r3,r2,4096
10015c54:	18006e1e 	bne	r3,zero,10015e10 <_fseeko_r+0x360>
10015c58:	81400717 	ldw	r5,28(r16)
10015c5c:	01c00044 	movi	r7,1
10015c60:	000d883a 	mov	r6,zero
10015c64:	8809883a 	mov	r4,r17
10015c68:	983ee83a 	callr	r19
10015c6c:	1029883a 	mov	r20,r2
10015c70:	10bfffd8 	cmpnei	r2,r2,-1
10015c74:	103fac26 	beq	r2,zero,10015b28 <_fseeko_r+0x78>
10015c78:	8080030b 	ldhu	r2,12(r16)
10015c7c:	81000417 	ldw	r4,16(r16)
10015c80:	10c0010c 	andi	r3,r2,4
10015c84:	18006626 	beq	r3,zero,10015e20 <_fseeko_r+0x370>
10015c88:	80c00117 	ldw	r3,4(r16)
10015c8c:	80800c17 	ldw	r2,48(r16)
10015c90:	a0e9c83a 	sub	r20,r20,r3
10015c94:	10000226 	beq	r2,zero,10015ca0 <_fseeko_r+0x1f0>
10015c98:	81800f17 	ldw	r6,60(r16)
10015c9c:	a1a9c83a 	sub	r20,r20,r6
10015ca0:	ad2b883a 	add	r21,r21,r20
10015ca4:	05c00044 	movi	r23,1
10015ca8:	0025883a 	mov	r18,zero
10015cac:	203fb81e 	bne	r4,zero,10015b90 <_fseeko_r+0xe0>
10015cb0:	800b883a 	mov	r5,r16
10015cb4:	8809883a 	mov	r4,r17
10015cb8:	00161700 	call	10016170 <__smakebuf_r>
10015cbc:	003fb406 	br	10015b90 <_fseeko_r+0xe0>
10015cc0:	8140038f 	ldh	r5,14(r16)
10015cc4:	283fba16 	blt	r5,zero,10015bb0 <_fseeko_r+0x100>
10015cc8:	d80d883a 	mov	r6,sp
10015ccc:	8809883a 	mov	r4,r17
10015cd0:	0015f200 	call	10015f20 <_fstat_r>
10015cd4:	1000761e 	bne	r2,zero,10015eb0 <_fseeko_r+0x400>
10015cd8:	d8c00117 	ldw	r3,4(sp)
10015cdc:	01200014 	movui	r4,32768
10015ce0:	8080030b 	ldhu	r2,12(r16)
10015ce4:	18fc000c 	andi	r3,r3,61440
10015ce8:	193fb11e 	bne	r3,r4,10015bb0 <_fseeko_r+0x100>
10015cec:	10810014 	ori	r2,r2,1024
10015cf0:	00c10004 	movi	r3,1024
10015cf4:	80c01315 	stw	r3,76(r16)
10015cf8:	8080030d 	sth	r2,12(r16)
10015cfc:	90004f1e 	bne	r18,zero,10015e3c <_fseeko_r+0x38c>
10015d00:	a82d883a 	mov	r22,r21
10015d04:	b800551e 	bne	r23,zero,10015e5c <_fseeko_r+0x3ac>
10015d08:	8080030b 	ldhu	r2,12(r16)
10015d0c:	1084000c 	andi	r2,r2,4096
10015d10:	10005f26 	beq	r2,zero,10015e90 <_fseeko_r+0x3e0>
10015d14:	80801417 	ldw	r2,80(r16)
10015d18:	80c00117 	ldw	r3,4(r16)
10015d1c:	81400c17 	ldw	r5,48(r16)
10015d20:	1809883a 	mov	r4,r3
10015d24:	10e9c83a 	sub	r20,r2,r3
10015d28:	28005226 	beq	r5,zero,10015e74 <_fseeko_r+0x3c4>
10015d2c:	81800f17 	ldw	r6,60(r16)
10015d30:	a1a9c83a 	sub	r20,r20,r6
10015d34:	80800e17 	ldw	r2,56(r16)
10015d38:	81c00417 	ldw	r7,16(r16)
10015d3c:	a0e9883a 	add	r20,r20,r3
10015d40:	11c5c83a 	sub	r2,r2,r7
10015d44:	a0a9c83a 	sub	r20,r20,r2
10015d48:	1185883a 	add	r2,r2,r6
10015d4c:	b5000216 	blt	r22,r20,10015d58 <_fseeko_r+0x2a8>
10015d50:	a087883a 	add	r3,r20,r2
10015d54:	b0c05836 	bltu	r22,r3,10015eb8 <_fseeko_r+0x408>
10015d58:	85001317 	ldw	r20,76(r16)
10015d5c:	81400717 	ldw	r5,28(r16)
10015d60:	000f883a 	mov	r7,zero
10015d64:	0529c83a 	sub	r20,zero,r20
10015d68:	a5a8703a 	and	r20,r20,r22
10015d6c:	a00d883a 	mov	r6,r20
10015d70:	8809883a 	mov	r4,r17
10015d74:	983ee83a 	callr	r19
10015d78:	10bfffe0 	cmpeqi	r2,r2,-1
10015d7c:	103f8e1e 	bne	r2,zero,10015bb8 <_fseeko_r+0x108>
10015d80:	80800417 	ldw	r2,16(r16)
10015d84:	81400c17 	ldw	r5,48(r16)
10015d88:	80000115 	stw	zero,4(r16)
10015d8c:	80800015 	stw	r2,0(r16)
10015d90:	28000526 	beq	r5,zero,10015da8 <_fseeko_r+0x2f8>
10015d94:	80801004 	addi	r2,r16,64
10015d98:	28800226 	beq	r5,r2,10015da4 <_fseeko_r+0x2f4>
10015d9c:	8809883a 	mov	r4,r17
10015da0:	00157980 	call	10015798 <_free_r>
10015da4:	80000c15 	stw	zero,48(r16)
10015da8:	8080030b 	ldhu	r2,12(r16)
10015dac:	b529c83a 	sub	r20,r22,r20
10015db0:	10bff7cc 	andi	r2,r2,65503
10015db4:	8080030d 	sth	r2,12(r16)
10015db8:	a0000b26 	beq	r20,zero,10015de8 <_fseeko_r+0x338>
10015dbc:	800b883a 	mov	r5,r16
10015dc0:	8809883a 	mov	r4,r17
10015dc4:	00171a80 	call	100171a8 <__srefill_r>
10015dc8:	103f7b1e 	bne	r2,zero,10015bb8 <_fseeko_r+0x108>
10015dcc:	80800117 	ldw	r2,4(r16)
10015dd0:	153f7936 	bltu	r2,r20,10015bb8 <_fseeko_r+0x108>
10015dd4:	85800017 	ldw	r22,0(r16)
10015dd8:	1505c83a 	sub	r2,r2,r20
10015ddc:	80800115 	stw	r2,4(r16)
10015de0:	b529883a 	add	r20,r22,r20
10015de4:	85000015 	stw	r20,0(r16)
10015de8:	80001705 	stb	zero,92(r16)
10015dec:	80001745 	stb	zero,93(r16)
10015df0:	80001785 	stb	zero,94(r16)
10015df4:	800017c5 	stb	zero,95(r16)
10015df8:	80001805 	stb	zero,96(r16)
10015dfc:	80001845 	stb	zero,97(r16)
10015e00:	80001885 	stb	zero,98(r16)
10015e04:	800018c5 	stb	zero,99(r16)
10015e08:	0029883a 	mov	r20,zero
10015e0c:	003f4706 	br	10015b2c <_fseeko_r+0x7c>
10015e10:	10c0010c 	andi	r3,r2,4
10015e14:	85001417 	ldw	r20,80(r16)
10015e18:	81000417 	ldw	r4,16(r16)
10015e1c:	183f9a1e 	bne	r3,zero,10015c88 <_fseeko_r+0x1d8>
10015e20:	1080020c 	andi	r2,r2,8
10015e24:	103f9e26 	beq	r2,zero,10015ca0 <_fseeko_r+0x1f0>
10015e28:	80800017 	ldw	r2,0(r16)
10015e2c:	103f9c26 	beq	r2,zero,10015ca0 <_fseeko_r+0x1f0>
10015e30:	1105c83a 	sub	r2,r2,r4
10015e34:	a0a9883a 	add	r20,r20,r2
10015e38:	003f9906 	br	10015ca0 <_fseeko_r+0x1f0>
10015e3c:	8140038f 	ldh	r5,14(r16)
10015e40:	d80d883a 	mov	r6,sp
10015e44:	8809883a 	mov	r4,r17
10015e48:	0015f200 	call	10015f20 <_fstat_r>
10015e4c:	103f5a1e 	bne	r2,zero,10015bb8 <_fseeko_r+0x108>
10015e50:	dd800417 	ldw	r22,16(sp)
10015e54:	adad883a 	add	r22,r21,r22
10015e58:	b83fab26 	beq	r23,zero,10015d08 <_fseeko_r+0x258>
10015e5c:	81400c17 	ldw	r5,48(r16)
10015e60:	28000326 	beq	r5,zero,10015e70 <_fseeko_r+0x3c0>
10015e64:	80c00117 	ldw	r3,4(r16)
10015e68:	81800f17 	ldw	r6,60(r16)
10015e6c:	003fb106 	br	10015d34 <_fseeko_r+0x284>
10015e70:	81000117 	ldw	r4,4(r16)
10015e74:	80800017 	ldw	r2,0(r16)
10015e78:	81c00417 	ldw	r7,16(r16)
10015e7c:	000b883a 	mov	r5,zero
10015e80:	11c5c83a 	sub	r2,r2,r7
10015e84:	a0a9c83a 	sub	r20,r20,r2
10015e88:	2085883a 	add	r2,r4,r2
10015e8c:	003faf06 	br	10015d4c <_fseeko_r+0x29c>
10015e90:	81400717 	ldw	r5,28(r16)
10015e94:	01c00044 	movi	r7,1
10015e98:	000d883a 	mov	r6,zero
10015e9c:	8809883a 	mov	r4,r17
10015ea0:	983ee83a 	callr	r19
10015ea4:	10ffffe0 	cmpeqi	r3,r2,-1
10015ea8:	183f9b26 	beq	r3,zero,10015d18 <_fseeko_r+0x268>
10015eac:	003f4206 	br	10015bb8 <_fseeko_r+0x108>
10015eb0:	8080030b 	ldhu	r2,12(r16)
10015eb4:	003f3e06 	br	10015bb0 <_fseeko_r+0x100>
10015eb8:	b529c83a 	sub	r20,r22,r20
10015ebc:	3d0f883a 	add	r7,r7,r20
10015ec0:	1529c83a 	sub	r20,r2,r20
10015ec4:	81c00015 	stw	r7,0(r16)
10015ec8:	85000115 	stw	r20,4(r16)
10015ecc:	28000526 	beq	r5,zero,10015ee4 <_fseeko_r+0x434>
10015ed0:	80801004 	addi	r2,r16,64
10015ed4:	28800226 	beq	r5,r2,10015ee0 <_fseeko_r+0x430>
10015ed8:	8809883a 	mov	r4,r17
10015edc:	00157980 	call	10015798 <_free_r>
10015ee0:	80000c15 	stw	zero,48(r16)
10015ee4:	80c0030b 	ldhu	r3,12(r16)
10015ee8:	80001705 	stb	zero,92(r16)
10015eec:	18fff7cc 	andi	r3,r3,65503
10015ef0:	80c0030d 	sth	r3,12(r16)
10015ef4:	003fbd06 	br	10015dec <_fseeko_r+0x33c>
10015ef8:	00800744 	movi	r2,29
10015efc:	88800015 	stw	r2,0(r17)
10015f00:	053fffc4 	movi	r20,-1
10015f04:	003f0906 	br	10015b2c <_fseeko_r+0x7c>

10015f08 <fseeko>:
10015f08:	008400f4 	movhi	r2,4099
10015f0c:	300f883a 	mov	r7,r6
10015f10:	280d883a 	mov	r6,r5
10015f14:	200b883a 	mov	r5,r4
10015f18:	11219817 	ldw	r4,-31136(r2)
10015f1c:	0015ab01 	jmpi	10015ab0 <_fseeko_r>

10015f20 <_fstat_r>:
10015f20:	defffe04 	addi	sp,sp,-8
10015f24:	2805883a 	mov	r2,r5
10015f28:	dc000015 	stw	r16,0(sp)
10015f2c:	300b883a 	mov	r5,r6
10015f30:	2021883a 	mov	r16,r4
10015f34:	1009883a 	mov	r4,r2
10015f38:	008400f4 	movhi	r2,4099
10015f3c:	dfc00115 	stw	ra,4(sp)
10015f40:	10295b15 	stw	zero,-23188(r2)
10015f44:	00227280 	call	10022728 <fstat>
10015f48:	10ffffd8 	cmpnei	r3,r2,-1
10015f4c:	18000426 	beq	r3,zero,10015f60 <_fstat_r+0x40>
10015f50:	dfc00117 	ldw	ra,4(sp)
10015f54:	dc000017 	ldw	r16,0(sp)
10015f58:	dec00204 	addi	sp,sp,8
10015f5c:	f800283a 	ret
10015f60:	00c400f4 	movhi	r3,4099
10015f64:	18e95b17 	ldw	r3,-23188(r3)
10015f68:	183ff926 	beq	r3,zero,10015f50 <_fstat_r+0x30>
10015f6c:	80c00015 	stw	r3,0(r16)
10015f70:	dfc00117 	ldw	ra,4(sp)
10015f74:	dc000017 	ldw	r16,0(sp)
10015f78:	dec00204 	addi	sp,sp,8
10015f7c:	f800283a 	ret

10015f80 <_fwalk>:
10015f80:	defffa04 	addi	sp,sp,-24
10015f84:	dc800215 	stw	r18,8(sp)
10015f88:	dfc00515 	stw	ra,20(sp)
10015f8c:	dd000415 	stw	r20,16(sp)
10015f90:	dcc00315 	stw	r19,12(sp)
10015f94:	dc400115 	stw	r17,4(sp)
10015f98:	dc000015 	stw	r16,0(sp)
10015f9c:	2480b804 	addi	r18,r4,736
10015fa0:	90001e26 	beq	r18,zero,1001601c <_fwalk+0x9c>
10015fa4:	2827883a 	mov	r19,r5
10015fa8:	0029883a 	mov	r20,zero
10015fac:	94400117 	ldw	r17,4(r18)
10015fb0:	94000217 	ldw	r16,8(r18)
10015fb4:	8c7fffc4 	addi	r17,r17,-1
10015fb8:	88000d16 	blt	r17,zero,10015ff0 <_fwalk+0x70>
10015fbc:	8080030b 	ldhu	r2,12(r16)
10015fc0:	8c7fffc4 	addi	r17,r17,-1
10015fc4:	108000b0 	cmpltui	r2,r2,2
10015fc8:	1000061e 	bne	r2,zero,10015fe4 <_fwalk+0x64>
10015fcc:	8080038f 	ldh	r2,14(r16)
10015fd0:	8009883a 	mov	r4,r16
10015fd4:	10bfffe0 	cmpeqi	r2,r2,-1
10015fd8:	1000021e 	bne	r2,zero,10015fe4 <_fwalk+0x64>
10015fdc:	983ee83a 	callr	r19
10015fe0:	a0a8b03a 	or	r20,r20,r2
10015fe4:	88bfffd8 	cmpnei	r2,r17,-1
10015fe8:	84001a04 	addi	r16,r16,104
10015fec:	103ff31e 	bne	r2,zero,10015fbc <_fwalk+0x3c>
10015ff0:	94800017 	ldw	r18,0(r18)
10015ff4:	903fed1e 	bne	r18,zero,10015fac <_fwalk+0x2c>
10015ff8:	a005883a 	mov	r2,r20
10015ffc:	dfc00517 	ldw	ra,20(sp)
10016000:	dd000417 	ldw	r20,16(sp)
10016004:	dcc00317 	ldw	r19,12(sp)
10016008:	dc800217 	ldw	r18,8(sp)
1001600c:	dc400117 	ldw	r17,4(sp)
10016010:	dc000017 	ldw	r16,0(sp)
10016014:	dec00604 	addi	sp,sp,24
10016018:	f800283a 	ret
1001601c:	0029883a 	mov	r20,zero
10016020:	003ff506 	br	10015ff8 <_fwalk+0x78>

10016024 <_fwalk_reent>:
10016024:	defff904 	addi	sp,sp,-28
10016028:	dc800215 	stw	r18,8(sp)
1001602c:	dfc00615 	stw	ra,24(sp)
10016030:	dd400515 	stw	r21,20(sp)
10016034:	dd000415 	stw	r20,16(sp)
10016038:	dcc00315 	stw	r19,12(sp)
1001603c:	dc400115 	stw	r17,4(sp)
10016040:	dc000015 	stw	r16,0(sp)
10016044:	2480b804 	addi	r18,r4,736
10016048:	90002126 	beq	r18,zero,100160d0 <_fwalk_reent+0xac>
1001604c:	2829883a 	mov	r20,r5
10016050:	2027883a 	mov	r19,r4
10016054:	002b883a 	mov	r21,zero
10016058:	94400117 	ldw	r17,4(r18)
1001605c:	94000217 	ldw	r16,8(r18)
10016060:	8c7fffc4 	addi	r17,r17,-1
10016064:	88000e16 	blt	r17,zero,100160a0 <_fwalk_reent+0x7c>
10016068:	8080030b 	ldhu	r2,12(r16)
1001606c:	8c7fffc4 	addi	r17,r17,-1
10016070:	108000b0 	cmpltui	r2,r2,2
10016074:	1000071e 	bne	r2,zero,10016094 <_fwalk_reent+0x70>
10016078:	8080038f 	ldh	r2,14(r16)
1001607c:	800b883a 	mov	r5,r16
10016080:	9809883a 	mov	r4,r19
10016084:	10bfffe0 	cmpeqi	r2,r2,-1
10016088:	1000021e 	bne	r2,zero,10016094 <_fwalk_reent+0x70>
1001608c:	a03ee83a 	callr	r20
10016090:	a8aab03a 	or	r21,r21,r2
10016094:	88bfffd8 	cmpnei	r2,r17,-1
10016098:	84001a04 	addi	r16,r16,104
1001609c:	103ff21e 	bne	r2,zero,10016068 <_fwalk_reent+0x44>
100160a0:	94800017 	ldw	r18,0(r18)
100160a4:	903fec1e 	bne	r18,zero,10016058 <_fwalk_reent+0x34>
100160a8:	a805883a 	mov	r2,r21
100160ac:	dfc00617 	ldw	ra,24(sp)
100160b0:	dd400517 	ldw	r21,20(sp)
100160b4:	dd000417 	ldw	r20,16(sp)
100160b8:	dcc00317 	ldw	r19,12(sp)
100160bc:	dc800217 	ldw	r18,8(sp)
100160c0:	dc400117 	ldw	r17,4(sp)
100160c4:	dc000017 	ldw	r16,0(sp)
100160c8:	dec00704 	addi	sp,sp,28
100160cc:	f800283a 	ret
100160d0:	002b883a 	mov	r21,zero
100160d4:	003ff406 	br	100160a8 <_fwalk_reent+0x84>

100160d8 <__swhatbuf_r>:
100160d8:	deffea04 	addi	sp,sp,-88
100160dc:	dc001215 	stw	r16,72(sp)
100160e0:	2821883a 	mov	r16,r5
100160e4:	2940038f 	ldh	r5,14(r5)
100160e8:	dc801415 	stw	r18,80(sp)
100160ec:	dc401315 	stw	r17,76(sp)
100160f0:	dfc01515 	stw	ra,84(sp)
100160f4:	3023883a 	mov	r17,r6
100160f8:	3825883a 	mov	r18,r7
100160fc:	28001016 	blt	r5,zero,10016140 <__swhatbuf_r+0x68>
10016100:	d80d883a 	mov	r6,sp
10016104:	0015f200 	call	10015f20 <_fstat_r>
10016108:	10000d16 	blt	r2,zero,10016140 <__swhatbuf_r+0x68>
1001610c:	d8c00117 	ldw	r3,4(sp)
10016110:	00820004 	movi	r2,2048
10016114:	18fc000c 	andi	r3,r3,61440
10016118:	18c80020 	cmpeqi	r3,r3,8192
1001611c:	90c00015 	stw	r3,0(r18)
10016120:	00c10004 	movi	r3,1024
10016124:	88c00015 	stw	r3,0(r17)
10016128:	dfc01517 	ldw	ra,84(sp)
1001612c:	dc801417 	ldw	r18,80(sp)
10016130:	dc401317 	ldw	r17,76(sp)
10016134:	dc001217 	ldw	r16,72(sp)
10016138:	dec01604 	addi	sp,sp,88
1001613c:	f800283a 	ret
10016140:	8080030b 	ldhu	r2,12(r16)
10016144:	90000015 	stw	zero,0(r18)
10016148:	1080200c 	andi	r2,r2,128
1001614c:	10000426 	beq	r2,zero,10016160 <__swhatbuf_r+0x88>
10016150:	00801004 	movi	r2,64
10016154:	88800015 	stw	r2,0(r17)
10016158:	0005883a 	mov	r2,zero
1001615c:	003ff206 	br	10016128 <__swhatbuf_r+0x50>
10016160:	00810004 	movi	r2,1024
10016164:	88800015 	stw	r2,0(r17)
10016168:	0005883a 	mov	r2,zero
1001616c:	003fee06 	br	10016128 <__swhatbuf_r+0x50>

10016170 <__smakebuf_r>:
10016170:	28c0030b 	ldhu	r3,12(r5)
10016174:	defffa04 	addi	sp,sp,-24
10016178:	dc000215 	stw	r16,8(sp)
1001617c:	dfc00515 	stw	ra,20(sp)
10016180:	dc800415 	stw	r18,16(sp)
10016184:	dc400315 	stw	r17,12(sp)
10016188:	18c0008c 	andi	r3,r3,2
1001618c:	2821883a 	mov	r16,r5
10016190:	18000b26 	beq	r3,zero,100161c0 <__smakebuf_r+0x50>
10016194:	28c010c4 	addi	r3,r5,67
10016198:	28c00015 	stw	r3,0(r5)
1001619c:	28c00415 	stw	r3,16(r5)
100161a0:	00c00044 	movi	r3,1
100161a4:	28c00515 	stw	r3,20(r5)
100161a8:	dfc00517 	ldw	ra,20(sp)
100161ac:	dc800417 	ldw	r18,16(sp)
100161b0:	dc400317 	ldw	r17,12(sp)
100161b4:	dc000217 	ldw	r16,8(sp)
100161b8:	dec00604 	addi	sp,sp,24
100161bc:	f800283a 	ret
100161c0:	d9c00104 	addi	r7,sp,4
100161c4:	d80d883a 	mov	r6,sp
100161c8:	2023883a 	mov	r17,r4
100161cc:	00160d80 	call	100160d8 <__swhatbuf_r>
100161d0:	1025883a 	mov	r18,r2
100161d4:	d8800117 	ldw	r2,4(sp)
100161d8:	1000131e 	bne	r2,zero,10016228 <__smakebuf_r+0xb8>
100161dc:	d9400017 	ldw	r5,0(sp)
100161e0:	8809883a 	mov	r4,r17
100161e4:	00162cc0 	call	100162cc <_malloc_r>
100161e8:	10001c26 	beq	r2,zero,1001625c <__smakebuf_r+0xec>
100161ec:	01040074 	movhi	r4,4097
100161f0:	21148f04 	addi	r4,r4,21052
100161f4:	80c0030b 	ldhu	r3,12(r16)
100161f8:	89000f15 	stw	r4,60(r17)
100161fc:	80800015 	stw	r2,0(r16)
10016200:	80800415 	stw	r2,16(r16)
10016204:	d8800017 	ldw	r2,0(sp)
10016208:	d9400117 	ldw	r5,4(sp)
1001620c:	18c02014 	ori	r3,r3,128
10016210:	80c0030d 	sth	r3,12(r16)
10016214:	80800515 	stw	r2,20(r16)
10016218:	28001c1e 	bne	r5,zero,1001628c <__smakebuf_r+0x11c>
1001621c:	90c6b03a 	or	r3,r18,r3
10016220:	80c0030d 	sth	r3,12(r16)
10016224:	003fe006 	br	100161a8 <__smakebuf_r+0x38>
10016228:	8140038f 	ldh	r5,14(r16)
1001622c:	8809883a 	mov	r4,r17
10016230:	001bfa80 	call	1001bfa8 <_isatty_r>
10016234:	103fe926 	beq	r2,zero,100161dc <__smakebuf_r+0x6c>
10016238:	8080030b 	ldhu	r2,12(r16)
1001623c:	80c010c4 	addi	r3,r16,67
10016240:	80c00015 	stw	r3,0(r16)
10016244:	10800054 	ori	r2,r2,1
10016248:	8080030d 	sth	r2,12(r16)
1001624c:	00800044 	movi	r2,1
10016250:	80c00415 	stw	r3,16(r16)
10016254:	80800515 	stw	r2,20(r16)
10016258:	003fe006 	br	100161dc <__smakebuf_r+0x6c>
1001625c:	8080030b 	ldhu	r2,12(r16)
10016260:	10c0800c 	andi	r3,r2,512
10016264:	183fd01e 	bne	r3,zero,100161a8 <__smakebuf_r+0x38>
10016268:	10bfff0c 	andi	r2,r2,65532
1001626c:	10800094 	ori	r2,r2,2
10016270:	80c010c4 	addi	r3,r16,67
10016274:	8080030d 	sth	r2,12(r16)
10016278:	00800044 	movi	r2,1
1001627c:	80c00015 	stw	r3,0(r16)
10016280:	80c00415 	stw	r3,16(r16)
10016284:	80800515 	stw	r2,20(r16)
10016288:	003fc706 	br	100161a8 <__smakebuf_r+0x38>
1001628c:	8140038f 	ldh	r5,14(r16)
10016290:	8809883a 	mov	r4,r17
10016294:	001bfa80 	call	1001bfa8 <_isatty_r>
10016298:	80c0030b 	ldhu	r3,12(r16)
1001629c:	103fdf26 	beq	r2,zero,1001621c <__smakebuf_r+0xac>
100162a0:	18ffff0c 	andi	r3,r3,65532
100162a4:	18c00054 	ori	r3,r3,1
100162a8:	003fdc06 	br	1001621c <__smakebuf_r+0xac>

100162ac <malloc>:
100162ac:	008400f4 	movhi	r2,4099
100162b0:	200b883a 	mov	r5,r4
100162b4:	11219817 	ldw	r4,-31136(r2)
100162b8:	00162cc1 	jmpi	100162cc <_malloc_r>

100162bc <free>:
100162bc:	008400f4 	movhi	r2,4099
100162c0:	200b883a 	mov	r5,r4
100162c4:	11219817 	ldw	r4,-31136(r2)
100162c8:	00157981 	jmpi	10015798 <_free_r>

100162cc <_malloc_r>:
100162cc:	defff604 	addi	sp,sp,-40
100162d0:	dc400115 	stw	r17,4(sp)
100162d4:	2c4002c4 	addi	r17,r5,11
100162d8:	dc800215 	stw	r18,8(sp)
100162dc:	dfc00915 	stw	ra,36(sp)
100162e0:	df000815 	stw	fp,32(sp)
100162e4:	ddc00715 	stw	r23,28(sp)
100162e8:	dd800615 	stw	r22,24(sp)
100162ec:	dd400515 	stw	r21,20(sp)
100162f0:	dd000415 	stw	r20,16(sp)
100162f4:	dcc00315 	stw	r19,12(sp)
100162f8:	dc000015 	stw	r16,0(sp)
100162fc:	888005e8 	cmpgeui	r2,r17,23
10016300:	2025883a 	mov	r18,r4
10016304:	10001b1e 	bne	r2,zero,10016374 <_malloc_r+0xa8>
10016308:	29400468 	cmpgeui	r5,r5,17
1001630c:	2800951e 	bne	r5,zero,10016564 <_malloc_r+0x298>
10016310:	0022cb80 	call	10022cb8 <__malloc_lock>
10016314:	04400404 	movi	r17,16
10016318:	00800604 	movi	r2,24
1001631c:	01800084 	movi	r6,2
10016320:	04c400b4 	movhi	r19,4098
10016324:	9cdba804 	addi	r19,r19,28320
10016328:	9885883a 	add	r2,r19,r2
1001632c:	14000117 	ldw	r16,4(r2)
10016330:	10fffe04 	addi	r3,r2,-8
10016334:	80c09e26 	beq	r16,r3,100165b0 <_malloc_r+0x2e4>
10016338:	80800117 	ldw	r2,4(r16)
1001633c:	81000317 	ldw	r4,12(r16)
10016340:	00ffff04 	movi	r3,-4
10016344:	10c4703a 	and	r2,r2,r3
10016348:	81400217 	ldw	r5,8(r16)
1001634c:	8085883a 	add	r2,r16,r2
10016350:	10c00117 	ldw	r3,4(r2)
10016354:	29000315 	stw	r4,12(r5)
10016358:	21400215 	stw	r5,8(r4)
1001635c:	18c00054 	ori	r3,r3,1
10016360:	10c00115 	stw	r3,4(r2)
10016364:	9009883a 	mov	r4,r18
10016368:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001636c:	80800204 	addi	r2,r16,8
10016370:	00007f06 	br	10016570 <_malloc_r+0x2a4>
10016374:	00bffe04 	movi	r2,-8
10016378:	88a2703a 	and	r17,r17,r2
1001637c:	88007916 	blt	r17,zero,10016564 <_malloc_r+0x298>
10016380:	89407836 	bltu	r17,r5,10016564 <_malloc_r+0x298>
10016384:	0022cb80 	call	10022cb8 <__malloc_lock>
10016388:	88807e28 	cmpgeui	r2,r17,504
1001638c:	10013326 	beq	r2,zero,1001685c <_malloc_r+0x590>
10016390:	8804d27a 	srli	r2,r17,9
10016394:	10008226 	beq	r2,zero,100165a0 <_malloc_r+0x2d4>
10016398:	10c00168 	cmpgeui	r3,r2,5
1001639c:	1801151e 	bne	r3,zero,100167f4 <_malloc_r+0x528>
100163a0:	8804d1ba 	srli	r2,r17,6
100163a4:	11800e44 	addi	r6,r2,57
100163a8:	300a90fa 	slli	r5,r6,3
100163ac:	12000e04 	addi	r8,r2,56
100163b0:	04c400b4 	movhi	r19,4098
100163b4:	9cdba804 	addi	r19,r19,28320
100163b8:	994b883a 	add	r5,r19,r5
100163bc:	2c000117 	ldw	r16,4(r5)
100163c0:	297ffe04 	addi	r5,r5,-8
100163c4:	2c001126 	beq	r5,r16,1001640c <_malloc_r+0x140>
100163c8:	80800117 	ldw	r2,4(r16)
100163cc:	00ffff04 	movi	r3,-4
100163d0:	10c4703a 	and	r2,r2,r3
100163d4:	1447c83a 	sub	r3,r2,r17
100163d8:	19000408 	cmpgei	r4,r3,16
100163dc:	2000e81e 	bne	r4,zero,10016780 <_malloc_r+0x4b4>
100163e0:	1800e90e 	bge	r3,zero,10016788 <_malloc_r+0x4bc>
100163e4:	01ffff04 	movi	r7,-4
100163e8:	00000606 	br	10016404 <_malloc_r+0x138>
100163ec:	80800117 	ldw	r2,4(r16)
100163f0:	11c4703a 	and	r2,r2,r7
100163f4:	1447c83a 	sub	r3,r2,r17
100163f8:	19000408 	cmpgei	r4,r3,16
100163fc:	2000e01e 	bne	r4,zero,10016780 <_malloc_r+0x4b4>
10016400:	1800e10e 	bge	r3,zero,10016788 <_malloc_r+0x4bc>
10016404:	84000317 	ldw	r16,12(r16)
10016408:	2c3ff81e 	bne	r5,r16,100163ec <_malloc_r+0x120>
1001640c:	9c000417 	ldw	r16,16(r19)
10016410:	020400b4 	movhi	r8,4098
10016414:	421baa04 	addi	r8,r8,28328
10016418:	82006c26 	beq	r16,r8,100165cc <_malloc_r+0x300>
1001641c:	80c00117 	ldw	r3,4(r16)
10016420:	00bfff04 	movi	r2,-4
10016424:	1884703a 	and	r2,r3,r2
10016428:	1447c83a 	sub	r3,r2,r17
1001642c:	19000410 	cmplti	r4,r3,16
10016430:	20011526 	beq	r4,zero,10016888 <_malloc_r+0x5bc>
10016434:	9a000515 	stw	r8,20(r19)
10016438:	9a000415 	stw	r8,16(r19)
1001643c:	18010a0e 	bge	r3,zero,10016868 <_malloc_r+0x59c>
10016440:	10c08028 	cmpgeui	r3,r2,512
10016444:	1800d21e 	bne	r3,zero,10016790 <_malloc_r+0x4c4>
10016448:	1004d0fa 	srli	r2,r2,3
1001644c:	99400117 	ldw	r5,4(r19)
10016450:	10c00044 	addi	r3,r2,1
10016454:	1009d0ba 	srai	r4,r2,2
10016458:	180690fa 	slli	r3,r3,3
1001645c:	00800044 	movi	r2,1
10016460:	1104983a 	sll	r2,r2,r4
10016464:	98c7883a 	add	r3,r19,r3
10016468:	19000017 	ldw	r4,0(r3)
1001646c:	1144b03a 	or	r2,r2,r5
10016470:	197ffe04 	addi	r5,r3,-8
10016474:	81400315 	stw	r5,12(r16)
10016478:	81000215 	stw	r4,8(r16)
1001647c:	98800115 	stw	r2,4(r19)
10016480:	1c000015 	stw	r16,0(r3)
10016484:	24000315 	stw	r16,12(r4)
10016488:	3007d0ba 	srai	r3,r6,2
1001648c:	01000044 	movi	r4,1
10016490:	20c8983a 	sll	r4,r4,r3
10016494:	11005236 	bltu	r2,r4,100165e0 <_malloc_r+0x314>
10016498:	2086703a 	and	r3,r4,r2
1001649c:	18000a1e 	bne	r3,zero,100164c8 <_malloc_r+0x1fc>
100164a0:	00ffff04 	movi	r3,-4
100164a4:	2109883a 	add	r4,r4,r4
100164a8:	30cc703a 	and	r6,r6,r3
100164ac:	2086703a 	and	r3,r4,r2
100164b0:	31800104 	addi	r6,r6,4
100164b4:	1800041e 	bne	r3,zero,100164c8 <_malloc_r+0x1fc>
100164b8:	2109883a 	add	r4,r4,r4
100164bc:	2086703a 	and	r3,r4,r2
100164c0:	31800104 	addi	r6,r6,4
100164c4:	183ffc26 	beq	r3,zero,100164b8 <_malloc_r+0x1ec>
100164c8:	027fff04 	movi	r9,-4
100164cc:	301490fa 	slli	r10,r6,3
100164d0:	3017883a 	mov	r11,r6
100164d4:	9a95883a 	add	r10,r19,r10
100164d8:	500f883a 	mov	r7,r10
100164dc:	3c000317 	ldw	r16,12(r7)
100164e0:	3c00cd26 	beq	r7,r16,10016818 <_malloc_r+0x54c>
100164e4:	80800117 	ldw	r2,4(r16)
100164e8:	1244703a 	and	r2,r2,r9
100164ec:	1447c83a 	sub	r3,r2,r17
100164f0:	19400408 	cmpgei	r5,r3,16
100164f4:	2800081e 	bne	r5,zero,10016518 <_malloc_r+0x24c>
100164f8:	1800cc0e 	bge	r3,zero,1001682c <_malloc_r+0x560>
100164fc:	84000317 	ldw	r16,12(r16)
10016500:	3c00c526 	beq	r7,r16,10016818 <_malloc_r+0x54c>
10016504:	80800117 	ldw	r2,4(r16)
10016508:	1244703a 	and	r2,r2,r9
1001650c:	1447c83a 	sub	r3,r2,r17
10016510:	19400410 	cmplti	r5,r3,16
10016514:	283ff81e 	bne	r5,zero,100164f8 <_malloc_r+0x22c>
10016518:	81000317 	ldw	r4,12(r16)
1001651c:	81400217 	ldw	r5,8(r16)
10016520:	89800054 	ori	r6,r17,1
10016524:	81800115 	stw	r6,4(r16)
10016528:	29000315 	stw	r4,12(r5)
1001652c:	21400215 	stw	r5,8(r4)
10016530:	8463883a 	add	r17,r16,r17
10016534:	9c400515 	stw	r17,20(r19)
10016538:	9c400415 	stw	r17,16(r19)
1001653c:	19000054 	ori	r4,r3,1
10016540:	89000115 	stw	r4,4(r17)
10016544:	8085883a 	add	r2,r16,r2
10016548:	8a000315 	stw	r8,12(r17)
1001654c:	8a000215 	stw	r8,8(r17)
10016550:	10c00015 	stw	r3,0(r2)
10016554:	9009883a 	mov	r4,r18
10016558:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001655c:	80800204 	addi	r2,r16,8
10016560:	00000306 	br	10016570 <_malloc_r+0x2a4>
10016564:	00800304 	movi	r2,12
10016568:	90800015 	stw	r2,0(r18)
1001656c:	0005883a 	mov	r2,zero
10016570:	dfc00917 	ldw	ra,36(sp)
10016574:	df000817 	ldw	fp,32(sp)
10016578:	ddc00717 	ldw	r23,28(sp)
1001657c:	dd800617 	ldw	r22,24(sp)
10016580:	dd400517 	ldw	r21,20(sp)
10016584:	dd000417 	ldw	r20,16(sp)
10016588:	dcc00317 	ldw	r19,12(sp)
1001658c:	dc800217 	ldw	r18,8(sp)
10016590:	dc400117 	ldw	r17,4(sp)
10016594:	dc000017 	ldw	r16,0(sp)
10016598:	dec00a04 	addi	sp,sp,40
1001659c:	f800283a 	ret
100165a0:	01408004 	movi	r5,512
100165a4:	01801004 	movi	r6,64
100165a8:	02000fc4 	movi	r8,63
100165ac:	003f8006 	br	100163b0 <_malloc_r+0xe4>
100165b0:	14000317 	ldw	r16,12(r2)
100165b4:	31800084 	addi	r6,r6,2
100165b8:	143f5f1e 	bne	r2,r16,10016338 <_malloc_r+0x6c>
100165bc:	9c000417 	ldw	r16,16(r19)
100165c0:	020400b4 	movhi	r8,4098
100165c4:	421baa04 	addi	r8,r8,28328
100165c8:	823f941e 	bne	r16,r8,1001641c <_malloc_r+0x150>
100165cc:	3007d0ba 	srai	r3,r6,2
100165d0:	01000044 	movi	r4,1
100165d4:	98800117 	ldw	r2,4(r19)
100165d8:	20c8983a 	sll	r4,r4,r3
100165dc:	113fae2e 	bgeu	r2,r4,10016498 <_malloc_r+0x1cc>
100165e0:	9c000217 	ldw	r16,8(r19)
100165e4:	00bfff04 	movi	r2,-4
100165e8:	85000117 	ldw	r20,4(r16)
100165ec:	a0ac703a 	and	r22,r20,r2
100165f0:	b4400336 	bltu	r22,r17,10016600 <_malloc_r+0x334>
100165f4:	b445c83a 	sub	r2,r22,r17
100165f8:	10c00408 	cmpgei	r3,r2,16
100165fc:	1800561e 	bne	r3,zero,10016758 <_malloc_r+0x48c>
10016600:	008400f4 	movhi	r2,4099
10016604:	10a19917 	ldw	r2,-31132(r2)
10016608:	00c400f4 	movhi	r3,4099
1001660c:	1d295e17 	ldw	r20,-23176(r3)
10016610:	10bfffd8 	cmpnei	r2,r2,-1
10016614:	85ab883a 	add	r21,r16,r22
10016618:	8d29883a 	add	r20,r17,r20
1001661c:	1000c826 	beq	r2,zero,10016940 <_malloc_r+0x674>
10016620:	a50403c4 	addi	r20,r20,4111
10016624:	00bc0004 	movi	r2,-4096
10016628:	a0a8703a 	and	r20,r20,r2
1001662c:	a00b883a 	mov	r5,r20
10016630:	9009883a 	mov	r4,r18
10016634:	00173740 	call	10017374 <_sbrk_r>
10016638:	102f883a 	mov	r23,r2
1001663c:	10bfffd8 	cmpnei	r2,r2,-1
10016640:	10009a26 	beq	r2,zero,100168ac <_malloc_r+0x5e0>
10016644:	bd409836 	bltu	r23,r21,100168a8 <_malloc_r+0x5dc>
10016648:	008400f4 	movhi	r2,4099
1001664c:	10a9ae17 	ldw	r2,-22856(r2)
10016650:	00c400f4 	movhi	r3,4099
10016654:	a085883a 	add	r2,r20,r2
10016658:	18a9ae15 	stw	r2,-22856(r3)
1001665c:	1007883a 	mov	r3,r2
10016660:	adc0dd26 	beq	r21,r23,100169d8 <_malloc_r+0x70c>
10016664:	008400f4 	movhi	r2,4099
10016668:	10a19917 	ldw	r2,-31132(r2)
1001666c:	10bfffd8 	cmpnei	r2,r2,-1
10016670:	1000e026 	beq	r2,zero,100169f4 <_malloc_r+0x728>
10016674:	bd6bc83a 	sub	r21,r23,r21
10016678:	a8c7883a 	add	r3,r21,r3
1001667c:	008400f4 	movhi	r2,4099
10016680:	10e9ae15 	stw	r3,-22856(r2)
10016684:	bf0001cc 	andi	fp,r23,7
10016688:	e000b626 	beq	fp,zero,10016964 <_malloc_r+0x698>
1001668c:	bf2fc83a 	sub	r23,r23,fp
10016690:	bdc00204 	addi	r23,r23,8
10016694:	00840204 	movi	r2,4104
10016698:	1705c83a 	sub	r2,r2,fp
1001669c:	bd29883a 	add	r20,r23,r20
100166a0:	1505c83a 	sub	r2,r2,r20
100166a4:	1543ffcc 	andi	r21,r2,4095
100166a8:	a80b883a 	mov	r5,r21
100166ac:	9009883a 	mov	r4,r18
100166b0:	00173740 	call	10017374 <_sbrk_r>
100166b4:	10ffffe0 	cmpeqi	r3,r2,-1
100166b8:	1800e41e 	bne	r3,zero,10016a4c <_malloc_r+0x780>
100166bc:	15c5c83a 	sub	r2,r2,r23
100166c0:	1569883a 	add	r20,r2,r21
100166c4:	008400f4 	movhi	r2,4099
100166c8:	10a9ae17 	ldw	r2,-22856(r2)
100166cc:	9dc00215 	stw	r23,8(r19)
100166d0:	a5000054 	ori	r20,r20,1
100166d4:	a885883a 	add	r2,r21,r2
100166d8:	00c400f4 	movhi	r3,4099
100166dc:	18a9ae15 	stw	r2,-22856(r3)
100166e0:	bd000115 	stw	r20,4(r23)
100166e4:	84c0c626 	beq	r16,r19,10016a00 <_malloc_r+0x734>
100166e8:	b0c00428 	cmpgeui	r3,r22,16
100166ec:	1800c626 	beq	r3,zero,10016a08 <_malloc_r+0x73c>
100166f0:	81000117 	ldw	r4,4(r16)
100166f4:	017ffe04 	movi	r5,-8
100166f8:	b0fffd04 	addi	r3,r22,-12
100166fc:	1946703a 	and	r3,r3,r5
10016700:	2100004c 	andi	r4,r4,1
10016704:	20c8b03a 	or	r4,r4,r3
10016708:	81000115 	stw	r4,4(r16)
1001670c:	01400144 	movi	r5,5
10016710:	80c9883a 	add	r4,r16,r3
10016714:	21400115 	stw	r5,4(r4)
10016718:	21400215 	stw	r5,8(r4)
1001671c:	18c00428 	cmpgeui	r3,r3,16
10016720:	1800cf1e 	bne	r3,zero,10016a60 <_malloc_r+0x794>
10016724:	bd000117 	ldw	r20,4(r23)
10016728:	b821883a 	mov	r16,r23
1001672c:	00c400f4 	movhi	r3,4099
10016730:	18e95d17 	ldw	r3,-23180(r3)
10016734:	1880022e 	bgeu	r3,r2,10016740 <_malloc_r+0x474>
10016738:	00c400f4 	movhi	r3,4099
1001673c:	18a95d15 	stw	r2,-23180(r3)
10016740:	00c400f4 	movhi	r3,4099
10016744:	18e95c17 	ldw	r3,-23184(r3)
10016748:	18805a2e 	bgeu	r3,r2,100168b4 <_malloc_r+0x5e8>
1001674c:	00c400f4 	movhi	r3,4099
10016750:	18a95c15 	stw	r2,-23184(r3)
10016754:	00005706 	br	100168b4 <_malloc_r+0x5e8>
10016758:	88c00054 	ori	r3,r17,1
1001675c:	80c00115 	stw	r3,4(r16)
10016760:	8463883a 	add	r17,r16,r17
10016764:	10800054 	ori	r2,r2,1
10016768:	9c400215 	stw	r17,8(r19)
1001676c:	88800115 	stw	r2,4(r17)
10016770:	9009883a 	mov	r4,r18
10016774:	0022cdc0 	call	10022cdc <__malloc_unlock>
10016778:	80800204 	addi	r2,r16,8
1001677c:	003f7c06 	br	10016570 <_malloc_r+0x2a4>
10016780:	400d883a 	mov	r6,r8
10016784:	003f2106 	br	1001640c <_malloc_r+0x140>
10016788:	81000317 	ldw	r4,12(r16)
1001678c:	003eee06 	br	10016348 <_malloc_r+0x7c>
10016790:	1006d27a 	srli	r3,r2,9
10016794:	19000168 	cmpgeui	r4,r3,5
10016798:	20003e26 	beq	r4,zero,10016894 <_malloc_r+0x5c8>
1001679c:	19000568 	cmpgeui	r4,r3,21
100167a0:	20007a1e 	bne	r4,zero,1001698c <_malloc_r+0x6c0>
100167a4:	19401704 	addi	r5,r3,92
100167a8:	280a90fa 	slli	r5,r5,3
100167ac:	190016c4 	addi	r4,r3,91
100167b0:	994b883a 	add	r5,r19,r5
100167b4:	28c00017 	ldw	r3,0(r5)
100167b8:	297ffe04 	addi	r5,r5,-8
100167bc:	28c06226 	beq	r5,r3,10016948 <_malloc_r+0x67c>
100167c0:	01ffff04 	movi	r7,-4
100167c4:	19000117 	ldw	r4,4(r3)
100167c8:	21c8703a 	and	r4,r4,r7
100167cc:	1100022e 	bgeu	r2,r4,100167d8 <_malloc_r+0x50c>
100167d0:	18c00217 	ldw	r3,8(r3)
100167d4:	28fffb1e 	bne	r5,r3,100167c4 <_malloc_r+0x4f8>
100167d8:	19400317 	ldw	r5,12(r3)
100167dc:	98800117 	ldw	r2,4(r19)
100167e0:	81400315 	stw	r5,12(r16)
100167e4:	80c00215 	stw	r3,8(r16)
100167e8:	2c000215 	stw	r16,8(r5)
100167ec:	1c000315 	stw	r16,12(r3)
100167f0:	003f2506 	br	10016488 <_malloc_r+0x1bc>
100167f4:	10c00568 	cmpgeui	r3,r2,21
100167f8:	18003826 	beq	r3,zero,100168dc <_malloc_r+0x610>
100167fc:	10c01568 	cmpgeui	r3,r2,85
10016800:	1800691e 	bne	r3,zero,100169a8 <_malloc_r+0x6dc>
10016804:	8804d33a 	srli	r2,r17,12
10016808:	11801bc4 	addi	r6,r2,111
1001680c:	12001b84 	addi	r8,r2,110
10016810:	300a90fa 	slli	r5,r6,3
10016814:	003ee606 	br	100163b0 <_malloc_r+0xe4>
10016818:	5ac00044 	addi	r11,r11,1
1001681c:	588000cc 	andi	r2,r11,3
10016820:	39c00204 	addi	r7,r7,8
10016824:	103f2d1e 	bne	r2,zero,100164dc <_malloc_r+0x210>
10016828:	00003306 	br	100168f8 <_malloc_r+0x62c>
1001682c:	8085883a 	add	r2,r16,r2
10016830:	10c00117 	ldw	r3,4(r2)
10016834:	81000317 	ldw	r4,12(r16)
10016838:	81400217 	ldw	r5,8(r16)
1001683c:	18c00054 	ori	r3,r3,1
10016840:	10c00115 	stw	r3,4(r2)
10016844:	29000315 	stw	r4,12(r5)
10016848:	21400215 	stw	r5,8(r4)
1001684c:	9009883a 	mov	r4,r18
10016850:	0022cdc0 	call	10022cdc <__malloc_unlock>
10016854:	80800204 	addi	r2,r16,8
10016858:	003f4506 	br	10016570 <_malloc_r+0x2a4>
1001685c:	880cd0fa 	srli	r6,r17,3
10016860:	88800204 	addi	r2,r17,8
10016864:	003eae06 	br	10016320 <_malloc_r+0x54>
10016868:	8085883a 	add	r2,r16,r2
1001686c:	10c00117 	ldw	r3,4(r2)
10016870:	9009883a 	mov	r4,r18
10016874:	18c00054 	ori	r3,r3,1
10016878:	10c00115 	stw	r3,4(r2)
1001687c:	0022cdc0 	call	10022cdc <__malloc_unlock>
10016880:	80800204 	addi	r2,r16,8
10016884:	003f3a06 	br	10016570 <_malloc_r+0x2a4>
10016888:	89000054 	ori	r4,r17,1
1001688c:	81000115 	stw	r4,4(r16)
10016890:	003f2706 	br	10016530 <_malloc_r+0x264>
10016894:	1006d1ba 	srli	r3,r2,6
10016898:	19400e44 	addi	r5,r3,57
1001689c:	19000e04 	addi	r4,r3,56
100168a0:	280a90fa 	slli	r5,r5,3
100168a4:	003fc206 	br	100167b0 <_malloc_r+0x4e4>
100168a8:	84c04626 	beq	r16,r19,100169c4 <_malloc_r+0x6f8>
100168ac:	9c000217 	ldw	r16,8(r19)
100168b0:	85000117 	ldw	r20,4(r16)
100168b4:	00bfff04 	movi	r2,-4
100168b8:	a0a8703a 	and	r20,r20,r2
100168bc:	a445c83a 	sub	r2,r20,r17
100168c0:	a4400236 	bltu	r20,r17,100168cc <_malloc_r+0x600>
100168c4:	10c00408 	cmpgei	r3,r2,16
100168c8:	183fa31e 	bne	r3,zero,10016758 <_malloc_r+0x48c>
100168cc:	9009883a 	mov	r4,r18
100168d0:	0022cdc0 	call	10022cdc <__malloc_unlock>
100168d4:	0005883a 	mov	r2,zero
100168d8:	003f2506 	br	10016570 <_malloc_r+0x2a4>
100168dc:	11801704 	addi	r6,r2,92
100168e0:	120016c4 	addi	r8,r2,91
100168e4:	300a90fa 	slli	r5,r6,3
100168e8:	003eb106 	br	100163b0 <_malloc_r+0xe4>
100168ec:	50800217 	ldw	r2,8(r10)
100168f0:	31bfffc4 	addi	r6,r6,-1
100168f4:	1280701e 	bne	r2,r10,10016ab8 <_malloc_r+0x7ec>
100168f8:	308000cc 	andi	r2,r6,3
100168fc:	52bffe04 	addi	r10,r10,-8
10016900:	103ffa1e 	bne	r2,zero,100168ec <_malloc_r+0x620>
10016904:	98c00117 	ldw	r3,4(r19)
10016908:	0104303a 	nor	r2,zero,r4
1001690c:	10c4703a 	and	r2,r2,r3
10016910:	98800115 	stw	r2,4(r19)
10016914:	2109883a 	add	r4,r4,r4
10016918:	113f3136 	bltu	r2,r4,100165e0 <_malloc_r+0x314>
1001691c:	203f3026 	beq	r4,zero,100165e0 <_malloc_r+0x314>
10016920:	2086703a 	and	r3,r4,r2
10016924:	1800041e 	bne	r3,zero,10016938 <_malloc_r+0x66c>
10016928:	2109883a 	add	r4,r4,r4
1001692c:	2086703a 	and	r3,r4,r2
10016930:	5ac00104 	addi	r11,r11,4
10016934:	183ffc26 	beq	r3,zero,10016928 <_malloc_r+0x65c>
10016938:	580d883a 	mov	r6,r11
1001693c:	003ee306 	br	100164cc <_malloc_r+0x200>
10016940:	a5000404 	addi	r20,r20,16
10016944:	003f3906 	br	1001662c <_malloc_r+0x360>
10016948:	2009d0ba 	srai	r4,r4,2
1001694c:	00800044 	movi	r2,1
10016950:	99c00117 	ldw	r7,4(r19)
10016954:	1104983a 	sll	r2,r2,r4
10016958:	11c4b03a 	or	r2,r2,r7
1001695c:	98800115 	stw	r2,4(r19)
10016960:	003f9f06 	br	100167e0 <_malloc_r+0x514>
10016964:	bd05883a 	add	r2,r23,r20
10016968:	0085c83a 	sub	r2,zero,r2
1001696c:	1543ffcc 	andi	r21,r2,4095
10016970:	a80b883a 	mov	r5,r21
10016974:	9009883a 	mov	r4,r18
10016978:	00173740 	call	10017374 <_sbrk_r>
1001697c:	10ffffe0 	cmpeqi	r3,r2,-1
10016980:	183f4e26 	beq	r3,zero,100166bc <_malloc_r+0x3f0>
10016984:	002b883a 	mov	r21,zero
10016988:	003f4e06 	br	100166c4 <_malloc_r+0x3f8>
1001698c:	19001568 	cmpgeui	r4,r3,85
10016990:	2000201e 	bne	r4,zero,10016a14 <_malloc_r+0x748>
10016994:	1006d33a 	srli	r3,r2,12
10016998:	19401bc4 	addi	r5,r3,111
1001699c:	19001b84 	addi	r4,r3,110
100169a0:	280a90fa 	slli	r5,r5,3
100169a4:	003f8206 	br	100167b0 <_malloc_r+0x4e4>
100169a8:	10c05568 	cmpgeui	r3,r2,341
100169ac:	1800201e 	bne	r3,zero,10016a30 <_malloc_r+0x764>
100169b0:	8804d3fa 	srli	r2,r17,15
100169b4:	11801e04 	addi	r6,r2,120
100169b8:	12001dc4 	addi	r8,r2,119
100169bc:	300a90fa 	slli	r5,r6,3
100169c0:	003e7b06 	br	100163b0 <_malloc_r+0xe4>
100169c4:	008400f4 	movhi	r2,4099
100169c8:	10e9ae17 	ldw	r3,-22856(r2)
100169cc:	a0c7883a 	add	r3,r20,r3
100169d0:	10e9ae15 	stw	r3,-22856(r2)
100169d4:	003f2306 	br	10016664 <_malloc_r+0x398>
100169d8:	a903ffcc 	andi	r4,r21,4095
100169dc:	203f211e 	bne	r4,zero,10016664 <_malloc_r+0x398>
100169e0:	9c000217 	ldw	r16,8(r19)
100169e4:	b529883a 	add	r20,r22,r20
100169e8:	a5000054 	ori	r20,r20,1
100169ec:	85000115 	stw	r20,4(r16)
100169f0:	003f4e06 	br	1001672c <_malloc_r+0x460>
100169f4:	008400f4 	movhi	r2,4099
100169f8:	15e19915 	stw	r23,-31132(r2)
100169fc:	003f2106 	br	10016684 <_malloc_r+0x3b8>
10016a00:	b821883a 	mov	r16,r23
10016a04:	003f4906 	br	1001672c <_malloc_r+0x460>
10016a08:	00800044 	movi	r2,1
10016a0c:	b8800115 	stw	r2,4(r23)
10016a10:	003fae06 	br	100168cc <_malloc_r+0x600>
10016a14:	19005568 	cmpgeui	r4,r3,341
10016a18:	2000191e 	bne	r4,zero,10016a80 <_malloc_r+0x7b4>
10016a1c:	1006d3fa 	srli	r3,r2,15
10016a20:	19401e04 	addi	r5,r3,120
10016a24:	19001dc4 	addi	r4,r3,119
10016a28:	280a90fa 	slli	r5,r5,3
10016a2c:	003f6006 	br	100167b0 <_malloc_r+0x4e4>
10016a30:	10815568 	cmpgeui	r2,r2,1365
10016a34:	1000191e 	bne	r2,zero,10016a9c <_malloc_r+0x7d0>
10016a38:	8804d4ba 	srli	r2,r17,18
10016a3c:	11801f44 	addi	r6,r2,125
10016a40:	12001f04 	addi	r8,r2,124
10016a44:	300a90fa 	slli	r5,r6,3
10016a48:	003e5906 	br	100163b0 <_malloc_r+0xe4>
10016a4c:	e73ffe04 	addi	fp,fp,-8
10016a50:	a729883a 	add	r20,r20,fp
10016a54:	a5e9c83a 	sub	r20,r20,r23
10016a58:	002b883a 	mov	r21,zero
10016a5c:	003f1906 	br	100166c4 <_malloc_r+0x3f8>
10016a60:	81400204 	addi	r5,r16,8
10016a64:	9009883a 	mov	r4,r18
10016a68:	00157980 	call	10015798 <_free_r>
10016a6c:	9c000217 	ldw	r16,8(r19)
10016a70:	008400f4 	movhi	r2,4099
10016a74:	10a9ae17 	ldw	r2,-22856(r2)
10016a78:	85000117 	ldw	r20,4(r16)
10016a7c:	003f2b06 	br	1001672c <_malloc_r+0x460>
10016a80:	18c15568 	cmpgeui	r3,r3,1365
10016a84:	1800091e 	bne	r3,zero,10016aac <_malloc_r+0x7e0>
10016a88:	1006d4ba 	srli	r3,r2,18
10016a8c:	19401f44 	addi	r5,r3,125
10016a90:	19001f04 	addi	r4,r3,124
10016a94:	280a90fa 	slli	r5,r5,3
10016a98:	003f4506 	br	100167b0 <_malloc_r+0x4e4>
10016a9c:	0140fe04 	movi	r5,1016
10016aa0:	01801fc4 	movi	r6,127
10016aa4:	02001f84 	movi	r8,126
10016aa8:	003e4106 	br	100163b0 <_malloc_r+0xe4>
10016aac:	0140fe04 	movi	r5,1016
10016ab0:	01001f84 	movi	r4,126
10016ab4:	003f3e06 	br	100167b0 <_malloc_r+0x4e4>
10016ab8:	98800117 	ldw	r2,4(r19)
10016abc:	003f9506 	br	10016914 <_malloc_r+0x648>

10016ac0 <memchr>:
10016ac0:	208000cc 	andi	r2,r4,3
10016ac4:	280f883a 	mov	r7,r5
10016ac8:	10003526 	beq	r2,zero,10016ba0 <memchr+0xe0>
10016acc:	30bfffc4 	addi	r2,r6,-1
10016ad0:	30001926 	beq	r6,zero,10016b38 <memchr+0x78>
10016ad4:	20c00003 	ldbu	r3,0(r4)
10016ad8:	29803fcc 	andi	r6,r5,255
10016adc:	30c0061e 	bne	r6,r3,10016af8 <memchr+0x38>
10016ae0:	00001706 	br	10016b40 <memchr+0x80>
10016ae4:	10bfffc4 	addi	r2,r2,-1
10016ae8:	10ffffe0 	cmpeqi	r3,r2,-1
10016aec:	1800121e 	bne	r3,zero,10016b38 <memchr+0x78>
10016af0:	20c00003 	ldbu	r3,0(r4)
10016af4:	19801226 	beq	r3,r6,10016b40 <memchr+0x80>
10016af8:	21000044 	addi	r4,r4,1
10016afc:	20c000cc 	andi	r3,r4,3
10016b00:	183ff81e 	bne	r3,zero,10016ae4 <memchr+0x24>
10016b04:	10c00128 	cmpgeui	r3,r2,4
10016b08:	18000f1e 	bne	r3,zero,10016b48 <memchr+0x88>
10016b0c:	10000a26 	beq	r2,zero,10016b38 <memchr+0x78>
10016b10:	20c00003 	ldbu	r3,0(r4)
10016b14:	29403fcc 	andi	r5,r5,255
10016b18:	19400926 	beq	r3,r5,10016b40 <memchr+0x80>
10016b1c:	2085883a 	add	r2,r4,r2
10016b20:	39403fcc 	andi	r5,r7,255
10016b24:	00000206 	br	10016b30 <memchr+0x70>
10016b28:	20c00003 	ldbu	r3,0(r4)
10016b2c:	19400426 	beq	r3,r5,10016b40 <memchr+0x80>
10016b30:	21000044 	addi	r4,r4,1
10016b34:	113ffc1e 	bne	r2,r4,10016b28 <memchr+0x68>
10016b38:	0005883a 	mov	r2,zero
10016b3c:	f800283a 	ret
10016b40:	2005883a 	mov	r2,r4
10016b44:	f800283a 	ret
10016b48:	280c923a 	slli	r6,r5,8
10016b4c:	2a403fcc 	andi	r9,r5,255
10016b50:	02bfbff4 	movhi	r10,65279
10016b54:	31bfffcc 	andi	r6,r6,65535
10016b58:	3246b03a 	or	r3,r6,r9
10016b5c:	1812943a 	slli	r9,r3,16
10016b60:	02202074 	movhi	r8,32897
10016b64:	52bfbfc4 	addi	r10,r10,-257
10016b68:	48d2b03a 	or	r9,r9,r3
10016b6c:	42202004 	addi	r8,r8,-32640
10016b70:	20c00017 	ldw	r3,0(r4)
10016b74:	48c6f03a 	xor	r3,r9,r3
10016b78:	1a8d883a 	add	r6,r3,r10
10016b7c:	00c6303a 	nor	r3,zero,r3
10016b80:	30c6703a 	and	r3,r6,r3
10016b84:	1a06703a 	and	r3,r3,r8
10016b88:	183fe11e 	bne	r3,zero,10016b10 <memchr+0x50>
10016b8c:	10bfff04 	addi	r2,r2,-4
10016b90:	10c00128 	cmpgeui	r3,r2,4
10016b94:	21000104 	addi	r4,r4,4
10016b98:	183ff51e 	bne	r3,zero,10016b70 <memchr+0xb0>
10016b9c:	003fdb06 	br	10016b0c <memchr+0x4c>
10016ba0:	3005883a 	mov	r2,r6
10016ba4:	003fd706 	br	10016b04 <memchr+0x44>

10016ba8 <memcmp>:
10016ba8:	30800130 	cmpltui	r2,r6,4
10016bac:	10000b1e 	bne	r2,zero,10016bdc <memcmp+0x34>
10016bb0:	2144b03a 	or	r2,r4,r5
10016bb4:	108000cc 	andi	r2,r2,3
10016bb8:	10001a1e 	bne	r2,zero,10016c24 <memcmp+0x7c>
10016bbc:	20c00017 	ldw	r3,0(r4)
10016bc0:	28800017 	ldw	r2,0(r5)
10016bc4:	1880171e 	bne	r3,r2,10016c24 <memcmp+0x7c>
10016bc8:	31bfff04 	addi	r6,r6,-4
10016bcc:	30800128 	cmpgeui	r2,r6,4
10016bd0:	21000104 	addi	r4,r4,4
10016bd4:	29400104 	addi	r5,r5,4
10016bd8:	103ff81e 	bne	r2,zero,10016bbc <memcmp+0x14>
10016bdc:	30ffffc4 	addi	r3,r6,-1
10016be0:	30000e26 	beq	r6,zero,10016c1c <memcmp+0x74>
10016be4:	29800003 	ldbu	r6,0(r5)
10016be8:	20800003 	ldbu	r2,0(r4)
10016bec:	30800f1e 	bne	r6,r2,10016c2c <memcmp+0x84>
10016bf0:	18800044 	addi	r2,r3,1
10016bf4:	20c00044 	addi	r3,r4,1
10016bf8:	2089883a 	add	r4,r4,r2
10016bfc:	00000506 	br	10016c14 <memcmp+0x6c>
10016c00:	18800003 	ldbu	r2,0(r3)
10016c04:	29800003 	ldbu	r6,0(r5)
10016c08:	18c00044 	addi	r3,r3,1
10016c0c:	10803fcc 	andi	r2,r2,255
10016c10:	1180061e 	bne	r2,r6,10016c2c <memcmp+0x84>
10016c14:	29400044 	addi	r5,r5,1
10016c18:	193ff91e 	bne	r3,r4,10016c00 <memcmp+0x58>
10016c1c:	0005883a 	mov	r2,zero
10016c20:	f800283a 	ret
10016c24:	30ffffc4 	addi	r3,r6,-1
10016c28:	003fee06 	br	10016be4 <memcmp+0x3c>
10016c2c:	1185c83a 	sub	r2,r2,r6
10016c30:	f800283a 	ret

10016c34 <memcpy>:
10016c34:	30c00430 	cmpltui	r3,r6,16
10016c38:	2005883a 	mov	r2,r4
10016c3c:	18002d1e 	bne	r3,zero,10016cf4 <memcpy+0xc0>
10016c40:	2906b03a 	or	r3,r5,r4
10016c44:	18c000cc 	andi	r3,r3,3
10016c48:	1800351e 	bne	r3,zero,10016d20 <memcpy+0xec>
10016c4c:	32fffc04 	addi	r11,r6,-16
10016c50:	5816d13a 	srli	r11,r11,4
10016c54:	2007883a 	mov	r3,r4
10016c58:	280f883a 	mov	r7,r5
10016c5c:	5ac00044 	addi	r11,r11,1
10016c60:	5816913a 	slli	r11,r11,4
10016c64:	22c9883a 	add	r4,r4,r11
10016c68:	3a000017 	ldw	r8,0(r7)
10016c6c:	3a800117 	ldw	r10,4(r7)
10016c70:	3a400217 	ldw	r9,8(r7)
10016c74:	39c00404 	addi	r7,r7,16
10016c78:	1a000015 	stw	r8,0(r3)
10016c7c:	3a3fff17 	ldw	r8,-4(r7)
10016c80:	1a800115 	stw	r10,4(r3)
10016c84:	1a400215 	stw	r9,8(r3)
10016c88:	18c00404 	addi	r3,r3,16
10016c8c:	1a3fff15 	stw	r8,-4(r3)
10016c90:	20fff51e 	bne	r4,r3,10016c68 <memcpy+0x34>
10016c94:	3100030c 	andi	r4,r6,12
10016c98:	2acb883a 	add	r5,r5,r11
10016c9c:	320003cc 	andi	r8,r6,15
10016ca0:	20002226 	beq	r4,zero,10016d2c <memcpy+0xf8>
10016ca4:	2809883a 	mov	r4,r5
10016ca8:	1813883a 	mov	r9,r3
10016cac:	21000104 	addi	r4,r4,4
10016cb0:	22bfff17 	ldw	r10,-4(r4)
10016cb4:	410fc83a 	sub	r7,r8,r4
10016cb8:	4a400104 	addi	r9,r9,4
10016cbc:	29cf883a 	add	r7,r5,r7
10016cc0:	4abfff15 	stw	r10,-4(r9)
10016cc4:	39c00128 	cmpgeui	r7,r7,4
10016cc8:	383ff81e 	bne	r7,zero,10016cac <memcpy+0x78>
10016ccc:	413fff04 	addi	r4,r8,-4
10016cd0:	2008d0ba 	srli	r4,r4,2
10016cd4:	318000cc 	andi	r6,r6,3
10016cd8:	31ffffc4 	addi	r7,r6,-1
10016cdc:	21000044 	addi	r4,r4,1
10016ce0:	200890ba 	slli	r4,r4,2
10016ce4:	1907883a 	add	r3,r3,r4
10016ce8:	290b883a 	add	r5,r5,r4
10016cec:	3000041e 	bne	r6,zero,10016d00 <memcpy+0xcc>
10016cf0:	f800283a 	ret
10016cf4:	2007883a 	mov	r3,r4
10016cf8:	31ffffc4 	addi	r7,r6,-1
10016cfc:	303ffc26 	beq	r6,zero,10016cf0 <memcpy+0xbc>
10016d00:	39c00044 	addi	r7,r7,1
10016d04:	19cf883a 	add	r7,r3,r7
10016d08:	29400044 	addi	r5,r5,1
10016d0c:	29bfffc3 	ldbu	r6,-1(r5)
10016d10:	18c00044 	addi	r3,r3,1
10016d14:	19bfffc5 	stb	r6,-1(r3)
10016d18:	19fffb1e 	bne	r3,r7,10016d08 <memcpy+0xd4>
10016d1c:	f800283a 	ret
10016d20:	31ffffc4 	addi	r7,r6,-1
10016d24:	2007883a 	mov	r3,r4
10016d28:	003ff506 	br	10016d00 <memcpy+0xcc>
10016d2c:	400d883a 	mov	r6,r8
10016d30:	003ff106 	br	10016cf8 <memcpy+0xc4>

10016d34 <memmove>:
10016d34:	2005883a 	mov	r2,r4
10016d38:	29000a2e 	bgeu	r5,r4,10016d64 <memmove+0x30>
10016d3c:	2989883a 	add	r4,r5,r6
10016d40:	1100082e 	bgeu	r2,r4,10016d64 <memmove+0x30>
10016d44:	1187883a 	add	r3,r2,r6
10016d48:	30003e26 	beq	r6,zero,10016e44 <memmove+0x110>
10016d4c:	213fffc4 	addi	r4,r4,-1
10016d50:	21400003 	ldbu	r5,0(r4)
10016d54:	18ffffc4 	addi	r3,r3,-1
10016d58:	19400005 	stb	r5,0(r3)
10016d5c:	10fffb1e 	bne	r2,r3,10016d4c <memmove+0x18>
10016d60:	f800283a 	ret
10016d64:	30c00430 	cmpltui	r3,r6,16
10016d68:	18000b26 	beq	r3,zero,10016d98 <memmove+0x64>
10016d6c:	1007883a 	mov	r3,r2
10016d70:	31ffffc4 	addi	r7,r6,-1
10016d74:	30003726 	beq	r6,zero,10016e54 <memmove+0x120>
10016d78:	39c00044 	addi	r7,r7,1
10016d7c:	29cf883a 	add	r7,r5,r7
10016d80:	29400044 	addi	r5,r5,1
10016d84:	29bfffc3 	ldbu	r6,-1(r5)
10016d88:	18c00044 	addi	r3,r3,1
10016d8c:	19bfffc5 	stb	r6,-1(r3)
10016d90:	29fffb1e 	bne	r5,r7,10016d80 <memmove+0x4c>
10016d94:	f800283a 	ret
10016d98:	2886b03a 	or	r3,r5,r2
10016d9c:	18c000cc 	andi	r3,r3,3
10016da0:	1800291e 	bne	r3,zero,10016e48 <memmove+0x114>
10016da4:	327ffc04 	addi	r9,r6,-16
10016da8:	4812d13a 	srli	r9,r9,4
10016dac:	280f883a 	mov	r7,r5
10016db0:	1007883a 	mov	r3,r2
10016db4:	4a400044 	addi	r9,r9,1
10016db8:	4812913a 	slli	r9,r9,4
10016dbc:	1251883a 	add	r8,r2,r9
10016dc0:	39000017 	ldw	r4,0(r7)
10016dc4:	18c00404 	addi	r3,r3,16
10016dc8:	39c00404 	addi	r7,r7,16
10016dcc:	193ffc15 	stw	r4,-16(r3)
10016dd0:	393ffd17 	ldw	r4,-12(r7)
10016dd4:	193ffd15 	stw	r4,-12(r3)
10016dd8:	393ffe17 	ldw	r4,-8(r7)
10016ddc:	193ffe15 	stw	r4,-8(r3)
10016de0:	393fff17 	ldw	r4,-4(r7)
10016de4:	193fff15 	stw	r4,-4(r3)
10016de8:	40fff51e 	bne	r8,r3,10016dc0 <memmove+0x8c>
10016dec:	3100030c 	andi	r4,r6,12
10016df0:	2a4b883a 	add	r5,r5,r9
10016df4:	320003cc 	andi	r8,r6,15
10016df8:	20001726 	beq	r4,zero,10016e58 <memmove+0x124>
10016dfc:	2813883a 	mov	r9,r5
10016e00:	180f883a 	mov	r7,r3
10016e04:	4a400104 	addi	r9,r9,4
10016e08:	39c00104 	addi	r7,r7,4
10016e0c:	4abfff17 	ldw	r10,-4(r9)
10016e10:	41c9c83a 	sub	r4,r8,r7
10016e14:	1909883a 	add	r4,r3,r4
10016e18:	3abfff15 	stw	r10,-4(r7)
10016e1c:	21000128 	cmpgeui	r4,r4,4
10016e20:	203ff81e 	bne	r4,zero,10016e04 <memmove+0xd0>
10016e24:	413fff04 	addi	r4,r8,-4
10016e28:	2008d0ba 	srli	r4,r4,2
10016e2c:	318000cc 	andi	r6,r6,3
10016e30:	21000044 	addi	r4,r4,1
10016e34:	200890ba 	slli	r4,r4,2
10016e38:	1907883a 	add	r3,r3,r4
10016e3c:	290b883a 	add	r5,r5,r4
10016e40:	003fcb06 	br	10016d70 <memmove+0x3c>
10016e44:	f800283a 	ret
10016e48:	31ffffc4 	addi	r7,r6,-1
10016e4c:	1007883a 	mov	r3,r2
10016e50:	003fc906 	br	10016d78 <memmove+0x44>
10016e54:	f800283a 	ret
10016e58:	400d883a 	mov	r6,r8
10016e5c:	003fc406 	br	10016d70 <memmove+0x3c>

10016e60 <memset>:
10016e60:	20c000cc 	andi	r3,r4,3
10016e64:	2005883a 	mov	r2,r4
10016e68:	18003626 	beq	r3,zero,10016f44 <memset+0xe4>
10016e6c:	31ffffc4 	addi	r7,r6,-1
10016e70:	30003326 	beq	r6,zero,10016f40 <memset+0xe0>
10016e74:	2811883a 	mov	r8,r5
10016e78:	2007883a 	mov	r3,r4
10016e7c:	00000306 	br	10016e8c <memset+0x2c>
10016e80:	39ffffc4 	addi	r7,r7,-1
10016e84:	39bfffe0 	cmpeqi	r6,r7,-1
10016e88:	30002d1e 	bne	r6,zero,10016f40 <memset+0xe0>
10016e8c:	18c00044 	addi	r3,r3,1
10016e90:	1a3fffc5 	stb	r8,-1(r3)
10016e94:	198000cc 	andi	r6,r3,3
10016e98:	303ff91e 	bne	r6,zero,10016e80 <memset+0x20>
10016e9c:	39000130 	cmpltui	r4,r7,4
10016ea0:	2000221e 	bne	r4,zero,10016f2c <memset+0xcc>
10016ea4:	29003fcc 	andi	r4,r5,255
10016ea8:	200c923a 	slli	r6,r4,8
10016eac:	3a000430 	cmpltui	r8,r7,16
10016eb0:	3108b03a 	or	r4,r6,r4
10016eb4:	200c943a 	slli	r6,r4,16
10016eb8:	310cb03a 	or	r6,r6,r4
10016ebc:	40000e1e 	bne	r8,zero,10016ef8 <memset+0x98>
10016ec0:	3a3ffc04 	addi	r8,r7,-16
10016ec4:	4010d13a 	srli	r8,r8,4
10016ec8:	42000044 	addi	r8,r8,1
10016ecc:	4010913a 	slli	r8,r8,4
10016ed0:	1a11883a 	add	r8,r3,r8
10016ed4:	19800015 	stw	r6,0(r3)
10016ed8:	19800115 	stw	r6,4(r3)
10016edc:	19800215 	stw	r6,8(r3)
10016ee0:	18c00404 	addi	r3,r3,16
10016ee4:	19bfff15 	stw	r6,-4(r3)
10016ee8:	40fffa1e 	bne	r8,r3,10016ed4 <memset+0x74>
10016eec:	3900030c 	andi	r4,r7,12
10016ef0:	39c003cc 	andi	r7,r7,15
10016ef4:	20000d26 	beq	r4,zero,10016f2c <memset+0xcc>
10016ef8:	1809883a 	mov	r4,r3
10016efc:	21000104 	addi	r4,r4,4
10016f00:	3911c83a 	sub	r8,r7,r4
10016f04:	1a11883a 	add	r8,r3,r8
10016f08:	21bfff15 	stw	r6,-4(r4)
10016f0c:	42000128 	cmpgeui	r8,r8,4
10016f10:	403ffa1e 	bne	r8,zero,10016efc <memset+0x9c>
10016f14:	393fff04 	addi	r4,r7,-4
10016f18:	2008d0ba 	srli	r4,r4,2
10016f1c:	39c000cc 	andi	r7,r7,3
10016f20:	21000044 	addi	r4,r4,1
10016f24:	200890ba 	slli	r4,r4,2
10016f28:	1907883a 	add	r3,r3,r4
10016f2c:	38000426 	beq	r7,zero,10016f40 <memset+0xe0>
10016f30:	19cf883a 	add	r7,r3,r7
10016f34:	18c00044 	addi	r3,r3,1
10016f38:	197fffc5 	stb	r5,-1(r3)
10016f3c:	38fffd1e 	bne	r7,r3,10016f34 <memset+0xd4>
10016f40:	f800283a 	ret
10016f44:	2007883a 	mov	r3,r4
10016f48:	300f883a 	mov	r7,r6
10016f4c:	003fd306 	br	10016e9c <memset+0x3c>

10016f50 <_open_r>:
10016f50:	defffe04 	addi	sp,sp,-8
10016f54:	2805883a 	mov	r2,r5
10016f58:	dc000015 	stw	r16,0(sp)
10016f5c:	300b883a 	mov	r5,r6
10016f60:	2021883a 	mov	r16,r4
10016f64:	380d883a 	mov	r6,r7
10016f68:	1009883a 	mov	r4,r2
10016f6c:	008400f4 	movhi	r2,4099
10016f70:	dfc00115 	stw	ra,4(sp)
10016f74:	10295b15 	stw	zero,-23188(r2)
10016f78:	0022df40 	call	10022df4 <open>
10016f7c:	10ffffd8 	cmpnei	r3,r2,-1
10016f80:	18000426 	beq	r3,zero,10016f94 <_open_r+0x44>
10016f84:	dfc00117 	ldw	ra,4(sp)
10016f88:	dc000017 	ldw	r16,0(sp)
10016f8c:	dec00204 	addi	sp,sp,8
10016f90:	f800283a 	ret
10016f94:	00c400f4 	movhi	r3,4099
10016f98:	18e95b17 	ldw	r3,-23188(r3)
10016f9c:	183ff926 	beq	r3,zero,10016f84 <_open_r+0x34>
10016fa0:	80c00015 	stw	r3,0(r16)
10016fa4:	dfc00117 	ldw	ra,4(sp)
10016fa8:	dc000017 	ldw	r16,0(sp)
10016fac:	dec00204 	addi	sp,sp,8
10016fb0:	f800283a 	ret

10016fb4 <_printf_r>:
10016fb4:	defffd04 	addi	sp,sp,-12
10016fb8:	2805883a 	mov	r2,r5
10016fbc:	dfc00015 	stw	ra,0(sp)
10016fc0:	d9800115 	stw	r6,4(sp)
10016fc4:	d9c00215 	stw	r7,8(sp)
10016fc8:	21400217 	ldw	r5,8(r4)
10016fcc:	d9c00104 	addi	r7,sp,4
10016fd0:	100d883a 	mov	r6,r2
10016fd4:	0017c0c0 	call	10017c0c <___vfprintf_internal_r>
10016fd8:	dfc00017 	ldw	ra,0(sp)
10016fdc:	dec00304 	addi	sp,sp,12
10016fe0:	f800283a 	ret

10016fe4 <printf>:
10016fe4:	defffc04 	addi	sp,sp,-16
10016fe8:	dfc00015 	stw	ra,0(sp)
10016fec:	d9400115 	stw	r5,4(sp)
10016ff0:	d9800215 	stw	r6,8(sp)
10016ff4:	d9c00315 	stw	r7,12(sp)
10016ff8:	008400f4 	movhi	r2,4099
10016ffc:	10a19817 	ldw	r2,-31136(r2)
10017000:	200b883a 	mov	r5,r4
10017004:	d9800104 	addi	r6,sp,4
10017008:	11000217 	ldw	r4,8(r2)
1001700c:	0019d6c0 	call	10019d6c <__vfprintf_internal>
10017010:	dfc00017 	ldw	ra,0(sp)
10017014:	dec00404 	addi	sp,sp,16
10017018:	f800283a 	ret

1001701c <_putchar_r>:
1001701c:	21800217 	ldw	r6,8(r4)
10017020:	001cfc01 	jmpi	1001cfc0 <_putc_r>

10017024 <putchar>:
10017024:	008400f4 	movhi	r2,4099
10017028:	10a19817 	ldw	r2,-31136(r2)
1001702c:	200b883a 	mov	r5,r4
10017030:	11800217 	ldw	r6,8(r2)
10017034:	1009883a 	mov	r4,r2
10017038:	001cfc01 	jmpi	1001cfc0 <_putc_r>

1001703c <_puts_r>:
1001703c:	defff504 	addi	sp,sp,-44
10017040:	dc000815 	stw	r16,32(sp)
10017044:	2021883a 	mov	r16,r4
10017048:	2809883a 	mov	r4,r5
1001704c:	dc400915 	stw	r17,36(sp)
10017050:	dfc00a15 	stw	ra,40(sp)
10017054:	2823883a 	mov	r17,r5
10017058:	00178f00 	call	100178f0 <strlen>
1001705c:	11000044 	addi	r4,r2,1
10017060:	d8800515 	stw	r2,20(sp)
10017064:	00800044 	movi	r2,1
10017068:	00c400b4 	movhi	r3,4098
1001706c:	d8800715 	stw	r2,28(sp)
10017070:	d8800404 	addi	r2,sp,16
10017074:	18d89604 	addi	r3,r3,25176
10017078:	d8800115 	stw	r2,4(sp)
1001707c:	00800084 	movi	r2,2
10017080:	dc400415 	stw	r17,16(sp)
10017084:	d8c00615 	stw	r3,24(sp)
10017088:	d9000315 	stw	r4,12(sp)
1001708c:	d8800215 	stw	r2,8(sp)
10017090:	81400217 	ldw	r5,8(r16)
10017094:	80000226 	beq	r16,zero,100170a0 <_puts_r+0x64>
10017098:	80800e17 	ldw	r2,56(r16)
1001709c:	10001326 	beq	r2,zero,100170ec <_puts_r+0xb0>
100170a0:	2880030b 	ldhu	r2,12(r5)
100170a4:	10c8000c 	andi	r3,r2,8192
100170a8:	1800061e 	bne	r3,zero,100170c4 <_puts_r+0x88>
100170ac:	28c01917 	ldw	r3,100(r5)
100170b0:	0137ffc4 	movi	r4,-8193
100170b4:	10880014 	ori	r2,r2,8192
100170b8:	1906703a 	and	r3,r3,r4
100170bc:	2880030d 	sth	r2,12(r5)
100170c0:	28c01915 	stw	r3,100(r5)
100170c4:	d9800104 	addi	r6,sp,4
100170c8:	8009883a 	mov	r4,r16
100170cc:	001bae40 	call	1001bae4 <__sfvwrite_r>
100170d0:	10000b1e 	bne	r2,zero,10017100 <_puts_r+0xc4>
100170d4:	00800284 	movi	r2,10
100170d8:	dfc00a17 	ldw	ra,40(sp)
100170dc:	dc400917 	ldw	r17,36(sp)
100170e0:	dc000817 	ldw	r16,32(sp)
100170e4:	dec00b04 	addi	sp,sp,44
100170e8:	f800283a 	ret
100170ec:	8009883a 	mov	r4,r16
100170f0:	d9400015 	stw	r5,0(sp)
100170f4:	00155300 	call	10015530 <__sinit>
100170f8:	d9400017 	ldw	r5,0(sp)
100170fc:	003fe806 	br	100170a0 <_puts_r+0x64>
10017100:	00bfffc4 	movi	r2,-1
10017104:	003ff406 	br	100170d8 <_puts_r+0x9c>

10017108 <puts>:
10017108:	008400f4 	movhi	r2,4099
1001710c:	200b883a 	mov	r5,r4
10017110:	11219817 	ldw	r4,-31136(r2)
10017114:	001703c1 	jmpi	1001703c <_puts_r>

10017118 <srand>:
10017118:	008400f4 	movhi	r2,4099
1001711c:	10a19817 	ldw	r2,-31136(r2)
10017120:	11002915 	stw	r4,164(r2)
10017124:	10002a15 	stw	zero,168(r2)
10017128:	f800283a 	ret

1001712c <rand>:
1001712c:	defffe04 	addi	sp,sp,-8
10017130:	008400f4 	movhi	r2,4099
10017134:	dc000015 	stw	r16,0(sp)
10017138:	14219817 	ldw	r16,-31136(r2)
1001713c:	dfc00115 	stw	ra,4(sp)
10017140:	01932574 	movhi	r6,19605
10017144:	81002917 	ldw	r4,164(r16)
10017148:	81402a17 	ldw	r5,168(r16)
1001714c:	01d614b4 	movhi	r7,22610
10017150:	319fcb44 	addi	r6,r6,32557
10017154:	39fd0b44 	addi	r7,r7,-3027
10017158:	001f31c0 	call	1001f31c <__muldi3>
1001715c:	11400044 	addi	r5,r2,1
10017160:	2885803a 	cmpltu	r2,r5,r2
10017164:	01200034 	movhi	r4,32768
10017168:	10c5883a 	add	r2,r2,r3
1001716c:	213fffc4 	addi	r4,r4,-1
10017170:	80802a15 	stw	r2,168(r16)
10017174:	1104703a 	and	r2,r2,r4
10017178:	81402915 	stw	r5,164(r16)
1001717c:	dfc00117 	ldw	ra,4(sp)
10017180:	dc000017 	ldw	r16,0(sp)
10017184:	dec00204 	addi	sp,sp,8
10017188:	f800283a 	ret

1001718c <lflush>:
1001718c:	2080030b 	ldhu	r2,12(r4)
10017190:	1080024c 	andi	r2,r2,9
10017194:	10800258 	cmpnei	r2,r2,9
10017198:	10000226 	beq	r2,zero,100171a4 <lflush+0x18>
1001719c:	0005883a 	mov	r2,zero
100171a0:	f800283a 	ret
100171a4:	001520c1 	jmpi	1001520c <fflush>

100171a8 <__srefill_r>:
100171a8:	defffc04 	addi	sp,sp,-16
100171ac:	dc400115 	stw	r17,4(sp)
100171b0:	dc000015 	stw	r16,0(sp)
100171b4:	dfc00315 	stw	ra,12(sp)
100171b8:	dc800215 	stw	r18,8(sp)
100171bc:	2023883a 	mov	r17,r4
100171c0:	2821883a 	mov	r16,r5
100171c4:	20000226 	beq	r4,zero,100171d0 <__srefill_r+0x28>
100171c8:	20800e17 	ldw	r2,56(r4)
100171cc:	10003a26 	beq	r2,zero,100172b8 <__srefill_r+0x110>
100171d0:	80c0030b 	ldhu	r3,12(r16)
100171d4:	1908000c 	andi	r4,r3,8192
100171d8:	1805883a 	mov	r2,r3
100171dc:	2000071e 	bne	r4,zero,100171fc <__srefill_r+0x54>
100171e0:	81001917 	ldw	r4,100(r16)
100171e4:	18880014 	ori	r2,r3,8192
100171e8:	00f7ffc4 	movi	r3,-8193
100171ec:	20c8703a 	and	r4,r4,r3
100171f0:	8080030d 	sth	r2,12(r16)
100171f4:	1007883a 	mov	r3,r2
100171f8:	81001915 	stw	r4,100(r16)
100171fc:	80000115 	stw	zero,4(r16)
10017200:	1100080c 	andi	r4,r2,32
10017204:	20004d1e 	bne	r4,zero,1001733c <__srefill_r+0x194>
10017208:	1100010c 	andi	r4,r2,4
1001720c:	20001c1e 	bne	r4,zero,10017280 <__srefill_r+0xd8>
10017210:	1100040c 	andi	r4,r2,16
10017214:	20005126 	beq	r4,zero,1001735c <__srefill_r+0x1b4>
10017218:	1080020c 	andi	r2,r2,8
1001721c:	1000371e 	bne	r2,zero,100172fc <__srefill_r+0x154>
10017220:	18c00114 	ori	r3,r3,4
10017224:	80c0030d 	sth	r3,12(r16)
10017228:	80800417 	ldw	r2,16(r16)
1001722c:	10003c26 	beq	r2,zero,10017320 <__srefill_r+0x178>
10017230:	8480030b 	ldhu	r18,12(r16)
10017234:	908000cc 	andi	r2,r18,3
10017238:	1000211e 	bne	r2,zero,100172c0 <__srefill_r+0x118>
1001723c:	81800417 	ldw	r6,16(r16)
10017240:	80800817 	ldw	r2,32(r16)
10017244:	81c00517 	ldw	r7,20(r16)
10017248:	81400717 	ldw	r5,28(r16)
1001724c:	81800015 	stw	r6,0(r16)
10017250:	8809883a 	mov	r4,r17
10017254:	103ee83a 	callr	r2
10017258:	1007883a 	mov	r3,r2
1001725c:	80800115 	stw	r2,4(r16)
10017260:	0005883a 	mov	r2,zero
10017264:	00c0370e 	bge	zero,r3,10017344 <__srefill_r+0x19c>
10017268:	dfc00317 	ldw	ra,12(sp)
1001726c:	dc800217 	ldw	r18,8(sp)
10017270:	dc400117 	ldw	r17,4(sp)
10017274:	dc000017 	ldw	r16,0(sp)
10017278:	dec00404 	addi	sp,sp,16
1001727c:	f800283a 	ret
10017280:	81400c17 	ldw	r5,48(r16)
10017284:	283fe826 	beq	r5,zero,10017228 <__srefill_r+0x80>
10017288:	80801004 	addi	r2,r16,64
1001728c:	28800226 	beq	r5,r2,10017298 <__srefill_r+0xf0>
10017290:	8809883a 	mov	r4,r17
10017294:	00157980 	call	10015798 <_free_r>
10017298:	80800f17 	ldw	r2,60(r16)
1001729c:	80000c15 	stw	zero,48(r16)
100172a0:	80800115 	stw	r2,4(r16)
100172a4:	103fe026 	beq	r2,zero,10017228 <__srefill_r+0x80>
100172a8:	80c00e17 	ldw	r3,56(r16)
100172ac:	0005883a 	mov	r2,zero
100172b0:	80c00015 	stw	r3,0(r16)
100172b4:	003fec06 	br	10017268 <__srefill_r+0xc0>
100172b8:	00155300 	call	10015530 <__sinit>
100172bc:	003fc406 	br	100171d0 <__srefill_r+0x28>
100172c0:	008400f4 	movhi	r2,4099
100172c4:	11219717 	ldw	r4,-31140(r2)
100172c8:	01440074 	movhi	r5,4097
100172cc:	00800044 	movi	r2,1
100172d0:	8080030d 	sth	r2,12(r16)
100172d4:	295c6304 	addi	r5,r5,29068
100172d8:	0015f800 	call	10015f80 <_fwalk>
100172dc:	9080024c 	andi	r2,r18,9
100172e0:	8480030d 	sth	r18,12(r16)
100172e4:	10800258 	cmpnei	r2,r2,9
100172e8:	103fd41e 	bne	r2,zero,1001723c <__srefill_r+0x94>
100172ec:	800b883a 	mov	r5,r16
100172f0:	8809883a 	mov	r4,r17
100172f4:	0014f840 	call	10014f84 <__sflush_r>
100172f8:	003fd006 	br	1001723c <__srefill_r+0x94>
100172fc:	800b883a 	mov	r5,r16
10017300:	8809883a 	mov	r4,r17
10017304:	00151ac0 	call	100151ac <_fflush_r>
10017308:	10000c1e 	bne	r2,zero,1001733c <__srefill_r+0x194>
1001730c:	80c0030b 	ldhu	r3,12(r16)
10017310:	80000215 	stw	zero,8(r16)
10017314:	80000615 	stw	zero,24(r16)
10017318:	18fffdcc 	andi	r3,r3,65527
1001731c:	003fc006 	br	10017220 <__srefill_r+0x78>
10017320:	800b883a 	mov	r5,r16
10017324:	8809883a 	mov	r4,r17
10017328:	00161700 	call	10016170 <__smakebuf_r>
1001732c:	003fc006 	br	10017230 <__srefill_r+0x88>
10017330:	10801014 	ori	r2,r2,64
10017334:	80000115 	stw	zero,4(r16)
10017338:	8080030d 	sth	r2,12(r16)
1001733c:	00bfffc4 	movi	r2,-1
10017340:	003fc906 	br	10017268 <__srefill_r+0xc0>
10017344:	8080030b 	ldhu	r2,12(r16)
10017348:	183ff91e 	bne	r3,zero,10017330 <__srefill_r+0x188>
1001734c:	10800814 	ori	r2,r2,32
10017350:	8080030d 	sth	r2,12(r16)
10017354:	00bfffc4 	movi	r2,-1
10017358:	003fc306 	br	10017268 <__srefill_r+0xc0>
1001735c:	00800244 	movi	r2,9
10017360:	88800015 	stw	r2,0(r17)
10017364:	18c01014 	ori	r3,r3,64
10017368:	80c0030d 	sth	r3,12(r16)
1001736c:	00bfffc4 	movi	r2,-1
10017370:	003fbd06 	br	10017268 <__srefill_r+0xc0>

10017374 <_sbrk_r>:
10017374:	defffe04 	addi	sp,sp,-8
10017378:	dc000015 	stw	r16,0(sp)
1001737c:	008400f4 	movhi	r2,4099
10017380:	2021883a 	mov	r16,r4
10017384:	2809883a 	mov	r4,r5
10017388:	dfc00115 	stw	ra,4(sp)
1001738c:	10295b15 	stw	zero,-23188(r2)
10017390:	00230d80 	call	100230d8 <sbrk>
10017394:	10ffffd8 	cmpnei	r3,r2,-1
10017398:	18000426 	beq	r3,zero,100173ac <_sbrk_r+0x38>
1001739c:	dfc00117 	ldw	ra,4(sp)
100173a0:	dc000017 	ldw	r16,0(sp)
100173a4:	dec00204 	addi	sp,sp,8
100173a8:	f800283a 	ret
100173ac:	00c400f4 	movhi	r3,4099
100173b0:	18e95b17 	ldw	r3,-23188(r3)
100173b4:	183ff926 	beq	r3,zero,1001739c <_sbrk_r+0x28>
100173b8:	80c00015 	stw	r3,0(r16)
100173bc:	dfc00117 	ldw	ra,4(sp)
100173c0:	dc000017 	ldw	r16,0(sp)
100173c4:	dec00204 	addi	sp,sp,8
100173c8:	f800283a 	ret

100173cc <_init_signal_r.part.0>:
100173cc:	defffe04 	addi	sp,sp,-8
100173d0:	01402004 	movi	r5,128
100173d4:	dc000015 	stw	r16,0(sp)
100173d8:	dfc00115 	stw	ra,4(sp)
100173dc:	2021883a 	mov	r16,r4
100173e0:	00162cc0 	call	100162cc <_malloc_r>
100173e4:	8080b715 	stw	r2,732(r16)
100173e8:	10000926 	beq	r2,zero,10017410 <_init_signal_r.part.0+0x44>
100173ec:	10c02004 	addi	r3,r2,128
100173f0:	10000015 	stw	zero,0(r2)
100173f4:	10800104 	addi	r2,r2,4
100173f8:	10fffd1e 	bne	r2,r3,100173f0 <_init_signal_r.part.0+0x24>
100173fc:	0005883a 	mov	r2,zero
10017400:	dfc00117 	ldw	ra,4(sp)
10017404:	dc000017 	ldw	r16,0(sp)
10017408:	dec00204 	addi	sp,sp,8
1001740c:	f800283a 	ret
10017410:	00bfffc4 	movi	r2,-1
10017414:	003ffa06 	br	10017400 <_init_signal_r.part.0+0x34>

10017418 <_init_signal_r>:
10017418:	2080b717 	ldw	r2,732(r4)
1001741c:	10000226 	beq	r2,zero,10017428 <_init_signal_r+0x10>
10017420:	0005883a 	mov	r2,zero
10017424:	f800283a 	ret
10017428:	00173cc1 	jmpi	100173cc <_init_signal_r.part.0>

1001742c <_signal_r>:
1001742c:	defffc04 	addi	sp,sp,-16
10017430:	dc000215 	stw	r16,8(sp)
10017434:	dfc00315 	stw	ra,12(sp)
10017438:	28c00830 	cmpltui	r3,r5,32
1001743c:	2021883a 	mov	r16,r4
10017440:	18000a26 	beq	r3,zero,1001746c <_signal_r+0x40>
10017444:	2080b717 	ldw	r2,732(r4)
10017448:	10000f26 	beq	r2,zero,10017488 <_signal_r+0x5c>
1001744c:	280a90ba 	slli	r5,r5,2
10017450:	114b883a 	add	r5,r2,r5
10017454:	28800017 	ldw	r2,0(r5)
10017458:	29800015 	stw	r6,0(r5)
1001745c:	dfc00317 	ldw	ra,12(sp)
10017460:	dc000217 	ldw	r16,8(sp)
10017464:	dec00404 	addi	sp,sp,16
10017468:	f800283a 	ret
1001746c:	00c00584 	movi	r3,22
10017470:	00bfffc4 	movi	r2,-1
10017474:	20c00015 	stw	r3,0(r4)
10017478:	dfc00317 	ldw	ra,12(sp)
1001747c:	dc000217 	ldw	r16,8(sp)
10017480:	dec00404 	addi	sp,sp,16
10017484:	f800283a 	ret
10017488:	d9800115 	stw	r6,4(sp)
1001748c:	d9400015 	stw	r5,0(sp)
10017490:	00173cc0 	call	100173cc <_init_signal_r.part.0>
10017494:	1000041e 	bne	r2,zero,100174a8 <_signal_r+0x7c>
10017498:	8080b717 	ldw	r2,732(r16)
1001749c:	d9800117 	ldw	r6,4(sp)
100174a0:	d9400017 	ldw	r5,0(sp)
100174a4:	003fe906 	br	1001744c <_signal_r+0x20>
100174a8:	00bfffc4 	movi	r2,-1
100174ac:	003feb06 	br	1001745c <_signal_r+0x30>

100174b0 <_raise_r>:
100174b0:	28800830 	cmpltui	r2,r5,32
100174b4:	10002926 	beq	r2,zero,1001755c <_raise_r+0xac>
100174b8:	2080b717 	ldw	r2,732(r4)
100174bc:	defffd04 	addi	sp,sp,-12
100174c0:	dc400115 	stw	r17,4(sp)
100174c4:	dc000015 	stw	r16,0(sp)
100174c8:	dfc00215 	stw	ra,8(sp)
100174cc:	2021883a 	mov	r16,r4
100174d0:	2823883a 	mov	r17,r5
100174d4:	10001126 	beq	r2,zero,1001751c <_raise_r+0x6c>
100174d8:	280690ba 	slli	r3,r5,2
100174dc:	10c5883a 	add	r2,r2,r3
100174e0:	10c00017 	ldw	r3,0(r2)
100174e4:	18000d26 	beq	r3,zero,1001751c <_raise_r+0x6c>
100174e8:	19000060 	cmpeqi	r4,r3,1
100174ec:	2000191e 	bne	r4,zero,10017554 <_raise_r+0xa4>
100174f0:	193fffd8 	cmpnei	r4,r3,-1
100174f4:	20001326 	beq	r4,zero,10017544 <_raise_r+0x94>
100174f8:	10000015 	stw	zero,0(r2)
100174fc:	2809883a 	mov	r4,r5
10017500:	183ee83a 	callr	r3
10017504:	0005883a 	mov	r2,zero
10017508:	dfc00217 	ldw	ra,8(sp)
1001750c:	dc400117 	ldw	r17,4(sp)
10017510:	dc000017 	ldw	r16,0(sp)
10017514:	dec00304 	addi	sp,sp,12
10017518:	f800283a 	ret
1001751c:	8009883a 	mov	r4,r16
10017520:	00176d40 	call	100176d4 <_getpid_r>
10017524:	880d883a 	mov	r6,r17
10017528:	100b883a 	mov	r5,r2
1001752c:	8009883a 	mov	r4,r16
10017530:	dfc00217 	ldw	ra,8(sp)
10017534:	dc400117 	ldw	r17,4(sp)
10017538:	dc000017 	ldw	r16,0(sp)
1001753c:	dec00304 	addi	sp,sp,12
10017540:	00176741 	jmpi	10017674 <_kill_r>
10017544:	00800584 	movi	r2,22
10017548:	80800015 	stw	r2,0(r16)
1001754c:	00800044 	movi	r2,1
10017550:	003fed06 	br	10017508 <_raise_r+0x58>
10017554:	0005883a 	mov	r2,zero
10017558:	003feb06 	br	10017508 <_raise_r+0x58>
1001755c:	00800584 	movi	r2,22
10017560:	20800015 	stw	r2,0(r4)
10017564:	00bfffc4 	movi	r2,-1
10017568:	f800283a 	ret

1001756c <__sigtramp_r>:
1001756c:	28800830 	cmpltui	r2,r5,32
10017570:	10002a26 	beq	r2,zero,1001761c <__sigtramp_r+0xb0>
10017574:	2080b717 	ldw	r2,732(r4)
10017578:	defffd04 	addi	sp,sp,-12
1001757c:	dc000115 	stw	r16,4(sp)
10017580:	dfc00215 	stw	ra,8(sp)
10017584:	2021883a 	mov	r16,r4
10017588:	10001526 	beq	r2,zero,100175e0 <__sigtramp_r+0x74>
1001758c:	280690ba 	slli	r3,r5,2
10017590:	10c5883a 	add	r2,r2,r3
10017594:	10c00017 	ldw	r3,0(r2)
10017598:	18000c26 	beq	r3,zero,100175cc <__sigtramp_r+0x60>
1001759c:	193fffe0 	cmpeqi	r4,r3,-1
100175a0:	20001a1e 	bne	r4,zero,1001760c <__sigtramp_r+0xa0>
100175a4:	19000060 	cmpeqi	r4,r3,1
100175a8:	2000131e 	bne	r4,zero,100175f8 <__sigtramp_r+0x8c>
100175ac:	10000015 	stw	zero,0(r2)
100175b0:	2809883a 	mov	r4,r5
100175b4:	183ee83a 	callr	r3
100175b8:	0005883a 	mov	r2,zero
100175bc:	dfc00217 	ldw	ra,8(sp)
100175c0:	dc000117 	ldw	r16,4(sp)
100175c4:	dec00304 	addi	sp,sp,12
100175c8:	f800283a 	ret
100175cc:	00800044 	movi	r2,1
100175d0:	dfc00217 	ldw	ra,8(sp)
100175d4:	dc000117 	ldw	r16,4(sp)
100175d8:	dec00304 	addi	sp,sp,12
100175dc:	f800283a 	ret
100175e0:	d9400015 	stw	r5,0(sp)
100175e4:	00173cc0 	call	100173cc <_init_signal_r.part.0>
100175e8:	10000a1e 	bne	r2,zero,10017614 <__sigtramp_r+0xa8>
100175ec:	8080b717 	ldw	r2,732(r16)
100175f0:	d9400017 	ldw	r5,0(sp)
100175f4:	003fe506 	br	1001758c <__sigtramp_r+0x20>
100175f8:	008000c4 	movi	r2,3
100175fc:	dfc00217 	ldw	ra,8(sp)
10017600:	dc000117 	ldw	r16,4(sp)
10017604:	dec00304 	addi	sp,sp,12
10017608:	f800283a 	ret
1001760c:	00800084 	movi	r2,2
10017610:	003fea06 	br	100175bc <__sigtramp_r+0x50>
10017614:	00bfffc4 	movi	r2,-1
10017618:	003fe806 	br	100175bc <__sigtramp_r+0x50>
1001761c:	00bfffc4 	movi	r2,-1
10017620:	f800283a 	ret

10017624 <raise>:
10017624:	008400f4 	movhi	r2,4099
10017628:	200b883a 	mov	r5,r4
1001762c:	11219817 	ldw	r4,-31136(r2)
10017630:	00174b01 	jmpi	100174b0 <_raise_r>

10017634 <signal>:
10017634:	008400f4 	movhi	r2,4099
10017638:	280d883a 	mov	r6,r5
1001763c:	200b883a 	mov	r5,r4
10017640:	11219817 	ldw	r4,-31136(r2)
10017644:	001742c1 	jmpi	1001742c <_signal_r>

10017648 <_init_signal>:
10017648:	008400f4 	movhi	r2,4099
1001764c:	11219817 	ldw	r4,-31136(r2)
10017650:	2080b717 	ldw	r2,732(r4)
10017654:	10000226 	beq	r2,zero,10017660 <_init_signal+0x18>
10017658:	0005883a 	mov	r2,zero
1001765c:	f800283a 	ret
10017660:	00173cc1 	jmpi	100173cc <_init_signal_r.part.0>

10017664 <__sigtramp>:
10017664:	008400f4 	movhi	r2,4099
10017668:	200b883a 	mov	r5,r4
1001766c:	11219817 	ldw	r4,-31136(r2)
10017670:	001756c1 	jmpi	1001756c <__sigtramp_r>

10017674 <_kill_r>:
10017674:	defffe04 	addi	sp,sp,-8
10017678:	2805883a 	mov	r2,r5
1001767c:	dc000015 	stw	r16,0(sp)
10017680:	300b883a 	mov	r5,r6
10017684:	2021883a 	mov	r16,r4
10017688:	1009883a 	mov	r4,r2
1001768c:	008400f4 	movhi	r2,4099
10017690:	dfc00115 	stw	ra,4(sp)
10017694:	10295b15 	stw	zero,-23188(r2)
10017698:	00229140 	call	10022914 <kill>
1001769c:	10ffffd8 	cmpnei	r3,r2,-1
100176a0:	18000426 	beq	r3,zero,100176b4 <_kill_r+0x40>
100176a4:	dfc00117 	ldw	ra,4(sp)
100176a8:	dc000017 	ldw	r16,0(sp)
100176ac:	dec00204 	addi	sp,sp,8
100176b0:	f800283a 	ret
100176b4:	00c400f4 	movhi	r3,4099
100176b8:	18e95b17 	ldw	r3,-23188(r3)
100176bc:	183ff926 	beq	r3,zero,100176a4 <_kill_r+0x30>
100176c0:	80c00015 	stw	r3,0(r16)
100176c4:	dfc00117 	ldw	ra,4(sp)
100176c8:	dc000017 	ldw	r16,0(sp)
100176cc:	dec00204 	addi	sp,sp,8
100176d0:	f800283a 	ret

100176d4 <_getpid_r>:
100176d4:	00227d81 	jmpi	100227d8 <getpid>

100176d8 <__sread>:
100176d8:	defffe04 	addi	sp,sp,-8
100176dc:	dc000015 	stw	r16,0(sp)
100176e0:	2821883a 	mov	r16,r5
100176e4:	2940038f 	ldh	r5,14(r5)
100176e8:	dfc00115 	stw	ra,4(sp)
100176ec:	001d16c0 	call	1001d16c <_read_r>
100176f0:	10000716 	blt	r2,zero,10017710 <__sread+0x38>
100176f4:	80c01417 	ldw	r3,80(r16)
100176f8:	1887883a 	add	r3,r3,r2
100176fc:	80c01415 	stw	r3,80(r16)
10017700:	dfc00117 	ldw	ra,4(sp)
10017704:	dc000017 	ldw	r16,0(sp)
10017708:	dec00204 	addi	sp,sp,8
1001770c:	f800283a 	ret
10017710:	80c0030b 	ldhu	r3,12(r16)
10017714:	18fbffcc 	andi	r3,r3,61439
10017718:	80c0030d 	sth	r3,12(r16)
1001771c:	dfc00117 	ldw	ra,4(sp)
10017720:	dc000017 	ldw	r16,0(sp)
10017724:	dec00204 	addi	sp,sp,8
10017728:	f800283a 	ret

1001772c <__seofread>:
1001772c:	0005883a 	mov	r2,zero
10017730:	f800283a 	ret

10017734 <__swrite>:
10017734:	2880030b 	ldhu	r2,12(r5)
10017738:	defffb04 	addi	sp,sp,-20
1001773c:	dcc00315 	stw	r19,12(sp)
10017740:	dc800215 	stw	r18,8(sp)
10017744:	dc400115 	stw	r17,4(sp)
10017748:	dc000015 	stw	r16,0(sp)
1001774c:	dfc00415 	stw	ra,16(sp)
10017750:	10c0400c 	andi	r3,r2,256
10017754:	2821883a 	mov	r16,r5
10017758:	2023883a 	mov	r17,r4
1001775c:	3025883a 	mov	r18,r6
10017760:	3827883a 	mov	r19,r7
10017764:	2940038f 	ldh	r5,14(r5)
10017768:	18000c1e 	bne	r3,zero,1001779c <__swrite+0x68>
1001776c:	10bbffcc 	andi	r2,r2,61439
10017770:	980f883a 	mov	r7,r19
10017774:	900d883a 	mov	r6,r18
10017778:	8809883a 	mov	r4,r17
1001777c:	8080030d 	sth	r2,12(r16)
10017780:	dfc00417 	ldw	ra,16(sp)
10017784:	dcc00317 	ldw	r19,12(sp)
10017788:	dc800217 	ldw	r18,8(sp)
1001778c:	dc400117 	ldw	r17,4(sp)
10017790:	dc000017 	ldw	r16,0(sp)
10017794:	dec00504 	addi	sp,sp,20
10017798:	0019e441 	jmpi	10019e44 <_write_r>
1001779c:	01c00084 	movi	r7,2
100177a0:	000d883a 	mov	r6,zero
100177a4:	001c0200 	call	1001c020 <_lseek_r>
100177a8:	8080030b 	ldhu	r2,12(r16)
100177ac:	8140038f 	ldh	r5,14(r16)
100177b0:	003fee06 	br	1001776c <__swrite+0x38>

100177b4 <__sseek>:
100177b4:	defffe04 	addi	sp,sp,-8
100177b8:	dc000015 	stw	r16,0(sp)
100177bc:	2821883a 	mov	r16,r5
100177c0:	2940038f 	ldh	r5,14(r5)
100177c4:	dfc00115 	stw	ra,4(sp)
100177c8:	001c0200 	call	1001c020 <_lseek_r>
100177cc:	10ffffd8 	cmpnei	r3,r2,-1
100177d0:	18000826 	beq	r3,zero,100177f4 <__sseek+0x40>
100177d4:	80c0030b 	ldhu	r3,12(r16)
100177d8:	80801415 	stw	r2,80(r16)
100177dc:	18c40014 	ori	r3,r3,4096
100177e0:	80c0030d 	sth	r3,12(r16)
100177e4:	dfc00117 	ldw	ra,4(sp)
100177e8:	dc000017 	ldw	r16,0(sp)
100177ec:	dec00204 	addi	sp,sp,8
100177f0:	f800283a 	ret
100177f4:	80c0030b 	ldhu	r3,12(r16)
100177f8:	18fbffcc 	andi	r3,r3,61439
100177fc:	80c0030d 	sth	r3,12(r16)
10017800:	dfc00117 	ldw	ra,4(sp)
10017804:	dc000017 	ldw	r16,0(sp)
10017808:	dec00204 	addi	sp,sp,8
1001780c:	f800283a 	ret

10017810 <__sclose>:
10017810:	2940038f 	ldh	r5,14(r5)
10017814:	001a0081 	jmpi	1001a008 <_close_r>

10017818 <strcmp>:
10017818:	2144b03a 	or	r2,r4,r5
1001781c:	108000cc 	andi	r2,r2,3
10017820:	1000171e 	bne	r2,zero,10017880 <strcmp+0x68>
10017824:	20800017 	ldw	r2,0(r4)
10017828:	28c00017 	ldw	r3,0(r5)
1001782c:	10c0141e 	bne	r2,r3,10017880 <strcmp+0x68>
10017830:	027fbff4 	movhi	r9,65279
10017834:	4a7fbfc4 	addi	r9,r9,-257
10017838:	1247883a 	add	r3,r2,r9
1001783c:	02202074 	movhi	r8,32897
10017840:	0084303a 	nor	r2,zero,r2
10017844:	1884703a 	and	r2,r3,r2
10017848:	42202004 	addi	r8,r8,-32640
1001784c:	1204703a 	and	r2,r2,r8
10017850:	10000226 	beq	r2,zero,1001785c <strcmp+0x44>
10017854:	00002406 	br	100178e8 <strcmp+0xd0>
10017858:	1000231e 	bne	r2,zero,100178e8 <strcmp+0xd0>
1001785c:	21000104 	addi	r4,r4,4
10017860:	20c00017 	ldw	r3,0(r4)
10017864:	29400104 	addi	r5,r5,4
10017868:	29800017 	ldw	r6,0(r5)
1001786c:	1a45883a 	add	r2,r3,r9
10017870:	00ce303a 	nor	r7,zero,r3
10017874:	11c4703a 	and	r2,r2,r7
10017878:	1204703a 	and	r2,r2,r8
1001787c:	19bff626 	beq	r3,r6,10017858 <strcmp+0x40>
10017880:	20800003 	ldbu	r2,0(r4)
10017884:	10c03fcc 	andi	r3,r2,255
10017888:	18c0201c 	xori	r3,r3,128
1001788c:	18ffe004 	addi	r3,r3,-128
10017890:	18000d26 	beq	r3,zero,100178c8 <strcmp+0xb0>
10017894:	29800007 	ldb	r6,0(r5)
10017898:	10803fcc 	andi	r2,r2,255
1001789c:	19800326 	beq	r3,r6,100178ac <strcmp+0x94>
100178a0:	00000a06 	br	100178cc <strcmp+0xb4>
100178a4:	29800007 	ldb	r6,0(r5)
100178a8:	11800b1e 	bne	r2,r6,100178d8 <strcmp+0xc0>
100178ac:	21000044 	addi	r4,r4,1
100178b0:	20c00003 	ldbu	r3,0(r4)
100178b4:	29400044 	addi	r5,r5,1
100178b8:	18803fcc 	andi	r2,r3,255
100178bc:	1080201c 	xori	r2,r2,128
100178c0:	10bfe004 	addi	r2,r2,-128
100178c4:	103ff71e 	bne	r2,zero,100178a4 <strcmp+0x8c>
100178c8:	0005883a 	mov	r2,zero
100178cc:	28c00003 	ldbu	r3,0(r5)
100178d0:	10c5c83a 	sub	r2,r2,r3
100178d4:	f800283a 	ret
100178d8:	18803fcc 	andi	r2,r3,255
100178dc:	28c00003 	ldbu	r3,0(r5)
100178e0:	10c5c83a 	sub	r2,r2,r3
100178e4:	f800283a 	ret
100178e8:	0005883a 	mov	r2,zero
100178ec:	f800283a 	ret

100178f0 <strlen>:
100178f0:	208000cc 	andi	r2,r4,3
100178f4:	10002026 	beq	r2,zero,10017978 <strlen+0x88>
100178f8:	20800007 	ldb	r2,0(r4)
100178fc:	10002026 	beq	r2,zero,10017980 <strlen+0x90>
10017900:	2005883a 	mov	r2,r4
10017904:	00000206 	br	10017910 <strlen+0x20>
10017908:	10c00007 	ldb	r3,0(r2)
1001790c:	18001826 	beq	r3,zero,10017970 <strlen+0x80>
10017910:	10800044 	addi	r2,r2,1
10017914:	10c000cc 	andi	r3,r2,3
10017918:	183ffb1e 	bne	r3,zero,10017908 <strlen+0x18>
1001791c:	11400017 	ldw	r5,0(r2)
10017920:	01ffbff4 	movhi	r7,65279
10017924:	39ffbfc4 	addi	r7,r7,-257
10017928:	29c7883a 	add	r3,r5,r7
1001792c:	01a02074 	movhi	r6,32897
10017930:	014a303a 	nor	r5,zero,r5
10017934:	1946703a 	and	r3,r3,r5
10017938:	31a02004 	addi	r6,r6,-32640
1001793c:	1986703a 	and	r3,r3,r6
10017940:	1800091e 	bne	r3,zero,10017968 <strlen+0x78>
10017944:	10800104 	addi	r2,r2,4
10017948:	11400017 	ldw	r5,0(r2)
1001794c:	29c7883a 	add	r3,r5,r7
10017950:	014a303a 	nor	r5,zero,r5
10017954:	1946703a 	and	r3,r3,r5
10017958:	1986703a 	and	r3,r3,r6
1001795c:	183ff926 	beq	r3,zero,10017944 <strlen+0x54>
10017960:	00000106 	br	10017968 <strlen+0x78>
10017964:	10800044 	addi	r2,r2,1
10017968:	10c00007 	ldb	r3,0(r2)
1001796c:	183ffd1e 	bne	r3,zero,10017964 <strlen+0x74>
10017970:	1105c83a 	sub	r2,r2,r4
10017974:	f800283a 	ret
10017978:	2005883a 	mov	r2,r4
1001797c:	003fe706 	br	1001791c <strlen+0x2c>
10017980:	0005883a 	mov	r2,zero
10017984:	f800283a 	ret

10017988 <_strtoul_l.isra.0>:
10017988:	defff704 	addi	sp,sp,-36
1001798c:	dd000515 	stw	r20,20(sp)
10017990:	dcc00415 	stw	r19,16(sp)
10017994:	dc800315 	stw	r18,12(sp)
10017998:	2029883a 	mov	r20,r4
1001799c:	dfc00815 	stw	ra,32(sp)
100179a0:	dd800715 	stw	r22,28(sp)
100179a4:	dd400615 	stw	r21,24(sp)
100179a8:	dc400215 	stw	r17,8(sp)
100179ac:	dc000115 	stw	r16,4(sp)
100179b0:	2827883a 	mov	r19,r5
100179b4:	3825883a 	mov	r18,r7
100179b8:	2809883a 	mov	r4,r5
100179bc:	00000106 	br	100179c4 <_strtoul_l.isra.0+0x3c>
100179c0:	8009883a 	mov	r4,r16
100179c4:	24000044 	addi	r16,r4,1
100179c8:	80ffffc3 	ldbu	r3,-1(r16)
100179cc:	008400b4 	movhi	r2,4098
100179d0:	1885883a 	add	r2,r3,r2
100179d4:	1098afc3 	ldbu	r2,25279(r2)
100179d8:	1080020c 	andi	r2,r2,8
100179dc:	103ff81e 	bne	r2,zero,100179c0 <_strtoul_l.isra.0+0x38>
100179e0:	18800b58 	cmpnei	r2,r3,45
100179e4:	10004f26 	beq	r2,zero,10017b24 <_strtoul_l.isra.0+0x19c>
100179e8:	18800ae0 	cmpeqi	r2,r3,43
100179ec:	1000231e 	bne	r2,zero,10017a7c <_strtoul_l.isra.0+0xf4>
100179f0:	1823883a 	mov	r17,r3
100179f4:	002d883a 	mov	r22,zero
100179f8:	90002426 	beq	r18,zero,10017a8c <_strtoul_l.isra.0+0x104>
100179fc:	90800420 	cmpeqi	r2,r18,16
10017a00:	10004c1e 	bne	r2,zero,10017b34 <_strtoul_l.isra.0+0x1ac>
10017a04:	013fffc4 	movi	r4,-1
10017a08:	900b883a 	mov	r5,r18
10017a0c:	d9800015 	stw	r6,0(sp)
10017a10:	00149840 	call	10014984 <__udivsi3>
10017a14:	900b883a 	mov	r5,r18
10017a18:	013fffc4 	movi	r4,-1
10017a1c:	102b883a 	mov	r21,r2
10017a20:	00149e80 	call	100149e8 <__umodsi3>
10017a24:	d9800017 	ldw	r6,0(sp)
10017a28:	1011883a 	mov	r8,r2
10017a2c:	900f883a 	mov	r7,r18
10017a30:	0009883a 	mov	r4,zero
10017a34:	0005883a 	mov	r2,zero
10017a38:	88fff404 	addi	r3,r17,-48
10017a3c:	194002a8 	cmpgeui	r5,r3,10
10017a40:	28000426 	beq	r5,zero,10017a54 <_strtoul_l.isra.0+0xcc>
10017a44:	88ffefc4 	addi	r3,r17,-65
10017a48:	18c006a8 	cmpgeui	r3,r3,26
10017a4c:	18001a1e 	bne	r3,zero,10017ab8 <_strtoul_l.isra.0+0x130>
10017a50:	88fff244 	addi	r3,r17,-55
10017a54:	1c801d0e 	bge	r3,r18,10017acc <_strtoul_l.isra.0+0x144>
10017a58:	20001516 	blt	r4,zero,10017ab0 <_strtoul_l.isra.0+0x128>
10017a5c:	a8801436 	bltu	r21,r2,10017ab0 <_strtoul_l.isra.0+0x128>
10017a60:	15401226 	beq	r2,r21,10017aac <_strtoul_l.isra.0+0x124>
10017a64:	3885383a 	mul	r2,r7,r2
10017a68:	01000044 	movi	r4,1
10017a6c:	1885883a 	add	r2,r3,r2
10017a70:	84000044 	addi	r16,r16,1
10017a74:	847fffc3 	ldbu	r17,-1(r16)
10017a78:	003fef06 	br	10017a38 <_strtoul_l.isra.0+0xb0>
10017a7c:	84400003 	ldbu	r17,0(r16)
10017a80:	002d883a 	mov	r22,zero
10017a84:	24000084 	addi	r16,r4,2
10017a88:	903fdc1e 	bne	r18,zero,100179fc <_strtoul_l.isra.0+0x74>
10017a8c:	88800c20 	cmpeqi	r2,r17,48
10017a90:	1000361e 	bne	r2,zero,10017b6c <_strtoul_l.isra.0+0x1e4>
10017a94:	054666b4 	movhi	r21,6554
10017a98:	02000144 	movi	r8,5
10017a9c:	ad666644 	addi	r21,r21,-26215
10017aa0:	01c00284 	movi	r7,10
10017aa4:	04800284 	movi	r18,10
10017aa8:	003fe106 	br	10017a30 <_strtoul_l.isra.0+0xa8>
10017aac:	40ffed0e 	bge	r8,r3,10017a64 <_strtoul_l.isra.0+0xdc>
10017ab0:	013fffc4 	movi	r4,-1
10017ab4:	003fee06 	br	10017a70 <_strtoul_l.isra.0+0xe8>
10017ab8:	88ffe7c4 	addi	r3,r17,-97
10017abc:	18c006a8 	cmpgeui	r3,r3,26
10017ac0:	1800021e 	bne	r3,zero,10017acc <_strtoul_l.isra.0+0x144>
10017ac4:	88ffea44 	addi	r3,r17,-87
10017ac8:	1cbfe316 	blt	r3,r18,10017a58 <_strtoul_l.isra.0+0xd0>
10017acc:	20000f16 	blt	r4,zero,10017b0c <_strtoul_l.isra.0+0x184>
10017ad0:	b0000126 	beq	r22,zero,10017ad8 <_strtoul_l.isra.0+0x150>
10017ad4:	0085c83a 	sub	r2,zero,r2
10017ad8:	30000226 	beq	r6,zero,10017ae4 <_strtoul_l.isra.0+0x15c>
10017adc:	20000f1e 	bne	r4,zero,10017b1c <_strtoul_l.isra.0+0x194>
10017ae0:	34c00015 	stw	r19,0(r6)
10017ae4:	dfc00817 	ldw	ra,32(sp)
10017ae8:	dd800717 	ldw	r22,28(sp)
10017aec:	dd400617 	ldw	r21,24(sp)
10017af0:	dd000517 	ldw	r20,20(sp)
10017af4:	dcc00417 	ldw	r19,16(sp)
10017af8:	dc800317 	ldw	r18,12(sp)
10017afc:	dc400217 	ldw	r17,8(sp)
10017b00:	dc000117 	ldw	r16,4(sp)
10017b04:	dec00904 	addi	sp,sp,36
10017b08:	f800283a 	ret
10017b0c:	00800884 	movi	r2,34
10017b10:	a0800015 	stw	r2,0(r20)
10017b14:	00bfffc4 	movi	r2,-1
10017b18:	303ff226 	beq	r6,zero,10017ae4 <_strtoul_l.isra.0+0x15c>
10017b1c:	84ffffc4 	addi	r19,r16,-1
10017b20:	003fef06 	br	10017ae0 <_strtoul_l.isra.0+0x158>
10017b24:	84400003 	ldbu	r17,0(r16)
10017b28:	05800044 	movi	r22,1
10017b2c:	24000084 	addi	r16,r4,2
10017b30:	003fb106 	br	100179f8 <_strtoul_l.isra.0+0x70>
10017b34:	88800c18 	cmpnei	r2,r17,48
10017b38:	1000221e 	bne	r2,zero,10017bc4 <_strtoul_l.isra.0+0x23c>
10017b3c:	80800003 	ldbu	r2,0(r16)
10017b40:	108037cc 	andi	r2,r2,223
10017b44:	10801620 	cmpeqi	r2,r2,88
10017b48:	10001226 	beq	r2,zero,10017b94 <_strtoul_l.isra.0+0x20c>
10017b4c:	05440034 	movhi	r21,4096
10017b50:	84400043 	ldbu	r17,1(r16)
10017b54:	020003c4 	movi	r8,15
10017b58:	84000084 	addi	r16,r16,2
10017b5c:	ad7fffc4 	addi	r21,r21,-1
10017b60:	01c00404 	movi	r7,16
10017b64:	04800404 	movi	r18,16
10017b68:	003fb106 	br	10017a30 <_strtoul_l.isra.0+0xa8>
10017b6c:	80800003 	ldbu	r2,0(r16)
10017b70:	108037cc 	andi	r2,r2,223
10017b74:	10801618 	cmpnei	r2,r2,88
10017b78:	103ff426 	beq	r2,zero,10017b4c <_strtoul_l.isra.0+0x1c4>
10017b7c:	05480034 	movhi	r21,8192
10017b80:	020001c4 	movi	r8,7
10017b84:	ad7fffc4 	addi	r21,r21,-1
10017b88:	01c00204 	movi	r7,8
10017b8c:	04800204 	movi	r18,8
10017b90:	003fa706 	br	10017a30 <_strtoul_l.isra.0+0xa8>
10017b94:	01400404 	movi	r5,16
10017b98:	013fffc4 	movi	r4,-1
10017b9c:	d9800015 	stw	r6,0(sp)
10017ba0:	00149840 	call	10014984 <__udivsi3>
10017ba4:	01400404 	movi	r5,16
10017ba8:	013fffc4 	movi	r4,-1
10017bac:	102b883a 	mov	r21,r2
10017bb0:	00149e80 	call	100149e8 <__umodsi3>
10017bb4:	1011883a 	mov	r8,r2
10017bb8:	01c00404 	movi	r7,16
10017bbc:	d9800017 	ldw	r6,0(sp)
10017bc0:	003f9b06 	br	10017a30 <_strtoul_l.isra.0+0xa8>
10017bc4:	05440034 	movhi	r21,4096
10017bc8:	020003c4 	movi	r8,15
10017bcc:	ad7fffc4 	addi	r21,r21,-1
10017bd0:	01c00404 	movi	r7,16
10017bd4:	003f9606 	br	10017a30 <_strtoul_l.isra.0+0xa8>

10017bd8 <_strtoul_r>:
10017bd8:	00179881 	jmpi	10017988 <_strtoul_l.isra.0>

10017bdc <strtoul_l>:
10017bdc:	008400f4 	movhi	r2,4099
10017be0:	300f883a 	mov	r7,r6
10017be4:	280d883a 	mov	r6,r5
10017be8:	200b883a 	mov	r5,r4
10017bec:	11219817 	ldw	r4,-31136(r2)
10017bf0:	00179881 	jmpi	10017988 <_strtoul_l.isra.0>

10017bf4 <strtoul>:
10017bf4:	008400f4 	movhi	r2,4099
10017bf8:	300f883a 	mov	r7,r6
10017bfc:	280d883a 	mov	r6,r5
10017c00:	200b883a 	mov	r5,r4
10017c04:	11219817 	ldw	r4,-31136(r2)
10017c08:	00179881 	jmpi	10017988 <_strtoul_l.isra.0>

10017c0c <___vfprintf_internal_r>:
10017c0c:	deffbd04 	addi	sp,sp,-268
10017c10:	dfc04215 	stw	ra,264(sp)
10017c14:	dd003d15 	stw	r20,244(sp)
10017c18:	dcc03c15 	stw	r19,240(sp)
10017c1c:	dc003915 	stw	r16,228(sp)
10017c20:	d9000515 	stw	r4,20(sp)
10017c24:	2021883a 	mov	r16,r4
10017c28:	2827883a 	mov	r19,r5
10017c2c:	3029883a 	mov	r20,r6
10017c30:	d9c00615 	stw	r7,24(sp)
10017c34:	df004115 	stw	fp,260(sp)
10017c38:	ddc04015 	stw	r23,256(sp)
10017c3c:	dd803f15 	stw	r22,252(sp)
10017c40:	dd403e15 	stw	r21,248(sp)
10017c44:	dc803b15 	stw	r18,236(sp)
10017c48:	dc403a15 	stw	r17,232(sp)
10017c4c:	001c0080 	call	1001c008 <_localeconv_r>
10017c50:	10800017 	ldw	r2,0(r2)
10017c54:	1009883a 	mov	r4,r2
10017c58:	d8800d15 	stw	r2,52(sp)
10017c5c:	00178f00 	call	100178f0 <strlen>
10017c60:	d8800b15 	stw	r2,44(sp)
10017c64:	80000226 	beq	r16,zero,10017c70 <___vfprintf_internal_r+0x64>
10017c68:	80800e17 	ldw	r2,56(r16)
10017c6c:	1002da26 	beq	r2,zero,100187d8 <___vfprintf_internal_r+0xbcc>
10017c70:	9880030b 	ldhu	r2,12(r19)
10017c74:	10c8000c 	andi	r3,r2,8192
10017c78:	1800061e 	bne	r3,zero,10017c94 <___vfprintf_internal_r+0x88>
10017c7c:	98c01917 	ldw	r3,100(r19)
10017c80:	0137ffc4 	movi	r4,-8193
10017c84:	10880014 	ori	r2,r2,8192
10017c88:	1906703a 	and	r3,r3,r4
10017c8c:	9880030d 	sth	r2,12(r19)
10017c90:	98c01915 	stw	r3,100(r19)
10017c94:	10c0020c 	andi	r3,r2,8
10017c98:	18009a26 	beq	r3,zero,10017f04 <___vfprintf_internal_r+0x2f8>
10017c9c:	98c00417 	ldw	r3,16(r19)
10017ca0:	18009826 	beq	r3,zero,10017f04 <___vfprintf_internal_r+0x2f8>
10017ca4:	1080068c 	andi	r2,r2,26
10017ca8:	10800298 	cmpnei	r2,r2,10
10017cac:	10009d26 	beq	r2,zero,10017f24 <___vfprintf_internal_r+0x318>
10017cb0:	ddc02904 	addi	r23,sp,164
10017cb4:	ddc01c15 	stw	r23,112(sp)
10017cb8:	d8001e15 	stw	zero,120(sp)
10017cbc:	d8001d15 	stw	zero,116(sp)
10017cc0:	d8000815 	stw	zero,32(sp)
10017cc4:	d8000915 	stw	zero,36(sp)
10017cc8:	d8000a15 	stw	zero,40(sp)
10017ccc:	b811883a 	mov	r8,r23
10017cd0:	d8000c15 	stw	zero,48(sp)
10017cd4:	d8001115 	stw	zero,68(sp)
10017cd8:	d8000415 	stw	zero,16(sp)
10017cdc:	a02d883a 	mov	r22,r20
10017ce0:	b0800007 	ldb	r2,0(r22)
10017ce4:	1000a226 	beq	r2,zero,10017f70 <___vfprintf_internal_r+0x364>
10017ce8:	10800960 	cmpeqi	r2,r2,37
10017cec:	10052e1e 	bne	r2,zero,100191a8 <___vfprintf_internal_r+0x159c>
10017cf0:	b021883a 	mov	r16,r22
10017cf4:	00000206 	br	10017d00 <___vfprintf_internal_r+0xf4>
10017cf8:	18009326 	beq	r3,zero,10017f48 <___vfprintf_internal_r+0x33c>
10017cfc:	9021883a 	mov	r16,r18
10017d00:	80800047 	ldb	r2,1(r16)
10017d04:	84800044 	addi	r18,r16,1
10017d08:	10c00958 	cmpnei	r3,r2,37
10017d0c:	103ffa1e 	bne	r2,zero,10017cf8 <___vfprintf_internal_r+0xec>
10017d10:	95a3c83a 	sub	r17,r18,r22
10017d14:	88009626 	beq	r17,zero,10017f70 <___vfprintf_internal_r+0x364>
10017d18:	d8c01e17 	ldw	r3,120(sp)
10017d1c:	d8801d17 	ldw	r2,116(sp)
10017d20:	45800015 	stw	r22,0(r8)
10017d24:	1c47883a 	add	r3,r3,r17
10017d28:	10800044 	addi	r2,r2,1
10017d2c:	d8801d15 	stw	r2,116(sp)
10017d30:	44400115 	stw	r17,4(r8)
10017d34:	d8c01e15 	stw	r3,120(sp)
10017d38:	10800208 	cmpgei	r2,r2,8
10017d3c:	1000851e 	bne	r2,zero,10017f54 <___vfprintf_internal_r+0x348>
10017d40:	42000204 	addi	r8,r8,8
10017d44:	d8c00417 	ldw	r3,16(sp)
10017d48:	80800047 	ldb	r2,1(r16)
10017d4c:	1c47883a 	add	r3,r3,r17
10017d50:	d8c00415 	stw	r3,16(sp)
10017d54:	10008626 	beq	r2,zero,10017f70 <___vfprintf_internal_r+0x364>
10017d58:	92800047 	ldb	r10,1(r18)
10017d5c:	95800044 	addi	r22,r18,1
10017d60:	d8001545 	stb	zero,85(sp)
10017d64:	0009883a 	mov	r4,zero
10017d68:	000b883a 	mov	r5,zero
10017d6c:	02ffffc4 	movi	r11,-1
10017d70:	0023883a 	mov	r17,zero
10017d74:	0019883a 	mov	r12,zero
10017d78:	b5800044 	addi	r22,r22,1
10017d7c:	5039883a 	mov	fp,r10
10017d80:	e0bff804 	addi	r2,fp,-32
10017d84:	10c01668 	cmpgeui	r3,r2,89
10017d88:	18009b1e 	bne	r3,zero,10017ff8 <___vfprintf_internal_r+0x3ec>
10017d8c:	100490ba 	slli	r2,r2,2
10017d90:	00c40074 	movhi	r3,4097
10017d94:	10c7883a 	add	r3,r2,r3
10017d98:	189f6817 	ldw	r2,32160(r3)
10017d9c:	1000683a 	jmp	r2
10017da0:	100180c8 	cmpgei	zero,r2,1539
10017da4:	10017ff8 	rdprs	zero,r2,1535
10017da8:	10017ff8 	rdprs	zero,r2,1535
10017dac:	100180bc 	xorhi	zero,r2,1538
10017db0:	10017ff8 	rdprs	zero,r2,1535
10017db4:	10017ff8 	rdprs	zero,r2,1535
10017db8:	10017ff8 	rdprs	zero,r2,1535
10017dbc:	10017ff8 	rdprs	zero,r2,1535
10017dc0:	10017ff8 	rdprs	zero,r2,1535
10017dc4:	10017ff8 	rdprs	zero,r2,1535
10017dc8:	10018094 	ori	zero,r2,1538
10017dcc:	10018084 	addi	zero,r2,1538
10017dd0:	10017ff8 	rdprs	zero,r2,1535
10017dd4:	1001806c 	andhi	zero,r2,1537
10017dd8:	10018028 	cmpgeui	zero,r2,1536
10017ddc:	10017ff8 	rdprs	zero,r2,1535
10017de0:	1001801c 	xori	zero,r2,1536
10017de4:	10017fc8 	cmpgei	zero,r2,1535
10017de8:	10017fc8 	cmpgei	zero,r2,1535
10017dec:	10017fc8 	cmpgei	zero,r2,1535
10017df0:	10017fc8 	cmpgei	zero,r2,1535
10017df4:	10017fc8 	cmpgei	zero,r2,1535
10017df8:	10017fc8 	cmpgei	zero,r2,1535
10017dfc:	10017fc8 	cmpgei	zero,r2,1535
10017e00:	10017fc8 	cmpgei	zero,r2,1535
10017e04:	10017fc8 	cmpgei	zero,r2,1535
10017e08:	10017ff8 	rdprs	zero,r2,1535
10017e0c:	10017ff8 	rdprs	zero,r2,1535
10017e10:	10017ff8 	rdprs	zero,r2,1535
10017e14:	10017ff8 	rdprs	zero,r2,1535
10017e18:	10017ff8 	rdprs	zero,r2,1535
10017e1c:	10017ff8 	rdprs	zero,r2,1535
10017e20:	10017ff8 	rdprs	zero,r2,1535
10017e24:	10017ff8 	rdprs	zero,r2,1535
10017e28:	10017ff8 	rdprs	zero,r2,1535
10017e2c:	10017ff8 	rdprs	zero,r2,1535
10017e30:	100185dc 	xori	zero,r2,1559
10017e34:	100184fc 	xorhi	zero,r2,1555
10017e38:	10017ff8 	rdprs	zero,r2,1535
10017e3c:	100184fc 	xorhi	zero,r2,1555
10017e40:	10017ff8 	rdprs	zero,r2,1535
10017e44:	10017ff8 	rdprs	zero,r2,1535
10017e48:	10017ff8 	rdprs	zero,r2,1535
10017e4c:	10017ff8 	rdprs	zero,r2,1535
10017e50:	100184f0 	cmpltui	zero,r2,1555
10017e54:	10017ff8 	rdprs	zero,r2,1535
10017e58:	10017ff8 	rdprs	zero,r2,1535
10017e5c:	100184bc 	xorhi	zero,r2,1554
10017e60:	10017ff8 	rdprs	zero,r2,1535
10017e64:	10017ff8 	rdprs	zero,r2,1535
10017e68:	10017ff8 	rdprs	zero,r2,1535
10017e6c:	10017ff8 	rdprs	zero,r2,1535
10017e70:	10017ff8 	rdprs	zero,r2,1535
10017e74:	100186fc 	xorhi	zero,r2,1563
10017e78:	10017ff8 	rdprs	zero,r2,1535
10017e7c:	10017ff8 	rdprs	zero,r2,1535
10017e80:	100186b4 	orhi	zero,r2,1562
10017e84:	10017ff8 	rdprs	zero,r2,1535
10017e88:	10017ff8 	rdprs	zero,r2,1535
10017e8c:	10017ff8 	rdprs	zero,r2,1535
10017e90:	10017ff8 	rdprs	zero,r2,1535
10017e94:	10017ff8 	rdprs	zero,r2,1535
10017e98:	10017ff8 	rdprs	zero,r2,1535
10017e9c:	10017ff8 	rdprs	zero,r2,1535
10017ea0:	10017ff8 	rdprs	zero,r2,1535
10017ea4:	10017ff8 	rdprs	zero,r2,1535
10017ea8:	10017ff8 	rdprs	zero,r2,1535
10017eac:	1001824c 	andi	zero,r2,1545
10017eb0:	100181d8 	cmpnei	zero,r2,1543
10017eb4:	100184fc 	xorhi	zero,r2,1555
10017eb8:	100184fc 	xorhi	zero,r2,1555
10017ebc:	100184fc 	xorhi	zero,r2,1555
10017ec0:	100187cc 	andi	zero,r2,1567
10017ec4:	100181d8 	cmpnei	zero,r2,1543
10017ec8:	10017ff8 	rdprs	zero,r2,1535
10017ecc:	10017ff8 	rdprs	zero,r2,1535
10017ed0:	100187b8 	rdprs	zero,r2,1566
10017ed4:	10017ff8 	rdprs	zero,r2,1535
10017ed8:	1001847c 	xorhi	zero,r2,1553
10017edc:	1001843c 	xorhi	zero,r2,1552
10017ee0:	1001873c 	xorhi	zero,r2,1564
10017ee4:	10018730 	cmpltui	zero,r2,1564
10017ee8:	10017ff8 	rdprs	zero,r2,1535
10017eec:	1001817c 	xorhi	zero,r2,1541
10017ef0:	10017ff8 	rdprs	zero,r2,1535
10017ef4:	1001813c 	xorhi	zero,r2,1540
10017ef8:	10017ff8 	rdprs	zero,r2,1535
10017efc:	10017ff8 	rdprs	zero,r2,1535
10017f00:	100180f4 	orhi	zero,r2,1539
10017f04:	d9000517 	ldw	r4,20(sp)
10017f08:	980b883a 	mov	r5,r19
10017f0c:	0019ea80 	call	10019ea8 <__swsetup_r>
10017f10:	10074c1e 	bne	r2,zero,10019c44 <___vfprintf_internal_r+0x2038>
10017f14:	9880030b 	ldhu	r2,12(r19)
10017f18:	1080068c 	andi	r2,r2,26
10017f1c:	10800298 	cmpnei	r2,r2,10
10017f20:	103f631e 	bne	r2,zero,10017cb0 <___vfprintf_internal_r+0xa4>
10017f24:	9880038f 	ldh	r2,14(r19)
10017f28:	103f6116 	blt	r2,zero,10017cb0 <___vfprintf_internal_r+0xa4>
10017f2c:	d9c00617 	ldw	r7,24(sp)
10017f30:	d9000517 	ldw	r4,20(sp)
10017f34:	a00d883a 	mov	r6,r20
10017f38:	980b883a 	mov	r5,r19
10017f3c:	0019d840 	call	10019d84 <__sbprintf>
10017f40:	d8800415 	stw	r2,16(sp)
10017f44:	00001306 	br	10017f94 <___vfprintf_internal_r+0x388>
10017f48:	95a3c83a 	sub	r17,r18,r22
10017f4c:	883f8226 	beq	r17,zero,10017d58 <___vfprintf_internal_r+0x14c>
10017f50:	003f7106 	br	10017d18 <___vfprintf_internal_r+0x10c>
10017f54:	d9000517 	ldw	r4,20(sp)
10017f58:	d9801c04 	addi	r6,sp,112
10017f5c:	980b883a 	mov	r5,r19
10017f60:	001d8f00 	call	1001d8f0 <__sprint_r>
10017f64:	1000081e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10017f68:	b811883a 	mov	r8,r23
10017f6c:	003f7506 	br	10017d44 <___vfprintf_internal_r+0x138>
10017f70:	d8801e17 	ldw	r2,120(sp)
10017f74:	10000426 	beq	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10017f78:	d9000517 	ldw	r4,20(sp)
10017f7c:	d9801c04 	addi	r6,sp,112
10017f80:	980b883a 	mov	r5,r19
10017f84:	001d8f00 	call	1001d8f0 <__sprint_r>
10017f88:	9880030b 	ldhu	r2,12(r19)
10017f8c:	1080100c 	andi	r2,r2,64
10017f90:	10072c1e 	bne	r2,zero,10019c44 <___vfprintf_internal_r+0x2038>
10017f94:	d8800417 	ldw	r2,16(sp)
10017f98:	dfc04217 	ldw	ra,264(sp)
10017f9c:	df004117 	ldw	fp,260(sp)
10017fa0:	ddc04017 	ldw	r23,256(sp)
10017fa4:	dd803f17 	ldw	r22,252(sp)
10017fa8:	dd403e17 	ldw	r21,248(sp)
10017fac:	dd003d17 	ldw	r20,244(sp)
10017fb0:	dcc03c17 	ldw	r19,240(sp)
10017fb4:	dc803b17 	ldw	r18,236(sp)
10017fb8:	dc403a17 	ldw	r17,232(sp)
10017fbc:	dc003917 	ldw	r16,228(sp)
10017fc0:	dec04304 	addi	sp,sp,268
10017fc4:	f800283a 	ret
10017fc8:	0023883a 	mov	r17,zero
10017fcc:	e0bff404 	addi	r2,fp,-48
10017fd0:	b5800044 	addi	r22,r22,1
10017fd4:	8c4002a4 	muli	r17,r17,10
10017fd8:	b73fffc7 	ldb	fp,-1(r22)
10017fdc:	1463883a 	add	r17,r2,r17
10017fe0:	e0bff404 	addi	r2,fp,-48
10017fe4:	10c002b0 	cmpltui	r3,r2,10
10017fe8:	183ff91e 	bne	r3,zero,10017fd0 <___vfprintf_internal_r+0x3c4>
10017fec:	e0bff804 	addi	r2,fp,-32
10017ff0:	10c01668 	cmpgeui	r3,r2,89
10017ff4:	183f6526 	beq	r3,zero,10017d8c <___vfprintf_internal_r+0x180>
10017ff8:	21003fcc 	andi	r4,r4,255
10017ffc:	20066d1e 	bne	r4,zero,100199b4 <___vfprintf_internal_r+0x1da8>
10018000:	e03fdb26 	beq	fp,zero,10017f70 <___vfprintf_internal_r+0x364>
10018004:	df001f05 	stb	fp,124(sp)
10018008:	d8001545 	stb	zero,85(sp)
1001800c:	05400044 	movi	r21,1
10018010:	05000044 	movi	r20,1
10018014:	dc001f04 	addi	r16,sp,124
10018018:	00009506 	br	10018270 <___vfprintf_internal_r+0x664>
1001801c:	63002014 	ori	r12,r12,128
10018020:	b2800007 	ldb	r10,0(r22)
10018024:	003f5406 	br	10017d78 <___vfprintf_internal_r+0x16c>
10018028:	b7000007 	ldb	fp,0(r22)
1001802c:	b0c00044 	addi	r3,r22,1
10018030:	e0800aa0 	cmpeqi	r2,fp,42
10018034:	1007411e 	bne	r2,zero,10019d3c <___vfprintf_internal_r+0x2130>
10018038:	e0bff404 	addi	r2,fp,-48
1001803c:	118002b0 	cmpltui	r6,r2,10
10018040:	182d883a 	mov	r22,r3
10018044:	0017883a 	mov	r11,zero
10018048:	303f4d26 	beq	r6,zero,10017d80 <___vfprintf_internal_r+0x174>
1001804c:	b5800044 	addi	r22,r22,1
10018050:	5ac002a4 	muli	r11,r11,10
10018054:	b73fffc7 	ldb	fp,-1(r22)
10018058:	5897883a 	add	r11,r11,r2
1001805c:	e0bff404 	addi	r2,fp,-48
10018060:	10c002b0 	cmpltui	r3,r2,10
10018064:	183ff91e 	bne	r3,zero,1001804c <___vfprintf_internal_r+0x440>
10018068:	003f4506 	br	10017d80 <___vfprintf_internal_r+0x174>
1001806c:	b7000003 	ldbu	fp,0(r22)
10018070:	e2803fcc 	andi	r10,fp,255
10018074:	5280201c 	xori	r10,r10,128
10018078:	63000114 	ori	r12,r12,4
1001807c:	52bfe004 	addi	r10,r10,-128
10018080:	003f3d06 	br	10017d78 <___vfprintf_internal_r+0x16c>
10018084:	01000044 	movi	r4,1
10018088:	01400ac4 	movi	r5,43
1001808c:	b2800007 	ldb	r10,0(r22)
10018090:	003f3906 	br	10017d78 <___vfprintf_internal_r+0x16c>
10018094:	d8800617 	ldw	r2,24(sp)
10018098:	b7000003 	ldbu	fp,0(r22)
1001809c:	14400017 	ldw	r17,0(r2)
100180a0:	10800104 	addi	r2,r2,4
100180a4:	8804d716 	blt	r17,zero,10019404 <___vfprintf_internal_r+0x17f8>
100180a8:	d8800615 	stw	r2,24(sp)
100180ac:	e2803fcc 	andi	r10,fp,255
100180b0:	5280201c 	xori	r10,r10,128
100180b4:	52bfe004 	addi	r10,r10,-128
100180b8:	003f2f06 	br	10017d78 <___vfprintf_internal_r+0x16c>
100180bc:	63000054 	ori	r12,r12,1
100180c0:	b2800007 	ldb	r10,0(r22)
100180c4:	003f2c06 	br	10017d78 <___vfprintf_internal_r+0x16c>
100180c8:	28803fcc 	andi	r2,r5,255
100180cc:	1080201c 	xori	r2,r2,128
100180d0:	10bfe004 	addi	r2,r2,-128
100180d4:	b7000003 	ldbu	fp,0(r22)
100180d8:	103ff41e 	bne	r2,zero,100180ac <___vfprintf_internal_r+0x4a0>
100180dc:	e2803fcc 	andi	r10,fp,255
100180e0:	5280201c 	xori	r10,r10,128
100180e4:	01000044 	movi	r4,1
100180e8:	01400804 	movi	r5,32
100180ec:	52bfe004 	addi	r10,r10,-128
100180f0:	003f2106 	br	10017d78 <___vfprintf_internal_r+0x16c>
100180f4:	21003fcc 	andi	r4,r4,255
100180f8:	2006b31e 	bne	r4,zero,10019bc8 <___vfprintf_internal_r+0x1fbc>
100180fc:	008400b4 	movhi	r2,4098
10018100:	1098a004 	addi	r2,r2,25216
10018104:	d8800c15 	stw	r2,48(sp)
10018108:	6080080c 	andi	r2,r12,32
1001810c:	10017026 	beq	r2,zero,100186d0 <___vfprintf_internal_r+0xac4>
10018110:	d8800617 	ldw	r2,24(sp)
10018114:	15400017 	ldw	r21,0(r2)
10018118:	15000117 	ldw	r20,4(r2)
1001811c:	10800204 	addi	r2,r2,8
10018120:	d8800615 	stw	r2,24(sp)
10018124:	6080004c 	andi	r2,r12,1
10018128:	10000226 	beq	r2,zero,10018134 <___vfprintf_internal_r+0x528>
1001812c:	ad04b03a 	or	r2,r21,r20
10018130:	1004a71e 	bne	r2,zero,100193d0 <___vfprintf_internal_r+0x17c4>
10018134:	00800084 	movi	r2,2
10018138:	00018f06 	br	10018778 <___vfprintf_internal_r+0xb6c>
1001813c:	21003fcc 	andi	r4,r4,255
10018140:	20069f1e 	bne	r4,zero,10019bc0 <___vfprintf_internal_r+0x1fb4>
10018144:	6080080c 	andi	r2,r12,32
10018148:	1001b41e 	bne	r2,zero,1001881c <___vfprintf_internal_r+0xc10>
1001814c:	d8800617 	ldw	r2,24(sp)
10018150:	60c0040c 	andi	r3,r12,16
10018154:	15400017 	ldw	r21,0(r2)
10018158:	10800104 	addi	r2,r2,4
1001815c:	18016e1e 	bne	r3,zero,10018718 <___vfprintf_internal_r+0xb0c>
10018160:	60c0100c 	andi	r3,r12,64
10018164:	18059f26 	beq	r3,zero,100197e4 <___vfprintf_internal_r+0x1bd8>
10018168:	d8800615 	stw	r2,24(sp)
1001816c:	ad7fffcc 	andi	r21,r21,65535
10018170:	0029883a 	mov	r20,zero
10018174:	00800044 	movi	r2,1
10018178:	00017f06 	br	10018778 <___vfprintf_internal_r+0xb6c>
1001817c:	d8800617 	ldw	r2,24(sp)
10018180:	d8001545 	stb	zero,85(sp)
10018184:	14000017 	ldw	r16,0(r2)
10018188:	14800104 	addi	r18,r2,4
1001818c:	8004c726 	beq	r16,zero,100194ac <___vfprintf_internal_r+0x18a0>
10018190:	da000e15 	stw	r8,56(sp)
10018194:	db000715 	stw	r12,28(sp)
10018198:	58bfffe0 	cmpeqi	r2,r11,-1
1001819c:	1005691e 	bne	r2,zero,10019744 <___vfprintf_internal_r+0x1b38>
100181a0:	580d883a 	mov	r6,r11
100181a4:	000b883a 	mov	r5,zero
100181a8:	8009883a 	mov	r4,r16
100181ac:	dac00615 	stw	r11,24(sp)
100181b0:	0016ac00 	call	10016ac0 <memchr>
100181b4:	dac00617 	ldw	r11,24(sp)
100181b8:	db000717 	ldw	r12,28(sp)
100181bc:	da000e17 	ldw	r8,56(sp)
100181c0:	10066726 	beq	r2,zero,10019b60 <___vfprintf_internal_r+0x1f54>
100181c4:	1429c83a 	sub	r20,r2,r16
100181c8:	a02b883a 	mov	r21,r20
100181cc:	a005f716 	blt	r20,zero,100199ac <___vfprintf_internal_r+0x1da0>
100181d0:	dc800615 	stw	r18,24(sp)
100181d4:	00002606 	br	10018270 <___vfprintf_internal_r+0x664>
100181d8:	21003fcc 	andi	r4,r4,255
100181dc:	2006761e 	bne	r4,zero,10019bb8 <___vfprintf_internal_r+0x1fac>
100181e0:	6080080c 	andi	r2,r12,32
100181e4:	10017f1e 	bne	r2,zero,100187e4 <___vfprintf_internal_r+0xbd8>
100181e8:	d8800617 	ldw	r2,24(sp)
100181ec:	60c0040c 	andi	r3,r12,16
100181f0:	10800104 	addi	r2,r2,4
100181f4:	1801001e 	bne	r3,zero,100185f8 <___vfprintf_internal_r+0x9ec>
100181f8:	60c0100c 	andi	r3,r12,64
100181fc:	1800fe26 	beq	r3,zero,100185f8 <___vfprintf_internal_r+0x9ec>
10018200:	d8c00617 	ldw	r3,24(sp)
10018204:	d8800615 	stw	r2,24(sp)
10018208:	1d40000f 	ldh	r21,0(r3)
1001820c:	a829d7fa 	srai	r20,r21,31
10018210:	a005883a 	mov	r2,r20
10018214:	1000fe16 	blt	r2,zero,10018610 <___vfprintf_internal_r+0xa04>
10018218:	58bfffd8 	cmpnei	r2,r11,-1
1001821c:	db401543 	ldbu	r13,85(sp)
10018220:	10018526 	beq	r2,zero,10018838 <___vfprintf_internal_r+0xc2c>
10018224:	00ffdfc4 	movi	r3,-129
10018228:	ad04b03a 	or	r2,r21,r20
1001822c:	60d8703a 	and	r12,r12,r3
10018230:	1001811e 	bne	r2,zero,10018838 <___vfprintf_internal_r+0xc2c>
10018234:	5801831e 	bne	r11,zero,10018844 <___vfprintf_internal_r+0xc38>
10018238:	6025883a 	mov	r18,r12
1001823c:	0017883a 	mov	r11,zero
10018240:	0029883a 	mov	r20,zero
10018244:	b821883a 	mov	r16,r23
10018248:	00018306 	br	10018858 <___vfprintf_internal_r+0xc4c>
1001824c:	d8c00617 	ldw	r3,24(sp)
10018250:	d8001545 	stb	zero,85(sp)
10018254:	05400044 	movi	r21,1
10018258:	18800017 	ldw	r2,0(r3)
1001825c:	18c00104 	addi	r3,r3,4
10018260:	d8c00615 	stw	r3,24(sp)
10018264:	d8801f05 	stb	r2,124(sp)
10018268:	05000044 	movi	r20,1
1001826c:	dc001f04 	addi	r16,sp,124
10018270:	6025883a 	mov	r18,r12
10018274:	0017883a 	mov	r11,zero
10018278:	d8000715 	stw	zero,28(sp)
1001827c:	9380008c 	andi	r14,r18,2
10018280:	70000126 	beq	r14,zero,10018288 <___vfprintf_internal_r+0x67c>
10018284:	ad400084 	addi	r21,r21,2
10018288:	9340210c 	andi	r13,r18,132
1001828c:	d8c01e17 	ldw	r3,120(sp)
10018290:	6800021e 	bne	r13,zero,1001829c <___vfprintf_internal_r+0x690>
10018294:	8d4fc83a 	sub	r7,r17,r21
10018298:	01c2ce16 	blt	zero,r7,10018dd4 <___vfprintf_internal_r+0x11c8>
1001829c:	d8801547 	ldb	r2,85(sp)
100182a0:	10000c26 	beq	r2,zero,100182d4 <___vfprintf_internal_r+0x6c8>
100182a4:	d8801d17 	ldw	r2,116(sp)
100182a8:	d9001544 	addi	r4,sp,85
100182ac:	18c00044 	addi	r3,r3,1
100182b0:	10800044 	addi	r2,r2,1
100182b4:	41000015 	stw	r4,0(r8)
100182b8:	01000044 	movi	r4,1
100182bc:	d8801d15 	stw	r2,116(sp)
100182c0:	41000115 	stw	r4,4(r8)
100182c4:	d8c01e15 	stw	r3,120(sp)
100182c8:	10800208 	cmpgei	r2,r2,8
100182cc:	1002fb1e 	bne	r2,zero,10018ebc <___vfprintf_internal_r+0x12b0>
100182d0:	42000204 	addi	r8,r8,8
100182d4:	70000c26 	beq	r14,zero,10018308 <___vfprintf_internal_r+0x6fc>
100182d8:	d8801d17 	ldw	r2,116(sp)
100182dc:	d9001584 	addi	r4,sp,86
100182e0:	18c00084 	addi	r3,r3,2
100182e4:	10800044 	addi	r2,r2,1
100182e8:	41000015 	stw	r4,0(r8)
100182ec:	01000084 	movi	r4,2
100182f0:	d8801d15 	stw	r2,116(sp)
100182f4:	41000115 	stw	r4,4(r8)
100182f8:	d8c01e15 	stw	r3,120(sp)
100182fc:	10800208 	cmpgei	r2,r2,8
10018300:	1002fc1e 	bne	r2,zero,10018ef4 <___vfprintf_internal_r+0x12e8>
10018304:	42000204 	addi	r8,r8,8
10018308:	6b402018 	cmpnei	r13,r13,128
1001830c:	6801cf26 	beq	r13,zero,10018a4c <___vfprintf_internal_r+0xe40>
10018310:	5d0fc83a 	sub	r7,r11,r20
10018314:	01c20616 	blt	zero,r7,10018b30 <___vfprintf_internal_r+0xf24>
10018318:	9080400c 	andi	r2,r18,256
1001831c:	10017c1e 	bne	r2,zero,10018910 <___vfprintf_internal_r+0xd04>
10018320:	d8801d17 	ldw	r2,116(sp)
10018324:	1d07883a 	add	r3,r3,r20
10018328:	44000015 	stw	r16,0(r8)
1001832c:	10800044 	addi	r2,r2,1
10018330:	d8801d15 	stw	r2,116(sp)
10018334:	45000115 	stw	r20,4(r8)
10018338:	d8c01e15 	stw	r3,120(sp)
1001833c:	10800208 	cmpgei	r2,r2,8
10018340:	1002571e 	bne	r2,zero,10018ca0 <___vfprintf_internal_r+0x1094>
10018344:	42000204 	addi	r8,r8,8
10018348:	9480010c 	andi	r18,r18,4
1001834c:	90000226 	beq	r18,zero,10018358 <___vfprintf_internal_r+0x74c>
10018350:	8d61c83a 	sub	r16,r17,r21
10018354:	04000916 	blt	zero,r16,1001837c <___vfprintf_internal_r+0x770>
10018358:	8d40010e 	bge	r17,r21,10018360 <___vfprintf_internal_r+0x754>
1001835c:	a823883a 	mov	r17,r21
10018360:	d8800417 	ldw	r2,16(sp)
10018364:	1445883a 	add	r2,r2,r17
10018368:	d8800415 	stw	r2,16(sp)
1001836c:	1802241e 	bne	r3,zero,10018c00 <___vfprintf_internal_r+0xff4>
10018370:	d8001d15 	stw	zero,116(sp)
10018374:	b811883a 	mov	r8,r23
10018378:	003e5906 	br	10017ce0 <___vfprintf_internal_r+0xd4>
1001837c:	030400b4 	movhi	r12,4098
10018380:	81000450 	cmplti	r4,r16,17
10018384:	6318ab84 	addi	r12,r12,25262
10018388:	d8801d17 	ldw	r2,116(sp)
1001838c:	20001c1e 	bne	r4,zero,10018400 <___vfprintf_internal_r+0x7f4>
10018390:	04800404 	movi	r18,16
10018394:	dd000517 	ldw	r20,20(sp)
10018398:	6039883a 	mov	fp,r12
1001839c:	00000406 	br	100183b0 <___vfprintf_internal_r+0x7a4>
100183a0:	843ffc04 	addi	r16,r16,-16
100183a4:	81000448 	cmpgei	r4,r16,17
100183a8:	42000204 	addi	r8,r8,8
100183ac:	20001326 	beq	r4,zero,100183fc <___vfprintf_internal_r+0x7f0>
100183b0:	10800044 	addi	r2,r2,1
100183b4:	18c00404 	addi	r3,r3,16
100183b8:	47000015 	stw	fp,0(r8)
100183bc:	44800115 	stw	r18,4(r8)
100183c0:	d8c01e15 	stw	r3,120(sp)
100183c4:	d8801d15 	stw	r2,116(sp)
100183c8:	11000208 	cmpgei	r4,r2,8
100183cc:	203ff426 	beq	r4,zero,100183a0 <___vfprintf_internal_r+0x794>
100183d0:	d9801c04 	addi	r6,sp,112
100183d4:	980b883a 	mov	r5,r19
100183d8:	a009883a 	mov	r4,r20
100183dc:	001d8f00 	call	1001d8f0 <__sprint_r>
100183e0:	103ee91e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
100183e4:	843ffc04 	addi	r16,r16,-16
100183e8:	81000448 	cmpgei	r4,r16,17
100183ec:	d8c01e17 	ldw	r3,120(sp)
100183f0:	d8801d17 	ldw	r2,116(sp)
100183f4:	b811883a 	mov	r8,r23
100183f8:	203fed1e 	bne	r4,zero,100183b0 <___vfprintf_internal_r+0x7a4>
100183fc:	e019883a 	mov	r12,fp
10018400:	10800044 	addi	r2,r2,1
10018404:	1c07883a 	add	r3,r3,r16
10018408:	d8801d15 	stw	r2,116(sp)
1001840c:	43000015 	stw	r12,0(r8)
10018410:	44000115 	stw	r16,4(r8)
10018414:	d8c01e15 	stw	r3,120(sp)
10018418:	10800210 	cmplti	r2,r2,8
1001841c:	103fce1e 	bne	r2,zero,10018358 <___vfprintf_internal_r+0x74c>
10018420:	d9000517 	ldw	r4,20(sp)
10018424:	d9801c04 	addi	r6,sp,112
10018428:	980b883a 	mov	r5,r19
1001842c:	001d8f00 	call	1001d8f0 <__sprint_r>
10018430:	103ed51e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018434:	d8c01e17 	ldw	r3,120(sp)
10018438:	003fc706 	br	10018358 <___vfprintf_internal_r+0x74c>
1001843c:	21003fcc 	andi	r4,r4,255
10018440:	2005d91e 	bne	r4,zero,10019ba8 <___vfprintf_internal_r+0x1f9c>
10018444:	6080080c 	andi	r2,r12,32
10018448:	1000ed1e 	bne	r2,zero,10018800 <___vfprintf_internal_r+0xbf4>
1001844c:	d8800617 	ldw	r2,24(sp)
10018450:	60c0040c 	andi	r3,r12,16
10018454:	15400017 	ldw	r21,0(r2)
10018458:	10800104 	addi	r2,r2,4
1001845c:	18001e1e 	bne	r3,zero,100184d8 <___vfprintf_internal_r+0x8cc>
10018460:	60c0100c 	andi	r3,r12,64
10018464:	1804db26 	beq	r3,zero,100197d4 <___vfprintf_internal_r+0x1bc8>
10018468:	d8800615 	stw	r2,24(sp)
1001846c:	ad7fffcc 	andi	r21,r21,65535
10018470:	0029883a 	mov	r20,zero
10018474:	0005883a 	mov	r2,zero
10018478:	0000bf06 	br	10018778 <___vfprintf_internal_r+0xb6c>
1001847c:	21003fcc 	andi	r4,r4,255
10018480:	2005cb1e 	bne	r4,zero,10019bb0 <___vfprintf_internal_r+0x1fa4>
10018484:	d9000617 	ldw	r4,24(sp)
10018488:	6080080c 	andi	r2,r12,32
1001848c:	20c00104 	addi	r3,r4,4
10018490:	1003d51e 	bne	r2,zero,100193e8 <___vfprintf_internal_r+0x17dc>
10018494:	6080040c 	andi	r2,r12,16
10018498:	1004301e 	bne	r2,zero,1001955c <___vfprintf_internal_r+0x1950>
1001849c:	6300100c 	andi	r12,r12,64
100184a0:	60042e26 	beq	r12,zero,1001955c <___vfprintf_internal_r+0x1950>
100184a4:	d8800617 	ldw	r2,24(sp)
100184a8:	d8c00615 	stw	r3,24(sp)
100184ac:	d8c00417 	ldw	r3,16(sp)
100184b0:	10800017 	ldw	r2,0(r2)
100184b4:	10c0000d 	sth	r3,0(r2)
100184b8:	003e0906 	br	10017ce0 <___vfprintf_internal_r+0xd4>
100184bc:	21003fcc 	andi	r4,r4,255
100184c0:	2005c31e 	bne	r4,zero,10019bd0 <___vfprintf_internal_r+0x1fc4>
100184c4:	6080080c 	andi	r2,r12,32
100184c8:	63000414 	ori	r12,r12,16
100184cc:	1000cc1e 	bne	r2,zero,10018800 <___vfprintf_internal_r+0xbf4>
100184d0:	d8800617 	ldw	r2,24(sp)
100184d4:	10800104 	addi	r2,r2,4
100184d8:	d8c00617 	ldw	r3,24(sp)
100184dc:	0029883a 	mov	r20,zero
100184e0:	d8800615 	stw	r2,24(sp)
100184e4:	1d400017 	ldw	r21,0(r3)
100184e8:	0005883a 	mov	r2,zero
100184ec:	0000a206 	br	10018778 <___vfprintf_internal_r+0xb6c>
100184f0:	63000214 	ori	r12,r12,8
100184f4:	b2800007 	ldb	r10,0(r22)
100184f8:	003e1f06 	br	10017d78 <___vfprintf_internal_r+0x16c>
100184fc:	21003fcc 	andi	r4,r4,255
10018500:	2005b71e 	bne	r4,zero,10019be0 <___vfprintf_internal_r+0x1fd4>
10018504:	d8c00617 	ldw	r3,24(sp)
10018508:	00a00034 	movhi	r2,32768
1001850c:	10bfffc4 	addi	r2,r2,-1
10018510:	1d000117 	ldw	r20,4(r3)
10018514:	1c800017 	ldw	r18,0(r3)
10018518:	01dffc34 	movhi	r7,32752
1001851c:	a0a0703a 	and	r16,r20,r2
10018520:	01bfffc4 	movi	r6,-1
10018524:	18800204 	addi	r2,r3,8
10018528:	39ffffc4 	addi	r7,r7,-1
1001852c:	9009883a 	mov	r4,r18
10018530:	800b883a 	mov	r5,r16
10018534:	da000f15 	stw	r8,60(sp)
10018538:	dac00e15 	stw	r11,56(sp)
1001853c:	db000715 	stw	r12,28(sp)
10018540:	dd000a15 	stw	r20,40(sp)
10018544:	dc800915 	stw	r18,36(sp)
10018548:	d8800615 	stw	r2,24(sp)
1001854c:	00222f40 	call	100222f4 <__unorddf2>
10018550:	db000717 	ldw	r12,28(sp)
10018554:	dac00e17 	ldw	r11,56(sp)
10018558:	da000f17 	ldw	r8,60(sp)
1001855c:	1003161e 	bne	r2,zero,100191b8 <___vfprintf_internal_r+0x15ac>
10018560:	01dffc34 	movhi	r7,32752
10018564:	01bfffc4 	movi	r6,-1
10018568:	39ffffc4 	addi	r7,r7,-1
1001856c:	9009883a 	mov	r4,r18
10018570:	800b883a 	mov	r5,r16
10018574:	002120c0 	call	1002120c <__ledf2>
10018578:	db000717 	ldw	r12,28(sp)
1001857c:	dac00e17 	ldw	r11,56(sp)
10018580:	da000f17 	ldw	r8,60(sp)
10018584:	00830c0e 	bge	zero,r2,100191b8 <___vfprintf_internal_r+0x15ac>
10018588:	000d883a 	mov	r6,zero
1001858c:	000f883a 	mov	r7,zero
10018590:	9009883a 	mov	r4,r18
10018594:	a00b883a 	mov	r5,r20
10018598:	da000e15 	stw	r8,56(sp)
1001859c:	002120c0 	call	1002120c <__ledf2>
100185a0:	db000717 	ldw	r12,28(sp)
100185a4:	da000e17 	ldw	r8,56(sp)
100185a8:	1004e216 	blt	r2,zero,10019934 <___vfprintf_internal_r+0x1d28>
100185ac:	db401543 	ldbu	r13,85(sp)
100185b0:	e0801210 	cmplti	r2,fp,72
100185b4:	1004cb1e 	bne	r2,zero,100198e4 <___vfprintf_internal_r+0x1cd8>
100185b8:	040400b4 	movhi	r16,4098
100185bc:	84189804 	addi	r16,r16,25184
100185c0:	04bfdfc4 	movi	r18,-129
100185c4:	64a4703a 	and	r18,r12,r18
100185c8:	054000c4 	movi	r21,3
100185cc:	050000c4 	movi	r20,3
100185d0:	0017883a 	mov	r11,zero
100185d4:	d8000715 	stw	zero,28(sp)
100185d8:	0000a306 	br	10018868 <___vfprintf_internal_r+0xc5c>
100185dc:	21003fcc 	andi	r4,r4,255
100185e0:	20057d1e 	bne	r4,zero,10019bd8 <___vfprintf_internal_r+0x1fcc>
100185e4:	6080080c 	andi	r2,r12,32
100185e8:	63000414 	ori	r12,r12,16
100185ec:	10007d1e 	bne	r2,zero,100187e4 <___vfprintf_internal_r+0xbd8>
100185f0:	d8800617 	ldw	r2,24(sp)
100185f4:	10800104 	addi	r2,r2,4
100185f8:	d8c00617 	ldw	r3,24(sp)
100185fc:	1d400017 	ldw	r21,0(r3)
10018600:	d8800615 	stw	r2,24(sp)
10018604:	a829d7fa 	srai	r20,r21,31
10018608:	a005883a 	mov	r2,r20
1001860c:	103f020e 	bge	r2,zero,10018218 <___vfprintf_internal_r+0x60c>
10018610:	056bc83a 	sub	r21,zero,r21
10018614:	a804c03a 	cmpne	r2,r21,zero
10018618:	0529c83a 	sub	r20,zero,r20
1001861c:	a0a9c83a 	sub	r20,r20,r2
10018620:	00800b44 	movi	r2,45
10018624:	d8801545 	stb	r2,85(sp)
10018628:	58ffffe0 	cmpeqi	r3,r11,-1
1001862c:	03400b44 	movi	r13,45
10018630:	00800044 	movi	r2,1
10018634:	18005426 	beq	r3,zero,10018788 <___vfprintf_internal_r+0xb7c>
10018638:	10c00060 	cmpeqi	r3,r2,1
1001863c:	18007e1e 	bne	r3,zero,10018838 <___vfprintf_internal_r+0xc2c>
10018640:	108000a0 	cmpeqi	r2,r2,2
10018644:	1002371e 	bne	r2,zero,10018f24 <___vfprintf_internal_r+0x1318>
10018648:	b807883a 	mov	r3,r23
1001864c:	00000106 	br	10018654 <___vfprintf_internal_r+0xa48>
10018650:	8007883a 	mov	r3,r16
10018654:	a808d0fa 	srli	r4,r21,3
10018658:	a00a977a 	slli	r5,r20,29
1001865c:	a028d0fa 	srli	r20,r20,3
10018660:	ad4001cc 	andi	r21,r21,7
10018664:	a8800c04 	addi	r2,r21,48
10018668:	292ab03a 	or	r21,r5,r4
1001866c:	18bfffc5 	stb	r2,-1(r3)
10018670:	ad08b03a 	or	r4,r21,r20
10018674:	1c3fffc4 	addi	r16,r3,-1
10018678:	203ff51e 	bne	r4,zero,10018650 <___vfprintf_internal_r+0xa44>
1001867c:	6100004c 	andi	r4,r12,1
10018680:	2000a026 	beq	r4,zero,10018904 <___vfprintf_internal_r+0xcf8>
10018684:	10803fcc 	andi	r2,r2,255
10018688:	1080201c 	xori	r2,r2,128
1001868c:	10bfe004 	addi	r2,r2,-128
10018690:	10800c18 	cmpnei	r2,r2,48
10018694:	10009b26 	beq	r2,zero,10018904 <___vfprintf_internal_r+0xcf8>
10018698:	18ffff84 	addi	r3,r3,-2
1001869c:	00800c04 	movi	r2,48
100186a0:	80bfffc5 	stb	r2,-1(r16)
100186a4:	b8e9c83a 	sub	r20,r23,r3
100186a8:	6025883a 	mov	r18,r12
100186ac:	1821883a 	mov	r16,r3
100186b0:	00006906 	br	10018858 <___vfprintf_internal_r+0xc4c>
100186b4:	21003fcc 	andi	r4,r4,255
100186b8:	2005391e 	bne	r4,zero,10019ba0 <___vfprintf_internal_r+0x1f94>
100186bc:	008400b4 	movhi	r2,4098
100186c0:	10989b04 	addi	r2,r2,25196
100186c4:	d8800c15 	stw	r2,48(sp)
100186c8:	6080080c 	andi	r2,r12,32
100186cc:	103e901e 	bne	r2,zero,10018110 <___vfprintf_internal_r+0x504>
100186d0:	d8c00617 	ldw	r3,24(sp)
100186d4:	6080040c 	andi	r2,r12,16
100186d8:	1d400017 	ldw	r21,0(r3)
100186dc:	18c00104 	addi	r3,r3,4
100186e0:	d8c00615 	stw	r3,24(sp)
100186e4:	1002ae1e 	bne	r2,zero,100191a0 <___vfprintf_internal_r+0x1594>
100186e8:	6080100c 	andi	r2,r12,64
100186ec:	1002ac26 	beq	r2,zero,100191a0 <___vfprintf_internal_r+0x1594>
100186f0:	ad7fffcc 	andi	r21,r21,65535
100186f4:	0029883a 	mov	r20,zero
100186f8:	003e8a06 	br	10018124 <___vfprintf_internal_r+0x518>
100186fc:	21003fcc 	andi	r4,r4,255
10018700:	2005391e 	bne	r4,zero,10019be8 <___vfprintf_internal_r+0x1fdc>
10018704:	6080080c 	andi	r2,r12,32
10018708:	63000414 	ori	r12,r12,16
1001870c:	1000431e 	bne	r2,zero,1001881c <___vfprintf_internal_r+0xc10>
10018710:	d8800617 	ldw	r2,24(sp)
10018714:	10800104 	addi	r2,r2,4
10018718:	d8c00617 	ldw	r3,24(sp)
1001871c:	0029883a 	mov	r20,zero
10018720:	d8800615 	stw	r2,24(sp)
10018724:	1d400017 	ldw	r21,0(r3)
10018728:	00800044 	movi	r2,1
1001872c:	00001206 	br	10018778 <___vfprintf_internal_r+0xb6c>
10018730:	63000814 	ori	r12,r12,32
10018734:	b2800007 	ldb	r10,0(r22)
10018738:	003d8f06 	br	10017d78 <___vfprintf_internal_r+0x16c>
1001873c:	d8c00617 	ldw	r3,24(sp)
10018740:	00800c04 	movi	r2,48
10018744:	d8801585 	stb	r2,86(sp)
10018748:	00801e04 	movi	r2,120
1001874c:	010400b4 	movhi	r4,4098
10018750:	d88015c5 	stb	r2,87(sp)
10018754:	1d400017 	ldw	r21,0(r3)
10018758:	18800104 	addi	r2,r3,4
1001875c:	d8800615 	stw	r2,24(sp)
10018760:	2098a004 	addi	r2,r4,25216
10018764:	d8800c15 	stw	r2,48(sp)
10018768:	0029883a 	mov	r20,zero
1001876c:	63000094 	ori	r12,r12,2
10018770:	00800084 	movi	r2,2
10018774:	07001e04 	movi	fp,120
10018778:	d8001545 	stb	zero,85(sp)
1001877c:	58ffffe0 	cmpeqi	r3,r11,-1
10018780:	001b883a 	mov	r13,zero
10018784:	183fac1e 	bne	r3,zero,10018638 <___vfprintf_internal_r+0xa2c>
10018788:	04bfdfc4 	movi	r18,-129
1001878c:	ad06b03a 	or	r3,r21,r20
10018790:	64a4703a 	and	r18,r12,r18
10018794:	18018d1e 	bne	r3,zero,10018dcc <___vfprintf_internal_r+0x11c0>
10018798:	5803b91e 	bne	r11,zero,10019680 <___vfprintf_internal_r+0x1a74>
1001879c:	103ea71e 	bne	r2,zero,1001823c <___vfprintf_internal_r+0x630>
100187a0:	6500004c 	andi	r20,r12,1
100187a4:	a0028226 	beq	r20,zero,100191b0 <___vfprintf_internal_r+0x15a4>
100187a8:	00800c04 	movi	r2,48
100187ac:	d88028c5 	stb	r2,163(sp)
100187b0:	dc0028c4 	addi	r16,sp,163
100187b4:	00002806 	br	10018858 <___vfprintf_internal_r+0xc4c>
100187b8:	b2800007 	ldb	r10,0(r22)
100187bc:	50801b18 	cmpnei	r2,r10,108
100187c0:	10032926 	beq	r2,zero,10019468 <___vfprintf_internal_r+0x185c>
100187c4:	63000414 	ori	r12,r12,16
100187c8:	003d6b06 	br	10017d78 <___vfprintf_internal_r+0x16c>
100187cc:	63001014 	ori	r12,r12,64
100187d0:	b2800007 	ldb	r10,0(r22)
100187d4:	003d6806 	br	10017d78 <___vfprintf_internal_r+0x16c>
100187d8:	d9000517 	ldw	r4,20(sp)
100187dc:	00155300 	call	10015530 <__sinit>
100187e0:	003d2306 	br	10017c70 <___vfprintf_internal_r+0x64>
100187e4:	d8c00617 	ldw	r3,24(sp)
100187e8:	18800117 	ldw	r2,4(r3)
100187ec:	1d400017 	ldw	r21,0(r3)
100187f0:	18c00204 	addi	r3,r3,8
100187f4:	d8c00615 	stw	r3,24(sp)
100187f8:	1029883a 	mov	r20,r2
100187fc:	003e8506 	br	10018214 <___vfprintf_internal_r+0x608>
10018800:	d8c00617 	ldw	r3,24(sp)
10018804:	0005883a 	mov	r2,zero
10018808:	1d400017 	ldw	r21,0(r3)
1001880c:	1d000117 	ldw	r20,4(r3)
10018810:	18c00204 	addi	r3,r3,8
10018814:	d8c00615 	stw	r3,24(sp)
10018818:	003fd706 	br	10018778 <___vfprintf_internal_r+0xb6c>
1001881c:	d8c00617 	ldw	r3,24(sp)
10018820:	00800044 	movi	r2,1
10018824:	1d400017 	ldw	r21,0(r3)
10018828:	1d000117 	ldw	r20,4(r3)
1001882c:	18c00204 	addi	r3,r3,8
10018830:	d8c00615 	stw	r3,24(sp)
10018834:	003fd006 	br	10018778 <___vfprintf_internal_r+0xb6c>
10018838:	a000111e 	bne	r20,zero,10018880 <___vfprintf_internal_r+0xc74>
1001883c:	a88002a8 	cmpgeui	r2,r21,10
10018840:	10000f1e 	bne	r2,zero,10018880 <___vfprintf_internal_r+0xc74>
10018844:	ad400c04 	addi	r21,r21,48
10018848:	dd4028c5 	stb	r21,163(sp)
1001884c:	6025883a 	mov	r18,r12
10018850:	05000044 	movi	r20,1
10018854:	dc0028c4 	addi	r16,sp,163
10018858:	582b883a 	mov	r21,r11
1001885c:	5d00010e 	bge	r11,r20,10018864 <___vfprintf_internal_r+0xc58>
10018860:	a02b883a 	mov	r21,r20
10018864:	d8000715 	stw	zero,28(sp)
10018868:	6b403fcc 	andi	r13,r13,255
1001886c:	6b40201c 	xori	r13,r13,128
10018870:	6b7fe004 	addi	r13,r13,-128
10018874:	683e8126 	beq	r13,zero,1001827c <___vfprintf_internal_r+0x670>
10018878:	ad400044 	addi	r21,r21,1
1001887c:	003e7f06 	br	1001827c <___vfprintf_internal_r+0x670>
10018880:	dc400e15 	stw	r17,56(sp)
10018884:	b821883a 	mov	r16,r23
10018888:	a023883a 	mov	r17,r20
1001888c:	db000715 	stw	r12,28(sp)
10018890:	9829883a 	mov	r20,r19
10018894:	dac00f15 	stw	r11,60(sp)
10018898:	4025883a 	mov	r18,r8
1001889c:	6827883a 	mov	r19,r13
100188a0:	00000206 	br	100188ac <___vfprintf_internal_r+0xca0>
100188a4:	102b883a 	mov	r21,r2
100188a8:	1823883a 	mov	r17,r3
100188ac:	a809883a 	mov	r4,r21
100188b0:	880b883a 	mov	r5,r17
100188b4:	01800284 	movi	r6,10
100188b8:	000f883a 	mov	r7,zero
100188bc:	001f9140 	call	1001f914 <__umoddi3>
100188c0:	10800c04 	addi	r2,r2,48
100188c4:	843fffc4 	addi	r16,r16,-1
100188c8:	a809883a 	mov	r4,r21
100188cc:	880b883a 	mov	r5,r17
100188d0:	80800005 	stb	r2,0(r16)
100188d4:	01800284 	movi	r6,10
100188d8:	000f883a 	mov	r7,zero
100188dc:	001f37c0 	call	1001f37c <__udivdi3>
100188e0:	883ff01e 	bne	r17,zero,100188a4 <___vfprintf_internal_r+0xc98>
100188e4:	ad4002a8 	cmpgeui	r21,r21,10
100188e8:	a83fee1e 	bne	r21,zero,100188a4 <___vfprintf_internal_r+0xc98>
100188ec:	db000717 	ldw	r12,28(sp)
100188f0:	dc400e17 	ldw	r17,56(sp)
100188f4:	dac00f17 	ldw	r11,60(sp)
100188f8:	981b883a 	mov	r13,r19
100188fc:	9011883a 	mov	r8,r18
10018900:	a027883a 	mov	r19,r20
10018904:	bc29c83a 	sub	r20,r23,r16
10018908:	6025883a 	mov	r18,r12
1001890c:	003fd206 	br	10018858 <___vfprintf_internal_r+0xc4c>
10018910:	e2801990 	cmplti	r10,fp,102
10018914:	5000ea1e 	bne	r10,zero,10018cc0 <___vfprintf_internal_r+0x10b4>
10018918:	d9000917 	ldw	r4,36(sp)
1001891c:	d9400a17 	ldw	r5,40(sp)
10018920:	000d883a 	mov	r6,zero
10018924:	000f883a 	mov	r7,zero
10018928:	da000f15 	stw	r8,60(sp)
1001892c:	d8c00e15 	stw	r3,56(sp)
10018930:	002109c0 	call	1002109c <__eqdf2>
10018934:	d8c00e17 	ldw	r3,56(sp)
10018938:	da000f17 	ldw	r8,60(sp)
1001893c:	1001891e 	bne	r2,zero,10018f64 <___vfprintf_internal_r+0x1358>
10018940:	d8801d17 	ldw	r2,116(sp)
10018944:	010400b4 	movhi	r4,4098
10018948:	2118a704 	addi	r4,r4,25244
1001894c:	10800044 	addi	r2,r2,1
10018950:	18c00044 	addi	r3,r3,1
10018954:	41000015 	stw	r4,0(r8)
10018958:	01000044 	movi	r4,1
1001895c:	d8801d15 	stw	r2,116(sp)
10018960:	41000115 	stw	r4,4(r8)
10018964:	d8c01e15 	stw	r3,120(sp)
10018968:	10800208 	cmpgei	r2,r2,8
1001896c:	1003331e 	bne	r2,zero,1001963c <___vfprintf_internal_r+0x1a30>
10018970:	42000204 	addi	r8,r8,8
10018974:	d8801617 	ldw	r2,88(sp)
10018978:	d8c00817 	ldw	r3,32(sp)
1001897c:	10c00416 	blt	r2,r3,10018990 <___vfprintf_internal_r+0xd84>
10018980:	9080004c 	andi	r2,r18,1
10018984:	1000021e 	bne	r2,zero,10018990 <___vfprintf_internal_r+0xd84>
10018988:	d8c01e17 	ldw	r3,120(sp)
1001898c:	003e6e06 	br	10018348 <___vfprintf_internal_r+0x73c>
10018990:	d8800d17 	ldw	r2,52(sp)
10018994:	d8c01e17 	ldw	r3,120(sp)
10018998:	d9000b17 	ldw	r4,44(sp)
1001899c:	40800015 	stw	r2,0(r8)
100189a0:	d8801d17 	ldw	r2,116(sp)
100189a4:	20c7883a 	add	r3,r4,r3
100189a8:	41000115 	stw	r4,4(r8)
100189ac:	10800044 	addi	r2,r2,1
100189b0:	d8801d15 	stw	r2,116(sp)
100189b4:	d8c01e15 	stw	r3,120(sp)
100189b8:	10800208 	cmpgei	r2,r2,8
100189bc:	1002b11e 	bne	r2,zero,10019484 <___vfprintf_internal_r+0x1878>
100189c0:	42000204 	addi	r8,r8,8
100189c4:	d8800817 	ldw	r2,32(sp)
100189c8:	143fffc4 	addi	r16,r2,-1
100189cc:	043e5e0e 	bge	zero,r16,10018348 <___vfprintf_internal_r+0x73c>
100189d0:	030400b4 	movhi	r12,4098
100189d4:	81000450 	cmplti	r4,r16,17
100189d8:	6318a784 	addi	r12,r12,25246
100189dc:	d8801d17 	ldw	r2,116(sp)
100189e0:	2003731e 	bne	r4,zero,100197b0 <___vfprintf_internal_r+0x1ba4>
100189e4:	dc400715 	stw	r17,28(sp)
100189e8:	05000404 	movi	r20,16
100189ec:	df000517 	ldw	fp,20(sp)
100189f0:	6023883a 	mov	r17,r12
100189f4:	00000406 	br	10018a08 <___vfprintf_internal_r+0xdfc>
100189f8:	42000204 	addi	r8,r8,8
100189fc:	843ffc04 	addi	r16,r16,-16
10018a00:	81000448 	cmpgei	r4,r16,17
10018a04:	20036826 	beq	r4,zero,100197a8 <___vfprintf_internal_r+0x1b9c>
10018a08:	10800044 	addi	r2,r2,1
10018a0c:	18c00404 	addi	r3,r3,16
10018a10:	44400015 	stw	r17,0(r8)
10018a14:	45000115 	stw	r20,4(r8)
10018a18:	d8c01e15 	stw	r3,120(sp)
10018a1c:	d8801d15 	stw	r2,116(sp)
10018a20:	11000208 	cmpgei	r4,r2,8
10018a24:	203ff426 	beq	r4,zero,100189f8 <___vfprintf_internal_r+0xdec>
10018a28:	d9801c04 	addi	r6,sp,112
10018a2c:	980b883a 	mov	r5,r19
10018a30:	e009883a 	mov	r4,fp
10018a34:	001d8f00 	call	1001d8f0 <__sprint_r>
10018a38:	103d531e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018a3c:	d8c01e17 	ldw	r3,120(sp)
10018a40:	d8801d17 	ldw	r2,116(sp)
10018a44:	b811883a 	mov	r8,r23
10018a48:	003fec06 	br	100189fc <___vfprintf_internal_r+0xdf0>
10018a4c:	8d4fc83a 	sub	r7,r17,r21
10018a50:	01fe2f0e 	bge	zero,r7,10018310 <___vfprintf_internal_r+0x704>
10018a54:	030400b4 	movhi	r12,4098
10018a58:	39000450 	cmplti	r4,r7,17
10018a5c:	6318a784 	addi	r12,r12,25246
10018a60:	d8801d17 	ldw	r2,116(sp)
10018a64:	2000271e 	bne	r4,zero,10018b04 <___vfprintf_internal_r+0xef8>
10018a68:	dc000e15 	stw	r16,56(sp)
10018a6c:	dc800f15 	stw	r18,60(sp)
10018a70:	dc401015 	stw	r17,64(sp)
10018a74:	03400404 	movi	r13,16
10018a78:	3821883a 	mov	r16,r7
10018a7c:	dac01215 	stw	r11,72(sp)
10018a80:	dc400517 	ldw	r17,20(sp)
10018a84:	6025883a 	mov	r18,r12
10018a88:	00000406 	br	10018a9c <___vfprintf_internal_r+0xe90>
10018a8c:	843ffc04 	addi	r16,r16,-16
10018a90:	81000448 	cmpgei	r4,r16,17
10018a94:	42000204 	addi	r8,r8,8
10018a98:	20001426 	beq	r4,zero,10018aec <___vfprintf_internal_r+0xee0>
10018a9c:	10800044 	addi	r2,r2,1
10018aa0:	18c00404 	addi	r3,r3,16
10018aa4:	44800015 	stw	r18,0(r8)
10018aa8:	43400115 	stw	r13,4(r8)
10018aac:	d8c01e15 	stw	r3,120(sp)
10018ab0:	d8801d15 	stw	r2,116(sp)
10018ab4:	11000208 	cmpgei	r4,r2,8
10018ab8:	203ff426 	beq	r4,zero,10018a8c <___vfprintf_internal_r+0xe80>
10018abc:	d9801c04 	addi	r6,sp,112
10018ac0:	980b883a 	mov	r5,r19
10018ac4:	8809883a 	mov	r4,r17
10018ac8:	001d8f00 	call	1001d8f0 <__sprint_r>
10018acc:	103d2e1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018ad0:	843ffc04 	addi	r16,r16,-16
10018ad4:	81000448 	cmpgei	r4,r16,17
10018ad8:	d8c01e17 	ldw	r3,120(sp)
10018adc:	d8801d17 	ldw	r2,116(sp)
10018ae0:	b811883a 	mov	r8,r23
10018ae4:	03400404 	movi	r13,16
10018ae8:	203fec1e 	bne	r4,zero,10018a9c <___vfprintf_internal_r+0xe90>
10018aec:	800f883a 	mov	r7,r16
10018af0:	9019883a 	mov	r12,r18
10018af4:	dc000e17 	ldw	r16,56(sp)
10018af8:	dc401017 	ldw	r17,64(sp)
10018afc:	dac01217 	ldw	r11,72(sp)
10018b00:	dc800f17 	ldw	r18,60(sp)
10018b04:	10800044 	addi	r2,r2,1
10018b08:	19c7883a 	add	r3,r3,r7
10018b0c:	d8801d15 	stw	r2,116(sp)
10018b10:	43000015 	stw	r12,0(r8)
10018b14:	41c00115 	stw	r7,4(r8)
10018b18:	d8c01e15 	stw	r3,120(sp)
10018b1c:	10800208 	cmpgei	r2,r2,8
10018b20:	1002cd1e 	bne	r2,zero,10019658 <___vfprintf_internal_r+0x1a4c>
10018b24:	5d0fc83a 	sub	r7,r11,r20
10018b28:	42000204 	addi	r8,r8,8
10018b2c:	01fdfa0e 	bge	zero,r7,10018318 <___vfprintf_internal_r+0x70c>
10018b30:	030400b4 	movhi	r12,4098
10018b34:	39000450 	cmplti	r4,r7,17
10018b38:	6318a784 	addi	r12,r12,25246
10018b3c:	d8801d17 	ldw	r2,116(sp)
10018b40:	2000251e 	bne	r4,zero,10018bd8 <___vfprintf_internal_r+0xfcc>
10018b44:	dc000e15 	stw	r16,56(sp)
10018b48:	dc800f15 	stw	r18,60(sp)
10018b4c:	dc401015 	stw	r17,64(sp)
10018b50:	02c00404 	movi	r11,16
10018b54:	3821883a 	mov	r16,r7
10018b58:	dc400517 	ldw	r17,20(sp)
10018b5c:	6025883a 	mov	r18,r12
10018b60:	00000406 	br	10018b74 <___vfprintf_internal_r+0xf68>
10018b64:	843ffc04 	addi	r16,r16,-16
10018b68:	81000448 	cmpgei	r4,r16,17
10018b6c:	42000204 	addi	r8,r8,8
10018b70:	20001426 	beq	r4,zero,10018bc4 <___vfprintf_internal_r+0xfb8>
10018b74:	10800044 	addi	r2,r2,1
10018b78:	18c00404 	addi	r3,r3,16
10018b7c:	44800015 	stw	r18,0(r8)
10018b80:	42c00115 	stw	r11,4(r8)
10018b84:	d8c01e15 	stw	r3,120(sp)
10018b88:	d8801d15 	stw	r2,116(sp)
10018b8c:	11000208 	cmpgei	r4,r2,8
10018b90:	203ff426 	beq	r4,zero,10018b64 <___vfprintf_internal_r+0xf58>
10018b94:	d9801c04 	addi	r6,sp,112
10018b98:	980b883a 	mov	r5,r19
10018b9c:	8809883a 	mov	r4,r17
10018ba0:	001d8f00 	call	1001d8f0 <__sprint_r>
10018ba4:	103cf81e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018ba8:	843ffc04 	addi	r16,r16,-16
10018bac:	81000448 	cmpgei	r4,r16,17
10018bb0:	d8c01e17 	ldw	r3,120(sp)
10018bb4:	d8801d17 	ldw	r2,116(sp)
10018bb8:	b811883a 	mov	r8,r23
10018bbc:	02c00404 	movi	r11,16
10018bc0:	203fec1e 	bne	r4,zero,10018b74 <___vfprintf_internal_r+0xf68>
10018bc4:	800f883a 	mov	r7,r16
10018bc8:	9019883a 	mov	r12,r18
10018bcc:	dc401017 	ldw	r17,64(sp)
10018bd0:	dc000e17 	ldw	r16,56(sp)
10018bd4:	dc800f17 	ldw	r18,60(sp)
10018bd8:	10800044 	addi	r2,r2,1
10018bdc:	19c7883a 	add	r3,r3,r7
10018be0:	d8801d15 	stw	r2,116(sp)
10018be4:	43000015 	stw	r12,0(r8)
10018be8:	41c00115 	stw	r7,4(r8)
10018bec:	d8c01e15 	stw	r3,120(sp)
10018bf0:	10800208 	cmpgei	r2,r2,8
10018bf4:	1001621e 	bne	r2,zero,10019180 <___vfprintf_internal_r+0x1574>
10018bf8:	42000204 	addi	r8,r8,8
10018bfc:	003dc606 	br	10018318 <___vfprintf_internal_r+0x70c>
10018c00:	d9000517 	ldw	r4,20(sp)
10018c04:	d9801c04 	addi	r6,sp,112
10018c08:	980b883a 	mov	r5,r19
10018c0c:	001d8f00 	call	1001d8f0 <__sprint_r>
10018c10:	103dd726 	beq	r2,zero,10018370 <___vfprintf_internal_r+0x764>
10018c14:	003cdc06 	br	10017f88 <___vfprintf_internal_r+0x37c>
10018c18:	d9000517 	ldw	r4,20(sp)
10018c1c:	d9801c04 	addi	r6,sp,112
10018c20:	980b883a 	mov	r5,r19
10018c24:	001d8f00 	call	1001d8f0 <__sprint_r>
10018c28:	103cd71e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018c2c:	d9001617 	ldw	r4,88(sp)
10018c30:	d8c01e17 	ldw	r3,120(sp)
10018c34:	b811883a 	mov	r8,r23
10018c38:	2002951e 	bne	r4,zero,10019690 <___vfprintf_internal_r+0x1a84>
10018c3c:	d9000817 	ldw	r4,32(sp)
10018c40:	9080004c 	andi	r2,r18,1
10018c44:	1104b03a 	or	r2,r2,r4
10018c48:	103dbf26 	beq	r2,zero,10018348 <___vfprintf_internal_r+0x73c>
10018c4c:	d8800d17 	ldw	r2,52(sp)
10018c50:	d9000b17 	ldw	r4,44(sp)
10018c54:	40800015 	stw	r2,0(r8)
10018c58:	d8801d17 	ldw	r2,116(sp)
10018c5c:	20c7883a 	add	r3,r4,r3
10018c60:	41000115 	stw	r4,4(r8)
10018c64:	10800044 	addi	r2,r2,1
10018c68:	d8c01e15 	stw	r3,120(sp)
10018c6c:	d8801d15 	stw	r2,116(sp)
10018c70:	11000208 	cmpgei	r4,r2,8
10018c74:	2003641e 	bne	r4,zero,10019a08 <___vfprintf_internal_r+0x1dfc>
10018c78:	42000204 	addi	r8,r8,8
10018c7c:	d9000817 	ldw	r4,32(sp)
10018c80:	10800044 	addi	r2,r2,1
10018c84:	d8801d15 	stw	r2,116(sp)
10018c88:	20c7883a 	add	r3,r4,r3
10018c8c:	44000015 	stw	r16,0(r8)
10018c90:	41000115 	stw	r4,4(r8)
10018c94:	d8c01e15 	stw	r3,120(sp)
10018c98:	10800208 	cmpgei	r2,r2,8
10018c9c:	103da926 	beq	r2,zero,10018344 <___vfprintf_internal_r+0x738>
10018ca0:	d9000517 	ldw	r4,20(sp)
10018ca4:	d9801c04 	addi	r6,sp,112
10018ca8:	980b883a 	mov	r5,r19
10018cac:	001d8f00 	call	1001d8f0 <__sprint_r>
10018cb0:	103cb51e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018cb4:	d8c01e17 	ldw	r3,120(sp)
10018cb8:	b811883a 	mov	r8,r23
10018cbc:	003da206 	br	10018348 <___vfprintf_internal_r+0x73c>
10018cc0:	d8800817 	ldw	r2,32(sp)
10018cc4:	df001d17 	ldw	fp,116(sp)
10018cc8:	18c00044 	addi	r3,r3,1
10018ccc:	10800088 	cmpgei	r2,r2,2
10018cd0:	e5000044 	addi	r20,fp,1
10018cd4:	42800204 	addi	r10,r8,8
10018cd8:	1000fb26 	beq	r2,zero,100190c8 <___vfprintf_internal_r+0x14bc>
10018cdc:	00800044 	movi	r2,1
10018ce0:	40800115 	stw	r2,4(r8)
10018ce4:	44000015 	stw	r16,0(r8)
10018ce8:	d8c01e15 	stw	r3,120(sp)
10018cec:	dd001d15 	stw	r20,116(sp)
10018cf0:	a0800210 	cmplti	r2,r20,8
10018cf4:	10022c26 	beq	r2,zero,100195a8 <___vfprintf_internal_r+0x199c>
10018cf8:	d8800b17 	ldw	r2,44(sp)
10018cfc:	d9000d17 	ldw	r4,52(sp)
10018d00:	a5000044 	addi	r20,r20,1
10018d04:	1887883a 	add	r3,r3,r2
10018d08:	50800115 	stw	r2,4(r10)
10018d0c:	51000015 	stw	r4,0(r10)
10018d10:	d8c01e15 	stw	r3,120(sp)
10018d14:	dd001d15 	stw	r20,116(sp)
10018d18:	a0800208 	cmpgei	r2,r20,8
10018d1c:	1002191e 	bne	r2,zero,10019584 <___vfprintf_internal_r+0x1978>
10018d20:	52800204 	addi	r10,r10,8
10018d24:	d8800817 	ldw	r2,32(sp)
10018d28:	d9000917 	ldw	r4,36(sp)
10018d2c:	d9400a17 	ldw	r5,40(sp)
10018d30:	52000204 	addi	r8,r10,8
10018d34:	12ffffc4 	addi	r11,r2,-1
10018d38:	a7000044 	addi	fp,r20,1
10018d3c:	000d883a 	mov	r6,zero
10018d40:	000f883a 	mov	r7,zero
10018d44:	d8c01215 	stw	r3,72(sp)
10018d48:	da800f15 	stw	r10,60(sp)
10018d4c:	da000e15 	stw	r8,56(sp)
10018d50:	dac00715 	stw	r11,28(sp)
10018d54:	df001015 	stw	fp,64(sp)
10018d58:	002109c0 	call	1002109c <__eqdf2>
10018d5c:	dac00717 	ldw	r11,28(sp)
10018d60:	da000e17 	ldw	r8,56(sp)
10018d64:	da800f17 	ldw	r10,60(sp)
10018d68:	db401017 	ldw	r13,64(sp)
10018d6c:	d8c01217 	ldw	r3,72(sp)
10018d70:	1000e126 	beq	r2,zero,100190f8 <___vfprintf_internal_r+0x14ec>
10018d74:	84000044 	addi	r16,r16,1
10018d78:	1ac7883a 	add	r3,r3,r11
10018d7c:	df001d15 	stw	fp,116(sp)
10018d80:	54000015 	stw	r16,0(r10)
10018d84:	52c00115 	stw	r11,4(r10)
10018d88:	d8c01e15 	stw	r3,120(sp)
10018d8c:	e7000208 	cmpgei	fp,fp,8
10018d90:	e001aa1e 	bne	fp,zero,1001943c <___vfprintf_internal_r+0x1830>
10018d94:	50800404 	addi	r2,r10,16
10018d98:	a7000084 	addi	fp,r20,2
10018d9c:	4015883a 	mov	r10,r8
10018da0:	1011883a 	mov	r8,r2
10018da4:	d9001117 	ldw	r4,68(sp)
10018da8:	d8801844 	addi	r2,sp,97
10018dac:	df001d15 	stw	fp,116(sp)
10018db0:	20c7883a 	add	r3,r4,r3
10018db4:	50800015 	stw	r2,0(r10)
10018db8:	51000115 	stw	r4,4(r10)
10018dbc:	d8c01e15 	stw	r3,120(sp)
10018dc0:	e7000210 	cmplti	fp,fp,8
10018dc4:	e03d601e 	bne	fp,zero,10018348 <___vfprintf_internal_r+0x73c>
10018dc8:	003fb506 	br	10018ca0 <___vfprintf_internal_r+0x1094>
10018dcc:	9019883a 	mov	r12,r18
10018dd0:	003e1906 	br	10018638 <___vfprintf_internal_r+0xa2c>
10018dd4:	030400b4 	movhi	r12,4098
10018dd8:	39000450 	cmplti	r4,r7,17
10018ddc:	6318ab84 	addi	r12,r12,25262
10018de0:	d8801d17 	ldw	r2,116(sp)
10018de4:	20002b1e 	bne	r4,zero,10018e94 <___vfprintf_internal_r+0x1288>
10018de8:	dc001015 	stw	r16,64(sp)
10018dec:	dc801215 	stw	r18,72(sp)
10018df0:	dc401315 	stw	r17,76(sp)
10018df4:	03c00404 	movi	r15,16
10018df8:	db800e15 	stw	r14,56(sp)
10018dfc:	db400f15 	stw	r13,60(sp)
10018e00:	dac01415 	stw	r11,80(sp)
10018e04:	3821883a 	mov	r16,r7
10018e08:	dc400517 	ldw	r17,20(sp)
10018e0c:	6025883a 	mov	r18,r12
10018e10:	00000406 	br	10018e24 <___vfprintf_internal_r+0x1218>
10018e14:	843ffc04 	addi	r16,r16,-16
10018e18:	81000448 	cmpgei	r4,r16,17
10018e1c:	42000204 	addi	r8,r8,8
10018e20:	20001426 	beq	r4,zero,10018e74 <___vfprintf_internal_r+0x1268>
10018e24:	10800044 	addi	r2,r2,1
10018e28:	18c00404 	addi	r3,r3,16
10018e2c:	44800015 	stw	r18,0(r8)
10018e30:	43c00115 	stw	r15,4(r8)
10018e34:	d8c01e15 	stw	r3,120(sp)
10018e38:	d8801d15 	stw	r2,116(sp)
10018e3c:	11000208 	cmpgei	r4,r2,8
10018e40:	203ff426 	beq	r4,zero,10018e14 <___vfprintf_internal_r+0x1208>
10018e44:	d9801c04 	addi	r6,sp,112
10018e48:	980b883a 	mov	r5,r19
10018e4c:	8809883a 	mov	r4,r17
10018e50:	001d8f00 	call	1001d8f0 <__sprint_r>
10018e54:	103c4c1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018e58:	843ffc04 	addi	r16,r16,-16
10018e5c:	81000448 	cmpgei	r4,r16,17
10018e60:	d8c01e17 	ldw	r3,120(sp)
10018e64:	d8801d17 	ldw	r2,116(sp)
10018e68:	b811883a 	mov	r8,r23
10018e6c:	03c00404 	movi	r15,16
10018e70:	203fec1e 	bne	r4,zero,10018e24 <___vfprintf_internal_r+0x1218>
10018e74:	800f883a 	mov	r7,r16
10018e78:	9019883a 	mov	r12,r18
10018e7c:	db800e17 	ldw	r14,56(sp)
10018e80:	db400f17 	ldw	r13,60(sp)
10018e84:	dc401317 	ldw	r17,76(sp)
10018e88:	dac01417 	ldw	r11,80(sp)
10018e8c:	dc001017 	ldw	r16,64(sp)
10018e90:	dc801217 	ldw	r18,72(sp)
10018e94:	10800044 	addi	r2,r2,1
10018e98:	19c7883a 	add	r3,r3,r7
10018e9c:	d8801d15 	stw	r2,116(sp)
10018ea0:	43000015 	stw	r12,0(r8)
10018ea4:	41c00115 	stw	r7,4(r8)
10018ea8:	d8c01e15 	stw	r3,120(sp)
10018eac:	10800208 	cmpgei	r2,r2,8
10018eb0:	1001d41e 	bne	r2,zero,10019604 <___vfprintf_internal_r+0x19f8>
10018eb4:	42000204 	addi	r8,r8,8
10018eb8:	003cf806 	br	1001829c <___vfprintf_internal_r+0x690>
10018ebc:	d9000517 	ldw	r4,20(sp)
10018ec0:	d9801c04 	addi	r6,sp,112
10018ec4:	980b883a 	mov	r5,r19
10018ec8:	dac01015 	stw	r11,64(sp)
10018ecc:	db400f15 	stw	r13,60(sp)
10018ed0:	db800e15 	stw	r14,56(sp)
10018ed4:	001d8f00 	call	1001d8f0 <__sprint_r>
10018ed8:	103c2b1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018edc:	d8c01e17 	ldw	r3,120(sp)
10018ee0:	b811883a 	mov	r8,r23
10018ee4:	dac01017 	ldw	r11,64(sp)
10018ee8:	db400f17 	ldw	r13,60(sp)
10018eec:	db800e17 	ldw	r14,56(sp)
10018ef0:	003cf806 	br	100182d4 <___vfprintf_internal_r+0x6c8>
10018ef4:	d9000517 	ldw	r4,20(sp)
10018ef8:	d9801c04 	addi	r6,sp,112
10018efc:	980b883a 	mov	r5,r19
10018f00:	dac00f15 	stw	r11,60(sp)
10018f04:	db400e15 	stw	r13,56(sp)
10018f08:	001d8f00 	call	1001d8f0 <__sprint_r>
10018f0c:	103c1e1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10018f10:	d8c01e17 	ldw	r3,120(sp)
10018f14:	b811883a 	mov	r8,r23
10018f18:	dac00f17 	ldw	r11,60(sp)
10018f1c:	db400e17 	ldw	r13,56(sp)
10018f20:	003cf906 	br	10018308 <___vfprintf_internal_r+0x6fc>
10018f24:	d9000c17 	ldw	r4,48(sp)
10018f28:	b821883a 	mov	r16,r23
10018f2c:	a88003cc 	andi	r2,r21,15
10018f30:	a006973a 	slli	r3,r20,28
10018f34:	2085883a 	add	r2,r4,r2
10018f38:	a82ad13a 	srli	r21,r21,4
10018f3c:	10800003 	ldbu	r2,0(r2)
10018f40:	a028d13a 	srli	r20,r20,4
10018f44:	843fffc4 	addi	r16,r16,-1
10018f48:	1d6ab03a 	or	r21,r3,r21
10018f4c:	80800005 	stb	r2,0(r16)
10018f50:	ad04b03a 	or	r2,r21,r20
10018f54:	103ff51e 	bne	r2,zero,10018f2c <___vfprintf_internal_r+0x1320>
10018f58:	bc29c83a 	sub	r20,r23,r16
10018f5c:	6025883a 	mov	r18,r12
10018f60:	003e3d06 	br	10018858 <___vfprintf_internal_r+0xc4c>
10018f64:	d9001617 	ldw	r4,88(sp)
10018f68:	0101980e 	bge	zero,r4,100195cc <___vfprintf_internal_r+0x19c0>
10018f6c:	d8800717 	ldw	r2,28(sp)
10018f70:	d9000817 	ldw	r4,32(sp)
10018f74:	1039883a 	mov	fp,r2
10018f78:	20812516 	blt	r4,r2,10019410 <___vfprintf_internal_r+0x1804>
10018f7c:	07000a0e 	bge	zero,fp,10018fa8 <___vfprintf_internal_r+0x139c>
10018f80:	d8801d17 	ldw	r2,116(sp)
10018f84:	1f07883a 	add	r3,r3,fp
10018f88:	44000015 	stw	r16,0(r8)
10018f8c:	10800044 	addi	r2,r2,1
10018f90:	d8801d15 	stw	r2,116(sp)
10018f94:	47000115 	stw	fp,4(r8)
10018f98:	d8c01e15 	stw	r3,120(sp)
10018f9c:	10800208 	cmpgei	r2,r2,8
10018fa0:	1002d91e 	bne	r2,zero,10019b08 <___vfprintf_internal_r+0x1efc>
10018fa4:	42000204 	addi	r8,r8,8
10018fa8:	e0013e16 	blt	fp,zero,100194a4 <___vfprintf_internal_r+0x1898>
10018fac:	d8800717 	ldw	r2,28(sp)
10018fb0:	1739c83a 	sub	fp,r2,fp
10018fb4:	07014516 	blt	zero,fp,100194cc <___vfprintf_internal_r+0x18c0>
10018fb8:	d9001617 	ldw	r4,88(sp)
10018fbc:	d8800817 	ldw	r2,32(sp)
10018fc0:	2081160e 	bge	r4,r2,1001941c <___vfprintf_internal_r+0x1810>
10018fc4:	d8800d17 	ldw	r2,52(sp)
10018fc8:	d9400b17 	ldw	r5,44(sp)
10018fcc:	40800015 	stw	r2,0(r8)
10018fd0:	d8801d17 	ldw	r2,116(sp)
10018fd4:	1947883a 	add	r3,r3,r5
10018fd8:	41400115 	stw	r5,4(r8)
10018fdc:	10800044 	addi	r2,r2,1
10018fe0:	d8801d15 	stw	r2,116(sp)
10018fe4:	d8c01e15 	stw	r3,120(sp)
10018fe8:	10800208 	cmpgei	r2,r2,8
10018fec:	1002601e 	bne	r2,zero,10019970 <___vfprintf_internal_r+0x1d64>
10018ff0:	42000204 	addi	r8,r8,8
10018ff4:	d8800817 	ldw	r2,32(sp)
10018ff8:	d9400717 	ldw	r5,28(sp)
10018ffc:	1105c83a 	sub	r2,r2,r4
10019000:	29015c0e 	bge	r5,r4,10019574 <___vfprintf_internal_r+0x1968>
10019004:	1039883a 	mov	fp,r2
10019008:	07000c0e 	bge	zero,fp,1001903c <___vfprintf_internal_r+0x1430>
1001900c:	d9000717 	ldw	r4,28(sp)
10019010:	1f07883a 	add	r3,r3,fp
10019014:	47000115 	stw	fp,4(r8)
10019018:	8121883a 	add	r16,r16,r4
1001901c:	d9001d17 	ldw	r4,116(sp)
10019020:	44000015 	stw	r16,0(r8)
10019024:	d8c01e15 	stw	r3,120(sp)
10019028:	21000044 	addi	r4,r4,1
1001902c:	d9001d15 	stw	r4,116(sp)
10019030:	21000208 	cmpgei	r4,r4,8
10019034:	2002bf1e 	bne	r4,zero,10019b34 <___vfprintf_internal_r+0x1f28>
10019038:	42000204 	addi	r8,r8,8
1001903c:	e000010e 	bge	fp,zero,10019044 <___vfprintf_internal_r+0x1438>
10019040:	0039883a 	mov	fp,zero
10019044:	1739c83a 	sub	fp,r2,fp
10019048:	073cbf0e 	bge	zero,fp,10018348 <___vfprintf_internal_r+0x73c>
1001904c:	030400b4 	movhi	r12,4098
10019050:	e1000450 	cmplti	r4,fp,17
10019054:	6318a784 	addi	r12,r12,25246
10019058:	d8801d17 	ldw	r2,116(sp)
1001905c:	20023b1e 	bne	r4,zero,1001994c <___vfprintf_internal_r+0x1d40>
10019060:	dc400715 	stw	r17,28(sp)
10019064:	05000404 	movi	r20,16
10019068:	dc000517 	ldw	r16,20(sp)
1001906c:	6023883a 	mov	r17,r12
10019070:	00000406 	br	10019084 <___vfprintf_internal_r+0x1478>
10019074:	42000204 	addi	r8,r8,8
10019078:	e73ffc04 	addi	fp,fp,-16
1001907c:	e1000448 	cmpgei	r4,fp,17
10019080:	20023026 	beq	r4,zero,10019944 <___vfprintf_internal_r+0x1d38>
10019084:	10800044 	addi	r2,r2,1
10019088:	18c00404 	addi	r3,r3,16
1001908c:	44400015 	stw	r17,0(r8)
10019090:	45000115 	stw	r20,4(r8)
10019094:	d8c01e15 	stw	r3,120(sp)
10019098:	d8801d15 	stw	r2,116(sp)
1001909c:	11000208 	cmpgei	r4,r2,8
100190a0:	203ff426 	beq	r4,zero,10019074 <___vfprintf_internal_r+0x1468>
100190a4:	d9801c04 	addi	r6,sp,112
100190a8:	980b883a 	mov	r5,r19
100190ac:	8009883a 	mov	r4,r16
100190b0:	001d8f00 	call	1001d8f0 <__sprint_r>
100190b4:	103bb41e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
100190b8:	d8c01e17 	ldw	r3,120(sp)
100190bc:	d8801d17 	ldw	r2,116(sp)
100190c0:	b811883a 	mov	r8,r23
100190c4:	003fec06 	br	10019078 <___vfprintf_internal_r+0x146c>
100190c8:	9080004c 	andi	r2,r18,1
100190cc:	103f031e 	bne	r2,zero,10018cdc <___vfprintf_internal_r+0x10d0>
100190d0:	00800044 	movi	r2,1
100190d4:	dd001d15 	stw	r20,116(sp)
100190d8:	44000015 	stw	r16,0(r8)
100190dc:	40800115 	stw	r2,4(r8)
100190e0:	d8c01e15 	stw	r3,120(sp)
100190e4:	a5000208 	cmpgei	r20,r20,8
100190e8:	a000d41e 	bne	r20,zero,1001943c <___vfprintf_internal_r+0x1830>
100190ec:	e7000084 	addi	fp,fp,2
100190f0:	42000404 	addi	r8,r8,16
100190f4:	003f2b06 	br	10018da4 <___vfprintf_internal_r+0x1198>
100190f8:	02ff2a0e 	bge	zero,r11,10018da4 <___vfprintf_internal_r+0x1198>
100190fc:	58800450 	cmplti	r2,r11,17
10019100:	030400b4 	movhi	r12,4098
10019104:	1002f81e 	bne	r2,zero,10019ce8 <___vfprintf_internal_r+0x20dc>
10019108:	6318a784 	addi	r12,r12,25246
1001910c:	dc800715 	stw	r18,28(sp)
10019110:	dc400e15 	stw	r17,56(sp)
10019114:	04000404 	movi	r16,16
10019118:	5823883a 	mov	r17,r11
1001911c:	df000517 	ldw	fp,20(sp)
10019120:	6025883a 	mov	r18,r12
10019124:	6829883a 	mov	r20,r13
10019128:	00000506 	br	10019140 <___vfprintf_internal_r+0x1534>
1001912c:	52800204 	addi	r10,r10,8
10019130:	8c7ffc04 	addi	r17,r17,-16
10019134:	88800448 	cmpgei	r2,r17,17
10019138:	10018a26 	beq	r2,zero,10019764 <___vfprintf_internal_r+0x1b58>
1001913c:	a5000044 	addi	r20,r20,1
10019140:	18c00404 	addi	r3,r3,16
10019144:	54800015 	stw	r18,0(r10)
10019148:	54000115 	stw	r16,4(r10)
1001914c:	d8c01e15 	stw	r3,120(sp)
10019150:	dd001d15 	stw	r20,116(sp)
10019154:	a0800208 	cmpgei	r2,r20,8
10019158:	103ff426 	beq	r2,zero,1001912c <___vfprintf_internal_r+0x1520>
1001915c:	d9801c04 	addi	r6,sp,112
10019160:	980b883a 	mov	r5,r19
10019164:	e009883a 	mov	r4,fp
10019168:	001d8f00 	call	1001d8f0 <__sprint_r>
1001916c:	103b861e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019170:	dd001d17 	ldw	r20,116(sp)
10019174:	d8c01e17 	ldw	r3,120(sp)
10019178:	b815883a 	mov	r10,r23
1001917c:	003fec06 	br	10019130 <___vfprintf_internal_r+0x1524>
10019180:	d9000517 	ldw	r4,20(sp)
10019184:	d9801c04 	addi	r6,sp,112
10019188:	980b883a 	mov	r5,r19
1001918c:	001d8f00 	call	1001d8f0 <__sprint_r>
10019190:	103b7d1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019194:	d8c01e17 	ldw	r3,120(sp)
10019198:	b811883a 	mov	r8,r23
1001919c:	003c5e06 	br	10018318 <___vfprintf_internal_r+0x70c>
100191a0:	0029883a 	mov	r20,zero
100191a4:	003bdf06 	br	10018124 <___vfprintf_internal_r+0x518>
100191a8:	b025883a 	mov	r18,r22
100191ac:	003aea06 	br	10017d58 <___vfprintf_internal_r+0x14c>
100191b0:	b821883a 	mov	r16,r23
100191b4:	003da806 	br	10018858 <___vfprintf_internal_r+0xc4c>
100191b8:	d9000917 	ldw	r4,36(sp)
100191bc:	d9400a17 	ldw	r5,40(sp)
100191c0:	da000f15 	stw	r8,60(sp)
100191c4:	200d883a 	mov	r6,r4
100191c8:	280f883a 	mov	r7,r5
100191cc:	dac00e15 	stw	r11,56(sp)
100191d0:	db000715 	stw	r12,28(sp)
100191d4:	00222f40 	call	100222f4 <__unorddf2>
100191d8:	db000717 	ldw	r12,28(sp)
100191dc:	dac00e17 	ldw	r11,56(sp)
100191e0:	da000f17 	ldw	r8,60(sp)
100191e4:	1002af1e 	bne	r2,zero,10019ca4 <___vfprintf_internal_r+0x2098>
100191e8:	00fff7c4 	movi	r3,-33
100191ec:	e0c6703a 	and	r3,fp,r3
100191f0:	58bfffe0 	cmpeqi	r2,r11,-1
100191f4:	d8c00715 	stw	r3,28(sp)
100191f8:	10024c1e 	bne	r2,zero,10019b2c <___vfprintf_internal_r+0x1f20>
100191fc:	188011d8 	cmpnei	r2,r3,71
10019200:	1001fe26 	beq	r2,zero,100199fc <___vfprintf_internal_r+0x1df0>
10019204:	d8800a17 	ldw	r2,40(sp)
10019208:	64804014 	ori	r18,r12,256
1001920c:	1001e116 	blt	r2,zero,10019994 <___vfprintf_internal_r+0x1d88>
10019210:	dd400a17 	ldw	r21,40(sp)
10019214:	d8000e05 	stb	zero,56(sp)
10019218:	e08019a0 	cmpeqi	r2,fp,102
1001921c:	d8800f15 	stw	r2,60(sp)
10019220:	1001741e 	bne	r2,zero,100197f4 <___vfprintf_internal_r+0x1be8>
10019224:	e08011a0 	cmpeqi	r2,fp,70
10019228:	1001721e 	bne	r2,zero,100197f4 <___vfprintf_internal_r+0x1be8>
1001922c:	d8800717 	ldw	r2,28(sp)
10019230:	da001215 	stw	r8,72(sp)
10019234:	db001015 	stw	r12,64(sp)
10019238:	10801158 	cmpnei	r2,r2,69
1001923c:	10020526 	beq	r2,zero,10019a54 <___vfprintf_internal_r+0x1e48>
10019240:	d8801a04 	addi	r2,sp,104
10019244:	d8800315 	stw	r2,12(sp)
10019248:	d9400917 	ldw	r5,36(sp)
1001924c:	d8801704 	addi	r2,sp,92
10019250:	d9000517 	ldw	r4,20(sp)
10019254:	d8800215 	stw	r2,8(sp)
10019258:	d8801604 	addi	r2,sp,88
1001925c:	dac00015 	stw	r11,0(sp)
10019260:	d8800115 	stw	r2,4(sp)
10019264:	01c00084 	movi	r7,2
10019268:	a80d883a 	mov	r6,r21
1001926c:	dac00815 	stw	r11,32(sp)
10019270:	001a2700 	call	1001a270 <_dtoa_r>
10019274:	dac00817 	ldw	r11,32(sp)
10019278:	1021883a 	mov	r16,r2
1001927c:	e08019d8 	cmpnei	r2,fp,103
10019280:	db001017 	ldw	r12,64(sp)
10019284:	da001217 	ldw	r8,72(sp)
10019288:	5829883a 	mov	r20,r11
1001928c:	1002031e 	bne	r2,zero,10019a9c <___vfprintf_internal_r+0x1e90>
10019290:	6080004c 	andi	r2,r12,1
10019294:	1002031e 	bne	r2,zero,10019aa4 <___vfprintf_internal_r+0x1e98>
10019298:	d8c01617 	ldw	r3,88(sp)
1001929c:	d8800717 	ldw	r2,28(sp)
100192a0:	d8c00715 	stw	r3,28(sp)
100192a4:	d8c01a17 	ldw	r3,104(sp)
100192a8:	108011e0 	cmpeqi	r2,r2,71
100192ac:	1c07c83a 	sub	r3,r3,r16
100192b0:	d8c00815 	stw	r3,32(sp)
100192b4:	10000526 	beq	r2,zero,100192cc <___vfprintf_internal_r+0x16c0>
100192b8:	d8c00717 	ldw	r3,28(sp)
100192bc:	18bfff50 	cmplti	r2,r3,-3
100192c0:	1000011e 	bne	r2,zero,100192c8 <___vfprintf_internal_r+0x16bc>
100192c4:	58c2050e 	bge	r11,r3,10019adc <___vfprintf_internal_r+0x1ed0>
100192c8:	e73fff84 	addi	fp,fp,-2
100192cc:	d8800717 	ldw	r2,28(sp)
100192d0:	df001845 	stb	fp,97(sp)
100192d4:	153fffc4 	addi	r20,r2,-1
100192d8:	dd001615 	stw	r20,88(sp)
100192dc:	a0027916 	blt	r20,zero,10019cc4 <___vfprintf_internal_r+0x20b8>
100192e0:	00800ac4 	movi	r2,43
100192e4:	d8801885 	stb	r2,98(sp)
100192e8:	a0800290 	cmplti	r2,r20,10
100192ec:	1002581e 	bne	r2,zero,10019c50 <___vfprintf_internal_r+0x2044>
100192f0:	dc000715 	stw	r16,28(sp)
100192f4:	dd401bc4 	addi	r21,sp,111
100192f8:	a021883a 	mov	r16,r20
100192fc:	db000f15 	stw	r12,60(sp)
10019300:	9829883a 	mov	r20,r19
10019304:	4027883a 	mov	r19,r8
10019308:	00000206 	br	10019314 <___vfprintf_internal_r+0x1708>
1001930c:	202b883a 	mov	r21,r4
10019310:	1021883a 	mov	r16,r2
10019314:	8009883a 	mov	r4,r16
10019318:	01400284 	movi	r5,10
1001931c:	001490c0 	call	1001490c <__modsi3>
10019320:	10800c04 	addi	r2,r2,48
10019324:	8009883a 	mov	r4,r16
10019328:	a8bfffc5 	stb	r2,-1(r21)
1001932c:	01400284 	movi	r5,10
10019330:	001488c0 	call	1001488c <__divsi3>
10019334:	80c01908 	cmpgei	r3,r16,100
10019338:	a93fffc4 	addi	r4,r21,-1
1001933c:	183ff31e 	bne	r3,zero,1001930c <___vfprintf_internal_r+0x1700>
10019340:	10800c04 	addi	r2,r2,48
10019344:	20bfffc5 	stb	r2,-1(r4)
10019348:	a8ffff84 	addi	r3,r21,-2
1001934c:	d9001bc4 	addi	r4,sp,111
10019350:	9811883a 	mov	r8,r19
10019354:	dc000717 	ldw	r16,28(sp)
10019358:	db000f17 	ldw	r12,60(sp)
1001935c:	a027883a 	mov	r19,r20
10019360:	1902732e 	bgeu	r3,r4,10019d30 <___vfprintf_internal_r+0x2124>
10019364:	d90018c4 	addi	r4,sp,99
10019368:	00000106 	br	10019370 <___vfprintf_internal_r+0x1764>
1001936c:	18800003 	ldbu	r2,0(r3)
10019370:	21000044 	addi	r4,r4,1
10019374:	20bfffc5 	stb	r2,-1(r4)
10019378:	18c00044 	addi	r3,r3,1
1001937c:	d8801bc4 	addi	r2,sp,111
10019380:	18bffa1e 	bne	r3,r2,1001936c <___vfprintf_internal_r+0x1760>
10019384:	d8801c44 	addi	r2,sp,113
10019388:	d8c018c4 	addi	r3,sp,99
1001938c:	1545c83a 	sub	r2,r2,r21
10019390:	1885883a 	add	r2,r3,r2
10019394:	d8c01844 	addi	r3,sp,97
10019398:	10c5c83a 	sub	r2,r2,r3
1001939c:	d8801115 	stw	r2,68(sp)
100193a0:	d8c00817 	ldw	r3,32(sp)
100193a4:	d9001117 	ldw	r4,68(sp)
100193a8:	18800088 	cmpgei	r2,r3,2
100193ac:	1929883a 	add	r20,r3,r4
100193b0:	10024926 	beq	r2,zero,10019cd8 <___vfprintf_internal_r+0x20cc>
100193b4:	d8800b17 	ldw	r2,44(sp)
100193b8:	a0a9883a 	add	r20,r20,r2
100193bc:	a02b883a 	mov	r21,r20
100193c0:	a000010e 	bge	r20,zero,100193c8 <___vfprintf_internal_r+0x17bc>
100193c4:	002b883a 	mov	r21,zero
100193c8:	d8000715 	stw	zero,28(sp)
100193cc:	00013f06 	br	100198cc <___vfprintf_internal_r+0x1cc0>
100193d0:	00800c04 	movi	r2,48
100193d4:	d8801585 	stb	r2,86(sp)
100193d8:	df0015c5 	stb	fp,87(sp)
100193dc:	63000094 	ori	r12,r12,2
100193e0:	00800084 	movi	r2,2
100193e4:	003ce406 	br	10018778 <___vfprintf_internal_r+0xb6c>
100193e8:	d9400417 	ldw	r5,16(sp)
100193ec:	20800017 	ldw	r2,0(r4)
100193f0:	d8c00615 	stw	r3,24(sp)
100193f4:	2809d7fa 	srai	r4,r5,31
100193f8:	11400015 	stw	r5,0(r2)
100193fc:	11000115 	stw	r4,4(r2)
10019400:	003a3706 	br	10017ce0 <___vfprintf_internal_r+0xd4>
10019404:	0463c83a 	sub	r17,zero,r17
10019408:	d8800615 	stw	r2,24(sp)
1001940c:	003b1806 	br	10018070 <___vfprintf_internal_r+0x464>
10019410:	2039883a 	mov	fp,r4
10019414:	073eda16 	blt	zero,fp,10018f80 <___vfprintf_internal_r+0x1374>
10019418:	003ee306 	br	10018fa8 <___vfprintf_internal_r+0x139c>
1001941c:	9080004c 	andi	r2,r18,1
10019420:	103ee81e 	bne	r2,zero,10018fc4 <___vfprintf_internal_r+0x13b8>
10019424:	d8800817 	ldw	r2,32(sp)
10019428:	d9400717 	ldw	r5,28(sp)
1001942c:	1105c83a 	sub	r2,r2,r4
10019430:	2900500e 	bge	r5,r4,10019574 <___vfprintf_internal_r+0x1968>
10019434:	1039883a 	mov	fp,r2
10019438:	003f0006 	br	1001903c <___vfprintf_internal_r+0x1430>
1001943c:	d9000517 	ldw	r4,20(sp)
10019440:	d9801c04 	addi	r6,sp,112
10019444:	980b883a 	mov	r5,r19
10019448:	001d8f00 	call	1001d8f0 <__sprint_r>
1001944c:	103ace1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019450:	df001d17 	ldw	fp,116(sp)
10019454:	d8c01e17 	ldw	r3,120(sp)
10019458:	da002b04 	addi	r8,sp,172
1001945c:	e7000044 	addi	fp,fp,1
10019460:	b815883a 	mov	r10,r23
10019464:	003e4f06 	br	10018da4 <___vfprintf_internal_r+0x1198>
10019468:	b7000043 	ldbu	fp,1(r22)
1001946c:	63000814 	ori	r12,r12,32
10019470:	b5800044 	addi	r22,r22,1
10019474:	e2803fcc 	andi	r10,fp,255
10019478:	5280201c 	xori	r10,r10,128
1001947c:	52bfe004 	addi	r10,r10,-128
10019480:	003a3d06 	br	10017d78 <___vfprintf_internal_r+0x16c>
10019484:	d9000517 	ldw	r4,20(sp)
10019488:	d9801c04 	addi	r6,sp,112
1001948c:	980b883a 	mov	r5,r19
10019490:	001d8f00 	call	1001d8f0 <__sprint_r>
10019494:	103abc1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019498:	d8c01e17 	ldw	r3,120(sp)
1001949c:	b811883a 	mov	r8,r23
100194a0:	003d4806 	br	100189c4 <___vfprintf_internal_r+0xdb8>
100194a4:	0039883a 	mov	fp,zero
100194a8:	003ec006 	br	10018fac <___vfprintf_internal_r+0x13a0>
100194ac:	588001f0 	cmpltui	r2,r11,7
100194b0:	5829883a 	mov	r20,r11
100194b4:	10013b26 	beq	r2,zero,100199a4 <___vfprintf_internal_r+0x1d98>
100194b8:	040400b4 	movhi	r16,4098
100194bc:	a02b883a 	mov	r21,r20
100194c0:	dc800615 	stw	r18,24(sp)
100194c4:	8418a504 	addi	r16,r16,25236
100194c8:	003b6906 	br	10018270 <___vfprintf_internal_r+0x664>
100194cc:	030400b4 	movhi	r12,4098
100194d0:	e1000450 	cmplti	r4,fp,17
100194d4:	6318a784 	addi	r12,r12,25246
100194d8:	d8801d17 	ldw	r2,116(sp)
100194dc:	20010b1e 	bne	r4,zero,1001990c <___vfprintf_internal_r+0x1d00>
100194e0:	b009883a 	mov	r4,r22
100194e4:	dc000e15 	stw	r16,56(sp)
100194e8:	dc800f15 	stw	r18,60(sp)
100194ec:	882d883a 	mov	r22,r17
100194f0:	05000404 	movi	r20,16
100194f4:	e023883a 	mov	r17,fp
100194f8:	dc000517 	ldw	r16,20(sp)
100194fc:	6025883a 	mov	r18,r12
10019500:	2039883a 	mov	fp,r4
10019504:	00000406 	br	10019518 <___vfprintf_internal_r+0x190c>
10019508:	42000204 	addi	r8,r8,8
1001950c:	8c7ffc04 	addi	r17,r17,-16
10019510:	89000448 	cmpgei	r4,r17,17
10019514:	2000f626 	beq	r4,zero,100198f0 <___vfprintf_internal_r+0x1ce4>
10019518:	10800044 	addi	r2,r2,1
1001951c:	18c00404 	addi	r3,r3,16
10019520:	44800015 	stw	r18,0(r8)
10019524:	45000115 	stw	r20,4(r8)
10019528:	d8c01e15 	stw	r3,120(sp)
1001952c:	d8801d15 	stw	r2,116(sp)
10019530:	11000208 	cmpgei	r4,r2,8
10019534:	203ff426 	beq	r4,zero,10019508 <___vfprintf_internal_r+0x18fc>
10019538:	d9801c04 	addi	r6,sp,112
1001953c:	980b883a 	mov	r5,r19
10019540:	8009883a 	mov	r4,r16
10019544:	001d8f00 	call	1001d8f0 <__sprint_r>
10019548:	103a8f1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
1001954c:	d8c01e17 	ldw	r3,120(sp)
10019550:	d8801d17 	ldw	r2,116(sp)
10019554:	b811883a 	mov	r8,r23
10019558:	003fec06 	br	1001950c <___vfprintf_internal_r+0x1900>
1001955c:	d8800617 	ldw	r2,24(sp)
10019560:	10800017 	ldw	r2,0(r2)
10019564:	d8c00615 	stw	r3,24(sp)
10019568:	d8c00417 	ldw	r3,16(sp)
1001956c:	10c00015 	stw	r3,0(r2)
10019570:	0039db06 	br	10017ce0 <___vfprintf_internal_r+0xd4>
10019574:	d9000817 	ldw	r4,32(sp)
10019578:	d9400717 	ldw	r5,28(sp)
1001957c:	2179c83a 	sub	fp,r4,r5
10019580:	003ea106 	br	10019008 <___vfprintf_internal_r+0x13fc>
10019584:	d9000517 	ldw	r4,20(sp)
10019588:	d9801c04 	addi	r6,sp,112
1001958c:	980b883a 	mov	r5,r19
10019590:	001d8f00 	call	1001d8f0 <__sprint_r>
10019594:	103a7c1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019598:	d8c01e17 	ldw	r3,120(sp)
1001959c:	dd001d17 	ldw	r20,116(sp)
100195a0:	b815883a 	mov	r10,r23
100195a4:	003ddf06 	br	10018d24 <___vfprintf_internal_r+0x1118>
100195a8:	d9000517 	ldw	r4,20(sp)
100195ac:	d9801c04 	addi	r6,sp,112
100195b0:	980b883a 	mov	r5,r19
100195b4:	001d8f00 	call	1001d8f0 <__sprint_r>
100195b8:	103a731e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
100195bc:	d8c01e17 	ldw	r3,120(sp)
100195c0:	dd001d17 	ldw	r20,116(sp)
100195c4:	b815883a 	mov	r10,r23
100195c8:	003dcb06 	br	10018cf8 <___vfprintf_internal_r+0x10ec>
100195cc:	d8801d17 	ldw	r2,116(sp)
100195d0:	014400b4 	movhi	r5,4098
100195d4:	2958a704 	addi	r5,r5,25244
100195d8:	10800044 	addi	r2,r2,1
100195dc:	18c00044 	addi	r3,r3,1
100195e0:	41400015 	stw	r5,0(r8)
100195e4:	01400044 	movi	r5,1
100195e8:	d8801d15 	stw	r2,116(sp)
100195ec:	41400115 	stw	r5,4(r8)
100195f0:	d8c01e15 	stw	r3,120(sp)
100195f4:	10800208 	cmpgei	r2,r2,8
100195f8:	103d871e 	bne	r2,zero,10018c18 <___vfprintf_internal_r+0x100c>
100195fc:	42000204 	addi	r8,r8,8
10019600:	003d8d06 	br	10018c38 <___vfprintf_internal_r+0x102c>
10019604:	d9000517 	ldw	r4,20(sp)
10019608:	d9801c04 	addi	r6,sp,112
1001960c:	980b883a 	mov	r5,r19
10019610:	dac01015 	stw	r11,64(sp)
10019614:	db400f15 	stw	r13,60(sp)
10019618:	db800e15 	stw	r14,56(sp)
1001961c:	001d8f00 	call	1001d8f0 <__sprint_r>
10019620:	103a591e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019624:	d8c01e17 	ldw	r3,120(sp)
10019628:	b811883a 	mov	r8,r23
1001962c:	dac01017 	ldw	r11,64(sp)
10019630:	db400f17 	ldw	r13,60(sp)
10019634:	db800e17 	ldw	r14,56(sp)
10019638:	003b1806 	br	1001829c <___vfprintf_internal_r+0x690>
1001963c:	d9000517 	ldw	r4,20(sp)
10019640:	d9801c04 	addi	r6,sp,112
10019644:	980b883a 	mov	r5,r19
10019648:	001d8f00 	call	1001d8f0 <__sprint_r>
1001964c:	103a4e1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019650:	b811883a 	mov	r8,r23
10019654:	003cc706 	br	10018974 <___vfprintf_internal_r+0xd68>
10019658:	d9000517 	ldw	r4,20(sp)
1001965c:	d9801c04 	addi	r6,sp,112
10019660:	980b883a 	mov	r5,r19
10019664:	dac00e15 	stw	r11,56(sp)
10019668:	001d8f00 	call	1001d8f0 <__sprint_r>
1001966c:	103a461e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019670:	d8c01e17 	ldw	r3,120(sp)
10019674:	b811883a 	mov	r8,r23
10019678:	dac00e17 	ldw	r11,56(sp)
1001967c:	003b2406 	br	10018310 <___vfprintf_internal_r+0x704>
10019680:	10c00060 	cmpeqi	r3,r2,1
10019684:	9019883a 	mov	r12,r18
10019688:	183bed26 	beq	r3,zero,10018640 <___vfprintf_internal_r+0xa34>
1001968c:	003c6d06 	br	10018844 <___vfprintf_internal_r+0xc38>
10019690:	d8800d17 	ldw	r2,52(sp)
10019694:	d9400b17 	ldw	r5,44(sp)
10019698:	40800015 	stw	r2,0(r8)
1001969c:	d8801d17 	ldw	r2,116(sp)
100196a0:	28c7883a 	add	r3,r5,r3
100196a4:	41400115 	stw	r5,4(r8)
100196a8:	10800044 	addi	r2,r2,1
100196ac:	d8c01e15 	stw	r3,120(sp)
100196b0:	d8801d15 	stw	r2,116(sp)
100196b4:	11400208 	cmpgei	r5,r2,8
100196b8:	2800d31e 	bne	r5,zero,10019a08 <___vfprintf_internal_r+0x1dfc>
100196bc:	42000204 	addi	r8,r8,8
100196c0:	203d6e0e 	bge	r4,zero,10018c7c <___vfprintf_internal_r+0x1070>
100196c4:	030400b4 	movhi	r12,4098
100196c8:	217ffc08 	cmpgei	r5,r4,-16
100196cc:	6318a784 	addi	r12,r12,25246
100196d0:	0129c83a 	sub	r20,zero,r4
100196d4:	28014a1e 	bne	r5,zero,10019c00 <___vfprintf_internal_r+0x1ff4>
100196d8:	dc000715 	stw	r16,28(sp)
100196dc:	07000404 	movi	fp,16
100196e0:	a021883a 	mov	r16,r20
100196e4:	8829883a 	mov	r20,r17
100196e8:	6023883a 	mov	r17,r12
100196ec:	00000406 	br	10019700 <___vfprintf_internal_r+0x1af4>
100196f0:	42000204 	addi	r8,r8,8
100196f4:	843ffc04 	addi	r16,r16,-16
100196f8:	81000448 	cmpgei	r4,r16,17
100196fc:	20013c26 	beq	r4,zero,10019bf0 <___vfprintf_internal_r+0x1fe4>
10019700:	10800044 	addi	r2,r2,1
10019704:	18c00404 	addi	r3,r3,16
10019708:	44400015 	stw	r17,0(r8)
1001970c:	47000115 	stw	fp,4(r8)
10019710:	d8c01e15 	stw	r3,120(sp)
10019714:	d8801d15 	stw	r2,116(sp)
10019718:	11000208 	cmpgei	r4,r2,8
1001971c:	203ff426 	beq	r4,zero,100196f0 <___vfprintf_internal_r+0x1ae4>
10019720:	d9000517 	ldw	r4,20(sp)
10019724:	d9801c04 	addi	r6,sp,112
10019728:	980b883a 	mov	r5,r19
1001972c:	001d8f00 	call	1001d8f0 <__sprint_r>
10019730:	103a151e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019734:	d8c01e17 	ldw	r3,120(sp)
10019738:	d8801d17 	ldw	r2,116(sp)
1001973c:	b811883a 	mov	r8,r23
10019740:	003fec06 	br	100196f4 <___vfprintf_internal_r+0x1ae8>
10019744:	8009883a 	mov	r4,r16
10019748:	00178f00 	call	100178f0 <strlen>
1001974c:	1029883a 	mov	r20,r2
10019750:	102b883a 	mov	r21,r2
10019754:	dc800615 	stw	r18,24(sp)
10019758:	db000717 	ldw	r12,28(sp)
1001975c:	da000e17 	ldw	r8,56(sp)
10019760:	003ac306 	br	10018270 <___vfprintf_internal_r+0x664>
10019764:	8817883a 	mov	r11,r17
10019768:	9019883a 	mov	r12,r18
1001976c:	dc400e17 	ldw	r17,56(sp)
10019770:	dc800717 	ldw	r18,28(sp)
10019774:	a7000044 	addi	fp,r20,1
10019778:	50800204 	addi	r2,r10,8
1001977c:	1ac7883a 	add	r3,r3,r11
10019780:	53000015 	stw	r12,0(r10)
10019784:	52c00115 	stw	r11,4(r10)
10019788:	d8c01e15 	stw	r3,120(sp)
1001978c:	df001d15 	stw	fp,116(sp)
10019790:	e1000208 	cmpgei	r4,fp,8
10019794:	203f291e 	bne	r4,zero,1001943c <___vfprintf_internal_r+0x1830>
10019798:	e7000044 	addi	fp,fp,1
1001979c:	12000204 	addi	r8,r2,8
100197a0:	1015883a 	mov	r10,r2
100197a4:	003d7f06 	br	10018da4 <___vfprintf_internal_r+0x1198>
100197a8:	8819883a 	mov	r12,r17
100197ac:	dc400717 	ldw	r17,28(sp)
100197b0:	10800044 	addi	r2,r2,1
100197b4:	1c07883a 	add	r3,r3,r16
100197b8:	d8801d15 	stw	r2,116(sp)
100197bc:	43000015 	stw	r12,0(r8)
100197c0:	44000115 	stw	r16,4(r8)
100197c4:	d8c01e15 	stw	r3,120(sp)
100197c8:	10800208 	cmpgei	r2,r2,8
100197cc:	103add26 	beq	r2,zero,10018344 <___vfprintf_internal_r+0x738>
100197d0:	003d3306 	br	10018ca0 <___vfprintf_internal_r+0x1094>
100197d4:	d8800615 	stw	r2,24(sp)
100197d8:	0029883a 	mov	r20,zero
100197dc:	0005883a 	mov	r2,zero
100197e0:	003be506 	br	10018778 <___vfprintf_internal_r+0xb6c>
100197e4:	d8800615 	stw	r2,24(sp)
100197e8:	0029883a 	mov	r20,zero
100197ec:	00800044 	movi	r2,1
100197f0:	003be106 	br	10018778 <___vfprintf_internal_r+0xb6c>
100197f4:	d8801a04 	addi	r2,sp,104
100197f8:	d8800315 	stw	r2,12(sp)
100197fc:	d9400917 	ldw	r5,36(sp)
10019800:	d8801704 	addi	r2,sp,92
10019804:	d9000517 	ldw	r4,20(sp)
10019808:	d8800215 	stw	r2,8(sp)
1001980c:	d8801604 	addi	r2,sp,88
10019810:	dac00015 	stw	r11,0(sp)
10019814:	d8800115 	stw	r2,4(sp)
10019818:	01c000c4 	movi	r7,3
1001981c:	a80d883a 	mov	r6,r21
10019820:	da001215 	stw	r8,72(sp)
10019824:	db001015 	stw	r12,64(sp)
10019828:	dac00815 	stw	r11,32(sp)
1001982c:	001a2700 	call	1001a270 <_dtoa_r>
10019830:	dac00817 	ldw	r11,32(sp)
10019834:	1021883a 	mov	r16,r2
10019838:	db001017 	ldw	r12,64(sp)
1001983c:	12e9883a 	add	r20,r2,r11
10019840:	80800007 	ldb	r2,0(r16)
10019844:	da001217 	ldw	r8,72(sp)
10019848:	10800c20 	cmpeqi	r2,r2,48
1001984c:	10005b1e 	bne	r2,zero,100199bc <___vfprintf_internal_r+0x1db0>
10019850:	d8801617 	ldw	r2,88(sp)
10019854:	a0a9883a 	add	r20,r20,r2
10019858:	d9000917 	ldw	r4,36(sp)
1001985c:	000d883a 	mov	r6,zero
10019860:	000f883a 	mov	r7,zero
10019864:	a80b883a 	mov	r5,r21
10019868:	da001215 	stw	r8,72(sp)
1001986c:	dac01015 	stw	r11,64(sp)
10019870:	db000815 	stw	r12,32(sp)
10019874:	002109c0 	call	1002109c <__eqdf2>
10019878:	db000817 	ldw	r12,32(sp)
1001987c:	dac01017 	ldw	r11,64(sp)
10019880:	da001217 	ldw	r8,72(sp)
10019884:	1000891e 	bne	r2,zero,10019aac <___vfprintf_internal_r+0x1ea0>
10019888:	a005883a 	mov	r2,r20
1001988c:	1405c83a 	sub	r2,r2,r16
10019890:	d8c00717 	ldw	r3,28(sp)
10019894:	d8800815 	stw	r2,32(sp)
10019898:	d8801617 	ldw	r2,88(sp)
1001989c:	18c011d8 	cmpnei	r3,r3,71
100198a0:	d8800715 	stw	r2,28(sp)
100198a4:	183e8426 	beq	r3,zero,100192b8 <___vfprintf_internal_r+0x16ac>
100198a8:	d8800f17 	ldw	r2,60(sp)
100198ac:	103e8726 	beq	r2,zero,100192cc <___vfprintf_internal_r+0x16c0>
100198b0:	d8c00717 	ldw	r3,28(sp)
100198b4:	6080004c 	andi	r2,r12,1
100198b8:	12c4b03a 	or	r2,r2,r11
100198bc:	00c10d0e 	bge	zero,r3,10019cf4 <___vfprintf_internal_r+0x20e8>
100198c0:	1000f11e 	bne	r2,zero,10019c88 <___vfprintf_internal_r+0x207c>
100198c4:	dd000717 	ldw	r20,28(sp)
100198c8:	a02b883a 	mov	r21,r20
100198cc:	d8800e07 	ldb	r2,56(sp)
100198d0:	10007f26 	beq	r2,zero,10019ad0 <___vfprintf_internal_r+0x1ec4>
100198d4:	00800b44 	movi	r2,45
100198d8:	d8801545 	stb	r2,85(sp)
100198dc:	0017883a 	mov	r11,zero
100198e0:	003be506 	br	10018878 <___vfprintf_internal_r+0xc6c>
100198e4:	040400b4 	movhi	r16,4098
100198e8:	84189704 	addi	r16,r16,25180
100198ec:	003b3406 	br	100185c0 <___vfprintf_internal_r+0x9b4>
100198f0:	9019883a 	mov	r12,r18
100198f4:	dc000e17 	ldw	r16,56(sp)
100198f8:	dc800f17 	ldw	r18,60(sp)
100198fc:	e009883a 	mov	r4,fp
10019900:	8839883a 	mov	fp,r17
10019904:	b023883a 	mov	r17,r22
10019908:	202d883a 	mov	r22,r4
1001990c:	10800044 	addi	r2,r2,1
10019910:	1f07883a 	add	r3,r3,fp
10019914:	d8801d15 	stw	r2,116(sp)
10019918:	43000015 	stw	r12,0(r8)
1001991c:	47000115 	stw	fp,4(r8)
10019920:	d8c01e15 	stw	r3,120(sp)
10019924:	10800208 	cmpgei	r2,r2,8
10019928:	1000421e 	bne	r2,zero,10019a34 <___vfprintf_internal_r+0x1e28>
1001992c:	42000204 	addi	r8,r8,8
10019930:	003da106 	br	10018fb8 <___vfprintf_internal_r+0x13ac>
10019934:	00800b44 	movi	r2,45
10019938:	d8801545 	stb	r2,85(sp)
1001993c:	03400b44 	movi	r13,45
10019940:	003b1b06 	br	100185b0 <___vfprintf_internal_r+0x9a4>
10019944:	8819883a 	mov	r12,r17
10019948:	dc400717 	ldw	r17,28(sp)
1001994c:	10800044 	addi	r2,r2,1
10019950:	1f07883a 	add	r3,r3,fp
10019954:	d8801d15 	stw	r2,116(sp)
10019958:	43000015 	stw	r12,0(r8)
1001995c:	47000115 	stw	fp,4(r8)
10019960:	d8c01e15 	stw	r3,120(sp)
10019964:	10800208 	cmpgei	r2,r2,8
10019968:	103a7626 	beq	r2,zero,10018344 <___vfprintf_internal_r+0x738>
1001996c:	003ccc06 	br	10018ca0 <___vfprintf_internal_r+0x1094>
10019970:	d9000517 	ldw	r4,20(sp)
10019974:	d9801c04 	addi	r6,sp,112
10019978:	980b883a 	mov	r5,r19
1001997c:	001d8f00 	call	1001d8f0 <__sprint_r>
10019980:	1039811e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019984:	d9001617 	ldw	r4,88(sp)
10019988:	d8c01e17 	ldw	r3,120(sp)
1001998c:	b811883a 	mov	r8,r23
10019990:	003d9806 	br	10018ff4 <___vfprintf_internal_r+0x13e8>
10019994:	1560003c 	xorhi	r21,r2,32768
10019998:	00800b44 	movi	r2,45
1001999c:	d8800e05 	stb	r2,56(sp)
100199a0:	003e1d06 	br	10019218 <___vfprintf_internal_r+0x160c>
100199a4:	05000184 	movi	r20,6
100199a8:	003ec306 	br	100194b8 <___vfprintf_internal_r+0x18ac>
100199ac:	002b883a 	mov	r21,zero
100199b0:	003a0706 	br	100181d0 <___vfprintf_internal_r+0x5c4>
100199b4:	d9401545 	stb	r5,85(sp)
100199b8:	00399106 	br	10018000 <___vfprintf_internal_r+0x3f4>
100199bc:	d9000917 	ldw	r4,36(sp)
100199c0:	000d883a 	mov	r6,zero
100199c4:	000f883a 	mov	r7,zero
100199c8:	a80b883a 	mov	r5,r21
100199cc:	da001215 	stw	r8,72(sp)
100199d0:	dac01015 	stw	r11,64(sp)
100199d4:	db000815 	stw	r12,32(sp)
100199d8:	002109c0 	call	1002109c <__eqdf2>
100199dc:	db000817 	ldw	r12,32(sp)
100199e0:	dac01017 	ldw	r11,64(sp)
100199e4:	da001217 	ldw	r8,72(sp)
100199e8:	103f9926 	beq	r2,zero,10019850 <___vfprintf_internal_r+0x1c44>
100199ec:	00800044 	movi	r2,1
100199f0:	12c5c83a 	sub	r2,r2,r11
100199f4:	d8801615 	stw	r2,88(sp)
100199f8:	003f9606 	br	10019854 <___vfprintf_internal_r+0x1c48>
100199fc:	583e011e 	bne	r11,zero,10019204 <___vfprintf_internal_r+0x15f8>
10019a00:	02c00044 	movi	r11,1
10019a04:	003dff06 	br	10019204 <___vfprintf_internal_r+0x15f8>
10019a08:	d9000517 	ldw	r4,20(sp)
10019a0c:	d9801c04 	addi	r6,sp,112
10019a10:	980b883a 	mov	r5,r19
10019a14:	001d8f00 	call	1001d8f0 <__sprint_r>
10019a18:	10395b1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019a1c:	d9001617 	ldw	r4,88(sp)
10019a20:	d8c01e17 	ldw	r3,120(sp)
10019a24:	d8801d17 	ldw	r2,116(sp)
10019a28:	b811883a 	mov	r8,r23
10019a2c:	203c930e 	bge	r4,zero,10018c7c <___vfprintf_internal_r+0x1070>
10019a30:	003f2406 	br	100196c4 <___vfprintf_internal_r+0x1ab8>
10019a34:	d9000517 	ldw	r4,20(sp)
10019a38:	d9801c04 	addi	r6,sp,112
10019a3c:	980b883a 	mov	r5,r19
10019a40:	001d8f00 	call	1001d8f0 <__sprint_r>
10019a44:	1039501e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019a48:	d8c01e17 	ldw	r3,120(sp)
10019a4c:	b811883a 	mov	r8,r23
10019a50:	003d5906 	br	10018fb8 <___vfprintf_internal_r+0x13ac>
10019a54:	d8801a04 	addi	r2,sp,104
10019a58:	d8800315 	stw	r2,12(sp)
10019a5c:	d9400917 	ldw	r5,36(sp)
10019a60:	d8801704 	addi	r2,sp,92
10019a64:	d9000517 	ldw	r4,20(sp)
10019a68:	5d000044 	addi	r20,r11,1
10019a6c:	d8800215 	stw	r2,8(sp)
10019a70:	d8801604 	addi	r2,sp,88
10019a74:	d8800115 	stw	r2,4(sp)
10019a78:	dd000015 	stw	r20,0(sp)
10019a7c:	01c00084 	movi	r7,2
10019a80:	a80d883a 	mov	r6,r21
10019a84:	dac00815 	stw	r11,32(sp)
10019a88:	001a2700 	call	1001a270 <_dtoa_r>
10019a8c:	dac00817 	ldw	r11,32(sp)
10019a90:	db001017 	ldw	r12,64(sp)
10019a94:	da001217 	ldw	r8,72(sp)
10019a98:	1021883a 	mov	r16,r2
10019a9c:	e08011d8 	cmpnei	r2,fp,71
10019aa0:	103dfb26 	beq	r2,zero,10019290 <___vfprintf_internal_r+0x1684>
10019aa4:	8529883a 	add	r20,r16,r20
10019aa8:	003f6b06 	br	10019858 <___vfprintf_internal_r+0x1c4c>
10019aac:	d8801a17 	ldw	r2,104(sp)
10019ab0:	01000c04 	movi	r4,48
10019ab4:	153f752e 	bgeu	r2,r20,1001988c <___vfprintf_internal_r+0x1c80>
10019ab8:	10c00044 	addi	r3,r2,1
10019abc:	d8c01a15 	stw	r3,104(sp)
10019ac0:	11000005 	stb	r4,0(r2)
10019ac4:	d8801a17 	ldw	r2,104(sp)
10019ac8:	153ffb36 	bltu	r2,r20,10019ab8 <___vfprintf_internal_r+0x1eac>
10019acc:	003f6f06 	br	1001988c <___vfprintf_internal_r+0x1c80>
10019ad0:	db401543 	ldbu	r13,85(sp)
10019ad4:	0017883a 	mov	r11,zero
10019ad8:	003b6306 	br	10018868 <___vfprintf_internal_r+0xc5c>
10019adc:	d8800717 	ldw	r2,28(sp)
10019ae0:	d8c00817 	ldw	r3,32(sp)
10019ae4:	10c02216 	blt	r2,r3,10019b70 <___vfprintf_internal_r+0x1f64>
10019ae8:	6300004c 	andi	r12,r12,1
10019aec:	60005f1e 	bne	r12,zero,10019c6c <___vfprintf_internal_r+0x2060>
10019af0:	102b883a 	mov	r21,r2
10019af4:	1000010e 	bge	r2,zero,10019afc <___vfprintf_internal_r+0x1ef0>
10019af8:	002b883a 	mov	r21,zero
10019afc:	dd000717 	ldw	r20,28(sp)
10019b00:	070019c4 	movi	fp,103
10019b04:	003f7106 	br	100198cc <___vfprintf_internal_r+0x1cc0>
10019b08:	d9000517 	ldw	r4,20(sp)
10019b0c:	d9801c04 	addi	r6,sp,112
10019b10:	980b883a 	mov	r5,r19
10019b14:	001d8f00 	call	1001d8f0 <__sprint_r>
10019b18:	10391b1e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019b1c:	d8c01e17 	ldw	r3,120(sp)
10019b20:	b811883a 	mov	r8,r23
10019b24:	e03d210e 	bge	fp,zero,10018fac <___vfprintf_internal_r+0x13a0>
10019b28:	003e5e06 	br	100194a4 <___vfprintf_internal_r+0x1898>
10019b2c:	02c00184 	movi	r11,6
10019b30:	003db406 	br	10019204 <___vfprintf_internal_r+0x15f8>
10019b34:	d9000517 	ldw	r4,20(sp)
10019b38:	d9801c04 	addi	r6,sp,112
10019b3c:	980b883a 	mov	r5,r19
10019b40:	001d8f00 	call	1001d8f0 <__sprint_r>
10019b44:	1039101e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019b48:	d8801617 	ldw	r2,88(sp)
10019b4c:	d9000817 	ldw	r4,32(sp)
10019b50:	d8c01e17 	ldw	r3,120(sp)
10019b54:	b811883a 	mov	r8,r23
10019b58:	2085c83a 	sub	r2,r4,r2
10019b5c:	003d3706 	br	1001903c <___vfprintf_internal_r+0x1430>
10019b60:	582b883a 	mov	r21,r11
10019b64:	dc800615 	stw	r18,24(sp)
10019b68:	5829883a 	mov	r20,r11
10019b6c:	0039c006 	br	10018270 <___vfprintf_internal_r+0x664>
10019b70:	d8800817 	ldw	r2,32(sp)
10019b74:	d8c00b17 	ldw	r3,44(sp)
10019b78:	10e9883a 	add	r20,r2,r3
10019b7c:	d8800717 	ldw	r2,28(sp)
10019b80:	00800316 	blt	zero,r2,10019b90 <___vfprintf_internal_r+0x1f84>
10019b84:	d8800717 	ldw	r2,28(sp)
10019b88:	a0b9c83a 	sub	fp,r20,r2
10019b8c:	e5000044 	addi	r20,fp,1
10019b90:	a02b883a 	mov	r21,r20
10019b94:	a0003a16 	blt	r20,zero,10019c80 <___vfprintf_internal_r+0x2074>
10019b98:	070019c4 	movi	fp,103
10019b9c:	003f4b06 	br	100198cc <___vfprintf_internal_r+0x1cc0>
10019ba0:	d9401545 	stb	r5,85(sp)
10019ba4:	003ac506 	br	100186bc <___vfprintf_internal_r+0xab0>
10019ba8:	d9401545 	stb	r5,85(sp)
10019bac:	003a2506 	br	10018444 <___vfprintf_internal_r+0x838>
10019bb0:	d9401545 	stb	r5,85(sp)
10019bb4:	003a3306 	br	10018484 <___vfprintf_internal_r+0x878>
10019bb8:	d9401545 	stb	r5,85(sp)
10019bbc:	00398806 	br	100181e0 <___vfprintf_internal_r+0x5d4>
10019bc0:	d9401545 	stb	r5,85(sp)
10019bc4:	00395f06 	br	10018144 <___vfprintf_internal_r+0x538>
10019bc8:	d9401545 	stb	r5,85(sp)
10019bcc:	00394b06 	br	100180fc <___vfprintf_internal_r+0x4f0>
10019bd0:	d9401545 	stb	r5,85(sp)
10019bd4:	003a3b06 	br	100184c4 <___vfprintf_internal_r+0x8b8>
10019bd8:	d9401545 	stb	r5,85(sp)
10019bdc:	003a8106 	br	100185e4 <___vfprintf_internal_r+0x9d8>
10019be0:	d9401545 	stb	r5,85(sp)
10019be4:	003a4706 	br	10018504 <___vfprintf_internal_r+0x8f8>
10019be8:	d9401545 	stb	r5,85(sp)
10019bec:	003ac506 	br	10018704 <___vfprintf_internal_r+0xaf8>
10019bf0:	8819883a 	mov	r12,r17
10019bf4:	a023883a 	mov	r17,r20
10019bf8:	8029883a 	mov	r20,r16
10019bfc:	dc000717 	ldw	r16,28(sp)
10019c00:	10800044 	addi	r2,r2,1
10019c04:	1d07883a 	add	r3,r3,r20
10019c08:	43000015 	stw	r12,0(r8)
10019c0c:	45000115 	stw	r20,4(r8)
10019c10:	d8c01e15 	stw	r3,120(sp)
10019c14:	d8801d15 	stw	r2,116(sp)
10019c18:	11000208 	cmpgei	r4,r2,8
10019c1c:	203c1626 	beq	r4,zero,10018c78 <___vfprintf_internal_r+0x106c>
10019c20:	d9000517 	ldw	r4,20(sp)
10019c24:	d9801c04 	addi	r6,sp,112
10019c28:	980b883a 	mov	r5,r19
10019c2c:	001d8f00 	call	1001d8f0 <__sprint_r>
10019c30:	1038d51e 	bne	r2,zero,10017f88 <___vfprintf_internal_r+0x37c>
10019c34:	d8c01e17 	ldw	r3,120(sp)
10019c38:	d8801d17 	ldw	r2,116(sp)
10019c3c:	b811883a 	mov	r8,r23
10019c40:	003c0e06 	br	10018c7c <___vfprintf_internal_r+0x1070>
10019c44:	00bfffc4 	movi	r2,-1
10019c48:	d8800415 	stw	r2,16(sp)
10019c4c:	0038d106 	br	10017f94 <___vfprintf_internal_r+0x388>
10019c50:	00800c04 	movi	r2,48
10019c54:	a0c00c04 	addi	r3,r20,48
10019c58:	d88018c5 	stb	r2,99(sp)
10019c5c:	00800104 	movi	r2,4
10019c60:	d8c01905 	stb	r3,100(sp)
10019c64:	d8801115 	stw	r2,68(sp)
10019c68:	003dcd06 	br	100193a0 <___vfprintf_internal_r+0x1794>
10019c6c:	d8800717 	ldw	r2,28(sp)
10019c70:	d8c00b17 	ldw	r3,44(sp)
10019c74:	10e9883a 	add	r20,r2,r3
10019c78:	a02b883a 	mov	r21,r20
10019c7c:	a03fc60e 	bge	r20,zero,10019b98 <___vfprintf_internal_r+0x1f8c>
10019c80:	002b883a 	mov	r21,zero
10019c84:	003fc406 	br	10019b98 <___vfprintf_internal_r+0x1f8c>
10019c88:	d8800b17 	ldw	r2,44(sp)
10019c8c:	1885883a 	add	r2,r3,r2
10019c90:	12e9883a 	add	r20,r2,r11
10019c94:	a02b883a 	mov	r21,r20
10019c98:	a03f0c0e 	bge	r20,zero,100198cc <___vfprintf_internal_r+0x1cc0>
10019c9c:	002b883a 	mov	r21,zero
10019ca0:	003f0a06 	br	100198cc <___vfprintf_internal_r+0x1cc0>
10019ca4:	d8800a17 	ldw	r2,40(sp)
10019ca8:	10001d16 	blt	r2,zero,10019d20 <___vfprintf_internal_r+0x2114>
10019cac:	db401543 	ldbu	r13,85(sp)
10019cb0:	e0801210 	cmplti	r2,fp,72
10019cb4:	1000171e 	bne	r2,zero,10019d14 <___vfprintf_internal_r+0x2108>
10019cb8:	040400b4 	movhi	r16,4098
10019cbc:	84189a04 	addi	r16,r16,25192
10019cc0:	003a3f06 	br	100185c0 <___vfprintf_internal_r+0x9b4>
10019cc4:	00c00044 	movi	r3,1
10019cc8:	18a9c83a 	sub	r20,r3,r2
10019ccc:	00800b44 	movi	r2,45
10019cd0:	d8801885 	stb	r2,98(sp)
10019cd4:	003d8406 	br	100192e8 <___vfprintf_internal_r+0x16dc>
10019cd8:	6080004c 	andi	r2,r12,1
10019cdc:	d8800715 	stw	r2,28(sp)
10019ce0:	103db41e 	bne	r2,zero,100193b4 <___vfprintf_internal_r+0x17a8>
10019ce4:	003feb06 	br	10019c94 <___vfprintf_internal_r+0x2088>
10019ce8:	4005883a 	mov	r2,r8
10019cec:	6318a784 	addi	r12,r12,25246
10019cf0:	003ea206 	br	1001977c <___vfprintf_internal_r+0x1b70>
10019cf4:	1000031e 	bne	r2,zero,10019d04 <___vfprintf_internal_r+0x20f8>
10019cf8:	05400044 	movi	r21,1
10019cfc:	05000044 	movi	r20,1
10019d00:	003ef206 	br	100198cc <___vfprintf_internal_r+0x1cc0>
10019d04:	d8800b17 	ldw	r2,44(sp)
10019d08:	10800044 	addi	r2,r2,1
10019d0c:	12e9883a 	add	r20,r2,r11
10019d10:	003fe006 	br	10019c94 <___vfprintf_internal_r+0x2088>
10019d14:	040400b4 	movhi	r16,4098
10019d18:	84189904 	addi	r16,r16,25188
10019d1c:	003a2806 	br	100185c0 <___vfprintf_internal_r+0x9b4>
10019d20:	00800b44 	movi	r2,45
10019d24:	d8801545 	stb	r2,85(sp)
10019d28:	03400b44 	movi	r13,45
10019d2c:	003fe006 	br	10019cb0 <___vfprintf_internal_r+0x20a4>
10019d30:	00800084 	movi	r2,2
10019d34:	d8801115 	stw	r2,68(sp)
10019d38:	003d9906 	br	100193a0 <___vfprintf_internal_r+0x1794>
10019d3c:	d8800617 	ldw	r2,24(sp)
10019d40:	12c00017 	ldw	r11,0(r2)
10019d44:	10800104 	addi	r2,r2,4
10019d48:	5800010e 	bge	r11,zero,10019d50 <___vfprintf_internal_r+0x2144>
10019d4c:	02ffffc4 	movi	r11,-1
10019d50:	b7000043 	ldbu	fp,1(r22)
10019d54:	d8800615 	stw	r2,24(sp)
10019d58:	182d883a 	mov	r22,r3
10019d5c:	e2803fcc 	andi	r10,fp,255
10019d60:	5280201c 	xori	r10,r10,128
10019d64:	52bfe004 	addi	r10,r10,-128
10019d68:	00380306 	br	10017d78 <___vfprintf_internal_r+0x16c>

10019d6c <__vfprintf_internal>:
10019d6c:	008400f4 	movhi	r2,4099
10019d70:	300f883a 	mov	r7,r6
10019d74:	280d883a 	mov	r6,r5
10019d78:	200b883a 	mov	r5,r4
10019d7c:	11219817 	ldw	r4,-31136(r2)
10019d80:	0017c0c1 	jmpi	10017c0c <___vfprintf_internal_r>

10019d84 <__sbprintf>:
10019d84:	2880030b 	ldhu	r2,12(r5)
10019d88:	2b001917 	ldw	r12,100(r5)
10019d8c:	2ac0038b 	ldhu	r11,14(r5)
10019d90:	2a800717 	ldw	r10,28(r5)
10019d94:	2a400917 	ldw	r9,36(r5)
10019d98:	defee204 	addi	sp,sp,-1144
10019d9c:	da001a04 	addi	r8,sp,104
10019da0:	00c10004 	movi	r3,1024
10019da4:	dc011a15 	stw	r16,1128(sp)
10019da8:	10bfff4c 	andi	r2,r2,65533
10019dac:	2821883a 	mov	r16,r5
10019db0:	d80b883a 	mov	r5,sp
10019db4:	dc811c15 	stw	r18,1136(sp)
10019db8:	dc411b15 	stw	r17,1132(sp)
10019dbc:	dfc11d15 	stw	ra,1140(sp)
10019dc0:	2025883a 	mov	r18,r4
10019dc4:	d880030d 	sth	r2,12(sp)
10019dc8:	db001915 	stw	r12,100(sp)
10019dcc:	dac0038d 	sth	r11,14(sp)
10019dd0:	da800715 	stw	r10,28(sp)
10019dd4:	da400915 	stw	r9,36(sp)
10019dd8:	da000015 	stw	r8,0(sp)
10019ddc:	da000415 	stw	r8,16(sp)
10019de0:	d8c00215 	stw	r3,8(sp)
10019de4:	d8c00515 	stw	r3,20(sp)
10019de8:	d8000615 	stw	zero,24(sp)
10019dec:	0017c0c0 	call	10017c0c <___vfprintf_internal_r>
10019df0:	1023883a 	mov	r17,r2
10019df4:	10000d0e 	bge	r2,zero,10019e2c <__sbprintf+0xa8>
10019df8:	d880030b 	ldhu	r2,12(sp)
10019dfc:	1080100c 	andi	r2,r2,64
10019e00:	10000326 	beq	r2,zero,10019e10 <__sbprintf+0x8c>
10019e04:	8080030b 	ldhu	r2,12(r16)
10019e08:	10801014 	ori	r2,r2,64
10019e0c:	8080030d 	sth	r2,12(r16)
10019e10:	8805883a 	mov	r2,r17
10019e14:	dfc11d17 	ldw	ra,1140(sp)
10019e18:	dc811c17 	ldw	r18,1136(sp)
10019e1c:	dc411b17 	ldw	r17,1132(sp)
10019e20:	dc011a17 	ldw	r16,1128(sp)
10019e24:	dec11e04 	addi	sp,sp,1144
10019e28:	f800283a 	ret
10019e2c:	d80b883a 	mov	r5,sp
10019e30:	9009883a 	mov	r4,r18
10019e34:	00151ac0 	call	100151ac <_fflush_r>
10019e38:	103fef26 	beq	r2,zero,10019df8 <__sbprintf+0x74>
10019e3c:	047fffc4 	movi	r17,-1
10019e40:	003fed06 	br	10019df8 <__sbprintf+0x74>

10019e44 <_write_r>:
10019e44:	defffe04 	addi	sp,sp,-8
10019e48:	2805883a 	mov	r2,r5
10019e4c:	dc000015 	stw	r16,0(sp)
10019e50:	300b883a 	mov	r5,r6
10019e54:	2021883a 	mov	r16,r4
10019e58:	380d883a 	mov	r6,r7
10019e5c:	1009883a 	mov	r4,r2
10019e60:	008400f4 	movhi	r2,4099
10019e64:	dfc00115 	stw	ra,4(sp)
10019e68:	10295b15 	stw	zero,-23188(r2)
10019e6c:	00231f40 	call	100231f4 <write>
10019e70:	10ffffd8 	cmpnei	r3,r2,-1
10019e74:	18000426 	beq	r3,zero,10019e88 <_write_r+0x44>
10019e78:	dfc00117 	ldw	ra,4(sp)
10019e7c:	dc000017 	ldw	r16,0(sp)
10019e80:	dec00204 	addi	sp,sp,8
10019e84:	f800283a 	ret
10019e88:	00c400f4 	movhi	r3,4099
10019e8c:	18e95b17 	ldw	r3,-23188(r3)
10019e90:	183ff926 	beq	r3,zero,10019e78 <_write_r+0x34>
10019e94:	80c00015 	stw	r3,0(r16)
10019e98:	dfc00117 	ldw	ra,4(sp)
10019e9c:	dc000017 	ldw	r16,0(sp)
10019ea0:	dec00204 	addi	sp,sp,8
10019ea4:	f800283a 	ret

10019ea8 <__swsetup_r>:
10019ea8:	008400f4 	movhi	r2,4099
10019eac:	10a19817 	ldw	r2,-31136(r2)
10019eb0:	defffd04 	addi	sp,sp,-12
10019eb4:	dc400115 	stw	r17,4(sp)
10019eb8:	dc000015 	stw	r16,0(sp)
10019ebc:	dfc00215 	stw	ra,8(sp)
10019ec0:	2023883a 	mov	r17,r4
10019ec4:	2821883a 	mov	r16,r5
10019ec8:	10000226 	beq	r2,zero,10019ed4 <__swsetup_r+0x2c>
10019ecc:	10c00e17 	ldw	r3,56(r2)
10019ed0:	18002026 	beq	r3,zero,10019f54 <__swsetup_r+0xac>
10019ed4:	8080030b 	ldhu	r2,12(r16)
10019ed8:	10c0020c 	andi	r3,r2,8
10019edc:	1009883a 	mov	r4,r2
10019ee0:	18002226 	beq	r3,zero,10019f6c <__swsetup_r+0xc4>
10019ee4:	80c00417 	ldw	r3,16(r16)
10019ee8:	18002826 	beq	r3,zero,10019f8c <__swsetup_r+0xe4>
10019eec:	1100004c 	andi	r4,r2,1
10019ef0:	20000b1e 	bne	r4,zero,10019f20 <__swsetup_r+0x78>
10019ef4:	1080008c 	andi	r2,r2,2
10019ef8:	10002d1e 	bne	r2,zero,10019fb0 <__swsetup_r+0x108>
10019efc:	80800517 	ldw	r2,20(r16)
10019f00:	80800215 	stw	r2,8(r16)
10019f04:	18000b26 	beq	r3,zero,10019f34 <__swsetup_r+0x8c>
10019f08:	0005883a 	mov	r2,zero
10019f0c:	dfc00217 	ldw	ra,8(sp)
10019f10:	dc400117 	ldw	r17,4(sp)
10019f14:	dc000017 	ldw	r16,0(sp)
10019f18:	dec00304 	addi	sp,sp,12
10019f1c:	f800283a 	ret
10019f20:	80800517 	ldw	r2,20(r16)
10019f24:	80000215 	stw	zero,8(r16)
10019f28:	0085c83a 	sub	r2,zero,r2
10019f2c:	80800615 	stw	r2,24(r16)
10019f30:	183ff51e 	bne	r3,zero,10019f08 <__swsetup_r+0x60>
10019f34:	80c0030b 	ldhu	r3,12(r16)
10019f38:	0005883a 	mov	r2,zero
10019f3c:	1900200c 	andi	r4,r3,128
10019f40:	203ff226 	beq	r4,zero,10019f0c <__swsetup_r+0x64>
10019f44:	18c01014 	ori	r3,r3,64
10019f48:	80c0030d 	sth	r3,12(r16)
10019f4c:	00bfffc4 	movi	r2,-1
10019f50:	003fee06 	br	10019f0c <__swsetup_r+0x64>
10019f54:	1009883a 	mov	r4,r2
10019f58:	00155300 	call	10015530 <__sinit>
10019f5c:	8080030b 	ldhu	r2,12(r16)
10019f60:	10c0020c 	andi	r3,r2,8
10019f64:	1009883a 	mov	r4,r2
10019f68:	183fde1e 	bne	r3,zero,10019ee4 <__swsetup_r+0x3c>
10019f6c:	2080040c 	andi	r2,r4,16
10019f70:	10001f26 	beq	r2,zero,10019ff0 <__swsetup_r+0x148>
10019f74:	2080010c 	andi	r2,r4,4
10019f78:	10000f1e 	bne	r2,zero,10019fb8 <__swsetup_r+0x110>
10019f7c:	80c00417 	ldw	r3,16(r16)
10019f80:	20800214 	ori	r2,r4,8
10019f84:	8080030d 	sth	r2,12(r16)
10019f88:	183fd81e 	bne	r3,zero,10019eec <__swsetup_r+0x44>
10019f8c:	1100a00c 	andi	r4,r2,640
10019f90:	21008020 	cmpeqi	r4,r4,512
10019f94:	203fd51e 	bne	r4,zero,10019eec <__swsetup_r+0x44>
10019f98:	800b883a 	mov	r5,r16
10019f9c:	8809883a 	mov	r4,r17
10019fa0:	00161700 	call	10016170 <__smakebuf_r>
10019fa4:	8080030b 	ldhu	r2,12(r16)
10019fa8:	80c00417 	ldw	r3,16(r16)
10019fac:	003fcf06 	br	10019eec <__swsetup_r+0x44>
10019fb0:	0005883a 	mov	r2,zero
10019fb4:	003fd206 	br	10019f00 <__swsetup_r+0x58>
10019fb8:	81400c17 	ldw	r5,48(r16)
10019fbc:	28000626 	beq	r5,zero,10019fd8 <__swsetup_r+0x130>
10019fc0:	80801004 	addi	r2,r16,64
10019fc4:	28800326 	beq	r5,r2,10019fd4 <__swsetup_r+0x12c>
10019fc8:	8809883a 	mov	r4,r17
10019fcc:	00157980 	call	10015798 <_free_r>
10019fd0:	8100030b 	ldhu	r4,12(r16)
10019fd4:	80000c15 	stw	zero,48(r16)
10019fd8:	80c00417 	ldw	r3,16(r16)
10019fdc:	00bff6c4 	movi	r2,-37
10019fe0:	1108703a 	and	r4,r2,r4
10019fe4:	80000115 	stw	zero,4(r16)
10019fe8:	80c00015 	stw	r3,0(r16)
10019fec:	003fe406 	br	10019f80 <__swsetup_r+0xd8>
10019ff0:	00800244 	movi	r2,9
10019ff4:	88800015 	stw	r2,0(r17)
10019ff8:	20801014 	ori	r2,r4,64
10019ffc:	8080030d 	sth	r2,12(r16)
1001a000:	00bfffc4 	movi	r2,-1
1001a004:	003fc106 	br	10019f0c <__swsetup_r+0x64>

1001a008 <_close_r>:
1001a008:	defffe04 	addi	sp,sp,-8
1001a00c:	dc000015 	stw	r16,0(sp)
1001a010:	008400f4 	movhi	r2,4099
1001a014:	2021883a 	mov	r16,r4
1001a018:	2809883a 	mov	r4,r5
1001a01c:	dfc00115 	stw	ra,4(sp)
1001a020:	10295b15 	stw	zero,-23188(r2)
1001a024:	00225bc0 	call	100225bc <close>
1001a028:	10ffffd8 	cmpnei	r3,r2,-1
1001a02c:	18000426 	beq	r3,zero,1001a040 <_close_r+0x38>
1001a030:	dfc00117 	ldw	ra,4(sp)
1001a034:	dc000017 	ldw	r16,0(sp)
1001a038:	dec00204 	addi	sp,sp,8
1001a03c:	f800283a 	ret
1001a040:	00c400f4 	movhi	r3,4099
1001a044:	18e95b17 	ldw	r3,-23188(r3)
1001a048:	183ff926 	beq	r3,zero,1001a030 <_close_r+0x28>
1001a04c:	80c00015 	stw	r3,0(r16)
1001a050:	dfc00117 	ldw	ra,4(sp)
1001a054:	dc000017 	ldw	r16,0(sp)
1001a058:	dec00204 	addi	sp,sp,8
1001a05c:	f800283a 	ret

1001a060 <quorem>:
1001a060:	defff504 	addi	sp,sp,-44
1001a064:	dc800315 	stw	r18,12(sp)
1001a068:	20800417 	ldw	r2,16(r4)
1001a06c:	2c800417 	ldw	r18,16(r5)
1001a070:	dfc00a15 	stw	ra,40(sp)
1001a074:	df000915 	stw	fp,36(sp)
1001a078:	ddc00815 	stw	r23,32(sp)
1001a07c:	dd800715 	stw	r22,28(sp)
1001a080:	dd400615 	stw	r21,24(sp)
1001a084:	dd000515 	stw	r20,20(sp)
1001a088:	dcc00415 	stw	r19,16(sp)
1001a08c:	dc400215 	stw	r17,8(sp)
1001a090:	dc000115 	stw	r16,4(sp)
1001a094:	14807416 	blt	r2,r18,1001a268 <quorem+0x208>
1001a098:	94bfffc4 	addi	r18,r18,-1
1001a09c:	902e90ba 	slli	r23,r18,2
1001a0a0:	2c400504 	addi	r17,r5,20
1001a0a4:	25400504 	addi	r21,r4,20
1001a0a8:	8de9883a 	add	r20,r17,r23
1001a0ac:	a7000017 	ldw	fp,0(r20)
1001a0b0:	adef883a 	add	r23,r21,r23
1001a0b4:	b8c00017 	ldw	r3,0(r23)
1001a0b8:	e7000044 	addi	fp,fp,1
1001a0bc:	282d883a 	mov	r22,r5
1001a0c0:	2021883a 	mov	r16,r4
1001a0c4:	e00b883a 	mov	r5,fp
1001a0c8:	1809883a 	mov	r4,r3
1001a0cc:	d8c00015 	stw	r3,0(sp)
1001a0d0:	00149840 	call	10014984 <__udivsi3>
1001a0d4:	d8c00017 	ldw	r3,0(sp)
1001a0d8:	1027883a 	mov	r19,r2
1001a0dc:	1f002c36 	bltu	r3,fp,1001a190 <quorem+0x130>
1001a0e0:	8811883a 	mov	r8,r17
1001a0e4:	a80b883a 	mov	r5,r21
1001a0e8:	0013883a 	mov	r9,zero
1001a0ec:	0007883a 	mov	r3,zero
1001a0f0:	42000104 	addi	r8,r8,4
1001a0f4:	41ffff17 	ldw	r7,-4(r8)
1001a0f8:	29800017 	ldw	r6,0(r5)
1001a0fc:	29400104 	addi	r5,r5,4
1001a100:	38bfffcc 	andi	r2,r7,65535
1001a104:	14c5383a 	mul	r2,r2,r19
1001a108:	3808d43a 	srli	r4,r7,16
1001a10c:	32bfffcc 	andi	r10,r6,65535
1001a110:	1245883a 	add	r2,r2,r9
1001a114:	1012d43a 	srli	r9,r2,16
1001a118:	11ffffcc 	andi	r7,r2,65535
1001a11c:	24c9383a 	mul	r4,r4,r19
1001a120:	19c7c83a 	sub	r3,r3,r7
1001a124:	1a8f883a 	add	r7,r3,r10
1001a128:	3006d43a 	srli	r3,r6,16
1001a12c:	2249883a 	add	r4,r4,r9
1001a130:	3805d43a 	srai	r2,r7,16
1001a134:	21bfffcc 	andi	r6,r4,65535
1001a138:	1987c83a 	sub	r3,r3,r6
1001a13c:	1887883a 	add	r3,r3,r2
1001a140:	180c943a 	slli	r6,r3,16
1001a144:	39ffffcc 	andi	r7,r7,65535
1001a148:	2012d43a 	srli	r9,r4,16
1001a14c:	31ceb03a 	or	r7,r6,r7
1001a150:	29ffff15 	stw	r7,-4(r5)
1001a154:	1807d43a 	srai	r3,r3,16
1001a158:	a23fe52e 	bgeu	r20,r8,1001a0f0 <quorem+0x90>
1001a15c:	b8800017 	ldw	r2,0(r23)
1001a160:	10000b1e 	bne	r2,zero,1001a190 <quorem+0x130>
1001a164:	b8bfff04 	addi	r2,r23,-4
1001a168:	a880082e 	bgeu	r21,r2,1001a18c <quorem+0x12c>
1001a16c:	b8ffff17 	ldw	r3,-4(r23)
1001a170:	18000326 	beq	r3,zero,1001a180 <quorem+0x120>
1001a174:	00000506 	br	1001a18c <quorem+0x12c>
1001a178:	10c00017 	ldw	r3,0(r2)
1001a17c:	1800031e 	bne	r3,zero,1001a18c <quorem+0x12c>
1001a180:	10bfff04 	addi	r2,r2,-4
1001a184:	94bfffc4 	addi	r18,r18,-1
1001a188:	a8bffb36 	bltu	r21,r2,1001a178 <quorem+0x118>
1001a18c:	84800415 	stw	r18,16(r16)
1001a190:	b00b883a 	mov	r5,r22
1001a194:	8009883a 	mov	r4,r16
1001a198:	001c9080 	call	1001c908 <__mcmp>
1001a19c:	10002516 	blt	r2,zero,1001a234 <quorem+0x1d4>
1001a1a0:	9cc00044 	addi	r19,r19,1
1001a1a4:	a80d883a 	mov	r6,r21
1001a1a8:	0007883a 	mov	r3,zero
1001a1ac:	8c400104 	addi	r17,r17,4
1001a1b0:	893fff17 	ldw	r4,-4(r17)
1001a1b4:	31400017 	ldw	r5,0(r6)
1001a1b8:	31800104 	addi	r6,r6,4
1001a1bc:	20bfffcc 	andi	r2,r4,65535
1001a1c0:	1887c83a 	sub	r3,r3,r2
1001a1c4:	28bfffcc 	andi	r2,r5,65535
1001a1c8:	1885883a 	add	r2,r3,r2
1001a1cc:	2008d43a 	srli	r4,r4,16
1001a1d0:	2806d43a 	srli	r3,r5,16
1001a1d4:	100fd43a 	srai	r7,r2,16
1001a1d8:	117fffcc 	andi	r5,r2,65535
1001a1dc:	1907c83a 	sub	r3,r3,r4
1001a1e0:	19c7883a 	add	r3,r3,r7
1001a1e4:	1804943a 	slli	r2,r3,16
1001a1e8:	1807d43a 	srai	r3,r3,16
1001a1ec:	1144b03a 	or	r2,r2,r5
1001a1f0:	30bfff15 	stw	r2,-4(r6)
1001a1f4:	a47fed2e 	bgeu	r20,r17,1001a1ac <quorem+0x14c>
1001a1f8:	900690ba 	slli	r3,r18,2
1001a1fc:	a8c7883a 	add	r3,r21,r3
1001a200:	18800017 	ldw	r2,0(r3)
1001a204:	10000b1e 	bne	r2,zero,1001a234 <quorem+0x1d4>
1001a208:	18bfff04 	addi	r2,r3,-4
1001a20c:	a880082e 	bgeu	r21,r2,1001a230 <quorem+0x1d0>
1001a210:	18ffff17 	ldw	r3,-4(r3)
1001a214:	18000326 	beq	r3,zero,1001a224 <quorem+0x1c4>
1001a218:	00000506 	br	1001a230 <quorem+0x1d0>
1001a21c:	10c00017 	ldw	r3,0(r2)
1001a220:	1800031e 	bne	r3,zero,1001a230 <quorem+0x1d0>
1001a224:	10bfff04 	addi	r2,r2,-4
1001a228:	94bfffc4 	addi	r18,r18,-1
1001a22c:	a8bffb36 	bltu	r21,r2,1001a21c <quorem+0x1bc>
1001a230:	84800415 	stw	r18,16(r16)
1001a234:	9805883a 	mov	r2,r19
1001a238:	dfc00a17 	ldw	ra,40(sp)
1001a23c:	df000917 	ldw	fp,36(sp)
1001a240:	ddc00817 	ldw	r23,32(sp)
1001a244:	dd800717 	ldw	r22,28(sp)
1001a248:	dd400617 	ldw	r21,24(sp)
1001a24c:	dd000517 	ldw	r20,20(sp)
1001a250:	dcc00417 	ldw	r19,16(sp)
1001a254:	dc800317 	ldw	r18,12(sp)
1001a258:	dc400217 	ldw	r17,8(sp)
1001a25c:	dc000117 	ldw	r16,4(sp)
1001a260:	dec00b04 	addi	sp,sp,44
1001a264:	f800283a 	ret
1001a268:	0005883a 	mov	r2,zero
1001a26c:	003ff206 	br	1001a238 <quorem+0x1d8>

1001a270 <_dtoa_r>:
1001a270:	20801017 	ldw	r2,64(r4)
1001a274:	deffe204 	addi	sp,sp,-120
1001a278:	df001c15 	stw	fp,112(sp)
1001a27c:	dcc01715 	stw	r19,92(sp)
1001a280:	dc401515 	stw	r17,84(sp)
1001a284:	dc001415 	stw	r16,80(sp)
1001a288:	dfc01d15 	stw	ra,116(sp)
1001a28c:	ddc01b15 	stw	r23,108(sp)
1001a290:	dd801a15 	stw	r22,104(sp)
1001a294:	dd401915 	stw	r21,100(sp)
1001a298:	dd001815 	stw	r20,96(sp)
1001a29c:	dc801615 	stw	r18,88(sp)
1001a2a0:	d9400115 	stw	r5,4(sp)
1001a2a4:	d9c00215 	stw	r7,8(sp)
1001a2a8:	2039883a 	mov	fp,r4
1001a2ac:	3027883a 	mov	r19,r6
1001a2b0:	dc002017 	ldw	r16,128(sp)
1001a2b4:	3023883a 	mov	r17,r6
1001a2b8:	10000826 	beq	r2,zero,1001a2dc <_dtoa_r+0x6c>
1001a2bc:	21801117 	ldw	r6,68(r4)
1001a2c0:	00c00044 	movi	r3,1
1001a2c4:	100b883a 	mov	r5,r2
1001a2c8:	1986983a 	sll	r3,r3,r6
1001a2cc:	11800115 	stw	r6,4(r2)
1001a2d0:	10c00215 	stw	r3,8(r2)
1001a2d4:	001c1280 	call	1001c128 <_Bfree>
1001a2d8:	e0001015 	stw	zero,64(fp)
1001a2dc:	98018116 	blt	r19,zero,1001a8e4 <_dtoa_r+0x674>
1001a2e0:	80000015 	stw	zero,0(r16)
1001a2e4:	989ffc2c 	andhi	r2,r19,32752
1001a2e8:	00dffc34 	movhi	r3,32752
1001a2ec:	10c18626 	beq	r2,r3,1001a908 <_dtoa_r+0x698>
1001a2f0:	d9000117 	ldw	r4,4(sp)
1001a2f4:	000d883a 	mov	r6,zero
1001a2f8:	000f883a 	mov	r7,zero
1001a2fc:	880b883a 	mov	r5,r17
1001a300:	002109c0 	call	1002109c <__eqdf2>
1001a304:	1000191e 	bne	r2,zero,1001a36c <_dtoa_r+0xfc>
1001a308:	d8c01f17 	ldw	r3,124(sp)
1001a30c:	00800044 	movi	r2,1
1001a310:	18800015 	stw	r2,0(r3)
1001a314:	d8802117 	ldw	r2,132(sp)
1001a318:	10032426 	beq	r2,zero,1001afac <_dtoa_r+0xd3c>
1001a31c:	d9002117 	ldw	r4,132(sp)
1001a320:	008400b4 	movhi	r2,4098
1001a324:	1098a744 	addi	r2,r2,25245
1001a328:	00c400b4 	movhi	r3,4098
1001a32c:	20800015 	stw	r2,0(r4)
1001a330:	1898a704 	addi	r2,r3,25244
1001a334:	d8800315 	stw	r2,12(sp)
1001a338:	d8800317 	ldw	r2,12(sp)
1001a33c:	dfc01d17 	ldw	ra,116(sp)
1001a340:	df001c17 	ldw	fp,112(sp)
1001a344:	ddc01b17 	ldw	r23,108(sp)
1001a348:	dd801a17 	ldw	r22,104(sp)
1001a34c:	dd401917 	ldw	r21,100(sp)
1001a350:	dd001817 	ldw	r20,96(sp)
1001a354:	dcc01717 	ldw	r19,92(sp)
1001a358:	dc801617 	ldw	r18,88(sp)
1001a35c:	dc401517 	ldw	r17,84(sp)
1001a360:	dc001417 	ldw	r16,80(sp)
1001a364:	dec01e04 	addi	sp,sp,120
1001a368:	f800283a 	ret
1001a36c:	dc800117 	ldw	r18,4(sp)
1001a370:	d8801204 	addi	r2,sp,72
1001a374:	9820d53a 	srli	r16,r19,20
1001a378:	d8800015 	stw	r2,0(sp)
1001a37c:	d9c01304 	addi	r7,sp,76
1001a380:	900b883a 	mov	r5,r18
1001a384:	880d883a 	mov	r6,r17
1001a388:	e009883a 	mov	r4,fp
1001a38c:	001cc7c0 	call	1001cc7c <__d2b>
1001a390:	102b883a 	mov	r21,r2
1001a394:	8001701e 	bne	r16,zero,1001a958 <_dtoa_r+0x6e8>
1001a398:	dc801217 	ldw	r18,72(sp)
1001a39c:	dc001317 	ldw	r16,76(sp)
1001a3a0:	9421883a 	add	r16,r18,r16
1001a3a4:	80810c84 	addi	r2,r16,1074
1001a3a8:	10c00850 	cmplti	r3,r2,33
1001a3ac:	18030f1e 	bne	r3,zero,1001afec <_dtoa_r+0xd7c>
1001a3b0:	01001004 	movi	r4,64
1001a3b4:	2085c83a 	sub	r2,r4,r2
1001a3b8:	98a6983a 	sll	r19,r19,r2
1001a3bc:	d8800117 	ldw	r2,4(sp)
1001a3c0:	81010484 	addi	r4,r16,1042
1001a3c4:	1108d83a 	srl	r4,r2,r4
1001a3c8:	9908b03a 	or	r4,r19,r4
1001a3cc:	00224900 	call	10022490 <__floatunsidf>
1001a3d0:	1009883a 	mov	r4,r2
1001a3d4:	017f8434 	movhi	r5,65040
1001a3d8:	00800044 	movi	r2,1
1001a3dc:	194b883a 	add	r5,r3,r5
1001a3e0:	843fffc4 	addi	r16,r16,-1
1001a3e4:	d8800a15 	stw	r2,40(sp)
1001a3e8:	000d883a 	mov	r6,zero
1001a3ec:	01cffe34 	movhi	r7,16376
1001a3f0:	00219880 	call	10021988 <__subdf3>
1001a3f4:	0198dbf4 	movhi	r6,25455
1001a3f8:	01cff4f4 	movhi	r7,16339
1001a3fc:	3190d844 	addi	r6,r6,17249
1001a400:	39e1e9c4 	addi	r7,r7,-30809
1001a404:	1009883a 	mov	r4,r2
1001a408:	180b883a 	mov	r5,r3
1001a40c:	00212fc0 	call	100212fc <__muldf3>
1001a410:	01a2d874 	movhi	r6,35681
1001a414:	01cff1f4 	movhi	r7,16327
1001a418:	31b22cc4 	addi	r6,r6,-14157
1001a41c:	39e28a04 	addi	r7,r7,-30168
1001a420:	180b883a 	mov	r5,r3
1001a424:	1009883a 	mov	r4,r2
1001a428:	001fe540 	call	1001fe54 <__adddf3>
1001a42c:	8009883a 	mov	r4,r16
1001a430:	1029883a 	mov	r20,r2
1001a434:	1827883a 	mov	r19,r3
1001a438:	00223c80 	call	100223c8 <__floatsidf>
1001a43c:	019427f4 	movhi	r6,20639
1001a440:	01cff4f4 	movhi	r7,16339
1001a444:	319e7ec4 	addi	r6,r6,31227
1001a448:	39d104c4 	addi	r7,r7,17427
1001a44c:	1009883a 	mov	r4,r2
1001a450:	180b883a 	mov	r5,r3
1001a454:	00212fc0 	call	100212fc <__muldf3>
1001a458:	100d883a 	mov	r6,r2
1001a45c:	180f883a 	mov	r7,r3
1001a460:	a009883a 	mov	r4,r20
1001a464:	980b883a 	mov	r5,r19
1001a468:	001fe540 	call	1001fe54 <__adddf3>
1001a46c:	1009883a 	mov	r4,r2
1001a470:	180b883a 	mov	r5,r3
1001a474:	1029883a 	mov	r20,r2
1001a478:	1827883a 	mov	r19,r3
1001a47c:	00223480 	call	10022348 <__fixdfsi>
1001a480:	000d883a 	mov	r6,zero
1001a484:	000f883a 	mov	r7,zero
1001a488:	a009883a 	mov	r4,r20
1001a48c:	980b883a 	mov	r5,r19
1001a490:	102d883a 	mov	r22,r2
1001a494:	002120c0 	call	1002120c <__ledf2>
1001a498:	1002ba16 	blt	r2,zero,1001af84 <_dtoa_r+0xd14>
1001a49c:	9421c83a 	sub	r16,r18,r16
1001a4a0:	b08005e8 	cmpgeui	r2,r22,23
1001a4a4:	853fffc4 	addi	r20,r16,-1
1001a4a8:	1002ae1e 	bne	r2,zero,1001af64 <_dtoa_r+0xcf4>
1001a4ac:	b00690fa 	slli	r3,r22,3
1001a4b0:	008400b4 	movhi	r2,4098
1001a4b4:	10996b04 	addi	r2,r2,26028
1001a4b8:	10c5883a 	add	r2,r2,r3
1001a4bc:	11800017 	ldw	r6,0(r2)
1001a4c0:	11c00117 	ldw	r7,4(r2)
1001a4c4:	d9000117 	ldw	r4,4(sp)
1001a4c8:	880b883a 	mov	r5,r17
1001a4cc:	002120c0 	call	1002120c <__ledf2>
1001a4d0:	10026f0e 	bge	r2,zero,1001ae90 <_dtoa_r+0xc20>
1001a4d4:	d8000915 	stw	zero,36(sp)
1001a4d8:	b5bfffc4 	addi	r22,r22,-1
1001a4dc:	a002a416 	blt	r20,zero,1001af70 <_dtoa_r+0xd00>
1001a4e0:	d8000515 	stw	zero,20(sp)
1001a4e4:	b0026d0e 	bge	r22,zero,1001ae9c <_dtoa_r+0xc2c>
1001a4e8:	d8800517 	ldw	r2,20(sp)
1001a4ec:	d8c00217 	ldw	r3,8(sp)
1001a4f0:	dd800415 	stw	r22,16(sp)
1001a4f4:	1585c83a 	sub	r2,r2,r22
1001a4f8:	d8800515 	stw	r2,20(sp)
1001a4fc:	0585c83a 	sub	r2,zero,r22
1001a500:	d8800815 	stw	r2,32(sp)
1001a504:	188002a8 	cmpgeui	r2,r3,10
1001a508:	002d883a 	mov	r22,zero
1001a50c:	1002691e 	bne	r2,zero,1001aeb4 <_dtoa_r+0xc44>
1001a510:	18800190 	cmplti	r2,r3,6
1001a514:	1002ba1e 	bne	r2,zero,1001b000 <_dtoa_r+0xd90>
1001a518:	18bfff04 	addi	r2,r3,-4
1001a51c:	d8800215 	stw	r2,8(sp)
1001a520:	0021883a 	mov	r16,zero
1001a524:	d8c00217 	ldw	r3,8(sp)
1001a528:	188000e0 	cmpeqi	r2,r3,3
1001a52c:	10039d1e 	bne	r2,zero,1001b3a4 <_dtoa_r+0x1134>
1001a530:	18800108 	cmpgei	r2,r3,4
1001a534:	10027a26 	beq	r2,zero,1001af20 <_dtoa_r+0xcb0>
1001a538:	d8c00217 	ldw	r3,8(sp)
1001a53c:	18800120 	cmpeqi	r2,r3,4
1001a540:	10026926 	beq	r2,zero,1001aee8 <_dtoa_r+0xc78>
1001a544:	00800044 	movi	r2,1
1001a548:	d8800715 	stw	r2,28(sp)
1001a54c:	d8801e17 	ldw	r2,120(sp)
1001a550:	0083670e 	bge	zero,r2,1001b2f0 <_dtoa_r+0x1080>
1001a554:	d8800b15 	stw	r2,44(sp)
1001a558:	d8800615 	stw	r2,24(sp)
1001a55c:	100d883a 	mov	r6,r2
1001a560:	e0001115 	stw	zero,68(fp)
1001a564:	30800610 	cmplti	r2,r6,24
1001a568:	dc800617 	ldw	r18,24(sp)
1001a56c:	1004eb1e 	bne	r2,zero,1001b91c <_dtoa_r+0x16ac>
1001a570:	00c00044 	movi	r3,1
1001a574:	00800104 	movi	r2,4
1001a578:	1085883a 	add	r2,r2,r2
1001a57c:	11000504 	addi	r4,r2,20
1001a580:	180b883a 	mov	r5,r3
1001a584:	18c00044 	addi	r3,r3,1
1001a588:	313ffb2e 	bgeu	r6,r4,1001a578 <_dtoa_r+0x308>
1001a58c:	e1401115 	stw	r5,68(fp)
1001a590:	e009883a 	mov	r4,fp
1001a594:	001c0840 	call	1001c084 <_Balloc>
1001a598:	d8800315 	stw	r2,12(sp)
1001a59c:	e0801015 	stw	r2,64(fp)
1001a5a0:	948003e8 	cmpgeui	r18,r18,15
1001a5a4:	9000fe1e 	bne	r18,zero,1001a9a0 <_dtoa_r+0x730>
1001a5a8:	8000fd26 	beq	r16,zero,1001a9a0 <_dtoa_r+0x730>
1001a5ac:	d9000417 	ldw	r4,16(sp)
1001a5b0:	0103c60e 	bge	zero,r4,1001b4cc <_dtoa_r+0x125c>
1001a5b4:	208003cc 	andi	r2,r4,15
1001a5b8:	100690fa 	slli	r3,r2,3
1001a5bc:	202fd13a 	srai	r23,r4,4
1001a5c0:	008400b4 	movhi	r2,4098
1001a5c4:	10996b04 	addi	r2,r2,26028
1001a5c8:	10c5883a 	add	r2,r2,r3
1001a5cc:	b8c0040c 	andi	r3,r23,16
1001a5d0:	12800017 	ldw	r10,0(r2)
1001a5d4:	12400117 	ldw	r9,4(r2)
1001a5d8:	1803621e 	bne	r3,zero,1001b364 <_dtoa_r+0x10f4>
1001a5dc:	d8800117 	ldw	r2,4(sp)
1001a5e0:	8827883a 	mov	r19,r17
1001a5e4:	04000084 	movi	r16,2
1001a5e8:	d8800c15 	stw	r2,48(sp)
1001a5ec:	048400b4 	movhi	r18,4098
1001a5f0:	94996104 	addi	r18,r18,25988
1001a5f4:	b8000f26 	beq	r23,zero,1001a634 <_dtoa_r+0x3c4>
1001a5f8:	5005883a 	mov	r2,r10
1001a5fc:	4807883a 	mov	r3,r9
1001a600:	b980004c 	andi	r6,r23,1
1001a604:	1009883a 	mov	r4,r2
1001a608:	b82fd07a 	srai	r23,r23,1
1001a60c:	180b883a 	mov	r5,r3
1001a610:	30000426 	beq	r6,zero,1001a624 <_dtoa_r+0x3b4>
1001a614:	91800017 	ldw	r6,0(r18)
1001a618:	91c00117 	ldw	r7,4(r18)
1001a61c:	84000044 	addi	r16,r16,1
1001a620:	00212fc0 	call	100212fc <__muldf3>
1001a624:	94800204 	addi	r18,r18,8
1001a628:	b83ff51e 	bne	r23,zero,1001a600 <_dtoa_r+0x390>
1001a62c:	1015883a 	mov	r10,r2
1001a630:	1813883a 	mov	r9,r3
1001a634:	d9000c17 	ldw	r4,48(sp)
1001a638:	980b883a 	mov	r5,r19
1001a63c:	500d883a 	mov	r6,r10
1001a640:	480f883a 	mov	r7,r9
1001a644:	00207f40 	call	100207f4 <__divdf3>
1001a648:	1025883a 	mov	r18,r2
1001a64c:	1827883a 	mov	r19,r3
1001a650:	d8800917 	ldw	r2,36(sp)
1001a654:	10000626 	beq	r2,zero,1001a670 <_dtoa_r+0x400>
1001a658:	000d883a 	mov	r6,zero
1001a65c:	01cffc34 	movhi	r7,16368
1001a660:	9009883a 	mov	r4,r18
1001a664:	980b883a 	mov	r5,r19
1001a668:	002120c0 	call	1002120c <__ledf2>
1001a66c:	10042616 	blt	r2,zero,1001b708 <_dtoa_r+0x1498>
1001a670:	8009883a 	mov	r4,r16
1001a674:	00223c80 	call	100223c8 <__floatsidf>
1001a678:	900d883a 	mov	r6,r18
1001a67c:	980f883a 	mov	r7,r19
1001a680:	1009883a 	mov	r4,r2
1001a684:	180b883a 	mov	r5,r3
1001a688:	00212fc0 	call	100212fc <__muldf3>
1001a68c:	000d883a 	mov	r6,zero
1001a690:	01d00734 	movhi	r7,16412
1001a694:	1009883a 	mov	r4,r2
1001a698:	180b883a 	mov	r5,r3
1001a69c:	001fe540 	call	1001fe54 <__adddf3>
1001a6a0:	d8800c15 	stw	r2,48(sp)
1001a6a4:	00bf3034 	movhi	r2,64704
1001a6a8:	1885883a 	add	r2,r3,r2
1001a6ac:	d8800d15 	stw	r2,52(sp)
1001a6b0:	d8800617 	ldw	r2,24(sp)
1001a6b4:	10036d26 	beq	r2,zero,1001b46c <_dtoa_r+0x11fc>
1001a6b8:	d8800417 	ldw	r2,16(sp)
1001a6bc:	d8800f15 	stw	r2,60(sp)
1001a6c0:	d8800617 	ldw	r2,24(sp)
1001a6c4:	d8800e15 	stw	r2,56(sp)
1001a6c8:	980b883a 	mov	r5,r19
1001a6cc:	9009883a 	mov	r4,r18
1001a6d0:	00223480 	call	10022348 <__fixdfsi>
1001a6d4:	1009883a 	mov	r4,r2
1001a6d8:	102f883a 	mov	r23,r2
1001a6dc:	00223c80 	call	100223c8 <__floatsidf>
1001a6e0:	100d883a 	mov	r6,r2
1001a6e4:	180f883a 	mov	r7,r3
1001a6e8:	9009883a 	mov	r4,r18
1001a6ec:	980b883a 	mov	r5,r19
1001a6f0:	00219880 	call	10021988 <__subdf3>
1001a6f4:	1025883a 	mov	r18,r2
1001a6f8:	d8800e17 	ldw	r2,56(sp)
1001a6fc:	1821883a 	mov	r16,r3
1001a700:	ba400c04 	addi	r9,r23,48
1001a704:	10bfffc4 	addi	r2,r2,-1
1001a708:	100690fa 	slli	r3,r2,3
1001a70c:	008400b4 	movhi	r2,4098
1001a710:	10996b04 	addi	r2,r2,26028
1001a714:	10c5883a 	add	r2,r2,r3
1001a718:	11800017 	ldw	r6,0(r2)
1001a71c:	d8c00317 	ldw	r3,12(sp)
1001a720:	11c00117 	ldw	r7,4(r2)
1001a724:	d8800717 	ldw	r2,28(sp)
1001a728:	4811883a 	mov	r8,r9
1001a72c:	da001015 	stw	r8,64(sp)
1001a730:	1dc00044 	addi	r23,r3,1
1001a734:	1003a226 	beq	r2,zero,1001b5c0 <_dtoa_r+0x1350>
1001a738:	0009883a 	mov	r4,zero
1001a73c:	014ff834 	movhi	r5,16352
1001a740:	da401115 	stw	r9,68(sp)
1001a744:	00207f40 	call	100207f4 <__divdf3>
1001a748:	d9800c17 	ldw	r6,48(sp)
1001a74c:	d9c00d17 	ldw	r7,52(sp)
1001a750:	1009883a 	mov	r4,r2
1001a754:	180b883a 	mov	r5,r3
1001a758:	00219880 	call	10021988 <__subdf3>
1001a75c:	1827883a 	mov	r19,r3
1001a760:	da401117 	ldw	r9,68(sp)
1001a764:	d8c00317 	ldw	r3,12(sp)
1001a768:	900d883a 	mov	r6,r18
1001a76c:	800f883a 	mov	r7,r16
1001a770:	1a400005 	stb	r9,0(r3)
1001a774:	1009883a 	mov	r4,r2
1001a778:	980b883a 	mov	r5,r19
1001a77c:	d8800c15 	stw	r2,48(sp)
1001a780:	002111c0 	call	1002111c <__gedf2>
1001a784:	da001017 	ldw	r8,64(sp)
1001a788:	00804816 	blt	zero,r2,1001a8ac <_dtoa_r+0x63c>
1001a78c:	900d883a 	mov	r6,r18
1001a790:	800f883a 	mov	r7,r16
1001a794:	0009883a 	mov	r4,zero
1001a798:	014ffc34 	movhi	r5,16368
1001a79c:	da000d15 	stw	r8,52(sp)
1001a7a0:	00219880 	call	10021988 <__subdf3>
1001a7a4:	d9000c17 	ldw	r4,48(sp)
1001a7a8:	100d883a 	mov	r6,r2
1001a7ac:	180f883a 	mov	r7,r3
1001a7b0:	980b883a 	mov	r5,r19
1001a7b4:	002111c0 	call	1002111c <__gedf2>
1001a7b8:	da000d17 	ldw	r8,52(sp)
1001a7bc:	00844e16 	blt	zero,r2,1001b8f8 <_dtoa_r+0x1688>
1001a7c0:	d8c00e17 	ldw	r3,56(sp)
1001a7c4:	18800060 	cmpeqi	r2,r3,1
1001a7c8:	1000751e 	bne	r2,zero,1001a9a0 <_dtoa_r+0x730>
1001a7cc:	d8800317 	ldw	r2,12(sp)
1001a7d0:	dd800d15 	stw	r22,52(sp)
1001a7d4:	dd000e15 	stw	r20,56(sp)
1001a7d8:	10c5883a 	add	r2,r2,r3
1001a7dc:	dd000c17 	ldw	r20,48(sp)
1001a7e0:	102d883a 	mov	r22,r2
1001a7e4:	dc400c15 	stw	r17,48(sp)
1001a7e8:	00000806 	br	1001a80c <_dtoa_r+0x59c>
1001a7ec:	00219880 	call	10021988 <__subdf3>
1001a7f0:	a00d883a 	mov	r6,r20
1001a7f4:	980f883a 	mov	r7,r19
1001a7f8:	1009883a 	mov	r4,r2
1001a7fc:	180b883a 	mov	r5,r3
1001a800:	002120c0 	call	1002120c <__ledf2>
1001a804:	10042316 	blt	r2,zero,1001b894 <_dtoa_r+0x1624>
1001a808:	bd806226 	beq	r23,r22,1001a994 <_dtoa_r+0x724>
1001a80c:	a009883a 	mov	r4,r20
1001a810:	980b883a 	mov	r5,r19
1001a814:	000d883a 	mov	r6,zero
1001a818:	01d00934 	movhi	r7,16420
1001a81c:	00212fc0 	call	100212fc <__muldf3>
1001a820:	000d883a 	mov	r6,zero
1001a824:	01d00934 	movhi	r7,16420
1001a828:	9009883a 	mov	r4,r18
1001a82c:	800b883a 	mov	r5,r16
1001a830:	1029883a 	mov	r20,r2
1001a834:	1827883a 	mov	r19,r3
1001a838:	00212fc0 	call	100212fc <__muldf3>
1001a83c:	180b883a 	mov	r5,r3
1001a840:	1009883a 	mov	r4,r2
1001a844:	1821883a 	mov	r16,r3
1001a848:	1025883a 	mov	r18,r2
1001a84c:	00223480 	call	10022348 <__fixdfsi>
1001a850:	1009883a 	mov	r4,r2
1001a854:	1023883a 	mov	r17,r2
1001a858:	00223c80 	call	100223c8 <__floatsidf>
1001a85c:	9009883a 	mov	r4,r18
1001a860:	800b883a 	mov	r5,r16
1001a864:	100d883a 	mov	r6,r2
1001a868:	180f883a 	mov	r7,r3
1001a86c:	00219880 	call	10021988 <__subdf3>
1001a870:	bdc00044 	addi	r23,r23,1
1001a874:	8c400c04 	addi	r17,r17,48
1001a878:	a00d883a 	mov	r6,r20
1001a87c:	980f883a 	mov	r7,r19
1001a880:	1009883a 	mov	r4,r2
1001a884:	180b883a 	mov	r5,r3
1001a888:	bc7fffc5 	stb	r17,-1(r23)
1001a88c:	1025883a 	mov	r18,r2
1001a890:	1821883a 	mov	r16,r3
1001a894:	002120c0 	call	1002120c <__ledf2>
1001a898:	900d883a 	mov	r6,r18
1001a89c:	800f883a 	mov	r7,r16
1001a8a0:	0009883a 	mov	r4,zero
1001a8a4:	014ffc34 	movhi	r5,16368
1001a8a8:	103fd00e 	bge	r2,zero,1001a7ec <_dtoa_r+0x57c>
1001a8ac:	d8800f17 	ldw	r2,60(sp)
1001a8b0:	10800044 	addi	r2,r2,1
1001a8b4:	d8800415 	stw	r2,16(sp)
1001a8b8:	a80b883a 	mov	r5,r21
1001a8bc:	e009883a 	mov	r4,fp
1001a8c0:	001c1280 	call	1001c128 <_Bfree>
1001a8c4:	d8801f17 	ldw	r2,124(sp)
1001a8c8:	d8c00417 	ldw	r3,16(sp)
1001a8cc:	b8000005 	stb	zero,0(r23)
1001a8d0:	10c00015 	stw	r3,0(r2)
1001a8d4:	d8802117 	ldw	r2,132(sp)
1001a8d8:	103e9726 	beq	r2,zero,1001a338 <_dtoa_r+0xc8>
1001a8dc:	15c00015 	stw	r23,0(r2)
1001a8e0:	003e9506 	br	1001a338 <_dtoa_r+0xc8>
1001a8e4:	04600034 	movhi	r17,32768
1001a8e8:	8c7fffc4 	addi	r17,r17,-1
1001a8ec:	9c62703a 	and	r17,r19,r17
1001a8f0:	00800044 	movi	r2,1
1001a8f4:	8827883a 	mov	r19,r17
1001a8f8:	80800015 	stw	r2,0(r16)
1001a8fc:	00dffc34 	movhi	r3,32752
1001a900:	989ffc2c 	andhi	r2,r19,32752
1001a904:	10fe7a1e 	bne	r2,r3,1001a2f0 <_dtoa_r+0x80>
1001a908:	00800434 	movhi	r2,16
1001a90c:	d8c01f17 	ldw	r3,124(sp)
1001a910:	10bfffc4 	addi	r2,r2,-1
1001a914:	98a6703a 	and	r19,r19,r2
1001a918:	0089c3c4 	movi	r2,9999
1001a91c:	18800015 	stw	r2,0(r3)
1001a920:	d8800117 	ldw	r2,4(sp)
1001a924:	98aab03a 	or	r21,r19,r2
1001a928:	a800141e 	bne	r21,zero,1001a97c <_dtoa_r+0x70c>
1001a92c:	d8802117 	ldw	r2,132(sp)
1001a930:	1003f626 	beq	r2,zero,1001b90c <_dtoa_r+0x169c>
1001a934:	008400b4 	movhi	r2,4098
1001a938:	1007883a 	mov	r3,r2
1001a93c:	18d95104 	addi	r3,r3,25924
1001a940:	008400b4 	movhi	r2,4098
1001a944:	d8c00315 	stw	r3,12(sp)
1001a948:	10995304 	addi	r2,r2,25932
1001a94c:	d8c02117 	ldw	r3,132(sp)
1001a950:	18800015 	stw	r2,0(r3)
1001a954:	003e7806 	br	1001a338 <_dtoa_r+0xc8>
1001a958:	01400434 	movhi	r5,16
1001a95c:	297fffc4 	addi	r5,r5,-1
1001a960:	894a703a 	and	r5,r17,r5
1001a964:	9009883a 	mov	r4,r18
1001a968:	294ffc34 	orhi	r5,r5,16368
1001a96c:	843f0044 	addi	r16,r16,-1023
1001a970:	dc801217 	ldw	r18,72(sp)
1001a974:	d8000a15 	stw	zero,40(sp)
1001a978:	003e9b06 	br	1001a3e8 <_dtoa_r+0x178>
1001a97c:	d8802117 	ldw	r2,132(sp)
1001a980:	1002461e 	bne	r2,zero,1001b29c <_dtoa_r+0x102c>
1001a984:	008400b4 	movhi	r2,4098
1001a988:	10995004 	addi	r2,r2,25920
1001a98c:	d8800315 	stw	r2,12(sp)
1001a990:	003e6906 	br	1001a338 <_dtoa_r+0xc8>
1001a994:	dd800d17 	ldw	r22,52(sp)
1001a998:	dd000e17 	ldw	r20,56(sp)
1001a99c:	dc400c17 	ldw	r17,48(sp)
1001a9a0:	d8801317 	ldw	r2,76(sp)
1001a9a4:	10009f16 	blt	r2,zero,1001ac24 <_dtoa_r+0x9b4>
1001a9a8:	d9000417 	ldw	r4,16(sp)
1001a9ac:	20c003c8 	cmpgei	r3,r4,15
1001a9b0:	18009c1e 	bne	r3,zero,1001ac24 <_dtoa_r+0x9b4>
1001a9b4:	200690fa 	slli	r3,r4,3
1001a9b8:	008400b4 	movhi	r2,4098
1001a9bc:	10996b04 	addi	r2,r2,26028
1001a9c0:	10c5883a 	add	r2,r2,r3
1001a9c4:	14000017 	ldw	r16,0(r2)
1001a9c8:	14800117 	ldw	r18,4(r2)
1001a9cc:	d8801e17 	ldw	r2,120(sp)
1001a9d0:	1000140e 	bge	r2,zero,1001aa24 <_dtoa_r+0x7b4>
1001a9d4:	d8800617 	ldw	r2,24(sp)
1001a9d8:	00801216 	blt	zero,r2,1001aa24 <_dtoa_r+0x7b4>
1001a9dc:	1002b81e 	bne	r2,zero,1001b4c0 <_dtoa_r+0x1250>
1001a9e0:	8009883a 	mov	r4,r16
1001a9e4:	900b883a 	mov	r5,r18
1001a9e8:	000d883a 	mov	r6,zero
1001a9ec:	01d00534 	movhi	r7,16404
1001a9f0:	00212fc0 	call	100212fc <__muldf3>
1001a9f4:	d9800117 	ldw	r6,4(sp)
1001a9f8:	880f883a 	mov	r7,r17
1001a9fc:	1009883a 	mov	r4,r2
1001aa00:	180b883a 	mov	r5,r3
1001aa04:	002111c0 	call	1002111c <__gedf2>
1001aa08:	0025883a 	mov	r18,zero
1001aa0c:	0021883a 	mov	r16,zero
1001aa10:	1001fd16 	blt	r2,zero,1001b208 <_dtoa_r+0xf98>
1001aa14:	d8801e17 	ldw	r2,120(sp)
1001aa18:	ddc00317 	ldw	r23,12(sp)
1001aa1c:	00a2303a 	nor	r17,zero,r2
1001aa20:	0001ff06 	br	1001b220 <_dtoa_r+0xfb0>
1001aa24:	dcc00117 	ldw	r19,4(sp)
1001aa28:	800d883a 	mov	r6,r16
1001aa2c:	900f883a 	mov	r7,r18
1001aa30:	880b883a 	mov	r5,r17
1001aa34:	9809883a 	mov	r4,r19
1001aa38:	00207f40 	call	100207f4 <__divdf3>
1001aa3c:	180b883a 	mov	r5,r3
1001aa40:	1009883a 	mov	r4,r2
1001aa44:	00223480 	call	10022348 <__fixdfsi>
1001aa48:	1009883a 	mov	r4,r2
1001aa4c:	102d883a 	mov	r22,r2
1001aa50:	00223c80 	call	100223c8 <__floatsidf>
1001aa54:	800d883a 	mov	r6,r16
1001aa58:	900f883a 	mov	r7,r18
1001aa5c:	1009883a 	mov	r4,r2
1001aa60:	180b883a 	mov	r5,r3
1001aa64:	00212fc0 	call	100212fc <__muldf3>
1001aa68:	880b883a 	mov	r5,r17
1001aa6c:	100d883a 	mov	r6,r2
1001aa70:	180f883a 	mov	r7,r3
1001aa74:	9809883a 	mov	r4,r19
1001aa78:	00219880 	call	10021988 <__subdf3>
1001aa7c:	dc400317 	ldw	r17,12(sp)
1001aa80:	1009883a 	mov	r4,r2
1001aa84:	d9c00417 	ldw	r7,16(sp)
1001aa88:	b0800c04 	addi	r2,r22,48
1001aa8c:	88800005 	stb	r2,0(r17)
1001aa90:	d8800617 	ldw	r2,24(sp)
1001aa94:	39c00044 	addi	r7,r7,1
1001aa98:	d9c00415 	stw	r7,16(sp)
1001aa9c:	11800060 	cmpeqi	r6,r2,1
1001aaa0:	180b883a 	mov	r5,r3
1001aaa4:	2005883a 	mov	r2,r4
1001aaa8:	8dc00044 	addi	r23,r17,1
1001aaac:	3000391e 	bne	r6,zero,1001ab94 <_dtoa_r+0x924>
1001aab0:	01d00934 	movhi	r7,16420
1001aab4:	00212fc0 	call	100212fc <__muldf3>
1001aab8:	000d883a 	mov	r6,zero
1001aabc:	000f883a 	mov	r7,zero
1001aac0:	1009883a 	mov	r4,r2
1001aac4:	180b883a 	mov	r5,r3
1001aac8:	1027883a 	mov	r19,r2
1001aacc:	1829883a 	mov	r20,r3
1001aad0:	002109c0 	call	1002109c <__eqdf2>
1001aad4:	103f7826 	beq	r2,zero,1001a8b8 <_dtoa_r+0x648>
1001aad8:	d8c00617 	ldw	r3,24(sp)
1001aadc:	8805883a 	mov	r2,r17
1001aae0:	dd400115 	stw	r21,4(sp)
1001aae4:	8c400084 	addi	r17,r17,2
1001aae8:	10ed883a 	add	r22,r2,r3
1001aaec:	00000a06 	br	1001ab18 <_dtoa_r+0x8a8>
1001aaf0:	00212fc0 	call	100212fc <__muldf3>
1001aaf4:	000d883a 	mov	r6,zero
1001aaf8:	000f883a 	mov	r7,zero
1001aafc:	1009883a 	mov	r4,r2
1001ab00:	180b883a 	mov	r5,r3
1001ab04:	1027883a 	mov	r19,r2
1001ab08:	1829883a 	mov	r20,r3
1001ab0c:	8c400044 	addi	r17,r17,1
1001ab10:	002109c0 	call	1002109c <__eqdf2>
1001ab14:	10029d26 	beq	r2,zero,1001b58c <_dtoa_r+0x131c>
1001ab18:	800d883a 	mov	r6,r16
1001ab1c:	900f883a 	mov	r7,r18
1001ab20:	9809883a 	mov	r4,r19
1001ab24:	a00b883a 	mov	r5,r20
1001ab28:	00207f40 	call	100207f4 <__divdf3>
1001ab2c:	180b883a 	mov	r5,r3
1001ab30:	1009883a 	mov	r4,r2
1001ab34:	00223480 	call	10022348 <__fixdfsi>
1001ab38:	1009883a 	mov	r4,r2
1001ab3c:	102b883a 	mov	r21,r2
1001ab40:	00223c80 	call	100223c8 <__floatsidf>
1001ab44:	800d883a 	mov	r6,r16
1001ab48:	900f883a 	mov	r7,r18
1001ab4c:	1009883a 	mov	r4,r2
1001ab50:	180b883a 	mov	r5,r3
1001ab54:	00212fc0 	call	100212fc <__muldf3>
1001ab58:	100d883a 	mov	r6,r2
1001ab5c:	180f883a 	mov	r7,r3
1001ab60:	9809883a 	mov	r4,r19
1001ab64:	a00b883a 	mov	r5,r20
1001ab68:	00219880 	call	10021988 <__subdf3>
1001ab6c:	aa400c04 	addi	r9,r21,48
1001ab70:	8a7fffc5 	stb	r9,-1(r17)
1001ab74:	000d883a 	mov	r6,zero
1001ab78:	01d00934 	movhi	r7,16420
1001ab7c:	1009883a 	mov	r4,r2
1001ab80:	180b883a 	mov	r5,r3
1001ab84:	882f883a 	mov	r23,r17
1001ab88:	b47fd91e 	bne	r22,r17,1001aaf0 <_dtoa_r+0x880>
1001ab8c:	a82d883a 	mov	r22,r21
1001ab90:	dd400117 	ldw	r21,4(sp)
1001ab94:	100d883a 	mov	r6,r2
1001ab98:	180f883a 	mov	r7,r3
1001ab9c:	1009883a 	mov	r4,r2
1001aba0:	180b883a 	mov	r5,r3
1001aba4:	001fe540 	call	1001fe54 <__adddf3>
1001aba8:	800d883a 	mov	r6,r16
1001abac:	900f883a 	mov	r7,r18
1001abb0:	1009883a 	mov	r4,r2
1001abb4:	180b883a 	mov	r5,r3
1001abb8:	1027883a 	mov	r19,r2
1001abbc:	1823883a 	mov	r17,r3
1001abc0:	002111c0 	call	1002111c <__gedf2>
1001abc4:	00800816 	blt	zero,r2,1001abe8 <_dtoa_r+0x978>
1001abc8:	800d883a 	mov	r6,r16
1001abcc:	900f883a 	mov	r7,r18
1001abd0:	9809883a 	mov	r4,r19
1001abd4:	880b883a 	mov	r5,r17
1001abd8:	002109c0 	call	1002109c <__eqdf2>
1001abdc:	103f361e 	bne	r2,zero,1001a8b8 <_dtoa_r+0x648>
1001abe0:	b580004c 	andi	r22,r22,1
1001abe4:	b03f3426 	beq	r22,zero,1001a8b8 <_dtoa_r+0x648>
1001abe8:	ba3fffc3 	ldbu	r8,-1(r23)
1001abec:	d9000317 	ldw	r4,12(sp)
1001abf0:	00000306 	br	1001ac00 <_dtoa_r+0x990>
1001abf4:	20c30e26 	beq	r4,r3,1001b830 <_dtoa_r+0x15c0>
1001abf8:	1a3fffc3 	ldbu	r8,-1(r3)
1001abfc:	182f883a 	mov	r23,r3
1001ac00:	40803fcc 	andi	r2,r8,255
1001ac04:	1080201c 	xori	r2,r2,128
1001ac08:	10bfe004 	addi	r2,r2,-128
1001ac0c:	10800e60 	cmpeqi	r2,r2,57
1001ac10:	b8ffffc4 	addi	r3,r23,-1
1001ac14:	103ff71e 	bne	r2,zero,1001abf4 <_dtoa_r+0x984>
1001ac18:	42000044 	addi	r8,r8,1
1001ac1c:	1a000005 	stb	r8,0(r3)
1001ac20:	003f2506 	br	1001a8b8 <_dtoa_r+0x648>
1001ac24:	d8c00717 	ldw	r3,28(sp)
1001ac28:	1800e426 	beq	r3,zero,1001afbc <_dtoa_r+0xd4c>
1001ac2c:	d8c00217 	ldw	r3,8(sp)
1001ac30:	18c00088 	cmpgei	r3,r3,2
1001ac34:	1801ec26 	beq	r3,zero,1001b3e8 <_dtoa_r+0x1178>
1001ac38:	d8800617 	ldw	r2,24(sp)
1001ac3c:	14bfffc4 	addi	r18,r2,-1
1001ac40:	d8800817 	ldw	r2,32(sp)
1001ac44:	1481c50e 	bge	r2,r18,1001b35c <_dtoa_r+0x10ec>
1001ac48:	d8800817 	ldw	r2,32(sp)
1001ac4c:	dc800815 	stw	r18,32(sp)
1001ac50:	9085c83a 	sub	r2,r18,r2
1001ac54:	b0ad883a 	add	r22,r22,r2
1001ac58:	0025883a 	mov	r18,zero
1001ac5c:	d8800617 	ldw	r2,24(sp)
1001ac60:	10024c16 	blt	r2,zero,1001b594 <_dtoa_r+0x1324>
1001ac64:	d8c00517 	ldw	r3,20(sp)
1001ac68:	a0a9883a 	add	r20,r20,r2
1001ac6c:	1885883a 	add	r2,r3,r2
1001ac70:	1827883a 	mov	r19,r3
1001ac74:	d8800515 	stw	r2,20(sp)
1001ac78:	01400044 	movi	r5,1
1001ac7c:	e009883a 	mov	r4,fp
1001ac80:	001c4840 	call	1001c484 <__i2b>
1001ac84:	1021883a 	mov	r16,r2
1001ac88:	04c0080e 	bge	zero,r19,1001acac <_dtoa_r+0xa3c>
1001ac8c:	0500070e 	bge	zero,r20,1001acac <_dtoa_r+0xa3c>
1001ac90:	9805883a 	mov	r2,r19
1001ac94:	a4c1a916 	blt	r20,r19,1001b33c <_dtoa_r+0x10cc>
1001ac98:	d8c00517 	ldw	r3,20(sp)
1001ac9c:	98a7c83a 	sub	r19,r19,r2
1001aca0:	a0a9c83a 	sub	r20,r20,r2
1001aca4:	1887c83a 	sub	r3,r3,r2
1001aca8:	d8c00515 	stw	r3,20(sp)
1001acac:	d8800817 	ldw	r2,32(sp)
1001acb0:	10001426 	beq	r2,zero,1001ad04 <_dtoa_r+0xa94>
1001acb4:	d8800717 	ldw	r2,28(sp)
1001acb8:	10017226 	beq	r2,zero,1001b284 <_dtoa_r+0x1014>
1001acbc:	04800e0e 	bge	zero,r18,1001acf8 <_dtoa_r+0xa88>
1001acc0:	800b883a 	mov	r5,r16
1001acc4:	900d883a 	mov	r6,r18
1001acc8:	e009883a 	mov	r4,fp
1001accc:	001c6a40 	call	1001c6a4 <__pow5mult>
1001acd0:	a80d883a 	mov	r6,r21
1001acd4:	100b883a 	mov	r5,r2
1001acd8:	e009883a 	mov	r4,fp
1001acdc:	1021883a 	mov	r16,r2
1001ace0:	001c4b80 	call	1001c4b8 <__multiply>
1001ace4:	102f883a 	mov	r23,r2
1001ace8:	a80b883a 	mov	r5,r21
1001acec:	e009883a 	mov	r4,fp
1001acf0:	001c1280 	call	1001c128 <_Bfree>
1001acf4:	b82b883a 	mov	r21,r23
1001acf8:	d8800817 	ldw	r2,32(sp)
1001acfc:	148dc83a 	sub	r6,r2,r18
1001ad00:	3001611e 	bne	r6,zero,1001b288 <_dtoa_r+0x1018>
1001ad04:	01400044 	movi	r5,1
1001ad08:	e009883a 	mov	r4,fp
1001ad0c:	001c4840 	call	1001c484 <__i2b>
1001ad10:	1025883a 	mov	r18,r2
1001ad14:	0580bc16 	blt	zero,r22,1001b008 <_dtoa_r+0xd98>
1001ad18:	d8800217 	ldw	r2,8(sp)
1001ad1c:	10800088 	cmpgei	r2,r2,2
1001ad20:	10016526 	beq	r2,zero,1001b2b8 <_dtoa_r+0x1048>
1001ad24:	0023883a 	mov	r17,zero
1001ad28:	00800044 	movi	r2,1
1001ad2c:	b000bf1e 	bne	r22,zero,1001b02c <_dtoa_r+0xdbc>
1001ad30:	1505883a 	add	r2,r2,r20
1001ad34:	108007cc 	andi	r2,r2,31
1001ad38:	1000aa26 	beq	r2,zero,1001afe4 <_dtoa_r+0xd74>
1001ad3c:	00c00804 	movi	r3,32
1001ad40:	1887c83a 	sub	r3,r3,r2
1001ad44:	19000150 	cmplti	r4,r3,5
1001ad48:	2002f61e 	bne	r4,zero,1001b924 <_dtoa_r+0x16b4>
1001ad4c:	00c00704 	movi	r3,28
1001ad50:	1885c83a 	sub	r2,r3,r2
1001ad54:	d8c00517 	ldw	r3,20(sp)
1001ad58:	98a7883a 	add	r19,r19,r2
1001ad5c:	a0a9883a 	add	r20,r20,r2
1001ad60:	1887883a 	add	r3,r3,r2
1001ad64:	d8c00515 	stw	r3,20(sp)
1001ad68:	d8800517 	ldw	r2,20(sp)
1001ad6c:	00809716 	blt	zero,r2,1001afcc <_dtoa_r+0xd5c>
1001ad70:	0500050e 	bge	zero,r20,1001ad88 <_dtoa_r+0xb18>
1001ad74:	900b883a 	mov	r5,r18
1001ad78:	a00d883a 	mov	r6,r20
1001ad7c:	e009883a 	mov	r4,fp
1001ad80:	001c7cc0 	call	1001c7cc <__lshift>
1001ad84:	1025883a 	mov	r18,r2
1001ad88:	d8800917 	ldw	r2,36(sp)
1001ad8c:	10012b1e 	bne	r2,zero,1001b23c <_dtoa_r+0xfcc>
1001ad90:	d8800617 	ldw	r2,24(sp)
1001ad94:	00810d0e 	bge	zero,r2,1001b1cc <_dtoa_r+0xf5c>
1001ad98:	d8800417 	ldw	r2,16(sp)
1001ad9c:	10800044 	addi	r2,r2,1
1001ada0:	d8800415 	stw	r2,16(sp)
1001ada4:	d8800717 	ldw	r2,28(sp)
1001ada8:	1000b21e 	bne	r2,zero,1001b074 <_dtoa_r+0xe04>
1001adac:	ddc00317 	ldw	r23,12(sp)
1001adb0:	04400044 	movi	r17,1
1001adb4:	dcc00617 	ldw	r19,24(sp)
1001adb8:	00000306 	br	1001adc8 <_dtoa_r+0xb58>
1001adbc:	001c14c0 	call	1001c14c <__multadd>
1001adc0:	102b883a 	mov	r21,r2
1001adc4:	8c400044 	addi	r17,r17,1
1001adc8:	900b883a 	mov	r5,r18
1001adcc:	a809883a 	mov	r4,r21
1001add0:	001a0600 	call	1001a060 <quorem>
1001add4:	10800c04 	addi	r2,r2,48
1001add8:	bdc00044 	addi	r23,r23,1
1001addc:	b8bfffc5 	stb	r2,-1(r23)
1001ade0:	000f883a 	mov	r7,zero
1001ade4:	01800284 	movi	r6,10
1001ade8:	a80b883a 	mov	r5,r21
1001adec:	e009883a 	mov	r4,fp
1001adf0:	8cfff216 	blt	r17,r19,1001adbc <_dtoa_r+0xb4c>
1001adf4:	1011883a 	mov	r8,r2
1001adf8:	0029883a 	mov	r20,zero
1001adfc:	a80b883a 	mov	r5,r21
1001ae00:	01800044 	movi	r6,1
1001ae04:	e009883a 	mov	r4,fp
1001ae08:	da000115 	stw	r8,4(sp)
1001ae0c:	001c7cc0 	call	1001c7cc <__lshift>
1001ae10:	900b883a 	mov	r5,r18
1001ae14:	1009883a 	mov	r4,r2
1001ae18:	102b883a 	mov	r21,r2
1001ae1c:	001c9080 	call	1001c908 <__mcmp>
1001ae20:	b8ffffc3 	ldbu	r3,-1(r23)
1001ae24:	0081610e 	bge	zero,r2,1001b3ac <_dtoa_r+0x113c>
1001ae28:	d9400317 	ldw	r5,12(sp)
1001ae2c:	00000306 	br	1001ae3c <_dtoa_r+0xbcc>
1001ae30:	29017726 	beq	r5,r4,1001b410 <_dtoa_r+0x11a0>
1001ae34:	20ffffc3 	ldbu	r3,-1(r4)
1001ae38:	202f883a 	mov	r23,r4
1001ae3c:	18803fcc 	andi	r2,r3,255
1001ae40:	1080201c 	xori	r2,r2,128
1001ae44:	10bfe004 	addi	r2,r2,-128
1001ae48:	10800e60 	cmpeqi	r2,r2,57
1001ae4c:	b93fffc4 	addi	r4,r23,-1
1001ae50:	103ff71e 	bne	r2,zero,1001ae30 <_dtoa_r+0xbc0>
1001ae54:	18c00044 	addi	r3,r3,1
1001ae58:	20c00005 	stb	r3,0(r4)
1001ae5c:	900b883a 	mov	r5,r18
1001ae60:	e009883a 	mov	r4,fp
1001ae64:	001c1280 	call	1001c128 <_Bfree>
1001ae68:	803e9326 	beq	r16,zero,1001a8b8 <_dtoa_r+0x648>
1001ae6c:	a0000426 	beq	r20,zero,1001ae80 <_dtoa_r+0xc10>
1001ae70:	a4000326 	beq	r20,r16,1001ae80 <_dtoa_r+0xc10>
1001ae74:	a00b883a 	mov	r5,r20
1001ae78:	e009883a 	mov	r4,fp
1001ae7c:	001c1280 	call	1001c128 <_Bfree>
1001ae80:	800b883a 	mov	r5,r16
1001ae84:	e009883a 	mov	r4,fp
1001ae88:	001c1280 	call	1001c128 <_Bfree>
1001ae8c:	003e8a06 	br	1001a8b8 <_dtoa_r+0x648>
1001ae90:	d8000915 	stw	zero,36(sp)
1001ae94:	a0003616 	blt	r20,zero,1001af70 <_dtoa_r+0xd00>
1001ae98:	d8000515 	stw	zero,20(sp)
1001ae9c:	d8c00217 	ldw	r3,8(sp)
1001aea0:	dd800415 	stw	r22,16(sp)
1001aea4:	d8000815 	stw	zero,32(sp)
1001aea8:	188002a8 	cmpgeui	r2,r3,10
1001aeac:	a5a9883a 	add	r20,r20,r22
1001aeb0:	103d9726 	beq	r2,zero,1001a510 <_dtoa_r+0x2a0>
1001aeb4:	00800044 	movi	r2,1
1001aeb8:	d8800715 	stw	r2,28(sp)
1001aebc:	00bfffc4 	movi	r2,-1
1001aec0:	04bfffc4 	movi	r18,-1
1001aec4:	04000044 	movi	r16,1
1001aec8:	d8000215 	stw	zero,8(sp)
1001aecc:	d8800615 	stw	r2,24(sp)
1001aed0:	d8001e15 	stw	zero,120(sp)
1001aed4:	d8800617 	ldw	r2,24(sp)
1001aed8:	e0001115 	stw	zero,68(fp)
1001aedc:	000b883a 	mov	r5,zero
1001aee0:	d8800b15 	stw	r2,44(sp)
1001aee4:	003daa06 	br	1001a590 <_dtoa_r+0x320>
1001aee8:	18800160 	cmpeqi	r2,r3,5
1001aeec:	00c00044 	movi	r3,1
1001aef0:	d8c00715 	stw	r3,28(sp)
1001aef4:	10000d26 	beq	r2,zero,1001af2c <_dtoa_r+0xcbc>
1001aef8:	d8801e17 	ldw	r2,120(sp)
1001aefc:	d8c00417 	ldw	r3,16(sp)
1001af00:	10c5883a 	add	r2,r2,r3
1001af04:	d8800b15 	stw	r2,44(sp)
1001af08:	10800044 	addi	r2,r2,1
1001af0c:	d8800615 	stw	r2,24(sp)
1001af10:	100d883a 	mov	r6,r2
1001af14:	00bd9216 	blt	zero,r2,1001a560 <_dtoa_r+0x2f0>
1001af18:	01800044 	movi	r6,1
1001af1c:	003d9006 	br	1001a560 <_dtoa_r+0x2f0>
1001af20:	188000a0 	cmpeqi	r2,r3,2
1001af24:	d8000715 	stw	zero,28(sp)
1001af28:	103d881e 	bne	r2,zero,1001a54c <_dtoa_r+0x2dc>
1001af2c:	e0001115 	stw	zero,68(fp)
1001af30:	000b883a 	mov	r5,zero
1001af34:	e009883a 	mov	r4,fp
1001af38:	001c0840 	call	1001c084 <_Balloc>
1001af3c:	d8800315 	stw	r2,12(sp)
1001af40:	e0801015 	stw	r2,64(fp)
1001af44:	00bfffc4 	movi	r2,-1
1001af48:	d8800b15 	stw	r2,44(sp)
1001af4c:	00800044 	movi	r2,1
1001af50:	d8800715 	stw	r2,28(sp)
1001af54:	00bfffc4 	movi	r2,-1
1001af58:	d8001e15 	stw	zero,120(sp)
1001af5c:	d8800615 	stw	r2,24(sp)
1001af60:	003e8f06 	br	1001a9a0 <_dtoa_r+0x730>
1001af64:	00800044 	movi	r2,1
1001af68:	d8800915 	stw	r2,36(sp)
1001af6c:	a03d5c0e 	bge	r20,zero,1001a4e0 <_dtoa_r+0x270>
1001af70:	04800044 	movi	r18,1
1001af74:	9405c83a 	sub	r2,r18,r16
1001af78:	d8800515 	stw	r2,20(sp)
1001af7c:	0029883a 	mov	r20,zero
1001af80:	003d5806 	br	1001a4e4 <_dtoa_r+0x274>
1001af84:	b009883a 	mov	r4,r22
1001af88:	00223c80 	call	100223c8 <__floatsidf>
1001af8c:	a00d883a 	mov	r6,r20
1001af90:	980f883a 	mov	r7,r19
1001af94:	1009883a 	mov	r4,r2
1001af98:	180b883a 	mov	r5,r3
1001af9c:	002109c0 	call	1002109c <__eqdf2>
1001afa0:	103d3e26 	beq	r2,zero,1001a49c <_dtoa_r+0x22c>
1001afa4:	b5bfffc4 	addi	r22,r22,-1
1001afa8:	003d3c06 	br	1001a49c <_dtoa_r+0x22c>
1001afac:	008400b4 	movhi	r2,4098
1001afb0:	1098a704 	addi	r2,r2,25244
1001afb4:	d8800315 	stw	r2,12(sp)
1001afb8:	003cdf06 	br	1001a338 <_dtoa_r+0xc8>
1001afbc:	dc800817 	ldw	r18,32(sp)
1001afc0:	dcc00517 	ldw	r19,20(sp)
1001afc4:	0021883a 	mov	r16,zero
1001afc8:	003f2f06 	br	1001ac88 <_dtoa_r+0xa18>
1001afcc:	a80b883a 	mov	r5,r21
1001afd0:	100d883a 	mov	r6,r2
1001afd4:	e009883a 	mov	r4,fp
1001afd8:	001c7cc0 	call	1001c7cc <__lshift>
1001afdc:	102b883a 	mov	r21,r2
1001afe0:	003f6306 	br	1001ad70 <_dtoa_r+0xb00>
1001afe4:	00800704 	movi	r2,28
1001afe8:	003f5a06 	br	1001ad54 <_dtoa_r+0xae4>
1001afec:	01000804 	movi	r4,32
1001aff0:	2089c83a 	sub	r4,r4,r2
1001aff4:	d8800117 	ldw	r2,4(sp)
1001aff8:	1108983a 	sll	r4,r2,r4
1001affc:	003cf306 	br	1001a3cc <_dtoa_r+0x15c>
1001b000:	04000044 	movi	r16,1
1001b004:	003d4706 	br	1001a524 <_dtoa_r+0x2b4>
1001b008:	b00d883a 	mov	r6,r22
1001b00c:	100b883a 	mov	r5,r2
1001b010:	e009883a 	mov	r4,fp
1001b014:	001c6a40 	call	1001c6a4 <__pow5mult>
1001b018:	1025883a 	mov	r18,r2
1001b01c:	d8800217 	ldw	r2,8(sp)
1001b020:	10800090 	cmplti	r2,r2,2
1001b024:	10012f1e 	bne	r2,zero,1001b4e4 <_dtoa_r+0x1274>
1001b028:	0023883a 	mov	r17,zero
1001b02c:	90800417 	ldw	r2,16(r18)
1001b030:	10800104 	addi	r2,r2,4
1001b034:	100490ba 	slli	r2,r2,2
1001b038:	9085883a 	add	r2,r18,r2
1001b03c:	11000017 	ldw	r4,0(r2)
1001b040:	001c3700 	call	1001c370 <__hi0bits>
1001b044:	00c00804 	movi	r3,32
1001b048:	1885c83a 	sub	r2,r3,r2
1001b04c:	003f3806 	br	1001ad30 <_dtoa_r+0xac0>
1001b050:	800b883a 	mov	r5,r16
1001b054:	000f883a 	mov	r7,zero
1001b058:	01800284 	movi	r6,10
1001b05c:	e009883a 	mov	r4,fp
1001b060:	001c14c0 	call	1001c14c <__multadd>
1001b064:	1021883a 	mov	r16,r2
1001b068:	d8800b17 	ldw	r2,44(sp)
1001b06c:	00821b0e 	bge	zero,r2,1001b8dc <_dtoa_r+0x166c>
1001b070:	d8800615 	stw	r2,24(sp)
1001b074:	04c0b316 	blt	zero,r19,1001b344 <_dtoa_r+0x10d4>
1001b078:	8801341e 	bne	r17,zero,1001b54c <_dtoa_r+0x12dc>
1001b07c:	8027883a 	mov	r19,r16
1001b080:	dc400317 	ldw	r17,12(sp)
1001b084:	d8c00617 	ldw	r3,24(sp)
1001b088:	d8800117 	ldw	r2,4(sp)
1001b08c:	8dffffc4 	addi	r23,r17,-1
1001b090:	b8c7883a 	add	r3,r23,r3
1001b094:	d8c00615 	stw	r3,24(sp)
1001b098:	d8c00217 	ldw	r3,8(sp)
1001b09c:	1080004c 	andi	r2,r2,1
1001b0a0:	d8800815 	stw	r2,32(sp)
1001b0a4:	10c4b03a 	or	r2,r2,r3
1001b0a8:	d8800715 	stw	r2,28(sp)
1001b0ac:	00002c06 	br	1001b160 <_dtoa_r+0xef0>
1001b0b0:	b80b883a 	mov	r5,r23
1001b0b4:	a809883a 	mov	r4,r21
1001b0b8:	da000515 	stw	r8,20(sp)
1001b0bc:	001c9080 	call	1001c908 <__mcmp>
1001b0c0:	b80b883a 	mov	r5,r23
1001b0c4:	e009883a 	mov	r4,fp
1001b0c8:	d8800115 	stw	r2,4(sp)
1001b0cc:	001c1280 	call	1001c128 <_Bfree>
1001b0d0:	d8800117 	ldw	r2,4(sp)
1001b0d4:	da000517 	ldw	r8,20(sp)
1001b0d8:	1000021e 	bne	r2,zero,1001b0e4 <_dtoa_r+0xe74>
1001b0dc:	d8c00717 	ldw	r3,28(sp)
1001b0e0:	1801f226 	beq	r3,zero,1001b8ac <_dtoa_r+0x163c>
1001b0e4:	8dc00044 	addi	r23,r17,1
1001b0e8:	a0010516 	blt	r20,zero,1001b500 <_dtoa_r+0x1290>
1001b0ec:	d8c00217 	ldw	r3,8(sp)
1001b0f0:	a0e8b03a 	or	r20,r20,r3
1001b0f4:	d8c00817 	ldw	r3,32(sp)
1001b0f8:	1d28b03a 	or	r20,r3,r20
1001b0fc:	a0010026 	beq	r20,zero,1001b500 <_dtoa_r+0x1290>
1001b100:	00812816 	blt	zero,r2,1001b5a4 <_dtoa_r+0x1334>
1001b104:	d8800617 	ldw	r2,24(sp)
1001b108:	8a000005 	stb	r8,0(r17)
1001b10c:	14412926 	beq	r2,r17,1001b5b4 <_dtoa_r+0x1344>
1001b110:	a80b883a 	mov	r5,r21
1001b114:	000f883a 	mov	r7,zero
1001b118:	01800284 	movi	r6,10
1001b11c:	e009883a 	mov	r4,fp
1001b120:	001c14c0 	call	1001c14c <__multadd>
1001b124:	102b883a 	mov	r21,r2
1001b128:	000f883a 	mov	r7,zero
1001b12c:	01800284 	movi	r6,10
1001b130:	800b883a 	mov	r5,r16
1001b134:	e009883a 	mov	r4,fp
1001b138:	84c02026 	beq	r16,r19,1001b1bc <_dtoa_r+0xf4c>
1001b13c:	001c14c0 	call	1001c14c <__multadd>
1001b140:	980b883a 	mov	r5,r19
1001b144:	000f883a 	mov	r7,zero
1001b148:	01800284 	movi	r6,10
1001b14c:	e009883a 	mov	r4,fp
1001b150:	1021883a 	mov	r16,r2
1001b154:	001c14c0 	call	1001c14c <__multadd>
1001b158:	1027883a 	mov	r19,r2
1001b15c:	b823883a 	mov	r17,r23
1001b160:	900b883a 	mov	r5,r18
1001b164:	a809883a 	mov	r4,r21
1001b168:	001a0600 	call	1001a060 <quorem>
1001b16c:	800b883a 	mov	r5,r16
1001b170:	a809883a 	mov	r4,r21
1001b174:	102d883a 	mov	r22,r2
1001b178:	001c9080 	call	1001c908 <__mcmp>
1001b17c:	980d883a 	mov	r6,r19
1001b180:	900b883a 	mov	r5,r18
1001b184:	e009883a 	mov	r4,fp
1001b188:	1029883a 	mov	r20,r2
1001b18c:	001c9600 	call	1001c960 <__mdiff>
1001b190:	102f883a 	mov	r23,r2
1001b194:	10800317 	ldw	r2,12(r2)
1001b198:	b2000c04 	addi	r8,r22,48
1001b19c:	103fc426 	beq	r2,zero,1001b0b0 <_dtoa_r+0xe40>
1001b1a0:	b80b883a 	mov	r5,r23
1001b1a4:	e009883a 	mov	r4,fp
1001b1a8:	da000115 	stw	r8,4(sp)
1001b1ac:	001c1280 	call	1001c128 <_Bfree>
1001b1b0:	00800044 	movi	r2,1
1001b1b4:	da000117 	ldw	r8,4(sp)
1001b1b8:	003fca06 	br	1001b0e4 <_dtoa_r+0xe74>
1001b1bc:	001c14c0 	call	1001c14c <__multadd>
1001b1c0:	1021883a 	mov	r16,r2
1001b1c4:	1027883a 	mov	r19,r2
1001b1c8:	003fe406 	br	1001b15c <_dtoa_r+0xeec>
1001b1cc:	d8800217 	ldw	r2,8(sp)
1001b1d0:	108000d0 	cmplti	r2,r2,3
1001b1d4:	10004b1e 	bne	r2,zero,1001b304 <_dtoa_r+0x1094>
1001b1d8:	d8800617 	ldw	r2,24(sp)
1001b1dc:	103e0d1e 	bne	r2,zero,1001aa14 <_dtoa_r+0x7a4>
1001b1e0:	900b883a 	mov	r5,r18
1001b1e4:	e009883a 	mov	r4,fp
1001b1e8:	000f883a 	mov	r7,zero
1001b1ec:	01800144 	movi	r6,5
1001b1f0:	001c14c0 	call	1001c14c <__multadd>
1001b1f4:	100b883a 	mov	r5,r2
1001b1f8:	a809883a 	mov	r4,r21
1001b1fc:	1025883a 	mov	r18,r2
1001b200:	001c9080 	call	1001c908 <__mcmp>
1001b204:	00be030e 	bge	zero,r2,1001aa14 <_dtoa_r+0x7a4>
1001b208:	d8c00317 	ldw	r3,12(sp)
1001b20c:	00800c44 	movi	r2,49
1001b210:	18800005 	stb	r2,0(r3)
1001b214:	d8800417 	ldw	r2,16(sp)
1001b218:	1dc00044 	addi	r23,r3,1
1001b21c:	14400044 	addi	r17,r2,1
1001b220:	900b883a 	mov	r5,r18
1001b224:	e009883a 	mov	r4,fp
1001b228:	001c1280 	call	1001c128 <_Bfree>
1001b22c:	88800044 	addi	r2,r17,1
1001b230:	d8800415 	stw	r2,16(sp)
1001b234:	803f121e 	bne	r16,zero,1001ae80 <_dtoa_r+0xc10>
1001b238:	003d9f06 	br	1001a8b8 <_dtoa_r+0x648>
1001b23c:	900b883a 	mov	r5,r18
1001b240:	a809883a 	mov	r4,r21
1001b244:	001c9080 	call	1001c908 <__mcmp>
1001b248:	103ed10e 	bge	r2,zero,1001ad90 <_dtoa_r+0xb20>
1001b24c:	a80b883a 	mov	r5,r21
1001b250:	000f883a 	mov	r7,zero
1001b254:	01800284 	movi	r6,10
1001b258:	e009883a 	mov	r4,fp
1001b25c:	001c14c0 	call	1001c14c <__multadd>
1001b260:	102b883a 	mov	r21,r2
1001b264:	d8800417 	ldw	r2,16(sp)
1001b268:	153fffc4 	addi	r20,r2,-1
1001b26c:	d8800717 	ldw	r2,28(sp)
1001b270:	103f771e 	bne	r2,zero,1001b050 <_dtoa_r+0xde0>
1001b274:	d8800b17 	ldw	r2,44(sp)
1001b278:	0081910e 	bge	zero,r2,1001b8c0 <_dtoa_r+0x1650>
1001b27c:	d8800615 	stw	r2,24(sp)
1001b280:	003eca06 	br	1001adac <_dtoa_r+0xb3c>
1001b284:	d9800817 	ldw	r6,32(sp)
1001b288:	a80b883a 	mov	r5,r21
1001b28c:	e009883a 	mov	r4,fp
1001b290:	001c6a40 	call	1001c6a4 <__pow5mult>
1001b294:	102b883a 	mov	r21,r2
1001b298:	003e9a06 	br	1001ad04 <_dtoa_r+0xa94>
1001b29c:	008400b4 	movhi	r2,4098
1001b2a0:	1007883a 	mov	r3,r2
1001b2a4:	18d95004 	addi	r3,r3,25920
1001b2a8:	008400b4 	movhi	r2,4098
1001b2ac:	d8c00315 	stw	r3,12(sp)
1001b2b0:	109950c4 	addi	r2,r2,25923
1001b2b4:	003da506 	br	1001a94c <_dtoa_r+0x6dc>
1001b2b8:	d8800117 	ldw	r2,4(sp)
1001b2bc:	103e991e 	bne	r2,zero,1001ad24 <_dtoa_r+0xab4>
1001b2c0:	00800434 	movhi	r2,16
1001b2c4:	10bfffc4 	addi	r2,r2,-1
1001b2c8:	8884703a 	and	r2,r17,r2
1001b2cc:	103e951e 	bne	r2,zero,1001ad24 <_dtoa_r+0xab4>
1001b2d0:	8c5ffc2c 	andhi	r17,r17,32752
1001b2d4:	883e9326 	beq	r17,zero,1001ad24 <_dtoa_r+0xab4>
1001b2d8:	d8800517 	ldw	r2,20(sp)
1001b2dc:	a5000044 	addi	r20,r20,1
1001b2e0:	04400044 	movi	r17,1
1001b2e4:	10800044 	addi	r2,r2,1
1001b2e8:	d8800515 	stw	r2,20(sp)
1001b2ec:	003e8e06 	br	1001ad28 <_dtoa_r+0xab8>
1001b2f0:	00800044 	movi	r2,1
1001b2f4:	04800044 	movi	r18,1
1001b2f8:	d8800615 	stw	r2,24(sp)
1001b2fc:	d8801e15 	stw	r2,120(sp)
1001b300:	003ef406 	br	1001aed4 <_dtoa_r+0xc64>
1001b304:	d8800417 	ldw	r2,16(sp)
1001b308:	10800044 	addi	r2,r2,1
1001b30c:	d8800415 	stw	r2,16(sp)
1001b310:	d8800717 	ldw	r2,28(sp)
1001b314:	103f571e 	bne	r2,zero,1001b074 <_dtoa_r+0xe04>
1001b318:	900b883a 	mov	r5,r18
1001b31c:	a809883a 	mov	r4,r21
1001b320:	001a0600 	call	1001a060 <quorem>
1001b324:	12000c04 	addi	r8,r2,48
1001b328:	d8800317 	ldw	r2,12(sp)
1001b32c:	0029883a 	mov	r20,zero
1001b330:	15c00044 	addi	r23,r2,1
1001b334:	12000005 	stb	r8,0(r2)
1001b338:	003eb006 	br	1001adfc <_dtoa_r+0xb8c>
1001b33c:	a005883a 	mov	r2,r20
1001b340:	003e5506 	br	1001ac98 <_dtoa_r+0xa28>
1001b344:	800b883a 	mov	r5,r16
1001b348:	980d883a 	mov	r6,r19
1001b34c:	e009883a 	mov	r4,fp
1001b350:	001c7cc0 	call	1001c7cc <__lshift>
1001b354:	1021883a 	mov	r16,r2
1001b358:	003f4706 	br	1001b078 <_dtoa_r+0xe08>
1001b35c:	14a5c83a 	sub	r18,r2,r18
1001b360:	003e3e06 	br	1001ac5c <_dtoa_r+0x9ec>
1001b364:	008400b4 	movhi	r2,4098
1001b368:	10996104 	addi	r2,r2,25988
1001b36c:	11800817 	ldw	r6,32(r2)
1001b370:	11c00917 	ldw	r7,36(r2)
1001b374:	d9000117 	ldw	r4,4(sp)
1001b378:	880b883a 	mov	r5,r17
1001b37c:	da400e15 	stw	r9,56(sp)
1001b380:	da800d15 	stw	r10,52(sp)
1001b384:	00207f40 	call	100207f4 <__divdf3>
1001b388:	d8800c15 	stw	r2,48(sp)
1001b38c:	1827883a 	mov	r19,r3
1001b390:	bdc003cc 	andi	r23,r23,15
1001b394:	040000c4 	movi	r16,3
1001b398:	da800d17 	ldw	r10,52(sp)
1001b39c:	da400e17 	ldw	r9,56(sp)
1001b3a0:	003c9206 	br	1001a5ec <_dtoa_r+0x37c>
1001b3a4:	d8000715 	stw	zero,28(sp)
1001b3a8:	003ed306 	br	1001aef8 <_dtoa_r+0xc88>
1001b3ac:	1000031e 	bne	r2,zero,1001b3bc <_dtoa_r+0x114c>
1001b3b0:	da000117 	ldw	r8,4(sp)
1001b3b4:	4200004c 	andi	r8,r8,1
1001b3b8:	403e9b1e 	bne	r8,zero,1001ae28 <_dtoa_r+0xbb8>
1001b3bc:	1805883a 	mov	r2,r3
1001b3c0:	00000206 	br	1001b3cc <_dtoa_r+0x115c>
1001b3c4:	b8bfff83 	ldbu	r2,-2(r23)
1001b3c8:	182f883a 	mov	r23,r3
1001b3cc:	10803fcc 	andi	r2,r2,255
1001b3d0:	1080201c 	xori	r2,r2,128
1001b3d4:	10bfe004 	addi	r2,r2,-128
1001b3d8:	10800c18 	cmpnei	r2,r2,48
1001b3dc:	b8ffffc4 	addi	r3,r23,-1
1001b3e0:	103ff826 	beq	r2,zero,1001b3c4 <_dtoa_r+0x1154>
1001b3e4:	003e9d06 	br	1001ae5c <_dtoa_r+0xbec>
1001b3e8:	d8c00a17 	ldw	r3,40(sp)
1001b3ec:	1800bc26 	beq	r3,zero,1001b6e0 <_dtoa_r+0x1470>
1001b3f0:	d8c00517 	ldw	r3,20(sp)
1001b3f4:	10810cc4 	addi	r2,r2,1075
1001b3f8:	a0a9883a 	add	r20,r20,r2
1001b3fc:	1885883a 	add	r2,r3,r2
1001b400:	1827883a 	mov	r19,r3
1001b404:	dc800817 	ldw	r18,32(sp)
1001b408:	d8800515 	stw	r2,20(sp)
1001b40c:	003e1a06 	br	1001ac78 <_dtoa_r+0xa08>
1001b410:	d8c00317 	ldw	r3,12(sp)
1001b414:	00800c44 	movi	r2,49
1001b418:	18800005 	stb	r2,0(r3)
1001b41c:	d8800417 	ldw	r2,16(sp)
1001b420:	10800044 	addi	r2,r2,1
1001b424:	d8800415 	stw	r2,16(sp)
1001b428:	003e8c06 	br	1001ae5c <_dtoa_r+0xbec>
1001b42c:	8009883a 	mov	r4,r16
1001b430:	00223c80 	call	100223c8 <__floatsidf>
1001b434:	900d883a 	mov	r6,r18
1001b438:	980f883a 	mov	r7,r19
1001b43c:	1009883a 	mov	r4,r2
1001b440:	180b883a 	mov	r5,r3
1001b444:	00212fc0 	call	100212fc <__muldf3>
1001b448:	000d883a 	mov	r6,zero
1001b44c:	01d00734 	movhi	r7,16412
1001b450:	1009883a 	mov	r4,r2
1001b454:	180b883a 	mov	r5,r3
1001b458:	001fe540 	call	1001fe54 <__adddf3>
1001b45c:	d8800c15 	stw	r2,48(sp)
1001b460:	00bf3034 	movhi	r2,64704
1001b464:	1885883a 	add	r2,r3,r2
1001b468:	d8800d15 	stw	r2,52(sp)
1001b46c:	9009883a 	mov	r4,r18
1001b470:	980b883a 	mov	r5,r19
1001b474:	000d883a 	mov	r6,zero
1001b478:	01d00534 	movhi	r7,16404
1001b47c:	00219880 	call	10021988 <__subdf3>
1001b480:	ddc00c17 	ldw	r23,48(sp)
1001b484:	dcc00d17 	ldw	r19,52(sp)
1001b488:	1009883a 	mov	r4,r2
1001b48c:	b80d883a 	mov	r6,r23
1001b490:	980f883a 	mov	r7,r19
1001b494:	180b883a 	mov	r5,r3
1001b498:	1025883a 	mov	r18,r2
1001b49c:	1821883a 	mov	r16,r3
1001b4a0:	002111c0 	call	1002111c <__gedf2>
1001b4a4:	0080ee16 	blt	zero,r2,1001b860 <_dtoa_r+0x15f0>
1001b4a8:	99e0003c 	xorhi	r7,r19,32768
1001b4ac:	b80d883a 	mov	r6,r23
1001b4b0:	9009883a 	mov	r4,r18
1001b4b4:	800b883a 	mov	r5,r16
1001b4b8:	002120c0 	call	1002120c <__ledf2>
1001b4bc:	103d380e 	bge	r2,zero,1001a9a0 <_dtoa_r+0x730>
1001b4c0:	0025883a 	mov	r18,zero
1001b4c4:	0021883a 	mov	r16,zero
1001b4c8:	003d5206 	br	1001aa14 <_dtoa_r+0x7a4>
1001b4cc:	d8800417 	ldw	r2,16(sp)
1001b4d0:	1000ad1e 	bne	r2,zero,1001b788 <_dtoa_r+0x1518>
1001b4d4:	dc800117 	ldw	r18,4(sp)
1001b4d8:	8827883a 	mov	r19,r17
1001b4dc:	04000084 	movi	r16,2
1001b4e0:	003c5b06 	br	1001a650 <_dtoa_r+0x3e0>
1001b4e4:	d8800117 	ldw	r2,4(sp)
1001b4e8:	103ecf1e 	bne	r2,zero,1001b028 <_dtoa_r+0xdb8>
1001b4ec:	00800434 	movhi	r2,16
1001b4f0:	10bfffc4 	addi	r2,r2,-1
1001b4f4:	8884703a 	and	r2,r17,r2
1001b4f8:	103f7526 	beq	r2,zero,1001b2d0 <_dtoa_r+0x1060>
1001b4fc:	003eca06 	br	1001b028 <_dtoa_r+0xdb8>
1001b500:	00800e0e 	bge	zero,r2,1001b53c <_dtoa_r+0x12cc>
1001b504:	a80b883a 	mov	r5,r21
1001b508:	01800044 	movi	r6,1
1001b50c:	e009883a 	mov	r4,fp
1001b510:	da000115 	stw	r8,4(sp)
1001b514:	001c7cc0 	call	1001c7cc <__lshift>
1001b518:	900b883a 	mov	r5,r18
1001b51c:	1009883a 	mov	r4,r2
1001b520:	102b883a 	mov	r21,r2
1001b524:	001c9080 	call	1001c908 <__mcmp>
1001b528:	da000117 	ldw	r8,4(sp)
1001b52c:	0080d50e 	bge	zero,r2,1001b884 <_dtoa_r+0x1614>
1001b530:	42000e60 	cmpeqi	r8,r8,57
1001b534:	4000c31e 	bne	r8,zero,1001b844 <_dtoa_r+0x15d4>
1001b538:	b2000c44 	addi	r8,r22,49
1001b53c:	8029883a 	mov	r20,r16
1001b540:	8a000005 	stb	r8,0(r17)
1001b544:	9821883a 	mov	r16,r19
1001b548:	003e4406 	br	1001ae5c <_dtoa_r+0xbec>
1001b54c:	81400117 	ldw	r5,4(r16)
1001b550:	e009883a 	mov	r4,fp
1001b554:	001c0840 	call	1001c084 <_Balloc>
1001b558:	81800417 	ldw	r6,16(r16)
1001b55c:	81400304 	addi	r5,r16,12
1001b560:	11000304 	addi	r4,r2,12
1001b564:	31800084 	addi	r6,r6,2
1001b568:	300c90ba 	slli	r6,r6,2
1001b56c:	1023883a 	mov	r17,r2
1001b570:	0016c340 	call	10016c34 <memcpy>
1001b574:	01800044 	movi	r6,1
1001b578:	880b883a 	mov	r5,r17
1001b57c:	e009883a 	mov	r4,fp
1001b580:	001c7cc0 	call	1001c7cc <__lshift>
1001b584:	1027883a 	mov	r19,r2
1001b588:	003ebd06 	br	1001b080 <_dtoa_r+0xe10>
1001b58c:	dd400117 	ldw	r21,4(sp)
1001b590:	003cc906 	br	1001a8b8 <_dtoa_r+0x648>
1001b594:	d8800517 	ldw	r2,20(sp)
1001b598:	d8c00617 	ldw	r3,24(sp)
1001b59c:	10e7c83a 	sub	r19,r2,r3
1001b5a0:	003db506 	br	1001ac78 <_dtoa_r+0xa08>
1001b5a4:	40800e58 	cmpnei	r2,r8,57
1001b5a8:	1000a626 	beq	r2,zero,1001b844 <_dtoa_r+0x15d4>
1001b5ac:	42000044 	addi	r8,r8,1
1001b5b0:	003fe206 	br	1001b53c <_dtoa_r+0x12cc>
1001b5b4:	8029883a 	mov	r20,r16
1001b5b8:	9821883a 	mov	r16,r19
1001b5bc:	003e0f06 	br	1001adfc <_dtoa_r+0xb8c>
1001b5c0:	d9000c17 	ldw	r4,48(sp)
1001b5c4:	d9400d17 	ldw	r5,52(sp)
1001b5c8:	da401015 	stw	r9,64(sp)
1001b5cc:	00212fc0 	call	100212fc <__muldf3>
1001b5d0:	d9000e17 	ldw	r4,56(sp)
1001b5d4:	d8c00d15 	stw	r3,52(sp)
1001b5d8:	da401017 	ldw	r9,64(sp)
1001b5dc:	d8c00317 	ldw	r3,12(sp)
1001b5e0:	d8800c15 	stw	r2,48(sp)
1001b5e4:	20800058 	cmpnei	r2,r4,1
1001b5e8:	1a400005 	stb	r9,0(r3)
1001b5ec:	1907883a 	add	r3,r3,r4
1001b5f0:	1809883a 	mov	r4,r3
1001b5f4:	10001d26 	beq	r2,zero,1001b66c <_dtoa_r+0x13fc>
1001b5f8:	8007883a 	mov	r3,r16
1001b5fc:	9005883a 	mov	r2,r18
1001b600:	dc400e15 	stw	r17,56(sp)
1001b604:	2021883a 	mov	r16,r4
1001b608:	000d883a 	mov	r6,zero
1001b60c:	01d00934 	movhi	r7,16420
1001b610:	1009883a 	mov	r4,r2
1001b614:	180b883a 	mov	r5,r3
1001b618:	00212fc0 	call	100212fc <__muldf3>
1001b61c:	180b883a 	mov	r5,r3
1001b620:	1009883a 	mov	r4,r2
1001b624:	1825883a 	mov	r18,r3
1001b628:	1023883a 	mov	r17,r2
1001b62c:	00223480 	call	10022348 <__fixdfsi>
1001b630:	1009883a 	mov	r4,r2
1001b634:	1027883a 	mov	r19,r2
1001b638:	00223c80 	call	100223c8 <__floatsidf>
1001b63c:	100d883a 	mov	r6,r2
1001b640:	180f883a 	mov	r7,r3
1001b644:	8809883a 	mov	r4,r17
1001b648:	900b883a 	mov	r5,r18
1001b64c:	bdc00044 	addi	r23,r23,1
1001b650:	9cc00c04 	addi	r19,r19,48
1001b654:	00219880 	call	10021988 <__subdf3>
1001b658:	bcffffc5 	stb	r19,-1(r23)
1001b65c:	bc3fea1e 	bne	r23,r16,1001b608 <_dtoa_r+0x1398>
1001b660:	dc400e17 	ldw	r17,56(sp)
1001b664:	1025883a 	mov	r18,r2
1001b668:	1821883a 	mov	r16,r3
1001b66c:	d9000c17 	ldw	r4,48(sp)
1001b670:	d9400d17 	ldw	r5,52(sp)
1001b674:	000d883a 	mov	r6,zero
1001b678:	01cff834 	movhi	r7,16352
1001b67c:	001fe540 	call	1001fe54 <__adddf3>
1001b680:	100d883a 	mov	r6,r2
1001b684:	180f883a 	mov	r7,r3
1001b688:	9009883a 	mov	r4,r18
1001b68c:	800b883a 	mov	r5,r16
1001b690:	002111c0 	call	1002111c <__gedf2>
1001b694:	00807516 	blt	zero,r2,1001b86c <_dtoa_r+0x15fc>
1001b698:	d9800c17 	ldw	r6,48(sp)
1001b69c:	d9c00d17 	ldw	r7,52(sp)
1001b6a0:	0009883a 	mov	r4,zero
1001b6a4:	014ff834 	movhi	r5,16352
1001b6a8:	00219880 	call	10021988 <__subdf3>
1001b6ac:	100d883a 	mov	r6,r2
1001b6b0:	180f883a 	mov	r7,r3
1001b6b4:	9009883a 	mov	r4,r18
1001b6b8:	800b883a 	mov	r5,r16
1001b6bc:	002120c0 	call	1002120c <__ledf2>
1001b6c0:	103cb70e 	bge	r2,zero,1001a9a0 <_dtoa_r+0x730>
1001b6c4:	00000106 	br	1001b6cc <_dtoa_r+0x145c>
1001b6c8:	182f883a 	mov	r23,r3
1001b6cc:	b8bfffc7 	ldb	r2,-1(r23)
1001b6d0:	b8ffffc4 	addi	r3,r23,-1
1001b6d4:	10800c20 	cmpeqi	r2,r2,48
1001b6d8:	103ffb1e 	bne	r2,zero,1001b6c8 <_dtoa_r+0x1458>
1001b6dc:	003c7306 	br	1001a8ac <_dtoa_r+0x63c>
1001b6e0:	d8c01217 	ldw	r3,72(sp)
1001b6e4:	d9000517 	ldw	r4,20(sp)
1001b6e8:	00800d84 	movi	r2,54
1001b6ec:	10c5c83a 	sub	r2,r2,r3
1001b6f0:	a0a9883a 	add	r20,r20,r2
1001b6f4:	2085883a 	add	r2,r4,r2
1001b6f8:	2027883a 	mov	r19,r4
1001b6fc:	dc800817 	ldw	r18,32(sp)
1001b700:	d8800515 	stw	r2,20(sp)
1001b704:	003d5c06 	br	1001ac78 <_dtoa_r+0xa08>
1001b708:	d8800617 	ldw	r2,24(sp)
1001b70c:	103f4726 	beq	r2,zero,1001b42c <_dtoa_r+0x11bc>
1001b710:	ddc00b17 	ldw	r23,44(sp)
1001b714:	05fca20e 	bge	zero,r23,1001a9a0 <_dtoa_r+0x730>
1001b718:	980b883a 	mov	r5,r19
1001b71c:	000d883a 	mov	r6,zero
1001b720:	01d00934 	movhi	r7,16420
1001b724:	9009883a 	mov	r4,r18
1001b728:	00212fc0 	call	100212fc <__muldf3>
1001b72c:	81000044 	addi	r4,r16,1
1001b730:	1025883a 	mov	r18,r2
1001b734:	1827883a 	mov	r19,r3
1001b738:	00223c80 	call	100223c8 <__floatsidf>
1001b73c:	900d883a 	mov	r6,r18
1001b740:	980f883a 	mov	r7,r19
1001b744:	1009883a 	mov	r4,r2
1001b748:	180b883a 	mov	r5,r3
1001b74c:	00212fc0 	call	100212fc <__muldf3>
1001b750:	000d883a 	mov	r6,zero
1001b754:	01d00734 	movhi	r7,16412
1001b758:	1009883a 	mov	r4,r2
1001b75c:	180b883a 	mov	r5,r3
1001b760:	001fe540 	call	1001fe54 <__adddf3>
1001b764:	d8800c15 	stw	r2,48(sp)
1001b768:	d8800417 	ldw	r2,16(sp)
1001b76c:	ddc00e15 	stw	r23,56(sp)
1001b770:	10bfffc4 	addi	r2,r2,-1
1001b774:	d8800f15 	stw	r2,60(sp)
1001b778:	00bf3034 	movhi	r2,64704
1001b77c:	1885883a 	add	r2,r3,r2
1001b780:	d8800d15 	stw	r2,52(sp)
1001b784:	003bd006 	br	1001a6c8 <_dtoa_r+0x458>
1001b788:	d8800417 	ldw	r2,16(sp)
1001b78c:	d9000117 	ldw	r4,4(sp)
1001b790:	880b883a 	mov	r5,r17
1001b794:	00afc83a 	sub	r23,zero,r2
1001b798:	b88003cc 	andi	r2,r23,15
1001b79c:	100690fa 	slli	r3,r2,3
1001b7a0:	008400b4 	movhi	r2,4098
1001b7a4:	10996b04 	addi	r2,r2,26028
1001b7a8:	10c5883a 	add	r2,r2,r3
1001b7ac:	11800017 	ldw	r6,0(r2)
1001b7b0:	11c00117 	ldw	r7,4(r2)
1001b7b4:	b82fd13a 	srai	r23,r23,4
1001b7b8:	00212fc0 	call	100212fc <__muldf3>
1001b7bc:	1025883a 	mov	r18,r2
1001b7c0:	1827883a 	mov	r19,r3
1001b7c4:	b8004a26 	beq	r23,zero,1001b8f0 <_dtoa_r+0x1680>
1001b7c8:	020400b4 	movhi	r8,4098
1001b7cc:	04000084 	movi	r16,2
1001b7d0:	42196104 	addi	r8,r8,25988
1001b7d4:	dc400c15 	stw	r17,48(sp)
1001b7d8:	000f883a 	mov	r7,zero
1001b7dc:	8023883a 	mov	r17,r16
1001b7e0:	4021883a 	mov	r16,r8
1001b7e4:	b980004c 	andi	r6,r23,1
1001b7e8:	1009883a 	mov	r4,r2
1001b7ec:	b82fd07a 	srai	r23,r23,1
1001b7f0:	180b883a 	mov	r5,r3
1001b7f4:	30000526 	beq	r6,zero,1001b80c <_dtoa_r+0x159c>
1001b7f8:	81c00117 	ldw	r7,4(r16)
1001b7fc:	81800017 	ldw	r6,0(r16)
1001b800:	8c400044 	addi	r17,r17,1
1001b804:	00212fc0 	call	100212fc <__muldf3>
1001b808:	01c00044 	movi	r7,1
1001b80c:	84000204 	addi	r16,r16,8
1001b810:	b83ff41e 	bne	r23,zero,1001b7e4 <_dtoa_r+0x1574>
1001b814:	39c03fcc 	andi	r7,r7,255
1001b818:	8821883a 	mov	r16,r17
1001b81c:	dc400c17 	ldw	r17,48(sp)
1001b820:	383b8b26 	beq	r7,zero,1001a650 <_dtoa_r+0x3e0>
1001b824:	1025883a 	mov	r18,r2
1001b828:	1827883a 	mov	r19,r3
1001b82c:	003b8806 	br	1001a650 <_dtoa_r+0x3e0>
1001b830:	d8800417 	ldw	r2,16(sp)
1001b834:	02000c44 	movi	r8,49
1001b838:	10800044 	addi	r2,r2,1
1001b83c:	d8800415 	stw	r2,16(sp)
1001b840:	003cf606 	br	1001ac1c <_dtoa_r+0x9ac>
1001b844:	00800e44 	movi	r2,57
1001b848:	8029883a 	mov	r20,r16
1001b84c:	88800005 	stb	r2,0(r17)
1001b850:	9821883a 	mov	r16,r19
1001b854:	00c00e44 	movi	r3,57
1001b858:	d9400317 	ldw	r5,12(sp)
1001b85c:	003d7706 	br	1001ae3c <_dtoa_r+0xbcc>
1001b860:	0025883a 	mov	r18,zero
1001b864:	0021883a 	mov	r16,zero
1001b868:	003e6706 	br	1001b208 <_dtoa_r+0xf98>
1001b86c:	d8800f17 	ldw	r2,60(sp)
1001b870:	ba3fffc3 	ldbu	r8,-1(r23)
1001b874:	d9000317 	ldw	r4,12(sp)
1001b878:	10800044 	addi	r2,r2,1
1001b87c:	d8800415 	stw	r2,16(sp)
1001b880:	003cdf06 	br	1001ac00 <_dtoa_r+0x990>
1001b884:	103f2d1e 	bne	r2,zero,1001b53c <_dtoa_r+0x12cc>
1001b888:	4080004c 	andi	r2,r8,1
1001b88c:	103f281e 	bne	r2,zero,1001b530 <_dtoa_r+0x12c0>
1001b890:	003f2a06 	br	1001b53c <_dtoa_r+0x12cc>
1001b894:	d8800f17 	ldw	r2,60(sp)
1001b898:	8811883a 	mov	r8,r17
1001b89c:	d9000317 	ldw	r4,12(sp)
1001b8a0:	10800044 	addi	r2,r2,1
1001b8a4:	d8800415 	stw	r2,16(sp)
1001b8a8:	003cd506 	br	1001ac00 <_dtoa_r+0x990>
1001b8ac:	40800e60 	cmpeqi	r2,r8,57
1001b8b0:	8dc00044 	addi	r23,r17,1
1001b8b4:	103fe31e 	bne	r2,zero,1001b844 <_dtoa_r+0x15d4>
1001b8b8:	053f1f16 	blt	zero,r20,1001b538 <_dtoa_r+0x12c8>
1001b8bc:	003f1f06 	br	1001b53c <_dtoa_r+0x12cc>
1001b8c0:	d8800217 	ldw	r2,8(sp)
1001b8c4:	108000c8 	cmpgei	r2,r2,3
1001b8c8:	103e9326 	beq	r2,zero,1001b318 <_dtoa_r+0x10a8>
1001b8cc:	d8800b17 	ldw	r2,44(sp)
1001b8d0:	dd000415 	stw	r20,16(sp)
1001b8d4:	d8800615 	stw	r2,24(sp)
1001b8d8:	003e3f06 	br	1001b1d8 <_dtoa_r+0xf68>
1001b8dc:	d8800217 	ldw	r2,8(sp)
1001b8e0:	108000c8 	cmpgei	r2,r2,3
1001b8e4:	103ff91e 	bne	r2,zero,1001b8cc <_dtoa_r+0x165c>
1001b8e8:	d8800b17 	ldw	r2,44(sp)
1001b8ec:	003de006 	br	1001b070 <_dtoa_r+0xe00>
1001b8f0:	04000084 	movi	r16,2
1001b8f4:	003b5606 	br	1001a650 <_dtoa_r+0x3e0>
1001b8f8:	d8800f17 	ldw	r2,60(sp)
1001b8fc:	d9000317 	ldw	r4,12(sp)
1001b900:	10800044 	addi	r2,r2,1
1001b904:	d8800415 	stw	r2,16(sp)
1001b908:	003cbd06 	br	1001ac00 <_dtoa_r+0x990>
1001b90c:	008400b4 	movhi	r2,4098
1001b910:	10995104 	addi	r2,r2,25924
1001b914:	d8800315 	stw	r2,12(sp)
1001b918:	003a8706 	br	1001a338 <_dtoa_r+0xc8>
1001b91c:	000b883a 	mov	r5,zero
1001b920:	003b1b06 	br	1001a590 <_dtoa_r+0x320>
1001b924:	18c00120 	cmpeqi	r3,r3,4
1001b928:	183d0f1e 	bne	r3,zero,1001ad68 <_dtoa_r+0xaf8>
1001b92c:	00c00f04 	movi	r3,60
1001b930:	1885c83a 	sub	r2,r3,r2
1001b934:	003d0706 	br	1001ad54 <_dtoa_r+0xae4>

1001b938 <_fclose_r>:
1001b938:	defffc04 	addi	sp,sp,-16
1001b93c:	dfc00315 	stw	ra,12(sp)
1001b940:	dc800215 	stw	r18,8(sp)
1001b944:	dc400115 	stw	r17,4(sp)
1001b948:	dc000015 	stw	r16,0(sp)
1001b94c:	28000726 	beq	r5,zero,1001b96c <_fclose_r+0x34>
1001b950:	2023883a 	mov	r17,r4
1001b954:	2821883a 	mov	r16,r5
1001b958:	20000226 	beq	r4,zero,1001b964 <_fclose_r+0x2c>
1001b95c:	20800e17 	ldw	r2,56(r4)
1001b960:	10002726 	beq	r2,zero,1001ba00 <_fclose_r+0xc8>
1001b964:	8080030f 	ldh	r2,12(r16)
1001b968:	1000081e 	bne	r2,zero,1001b98c <_fclose_r+0x54>
1001b96c:	0025883a 	mov	r18,zero
1001b970:	9005883a 	mov	r2,r18
1001b974:	dfc00317 	ldw	ra,12(sp)
1001b978:	dc800217 	ldw	r18,8(sp)
1001b97c:	dc400117 	ldw	r17,4(sp)
1001b980:	dc000017 	ldw	r16,0(sp)
1001b984:	dec00404 	addi	sp,sp,16
1001b988:	f800283a 	ret
1001b98c:	800b883a 	mov	r5,r16
1001b990:	8809883a 	mov	r4,r17
1001b994:	0014f840 	call	10014f84 <__sflush_r>
1001b998:	1025883a 	mov	r18,r2
1001b99c:	80800b17 	ldw	r2,44(r16)
1001b9a0:	10000426 	beq	r2,zero,1001b9b4 <_fclose_r+0x7c>
1001b9a4:	81400717 	ldw	r5,28(r16)
1001b9a8:	8809883a 	mov	r4,r17
1001b9ac:	103ee83a 	callr	r2
1001b9b0:	10001716 	blt	r2,zero,1001ba10 <_fclose_r+0xd8>
1001b9b4:	8080030b 	ldhu	r2,12(r16)
1001b9b8:	1080200c 	andi	r2,r2,128
1001b9bc:	1000181e 	bne	r2,zero,1001ba20 <_fclose_r+0xe8>
1001b9c0:	81400c17 	ldw	r5,48(r16)
1001b9c4:	28000526 	beq	r5,zero,1001b9dc <_fclose_r+0xa4>
1001b9c8:	80801004 	addi	r2,r16,64
1001b9cc:	28800226 	beq	r5,r2,1001b9d8 <_fclose_r+0xa0>
1001b9d0:	8809883a 	mov	r4,r17
1001b9d4:	00157980 	call	10015798 <_free_r>
1001b9d8:	80000c15 	stw	zero,48(r16)
1001b9dc:	81401117 	ldw	r5,68(r16)
1001b9e0:	28000326 	beq	r5,zero,1001b9f0 <_fclose_r+0xb8>
1001b9e4:	8809883a 	mov	r4,r17
1001b9e8:	00157980 	call	10015798 <_free_r>
1001b9ec:	80001115 	stw	zero,68(r16)
1001b9f0:	00155400 	call	10015540 <__sfp_lock_acquire>
1001b9f4:	8000030d 	sth	zero,12(r16)
1001b9f8:	00155440 	call	10015544 <__sfp_lock_release>
1001b9fc:	003fdc06 	br	1001b970 <_fclose_r+0x38>
1001ba00:	00155300 	call	10015530 <__sinit>
1001ba04:	8080030f 	ldh	r2,12(r16)
1001ba08:	103fd826 	beq	r2,zero,1001b96c <_fclose_r+0x34>
1001ba0c:	003fdf06 	br	1001b98c <_fclose_r+0x54>
1001ba10:	8080030b 	ldhu	r2,12(r16)
1001ba14:	04bfffc4 	movi	r18,-1
1001ba18:	1080200c 	andi	r2,r2,128
1001ba1c:	103fe826 	beq	r2,zero,1001b9c0 <_fclose_r+0x88>
1001ba20:	81400417 	ldw	r5,16(r16)
1001ba24:	8809883a 	mov	r4,r17
1001ba28:	00157980 	call	10015798 <_free_r>
1001ba2c:	003fe406 	br	1001b9c0 <_fclose_r+0x88>

1001ba30 <fclose>:
1001ba30:	008400f4 	movhi	r2,4099
1001ba34:	200b883a 	mov	r5,r4
1001ba38:	11219817 	ldw	r4,-31136(r2)
1001ba3c:	001b9381 	jmpi	1001b938 <_fclose_r>

1001ba40 <__sflags>:
1001ba40:	28800007 	ldb	r2,0(r5)
1001ba44:	10c01ca0 	cmpeqi	r3,r2,114
1001ba48:	1800221e 	bne	r3,zero,1001bad4 <__sflags+0x94>
1001ba4c:	10c01de0 	cmpeqi	r3,r2,119
1001ba50:	1800061e 	bne	r3,zero,1001ba6c <__sflags+0x2c>
1001ba54:	10801860 	cmpeqi	r2,r2,97
1001ba58:	10001a1e 	bne	r2,zero,1001bac4 <__sflags+0x84>
1001ba5c:	00800584 	movi	r2,22
1001ba60:	20800015 	stw	r2,0(r4)
1001ba64:	0005883a 	mov	r2,zero
1001ba68:	f800283a 	ret
1001ba6c:	02c18004 	movi	r11,1536
1001ba70:	01000044 	movi	r4,1
1001ba74:	00800204 	movi	r2,8
1001ba78:	02bff8c4 	movi	r10,-29
1001ba7c:	027fff04 	movi	r9,-4
1001ba80:	29400044 	addi	r5,r5,1
1001ba84:	28c00007 	ldb	r3,0(r5)
1001ba88:	1a000ae0 	cmpeqi	r8,r3,43
1001ba8c:	19c01e20 	cmpeqi	r7,r3,120
1001ba90:	18000926 	beq	r3,zero,1001bab8 <__sflags+0x78>
1001ba94:	4000031e 	bne	r8,zero,1001baa4 <__sflags+0x64>
1001ba98:	383ff926 	beq	r7,zero,1001ba80 <__sflags+0x40>
1001ba9c:	21020014 	ori	r4,r4,2048
1001baa0:	003ff706 	br	1001ba80 <__sflags+0x40>
1001baa4:	1284703a 	and	r2,r2,r10
1001baa8:	2248703a 	and	r4,r4,r9
1001baac:	10800414 	ori	r2,r2,16
1001bab0:	21000094 	ori	r4,r4,2
1001bab4:	003ff206 	br	1001ba80 <__sflags+0x40>
1001bab8:	22c8b03a 	or	r4,r4,r11
1001babc:	31000015 	stw	r4,0(r6)
1001bac0:	f800283a 	ret
1001bac4:	02c08204 	movi	r11,520
1001bac8:	01000044 	movi	r4,1
1001bacc:	00804204 	movi	r2,264
1001bad0:	003fe906 	br	1001ba78 <__sflags+0x38>
1001bad4:	0017883a 	mov	r11,zero
1001bad8:	0009883a 	mov	r4,zero
1001badc:	00800104 	movi	r2,4
1001bae0:	003fe506 	br	1001ba78 <__sflags+0x38>

1001bae4 <__sfvwrite_r>:
1001bae4:	30800217 	ldw	r2,8(r6)
1001bae8:	1000c926 	beq	r2,zero,1001be10 <__sfvwrite_r+0x32c>
1001baec:	2880030b 	ldhu	r2,12(r5)
1001baf0:	defff304 	addi	sp,sp,-52
1001baf4:	dd000715 	stw	r20,28(sp)
1001baf8:	dc000315 	stw	r16,12(sp)
1001bafc:	dfc00c15 	stw	ra,48(sp)
1001bb00:	df000b15 	stw	fp,44(sp)
1001bb04:	ddc00a15 	stw	r23,40(sp)
1001bb08:	dd800915 	stw	r22,36(sp)
1001bb0c:	dd400815 	stw	r21,32(sp)
1001bb10:	dcc00615 	stw	r19,24(sp)
1001bb14:	dc800515 	stw	r18,20(sp)
1001bb18:	dc400415 	stw	r17,16(sp)
1001bb1c:	d9000015 	stw	r4,0(sp)
1001bb20:	10c0020c 	andi	r3,r2,8
1001bb24:	2821883a 	mov	r16,r5
1001bb28:	3029883a 	mov	r20,r6
1001bb2c:	18002426 	beq	r3,zero,1001bbc0 <__sfvwrite_r+0xdc>
1001bb30:	28c00417 	ldw	r3,16(r5)
1001bb34:	18002226 	beq	r3,zero,1001bbc0 <__sfvwrite_r+0xdc>
1001bb38:	10c0008c 	andi	r3,r2,2
1001bb3c:	a4400017 	ldw	r17,0(r20)
1001bb40:	18002726 	beq	r3,zero,1001bbe0 <__sfvwrite_r+0xfc>
1001bb44:	80c00917 	ldw	r3,36(r16)
1001bb48:	80800717 	ldw	r2,28(r16)
1001bb4c:	05600034 	movhi	r21,32768
1001bb50:	0027883a 	mov	r19,zero
1001bb54:	0025883a 	mov	r18,zero
1001bb58:	ad7f0004 	addi	r21,r21,-1024
1001bb5c:	980d883a 	mov	r6,r19
1001bb60:	100b883a 	mov	r5,r2
1001bb64:	d9000017 	ldw	r4,0(sp)
1001bb68:	90001126 	beq	r18,zero,1001bbb0 <__sfvwrite_r+0xcc>
1001bb6c:	900f883a 	mov	r7,r18
1001bb70:	ac80012e 	bgeu	r21,r18,1001bb78 <__sfvwrite_r+0x94>
1001bb74:	a80f883a 	mov	r7,r21
1001bb78:	183ee83a 	callr	r3
1001bb7c:	00809f0e 	bge	zero,r2,1001bdfc <__sfvwrite_r+0x318>
1001bb80:	a0c00217 	ldw	r3,8(r20)
1001bb84:	98a7883a 	add	r19,r19,r2
1001bb88:	90a5c83a 	sub	r18,r18,r2
1001bb8c:	1885c83a 	sub	r2,r3,r2
1001bb90:	a0800215 	stw	r2,8(r20)
1001bb94:	10006326 	beq	r2,zero,1001bd24 <__sfvwrite_r+0x240>
1001bb98:	80800717 	ldw	r2,28(r16)
1001bb9c:	80c00917 	ldw	r3,36(r16)
1001bba0:	980d883a 	mov	r6,r19
1001bba4:	100b883a 	mov	r5,r2
1001bba8:	d9000017 	ldw	r4,0(sp)
1001bbac:	903fef1e 	bne	r18,zero,1001bb6c <__sfvwrite_r+0x88>
1001bbb0:	8cc00017 	ldw	r19,0(r17)
1001bbb4:	8c800117 	ldw	r18,4(r17)
1001bbb8:	8c400204 	addi	r17,r17,8
1001bbbc:	003fe706 	br	1001bb5c <__sfvwrite_r+0x78>
1001bbc0:	d9000017 	ldw	r4,0(sp)
1001bbc4:	800b883a 	mov	r5,r16
1001bbc8:	0019ea80 	call	10019ea8 <__swsetup_r>
1001bbcc:	1000f41e 	bne	r2,zero,1001bfa0 <__sfvwrite_r+0x4bc>
1001bbd0:	8080030b 	ldhu	r2,12(r16)
1001bbd4:	a4400017 	ldw	r17,0(r20)
1001bbd8:	10c0008c 	andi	r3,r2,2
1001bbdc:	183fd91e 	bne	r3,zero,1001bb44 <__sfvwrite_r+0x60>
1001bbe0:	10c0004c 	andi	r3,r2,1
1001bbe4:	84800217 	ldw	r18,8(r16)
1001bbe8:	87000017 	ldw	fp,0(r16)
1001bbec:	18008a1e 	bne	r3,zero,1001be18 <__sfvwrite_r+0x334>
1001bbf0:	00e00034 	movhi	r3,32768
1001bbf4:	18ffff84 	addi	r3,r3,-2
1001bbf8:	01200034 	movhi	r4,32768
1001bbfc:	d8c00115 	stw	r3,4(sp)
1001bc00:	20ffffc4 	addi	r3,r4,-1
1001bc04:	002d883a 	mov	r22,zero
1001bc08:	002f883a 	mov	r23,zero
1001bc0c:	d8c00215 	stw	r3,8(sp)
1001bc10:	b8004026 	beq	r23,zero,1001bd14 <__sfvwrite_r+0x230>
1001bc14:	1100800c 	andi	r4,r2,512
1001bc18:	20009026 	beq	r4,zero,1001be5c <__sfvwrite_r+0x378>
1001bc1c:	902b883a 	mov	r21,r18
1001bc20:	bc80b436 	bltu	r23,r18,1001bef4 <__sfvwrite_r+0x410>
1001bc24:	1101200c 	andi	r4,r2,1152
1001bc28:	20002526 	beq	r4,zero,1001bcc0 <__sfvwrite_r+0x1dc>
1001bc2c:	81800517 	ldw	r6,20(r16)
1001bc30:	81400417 	ldw	r5,16(r16)
1001bc34:	b9000044 	addi	r4,r23,1
1001bc38:	318000e4 	muli	r6,r6,3
1001bc3c:	e167c83a 	sub	r19,fp,r5
1001bc40:	24c9883a 	add	r4,r4,r19
1001bc44:	3024d7fa 	srli	r18,r6,31
1001bc48:	91a5883a 	add	r18,r18,r6
1001bc4c:	9025d07a 	srai	r18,r18,1
1001bc50:	900d883a 	mov	r6,r18
1001bc54:	9100022e 	bgeu	r18,r4,1001bc60 <__sfvwrite_r+0x17c>
1001bc58:	2025883a 	mov	r18,r4
1001bc5c:	200d883a 	mov	r6,r4
1001bc60:	1081000c 	andi	r2,r2,1024
1001bc64:	1000bc26 	beq	r2,zero,1001bf58 <__sfvwrite_r+0x474>
1001bc68:	d9000017 	ldw	r4,0(sp)
1001bc6c:	300b883a 	mov	r5,r6
1001bc70:	00162cc0 	call	100162cc <_malloc_r>
1001bc74:	1000c526 	beq	r2,zero,1001bf8c <__sfvwrite_r+0x4a8>
1001bc78:	81400417 	ldw	r5,16(r16)
1001bc7c:	980d883a 	mov	r6,r19
1001bc80:	1009883a 	mov	r4,r2
1001bc84:	0016c340 	call	10016c34 <memcpy>
1001bc88:	100f883a 	mov	r7,r2
1001bc8c:	8080030b 	ldhu	r2,12(r16)
1001bc90:	00fedfc4 	movi	r3,-1153
1001bc94:	10c4703a 	and	r2,r2,r3
1001bc98:	10802014 	ori	r2,r2,128
1001bc9c:	8080030d 	sth	r2,12(r16)
1001bca0:	94c5c83a 	sub	r2,r18,r19
1001bca4:	3cf9883a 	add	fp,r7,r19
1001bca8:	84800515 	stw	r18,20(r16)
1001bcac:	81c00415 	stw	r7,16(r16)
1001bcb0:	87000015 	stw	fp,0(r16)
1001bcb4:	b825883a 	mov	r18,r23
1001bcb8:	80800215 	stw	r2,8(r16)
1001bcbc:	b82b883a 	mov	r21,r23
1001bcc0:	a80d883a 	mov	r6,r21
1001bcc4:	b00b883a 	mov	r5,r22
1001bcc8:	e009883a 	mov	r4,fp
1001bccc:	0016d340 	call	10016d34 <memmove>
1001bcd0:	80800217 	ldw	r2,8(r16)
1001bcd4:	81800017 	ldw	r6,0(r16)
1001bcd8:	b827883a 	mov	r19,r23
1001bcdc:	14a5c83a 	sub	r18,r2,r18
1001bce0:	354d883a 	add	r6,r6,r21
1001bce4:	84800215 	stw	r18,8(r16)
1001bce8:	81800015 	stw	r6,0(r16)
1001bcec:	002f883a 	mov	r23,zero
1001bcf0:	a0800217 	ldw	r2,8(r20)
1001bcf4:	b4ed883a 	add	r22,r22,r19
1001bcf8:	14e7c83a 	sub	r19,r2,r19
1001bcfc:	a4c00215 	stw	r19,8(r20)
1001bd00:	98000826 	beq	r19,zero,1001bd24 <__sfvwrite_r+0x240>
1001bd04:	8080030b 	ldhu	r2,12(r16)
1001bd08:	84800217 	ldw	r18,8(r16)
1001bd0c:	87000017 	ldw	fp,0(r16)
1001bd10:	b83fc01e 	bne	r23,zero,1001bc14 <__sfvwrite_r+0x130>
1001bd14:	8d800017 	ldw	r22,0(r17)
1001bd18:	8dc00117 	ldw	r23,4(r17)
1001bd1c:	8c400204 	addi	r17,r17,8
1001bd20:	003fbb06 	br	1001bc10 <__sfvwrite_r+0x12c>
1001bd24:	0005883a 	mov	r2,zero
1001bd28:	dfc00c17 	ldw	ra,48(sp)
1001bd2c:	df000b17 	ldw	fp,44(sp)
1001bd30:	ddc00a17 	ldw	r23,40(sp)
1001bd34:	dd800917 	ldw	r22,36(sp)
1001bd38:	dd400817 	ldw	r21,32(sp)
1001bd3c:	dd000717 	ldw	r20,28(sp)
1001bd40:	dcc00617 	ldw	r19,24(sp)
1001bd44:	dc800517 	ldw	r18,20(sp)
1001bd48:	dc400417 	ldw	r17,16(sp)
1001bd4c:	dc000317 	ldw	r16,12(sp)
1001bd50:	dec00d04 	addi	sp,sp,52
1001bd54:	f800283a 	ret
1001bd58:	b1c06e16 	blt	r22,r7,1001bf14 <__sfvwrite_r+0x430>
1001bd5c:	80800917 	ldw	r2,36(r16)
1001bd60:	81400717 	ldw	r5,28(r16)
1001bd64:	d9000017 	ldw	r4,0(sp)
1001bd68:	b80d883a 	mov	r6,r23
1001bd6c:	103ee83a 	callr	r2
1001bd70:	1025883a 	mov	r18,r2
1001bd74:	0080210e 	bge	zero,r2,1001bdfc <__sfvwrite_r+0x318>
1001bd78:	acabc83a 	sub	r21,r21,r18
1001bd7c:	a8006026 	beq	r21,zero,1001bf00 <__sfvwrite_r+0x41c>
1001bd80:	00800044 	movi	r2,1
1001bd84:	a0c00217 	ldw	r3,8(r20)
1001bd88:	bcaf883a 	add	r23,r23,r18
1001bd8c:	9ca7c83a 	sub	r19,r19,r18
1001bd90:	1ca5c83a 	sub	r18,r3,r18
1001bd94:	a4800215 	stw	r18,8(r20)
1001bd98:	903fe226 	beq	r18,zero,1001bd24 <__sfvwrite_r+0x240>
1001bd9c:	84800217 	ldw	r18,8(r16)
1001bda0:	87000017 	ldw	fp,0(r16)
1001bda4:	98002126 	beq	r19,zero,1001be2c <__sfvwrite_r+0x348>
1001bda8:	10002426 	beq	r2,zero,1001be3c <__sfvwrite_r+0x358>
1001bdac:	a805883a 	mov	r2,r21
1001bdb0:	982d883a 	mov	r22,r19
1001bdb4:	14c0012e 	bgeu	r2,r19,1001bdbc <__sfvwrite_r+0x2d8>
1001bdb8:	102d883a 	mov	r22,r2
1001bdbc:	80800417 	ldw	r2,16(r16)
1001bdc0:	81c00517 	ldw	r7,20(r16)
1001bdc4:	173fe42e 	bgeu	r2,fp,1001bd58 <__sfvwrite_r+0x274>
1001bdc8:	3ca5883a 	add	r18,r7,r18
1001bdcc:	95bfe20e 	bge	r18,r22,1001bd58 <__sfvwrite_r+0x274>
1001bdd0:	b80b883a 	mov	r5,r23
1001bdd4:	e009883a 	mov	r4,fp
1001bdd8:	900d883a 	mov	r6,r18
1001bddc:	0016d340 	call	10016d34 <memmove>
1001bde0:	80800017 	ldw	r2,0(r16)
1001bde4:	d9000017 	ldw	r4,0(sp)
1001bde8:	800b883a 	mov	r5,r16
1001bdec:	1485883a 	add	r2,r2,r18
1001bdf0:	80800015 	stw	r2,0(r16)
1001bdf4:	00151ac0 	call	100151ac <_fflush_r>
1001bdf8:	103fdf26 	beq	r2,zero,1001bd78 <__sfvwrite_r+0x294>
1001bdfc:	8080030b 	ldhu	r2,12(r16)
1001be00:	10801014 	ori	r2,r2,64
1001be04:	8080030d 	sth	r2,12(r16)
1001be08:	00bfffc4 	movi	r2,-1
1001be0c:	003fc606 	br	1001bd28 <__sfvwrite_r+0x244>
1001be10:	0005883a 	mov	r2,zero
1001be14:	f800283a 	ret
1001be18:	0027883a 	mov	r19,zero
1001be1c:	002b883a 	mov	r21,zero
1001be20:	0005883a 	mov	r2,zero
1001be24:	002f883a 	mov	r23,zero
1001be28:	983fdf1e 	bne	r19,zero,1001bda8 <__sfvwrite_r+0x2c4>
1001be2c:	8cc00117 	ldw	r19,4(r17)
1001be30:	8dc00017 	ldw	r23,0(r17)
1001be34:	8c400204 	addi	r17,r17,8
1001be38:	983ffc26 	beq	r19,zero,1001be2c <__sfvwrite_r+0x348>
1001be3c:	980d883a 	mov	r6,r19
1001be40:	01400284 	movi	r5,10
1001be44:	b809883a 	mov	r4,r23
1001be48:	0016ac00 	call	10016ac0 <memchr>
1001be4c:	10003f26 	beq	r2,zero,1001bf4c <__sfvwrite_r+0x468>
1001be50:	10800044 	addi	r2,r2,1
1001be54:	15ebc83a 	sub	r21,r2,r23
1001be58:	003fd406 	br	1001bdac <__sfvwrite_r+0x2c8>
1001be5c:	80800417 	ldw	r2,16(r16)
1001be60:	17001136 	bltu	r2,fp,1001bea8 <__sfvwrite_r+0x3c4>
1001be64:	84c00517 	ldw	r19,20(r16)
1001be68:	bcc00f36 	bltu	r23,r19,1001bea8 <__sfvwrite_r+0x3c4>
1001be6c:	d8800117 	ldw	r2,4(sp)
1001be70:	15c0342e 	bgeu	r2,r23,1001bf44 <__sfvwrite_r+0x460>
1001be74:	d9000217 	ldw	r4,8(sp)
1001be78:	980b883a 	mov	r5,r19
1001be7c:	001488c0 	call	1001488c <__divsi3>
1001be80:	14cf383a 	mul	r7,r2,r19
1001be84:	81400717 	ldw	r5,28(r16)
1001be88:	80800917 	ldw	r2,36(r16)
1001be8c:	d9000017 	ldw	r4,0(sp)
1001be90:	b00d883a 	mov	r6,r22
1001be94:	103ee83a 	callr	r2
1001be98:	00bfd80e 	bge	zero,r2,1001bdfc <__sfvwrite_r+0x318>
1001be9c:	1027883a 	mov	r19,r2
1001bea0:	bcefc83a 	sub	r23,r23,r19
1001bea4:	003f9206 	br	1001bcf0 <__sfvwrite_r+0x20c>
1001bea8:	9027883a 	mov	r19,r18
1001beac:	bc80012e 	bgeu	r23,r18,1001beb4 <__sfvwrite_r+0x3d0>
1001beb0:	b827883a 	mov	r19,r23
1001beb4:	e009883a 	mov	r4,fp
1001beb8:	980d883a 	mov	r6,r19
1001bebc:	b00b883a 	mov	r5,r22
1001bec0:	0016d340 	call	10016d34 <memmove>
1001bec4:	80800217 	ldw	r2,8(r16)
1001bec8:	81000017 	ldw	r4,0(r16)
1001becc:	14c5c83a 	sub	r2,r2,r19
1001bed0:	24c9883a 	add	r4,r4,r19
1001bed4:	80800215 	stw	r2,8(r16)
1001bed8:	81000015 	stw	r4,0(r16)
1001bedc:	103ff01e 	bne	r2,zero,1001bea0 <__sfvwrite_r+0x3bc>
1001bee0:	d9000017 	ldw	r4,0(sp)
1001bee4:	800b883a 	mov	r5,r16
1001bee8:	00151ac0 	call	100151ac <_fflush_r>
1001beec:	103fec26 	beq	r2,zero,1001bea0 <__sfvwrite_r+0x3bc>
1001bef0:	003fc206 	br	1001bdfc <__sfvwrite_r+0x318>
1001bef4:	b825883a 	mov	r18,r23
1001bef8:	b82b883a 	mov	r21,r23
1001befc:	003f7006 	br	1001bcc0 <__sfvwrite_r+0x1dc>
1001bf00:	d9000017 	ldw	r4,0(sp)
1001bf04:	800b883a 	mov	r5,r16
1001bf08:	00151ac0 	call	100151ac <_fflush_r>
1001bf0c:	103f9d26 	beq	r2,zero,1001bd84 <__sfvwrite_r+0x2a0>
1001bf10:	003fba06 	br	1001bdfc <__sfvwrite_r+0x318>
1001bf14:	b00d883a 	mov	r6,r22
1001bf18:	b80b883a 	mov	r5,r23
1001bf1c:	e009883a 	mov	r4,fp
1001bf20:	0016d340 	call	10016d34 <memmove>
1001bf24:	80c00217 	ldw	r3,8(r16)
1001bf28:	80800017 	ldw	r2,0(r16)
1001bf2c:	b025883a 	mov	r18,r22
1001bf30:	1d87c83a 	sub	r3,r3,r22
1001bf34:	15ad883a 	add	r22,r2,r22
1001bf38:	80c00215 	stw	r3,8(r16)
1001bf3c:	85800015 	stw	r22,0(r16)
1001bf40:	003f8d06 	br	1001bd78 <__sfvwrite_r+0x294>
1001bf44:	b809883a 	mov	r4,r23
1001bf48:	003fcb06 	br	1001be78 <__sfvwrite_r+0x394>
1001bf4c:	98800044 	addi	r2,r19,1
1001bf50:	102b883a 	mov	r21,r2
1001bf54:	003f9606 	br	1001bdb0 <__sfvwrite_r+0x2cc>
1001bf58:	d9000017 	ldw	r4,0(sp)
1001bf5c:	001d1d00 	call	1001d1d0 <_realloc_r>
1001bf60:	100f883a 	mov	r7,r2
1001bf64:	103f4e1e 	bne	r2,zero,1001bca0 <__sfvwrite_r+0x1bc>
1001bf68:	dc400017 	ldw	r17,0(sp)
1001bf6c:	81400417 	ldw	r5,16(r16)
1001bf70:	8809883a 	mov	r4,r17
1001bf74:	00157980 	call	10015798 <_free_r>
1001bf78:	8080030b 	ldhu	r2,12(r16)
1001bf7c:	00c00304 	movi	r3,12
1001bf80:	88c00015 	stw	r3,0(r17)
1001bf84:	10bfdfcc 	andi	r2,r2,65407
1001bf88:	003f9d06 	br	1001be00 <__sfvwrite_r+0x31c>
1001bf8c:	d8c00017 	ldw	r3,0(sp)
1001bf90:	00800304 	movi	r2,12
1001bf94:	18800015 	stw	r2,0(r3)
1001bf98:	8080030b 	ldhu	r2,12(r16)
1001bf9c:	003f9806 	br	1001be00 <__sfvwrite_r+0x31c>
1001bfa0:	00bfffc4 	movi	r2,-1
1001bfa4:	003f6006 	br	1001bd28 <__sfvwrite_r+0x244>

1001bfa8 <_isatty_r>:
1001bfa8:	defffe04 	addi	sp,sp,-8
1001bfac:	dc000015 	stw	r16,0(sp)
1001bfb0:	008400f4 	movhi	r2,4099
1001bfb4:	2021883a 	mov	r16,r4
1001bfb8:	2809883a 	mov	r4,r5
1001bfbc:	dfc00115 	stw	ra,4(sp)
1001bfc0:	10295b15 	stw	zero,-23188(r2)
1001bfc4:	00228340 	call	10022834 <isatty>
1001bfc8:	10ffffd8 	cmpnei	r3,r2,-1
1001bfcc:	18000426 	beq	r3,zero,1001bfe0 <_isatty_r+0x38>
1001bfd0:	dfc00117 	ldw	ra,4(sp)
1001bfd4:	dc000017 	ldw	r16,0(sp)
1001bfd8:	dec00204 	addi	sp,sp,8
1001bfdc:	f800283a 	ret
1001bfe0:	00c400f4 	movhi	r3,4099
1001bfe4:	18e95b17 	ldw	r3,-23188(r3)
1001bfe8:	183ff926 	beq	r3,zero,1001bfd0 <_isatty_r+0x28>
1001bfec:	80c00015 	stw	r3,0(r16)
1001bff0:	dfc00117 	ldw	ra,4(sp)
1001bff4:	dc000017 	ldw	r16,0(sp)
1001bff8:	dec00204 	addi	sp,sp,8
1001bffc:	f800283a 	ret

1001c000 <__localeconv_l>:
1001c000:	20803c04 	addi	r2,r4,240
1001c004:	f800283a 	ret

1001c008 <_localeconv_r>:
1001c008:	008400b4 	movhi	r2,4098
1001c00c:	109ce604 	addi	r2,r2,29592
1001c010:	f800283a 	ret

1001c014 <localeconv>:
1001c014:	008400b4 	movhi	r2,4098
1001c018:	109ce604 	addi	r2,r2,29592
1001c01c:	f800283a 	ret

1001c020 <_lseek_r>:
1001c020:	defffe04 	addi	sp,sp,-8
1001c024:	2805883a 	mov	r2,r5
1001c028:	dc000015 	stw	r16,0(sp)
1001c02c:	300b883a 	mov	r5,r6
1001c030:	2021883a 	mov	r16,r4
1001c034:	380d883a 	mov	r6,r7
1001c038:	1009883a 	mov	r4,r2
1001c03c:	008400f4 	movhi	r2,4099
1001c040:	dfc00115 	stw	ra,4(sp)
1001c044:	10295b15 	stw	zero,-23188(r2)
1001c048:	0022b680 	call	10022b68 <lseek>
1001c04c:	10ffffd8 	cmpnei	r3,r2,-1
1001c050:	18000426 	beq	r3,zero,1001c064 <_lseek_r+0x44>
1001c054:	dfc00117 	ldw	ra,4(sp)
1001c058:	dc000017 	ldw	r16,0(sp)
1001c05c:	dec00204 	addi	sp,sp,8
1001c060:	f800283a 	ret
1001c064:	00c400f4 	movhi	r3,4099
1001c068:	18e95b17 	ldw	r3,-23188(r3)
1001c06c:	183ff926 	beq	r3,zero,1001c054 <_lseek_r+0x34>
1001c070:	80c00015 	stw	r3,0(r16)
1001c074:	dfc00117 	ldw	ra,4(sp)
1001c078:	dc000017 	ldw	r16,0(sp)
1001c07c:	dec00204 	addi	sp,sp,8
1001c080:	f800283a 	ret

1001c084 <_Balloc>:
1001c084:	20801317 	ldw	r2,76(r4)
1001c088:	defffc04 	addi	sp,sp,-16
1001c08c:	dc400115 	stw	r17,4(sp)
1001c090:	dc000015 	stw	r16,0(sp)
1001c094:	dfc00315 	stw	ra,12(sp)
1001c098:	dc800215 	stw	r18,8(sp)
1001c09c:	2021883a 	mov	r16,r4
1001c0a0:	2823883a 	mov	r17,r5
1001c0a4:	10000e26 	beq	r2,zero,1001c0e0 <_Balloc+0x5c>
1001c0a8:	880690ba 	slli	r3,r17,2
1001c0ac:	10c7883a 	add	r3,r2,r3
1001c0b0:	18800017 	ldw	r2,0(r3)
1001c0b4:	10001126 	beq	r2,zero,1001c0fc <_Balloc+0x78>
1001c0b8:	11000017 	ldw	r4,0(r2)
1001c0bc:	19000015 	stw	r4,0(r3)
1001c0c0:	10000415 	stw	zero,16(r2)
1001c0c4:	10000315 	stw	zero,12(r2)
1001c0c8:	dfc00317 	ldw	ra,12(sp)
1001c0cc:	dc800217 	ldw	r18,8(sp)
1001c0d0:	dc400117 	ldw	r17,4(sp)
1001c0d4:	dc000017 	ldw	r16,0(sp)
1001c0d8:	dec00404 	addi	sp,sp,16
1001c0dc:	f800283a 	ret
1001c0e0:	01800844 	movi	r6,33
1001c0e4:	01400104 	movi	r5,4
1001c0e8:	001ee680 	call	1001ee68 <_calloc_r>
1001c0ec:	80801315 	stw	r2,76(r16)
1001c0f0:	103fed1e 	bne	r2,zero,1001c0a8 <_Balloc+0x24>
1001c0f4:	0005883a 	mov	r2,zero
1001c0f8:	003ff306 	br	1001c0c8 <_Balloc+0x44>
1001c0fc:	04800044 	movi	r18,1
1001c100:	9464983a 	sll	r18,r18,r17
1001c104:	01400044 	movi	r5,1
1001c108:	8009883a 	mov	r4,r16
1001c10c:	91800144 	addi	r6,r18,5
1001c110:	300c90ba 	slli	r6,r6,2
1001c114:	001ee680 	call	1001ee68 <_calloc_r>
1001c118:	103ff626 	beq	r2,zero,1001c0f4 <_Balloc+0x70>
1001c11c:	14400115 	stw	r17,4(r2)
1001c120:	14800215 	stw	r18,8(r2)
1001c124:	003fe606 	br	1001c0c0 <_Balloc+0x3c>

1001c128 <_Bfree>:
1001c128:	28000726 	beq	r5,zero,1001c148 <_Bfree+0x20>
1001c12c:	28c00117 	ldw	r3,4(r5)
1001c130:	20801317 	ldw	r2,76(r4)
1001c134:	180690ba 	slli	r3,r3,2
1001c138:	10c5883a 	add	r2,r2,r3
1001c13c:	10c00017 	ldw	r3,0(r2)
1001c140:	28c00015 	stw	r3,0(r5)
1001c144:	11400015 	stw	r5,0(r2)
1001c148:	f800283a 	ret

1001c14c <__multadd>:
1001c14c:	defffa04 	addi	sp,sp,-24
1001c150:	dc800315 	stw	r18,12(sp)
1001c154:	dc400215 	stw	r17,8(sp)
1001c158:	dc000115 	stw	r16,4(sp)
1001c15c:	2823883a 	mov	r17,r5
1001c160:	2c000417 	ldw	r16,16(r5)
1001c164:	2025883a 	mov	r18,r4
1001c168:	dfc00515 	stw	ra,20(sp)
1001c16c:	29000504 	addi	r4,r5,20
1001c170:	dcc00415 	stw	r19,16(sp)
1001c174:	000b883a 	mov	r5,zero
1001c178:	20800017 	ldw	r2,0(r4)
1001c17c:	21000104 	addi	r4,r4,4
1001c180:	29400044 	addi	r5,r5,1
1001c184:	10ffffcc 	andi	r3,r2,65535
1001c188:	1987383a 	mul	r3,r3,r6
1001c18c:	1004d43a 	srli	r2,r2,16
1001c190:	19cf883a 	add	r7,r3,r7
1001c194:	1185383a 	mul	r2,r2,r6
1001c198:	3810d43a 	srli	r8,r7,16
1001c19c:	38ffffcc 	andi	r3,r7,65535
1001c1a0:	120f883a 	add	r7,r2,r8
1001c1a4:	3804943a 	slli	r2,r7,16
1001c1a8:	380ed43a 	srli	r7,r7,16
1001c1ac:	10c7883a 	add	r3,r2,r3
1001c1b0:	20ffff15 	stw	r3,-4(r4)
1001c1b4:	2c3ff016 	blt	r5,r16,1001c178 <__multadd+0x2c>
1001c1b8:	38000826 	beq	r7,zero,1001c1dc <__multadd+0x90>
1001c1bc:	88800217 	ldw	r2,8(r17)
1001c1c0:	80800e0e 	bge	r16,r2,1001c1fc <__multadd+0xb0>
1001c1c4:	80800144 	addi	r2,r16,5
1001c1c8:	100490ba 	slli	r2,r2,2
1001c1cc:	84000044 	addi	r16,r16,1
1001c1d0:	8885883a 	add	r2,r17,r2
1001c1d4:	11c00015 	stw	r7,0(r2)
1001c1d8:	8c000415 	stw	r16,16(r17)
1001c1dc:	8805883a 	mov	r2,r17
1001c1e0:	dfc00517 	ldw	ra,20(sp)
1001c1e4:	dcc00417 	ldw	r19,16(sp)
1001c1e8:	dc800317 	ldw	r18,12(sp)
1001c1ec:	dc400217 	ldw	r17,8(sp)
1001c1f0:	dc000117 	ldw	r16,4(sp)
1001c1f4:	dec00604 	addi	sp,sp,24
1001c1f8:	f800283a 	ret
1001c1fc:	89400117 	ldw	r5,4(r17)
1001c200:	9009883a 	mov	r4,r18
1001c204:	d9c00015 	stw	r7,0(sp)
1001c208:	29400044 	addi	r5,r5,1
1001c20c:	001c0840 	call	1001c084 <_Balloc>
1001c210:	89800417 	ldw	r6,16(r17)
1001c214:	89400304 	addi	r5,r17,12
1001c218:	11000304 	addi	r4,r2,12
1001c21c:	31800084 	addi	r6,r6,2
1001c220:	300c90ba 	slli	r6,r6,2
1001c224:	1027883a 	mov	r19,r2
1001c228:	0016c340 	call	10016c34 <memcpy>
1001c22c:	d9c00017 	ldw	r7,0(sp)
1001c230:	88000926 	beq	r17,zero,1001c258 <__multadd+0x10c>
1001c234:	88c00117 	ldw	r3,4(r17)
1001c238:	90801317 	ldw	r2,76(r18)
1001c23c:	180690ba 	slli	r3,r3,2
1001c240:	10c5883a 	add	r2,r2,r3
1001c244:	10c00017 	ldw	r3,0(r2)
1001c248:	88c00015 	stw	r3,0(r17)
1001c24c:	14400015 	stw	r17,0(r2)
1001c250:	9823883a 	mov	r17,r19
1001c254:	003fdb06 	br	1001c1c4 <__multadd+0x78>
1001c258:	9823883a 	mov	r17,r19
1001c25c:	003fd906 	br	1001c1c4 <__multadd+0x78>

1001c260 <__s2b>:
1001c260:	defff904 	addi	sp,sp,-28
1001c264:	dc800215 	stw	r18,8(sp)
1001c268:	dc000015 	stw	r16,0(sp)
1001c26c:	2025883a 	mov	r18,r4
1001c270:	2821883a 	mov	r16,r5
1001c274:	39000204 	addi	r4,r7,8
1001c278:	01400244 	movi	r5,9
1001c27c:	dcc00315 	stw	r19,12(sp)
1001c280:	dc400115 	stw	r17,4(sp)
1001c284:	dfc00615 	stw	ra,24(sp)
1001c288:	3823883a 	mov	r17,r7
1001c28c:	dd400515 	stw	r21,20(sp)
1001c290:	dd000415 	stw	r20,16(sp)
1001c294:	3027883a 	mov	r19,r6
1001c298:	001488c0 	call	1001488c <__divsi3>
1001c29c:	88c00290 	cmplti	r3,r17,10
1001c2a0:	1800311e 	bne	r3,zero,1001c368 <__s2b+0x108>
1001c2a4:	00c00044 	movi	r3,1
1001c2a8:	000b883a 	mov	r5,zero
1001c2ac:	18c7883a 	add	r3,r3,r3
1001c2b0:	29400044 	addi	r5,r5,1
1001c2b4:	18bffd16 	blt	r3,r2,1001c2ac <__s2b+0x4c>
1001c2b8:	9009883a 	mov	r4,r18
1001c2bc:	001c0840 	call	1001c084 <_Balloc>
1001c2c0:	d8c00717 	ldw	r3,28(sp)
1001c2c4:	10c00515 	stw	r3,20(r2)
1001c2c8:	00c00044 	movi	r3,1
1001c2cc:	10c00415 	stw	r3,16(r2)
1001c2d0:	98c00290 	cmplti	r3,r19,10
1001c2d4:	1800211e 	bne	r3,zero,1001c35c <__s2b+0xfc>
1001c2d8:	85400244 	addi	r21,r16,9
1001c2dc:	84e9883a 	add	r20,r16,r19
1001c2e0:	a821883a 	mov	r16,r21
1001c2e4:	84000044 	addi	r16,r16,1
1001c2e8:	81ffffc7 	ldb	r7,-1(r16)
1001c2ec:	01800284 	movi	r6,10
1001c2f0:	100b883a 	mov	r5,r2
1001c2f4:	39fff404 	addi	r7,r7,-48
1001c2f8:	9009883a 	mov	r4,r18
1001c2fc:	001c14c0 	call	1001c14c <__multadd>
1001c300:	a43ff81e 	bne	r20,r16,1001c2e4 <__s2b+0x84>
1001c304:	9c3ffe04 	addi	r16,r19,-8
1001c308:	ac21883a 	add	r16,r21,r16
1001c30c:	9c400a0e 	bge	r19,r17,1001c338 <__s2b+0xd8>
1001c310:	8ce3c83a 	sub	r17,r17,r19
1001c314:	8463883a 	add	r17,r16,r17
1001c318:	84000044 	addi	r16,r16,1
1001c31c:	81ffffc7 	ldb	r7,-1(r16)
1001c320:	01800284 	movi	r6,10
1001c324:	100b883a 	mov	r5,r2
1001c328:	39fff404 	addi	r7,r7,-48
1001c32c:	9009883a 	mov	r4,r18
1001c330:	001c14c0 	call	1001c14c <__multadd>
1001c334:	8c3ff81e 	bne	r17,r16,1001c318 <__s2b+0xb8>
1001c338:	dfc00617 	ldw	ra,24(sp)
1001c33c:	dd400517 	ldw	r21,20(sp)
1001c340:	dd000417 	ldw	r20,16(sp)
1001c344:	dcc00317 	ldw	r19,12(sp)
1001c348:	dc800217 	ldw	r18,8(sp)
1001c34c:	dc400117 	ldw	r17,4(sp)
1001c350:	dc000017 	ldw	r16,0(sp)
1001c354:	dec00704 	addi	sp,sp,28
1001c358:	f800283a 	ret
1001c35c:	84000284 	addi	r16,r16,10
1001c360:	04c00244 	movi	r19,9
1001c364:	003fe906 	br	1001c30c <__s2b+0xac>
1001c368:	000b883a 	mov	r5,zero
1001c36c:	003fd206 	br	1001c2b8 <__s2b+0x58>

1001c370 <__hi0bits>:
1001c370:	20bfffec 	andhi	r2,r4,65535
1001c374:	1000131e 	bne	r2,zero,1001c3c4 <__hi0bits+0x54>
1001c378:	2008943a 	slli	r4,r4,16
1001c37c:	00800404 	movi	r2,16
1001c380:	20ffc02c 	andhi	r3,r4,65280
1001c384:	1800021e 	bne	r3,zero,1001c390 <__hi0bits+0x20>
1001c388:	2008923a 	slli	r4,r4,8
1001c38c:	10800204 	addi	r2,r2,8
1001c390:	20fc002c 	andhi	r3,r4,61440
1001c394:	1800021e 	bne	r3,zero,1001c3a0 <__hi0bits+0x30>
1001c398:	2008913a 	slli	r4,r4,4
1001c39c:	10800104 	addi	r2,r2,4
1001c3a0:	20f0002c 	andhi	r3,r4,49152
1001c3a4:	1800021e 	bne	r3,zero,1001c3b0 <__hi0bits+0x40>
1001c3a8:	200890ba 	slli	r4,r4,2
1001c3ac:	10800084 	addi	r2,r2,2
1001c3b0:	20000316 	blt	r4,zero,1001c3c0 <__hi0bits+0x50>
1001c3b4:	2110002c 	andhi	r4,r4,16384
1001c3b8:	10800044 	addi	r2,r2,1
1001c3bc:	20000326 	beq	r4,zero,1001c3cc <__hi0bits+0x5c>
1001c3c0:	f800283a 	ret
1001c3c4:	0005883a 	mov	r2,zero
1001c3c8:	003fed06 	br	1001c380 <__hi0bits+0x10>
1001c3cc:	00800804 	movi	r2,32
1001c3d0:	f800283a 	ret

1001c3d4 <__lo0bits>:
1001c3d4:	20c00017 	ldw	r3,0(r4)
1001c3d8:	188001cc 	andi	r2,r3,7
1001c3dc:	10000826 	beq	r2,zero,1001c400 <__lo0bits+0x2c>
1001c3e0:	1880004c 	andi	r2,r3,1
1001c3e4:	10001f1e 	bne	r2,zero,1001c464 <__lo0bits+0x90>
1001c3e8:	1880008c 	andi	r2,r3,2
1001c3ec:	10002126 	beq	r2,zero,1001c474 <__lo0bits+0xa0>
1001c3f0:	1806d07a 	srli	r3,r3,1
1001c3f4:	00800044 	movi	r2,1
1001c3f8:	20c00015 	stw	r3,0(r4)
1001c3fc:	f800283a 	ret
1001c400:	18bfffcc 	andi	r2,r3,65535
1001c404:	1000151e 	bne	r2,zero,1001c45c <__lo0bits+0x88>
1001c408:	1806d43a 	srli	r3,r3,16
1001c40c:	00800404 	movi	r2,16
1001c410:	19403fcc 	andi	r5,r3,255
1001c414:	2800021e 	bne	r5,zero,1001c420 <__lo0bits+0x4c>
1001c418:	1806d23a 	srli	r3,r3,8
1001c41c:	10800204 	addi	r2,r2,8
1001c420:	194003cc 	andi	r5,r3,15
1001c424:	2800021e 	bne	r5,zero,1001c430 <__lo0bits+0x5c>
1001c428:	1806d13a 	srli	r3,r3,4
1001c42c:	10800104 	addi	r2,r2,4
1001c430:	194000cc 	andi	r5,r3,3
1001c434:	2800021e 	bne	r5,zero,1001c440 <__lo0bits+0x6c>
1001c438:	1806d0ba 	srli	r3,r3,2
1001c43c:	10800084 	addi	r2,r2,2
1001c440:	1940004c 	andi	r5,r3,1
1001c444:	2800031e 	bne	r5,zero,1001c454 <__lo0bits+0x80>
1001c448:	1806d07a 	srli	r3,r3,1
1001c44c:	10800044 	addi	r2,r2,1
1001c450:	18000626 	beq	r3,zero,1001c46c <__lo0bits+0x98>
1001c454:	20c00015 	stw	r3,0(r4)
1001c458:	f800283a 	ret
1001c45c:	0005883a 	mov	r2,zero
1001c460:	003feb06 	br	1001c410 <__lo0bits+0x3c>
1001c464:	0005883a 	mov	r2,zero
1001c468:	f800283a 	ret
1001c46c:	00800804 	movi	r2,32
1001c470:	f800283a 	ret
1001c474:	1806d0ba 	srli	r3,r3,2
1001c478:	00800084 	movi	r2,2
1001c47c:	20c00015 	stw	r3,0(r4)
1001c480:	f800283a 	ret

1001c484 <__i2b>:
1001c484:	defffe04 	addi	sp,sp,-8
1001c488:	dc000015 	stw	r16,0(sp)
1001c48c:	2821883a 	mov	r16,r5
1001c490:	01400044 	movi	r5,1
1001c494:	dfc00115 	stw	ra,4(sp)
1001c498:	001c0840 	call	1001c084 <_Balloc>
1001c49c:	01000044 	movi	r4,1
1001c4a0:	14000515 	stw	r16,20(r2)
1001c4a4:	11000415 	stw	r4,16(r2)
1001c4a8:	dfc00117 	ldw	ra,4(sp)
1001c4ac:	dc000017 	ldw	r16,0(sp)
1001c4b0:	dec00204 	addi	sp,sp,8
1001c4b4:	f800283a 	ret

1001c4b8 <__multiply>:
1001c4b8:	defffa04 	addi	sp,sp,-24
1001c4bc:	dd000415 	stw	r20,16(sp)
1001c4c0:	dcc00315 	stw	r19,12(sp)
1001c4c4:	35000417 	ldw	r20,16(r6)
1001c4c8:	2cc00417 	ldw	r19,16(r5)
1001c4cc:	dc800215 	stw	r18,8(sp)
1001c4d0:	dc400115 	stw	r17,4(sp)
1001c4d4:	dfc00515 	stw	ra,20(sp)
1001c4d8:	dc000015 	stw	r16,0(sp)
1001c4dc:	2823883a 	mov	r17,r5
1001c4e0:	3025883a 	mov	r18,r6
1001c4e4:	9d000516 	blt	r19,r20,1001c4fc <__multiply+0x44>
1001c4e8:	a007883a 	mov	r3,r20
1001c4ec:	2825883a 	mov	r18,r5
1001c4f0:	9829883a 	mov	r20,r19
1001c4f4:	3023883a 	mov	r17,r6
1001c4f8:	1827883a 	mov	r19,r3
1001c4fc:	90800217 	ldw	r2,8(r18)
1001c500:	a4e1883a 	add	r16,r20,r19
1001c504:	91400117 	ldw	r5,4(r18)
1001c508:	1400010e 	bge	r2,r16,1001c510 <__multiply+0x58>
1001c50c:	29400044 	addi	r5,r5,1
1001c510:	001c0840 	call	1001c084 <_Balloc>
1001c514:	801290ba 	slli	r9,r16,2
1001c518:	12800504 	addi	r10,r2,20
1001c51c:	5007883a 	mov	r3,r10
1001c520:	5253883a 	add	r9,r10,r9
1001c524:	5240032e 	bgeu	r10,r9,1001c534 <__multiply+0x7c>
1001c528:	18000015 	stw	zero,0(r3)
1001c52c:	18c00104 	addi	r3,r3,4
1001c530:	1a7ffd36 	bltu	r3,r9,1001c528 <__multiply+0x70>
1001c534:	981690ba 	slli	r11,r19,2
1001c538:	a01090ba 	slli	r8,r20,2
1001c53c:	89400504 	addi	r5,r17,20
1001c540:	91800504 	addi	r6,r18,20
1001c544:	2ad7883a 	add	r11,r5,r11
1001c548:	3211883a 	add	r8,r6,r8
1001c54c:	2ac00636 	bltu	r5,r11,1001c568 <__multiply+0xb0>
1001c550:	00004106 	br	1001c658 <__multiply+0x1a0>
1001c554:	701cd43a 	srli	r14,r14,16
1001c558:	7000221e 	bne	r14,zero,1001c5e4 <__multiply+0x12c>
1001c55c:	29400104 	addi	r5,r5,4
1001c560:	52800104 	addi	r10,r10,4
1001c564:	2ac03c2e 	bgeu	r5,r11,1001c658 <__multiply+0x1a0>
1001c568:	2b800017 	ldw	r14,0(r5)
1001c56c:	73ffffcc 	andi	r15,r14,65535
1001c570:	783ff826 	beq	r15,zero,1001c554 <__multiply+0x9c>
1001c574:	501b883a 	mov	r13,r10
1001c578:	301d883a 	mov	r14,r6
1001c57c:	003f883a 	mov	ra,zero
1001c580:	71000017 	ldw	r4,0(r14)
1001c584:	6b000017 	ldw	r12,0(r13)
1001c588:	6b400104 	addi	r13,r13,4
1001c58c:	21ffffcc 	andi	r7,r4,65535
1001c590:	3bcf383a 	mul	r7,r7,r15
1001c594:	2006d43a 	srli	r3,r4,16
1001c598:	613fffcc 	andi	r4,r12,65535
1001c59c:	390f883a 	add	r7,r7,r4
1001c5a0:	3fcf883a 	add	r7,r7,ra
1001c5a4:	1bc7383a 	mul	r3,r3,r15
1001c5a8:	6018d43a 	srli	r12,r12,16
1001c5ac:	3808d43a 	srli	r4,r7,16
1001c5b0:	39ffffcc 	andi	r7,r7,65535
1001c5b4:	1b07883a 	add	r3,r3,r12
1001c5b8:	1907883a 	add	r3,r3,r4
1001c5bc:	1808943a 	slli	r4,r3,16
1001c5c0:	73800104 	addi	r14,r14,4
1001c5c4:	183ed43a 	srli	ra,r3,16
1001c5c8:	21ceb03a 	or	r7,r4,r7
1001c5cc:	69ffff15 	stw	r7,-4(r13)
1001c5d0:	723feb36 	bltu	r14,r8,1001c580 <__multiply+0xc8>
1001c5d4:	6fc00015 	stw	ra,0(r13)
1001c5d8:	2b800017 	ldw	r14,0(r5)
1001c5dc:	701cd43a 	srli	r14,r14,16
1001c5e0:	703fde26 	beq	r14,zero,1001c55c <__multiply+0xa4>
1001c5e4:	50c00017 	ldw	r3,0(r10)
1001c5e8:	501b883a 	mov	r13,r10
1001c5ec:	3019883a 	mov	r12,r6
1001c5f0:	180f883a 	mov	r7,r3
1001c5f4:	001f883a 	mov	r15,zero
1001c5f8:	6100000b 	ldhu	r4,0(r12)
1001c5fc:	380ed43a 	srli	r7,r7,16
1001c600:	18ffffcc 	andi	r3,r3,65535
1001c604:	2389383a 	mul	r4,r4,r14
1001c608:	6b400104 	addi	r13,r13,4
1001c60c:	63000104 	addi	r12,r12,4
1001c610:	21c9883a 	add	r4,r4,r7
1001c614:	23c9883a 	add	r4,r4,r15
1001c618:	201e943a 	slli	r15,r4,16
1001c61c:	69c00017 	ldw	r7,0(r13)
1001c620:	2008d43a 	srli	r4,r4,16
1001c624:	78c6b03a 	or	r3,r15,r3
1001c628:	68ffff15 	stw	r3,-4(r13)
1001c62c:	60ffff8b 	ldhu	r3,-2(r12)
1001c630:	3bffffcc 	andi	r15,r7,65535
1001c634:	1b87383a 	mul	r3,r3,r14
1001c638:	1bc7883a 	add	r3,r3,r15
1001c63c:	1907883a 	add	r3,r3,r4
1001c640:	181ed43a 	srli	r15,r3,16
1001c644:	623fec36 	bltu	r12,r8,1001c5f8 <__multiply+0x140>
1001c648:	68c00015 	stw	r3,0(r13)
1001c64c:	29400104 	addi	r5,r5,4
1001c650:	52800104 	addi	r10,r10,4
1001c654:	2affc436 	bltu	r5,r11,1001c568 <__multiply+0xb0>
1001c658:	0400090e 	bge	zero,r16,1001c680 <__multiply+0x1c8>
1001c65c:	48ffff17 	ldw	r3,-4(r9)
1001c660:	4a7fff04 	addi	r9,r9,-4
1001c664:	18000326 	beq	r3,zero,1001c674 <__multiply+0x1bc>
1001c668:	00000506 	br	1001c680 <__multiply+0x1c8>
1001c66c:	48c00017 	ldw	r3,0(r9)
1001c670:	1800031e 	bne	r3,zero,1001c680 <__multiply+0x1c8>
1001c674:	843fffc4 	addi	r16,r16,-1
1001c678:	4a7fff04 	addi	r9,r9,-4
1001c67c:	803ffb1e 	bne	r16,zero,1001c66c <__multiply+0x1b4>
1001c680:	14000415 	stw	r16,16(r2)
1001c684:	dfc00517 	ldw	ra,20(sp)
1001c688:	dd000417 	ldw	r20,16(sp)
1001c68c:	dcc00317 	ldw	r19,12(sp)
1001c690:	dc800217 	ldw	r18,8(sp)
1001c694:	dc400117 	ldw	r17,4(sp)
1001c698:	dc000017 	ldw	r16,0(sp)
1001c69c:	dec00604 	addi	sp,sp,24
1001c6a0:	f800283a 	ret

1001c6a4 <__pow5mult>:
1001c6a4:	defffb04 	addi	sp,sp,-20
1001c6a8:	dcc00315 	stw	r19,12(sp)
1001c6ac:	dc000015 	stw	r16,0(sp)
1001c6b0:	dfc00415 	stw	ra,16(sp)
1001c6b4:	dc800215 	stw	r18,8(sp)
1001c6b8:	dc400115 	stw	r17,4(sp)
1001c6bc:	308000cc 	andi	r2,r6,3
1001c6c0:	3021883a 	mov	r16,r6
1001c6c4:	2027883a 	mov	r19,r4
1001c6c8:	10002d1e 	bne	r2,zero,1001c780 <__pow5mult+0xdc>
1001c6cc:	2825883a 	mov	r18,r5
1001c6d0:	8021d0ba 	srai	r16,r16,2
1001c6d4:	80001926 	beq	r16,zero,1001c73c <__pow5mult+0x98>
1001c6d8:	9c401217 	ldw	r17,72(r19)
1001c6dc:	8800061e 	bne	r17,zero,1001c6f8 <__pow5mult+0x54>
1001c6e0:	00002f06 	br	1001c7a0 <__pow5mult+0xfc>
1001c6e4:	8021d07a 	srai	r16,r16,1
1001c6e8:	80001426 	beq	r16,zero,1001c73c <__pow5mult+0x98>
1001c6ec:	88800017 	ldw	r2,0(r17)
1001c6f0:	10001a26 	beq	r2,zero,1001c75c <__pow5mult+0xb8>
1001c6f4:	1023883a 	mov	r17,r2
1001c6f8:	8080004c 	andi	r2,r16,1
1001c6fc:	103ff926 	beq	r2,zero,1001c6e4 <__pow5mult+0x40>
1001c700:	880d883a 	mov	r6,r17
1001c704:	900b883a 	mov	r5,r18
1001c708:	9809883a 	mov	r4,r19
1001c70c:	001c4b80 	call	1001c4b8 <__multiply>
1001c710:	90001926 	beq	r18,zero,1001c778 <__pow5mult+0xd4>
1001c714:	91000117 	ldw	r4,4(r18)
1001c718:	98c01317 	ldw	r3,76(r19)
1001c71c:	8021d07a 	srai	r16,r16,1
1001c720:	200890ba 	slli	r4,r4,2
1001c724:	1907883a 	add	r3,r3,r4
1001c728:	19000017 	ldw	r4,0(r3)
1001c72c:	91000015 	stw	r4,0(r18)
1001c730:	1c800015 	stw	r18,0(r3)
1001c734:	1025883a 	mov	r18,r2
1001c738:	803fec1e 	bne	r16,zero,1001c6ec <__pow5mult+0x48>
1001c73c:	9005883a 	mov	r2,r18
1001c740:	dfc00417 	ldw	ra,16(sp)
1001c744:	dcc00317 	ldw	r19,12(sp)
1001c748:	dc800217 	ldw	r18,8(sp)
1001c74c:	dc400117 	ldw	r17,4(sp)
1001c750:	dc000017 	ldw	r16,0(sp)
1001c754:	dec00504 	addi	sp,sp,20
1001c758:	f800283a 	ret
1001c75c:	880d883a 	mov	r6,r17
1001c760:	880b883a 	mov	r5,r17
1001c764:	9809883a 	mov	r4,r19
1001c768:	001c4b80 	call	1001c4b8 <__multiply>
1001c76c:	88800015 	stw	r2,0(r17)
1001c770:	10000015 	stw	zero,0(r2)
1001c774:	003fdf06 	br	1001c6f4 <__pow5mult+0x50>
1001c778:	1025883a 	mov	r18,r2
1001c77c:	003fd906 	br	1001c6e4 <__pow5mult+0x40>
1001c780:	100490ba 	slli	r2,r2,2
1001c784:	00c400b4 	movhi	r3,4098
1001c788:	000f883a 	mov	r7,zero
1001c78c:	10c7883a 	add	r3,r2,r3
1001c790:	19995317 	ldw	r6,25932(r3)
1001c794:	001c14c0 	call	1001c14c <__multadd>
1001c798:	1025883a 	mov	r18,r2
1001c79c:	003fcc06 	br	1001c6d0 <__pow5mult+0x2c>
1001c7a0:	01400044 	movi	r5,1
1001c7a4:	9809883a 	mov	r4,r19
1001c7a8:	001c0840 	call	1001c084 <_Balloc>
1001c7ac:	1023883a 	mov	r17,r2
1001c7b0:	00809c44 	movi	r2,625
1001c7b4:	88800515 	stw	r2,20(r17)
1001c7b8:	00800044 	movi	r2,1
1001c7bc:	88800415 	stw	r2,16(r17)
1001c7c0:	9c401215 	stw	r17,72(r19)
1001c7c4:	88000015 	stw	zero,0(r17)
1001c7c8:	003fcb06 	br	1001c6f8 <__pow5mult+0x54>

1001c7cc <__lshift>:
1001c7cc:	defff904 	addi	sp,sp,-28
1001c7d0:	dcc00315 	stw	r19,12(sp)
1001c7d4:	dc400115 	stw	r17,4(sp)
1001c7d8:	2cc00417 	ldw	r19,16(r5)
1001c7dc:	3023d17a 	srai	r17,r6,5
1001c7e0:	28800217 	ldw	r2,8(r5)
1001c7e4:	dd400515 	stw	r21,20(sp)
1001c7e8:	8ce7883a 	add	r19,r17,r19
1001c7ec:	dd000415 	stw	r20,16(sp)
1001c7f0:	dc800215 	stw	r18,8(sp)
1001c7f4:	dc000015 	stw	r16,0(sp)
1001c7f8:	dfc00615 	stw	ra,24(sp)
1001c7fc:	9c000044 	addi	r16,r19,1
1001c800:	2825883a 	mov	r18,r5
1001c804:	302b883a 	mov	r21,r6
1001c808:	2029883a 	mov	r20,r4
1001c80c:	29400117 	ldw	r5,4(r5)
1001c810:	1400030e 	bge	r2,r16,1001c820 <__lshift+0x54>
1001c814:	1085883a 	add	r2,r2,r2
1001c818:	29400044 	addi	r5,r5,1
1001c81c:	143ffd16 	blt	r2,r16,1001c814 <__lshift+0x48>
1001c820:	a009883a 	mov	r4,r20
1001c824:	001c0840 	call	1001c084 <_Balloc>
1001c828:	11000504 	addi	r4,r2,20
1001c82c:	0440090e 	bge	zero,r17,1001c854 <__lshift+0x88>
1001c830:	8c400144 	addi	r17,r17,5
1001c834:	882290ba 	slli	r17,r17,2
1001c838:	2007883a 	mov	r3,r4
1001c83c:	144b883a 	add	r5,r2,r17
1001c840:	18c00104 	addi	r3,r3,4
1001c844:	183fff15 	stw	zero,-4(r3)
1001c848:	28fffd1e 	bne	r5,r3,1001c840 <__lshift+0x74>
1001c84c:	8c7ffb04 	addi	r17,r17,-20
1001c850:	2449883a 	add	r4,r4,r17
1001c854:	92000417 	ldw	r8,16(r18)
1001c858:	90c00504 	addi	r3,r18,20
1001c85c:	a98007cc 	andi	r6,r21,31
1001c860:	401090ba 	slli	r8,r8,2
1001c864:	1a11883a 	add	r8,r3,r8
1001c868:	30002126 	beq	r6,zero,1001c8f0 <__lshift+0x124>
1001c86c:	02400804 	movi	r9,32
1001c870:	4993c83a 	sub	r9,r9,r6
1001c874:	000f883a 	mov	r7,zero
1001c878:	19400017 	ldw	r5,0(r3)
1001c87c:	21000104 	addi	r4,r4,4
1001c880:	18c00104 	addi	r3,r3,4
1001c884:	298a983a 	sll	r5,r5,r6
1001c888:	29cab03a 	or	r5,r5,r7
1001c88c:	217fff15 	stw	r5,-4(r4)
1001c890:	197fff17 	ldw	r5,-4(r3)
1001c894:	2a4ed83a 	srl	r7,r5,r9
1001c898:	1a3ff736 	bltu	r3,r8,1001c878 <__lshift+0xac>
1001c89c:	21c00015 	stw	r7,0(r4)
1001c8a0:	38000126 	beq	r7,zero,1001c8a8 <__lshift+0xdc>
1001c8a4:	8027883a 	mov	r19,r16
1001c8a8:	14c00415 	stw	r19,16(r2)
1001c8ac:	90000726 	beq	r18,zero,1001c8cc <__lshift+0x100>
1001c8b0:	91000117 	ldw	r4,4(r18)
1001c8b4:	a0c01317 	ldw	r3,76(r20)
1001c8b8:	200890ba 	slli	r4,r4,2
1001c8bc:	1907883a 	add	r3,r3,r4
1001c8c0:	19000017 	ldw	r4,0(r3)
1001c8c4:	91000015 	stw	r4,0(r18)
1001c8c8:	1c800015 	stw	r18,0(r3)
1001c8cc:	dfc00617 	ldw	ra,24(sp)
1001c8d0:	dd400517 	ldw	r21,20(sp)
1001c8d4:	dd000417 	ldw	r20,16(sp)
1001c8d8:	dcc00317 	ldw	r19,12(sp)
1001c8dc:	dc800217 	ldw	r18,8(sp)
1001c8e0:	dc400117 	ldw	r17,4(sp)
1001c8e4:	dc000017 	ldw	r16,0(sp)
1001c8e8:	dec00704 	addi	sp,sp,28
1001c8ec:	f800283a 	ret
1001c8f0:	18c00104 	addi	r3,r3,4
1001c8f4:	197fff17 	ldw	r5,-4(r3)
1001c8f8:	21000104 	addi	r4,r4,4
1001c8fc:	217fff15 	stw	r5,-4(r4)
1001c900:	1a3ffb36 	bltu	r3,r8,1001c8f0 <__lshift+0x124>
1001c904:	003fe806 	br	1001c8a8 <__lshift+0xdc>

1001c908 <__mcmp>:
1001c908:	20800417 	ldw	r2,16(r4)
1001c90c:	28c00417 	ldw	r3,16(r5)
1001c910:	10c5c83a 	sub	r2,r2,r3
1001c914:	10000e1e 	bne	r2,zero,1001c950 <__mcmp+0x48>
1001c918:	180c90ba 	slli	r6,r3,2
1001c91c:	21000504 	addi	r4,r4,20
1001c920:	29400504 	addi	r5,r5,20
1001c924:	2187883a 	add	r3,r4,r6
1001c928:	298b883a 	add	r5,r5,r6
1001c92c:	00000106 	br	1001c934 <__mcmp+0x2c>
1001c930:	20c0082e 	bgeu	r4,r3,1001c954 <__mcmp+0x4c>
1001c934:	18ffff04 	addi	r3,r3,-4
1001c938:	297fff04 	addi	r5,r5,-4
1001c93c:	19c00017 	ldw	r7,0(r3)
1001c940:	29800017 	ldw	r6,0(r5)
1001c944:	39bffa26 	beq	r7,r6,1001c930 <__mcmp+0x28>
1001c948:	3980032e 	bgeu	r7,r6,1001c958 <__mcmp+0x50>
1001c94c:	00bfffc4 	movi	r2,-1
1001c950:	f800283a 	ret
1001c954:	f800283a 	ret
1001c958:	00800044 	movi	r2,1
1001c95c:	f800283a 	ret

1001c960 <__mdiff>:
1001c960:	defffa04 	addi	sp,sp,-24
1001c964:	dc800215 	stw	r18,8(sp)
1001c968:	30c00417 	ldw	r3,16(r6)
1001c96c:	2c800417 	ldw	r18,16(r5)
1001c970:	dd000415 	stw	r20,16(sp)
1001c974:	dcc00315 	stw	r19,12(sp)
1001c978:	dc400115 	stw	r17,4(sp)
1001c97c:	dc000015 	stw	r16,0(sp)
1001c980:	dfc00515 	stw	ra,20(sp)
1001c984:	90e5c83a 	sub	r18,r18,r3
1001c988:	2827883a 	mov	r19,r5
1001c98c:	3029883a 	mov	r20,r6
1001c990:	2c000504 	addi	r16,r5,20
1001c994:	34400504 	addi	r17,r6,20
1001c998:	9000131e 	bne	r18,zero,1001c9e8 <__mdiff+0x88>
1001c99c:	180690ba 	slli	r3,r3,2
1001c9a0:	80c5883a 	add	r2,r16,r3
1001c9a4:	88c7883a 	add	r3,r17,r3
1001c9a8:	00000106 	br	1001c9b0 <__mdiff+0x50>
1001c9ac:	8080552e 	bgeu	r16,r2,1001cb04 <__mdiff+0x1a4>
1001c9b0:	10bfff04 	addi	r2,r2,-4
1001c9b4:	18ffff04 	addi	r3,r3,-4
1001c9b8:	11c00017 	ldw	r7,0(r2)
1001c9bc:	19400017 	ldw	r5,0(r3)
1001c9c0:	397ffa26 	beq	r7,r5,1001c9ac <__mdiff+0x4c>
1001c9c4:	39400a2e 	bgeu	r7,r5,1001c9f0 <__mdiff+0x90>
1001c9c8:	8007883a 	mov	r3,r16
1001c9cc:	9805883a 	mov	r2,r19
1001c9d0:	8821883a 	mov	r16,r17
1001c9d4:	a027883a 	mov	r19,r20
1001c9d8:	1823883a 	mov	r17,r3
1001c9dc:	1029883a 	mov	r20,r2
1001c9e0:	04800044 	movi	r18,1
1001c9e4:	00000206 	br	1001c9f0 <__mdiff+0x90>
1001c9e8:	903ff716 	blt	r18,zero,1001c9c8 <__mdiff+0x68>
1001c9ec:	0025883a 	mov	r18,zero
1001c9f0:	99400117 	ldw	r5,4(r19)
1001c9f4:	001c0840 	call	1001c084 <_Balloc>
1001c9f8:	9a400417 	ldw	r9,16(r19)
1001c9fc:	a2c00417 	ldw	r11,16(r20)
1001ca00:	12800504 	addi	r10,r2,20
1001ca04:	481090ba 	slli	r8,r9,2
1001ca08:	581690ba 	slli	r11,r11,2
1001ca0c:	14800315 	stw	r18,12(r2)
1001ca10:	8211883a 	add	r8,r16,r8
1001ca14:	8ad7883a 	add	r11,r17,r11
1001ca18:	0007883a 	mov	r3,zero
1001ca1c:	00000106 	br	1001ca24 <__mdiff+0xc4>
1001ca20:	3815883a 	mov	r10,r7
1001ca24:	81000017 	ldw	r4,0(r16)
1001ca28:	89800017 	ldw	r6,0(r17)
1001ca2c:	51c00104 	addi	r7,r10,4
1001ca30:	217fffcc 	andi	r5,r4,65535
1001ca34:	28cb883a 	add	r5,r5,r3
1001ca38:	30ffffcc 	andi	r3,r6,65535
1001ca3c:	28cbc83a 	sub	r5,r5,r3
1001ca40:	300cd43a 	srli	r6,r6,16
1001ca44:	2006d43a 	srli	r3,r4,16
1001ca48:	2809d43a 	srai	r4,r5,16
1001ca4c:	297fffcc 	andi	r5,r5,65535
1001ca50:	1987c83a 	sub	r3,r3,r6
1001ca54:	1907883a 	add	r3,r3,r4
1001ca58:	1808943a 	slli	r4,r3,16
1001ca5c:	8c400104 	addi	r17,r17,4
1001ca60:	84000104 	addi	r16,r16,4
1001ca64:	214ab03a 	or	r5,r4,r5
1001ca68:	397fff15 	stw	r5,-4(r7)
1001ca6c:	1807d43a 	srai	r3,r3,16
1001ca70:	8affeb36 	bltu	r17,r11,1001ca20 <__mdiff+0xc0>
1001ca74:	8200152e 	bgeu	r16,r8,1001cacc <__mdiff+0x16c>
1001ca78:	3815883a 	mov	r10,r7
1001ca7c:	800d883a 	mov	r6,r16
1001ca80:	31000017 	ldw	r4,0(r6)
1001ca84:	52800104 	addi	r10,r10,4
1001ca88:	31800104 	addi	r6,r6,4
1001ca8c:	217fffcc 	andi	r5,r4,65535
1001ca90:	28cb883a 	add	r5,r5,r3
1001ca94:	2817d43a 	srai	r11,r5,16
1001ca98:	2006d43a 	srli	r3,r4,16
1001ca9c:	293fffcc 	andi	r4,r5,65535
1001caa0:	1ac7883a 	add	r3,r3,r11
1001caa4:	180a943a 	slli	r5,r3,16
1001caa8:	1807d43a 	srai	r3,r3,16
1001caac:	290ab03a 	or	r5,r5,r4
1001cab0:	517fff15 	stw	r5,-4(r10)
1001cab4:	323ff236 	bltu	r6,r8,1001ca80 <__mdiff+0x120>
1001cab8:	42bfffc4 	addi	r10,r8,-1
1001cabc:	5415c83a 	sub	r10,r10,r16
1001cac0:	5014d0ba 	srli	r10,r10,2
1001cac4:	501490ba 	slli	r10,r10,2
1001cac8:	3a95883a 	add	r10,r7,r10
1001cacc:	2800041e 	bne	r5,zero,1001cae0 <__mdiff+0x180>
1001cad0:	52bfff04 	addi	r10,r10,-4
1001cad4:	50c00017 	ldw	r3,0(r10)
1001cad8:	4a7fffc4 	addi	r9,r9,-1
1001cadc:	183ffc26 	beq	r3,zero,1001cad0 <__mdiff+0x170>
1001cae0:	12400415 	stw	r9,16(r2)
1001cae4:	dfc00517 	ldw	ra,20(sp)
1001cae8:	dd000417 	ldw	r20,16(sp)
1001caec:	dcc00317 	ldw	r19,12(sp)
1001caf0:	dc800217 	ldw	r18,8(sp)
1001caf4:	dc400117 	ldw	r17,4(sp)
1001caf8:	dc000017 	ldw	r16,0(sp)
1001cafc:	dec00604 	addi	sp,sp,24
1001cb00:	f800283a 	ret
1001cb04:	000b883a 	mov	r5,zero
1001cb08:	001c0840 	call	1001c084 <_Balloc>
1001cb0c:	00c00044 	movi	r3,1
1001cb10:	10c00415 	stw	r3,16(r2)
1001cb14:	10000515 	stw	zero,20(r2)
1001cb18:	003ff206 	br	1001cae4 <__mdiff+0x184>

1001cb1c <__ulp>:
1001cb1c:	295ffc2c 	andhi	r5,r5,32752
1001cb20:	00ff3034 	movhi	r3,64704
1001cb24:	28c7883a 	add	r3,r5,r3
1001cb28:	00c0020e 	bge	zero,r3,1001cb34 <__ulp+0x18>
1001cb2c:	0005883a 	mov	r2,zero
1001cb30:	f800283a 	ret
1001cb34:	00c7c83a 	sub	r3,zero,r3
1001cb38:	1807d53a 	srai	r3,r3,20
1001cb3c:	18800508 	cmpgei	r2,r3,20
1001cb40:	1000041e 	bne	r2,zero,1001cb54 <__ulp+0x38>
1001cb44:	01400234 	movhi	r5,8
1001cb48:	28c7d83a 	sra	r3,r5,r3
1001cb4c:	0005883a 	mov	r2,zero
1001cb50:	f800283a 	ret
1001cb54:	193ffb04 	addi	r4,r3,-20
1001cb58:	208007c8 	cmpgei	r2,r4,31
1001cb5c:	0007883a 	mov	r3,zero
1001cb60:	1000031e 	bne	r2,zero,1001cb70 <__ulp+0x54>
1001cb64:	00a00034 	movhi	r2,32768
1001cb68:	1104d83a 	srl	r2,r2,r4
1001cb6c:	f800283a 	ret
1001cb70:	00800044 	movi	r2,1
1001cb74:	f800283a 	ret

1001cb78 <__b2d>:
1001cb78:	defffa04 	addi	sp,sp,-24
1001cb7c:	dc000015 	stw	r16,0(sp)
1001cb80:	24000417 	ldw	r16,16(r4)
1001cb84:	dc800215 	stw	r18,8(sp)
1001cb88:	24800504 	addi	r18,r4,20
1001cb8c:	802090ba 	slli	r16,r16,2
1001cb90:	dc400115 	stw	r17,4(sp)
1001cb94:	dd000415 	stw	r20,16(sp)
1001cb98:	9421883a 	add	r16,r18,r16
1001cb9c:	847fff17 	ldw	r17,-4(r16)
1001cba0:	dcc00315 	stw	r19,12(sp)
1001cba4:	2829883a 	mov	r20,r5
1001cba8:	8809883a 	mov	r4,r17
1001cbac:	dfc00515 	stw	ra,20(sp)
1001cbb0:	001c3700 	call	1001c370 <__hi0bits>
1001cbb4:	01000804 	movi	r4,32
1001cbb8:	2087c83a 	sub	r3,r4,r2
1001cbbc:	a0c00015 	stw	r3,0(r20)
1001cbc0:	10c002c8 	cmpgei	r3,r2,11
1001cbc4:	84ffff04 	addi	r19,r16,-4
1001cbc8:	18001f26 	beq	r3,zero,1001cc48 <__b2d+0xd0>
1001cbcc:	10fffd44 	addi	r3,r2,-11
1001cbd0:	94c00e2e 	bgeu	r18,r19,1001cc0c <__b2d+0x94>
1001cbd4:	80bffe17 	ldw	r2,-8(r16)
1001cbd8:	18001226 	beq	r3,zero,1001cc24 <__b2d+0xac>
1001cbdc:	20c9c83a 	sub	r4,r4,r3
1001cbe0:	110cd83a 	srl	r6,r2,r4
1001cbe4:	88e2983a 	sll	r17,r17,r3
1001cbe8:	10c4983a 	sll	r2,r2,r3
1001cbec:	817ffe04 	addi	r5,r16,-8
1001cbf0:	8986b03a 	or	r3,r17,r6
1001cbf4:	18cffc34 	orhi	r3,r3,16368
1001cbf8:	91400b2e 	bgeu	r18,r5,1001cc28 <__b2d+0xb0>
1001cbfc:	817ffd17 	ldw	r5,-12(r16)
1001cc00:	2908d83a 	srl	r4,r5,r4
1001cc04:	1104b03a 	or	r2,r2,r4
1001cc08:	00000706 	br	1001cc28 <__b2d+0xb0>
1001cc0c:	18000426 	beq	r3,zero,1001cc20 <__b2d+0xa8>
1001cc10:	88c6983a 	sll	r3,r17,r3
1001cc14:	0005883a 	mov	r2,zero
1001cc18:	18cffc34 	orhi	r3,r3,16368
1001cc1c:	00000206 	br	1001cc28 <__b2d+0xb0>
1001cc20:	0005883a 	mov	r2,zero
1001cc24:	88cffc34 	orhi	r3,r17,16368
1001cc28:	dfc00517 	ldw	ra,20(sp)
1001cc2c:	dd000417 	ldw	r20,16(sp)
1001cc30:	dcc00317 	ldw	r19,12(sp)
1001cc34:	dc800217 	ldw	r18,8(sp)
1001cc38:	dc400117 	ldw	r17,4(sp)
1001cc3c:	dc000017 	ldw	r16,0(sp)
1001cc40:	dec00604 	addi	sp,sp,24
1001cc44:	f800283a 	ret
1001cc48:	014002c4 	movi	r5,11
1001cc4c:	2889c83a 	sub	r4,r5,r2
1001cc50:	8906d83a 	srl	r3,r17,r4
1001cc54:	18cffc34 	orhi	r3,r3,16368
1001cc58:	94c00536 	bltu	r18,r19,1001cc70 <__b2d+0xf8>
1001cc5c:	000b883a 	mov	r5,zero
1001cc60:	10800544 	addi	r2,r2,21
1001cc64:	8884983a 	sll	r2,r17,r2
1001cc68:	1144b03a 	or	r2,r2,r5
1001cc6c:	003fee06 	br	1001cc28 <__b2d+0xb0>
1001cc70:	817ffe17 	ldw	r5,-8(r16)
1001cc74:	290ad83a 	srl	r5,r5,r4
1001cc78:	003ff906 	br	1001cc60 <__b2d+0xe8>

1001cc7c <__d2b>:
1001cc7c:	defff804 	addi	sp,sp,-32
1001cc80:	dc400315 	stw	r17,12(sp)
1001cc84:	3023883a 	mov	r17,r6
1001cc88:	dd000615 	stw	r20,24(sp)
1001cc8c:	dc000215 	stw	r16,8(sp)
1001cc90:	2829883a 	mov	r20,r5
1001cc94:	8820d53a 	srli	r16,r17,20
1001cc98:	01400044 	movi	r5,1
1001cc9c:	dcc00515 	stw	r19,20(sp)
1001cca0:	dc800415 	stw	r18,16(sp)
1001cca4:	dfc00715 	stw	ra,28(sp)
1001cca8:	3825883a 	mov	r18,r7
1001ccac:	001c0840 	call	1001c084 <_Balloc>
1001ccb0:	01800434 	movhi	r6,16
1001ccb4:	31bfffc4 	addi	r6,r6,-1
1001ccb8:	8401ffcc 	andi	r16,r16,2047
1001ccbc:	1027883a 	mov	r19,r2
1001ccc0:	89a2703a 	and	r17,r17,r6
1001ccc4:	80000126 	beq	r16,zero,1001cccc <__d2b+0x50>
1001ccc8:	8c400434 	orhi	r17,r17,16
1001cccc:	dc400115 	stw	r17,4(sp)
1001ccd0:	a0002826 	beq	r20,zero,1001cd74 <__d2b+0xf8>
1001ccd4:	d809883a 	mov	r4,sp
1001ccd8:	dd000015 	stw	r20,0(sp)
1001ccdc:	001c3d40 	call	1001c3d4 <__lo0bits>
1001cce0:	d8c00117 	ldw	r3,4(sp)
1001cce4:	1000171e 	bne	r2,zero,1001cd44 <__d2b+0xc8>
1001cce8:	d9000017 	ldw	r4,0(sp)
1001ccec:	98c00615 	stw	r3,24(r19)
1001ccf0:	99000515 	stw	r4,20(r19)
1001ccf4:	18001d1e 	bne	r3,zero,1001cd6c <__d2b+0xf0>
1001ccf8:	04400044 	movi	r17,1
1001ccfc:	9c400415 	stw	r17,16(r19)
1001cd00:	80002526 	beq	r16,zero,1001cd98 <__d2b+0x11c>
1001cd04:	00c00d44 	movi	r3,53
1001cd08:	843ef344 	addi	r16,r16,-1075
1001cd0c:	80a1883a 	add	r16,r16,r2
1001cd10:	1885c83a 	sub	r2,r3,r2
1001cd14:	d8c00817 	ldw	r3,32(sp)
1001cd18:	94000015 	stw	r16,0(r18)
1001cd1c:	18800015 	stw	r2,0(r3)
1001cd20:	9805883a 	mov	r2,r19
1001cd24:	dfc00717 	ldw	ra,28(sp)
1001cd28:	dd000617 	ldw	r20,24(sp)
1001cd2c:	dcc00517 	ldw	r19,20(sp)
1001cd30:	dc800417 	ldw	r18,16(sp)
1001cd34:	dc400317 	ldw	r17,12(sp)
1001cd38:	dc000217 	ldw	r16,8(sp)
1001cd3c:	dec00804 	addi	sp,sp,32
1001cd40:	f800283a 	ret
1001cd44:	01000804 	movi	r4,32
1001cd48:	2089c83a 	sub	r4,r4,r2
1001cd4c:	1908983a 	sll	r4,r3,r4
1001cd50:	d9400017 	ldw	r5,0(sp)
1001cd54:	1886d83a 	srl	r3,r3,r2
1001cd58:	2148b03a 	or	r4,r4,r5
1001cd5c:	99000515 	stw	r4,20(r19)
1001cd60:	d8c00115 	stw	r3,4(sp)
1001cd64:	98c00615 	stw	r3,24(r19)
1001cd68:	183fe326 	beq	r3,zero,1001ccf8 <__d2b+0x7c>
1001cd6c:	04400084 	movi	r17,2
1001cd70:	003fe206 	br	1001ccfc <__d2b+0x80>
1001cd74:	d9000104 	addi	r4,sp,4
1001cd78:	001c3d40 	call	1001c3d4 <__lo0bits>
1001cd7c:	00c00044 	movi	r3,1
1001cd80:	98c00415 	stw	r3,16(r19)
1001cd84:	d8c00117 	ldw	r3,4(sp)
1001cd88:	10800804 	addi	r2,r2,32
1001cd8c:	04400044 	movi	r17,1
1001cd90:	98c00515 	stw	r3,20(r19)
1001cd94:	803fdb1e 	bne	r16,zero,1001cd04 <__d2b+0x88>
1001cd98:	880690ba 	slli	r3,r17,2
1001cd9c:	10bef384 	addi	r2,r2,-1074
1001cda0:	8822917a 	slli	r17,r17,5
1001cda4:	98c7883a 	add	r3,r19,r3
1001cda8:	19000417 	ldw	r4,16(r3)
1001cdac:	90800015 	stw	r2,0(r18)
1001cdb0:	001c3700 	call	1001c370 <__hi0bits>
1001cdb4:	88a3c83a 	sub	r17,r17,r2
1001cdb8:	d8800817 	ldw	r2,32(sp)
1001cdbc:	14400015 	stw	r17,0(r2)
1001cdc0:	003fd706 	br	1001cd20 <__d2b+0xa4>

1001cdc4 <__ratio>:
1001cdc4:	defff904 	addi	sp,sp,-28
1001cdc8:	dc400315 	stw	r17,12(sp)
1001cdcc:	2823883a 	mov	r17,r5
1001cdd0:	d80b883a 	mov	r5,sp
1001cdd4:	dfc00615 	stw	ra,24(sp)
1001cdd8:	dcc00515 	stw	r19,20(sp)
1001cddc:	dc800415 	stw	r18,16(sp)
1001cde0:	2027883a 	mov	r19,r4
1001cde4:	dc000215 	stw	r16,8(sp)
1001cde8:	001cb780 	call	1001cb78 <__b2d>
1001cdec:	d9400104 	addi	r5,sp,4
1001cdf0:	8809883a 	mov	r4,r17
1001cdf4:	1025883a 	mov	r18,r2
1001cdf8:	1821883a 	mov	r16,r3
1001cdfc:	001cb780 	call	1001cb78 <__b2d>
1001ce00:	89400417 	ldw	r5,16(r17)
1001ce04:	99000417 	ldw	r4,16(r19)
1001ce08:	d9800117 	ldw	r6,4(sp)
1001ce0c:	2149c83a 	sub	r4,r4,r5
1001ce10:	d9400017 	ldw	r5,0(sp)
1001ce14:	2008917a 	slli	r4,r4,5
1001ce18:	298bc83a 	sub	r5,r5,r6
1001ce1c:	2149883a 	add	r4,r4,r5
1001ce20:	01000e0e 	bge	zero,r4,1001ce5c <__ratio+0x98>
1001ce24:	2008953a 	slli	r4,r4,20
1001ce28:	2421883a 	add	r16,r4,r16
1001ce2c:	100d883a 	mov	r6,r2
1001ce30:	180f883a 	mov	r7,r3
1001ce34:	9009883a 	mov	r4,r18
1001ce38:	800b883a 	mov	r5,r16
1001ce3c:	00207f40 	call	100207f4 <__divdf3>
1001ce40:	dfc00617 	ldw	ra,24(sp)
1001ce44:	dcc00517 	ldw	r19,20(sp)
1001ce48:	dc800417 	ldw	r18,16(sp)
1001ce4c:	dc400317 	ldw	r17,12(sp)
1001ce50:	dc000217 	ldw	r16,8(sp)
1001ce54:	dec00704 	addi	sp,sp,28
1001ce58:	f800283a 	ret
1001ce5c:	017ffc34 	movhi	r5,65520
1001ce60:	2149383a 	mul	r4,r4,r5
1001ce64:	20c7883a 	add	r3,r4,r3
1001ce68:	003ff006 	br	1001ce2c <__ratio+0x68>

1001ce6c <_mprec_log10>:
1001ce6c:	defffe04 	addi	sp,sp,-8
1001ce70:	dc000015 	stw	r16,0(sp)
1001ce74:	dfc00115 	stw	ra,4(sp)
1001ce78:	20800608 	cmpgei	r2,r4,24
1001ce7c:	2021883a 	mov	r16,r4
1001ce80:	10000d26 	beq	r2,zero,1001ceb8 <_mprec_log10+0x4c>
1001ce84:	0005883a 	mov	r2,zero
1001ce88:	00cffc34 	movhi	r3,16368
1001ce8c:	843fffc4 	addi	r16,r16,-1
1001ce90:	000d883a 	mov	r6,zero
1001ce94:	01d00934 	movhi	r7,16420
1001ce98:	1009883a 	mov	r4,r2
1001ce9c:	180b883a 	mov	r5,r3
1001cea0:	00212fc0 	call	100212fc <__muldf3>
1001cea4:	803ff91e 	bne	r16,zero,1001ce8c <_mprec_log10+0x20>
1001cea8:	dfc00117 	ldw	ra,4(sp)
1001ceac:	dc000017 	ldw	r16,0(sp)
1001ceb0:	dec00204 	addi	sp,sp,8
1001ceb4:	f800283a 	ret
1001ceb8:	202090fa 	slli	r16,r4,3
1001cebc:	008400b4 	movhi	r2,4098
1001cec0:	10996b04 	addi	r2,r2,26028
1001cec4:	1421883a 	add	r16,r2,r16
1001cec8:	80800017 	ldw	r2,0(r16)
1001cecc:	80c00117 	ldw	r3,4(r16)
1001ced0:	dfc00117 	ldw	ra,4(sp)
1001ced4:	dc000017 	ldw	r16,0(sp)
1001ced8:	dec00204 	addi	sp,sp,8
1001cedc:	f800283a 	ret

1001cee0 <__copybits>:
1001cee0:	29ffffc4 	addi	r7,r5,-1
1001cee4:	380fd17a 	srai	r7,r7,5
1001cee8:	31400417 	ldw	r5,16(r6)
1001ceec:	30800504 	addi	r2,r6,20
1001cef0:	39c00044 	addi	r7,r7,1
1001cef4:	280a90ba 	slli	r5,r5,2
1001cef8:	380e90ba 	slli	r7,r7,2
1001cefc:	114b883a 	add	r5,r2,r5
1001cf00:	21cf883a 	add	r7,r4,r7
1001cf04:	11400c2e 	bgeu	r2,r5,1001cf38 <__copybits+0x58>
1001cf08:	2007883a 	mov	r3,r4
1001cf0c:	10800104 	addi	r2,r2,4
1001cf10:	123fff17 	ldw	r8,-4(r2)
1001cf14:	18c00104 	addi	r3,r3,4
1001cf18:	1a3fff15 	stw	r8,-4(r3)
1001cf1c:	117ffb36 	bltu	r2,r5,1001cf0c <__copybits+0x2c>
1001cf20:	2985c83a 	sub	r2,r5,r6
1001cf24:	10bffac4 	addi	r2,r2,-21
1001cf28:	1004d0ba 	srli	r2,r2,2
1001cf2c:	10800044 	addi	r2,r2,1
1001cf30:	100490ba 	slli	r2,r2,2
1001cf34:	2089883a 	add	r4,r4,r2
1001cf38:	21c0032e 	bgeu	r4,r7,1001cf48 <__copybits+0x68>
1001cf3c:	21000104 	addi	r4,r4,4
1001cf40:	203fff15 	stw	zero,-4(r4)
1001cf44:	21fffd36 	bltu	r4,r7,1001cf3c <__copybits+0x5c>
1001cf48:	f800283a 	ret

1001cf4c <__any_on>:
1001cf4c:	20800417 	ldw	r2,16(r4)
1001cf50:	280dd17a 	srai	r6,r5,5
1001cf54:	21000504 	addi	r4,r4,20
1001cf58:	11800c0e 	bge	r2,r6,1001cf8c <__any_on+0x40>
1001cf5c:	100690ba 	slli	r3,r2,2
1001cf60:	20c7883a 	add	r3,r4,r3
1001cf64:	20c0142e 	bgeu	r4,r3,1001cfb8 <__any_on+0x6c>
1001cf68:	18bfff17 	ldw	r2,-4(r3)
1001cf6c:	18ffff04 	addi	r3,r3,-4
1001cf70:	1000041e 	bne	r2,zero,1001cf84 <__any_on+0x38>
1001cf74:	20c00f2e 	bgeu	r4,r3,1001cfb4 <__any_on+0x68>
1001cf78:	18ffff04 	addi	r3,r3,-4
1001cf7c:	19400017 	ldw	r5,0(r3)
1001cf80:	283ffc26 	beq	r5,zero,1001cf74 <__any_on+0x28>
1001cf84:	00800044 	movi	r2,1
1001cf88:	f800283a 	ret
1001cf8c:	300690ba 	slli	r3,r6,2
1001cf90:	20c7883a 	add	r3,r4,r3
1001cf94:	30bff30e 	bge	r6,r2,1001cf64 <__any_on+0x18>
1001cf98:	294007cc 	andi	r5,r5,31
1001cf9c:	283ff126 	beq	r5,zero,1001cf64 <__any_on+0x18>
1001cfa0:	19800017 	ldw	r6,0(r3)
1001cfa4:	3144d83a 	srl	r2,r6,r5
1001cfa8:	114a983a 	sll	r5,r2,r5
1001cfac:	317ff51e 	bne	r6,r5,1001cf84 <__any_on+0x38>
1001cfb0:	003fec06 	br	1001cf64 <__any_on+0x18>
1001cfb4:	f800283a 	ret
1001cfb8:	0005883a 	mov	r2,zero
1001cfbc:	f800283a 	ret

1001cfc0 <_putc_r>:
1001cfc0:	defffc04 	addi	sp,sp,-16
1001cfc4:	dc000215 	stw	r16,8(sp)
1001cfc8:	dfc00315 	stw	ra,12(sp)
1001cfcc:	2021883a 	mov	r16,r4
1001cfd0:	20000226 	beq	r4,zero,1001cfdc <_putc_r+0x1c>
1001cfd4:	20800e17 	ldw	r2,56(r4)
1001cfd8:	10000e26 	beq	r2,zero,1001d014 <_putc_r+0x54>
1001cfdc:	30800217 	ldw	r2,8(r6)
1001cfe0:	10bfffc4 	addi	r2,r2,-1
1001cfe4:	30800215 	stw	r2,8(r6)
1001cfe8:	10001316 	blt	r2,zero,1001d038 <_putc_r+0x78>
1001cfec:	30800017 	ldw	r2,0(r6)
1001cff0:	11400005 	stb	r5,0(r2)
1001cff4:	30800017 	ldw	r2,0(r6)
1001cff8:	10c00044 	addi	r3,r2,1
1001cffc:	30c00015 	stw	r3,0(r6)
1001d000:	10800003 	ldbu	r2,0(r2)
1001d004:	dfc00317 	ldw	ra,12(sp)
1001d008:	dc000217 	ldw	r16,8(sp)
1001d00c:	dec00404 	addi	sp,sp,16
1001d010:	f800283a 	ret
1001d014:	d9800115 	stw	r6,4(sp)
1001d018:	d9400015 	stw	r5,0(sp)
1001d01c:	00155300 	call	10015530 <__sinit>
1001d020:	d9800117 	ldw	r6,4(sp)
1001d024:	d9400017 	ldw	r5,0(sp)
1001d028:	30800217 	ldw	r2,8(r6)
1001d02c:	10bfffc4 	addi	r2,r2,-1
1001d030:	30800215 	stw	r2,8(r6)
1001d034:	103fed0e 	bge	r2,zero,1001cfec <_putc_r+0x2c>
1001d038:	30c00617 	ldw	r3,24(r6)
1001d03c:	10c00e16 	blt	r2,r3,1001d078 <_putc_r+0xb8>
1001d040:	30800017 	ldw	r2,0(r6)
1001d044:	11400005 	stb	r5,0(r2)
1001d048:	30c00017 	ldw	r3,0(r6)
1001d04c:	18800003 	ldbu	r2,0(r3)
1001d050:	108002a0 	cmpeqi	r2,r2,10
1001d054:	1000071e 	bne	r2,zero,1001d074 <_putc_r+0xb4>
1001d058:	18800044 	addi	r2,r3,1
1001d05c:	30800015 	stw	r2,0(r6)
1001d060:	18800003 	ldbu	r2,0(r3)
1001d064:	dfc00317 	ldw	ra,12(sp)
1001d068:	dc000217 	ldw	r16,8(sp)
1001d06c:	dec00404 	addi	sp,sp,16
1001d070:	f800283a 	ret
1001d074:	01400284 	movi	r5,10
1001d078:	8009883a 	mov	r4,r16
1001d07c:	dfc00317 	ldw	ra,12(sp)
1001d080:	dc000217 	ldw	r16,8(sp)
1001d084:	dec00404 	addi	sp,sp,16
1001d088:	001ed0c1 	jmpi	1001ed0c <__swbuf_r>

1001d08c <putc>:
1001d08c:	defffc04 	addi	sp,sp,-16
1001d090:	008400f4 	movhi	r2,4099
1001d094:	dc000115 	stw	r16,4(sp)
1001d098:	14219817 	ldw	r16,-31136(r2)
1001d09c:	dc400215 	stw	r17,8(sp)
1001d0a0:	dfc00315 	stw	ra,12(sp)
1001d0a4:	2023883a 	mov	r17,r4
1001d0a8:	80000226 	beq	r16,zero,1001d0b4 <putc+0x28>
1001d0ac:	80800e17 	ldw	r2,56(r16)
1001d0b0:	10000f26 	beq	r2,zero,1001d0f0 <putc+0x64>
1001d0b4:	28800217 	ldw	r2,8(r5)
1001d0b8:	10bfffc4 	addi	r2,r2,-1
1001d0bc:	28800215 	stw	r2,8(r5)
1001d0c0:	10001316 	blt	r2,zero,1001d110 <putc+0x84>
1001d0c4:	28800017 	ldw	r2,0(r5)
1001d0c8:	14400005 	stb	r17,0(r2)
1001d0cc:	28800017 	ldw	r2,0(r5)
1001d0d0:	10c00044 	addi	r3,r2,1
1001d0d4:	28c00015 	stw	r3,0(r5)
1001d0d8:	10800003 	ldbu	r2,0(r2)
1001d0dc:	dfc00317 	ldw	ra,12(sp)
1001d0e0:	dc400217 	ldw	r17,8(sp)
1001d0e4:	dc000117 	ldw	r16,4(sp)
1001d0e8:	dec00404 	addi	sp,sp,16
1001d0ec:	f800283a 	ret
1001d0f0:	8009883a 	mov	r4,r16
1001d0f4:	d9400015 	stw	r5,0(sp)
1001d0f8:	00155300 	call	10015530 <__sinit>
1001d0fc:	d9400017 	ldw	r5,0(sp)
1001d100:	28800217 	ldw	r2,8(r5)
1001d104:	10bfffc4 	addi	r2,r2,-1
1001d108:	28800215 	stw	r2,8(r5)
1001d10c:	103fed0e 	bge	r2,zero,1001d0c4 <putc+0x38>
1001d110:	28c00617 	ldw	r3,24(r5)
1001d114:	10c00a16 	blt	r2,r3,1001d140 <putc+0xb4>
1001d118:	28800017 	ldw	r2,0(r5)
1001d11c:	14400005 	stb	r17,0(r2)
1001d120:	28c00017 	ldw	r3,0(r5)
1001d124:	18800003 	ldbu	r2,0(r3)
1001d128:	108002a0 	cmpeqi	r2,r2,10
1001d12c:	10000c1e 	bne	r2,zero,1001d160 <putc+0xd4>
1001d130:	18800044 	addi	r2,r3,1
1001d134:	28800015 	stw	r2,0(r5)
1001d138:	18800003 	ldbu	r2,0(r3)
1001d13c:	003fe706 	br	1001d0dc <putc+0x50>
1001d140:	280d883a 	mov	r6,r5
1001d144:	880b883a 	mov	r5,r17
1001d148:	8009883a 	mov	r4,r16
1001d14c:	dfc00317 	ldw	ra,12(sp)
1001d150:	dc400217 	ldw	r17,8(sp)
1001d154:	dc000117 	ldw	r16,4(sp)
1001d158:	dec00404 	addi	sp,sp,16
1001d15c:	001ed0c1 	jmpi	1001ed0c <__swbuf_r>
1001d160:	280d883a 	mov	r6,r5
1001d164:	01400284 	movi	r5,10
1001d168:	003ff706 	br	1001d148 <putc+0xbc>

1001d16c <_read_r>:
1001d16c:	defffe04 	addi	sp,sp,-8
1001d170:	2805883a 	mov	r2,r5
1001d174:	dc000015 	stw	r16,0(sp)
1001d178:	300b883a 	mov	r5,r6
1001d17c:	2021883a 	mov	r16,r4
1001d180:	380d883a 	mov	r6,r7
1001d184:	1009883a 	mov	r4,r2
1001d188:	008400f4 	movhi	r2,4099
1001d18c:	dfc00115 	stw	ra,4(sp)
1001d190:	10295b15 	stw	zero,-23188(r2)
1001d194:	0022f840 	call	10022f84 <read>
1001d198:	10ffffd8 	cmpnei	r3,r2,-1
1001d19c:	18000426 	beq	r3,zero,1001d1b0 <_read_r+0x44>
1001d1a0:	dfc00117 	ldw	ra,4(sp)
1001d1a4:	dc000017 	ldw	r16,0(sp)
1001d1a8:	dec00204 	addi	sp,sp,8
1001d1ac:	f800283a 	ret
1001d1b0:	00c400f4 	movhi	r3,4099
1001d1b4:	18e95b17 	ldw	r3,-23188(r3)
1001d1b8:	183ff926 	beq	r3,zero,1001d1a0 <_read_r+0x34>
1001d1bc:	80c00015 	stw	r3,0(r16)
1001d1c0:	dfc00117 	ldw	ra,4(sp)
1001d1c4:	dc000017 	ldw	r16,0(sp)
1001d1c8:	dec00204 	addi	sp,sp,8
1001d1cc:	f800283a 	ret

1001d1d0 <_realloc_r>:
1001d1d0:	defff504 	addi	sp,sp,-44
1001d1d4:	dcc00415 	stw	r19,16(sp)
1001d1d8:	dfc00a15 	stw	ra,40(sp)
1001d1dc:	df000915 	stw	fp,36(sp)
1001d1e0:	ddc00815 	stw	r23,32(sp)
1001d1e4:	dd800715 	stw	r22,28(sp)
1001d1e8:	dd400615 	stw	r21,24(sp)
1001d1ec:	dd000515 	stw	r20,20(sp)
1001d1f0:	dc800315 	stw	r18,12(sp)
1001d1f4:	dc400215 	stw	r17,8(sp)
1001d1f8:	dc000115 	stw	r16,4(sp)
1001d1fc:	3027883a 	mov	r19,r6
1001d200:	28008b26 	beq	r5,zero,1001d430 <_realloc_r+0x260>
1001d204:	282d883a 	mov	r22,r5
1001d208:	202b883a 	mov	r21,r4
1001d20c:	9c0002c4 	addi	r16,r19,11
1001d210:	0022cb80 	call	10022cb8 <__malloc_lock>
1001d214:	808005f0 	cmpltui	r2,r16,23
1001d218:	1000521e 	bne	r2,zero,1001d364 <_realloc_r+0x194>
1001d21c:	017ffe04 	movi	r5,-8
1001d220:	8160703a 	and	r16,r16,r5
1001d224:	8007883a 	mov	r3,r16
1001d228:	80005116 	blt	r16,zero,1001d370 <_realloc_r+0x1a0>
1001d22c:	84c05036 	bltu	r16,r19,1001d370 <_realloc_r+0x1a0>
1001d230:	b0bfff17 	ldw	r2,-4(r22)
1001d234:	017fff04 	movi	r5,-4
1001d238:	b4bffe04 	addi	r18,r22,-8
1001d23c:	1162703a 	and	r17,r2,r5
1001d240:	9469883a 	add	r20,r18,r17
1001d244:	88c0390e 	bge	r17,r3,1001d32c <_realloc_r+0x15c>
1001d248:	070400b4 	movhi	fp,4098
1001d24c:	e71ba804 	addi	fp,fp,28320
1001d250:	e2000217 	ldw	r8,8(fp)
1001d254:	a1000117 	ldw	r4,4(r20)
1001d258:	45008e26 	beq	r8,r20,1001d494 <_realloc_r+0x2c4>
1001d25c:	01bfff84 	movi	r6,-2
1001d260:	218c703a 	and	r6,r4,r6
1001d264:	a18d883a 	add	r6,r20,r6
1001d268:	31800117 	ldw	r6,4(r6)
1001d26c:	3180004c 	andi	r6,r6,1
1001d270:	30004f1e 	bne	r6,zero,1001d3b0 <_realloc_r+0x1e0>
1001d274:	2148703a 	and	r4,r4,r5
1001d278:	890b883a 	add	r5,r17,r4
1001d27c:	28c0cb0e 	bge	r5,r3,1001d5ac <_realloc_r+0x3dc>
1001d280:	1080004c 	andi	r2,r2,1
1001d284:	10004c1e 	bne	r2,zero,1001d3b8 <_realloc_r+0x1e8>
1001d288:	b1fffe17 	ldw	r7,-8(r22)
1001d28c:	00bfff04 	movi	r2,-4
1001d290:	91cfc83a 	sub	r7,r18,r7
1001d294:	39400117 	ldw	r5,4(r7)
1001d298:	288a703a 	and	r5,r5,r2
1001d29c:	a0000426 	beq	r20,zero,1001d2b0 <_realloc_r+0xe0>
1001d2a0:	896f883a 	add	r23,r17,r5
1001d2a4:	b92f883a 	add	r23,r23,r4
1001d2a8:	4500cb26 	beq	r8,r20,1001d5d8 <_realloc_r+0x408>
1001d2ac:	b8c0930e 	bge	r23,r3,1001d4fc <_realloc_r+0x32c>
1001d2b0:	38004126 	beq	r7,zero,1001d3b8 <_realloc_r+0x1e8>
1001d2b4:	896f883a 	add	r23,r17,r5
1001d2b8:	b8c03f16 	blt	r23,r3,1001d3b8 <_realloc_r+0x1e8>
1001d2bc:	38c00217 	ldw	r3,8(r7)
1001d2c0:	38800317 	ldw	r2,12(r7)
1001d2c4:	89bfff04 	addi	r6,r17,-4
1001d2c8:	31000968 	cmpgeui	r4,r6,37
1001d2cc:	18800315 	stw	r2,12(r3)
1001d2d0:	10c00215 	stw	r3,8(r2)
1001d2d4:	3de9883a 	add	r20,r7,r23
1001d2d8:	38c00204 	addi	r3,r7,8
1001d2dc:	2000f81e 	bne	r4,zero,1001d6c0 <_realloc_r+0x4f0>
1001d2e0:	30800530 	cmpltui	r2,r6,20
1001d2e4:	b1000017 	ldw	r4,0(r22)
1001d2e8:	1000eb1e 	bne	r2,zero,1001d698 <_realloc_r+0x4c8>
1001d2ec:	39000215 	stw	r4,8(r7)
1001d2f0:	b1000117 	ldw	r4,4(r22)
1001d2f4:	30800728 	cmpgeui	r2,r6,28
1001d2f8:	39000315 	stw	r4,12(r7)
1001d2fc:	1001041e 	bne	r2,zero,1001d710 <_realloc_r+0x540>
1001d300:	b1000217 	ldw	r4,8(r22)
1001d304:	38800404 	addi	r2,r7,16
1001d308:	b5800204 	addi	r22,r22,8
1001d30c:	11000015 	stw	r4,0(r2)
1001d310:	b1000117 	ldw	r4,4(r22)
1001d314:	b823883a 	mov	r17,r23
1001d318:	3825883a 	mov	r18,r7
1001d31c:	11000115 	stw	r4,4(r2)
1001d320:	b1000217 	ldw	r4,8(r22)
1001d324:	182d883a 	mov	r22,r3
1001d328:	11000215 	stw	r4,8(r2)
1001d32c:	91800117 	ldw	r6,4(r18)
1001d330:	8c05c83a 	sub	r2,r17,r16
1001d334:	10c00430 	cmpltui	r3,r2,16
1001d338:	3180004c 	andi	r6,r6,1
1001d33c:	18004926 	beq	r3,zero,1001d464 <_realloc_r+0x294>
1001d340:	898cb03a 	or	r6,r17,r6
1001d344:	91800115 	stw	r6,4(r18)
1001d348:	a0800117 	ldw	r2,4(r20)
1001d34c:	10800054 	ori	r2,r2,1
1001d350:	a0800115 	stw	r2,4(r20)
1001d354:	a809883a 	mov	r4,r21
1001d358:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001d35c:	b027883a 	mov	r19,r22
1001d360:	00000606 	br	1001d37c <_realloc_r+0x1ac>
1001d364:	04000404 	movi	r16,16
1001d368:	00c00404 	movi	r3,16
1001d36c:	84ffb02e 	bgeu	r16,r19,1001d230 <_realloc_r+0x60>
1001d370:	00800304 	movi	r2,12
1001d374:	a8800015 	stw	r2,0(r21)
1001d378:	0027883a 	mov	r19,zero
1001d37c:	9805883a 	mov	r2,r19
1001d380:	dfc00a17 	ldw	ra,40(sp)
1001d384:	df000917 	ldw	fp,36(sp)
1001d388:	ddc00817 	ldw	r23,32(sp)
1001d38c:	dd800717 	ldw	r22,28(sp)
1001d390:	dd400617 	ldw	r21,24(sp)
1001d394:	dd000517 	ldw	r20,20(sp)
1001d398:	dcc00417 	ldw	r19,16(sp)
1001d39c:	dc800317 	ldw	r18,12(sp)
1001d3a0:	dc400217 	ldw	r17,8(sp)
1001d3a4:	dc000117 	ldw	r16,4(sp)
1001d3a8:	dec00b04 	addi	sp,sp,44
1001d3ac:	f800283a 	ret
1001d3b0:	1080004c 	andi	r2,r2,1
1001d3b4:	10007826 	beq	r2,zero,1001d598 <_realloc_r+0x3c8>
1001d3b8:	980b883a 	mov	r5,r19
1001d3bc:	a809883a 	mov	r4,r21
1001d3c0:	00162cc0 	call	100162cc <_malloc_r>
1001d3c4:	1027883a 	mov	r19,r2
1001d3c8:	10001626 	beq	r2,zero,1001d424 <_realloc_r+0x254>
1001d3cc:	b0bfff17 	ldw	r2,-4(r22)
1001d3d0:	013fff84 	movi	r4,-2
1001d3d4:	98fffe04 	addi	r3,r19,-8
1001d3d8:	1104703a 	and	r2,r2,r4
1001d3dc:	9085883a 	add	r2,r18,r2
1001d3e0:	10c06726 	beq	r2,r3,1001d580 <_realloc_r+0x3b0>
1001d3e4:	89bfff04 	addi	r6,r17,-4
1001d3e8:	30800968 	cmpgeui	r2,r6,37
1001d3ec:	1000761e 	bne	r2,zero,1001d5c8 <_realloc_r+0x3f8>
1001d3f0:	30800530 	cmpltui	r2,r6,20
1001d3f4:	b1000017 	ldw	r4,0(r22)
1001d3f8:	10003726 	beq	r2,zero,1001d4d8 <_realloc_r+0x308>
1001d3fc:	9805883a 	mov	r2,r19
1001d400:	b007883a 	mov	r3,r22
1001d404:	11000015 	stw	r4,0(r2)
1001d408:	19000117 	ldw	r4,4(r3)
1001d40c:	11000115 	stw	r4,4(r2)
1001d410:	18c00217 	ldw	r3,8(r3)
1001d414:	10c00215 	stw	r3,8(r2)
1001d418:	b00b883a 	mov	r5,r22
1001d41c:	a809883a 	mov	r4,r21
1001d420:	00157980 	call	10015798 <_free_r>
1001d424:	a809883a 	mov	r4,r21
1001d428:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001d42c:	003fd306 	br	1001d37c <_realloc_r+0x1ac>
1001d430:	300b883a 	mov	r5,r6
1001d434:	dfc00a17 	ldw	ra,40(sp)
1001d438:	df000917 	ldw	fp,36(sp)
1001d43c:	ddc00817 	ldw	r23,32(sp)
1001d440:	dd800717 	ldw	r22,28(sp)
1001d444:	dd400617 	ldw	r21,24(sp)
1001d448:	dd000517 	ldw	r20,20(sp)
1001d44c:	dcc00417 	ldw	r19,16(sp)
1001d450:	dc800317 	ldw	r18,12(sp)
1001d454:	dc400217 	ldw	r17,8(sp)
1001d458:	dc000117 	ldw	r16,4(sp)
1001d45c:	dec00b04 	addi	sp,sp,44
1001d460:	00162cc1 	jmpi	100162cc <_malloc_r>
1001d464:	340cb03a 	or	r6,r6,r16
1001d468:	91800115 	stw	r6,4(r18)
1001d46c:	940b883a 	add	r5,r18,r16
1001d470:	10800054 	ori	r2,r2,1
1001d474:	28800115 	stw	r2,4(r5)
1001d478:	a0800117 	ldw	r2,4(r20)
1001d47c:	29400204 	addi	r5,r5,8
1001d480:	a809883a 	mov	r4,r21
1001d484:	10800054 	ori	r2,r2,1
1001d488:	a0800115 	stw	r2,4(r20)
1001d48c:	00157980 	call	10015798 <_free_r>
1001d490:	003fb006 	br	1001d354 <_realloc_r+0x184>
1001d494:	2148703a 	and	r4,r4,r5
1001d498:	890b883a 	add	r5,r17,r4
1001d49c:	81800404 	addi	r6,r16,16
1001d4a0:	29bf7716 	blt	r5,r6,1001d280 <_realloc_r+0xb0>
1001d4a4:	9425883a 	add	r18,r18,r16
1001d4a8:	2c05c83a 	sub	r2,r5,r16
1001d4ac:	e4800215 	stw	r18,8(fp)
1001d4b0:	10800054 	ori	r2,r2,1
1001d4b4:	90800115 	stw	r2,4(r18)
1001d4b8:	b0bfff17 	ldw	r2,-4(r22)
1001d4bc:	a809883a 	mov	r4,r21
1001d4c0:	b027883a 	mov	r19,r22
1001d4c4:	1080004c 	andi	r2,r2,1
1001d4c8:	1420b03a 	or	r16,r2,r16
1001d4cc:	b43fff15 	stw	r16,-4(r22)
1001d4d0:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001d4d4:	003fa906 	br	1001d37c <_realloc_r+0x1ac>
1001d4d8:	99000015 	stw	r4,0(r19)
1001d4dc:	b0c00117 	ldw	r3,4(r22)
1001d4e0:	30800728 	cmpgeui	r2,r6,28
1001d4e4:	98c00115 	stw	r3,4(r19)
1001d4e8:	1000611e 	bne	r2,zero,1001d670 <_realloc_r+0x4a0>
1001d4ec:	b0c00204 	addi	r3,r22,8
1001d4f0:	98800204 	addi	r2,r19,8
1001d4f4:	b1000217 	ldw	r4,8(r22)
1001d4f8:	003fc206 	br	1001d404 <_realloc_r+0x234>
1001d4fc:	a0800317 	ldw	r2,12(r20)
1001d500:	a0c00217 	ldw	r3,8(r20)
1001d504:	89bfff04 	addi	r6,r17,-4
1001d508:	31000968 	cmpgeui	r4,r6,37
1001d50c:	18800315 	stw	r2,12(r3)
1001d510:	10c00215 	stw	r3,8(r2)
1001d514:	38c00217 	ldw	r3,8(r7)
1001d518:	38800317 	ldw	r2,12(r7)
1001d51c:	3a000204 	addi	r8,r7,8
1001d520:	3de9883a 	add	r20,r7,r23
1001d524:	18800315 	stw	r2,12(r3)
1001d528:	10c00215 	stw	r3,8(r2)
1001d52c:	20006f1e 	bne	r4,zero,1001d6ec <_realloc_r+0x51c>
1001d530:	30800530 	cmpltui	r2,r6,20
1001d534:	b0c00017 	ldw	r3,0(r22)
1001d538:	10006a1e 	bne	r2,zero,1001d6e4 <_realloc_r+0x514>
1001d53c:	38c00215 	stw	r3,8(r7)
1001d540:	b0c00117 	ldw	r3,4(r22)
1001d544:	30800728 	cmpgeui	r2,r6,28
1001d548:	38c00315 	stw	r3,12(r7)
1001d54c:	10007a1e 	bne	r2,zero,1001d738 <_realloc_r+0x568>
1001d550:	b0c00217 	ldw	r3,8(r22)
1001d554:	38800404 	addi	r2,r7,16
1001d558:	b5800204 	addi	r22,r22,8
1001d55c:	10c00015 	stw	r3,0(r2)
1001d560:	b0c00117 	ldw	r3,4(r22)
1001d564:	b823883a 	mov	r17,r23
1001d568:	3825883a 	mov	r18,r7
1001d56c:	10c00115 	stw	r3,4(r2)
1001d570:	b0c00217 	ldw	r3,8(r22)
1001d574:	402d883a 	mov	r22,r8
1001d578:	10c00215 	stw	r3,8(r2)
1001d57c:	003f6b06 	br	1001d32c <_realloc_r+0x15c>
1001d580:	98bfff17 	ldw	r2,-4(r19)
1001d584:	00ffff04 	movi	r3,-4
1001d588:	10c4703a 	and	r2,r2,r3
1001d58c:	88a3883a 	add	r17,r17,r2
1001d590:	9469883a 	add	r20,r18,r17
1001d594:	003f6506 	br	1001d32c <_realloc_r+0x15c>
1001d598:	b1fffe17 	ldw	r7,-8(r22)
1001d59c:	91cfc83a 	sub	r7,r18,r7
1001d5a0:	39000117 	ldw	r4,4(r7)
1001d5a4:	214a703a 	and	r5,r4,r5
1001d5a8:	003f4106 	br	1001d2b0 <_realloc_r+0xe0>
1001d5ac:	a0800317 	ldw	r2,12(r20)
1001d5b0:	a0c00217 	ldw	r3,8(r20)
1001d5b4:	2823883a 	mov	r17,r5
1001d5b8:	9169883a 	add	r20,r18,r5
1001d5bc:	18800315 	stw	r2,12(r3)
1001d5c0:	10c00215 	stw	r3,8(r2)
1001d5c4:	003f5906 	br	1001d32c <_realloc_r+0x15c>
1001d5c8:	b00b883a 	mov	r5,r22
1001d5cc:	9809883a 	mov	r4,r19
1001d5d0:	0016d340 	call	10016d34 <memmove>
1001d5d4:	003f9006 	br	1001d418 <_realloc_r+0x248>
1001d5d8:	80800404 	addi	r2,r16,16
1001d5dc:	b8bf3416 	blt	r23,r2,1001d2b0 <_realloc_r+0xe0>
1001d5e0:	38800317 	ldw	r2,12(r7)
1001d5e4:	38c00217 	ldw	r3,8(r7)
1001d5e8:	89bfff04 	addi	r6,r17,-4
1001d5ec:	31000968 	cmpgeui	r4,r6,37
1001d5f0:	18800315 	stw	r2,12(r3)
1001d5f4:	10c00215 	stw	r3,8(r2)
1001d5f8:	3cc00204 	addi	r19,r7,8
1001d5fc:	20005a1e 	bne	r4,zero,1001d768 <_realloc_r+0x598>
1001d600:	30800530 	cmpltui	r2,r6,20
1001d604:	b0c00017 	ldw	r3,0(r22)
1001d608:	1000551e 	bne	r2,zero,1001d760 <_realloc_r+0x590>
1001d60c:	38c00215 	stw	r3,8(r7)
1001d610:	b0c00117 	ldw	r3,4(r22)
1001d614:	30800728 	cmpgeui	r2,r6,28
1001d618:	38c00315 	stw	r3,12(r7)
1001d61c:	1000661e 	bne	r2,zero,1001d7b8 <_realloc_r+0x5e8>
1001d620:	b0c00217 	ldw	r3,8(r22)
1001d624:	38800404 	addi	r2,r7,16
1001d628:	b5800204 	addi	r22,r22,8
1001d62c:	10c00015 	stw	r3,0(r2)
1001d630:	b0c00117 	ldw	r3,4(r22)
1001d634:	10c00115 	stw	r3,4(r2)
1001d638:	b0c00217 	ldw	r3,8(r22)
1001d63c:	10c00215 	stw	r3,8(r2)
1001d640:	3c07883a 	add	r3,r7,r16
1001d644:	bc05c83a 	sub	r2,r23,r16
1001d648:	e0c00215 	stw	r3,8(fp)
1001d64c:	10800054 	ori	r2,r2,1
1001d650:	18800115 	stw	r2,4(r3)
1001d654:	38800117 	ldw	r2,4(r7)
1001d658:	a809883a 	mov	r4,r21
1001d65c:	1080004c 	andi	r2,r2,1
1001d660:	1420b03a 	or	r16,r2,r16
1001d664:	3c000115 	stw	r16,4(r7)
1001d668:	0022cdc0 	call	10022cdc <__malloc_unlock>
1001d66c:	003f4306 	br	1001d37c <_realloc_r+0x1ac>
1001d670:	b0800217 	ldw	r2,8(r22)
1001d674:	31800920 	cmpeqi	r6,r6,36
1001d678:	98800215 	stw	r2,8(r19)
1001d67c:	b0800317 	ldw	r2,12(r22)
1001d680:	98800315 	stw	r2,12(r19)
1001d684:	3000061e 	bne	r6,zero,1001d6a0 <_realloc_r+0x4d0>
1001d688:	b0c00404 	addi	r3,r22,16
1001d68c:	98800404 	addi	r2,r19,16
1001d690:	b1000417 	ldw	r4,16(r22)
1001d694:	003f5b06 	br	1001d404 <_realloc_r+0x234>
1001d698:	1805883a 	mov	r2,r3
1001d69c:	003f1b06 	br	1001d30c <_realloc_r+0x13c>
1001d6a0:	b1000417 	ldw	r4,16(r22)
1001d6a4:	b0c00604 	addi	r3,r22,24
1001d6a8:	98800604 	addi	r2,r19,24
1001d6ac:	99000415 	stw	r4,16(r19)
1001d6b0:	b1000517 	ldw	r4,20(r22)
1001d6b4:	99000515 	stw	r4,20(r19)
1001d6b8:	b1000617 	ldw	r4,24(r22)
1001d6bc:	003f5106 	br	1001d404 <_realloc_r+0x234>
1001d6c0:	b00b883a 	mov	r5,r22
1001d6c4:	1809883a 	mov	r4,r3
1001d6c8:	d9c00015 	stw	r7,0(sp)
1001d6cc:	0016d340 	call	10016d34 <memmove>
1001d6d0:	d9c00017 	ldw	r7,0(sp)
1001d6d4:	102d883a 	mov	r22,r2
1001d6d8:	b823883a 	mov	r17,r23
1001d6dc:	3825883a 	mov	r18,r7
1001d6e0:	003f1206 	br	1001d32c <_realloc_r+0x15c>
1001d6e4:	4005883a 	mov	r2,r8
1001d6e8:	003f9c06 	br	1001d55c <_realloc_r+0x38c>
1001d6ec:	b00b883a 	mov	r5,r22
1001d6f0:	4009883a 	mov	r4,r8
1001d6f4:	d9c00015 	stw	r7,0(sp)
1001d6f8:	0016d340 	call	10016d34 <memmove>
1001d6fc:	d9c00017 	ldw	r7,0(sp)
1001d700:	102d883a 	mov	r22,r2
1001d704:	b823883a 	mov	r17,r23
1001d708:	3825883a 	mov	r18,r7
1001d70c:	003f0706 	br	1001d32c <_realloc_r+0x15c>
1001d710:	b0800217 	ldw	r2,8(r22)
1001d714:	31800920 	cmpeqi	r6,r6,36
1001d718:	38800415 	stw	r2,16(r7)
1001d71c:	b0800317 	ldw	r2,12(r22)
1001d720:	38800515 	stw	r2,20(r7)
1001d724:	b1000417 	ldw	r4,16(r22)
1001d728:	3000151e 	bne	r6,zero,1001d780 <_realloc_r+0x5b0>
1001d72c:	38800604 	addi	r2,r7,24
1001d730:	b5800404 	addi	r22,r22,16
1001d734:	003ef506 	br	1001d30c <_realloc_r+0x13c>
1001d738:	b0800217 	ldw	r2,8(r22)
1001d73c:	31800920 	cmpeqi	r6,r6,36
1001d740:	38800415 	stw	r2,16(r7)
1001d744:	b0800317 	ldw	r2,12(r22)
1001d748:	38800515 	stw	r2,20(r7)
1001d74c:	b0c00417 	ldw	r3,16(r22)
1001d750:	3000121e 	bne	r6,zero,1001d79c <_realloc_r+0x5cc>
1001d754:	38800604 	addi	r2,r7,24
1001d758:	b5800404 	addi	r22,r22,16
1001d75c:	003f7f06 	br	1001d55c <_realloc_r+0x38c>
1001d760:	9805883a 	mov	r2,r19
1001d764:	003fb106 	br	1001d62c <_realloc_r+0x45c>
1001d768:	b00b883a 	mov	r5,r22
1001d76c:	9809883a 	mov	r4,r19
1001d770:	d9c00015 	stw	r7,0(sp)
1001d774:	0016d340 	call	10016d34 <memmove>
1001d778:	d9c00017 	ldw	r7,0(sp)
1001d77c:	003fb006 	br	1001d640 <_realloc_r+0x470>
1001d780:	b5800604 	addi	r22,r22,24
1001d784:	39000615 	stw	r4,24(r7)
1001d788:	b13fff17 	ldw	r4,-4(r22)
1001d78c:	38800804 	addi	r2,r7,32
1001d790:	39000715 	stw	r4,28(r7)
1001d794:	b1000017 	ldw	r4,0(r22)
1001d798:	003edc06 	br	1001d30c <_realloc_r+0x13c>
1001d79c:	b5800604 	addi	r22,r22,24
1001d7a0:	38c00615 	stw	r3,24(r7)
1001d7a4:	b0ffff17 	ldw	r3,-4(r22)
1001d7a8:	38800804 	addi	r2,r7,32
1001d7ac:	38c00715 	stw	r3,28(r7)
1001d7b0:	b0c00017 	ldw	r3,0(r22)
1001d7b4:	003f6906 	br	1001d55c <_realloc_r+0x38c>
1001d7b8:	b0800217 	ldw	r2,8(r22)
1001d7bc:	31800920 	cmpeqi	r6,r6,36
1001d7c0:	38800415 	stw	r2,16(r7)
1001d7c4:	b0800317 	ldw	r2,12(r22)
1001d7c8:	38800515 	stw	r2,20(r7)
1001d7cc:	b0c00417 	ldw	r3,16(r22)
1001d7d0:	3000031e 	bne	r6,zero,1001d7e0 <_realloc_r+0x610>
1001d7d4:	38800604 	addi	r2,r7,24
1001d7d8:	b5800404 	addi	r22,r22,16
1001d7dc:	003f9306 	br	1001d62c <_realloc_r+0x45c>
1001d7e0:	b5800604 	addi	r22,r22,24
1001d7e4:	38c00615 	stw	r3,24(r7)
1001d7e8:	b0ffff17 	ldw	r3,-4(r22)
1001d7ec:	38800804 	addi	r2,r7,32
1001d7f0:	38c00715 	stw	r3,28(r7)
1001d7f4:	b0c00017 	ldw	r3,0(r22)
1001d7f8:	003f8c06 	br	1001d62c <_realloc_r+0x45c>

1001d7fc <__sprint_r.part.0>:
1001d7fc:	28801917 	ldw	r2,100(r5)
1001d800:	defff604 	addi	sp,sp,-40
1001d804:	dd000415 	stw	r20,16(sp)
1001d808:	dfc00915 	stw	ra,36(sp)
1001d80c:	df000815 	stw	fp,32(sp)
1001d810:	ddc00715 	stw	r23,28(sp)
1001d814:	dd800615 	stw	r22,24(sp)
1001d818:	dd400515 	stw	r21,20(sp)
1001d81c:	dcc00315 	stw	r19,12(sp)
1001d820:	dc800215 	stw	r18,8(sp)
1001d824:	dc400115 	stw	r17,4(sp)
1001d828:	dc000015 	stw	r16,0(sp)
1001d82c:	1088000c 	andi	r2,r2,8192
1001d830:	3029883a 	mov	r20,r6
1001d834:	10002c26 	beq	r2,zero,1001d8e8 <__sprint_r.part.0+0xec>
1001d838:	30800217 	ldw	r2,8(r6)
1001d83c:	2823883a 	mov	r17,r5
1001d840:	2027883a 	mov	r19,r4
1001d844:	35400017 	ldw	r21,0(r6)
1001d848:	05ffff04 	movi	r23,-4
1001d84c:	10002426 	beq	r2,zero,1001d8e0 <__sprint_r.part.0+0xe4>
1001d850:	ad800117 	ldw	r22,4(r21)
1001d854:	ac000017 	ldw	r16,0(r21)
1001d858:	b024d0ba 	srli	r18,r22,2
1001d85c:	90001b26 	beq	r18,zero,1001d8cc <__sprint_r.part.0+0xd0>
1001d860:	0039883a 	mov	fp,zero
1001d864:	00000206 	br	1001d870 <__sprint_r.part.0+0x74>
1001d868:	84000104 	addi	r16,r16,4
1001d86c:	97001626 	beq	r18,fp,1001d8c8 <__sprint_r.part.0+0xcc>
1001d870:	81400017 	ldw	r5,0(r16)
1001d874:	880d883a 	mov	r6,r17
1001d878:	9809883a 	mov	r4,r19
1001d87c:	001f0700 	call	1001f070 <_fputwc_r>
1001d880:	10bfffe0 	cmpeqi	r2,r2,-1
1001d884:	e7000044 	addi	fp,fp,1
1001d888:	103ff726 	beq	r2,zero,1001d868 <__sprint_r.part.0+0x6c>
1001d88c:	00bfffc4 	movi	r2,-1
1001d890:	a0000215 	stw	zero,8(r20)
1001d894:	a0000115 	stw	zero,4(r20)
1001d898:	dfc00917 	ldw	ra,36(sp)
1001d89c:	df000817 	ldw	fp,32(sp)
1001d8a0:	ddc00717 	ldw	r23,28(sp)
1001d8a4:	dd800617 	ldw	r22,24(sp)
1001d8a8:	dd400517 	ldw	r21,20(sp)
1001d8ac:	dd000417 	ldw	r20,16(sp)
1001d8b0:	dcc00317 	ldw	r19,12(sp)
1001d8b4:	dc800217 	ldw	r18,8(sp)
1001d8b8:	dc400117 	ldw	r17,4(sp)
1001d8bc:	dc000017 	ldw	r16,0(sp)
1001d8c0:	dec00a04 	addi	sp,sp,40
1001d8c4:	f800283a 	ret
1001d8c8:	a0800217 	ldw	r2,8(r20)
1001d8cc:	b5ec703a 	and	r22,r22,r23
1001d8d0:	1585c83a 	sub	r2,r2,r22
1001d8d4:	a0800215 	stw	r2,8(r20)
1001d8d8:	ad400204 	addi	r21,r21,8
1001d8dc:	103fdc1e 	bne	r2,zero,1001d850 <__sprint_r.part.0+0x54>
1001d8e0:	0005883a 	mov	r2,zero
1001d8e4:	003fea06 	br	1001d890 <__sprint_r.part.0+0x94>
1001d8e8:	001bae40 	call	1001bae4 <__sfvwrite_r>
1001d8ec:	003fe806 	br	1001d890 <__sprint_r.part.0+0x94>

1001d8f0 <__sprint_r>:
1001d8f0:	30c00217 	ldw	r3,8(r6)
1001d8f4:	18000126 	beq	r3,zero,1001d8fc <__sprint_r+0xc>
1001d8f8:	001d7fc1 	jmpi	1001d7fc <__sprint_r.part.0>
1001d8fc:	30000115 	stw	zero,4(r6)
1001d900:	0005883a 	mov	r2,zero
1001d904:	f800283a 	ret

1001d908 <___vfiprintf_internal_r>:
1001d908:	deffd004 	addi	sp,sp,-192
1001d90c:	df002e15 	stw	fp,184(sp)
1001d910:	dcc02915 	stw	r19,164(sp)
1001d914:	dc802815 	stw	r18,160(sp)
1001d918:	dfc02f15 	stw	ra,188(sp)
1001d91c:	ddc02d15 	stw	r23,180(sp)
1001d920:	dd802c15 	stw	r22,176(sp)
1001d924:	dd402b15 	stw	r21,172(sp)
1001d928:	dd002a15 	stw	r20,168(sp)
1001d92c:	dc402715 	stw	r17,156(sp)
1001d930:	dc002615 	stw	r16,152(sp)
1001d934:	d9c00315 	stw	r7,12(sp)
1001d938:	2027883a 	mov	r19,r4
1001d93c:	2825883a 	mov	r18,r5
1001d940:	3039883a 	mov	fp,r6
1001d944:	20000226 	beq	r4,zero,1001d950 <___vfiprintf_internal_r+0x48>
1001d948:	20800e17 	ldw	r2,56(r4)
1001d94c:	1002b626 	beq	r2,zero,1001e428 <___vfiprintf_internal_r+0xb20>
1001d950:	9080030b 	ldhu	r2,12(r18)
1001d954:	10c8000c 	andi	r3,r2,8192
1001d958:	1800061e 	bne	r3,zero,1001d974 <___vfiprintf_internal_r+0x6c>
1001d95c:	90c01917 	ldw	r3,100(r18)
1001d960:	0137ffc4 	movi	r4,-8193
1001d964:	10880014 	ori	r2,r2,8192
1001d968:	1906703a 	and	r3,r3,r4
1001d96c:	9080030d 	sth	r2,12(r18)
1001d970:	90c01915 	stw	r3,100(r18)
1001d974:	10c0020c 	andi	r3,r2,8
1001d978:	18009426 	beq	r3,zero,1001dbcc <___vfiprintf_internal_r+0x2c4>
1001d97c:	90c00417 	ldw	r3,16(r18)
1001d980:	18009226 	beq	r3,zero,1001dbcc <___vfiprintf_internal_r+0x2c4>
1001d984:	1080068c 	andi	r2,r2,26
1001d988:	10800298 	cmpnei	r2,r2,10
1001d98c:	10009726 	beq	r2,zero,1001dbec <___vfiprintf_internal_r+0x2e4>
1001d990:	dc401604 	addi	r17,sp,88
1001d994:	dc400915 	stw	r17,36(sp)
1001d998:	d8000b15 	stw	zero,44(sp)
1001d99c:	d8000a15 	stw	zero,40(sp)
1001d9a0:	8811883a 	mov	r8,r17
1001d9a4:	d8000415 	stw	zero,16(sp)
1001d9a8:	d8000015 	stw	zero,0(sp)
1001d9ac:	e0800007 	ldb	r2,0(fp)
1001d9b0:	1000a226 	beq	r2,zero,1001dc3c <___vfiprintf_internal_r+0x334>
1001d9b4:	10800960 	cmpeqi	r2,r2,37
1001d9b8:	1003e71e 	bne	r2,zero,1001e958 <___vfiprintf_internal_r+0x1050>
1001d9bc:	e021883a 	mov	r16,fp
1001d9c0:	00000206 	br	1001d9cc <___vfiprintf_internal_r+0xc4>
1001d9c4:	18009226 	beq	r3,zero,1001dc10 <___vfiprintf_internal_r+0x308>
1001d9c8:	a021883a 	mov	r16,r20
1001d9cc:	80800047 	ldb	r2,1(r16)
1001d9d0:	85000044 	addi	r20,r16,1
1001d9d4:	10c00958 	cmpnei	r3,r2,37
1001d9d8:	103ffa1e 	bne	r2,zero,1001d9c4 <___vfiprintf_internal_r+0xbc>
1001d9dc:	a72bc83a 	sub	r21,r20,fp
1001d9e0:	a8009626 	beq	r21,zero,1001dc3c <___vfiprintf_internal_r+0x334>
1001d9e4:	d8c00b17 	ldw	r3,44(sp)
1001d9e8:	d8800a17 	ldw	r2,40(sp)
1001d9ec:	47000015 	stw	fp,0(r8)
1001d9f0:	a8c7883a 	add	r3,r21,r3
1001d9f4:	10800044 	addi	r2,r2,1
1001d9f8:	d8800a15 	stw	r2,40(sp)
1001d9fc:	45400115 	stw	r21,4(r8)
1001da00:	d8c00b15 	stw	r3,44(sp)
1001da04:	10800208 	cmpgei	r2,r2,8
1001da08:	1000841e 	bne	r2,zero,1001dc1c <___vfiprintf_internal_r+0x314>
1001da0c:	42000204 	addi	r8,r8,8
1001da10:	d8c00017 	ldw	r3,0(sp)
1001da14:	80800047 	ldb	r2,1(r16)
1001da18:	1d47883a 	add	r3,r3,r21
1001da1c:	d8c00015 	stw	r3,0(sp)
1001da20:	10008626 	beq	r2,zero,1001dc3c <___vfiprintf_internal_r+0x334>
1001da24:	a0800047 	ldb	r2,1(r20)
1001da28:	a7000044 	addi	fp,r20,1
1001da2c:	d8000845 	stb	zero,33(sp)
1001da30:	000b883a 	mov	r5,zero
1001da34:	000d883a 	mov	r6,zero
1001da38:	027fffc4 	movi	r9,-1
1001da3c:	0021883a 	mov	r16,zero
1001da40:	0019883a 	mov	r12,zero
1001da44:	e7000044 	addi	fp,fp,1
1001da48:	10fff804 	addi	r3,r2,-32
1001da4c:	19001668 	cmpgeui	r4,r3,89
1001da50:	20009c1e 	bne	r4,zero,1001dcc4 <___vfiprintf_internal_r+0x3bc>
1001da54:	180690ba 	slli	r3,r3,2
1001da58:	010400b4 	movhi	r4,4098
1001da5c:	1909883a 	add	r4,r3,r4
1001da60:	20f69a17 	ldw	r3,-9624(r4)
1001da64:	1800683a 	jmp	r3
1001da68:	1001dd94 	ori	zero,r2,1910
1001da6c:	1001dcc4 	addi	zero,r2,1907
1001da70:	1001dcc4 	addi	zero,r2,1907
1001da74:	1001dd88 	cmpgei	zero,r2,1910
1001da78:	1001dcc4 	addi	zero,r2,1907
1001da7c:	1001dcc4 	addi	zero,r2,1907
1001da80:	1001dcc4 	addi	zero,r2,1907
1001da84:	1001dcc4 	addi	zero,r2,1907
1001da88:	1001dcc4 	addi	zero,r2,1907
1001da8c:	1001dcc4 	addi	zero,r2,1907
1001da90:	1001dd60 	cmpeqi	zero,r2,1909
1001da94:	1001dd50 	cmplti	zero,r2,1909
1001da98:	1001dcc4 	addi	zero,r2,1907
1001da9c:	1001dd38 	rdprs	zero,r2,1908
1001daa0:	1001dcf4 	orhi	zero,r2,1907
1001daa4:	1001dcc4 	addi	zero,r2,1907
1001daa8:	1001dce8 	cmpgeui	zero,r2,1907
1001daac:	1001dc94 	ori	zero,r2,1906
1001dab0:	1001dc94 	ori	zero,r2,1906
1001dab4:	1001dc94 	ori	zero,r2,1906
1001dab8:	1001dc94 	ori	zero,r2,1906
1001dabc:	1001dc94 	ori	zero,r2,1906
1001dac0:	1001dc94 	ori	zero,r2,1906
1001dac4:	1001dc94 	ori	zero,r2,1906
1001dac8:	1001dc94 	ori	zero,r2,1906
1001dacc:	1001dc94 	ori	zero,r2,1906
1001dad0:	1001dcc4 	addi	zero,r2,1907
1001dad4:	1001dcc4 	addi	zero,r2,1907
1001dad8:	1001dcc4 	addi	zero,r2,1907
1001dadc:	1001dcc4 	addi	zero,r2,1907
1001dae0:	1001dcc4 	addi	zero,r2,1907
1001dae4:	1001dcc4 	addi	zero,r2,1907
1001dae8:	1001dcc4 	addi	zero,r2,1907
1001daec:	1001dcc4 	addi	zero,r2,1907
1001daf0:	1001dcc4 	addi	zero,r2,1907
1001daf4:	1001dcc4 	addi	zero,r2,1907
1001daf8:	1001e350 	cmplti	zero,r2,1933
1001dafc:	1001dcc4 	addi	zero,r2,1907
1001db00:	1001dcc4 	addi	zero,r2,1907
1001db04:	1001dcc4 	addi	zero,r2,1907
1001db08:	1001dcc4 	addi	zero,r2,1907
1001db0c:	1001dcc4 	addi	zero,r2,1907
1001db10:	1001dcc4 	addi	zero,r2,1907
1001db14:	1001dcc4 	addi	zero,r2,1907
1001db18:	1001dcc4 	addi	zero,r2,1907
1001db1c:	1001dcc4 	addi	zero,r2,1907
1001db20:	1001dcc4 	addi	zero,r2,1907
1001db24:	1001e2e8 	cmpgeui	zero,r2,1931
1001db28:	1001dcc4 	addi	zero,r2,1907
1001db2c:	1001dcc4 	addi	zero,r2,1907
1001db30:	1001dcc4 	addi	zero,r2,1907
1001db34:	1001dcc4 	addi	zero,r2,1907
1001db38:	1001dcc4 	addi	zero,r2,1907
1001db3c:	1001e31c 	xori	zero,r2,1932
1001db40:	1001dcc4 	addi	zero,r2,1907
1001db44:	1001dcc4 	addi	zero,r2,1907
1001db48:	1001deec 	andhi	zero,r2,1915
1001db4c:	1001dcc4 	addi	zero,r2,1907
1001db50:	1001dcc4 	addi	zero,r2,1907
1001db54:	1001dcc4 	addi	zero,r2,1907
1001db58:	1001dcc4 	addi	zero,r2,1907
1001db5c:	1001dcc4 	addi	zero,r2,1907
1001db60:	1001dcc4 	addi	zero,r2,1907
1001db64:	1001dcc4 	addi	zero,r2,1907
1001db68:	1001dcc4 	addi	zero,r2,1907
1001db6c:	1001dcc4 	addi	zero,r2,1907
1001db70:	1001dcc4 	addi	zero,r2,1907
1001db74:	1001e088 	cmpgei	zero,r2,1922
1001db78:	1001e014 	ori	zero,r2,1920
1001db7c:	1001dcc4 	addi	zero,r2,1907
1001db80:	1001dcc4 	addi	zero,r2,1907
1001db84:	1001dcc4 	addi	zero,r2,1907
1001db88:	1001de1c 	xori	zero,r2,1912
1001db8c:	1001e014 	ori	zero,r2,1920
1001db90:	1001dcc4 	addi	zero,r2,1907
1001db94:	1001dcc4 	addi	zero,r2,1907
1001db98:	1001de08 	cmpgei	zero,r2,1912
1001db9c:	1001dcc4 	addi	zero,r2,1907
1001dba0:	1001dfd4 	ori	zero,r2,1919
1001dba4:	1001deac 	andhi	zero,r2,1914
1001dba8:	1001de34 	orhi	zero,r2,1912
1001dbac:	1001de28 	cmpgeui	zero,r2,1912
1001dbb0:	1001dcc4 	addi	zero,r2,1907
1001dbb4:	1001df74 	orhi	zero,r2,1917
1001dbb8:	1001dcc4 	addi	zero,r2,1907
1001dbbc:	1001df34 	orhi	zero,r2,1916
1001dbc0:	1001dcc4 	addi	zero,r2,1907
1001dbc4:	1001dcc4 	addi	zero,r2,1907
1001dbc8:	1001ddc0 	call	11001ddc <_gp+0xfd17c0>
1001dbcc:	900b883a 	mov	r5,r18
1001dbd0:	9809883a 	mov	r4,r19
1001dbd4:	0019ea80 	call	10019ea8 <__swsetup_r>
1001dbd8:	1004071e 	bne	r2,zero,1001ebf8 <___vfiprintf_internal_r+0x12f0>
1001dbdc:	9080030b 	ldhu	r2,12(r18)
1001dbe0:	1080068c 	andi	r2,r2,26
1001dbe4:	10800298 	cmpnei	r2,r2,10
1001dbe8:	103f691e 	bne	r2,zero,1001d990 <___vfiprintf_internal_r+0x88>
1001dbec:	9080038f 	ldh	r2,14(r18)
1001dbf0:	103f6716 	blt	r2,zero,1001d990 <___vfiprintf_internal_r+0x88>
1001dbf4:	d9c00317 	ldw	r7,12(sp)
1001dbf8:	e00d883a 	mov	r6,fp
1001dbfc:	900b883a 	mov	r5,r18
1001dc00:	9809883a 	mov	r4,r19
1001dc04:	001ec4c0 	call	1001ec4c <__sbprintf>
1001dc08:	d8800015 	stw	r2,0(sp)
1001dc0c:	00001406 	br	1001dc60 <___vfiprintf_internal_r+0x358>
1001dc10:	a72bc83a 	sub	r21,r20,fp
1001dc14:	a83f8326 	beq	r21,zero,1001da24 <___vfiprintf_internal_r+0x11c>
1001dc18:	003f7206 	br	1001d9e4 <___vfiprintf_internal_r+0xdc>
1001dc1c:	18032b26 	beq	r3,zero,1001e8cc <___vfiprintf_internal_r+0xfc4>
1001dc20:	d9800904 	addi	r6,sp,36
1001dc24:	900b883a 	mov	r5,r18
1001dc28:	9809883a 	mov	r4,r19
1001dc2c:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001dc30:	1000081e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001dc34:	8811883a 	mov	r8,r17
1001dc38:	003f7506 	br	1001da10 <___vfiprintf_internal_r+0x108>
1001dc3c:	d8800b17 	ldw	r2,44(sp)
1001dc40:	10000426 	beq	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001dc44:	d9800904 	addi	r6,sp,36
1001dc48:	900b883a 	mov	r5,r18
1001dc4c:	9809883a 	mov	r4,r19
1001dc50:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001dc54:	9080030b 	ldhu	r2,12(r18)
1001dc58:	1080100c 	andi	r2,r2,64
1001dc5c:	1003e61e 	bne	r2,zero,1001ebf8 <___vfiprintf_internal_r+0x12f0>
1001dc60:	d8800017 	ldw	r2,0(sp)
1001dc64:	dfc02f17 	ldw	ra,188(sp)
1001dc68:	df002e17 	ldw	fp,184(sp)
1001dc6c:	ddc02d17 	ldw	r23,180(sp)
1001dc70:	dd802c17 	ldw	r22,176(sp)
1001dc74:	dd402b17 	ldw	r21,172(sp)
1001dc78:	dd002a17 	ldw	r20,168(sp)
1001dc7c:	dcc02917 	ldw	r19,164(sp)
1001dc80:	dc802817 	ldw	r18,160(sp)
1001dc84:	dc402717 	ldw	r17,156(sp)
1001dc88:	dc002617 	ldw	r16,152(sp)
1001dc8c:	dec03004 	addi	sp,sp,192
1001dc90:	f800283a 	ret
1001dc94:	0021883a 	mov	r16,zero
1001dc98:	10fff404 	addi	r3,r2,-48
1001dc9c:	e7000044 	addi	fp,fp,1
1001dca0:	840002a4 	muli	r16,r16,10
1001dca4:	e0bfffc7 	ldb	r2,-1(fp)
1001dca8:	1c21883a 	add	r16,r3,r16
1001dcac:	10fff404 	addi	r3,r2,-48
1001dcb0:	190002b0 	cmpltui	r4,r3,10
1001dcb4:	203ff91e 	bne	r4,zero,1001dc9c <___vfiprintf_internal_r+0x394>
1001dcb8:	10fff804 	addi	r3,r2,-32
1001dcbc:	19001668 	cmpgeui	r4,r3,89
1001dcc0:	203f6426 	beq	r4,zero,1001da54 <___vfiprintf_internal_r+0x14c>
1001dcc4:	29403fcc 	andi	r5,r5,255
1001dcc8:	2803a91e 	bne	r5,zero,1001eb70 <___vfiprintf_internal_r+0x1268>
1001dccc:	103fdb26 	beq	r2,zero,1001dc3c <___vfiprintf_internal_r+0x334>
1001dcd0:	d8800c05 	stb	r2,48(sp)
1001dcd4:	d8000845 	stb	zero,33(sp)
1001dcd8:	05400044 	movi	r21,1
1001dcdc:	05800044 	movi	r22,1
1001dce0:	ddc00c04 	addi	r23,sp,48
1001dce4:	0000f106 	br	1001e0ac <___vfiprintf_internal_r+0x7a4>
1001dce8:	63002014 	ori	r12,r12,128
1001dcec:	e0800007 	ldb	r2,0(fp)
1001dcf0:	003f5406 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001dcf4:	e0800007 	ldb	r2,0(fp)
1001dcf8:	e1000044 	addi	r4,fp,1
1001dcfc:	10c00aa0 	cmpeqi	r3,r2,42
1001dd00:	1803c01e 	bne	r3,zero,1001ec04 <___vfiprintf_internal_r+0x12fc>
1001dd04:	10fff404 	addi	r3,r2,-48
1001dd08:	19c002b0 	cmpltui	r7,r3,10
1001dd0c:	2039883a 	mov	fp,r4
1001dd10:	0013883a 	mov	r9,zero
1001dd14:	383f4c26 	beq	r7,zero,1001da48 <___vfiprintf_internal_r+0x140>
1001dd18:	e7000044 	addi	fp,fp,1
1001dd1c:	4a4002a4 	muli	r9,r9,10
1001dd20:	e0bfffc7 	ldb	r2,-1(fp)
1001dd24:	48d3883a 	add	r9,r9,r3
1001dd28:	10fff404 	addi	r3,r2,-48
1001dd2c:	190002b0 	cmpltui	r4,r3,10
1001dd30:	203ff91e 	bne	r4,zero,1001dd18 <___vfiprintf_internal_r+0x410>
1001dd34:	003f4406 	br	1001da48 <___vfiprintf_internal_r+0x140>
1001dd38:	e0800003 	ldbu	r2,0(fp)
1001dd3c:	10803fcc 	andi	r2,r2,255
1001dd40:	1080201c 	xori	r2,r2,128
1001dd44:	63000114 	ori	r12,r12,4
1001dd48:	10bfe004 	addi	r2,r2,-128
1001dd4c:	003f3d06 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001dd50:	01400044 	movi	r5,1
1001dd54:	01800ac4 	movi	r6,43
1001dd58:	e0800007 	ldb	r2,0(fp)
1001dd5c:	003f3906 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001dd60:	d8800317 	ldw	r2,12(sp)
1001dd64:	14000017 	ldw	r16,0(r2)
1001dd68:	15c00104 	addi	r23,r2,4
1001dd6c:	e0800003 	ldbu	r2,0(fp)
1001dd70:	80031416 	blt	r16,zero,1001e9c4 <___vfiprintf_internal_r+0x10bc>
1001dd74:	ddc00315 	stw	r23,12(sp)
1001dd78:	10803fcc 	andi	r2,r2,255
1001dd7c:	1080201c 	xori	r2,r2,128
1001dd80:	10bfe004 	addi	r2,r2,-128
1001dd84:	003f2f06 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001dd88:	63000054 	ori	r12,r12,1
1001dd8c:	e0800007 	ldb	r2,0(fp)
1001dd90:	003f2c06 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001dd94:	30c03fcc 	andi	r3,r6,255
1001dd98:	18c0201c 	xori	r3,r3,128
1001dd9c:	18ffe004 	addi	r3,r3,-128
1001dda0:	e0800003 	ldbu	r2,0(fp)
1001dda4:	183ff41e 	bne	r3,zero,1001dd78 <___vfiprintf_internal_r+0x470>
1001dda8:	10803fcc 	andi	r2,r2,255
1001ddac:	1080201c 	xori	r2,r2,128
1001ddb0:	01400044 	movi	r5,1
1001ddb4:	01800804 	movi	r6,32
1001ddb8:	10bfe004 	addi	r2,r2,-128
1001ddbc:	003f2106 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001ddc0:	29403fcc 	andi	r5,r5,255
1001ddc4:	2803741e 	bne	r5,zero,1001eb98 <___vfiprintf_internal_r+0x1290>
1001ddc8:	00c400b4 	movhi	r3,4098
1001ddcc:	18d8a004 	addi	r3,r3,25216
1001ddd0:	d8c00415 	stw	r3,16(sp)
1001ddd4:	60c0080c 	andi	r3,r12,32
1001ddd8:	18004b26 	beq	r3,zero,1001df08 <___vfiprintf_internal_r+0x600>
1001dddc:	d8c00317 	ldw	r3,12(sp)
1001dde0:	1d400017 	ldw	r21,0(r3)
1001dde4:	1d800117 	ldw	r22,4(r3)
1001dde8:	18c00204 	addi	r3,r3,8
1001ddec:	d8c00315 	stw	r3,12(sp)
1001ddf0:	60c0004c 	andi	r3,r12,1
1001ddf4:	18000226 	beq	r3,zero,1001de00 <___vfiprintf_internal_r+0x4f8>
1001ddf8:	ad86b03a 	or	r3,r21,r22
1001ddfc:	1802df1e 	bne	r3,zero,1001e97c <___vfiprintf_internal_r+0x1074>
1001de00:	00800084 	movi	r2,2
1001de04:	00001906 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001de08:	e0800007 	ldb	r2,0(fp)
1001de0c:	10c01b18 	cmpnei	r3,r2,108
1001de10:	18033026 	beq	r3,zero,1001ead4 <___vfiprintf_internal_r+0x11cc>
1001de14:	63000414 	ori	r12,r12,16
1001de18:	003f0a06 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001de1c:	63001014 	ori	r12,r12,64
1001de20:	e0800007 	ldb	r2,0(fp)
1001de24:	003f0706 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001de28:	63000814 	ori	r12,r12,32
1001de2c:	e0800007 	ldb	r2,0(fp)
1001de30:	003f0406 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001de34:	d8c00317 	ldw	r3,12(sp)
1001de38:	00800c04 	movi	r2,48
1001de3c:	d8800885 	stb	r2,34(sp)
1001de40:	00801e04 	movi	r2,120
1001de44:	010400b4 	movhi	r4,4098
1001de48:	d88008c5 	stb	r2,35(sp)
1001de4c:	1d400017 	ldw	r21,0(r3)
1001de50:	18800104 	addi	r2,r3,4
1001de54:	d8800315 	stw	r2,12(sp)
1001de58:	2098a004 	addi	r2,r4,25216
1001de5c:	d8800415 	stw	r2,16(sp)
1001de60:	002d883a 	mov	r22,zero
1001de64:	63000094 	ori	r12,r12,2
1001de68:	00800084 	movi	r2,2
1001de6c:	d8000845 	stb	zero,33(sp)
1001de70:	48ffffe0 	cmpeqi	r3,r9,-1
1001de74:	001b883a 	mov	r13,zero
1001de78:	18014c1e 	bne	r3,zero,1001e3ac <___vfiprintf_internal_r+0xaa4>
1001de7c:	053fdfc4 	movi	r20,-129
1001de80:	ad86b03a 	or	r3,r21,r22
1001de84:	6528703a 	and	r20,r12,r20
1001de88:	1802411e 	bne	r3,zero,1001e790 <___vfiprintf_internal_r+0xe88>
1001de8c:	48030d1e 	bne	r9,zero,1001eac4 <___vfiprintf_internal_r+0x11bc>
1001de90:	1000791e 	bne	r2,zero,1001e078 <___vfiprintf_internal_r+0x770>
1001de94:	6580004c 	andi	r22,r12,1
1001de98:	b002b126 	beq	r22,zero,1001e960 <___vfiprintf_internal_r+0x1058>
1001de9c:	00800c04 	movi	r2,48
1001dea0:	d88015c5 	stb	r2,87(sp)
1001dea4:	ddc015c4 	addi	r23,sp,87
1001dea8:	00017e06 	br	1001e4a4 <___vfiprintf_internal_r+0xb9c>
1001deac:	29403fcc 	andi	r5,r5,255
1001deb0:	2803461e 	bne	r5,zero,1001ebcc <___vfiprintf_internal_r+0x12c4>
1001deb4:	6080080c 	andi	r2,r12,32
1001deb8:	10016b1e 	bne	r2,zero,1001e468 <___vfiprintf_internal_r+0xb60>
1001debc:	d8800317 	ldw	r2,12(sp)
1001dec0:	60c0040c 	andi	r3,r12,16
1001dec4:	15400017 	ldw	r21,0(r2)
1001dec8:	10800104 	addi	r2,r2,4
1001decc:	18010d1e 	bne	r3,zero,1001e304 <___vfiprintf_internal_r+0x9fc>
1001ded0:	60c0100c 	andi	r3,r12,64
1001ded4:	18031326 	beq	r3,zero,1001eb24 <___vfiprintf_internal_r+0x121c>
1001ded8:	d8800315 	stw	r2,12(sp)
1001dedc:	ad7fffcc 	andi	r21,r21,65535
1001dee0:	002d883a 	mov	r22,zero
1001dee4:	0005883a 	mov	r2,zero
1001dee8:	003fe006 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001deec:	29403fcc 	andi	r5,r5,255
1001def0:	2803251e 	bne	r5,zero,1001eb88 <___vfiprintf_internal_r+0x1280>
1001def4:	00c400b4 	movhi	r3,4098
1001def8:	18d89b04 	addi	r3,r3,25196
1001defc:	d8c00415 	stw	r3,16(sp)
1001df00:	60c0080c 	andi	r3,r12,32
1001df04:	183fb51e 	bne	r3,zero,1001dddc <___vfiprintf_internal_r+0x4d4>
1001df08:	d9000317 	ldw	r4,12(sp)
1001df0c:	60c0040c 	andi	r3,r12,16
1001df10:	25400017 	ldw	r21,0(r4)
1001df14:	21000104 	addi	r4,r4,4
1001df18:	d9000315 	stw	r4,12(sp)
1001df1c:	18026e1e 	bne	r3,zero,1001e8d8 <___vfiprintf_internal_r+0xfd0>
1001df20:	60c0100c 	andi	r3,r12,64
1001df24:	18026c26 	beq	r3,zero,1001e8d8 <___vfiprintf_internal_r+0xfd0>
1001df28:	ad7fffcc 	andi	r21,r21,65535
1001df2c:	002d883a 	mov	r22,zero
1001df30:	003faf06 	br	1001ddf0 <___vfiprintf_internal_r+0x4e8>
1001df34:	29403fcc 	andi	r5,r5,255
1001df38:	2803151e 	bne	r5,zero,1001eb90 <___vfiprintf_internal_r+0x1288>
1001df3c:	6080080c 	andi	r2,r12,32
1001df40:	10013b1e 	bne	r2,zero,1001e430 <___vfiprintf_internal_r+0xb28>
1001df44:	d8800317 	ldw	r2,12(sp)
1001df48:	60c0040c 	andi	r3,r12,16
1001df4c:	15400017 	ldw	r21,0(r2)
1001df50:	10800104 	addi	r2,r2,4
1001df54:	1800f81e 	bne	r3,zero,1001e338 <___vfiprintf_internal_r+0xa30>
1001df58:	60c0100c 	andi	r3,r12,64
1001df5c:	1802ed26 	beq	r3,zero,1001eb14 <___vfiprintf_internal_r+0x120c>
1001df60:	d8800315 	stw	r2,12(sp)
1001df64:	ad7fffcc 	andi	r21,r21,65535
1001df68:	002d883a 	mov	r22,zero
1001df6c:	00800044 	movi	r2,1
1001df70:	003fbe06 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001df74:	d8800317 	ldw	r2,12(sp)
1001df78:	d8000845 	stb	zero,33(sp)
1001df7c:	15c00017 	ldw	r23,0(r2)
1001df80:	15000104 	addi	r20,r2,4
1001df84:	b802da26 	beq	r23,zero,1001eaf0 <___vfiprintf_internal_r+0x11e8>
1001df88:	48bfffe0 	cmpeqi	r2,r9,-1
1001df8c:	1002901e 	bne	r2,zero,1001e9d0 <___vfiprintf_internal_r+0x10c8>
1001df90:	480d883a 	mov	r6,r9
1001df94:	000b883a 	mov	r5,zero
1001df98:	b809883a 	mov	r4,r23
1001df9c:	da000315 	stw	r8,12(sp)
1001dfa0:	db000215 	stw	r12,8(sp)
1001dfa4:	da400115 	stw	r9,4(sp)
1001dfa8:	0016ac00 	call	10016ac0 <memchr>
1001dfac:	da400117 	ldw	r9,4(sp)
1001dfb0:	db000217 	ldw	r12,8(sp)
1001dfb4:	da000317 	ldw	r8,12(sp)
1001dfb8:	1002ef26 	beq	r2,zero,1001eb78 <___vfiprintf_internal_r+0x1270>
1001dfbc:	15edc83a 	sub	r22,r2,r23
1001dfc0:	b02b883a 	mov	r21,r22
1001dfc4:	b000010e 	bge	r22,zero,1001dfcc <___vfiprintf_internal_r+0x6c4>
1001dfc8:	002b883a 	mov	r21,zero
1001dfcc:	dd000315 	stw	r20,12(sp)
1001dfd0:	00003606 	br	1001e0ac <___vfiprintf_internal_r+0x7a4>
1001dfd4:	29403fcc 	andi	r5,r5,255
1001dfd8:	2802fa1e 	bne	r5,zero,1001ebc4 <___vfiprintf_internal_r+0x12bc>
1001dfdc:	d9000317 	ldw	r4,12(sp)
1001dfe0:	6080080c 	andi	r2,r12,32
1001dfe4:	20c00104 	addi	r3,r4,4
1001dfe8:	10026a1e 	bne	r2,zero,1001e994 <___vfiprintf_internal_r+0x108c>
1001dfec:	6080040c 	andi	r2,r12,16
1001dff0:	1002891e 	bne	r2,zero,1001ea18 <___vfiprintf_internal_r+0x1110>
1001dff4:	6300100c 	andi	r12,r12,64
1001dff8:	60028726 	beq	r12,zero,1001ea18 <___vfiprintf_internal_r+0x1110>
1001dffc:	d8800317 	ldw	r2,12(sp)
1001e000:	d8c00315 	stw	r3,12(sp)
1001e004:	d8c00017 	ldw	r3,0(sp)
1001e008:	10800017 	ldw	r2,0(r2)
1001e00c:	10c0000d 	sth	r3,0(r2)
1001e010:	003e6606 	br	1001d9ac <___vfiprintf_internal_r+0xa4>
1001e014:	29403fcc 	andi	r5,r5,255
1001e018:	2802e81e 	bne	r5,zero,1001ebbc <___vfiprintf_internal_r+0x12b4>
1001e01c:	6080080c 	andi	r2,r12,32
1001e020:	10010a1e 	bne	r2,zero,1001e44c <___vfiprintf_internal_r+0xb44>
1001e024:	d8800317 	ldw	r2,12(sp)
1001e028:	60c0040c 	andi	r3,r12,16
1001e02c:	10800104 	addi	r2,r2,4
1001e030:	1800ce1e 	bne	r3,zero,1001e36c <___vfiprintf_internal_r+0xa64>
1001e034:	60c0100c 	andi	r3,r12,64
1001e038:	1800cc26 	beq	r3,zero,1001e36c <___vfiprintf_internal_r+0xa64>
1001e03c:	d8c00317 	ldw	r3,12(sp)
1001e040:	d8800315 	stw	r2,12(sp)
1001e044:	1d40000f 	ldh	r21,0(r3)
1001e048:	a82dd7fa 	srai	r22,r21,31
1001e04c:	b005883a 	mov	r2,r22
1001e050:	1000cc16 	blt	r2,zero,1001e384 <___vfiprintf_internal_r+0xa7c>
1001e054:	48bfffd8 	cmpnei	r2,r9,-1
1001e058:	db400843 	ldbu	r13,33(sp)
1001e05c:	10010926 	beq	r2,zero,1001e484 <___vfiprintf_internal_r+0xb7c>
1001e060:	00ffdfc4 	movi	r3,-129
1001e064:	ad84b03a 	or	r2,r21,r22
1001e068:	60d8703a 	and	r12,r12,r3
1001e06c:	1001051e 	bne	r2,zero,1001e484 <___vfiprintf_internal_r+0xb7c>
1001e070:	4801071e 	bne	r9,zero,1001e490 <___vfiprintf_internal_r+0xb88>
1001e074:	6029883a 	mov	r20,r12
1001e078:	0013883a 	mov	r9,zero
1001e07c:	002d883a 	mov	r22,zero
1001e080:	882f883a 	mov	r23,r17
1001e084:	00010706 	br	1001e4a4 <___vfiprintf_internal_r+0xb9c>
1001e088:	d8c00317 	ldw	r3,12(sp)
1001e08c:	d8000845 	stb	zero,33(sp)
1001e090:	05400044 	movi	r21,1
1001e094:	18800017 	ldw	r2,0(r3)
1001e098:	18c00104 	addi	r3,r3,4
1001e09c:	d8c00315 	stw	r3,12(sp)
1001e0a0:	d8800c05 	stb	r2,48(sp)
1001e0a4:	05800044 	movi	r22,1
1001e0a8:	ddc00c04 	addi	r23,sp,48
1001e0ac:	6029883a 	mov	r20,r12
1001e0b0:	0013883a 	mov	r9,zero
1001e0b4:	a340008c 	andi	r13,r20,2
1001e0b8:	68000126 	beq	r13,zero,1001e0c0 <___vfiprintf_internal_r+0x7b8>
1001e0bc:	ad400084 	addi	r21,r21,2
1001e0c0:	d9000a17 	ldw	r4,40(sp)
1001e0c4:	a300210c 	andi	r12,r20,132
1001e0c8:	d8800b17 	ldw	r2,44(sp)
1001e0cc:	21800044 	addi	r6,r4,1
1001e0d0:	300b883a 	mov	r5,r6
1001e0d4:	6000021e 	bne	r12,zero,1001e0e0 <___vfiprintf_internal_r+0x7d8>
1001e0d8:	8547c83a 	sub	r3,r16,r21
1001e0dc:	00c1ae16 	blt	zero,r3,1001e798 <___vfiprintf_internal_r+0xe90>
1001e0e0:	d9800847 	ldb	r6,33(sp)
1001e0e4:	40c00204 	addi	r3,r8,8
1001e0e8:	30000d26 	beq	r6,zero,1001e120 <___vfiprintf_internal_r+0x818>
1001e0ec:	d9000844 	addi	r4,sp,33
1001e0f0:	10800044 	addi	r2,r2,1
1001e0f4:	41000015 	stw	r4,0(r8)
1001e0f8:	01000044 	movi	r4,1
1001e0fc:	41000115 	stw	r4,4(r8)
1001e100:	d8800b15 	stw	r2,44(sp)
1001e104:	d9400a15 	stw	r5,40(sp)
1001e108:	29000208 	cmpgei	r4,r5,8
1001e10c:	2001831e 	bne	r4,zero,1001e71c <___vfiprintf_internal_r+0xe14>
1001e110:	2809883a 	mov	r4,r5
1001e114:	1811883a 	mov	r8,r3
1001e118:	29400044 	addi	r5,r5,1
1001e11c:	18c00204 	addi	r3,r3,8
1001e120:	68001826 	beq	r13,zero,1001e184 <___vfiprintf_internal_r+0x87c>
1001e124:	d9000884 	addi	r4,sp,34
1001e128:	10800084 	addi	r2,r2,2
1001e12c:	41000015 	stw	r4,0(r8)
1001e130:	01000084 	movi	r4,2
1001e134:	41000115 	stw	r4,4(r8)
1001e138:	d8800b15 	stw	r2,44(sp)
1001e13c:	d9400a15 	stw	r5,40(sp)
1001e140:	29000208 	cmpgei	r4,r5,8
1001e144:	20018d26 	beq	r4,zero,1001e77c <___vfiprintf_internal_r+0xe74>
1001e148:	1001ed26 	beq	r2,zero,1001e900 <___vfiprintf_internal_r+0xff8>
1001e14c:	d9800904 	addi	r6,sp,36
1001e150:	900b883a 	mov	r5,r18
1001e154:	9809883a 	mov	r4,r19
1001e158:	da400215 	stw	r9,8(sp)
1001e15c:	db000115 	stw	r12,4(sp)
1001e160:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e164:	103ebb1e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e168:	d9000a17 	ldw	r4,40(sp)
1001e16c:	d8800b17 	ldw	r2,44(sp)
1001e170:	da400217 	ldw	r9,8(sp)
1001e174:	db000117 	ldw	r12,4(sp)
1001e178:	d8c01804 	addi	r3,sp,96
1001e17c:	21400044 	addi	r5,r4,1
1001e180:	8811883a 	mov	r8,r17
1001e184:	63002018 	cmpnei	r12,r12,128
1001e188:	6000e326 	beq	r12,zero,1001e518 <___vfiprintf_internal_r+0xc10>
1001e18c:	4d93c83a 	sub	r9,r9,r22
1001e190:	02412216 	blt	zero,r9,1001e61c <___vfiprintf_internal_r+0xd14>
1001e194:	b085883a 	add	r2,r22,r2
1001e198:	d9400a15 	stw	r5,40(sp)
1001e19c:	45c00015 	stw	r23,0(r8)
1001e1a0:	45800115 	stw	r22,4(r8)
1001e1a4:	d8800b15 	stw	r2,44(sp)
1001e1a8:	29400210 	cmplti	r5,r5,8
1001e1ac:	2800081e 	bne	r5,zero,1001e1d0 <___vfiprintf_internal_r+0x8c8>
1001e1b0:	10001426 	beq	r2,zero,1001e204 <___vfiprintf_internal_r+0x8fc>
1001e1b4:	d9800904 	addi	r6,sp,36
1001e1b8:	900b883a 	mov	r5,r18
1001e1bc:	9809883a 	mov	r4,r19
1001e1c0:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e1c4:	103ea31e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e1c8:	d8800b17 	ldw	r2,44(sp)
1001e1cc:	8807883a 	mov	r3,r17
1001e1d0:	a500010c 	andi	r20,r20,4
1001e1d4:	a0000226 	beq	r20,zero,1001e1e0 <___vfiprintf_internal_r+0x8d8>
1001e1d8:	8569c83a 	sub	r20,r16,r21
1001e1dc:	05000f16 	blt	zero,r20,1001e21c <___vfiprintf_internal_r+0x914>
1001e1e0:	8540010e 	bge	r16,r21,1001e1e8 <___vfiprintf_internal_r+0x8e0>
1001e1e4:	a821883a 	mov	r16,r21
1001e1e8:	d8c00017 	ldw	r3,0(sp)
1001e1ec:	1c07883a 	add	r3,r3,r16
1001e1f0:	d8c00015 	stw	r3,0(sp)
1001e1f4:	10013f1e 	bne	r2,zero,1001e6f4 <___vfiprintf_internal_r+0xdec>
1001e1f8:	d8000a15 	stw	zero,40(sp)
1001e1fc:	8811883a 	mov	r8,r17
1001e200:	003dea06 	br	1001d9ac <___vfiprintf_internal_r+0xa4>
1001e204:	d8000a15 	stw	zero,40(sp)
1001e208:	a500010c 	andi	r20,r20,4
1001e20c:	a0019d26 	beq	r20,zero,1001e884 <___vfiprintf_internal_r+0xf7c>
1001e210:	8569c83a 	sub	r20,r16,r21
1001e214:	05019b0e 	bge	zero,r20,1001e884 <___vfiprintf_internal_r+0xf7c>
1001e218:	8807883a 	mov	r3,r17
1001e21c:	a1000450 	cmplti	r4,r20,17
1001e220:	01c400b4 	movhi	r7,4098
1001e224:	d9400a17 	ldw	r5,40(sp)
1001e228:	20026c1e 	bne	r4,zero,1001ebdc <___vfiprintf_internal_r+0x12d4>
1001e22c:	39d9a104 	addi	r7,r7,26244
1001e230:	05800404 	movi	r22,16
1001e234:	00000606 	br	1001e250 <___vfiprintf_internal_r+0x948>
1001e238:	29800084 	addi	r6,r5,2
1001e23c:	18c00204 	addi	r3,r3,8
1001e240:	200b883a 	mov	r5,r4
1001e244:	a53ffc04 	addi	r20,r20,-16
1001e248:	a1000448 	cmpgei	r4,r20,17
1001e24c:	20001726 	beq	r4,zero,1001e2ac <___vfiprintf_internal_r+0x9a4>
1001e250:	29000044 	addi	r4,r5,1
1001e254:	10800404 	addi	r2,r2,16
1001e258:	19c00015 	stw	r7,0(r3)
1001e25c:	1d800115 	stw	r22,4(r3)
1001e260:	d8800b15 	stw	r2,44(sp)
1001e264:	d9000a15 	stw	r4,40(sp)
1001e268:	21800208 	cmpgei	r6,r4,8
1001e26c:	303ff226 	beq	r6,zero,1001e238 <___vfiprintf_internal_r+0x930>
1001e270:	d9800904 	addi	r6,sp,36
1001e274:	900b883a 	mov	r5,r18
1001e278:	9809883a 	mov	r4,r19
1001e27c:	1000a226 	beq	r2,zero,1001e508 <___vfiprintf_internal_r+0xc00>
1001e280:	d9c00115 	stw	r7,4(sp)
1001e284:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e288:	103e721e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e28c:	d9400a17 	ldw	r5,40(sp)
1001e290:	a53ffc04 	addi	r20,r20,-16
1001e294:	a1000448 	cmpgei	r4,r20,17
1001e298:	d8800b17 	ldw	r2,44(sp)
1001e29c:	8807883a 	mov	r3,r17
1001e2a0:	29800044 	addi	r6,r5,1
1001e2a4:	d9c00117 	ldw	r7,4(sp)
1001e2a8:	203fe91e 	bne	r4,zero,1001e250 <___vfiprintf_internal_r+0x948>
1001e2ac:	1505883a 	add	r2,r2,r20
1001e2b0:	d9800a15 	stw	r6,40(sp)
1001e2b4:	19c00015 	stw	r7,0(r3)
1001e2b8:	1d000115 	stw	r20,4(r3)
1001e2bc:	d8800b15 	stw	r2,44(sp)
1001e2c0:	31800210 	cmplti	r6,r6,8
1001e2c4:	303fc61e 	bne	r6,zero,1001e1e0 <___vfiprintf_internal_r+0x8d8>
1001e2c8:	10016e26 	beq	r2,zero,1001e884 <___vfiprintf_internal_r+0xf7c>
1001e2cc:	d9800904 	addi	r6,sp,36
1001e2d0:	900b883a 	mov	r5,r18
1001e2d4:	9809883a 	mov	r4,r19
1001e2d8:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e2dc:	103e5d1e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e2e0:	d8800b17 	ldw	r2,44(sp)
1001e2e4:	003fbe06 	br	1001e1e0 <___vfiprintf_internal_r+0x8d8>
1001e2e8:	29403fcc 	andi	r5,r5,255
1001e2ec:	28022c1e 	bne	r5,zero,1001eba0 <___vfiprintf_internal_r+0x1298>
1001e2f0:	6080080c 	andi	r2,r12,32
1001e2f4:	63000414 	ori	r12,r12,16
1001e2f8:	10005b1e 	bne	r2,zero,1001e468 <___vfiprintf_internal_r+0xb60>
1001e2fc:	d8800317 	ldw	r2,12(sp)
1001e300:	10800104 	addi	r2,r2,4
1001e304:	d8c00317 	ldw	r3,12(sp)
1001e308:	002d883a 	mov	r22,zero
1001e30c:	d8800315 	stw	r2,12(sp)
1001e310:	1d400017 	ldw	r21,0(r3)
1001e314:	0005883a 	mov	r2,zero
1001e318:	003ed406 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001e31c:	29403fcc 	andi	r5,r5,255
1001e320:	2802211e 	bne	r5,zero,1001eba8 <___vfiprintf_internal_r+0x12a0>
1001e324:	6080080c 	andi	r2,r12,32
1001e328:	63000414 	ori	r12,r12,16
1001e32c:	1000401e 	bne	r2,zero,1001e430 <___vfiprintf_internal_r+0xb28>
1001e330:	d8800317 	ldw	r2,12(sp)
1001e334:	10800104 	addi	r2,r2,4
1001e338:	d8c00317 	ldw	r3,12(sp)
1001e33c:	002d883a 	mov	r22,zero
1001e340:	d8800315 	stw	r2,12(sp)
1001e344:	1d400017 	ldw	r21,0(r3)
1001e348:	00800044 	movi	r2,1
1001e34c:	003ec706 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001e350:	29403fcc 	andi	r5,r5,255
1001e354:	28021f1e 	bne	r5,zero,1001ebd4 <___vfiprintf_internal_r+0x12cc>
1001e358:	6080080c 	andi	r2,r12,32
1001e35c:	63000414 	ori	r12,r12,16
1001e360:	10003a1e 	bne	r2,zero,1001e44c <___vfiprintf_internal_r+0xb44>
1001e364:	d8800317 	ldw	r2,12(sp)
1001e368:	10800104 	addi	r2,r2,4
1001e36c:	d8c00317 	ldw	r3,12(sp)
1001e370:	1d400017 	ldw	r21,0(r3)
1001e374:	d8800315 	stw	r2,12(sp)
1001e378:	a82dd7fa 	srai	r22,r21,31
1001e37c:	b005883a 	mov	r2,r22
1001e380:	103f340e 	bge	r2,zero,1001e054 <___vfiprintf_internal_r+0x74c>
1001e384:	056bc83a 	sub	r21,zero,r21
1001e388:	a804c03a 	cmpne	r2,r21,zero
1001e38c:	05adc83a 	sub	r22,zero,r22
1001e390:	b0adc83a 	sub	r22,r22,r2
1001e394:	00800b44 	movi	r2,45
1001e398:	d8800845 	stb	r2,33(sp)
1001e39c:	48ffffe0 	cmpeqi	r3,r9,-1
1001e3a0:	03400b44 	movi	r13,45
1001e3a4:	00800044 	movi	r2,1
1001e3a8:	183eb426 	beq	r3,zero,1001de7c <___vfiprintf_internal_r+0x574>
1001e3ac:	10c00060 	cmpeqi	r3,r2,1
1001e3b0:	1800341e 	bne	r3,zero,1001e484 <___vfiprintf_internal_r+0xb7c>
1001e3b4:	108000a0 	cmpeqi	r2,r2,2
1001e3b8:	1000431e 	bne	r2,zero,1001e4c8 <___vfiprintf_internal_r+0xbc0>
1001e3bc:	8807883a 	mov	r3,r17
1001e3c0:	00000106 	br	1001e3c8 <___vfiprintf_internal_r+0xac0>
1001e3c4:	b807883a 	mov	r3,r23
1001e3c8:	a808d0fa 	srli	r4,r21,3
1001e3cc:	b00a977a 	slli	r5,r22,29
1001e3d0:	b02cd0fa 	srli	r22,r22,3
1001e3d4:	ad4001cc 	andi	r21,r21,7
1001e3d8:	a8800c04 	addi	r2,r21,48
1001e3dc:	292ab03a 	or	r21,r5,r4
1001e3e0:	18bfffc5 	stb	r2,-1(r3)
1001e3e4:	ad88b03a 	or	r4,r21,r22
1001e3e8:	1dffffc4 	addi	r23,r3,-1
1001e3ec:	203ff51e 	bne	r4,zero,1001e3c4 <___vfiprintf_internal_r+0xabc>
1001e3f0:	6100004c 	andi	r4,r12,1
1001e3f4:	20004126 	beq	r4,zero,1001e4fc <___vfiprintf_internal_r+0xbf4>
1001e3f8:	10803fcc 	andi	r2,r2,255
1001e3fc:	1080201c 	xori	r2,r2,128
1001e400:	10bfe004 	addi	r2,r2,-128
1001e404:	10800c18 	cmpnei	r2,r2,48
1001e408:	10003c26 	beq	r2,zero,1001e4fc <___vfiprintf_internal_r+0xbf4>
1001e40c:	18ffff84 	addi	r3,r3,-2
1001e410:	00800c04 	movi	r2,48
1001e414:	b8bfffc5 	stb	r2,-1(r23)
1001e418:	88edc83a 	sub	r22,r17,r3
1001e41c:	6029883a 	mov	r20,r12
1001e420:	182f883a 	mov	r23,r3
1001e424:	00001f06 	br	1001e4a4 <___vfiprintf_internal_r+0xb9c>
1001e428:	00155300 	call	10015530 <__sinit>
1001e42c:	003d4806 	br	1001d950 <___vfiprintf_internal_r+0x48>
1001e430:	d8c00317 	ldw	r3,12(sp)
1001e434:	00800044 	movi	r2,1
1001e438:	1d400017 	ldw	r21,0(r3)
1001e43c:	1d800117 	ldw	r22,4(r3)
1001e440:	18c00204 	addi	r3,r3,8
1001e444:	d8c00315 	stw	r3,12(sp)
1001e448:	003e8806 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001e44c:	d8c00317 	ldw	r3,12(sp)
1001e450:	18800117 	ldw	r2,4(r3)
1001e454:	1d400017 	ldw	r21,0(r3)
1001e458:	18c00204 	addi	r3,r3,8
1001e45c:	d8c00315 	stw	r3,12(sp)
1001e460:	102d883a 	mov	r22,r2
1001e464:	003efa06 	br	1001e050 <___vfiprintf_internal_r+0x748>
1001e468:	d8c00317 	ldw	r3,12(sp)
1001e46c:	0005883a 	mov	r2,zero
1001e470:	1d400017 	ldw	r21,0(r3)
1001e474:	1d800117 	ldw	r22,4(r3)
1001e478:	18c00204 	addi	r3,r3,8
1001e47c:	d8c00315 	stw	r3,12(sp)
1001e480:	003e7a06 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001e484:	b0016a1e 	bne	r22,zero,1001ea30 <___vfiprintf_internal_r+0x1128>
1001e488:	a88002a8 	cmpgeui	r2,r21,10
1001e48c:	1001681e 	bne	r2,zero,1001ea30 <___vfiprintf_internal_r+0x1128>
1001e490:	ad400c04 	addi	r21,r21,48
1001e494:	dd4015c5 	stb	r21,87(sp)
1001e498:	6029883a 	mov	r20,r12
1001e49c:	05800044 	movi	r22,1
1001e4a0:	ddc015c4 	addi	r23,sp,87
1001e4a4:	482b883a 	mov	r21,r9
1001e4a8:	4d80010e 	bge	r9,r22,1001e4b0 <___vfiprintf_internal_r+0xba8>
1001e4ac:	b02b883a 	mov	r21,r22
1001e4b0:	6b403fcc 	andi	r13,r13,255
1001e4b4:	6b40201c 	xori	r13,r13,128
1001e4b8:	6b7fe004 	addi	r13,r13,-128
1001e4bc:	683efd26 	beq	r13,zero,1001e0b4 <___vfiprintf_internal_r+0x7ac>
1001e4c0:	ad400044 	addi	r21,r21,1
1001e4c4:	003efb06 	br	1001e0b4 <___vfiprintf_internal_r+0x7ac>
1001e4c8:	882f883a 	mov	r23,r17
1001e4cc:	d9000417 	ldw	r4,16(sp)
1001e4d0:	a88003cc 	andi	r2,r21,15
1001e4d4:	b006973a 	slli	r3,r22,28
1001e4d8:	2085883a 	add	r2,r4,r2
1001e4dc:	a82ad13a 	srli	r21,r21,4
1001e4e0:	10800003 	ldbu	r2,0(r2)
1001e4e4:	b02cd13a 	srli	r22,r22,4
1001e4e8:	bdffffc4 	addi	r23,r23,-1
1001e4ec:	1d6ab03a 	or	r21,r3,r21
1001e4f0:	b8800005 	stb	r2,0(r23)
1001e4f4:	ad84b03a 	or	r2,r21,r22
1001e4f8:	103ff41e 	bne	r2,zero,1001e4cc <___vfiprintf_internal_r+0xbc4>
1001e4fc:	8dedc83a 	sub	r22,r17,r23
1001e500:	6029883a 	mov	r20,r12
1001e504:	003fe706 	br	1001e4a4 <___vfiprintf_internal_r+0xb9c>
1001e508:	01800044 	movi	r6,1
1001e50c:	000b883a 	mov	r5,zero
1001e510:	8807883a 	mov	r3,r17
1001e514:	003f4b06 	br	1001e244 <___vfiprintf_internal_r+0x93c>
1001e518:	8559c83a 	sub	r12,r16,r21
1001e51c:	033f1b0e 	bge	zero,r12,1001e18c <___vfiprintf_internal_r+0x884>
1001e520:	61800450 	cmplti	r6,r12,17
1001e524:	01c400b4 	movhi	r7,4098
1001e528:	3001af1e 	bne	r6,zero,1001ebe8 <___vfiprintf_internal_r+0x12e0>
1001e52c:	39d99d04 	addi	r7,r7,26228
1001e530:	03400404 	movi	r13,16
1001e534:	00000606 	br	1001e550 <___vfiprintf_internal_r+0xc48>
1001e538:	21800084 	addi	r6,r4,2
1001e53c:	42000204 	addi	r8,r8,8
1001e540:	1809883a 	mov	r4,r3
1001e544:	633ffc04 	addi	r12,r12,-16
1001e548:	60c00448 	cmpgei	r3,r12,17
1001e54c:	18001c26 	beq	r3,zero,1001e5c0 <___vfiprintf_internal_r+0xcb8>
1001e550:	20c00044 	addi	r3,r4,1
1001e554:	10800404 	addi	r2,r2,16
1001e558:	41c00015 	stw	r7,0(r8)
1001e55c:	43400115 	stw	r13,4(r8)
1001e560:	d8800b15 	stw	r2,44(sp)
1001e564:	d8c00a15 	stw	r3,40(sp)
1001e568:	19400208 	cmpgei	r5,r3,8
1001e56c:	283ff226 	beq	r5,zero,1001e538 <___vfiprintf_internal_r+0xc30>
1001e570:	d9800904 	addi	r6,sp,36
1001e574:	900b883a 	mov	r5,r18
1001e578:	9809883a 	mov	r4,r19
1001e57c:	10006326 	beq	r2,zero,1001e70c <___vfiprintf_internal_r+0xe04>
1001e580:	d9c00515 	stw	r7,20(sp)
1001e584:	db000215 	stw	r12,8(sp)
1001e588:	da400115 	stw	r9,4(sp)
1001e58c:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e590:	103db01e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e594:	db000217 	ldw	r12,8(sp)
1001e598:	d9000a17 	ldw	r4,40(sp)
1001e59c:	d8800b17 	ldw	r2,44(sp)
1001e5a0:	633ffc04 	addi	r12,r12,-16
1001e5a4:	60c00448 	cmpgei	r3,r12,17
1001e5a8:	8811883a 	mov	r8,r17
1001e5ac:	21800044 	addi	r6,r4,1
1001e5b0:	d9c00517 	ldw	r7,20(sp)
1001e5b4:	03400404 	movi	r13,16
1001e5b8:	da400117 	ldw	r9,4(sp)
1001e5bc:	183fe41e 	bne	r3,zero,1001e550 <___vfiprintf_internal_r+0xc48>
1001e5c0:	43400204 	addi	r13,r8,8
1001e5c4:	1305883a 	add	r2,r2,r12
1001e5c8:	41c00015 	stw	r7,0(r8)
1001e5cc:	43000115 	stw	r12,4(r8)
1001e5d0:	d8800b15 	stw	r2,44(sp)
1001e5d4:	d9800a15 	stw	r6,40(sp)
1001e5d8:	30c00208 	cmpgei	r3,r6,8
1001e5dc:	1800e226 	beq	r3,zero,1001e968 <___vfiprintf_internal_r+0x1060>
1001e5e0:	10015726 	beq	r2,zero,1001eb40 <___vfiprintf_internal_r+0x1238>
1001e5e4:	d9800904 	addi	r6,sp,36
1001e5e8:	900b883a 	mov	r5,r18
1001e5ec:	9809883a 	mov	r4,r19
1001e5f0:	da400115 	stw	r9,4(sp)
1001e5f4:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e5f8:	103d961e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e5fc:	da400117 	ldw	r9,4(sp)
1001e600:	d9000a17 	ldw	r4,40(sp)
1001e604:	d8800b17 	ldw	r2,44(sp)
1001e608:	4d93c83a 	sub	r9,r9,r22
1001e60c:	d8c01804 	addi	r3,sp,96
1001e610:	21400044 	addi	r5,r4,1
1001e614:	8811883a 	mov	r8,r17
1001e618:	027ede0e 	bge	zero,r9,1001e194 <___vfiprintf_internal_r+0x88c>
1001e61c:	49800450 	cmplti	r6,r9,17
1001e620:	01c400b4 	movhi	r7,4098
1001e624:	3001431e 	bne	r6,zero,1001eb34 <___vfiprintf_internal_r+0x122c>
1001e628:	39d99d04 	addi	r7,r7,26228
1001e62c:	03000404 	movi	r12,16
1001e630:	00000606 	br	1001e64c <___vfiprintf_internal_r+0xd44>
1001e634:	21400084 	addi	r5,r4,2
1001e638:	42000204 	addi	r8,r8,8
1001e63c:	1809883a 	mov	r4,r3
1001e640:	4a7ffc04 	addi	r9,r9,-16
1001e644:	48c00448 	cmpgei	r3,r9,17
1001e648:	18001a26 	beq	r3,zero,1001e6b4 <___vfiprintf_internal_r+0xdac>
1001e64c:	20c00044 	addi	r3,r4,1
1001e650:	10800404 	addi	r2,r2,16
1001e654:	41c00015 	stw	r7,0(r8)
1001e658:	43000115 	stw	r12,4(r8)
1001e65c:	d8800b15 	stw	r2,44(sp)
1001e660:	d8c00a15 	stw	r3,40(sp)
1001e664:	19400208 	cmpgei	r5,r3,8
1001e668:	283ff226 	beq	r5,zero,1001e634 <___vfiprintf_internal_r+0xd2c>
1001e66c:	d9800904 	addi	r6,sp,36
1001e670:	900b883a 	mov	r5,r18
1001e674:	9809883a 	mov	r4,r19
1001e678:	10001a26 	beq	r2,zero,1001e6e4 <___vfiprintf_internal_r+0xddc>
1001e67c:	d9c00215 	stw	r7,8(sp)
1001e680:	da400115 	stw	r9,4(sp)
1001e684:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e688:	103d721e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e68c:	da400117 	ldw	r9,4(sp)
1001e690:	d9000a17 	ldw	r4,40(sp)
1001e694:	d8800b17 	ldw	r2,44(sp)
1001e698:	4a7ffc04 	addi	r9,r9,-16
1001e69c:	48c00448 	cmpgei	r3,r9,17
1001e6a0:	8811883a 	mov	r8,r17
1001e6a4:	21400044 	addi	r5,r4,1
1001e6a8:	d9c00217 	ldw	r7,8(sp)
1001e6ac:	03000404 	movi	r12,16
1001e6b0:	183fe61e 	bne	r3,zero,1001e64c <___vfiprintf_internal_r+0xd44>
1001e6b4:	41000204 	addi	r4,r8,8
1001e6b8:	1245883a 	add	r2,r2,r9
1001e6bc:	41c00015 	stw	r7,0(r8)
1001e6c0:	42400115 	stw	r9,4(r8)
1001e6c4:	d8800b15 	stw	r2,44(sp)
1001e6c8:	d9400a15 	stw	r5,40(sp)
1001e6cc:	28c00208 	cmpgei	r3,r5,8
1001e6d0:	1800721e 	bne	r3,zero,1001e89c <___vfiprintf_internal_r+0xf94>
1001e6d4:	29400044 	addi	r5,r5,1
1001e6d8:	20c00204 	addi	r3,r4,8
1001e6dc:	2011883a 	mov	r8,r4
1001e6e0:	003eac06 	br	1001e194 <___vfiprintf_internal_r+0x88c>
1001e6e4:	01400044 	movi	r5,1
1001e6e8:	0009883a 	mov	r4,zero
1001e6ec:	8811883a 	mov	r8,r17
1001e6f0:	003fd306 	br	1001e640 <___vfiprintf_internal_r+0xd38>
1001e6f4:	d9800904 	addi	r6,sp,36
1001e6f8:	900b883a 	mov	r5,r18
1001e6fc:	9809883a 	mov	r4,r19
1001e700:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e704:	103ebc26 	beq	r2,zero,1001e1f8 <___vfiprintf_internal_r+0x8f0>
1001e708:	003d5206 	br	1001dc54 <___vfiprintf_internal_r+0x34c>
1001e70c:	01800044 	movi	r6,1
1001e710:	0009883a 	mov	r4,zero
1001e714:	8811883a 	mov	r8,r17
1001e718:	003f8a06 	br	1001e544 <___vfiprintf_internal_r+0xc3c>
1001e71c:	10007026 	beq	r2,zero,1001e8e0 <___vfiprintf_internal_r+0xfd8>
1001e720:	d9800904 	addi	r6,sp,36
1001e724:	900b883a 	mov	r5,r18
1001e728:	9809883a 	mov	r4,r19
1001e72c:	da400515 	stw	r9,20(sp)
1001e730:	db000215 	stw	r12,8(sp)
1001e734:	db400115 	stw	r13,4(sp)
1001e738:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e73c:	103d451e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e740:	d9000a17 	ldw	r4,40(sp)
1001e744:	d8800b17 	ldw	r2,44(sp)
1001e748:	d8c01804 	addi	r3,sp,96
1001e74c:	21400044 	addi	r5,r4,1
1001e750:	8811883a 	mov	r8,r17
1001e754:	da400517 	ldw	r9,20(sp)
1001e758:	db000217 	ldw	r12,8(sp)
1001e75c:	db400117 	ldw	r13,4(sp)
1001e760:	003e6f06 	br	1001e120 <___vfiprintf_internal_r+0x818>
1001e764:	d8800884 	addi	r2,sp,34
1001e768:	d8801615 	stw	r2,88(sp)
1001e76c:	00800084 	movi	r2,2
1001e770:	d8801715 	stw	r2,92(sp)
1001e774:	d8c01804 	addi	r3,sp,96
1001e778:	01400044 	movi	r5,1
1001e77c:	1811883a 	mov	r8,r3
1001e780:	2809883a 	mov	r4,r5
1001e784:	21400044 	addi	r5,r4,1
1001e788:	40c00204 	addi	r3,r8,8
1001e78c:	003e7d06 	br	1001e184 <___vfiprintf_internal_r+0x87c>
1001e790:	a019883a 	mov	r12,r20
1001e794:	003f0506 	br	1001e3ac <___vfiprintf_internal_r+0xaa4>
1001e798:	19400450 	cmplti	r5,r3,17
1001e79c:	01c400b4 	movhi	r7,4098
1001e7a0:	2801031e 	bne	r5,zero,1001ebb0 <___vfiprintf_internal_r+0x12a8>
1001e7a4:	39d9a104 	addi	r7,r7,26244
1001e7a8:	03800404 	movi	r14,16
1001e7ac:	00000706 	br	1001e7cc <___vfiprintf_internal_r+0xec4>
1001e7b0:	23c00084 	addi	r15,r4,2
1001e7b4:	42000204 	addi	r8,r8,8
1001e7b8:	3009883a 	mov	r4,r6
1001e7bc:	18fffc04 	addi	r3,r3,-16
1001e7c0:	19400448 	cmpgei	r5,r3,17
1001e7c4:	28002026 	beq	r5,zero,1001e848 <___vfiprintf_internal_r+0xf40>
1001e7c8:	21800044 	addi	r6,r4,1
1001e7cc:	10800404 	addi	r2,r2,16
1001e7d0:	41c00015 	stw	r7,0(r8)
1001e7d4:	43800115 	stw	r14,4(r8)
1001e7d8:	d8800b15 	stw	r2,44(sp)
1001e7dc:	d9800a15 	stw	r6,40(sp)
1001e7e0:	31400208 	cmpgei	r5,r6,8
1001e7e4:	283ff226 	beq	r5,zero,1001e7b0 <___vfiprintf_internal_r+0xea8>
1001e7e8:	d9800904 	addi	r6,sp,36
1001e7ec:	900b883a 	mov	r5,r18
1001e7f0:	9809883a 	mov	r4,r19
1001e7f4:	10001f26 	beq	r2,zero,1001e874 <___vfiprintf_internal_r+0xf6c>
1001e7f8:	d9c00715 	stw	r7,28(sp)
1001e7fc:	d8c00615 	stw	r3,24(sp)
1001e800:	da400515 	stw	r9,20(sp)
1001e804:	db000215 	stw	r12,8(sp)
1001e808:	db400115 	stw	r13,4(sp)
1001e80c:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e810:	103d101e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e814:	d8c00617 	ldw	r3,24(sp)
1001e818:	d9000a17 	ldw	r4,40(sp)
1001e81c:	d8800b17 	ldw	r2,44(sp)
1001e820:	18fffc04 	addi	r3,r3,-16
1001e824:	19400448 	cmpgei	r5,r3,17
1001e828:	8811883a 	mov	r8,r17
1001e82c:	23c00044 	addi	r15,r4,1
1001e830:	d9c00717 	ldw	r7,28(sp)
1001e834:	03800404 	movi	r14,16
1001e838:	da400517 	ldw	r9,20(sp)
1001e83c:	db000217 	ldw	r12,8(sp)
1001e840:	db400117 	ldw	r13,4(sp)
1001e844:	283fe01e 	bne	r5,zero,1001e7c8 <___vfiprintf_internal_r+0xec0>
1001e848:	10c5883a 	add	r2,r2,r3
1001e84c:	40c00115 	stw	r3,4(r8)
1001e850:	41c00015 	stw	r7,0(r8)
1001e854:	d8800b15 	stw	r2,44(sp)
1001e858:	dbc00a15 	stw	r15,40(sp)
1001e85c:	78c00208 	cmpgei	r3,r15,8
1001e860:	18002c1e 	bne	r3,zero,1001e914 <___vfiprintf_internal_r+0x100c>
1001e864:	42000204 	addi	r8,r8,8
1001e868:	79400044 	addi	r5,r15,1
1001e86c:	7809883a 	mov	r4,r15
1001e870:	003e1b06 	br	1001e0e0 <___vfiprintf_internal_r+0x7d8>
1001e874:	0009883a 	mov	r4,zero
1001e878:	03c00044 	movi	r15,1
1001e87c:	8811883a 	mov	r8,r17
1001e880:	003fce06 	br	1001e7bc <___vfiprintf_internal_r+0xeb4>
1001e884:	8540010e 	bge	r16,r21,1001e88c <___vfiprintf_internal_r+0xf84>
1001e888:	a821883a 	mov	r16,r21
1001e88c:	d8800017 	ldw	r2,0(sp)
1001e890:	1405883a 	add	r2,r2,r16
1001e894:	d8800015 	stw	r2,0(sp)
1001e898:	003e5706 	br	1001e1f8 <___vfiprintf_internal_r+0x8f0>
1001e89c:	10008126 	beq	r2,zero,1001eaa4 <___vfiprintf_internal_r+0x119c>
1001e8a0:	d9800904 	addi	r6,sp,36
1001e8a4:	900b883a 	mov	r5,r18
1001e8a8:	9809883a 	mov	r4,r19
1001e8ac:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e8b0:	103ce81e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e8b4:	d9400a17 	ldw	r5,40(sp)
1001e8b8:	d8800b17 	ldw	r2,44(sp)
1001e8bc:	d8c01804 	addi	r3,sp,96
1001e8c0:	29400044 	addi	r5,r5,1
1001e8c4:	8811883a 	mov	r8,r17
1001e8c8:	003e3206 	br	1001e194 <___vfiprintf_internal_r+0x88c>
1001e8cc:	d8000a15 	stw	zero,40(sp)
1001e8d0:	8811883a 	mov	r8,r17
1001e8d4:	003c4e06 	br	1001da10 <___vfiprintf_internal_r+0x108>
1001e8d8:	002d883a 	mov	r22,zero
1001e8dc:	003d4406 	br	1001ddf0 <___vfiprintf_internal_r+0x4e8>
1001e8e0:	68003326 	beq	r13,zero,1001e9b0 <___vfiprintf_internal_r+0x10a8>
1001e8e4:	d8800884 	addi	r2,sp,34
1001e8e8:	d8801615 	stw	r2,88(sp)
1001e8ec:	00800084 	movi	r2,2
1001e8f0:	d8801715 	stw	r2,92(sp)
1001e8f4:	da001804 	addi	r8,sp,96
1001e8f8:	01000044 	movi	r4,1
1001e8fc:	003fa106 	br	1001e784 <___vfiprintf_internal_r+0xe7c>
1001e900:	d8c01804 	addi	r3,sp,96
1001e904:	01400044 	movi	r5,1
1001e908:	0009883a 	mov	r4,zero
1001e90c:	8811883a 	mov	r8,r17
1001e910:	003e1c06 	br	1001e184 <___vfiprintf_internal_r+0x87c>
1001e914:	10003826 	beq	r2,zero,1001e9f8 <___vfiprintf_internal_r+0x10f0>
1001e918:	d9800904 	addi	r6,sp,36
1001e91c:	900b883a 	mov	r5,r18
1001e920:	9809883a 	mov	r4,r19
1001e924:	da400515 	stw	r9,20(sp)
1001e928:	db000215 	stw	r12,8(sp)
1001e92c:	db400115 	stw	r13,4(sp)
1001e930:	001d7fc0 	call	1001d7fc <__sprint_r.part.0>
1001e934:	103cc71e 	bne	r2,zero,1001dc54 <___vfiprintf_internal_r+0x34c>
1001e938:	d9000a17 	ldw	r4,40(sp)
1001e93c:	d8800b17 	ldw	r2,44(sp)
1001e940:	8811883a 	mov	r8,r17
1001e944:	21400044 	addi	r5,r4,1
1001e948:	da400517 	ldw	r9,20(sp)
1001e94c:	db000217 	ldw	r12,8(sp)
1001e950:	db400117 	ldw	r13,4(sp)
1001e954:	003de206 	br	1001e0e0 <___vfiprintf_internal_r+0x7d8>
1001e958:	e029883a 	mov	r20,fp
1001e95c:	003c3106 	br	1001da24 <___vfiprintf_internal_r+0x11c>
1001e960:	882f883a 	mov	r23,r17
1001e964:	003ecf06 	br	1001e4a4 <___vfiprintf_internal_r+0xb9c>
1001e968:	31400044 	addi	r5,r6,1
1001e96c:	68c00204 	addi	r3,r13,8
1001e970:	3009883a 	mov	r4,r6
1001e974:	6811883a 	mov	r8,r13
1001e978:	003e0406 	br	1001e18c <___vfiprintf_internal_r+0x884>
1001e97c:	00c00c04 	movi	r3,48
1001e980:	d88008c5 	stb	r2,35(sp)
1001e984:	d8c00885 	stb	r3,34(sp)
1001e988:	63000094 	ori	r12,r12,2
1001e98c:	00800084 	movi	r2,2
1001e990:	003d3606 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001e994:	d9400017 	ldw	r5,0(sp)
1001e998:	20800017 	ldw	r2,0(r4)
1001e99c:	d8c00315 	stw	r3,12(sp)
1001e9a0:	2809d7fa 	srai	r4,r5,31
1001e9a4:	11400015 	stw	r5,0(r2)
1001e9a8:	11000115 	stw	r4,4(r2)
1001e9ac:	003bff06 	br	1001d9ac <___vfiprintf_internal_r+0xa4>
1001e9b0:	0009883a 	mov	r4,zero
1001e9b4:	d8c01804 	addi	r3,sp,96
1001e9b8:	01400044 	movi	r5,1
1001e9bc:	8811883a 	mov	r8,r17
1001e9c0:	003df006 	br	1001e184 <___vfiprintf_internal_r+0x87c>
1001e9c4:	0421c83a 	sub	r16,zero,r16
1001e9c8:	ddc00315 	stw	r23,12(sp)
1001e9cc:	003cdb06 	br	1001dd3c <___vfiprintf_internal_r+0x434>
1001e9d0:	b809883a 	mov	r4,r23
1001e9d4:	da000215 	stw	r8,8(sp)
1001e9d8:	db000115 	stw	r12,4(sp)
1001e9dc:	00178f00 	call	100178f0 <strlen>
1001e9e0:	102d883a 	mov	r22,r2
1001e9e4:	102b883a 	mov	r21,r2
1001e9e8:	dd000315 	stw	r20,12(sp)
1001e9ec:	db000117 	ldw	r12,4(sp)
1001e9f0:	da000217 	ldw	r8,8(sp)
1001e9f4:	003dad06 	br	1001e0ac <___vfiprintf_internal_r+0x7a4>
1001e9f8:	d8c00847 	ldb	r3,33(sp)
1001e9fc:	1800551e 	bne	r3,zero,1001eb54 <___vfiprintf_internal_r+0x124c>
1001ea00:	683f581e 	bne	r13,zero,1001e764 <___vfiprintf_internal_r+0xe5c>
1001ea04:	0009883a 	mov	r4,zero
1001ea08:	d8c01804 	addi	r3,sp,96
1001ea0c:	01400044 	movi	r5,1
1001ea10:	8811883a 	mov	r8,r17
1001ea14:	003ddd06 	br	1001e18c <___vfiprintf_internal_r+0x884>
1001ea18:	d8800317 	ldw	r2,12(sp)
1001ea1c:	10800017 	ldw	r2,0(r2)
1001ea20:	d8c00315 	stw	r3,12(sp)
1001ea24:	d8c00017 	ldw	r3,0(sp)
1001ea28:	10c00015 	stw	r3,0(r2)
1001ea2c:	003bdf06 	br	1001d9ac <___vfiprintf_internal_r+0xa4>
1001ea30:	882f883a 	mov	r23,r17
1001ea34:	00000206 	br	1001ea40 <___vfiprintf_internal_r+0x1138>
1001ea38:	102b883a 	mov	r21,r2
1001ea3c:	182d883a 	mov	r22,r3
1001ea40:	a809883a 	mov	r4,r21
1001ea44:	b00b883a 	mov	r5,r22
1001ea48:	01800284 	movi	r6,10
1001ea4c:	000f883a 	mov	r7,zero
1001ea50:	db400615 	stw	r13,24(sp)
1001ea54:	da000515 	stw	r8,20(sp)
1001ea58:	da400215 	stw	r9,8(sp)
1001ea5c:	db000115 	stw	r12,4(sp)
1001ea60:	001f9140 	call	1001f914 <__umoddi3>
1001ea64:	10800c04 	addi	r2,r2,48
1001ea68:	bdffffc4 	addi	r23,r23,-1
1001ea6c:	a809883a 	mov	r4,r21
1001ea70:	b00b883a 	mov	r5,r22
1001ea74:	b8800005 	stb	r2,0(r23)
1001ea78:	01800284 	movi	r6,10
1001ea7c:	000f883a 	mov	r7,zero
1001ea80:	001f37c0 	call	1001f37c <__udivdi3>
1001ea84:	db000117 	ldw	r12,4(sp)
1001ea88:	da400217 	ldw	r9,8(sp)
1001ea8c:	da000517 	ldw	r8,20(sp)
1001ea90:	db400617 	ldw	r13,24(sp)
1001ea94:	b03fe81e 	bne	r22,zero,1001ea38 <___vfiprintf_internal_r+0x1130>
1001ea98:	ad4002a8 	cmpgeui	r21,r21,10
1001ea9c:	a83fe61e 	bne	r21,zero,1001ea38 <___vfiprintf_internal_r+0x1130>
1001eaa0:	003e9606 	br	1001e4fc <___vfiprintf_internal_r+0xbf4>
1001eaa4:	00c00044 	movi	r3,1
1001eaa8:	d8c00a15 	stw	r3,40(sp)
1001eaac:	b005883a 	mov	r2,r22
1001eab0:	ddc01615 	stw	r23,88(sp)
1001eab4:	dd801715 	stw	r22,92(sp)
1001eab8:	dd800b15 	stw	r22,44(sp)
1001eabc:	d8c01804 	addi	r3,sp,96
1001eac0:	003dc306 	br	1001e1d0 <___vfiprintf_internal_r+0x8c8>
1001eac4:	10c00060 	cmpeqi	r3,r2,1
1001eac8:	a019883a 	mov	r12,r20
1001eacc:	183e3926 	beq	r3,zero,1001e3b4 <___vfiprintf_internal_r+0xaac>
1001ead0:	003e6f06 	br	1001e490 <___vfiprintf_internal_r+0xb88>
1001ead4:	e0800043 	ldbu	r2,1(fp)
1001ead8:	63000814 	ori	r12,r12,32
1001eadc:	e7000044 	addi	fp,fp,1
1001eae0:	10803fcc 	andi	r2,r2,255
1001eae4:	1080201c 	xori	r2,r2,128
1001eae8:	10bfe004 	addi	r2,r2,-128
1001eaec:	003bd506 	br	1001da44 <___vfiprintf_internal_r+0x13c>
1001eaf0:	488001f0 	cmpltui	r2,r9,7
1001eaf4:	482d883a 	mov	r22,r9
1001eaf8:	1000011e 	bne	r2,zero,1001eb00 <___vfiprintf_internal_r+0x11f8>
1001eafc:	05800184 	movi	r22,6
1001eb00:	05c400b4 	movhi	r23,4098
1001eb04:	b02b883a 	mov	r21,r22
1001eb08:	dd000315 	stw	r20,12(sp)
1001eb0c:	bdd8a504 	addi	r23,r23,25236
1001eb10:	003d6606 	br	1001e0ac <___vfiprintf_internal_r+0x7a4>
1001eb14:	d8800315 	stw	r2,12(sp)
1001eb18:	002d883a 	mov	r22,zero
1001eb1c:	00800044 	movi	r2,1
1001eb20:	003cd206 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001eb24:	d8800315 	stw	r2,12(sp)
1001eb28:	002d883a 	mov	r22,zero
1001eb2c:	0005883a 	mov	r2,zero
1001eb30:	003cce06 	br	1001de6c <___vfiprintf_internal_r+0x564>
1001eb34:	1809883a 	mov	r4,r3
1001eb38:	39d99d04 	addi	r7,r7,26228
1001eb3c:	003ede06 	br	1001e6b8 <___vfiprintf_internal_r+0xdb0>
1001eb40:	d8c01804 	addi	r3,sp,96
1001eb44:	01400044 	movi	r5,1
1001eb48:	0009883a 	mov	r4,zero
1001eb4c:	8811883a 	mov	r8,r17
1001eb50:	003d8e06 	br	1001e18c <___vfiprintf_internal_r+0x884>
1001eb54:	d8800844 	addi	r2,sp,33
1001eb58:	d8801615 	stw	r2,88(sp)
1001eb5c:	00800044 	movi	r2,1
1001eb60:	d8801715 	stw	r2,92(sp)
1001eb64:	d8c01804 	addi	r3,sp,96
1001eb68:	01400044 	movi	r5,1
1001eb6c:	003d6806 	br	1001e110 <___vfiprintf_internal_r+0x808>
1001eb70:	d9800845 	stb	r6,33(sp)
1001eb74:	003c5506 	br	1001dccc <___vfiprintf_internal_r+0x3c4>
1001eb78:	482b883a 	mov	r21,r9
1001eb7c:	dd000315 	stw	r20,12(sp)
1001eb80:	482d883a 	mov	r22,r9
1001eb84:	003d4906 	br	1001e0ac <___vfiprintf_internal_r+0x7a4>
1001eb88:	d9800845 	stb	r6,33(sp)
1001eb8c:	003cd906 	br	1001def4 <___vfiprintf_internal_r+0x5ec>
1001eb90:	d9800845 	stb	r6,33(sp)
1001eb94:	003ce906 	br	1001df3c <___vfiprintf_internal_r+0x634>
1001eb98:	d9800845 	stb	r6,33(sp)
1001eb9c:	003c8a06 	br	1001ddc8 <___vfiprintf_internal_r+0x4c0>
1001eba0:	d9800845 	stb	r6,33(sp)
1001eba4:	003dd206 	br	1001e2f0 <___vfiprintf_internal_r+0x9e8>
1001eba8:	d9800845 	stb	r6,33(sp)
1001ebac:	003ddd06 	br	1001e324 <___vfiprintf_internal_r+0xa1c>
1001ebb0:	301f883a 	mov	r15,r6
1001ebb4:	39d9a104 	addi	r7,r7,26244
1001ebb8:	003f2306 	br	1001e848 <___vfiprintf_internal_r+0xf40>
1001ebbc:	d9800845 	stb	r6,33(sp)
1001ebc0:	003d1606 	br	1001e01c <___vfiprintf_internal_r+0x714>
1001ebc4:	d9800845 	stb	r6,33(sp)
1001ebc8:	003d0406 	br	1001dfdc <___vfiprintf_internal_r+0x6d4>
1001ebcc:	d9800845 	stb	r6,33(sp)
1001ebd0:	003cb806 	br	1001deb4 <___vfiprintf_internal_r+0x5ac>
1001ebd4:	d9800845 	stb	r6,33(sp)
1001ebd8:	003ddf06 	br	1001e358 <___vfiprintf_internal_r+0xa50>
1001ebdc:	29800044 	addi	r6,r5,1
1001ebe0:	39d9a104 	addi	r7,r7,26244
1001ebe4:	003db106 	br	1001e2ac <___vfiprintf_internal_r+0x9a4>
1001ebe8:	181b883a 	mov	r13,r3
1001ebec:	280d883a 	mov	r6,r5
1001ebf0:	39d99d04 	addi	r7,r7,26228
1001ebf4:	003e7306 	br	1001e5c4 <___vfiprintf_internal_r+0xcbc>
1001ebf8:	00bfffc4 	movi	r2,-1
1001ebfc:	d8800015 	stw	r2,0(sp)
1001ec00:	003c1706 	br	1001dc60 <___vfiprintf_internal_r+0x358>
1001ec04:	d8800317 	ldw	r2,12(sp)
1001ec08:	12400017 	ldw	r9,0(r2)
1001ec0c:	15c00104 	addi	r23,r2,4
1001ec10:	4800010e 	bge	r9,zero,1001ec18 <___vfiprintf_internal_r+0x1310>
1001ec14:	027fffc4 	movi	r9,-1
1001ec18:	e0800043 	ldbu	r2,1(fp)
1001ec1c:	ddc00315 	stw	r23,12(sp)
1001ec20:	2039883a 	mov	fp,r4
1001ec24:	10803fcc 	andi	r2,r2,255
1001ec28:	1080201c 	xori	r2,r2,128
1001ec2c:	10bfe004 	addi	r2,r2,-128
1001ec30:	003b8406 	br	1001da44 <___vfiprintf_internal_r+0x13c>

1001ec34 <__vfiprintf_internal>:
1001ec34:	008400f4 	movhi	r2,4099
1001ec38:	300f883a 	mov	r7,r6
1001ec3c:	280d883a 	mov	r6,r5
1001ec40:	200b883a 	mov	r5,r4
1001ec44:	11219817 	ldw	r4,-31136(r2)
1001ec48:	001d9081 	jmpi	1001d908 <___vfiprintf_internal_r>

1001ec4c <__sbprintf>:
1001ec4c:	2880030b 	ldhu	r2,12(r5)
1001ec50:	2b001917 	ldw	r12,100(r5)
1001ec54:	2ac0038b 	ldhu	r11,14(r5)
1001ec58:	2a800717 	ldw	r10,28(r5)
1001ec5c:	2a400917 	ldw	r9,36(r5)
1001ec60:	defee204 	addi	sp,sp,-1144
1001ec64:	da001a04 	addi	r8,sp,104
1001ec68:	00c10004 	movi	r3,1024
1001ec6c:	dc011a15 	stw	r16,1128(sp)
1001ec70:	10bfff4c 	andi	r2,r2,65533
1001ec74:	2821883a 	mov	r16,r5
1001ec78:	d80b883a 	mov	r5,sp
1001ec7c:	dc811c15 	stw	r18,1136(sp)
1001ec80:	dc411b15 	stw	r17,1132(sp)
1001ec84:	dfc11d15 	stw	ra,1140(sp)
1001ec88:	2025883a 	mov	r18,r4
1001ec8c:	d880030d 	sth	r2,12(sp)
1001ec90:	db001915 	stw	r12,100(sp)
1001ec94:	dac0038d 	sth	r11,14(sp)
1001ec98:	da800715 	stw	r10,28(sp)
1001ec9c:	da400915 	stw	r9,36(sp)
1001eca0:	da000015 	stw	r8,0(sp)
1001eca4:	da000415 	stw	r8,16(sp)
1001eca8:	d8c00215 	stw	r3,8(sp)
1001ecac:	d8c00515 	stw	r3,20(sp)
1001ecb0:	d8000615 	stw	zero,24(sp)
1001ecb4:	001d9080 	call	1001d908 <___vfiprintf_internal_r>
1001ecb8:	1023883a 	mov	r17,r2
1001ecbc:	10000d0e 	bge	r2,zero,1001ecf4 <__sbprintf+0xa8>
1001ecc0:	d880030b 	ldhu	r2,12(sp)
1001ecc4:	1080100c 	andi	r2,r2,64
1001ecc8:	10000326 	beq	r2,zero,1001ecd8 <__sbprintf+0x8c>
1001eccc:	8080030b 	ldhu	r2,12(r16)
1001ecd0:	10801014 	ori	r2,r2,64
1001ecd4:	8080030d 	sth	r2,12(r16)
1001ecd8:	8805883a 	mov	r2,r17
1001ecdc:	dfc11d17 	ldw	ra,1140(sp)
1001ece0:	dc811c17 	ldw	r18,1136(sp)
1001ece4:	dc411b17 	ldw	r17,1132(sp)
1001ece8:	dc011a17 	ldw	r16,1128(sp)
1001ecec:	dec11e04 	addi	sp,sp,1144
1001ecf0:	f800283a 	ret
1001ecf4:	d80b883a 	mov	r5,sp
1001ecf8:	9009883a 	mov	r4,r18
1001ecfc:	00151ac0 	call	100151ac <_fflush_r>
1001ed00:	103fef26 	beq	r2,zero,1001ecc0 <__sbprintf+0x74>
1001ed04:	047fffc4 	movi	r17,-1
1001ed08:	003fed06 	br	1001ecc0 <__sbprintf+0x74>

1001ed0c <__swbuf_r>:
1001ed0c:	defffb04 	addi	sp,sp,-20
1001ed10:	dc800215 	stw	r18,8(sp)
1001ed14:	dc400115 	stw	r17,4(sp)
1001ed18:	dc000015 	stw	r16,0(sp)
1001ed1c:	dfc00415 	stw	ra,16(sp)
1001ed20:	dcc00315 	stw	r19,12(sp)
1001ed24:	2023883a 	mov	r17,r4
1001ed28:	2825883a 	mov	r18,r5
1001ed2c:	3021883a 	mov	r16,r6
1001ed30:	20000226 	beq	r4,zero,1001ed3c <__swbuf_r+0x30>
1001ed34:	20800e17 	ldw	r2,56(r4)
1001ed38:	10003e26 	beq	r2,zero,1001ee34 <__swbuf_r+0x128>
1001ed3c:	80800617 	ldw	r2,24(r16)
1001ed40:	80c0030b 	ldhu	r3,12(r16)
1001ed44:	80800215 	stw	r2,8(r16)
1001ed48:	1880020c 	andi	r2,r3,8
1001ed4c:	10001f26 	beq	r2,zero,1001edcc <__swbuf_r+0xc0>
1001ed50:	80800417 	ldw	r2,16(r16)
1001ed54:	10001d26 	beq	r2,zero,1001edcc <__swbuf_r+0xc0>
1001ed58:	1908000c 	andi	r4,r3,8192
1001ed5c:	94c03fcc 	andi	r19,r18,255
1001ed60:	20002326 	beq	r4,zero,1001edf0 <__swbuf_r+0xe4>
1001ed64:	80c00017 	ldw	r3,0(r16)
1001ed68:	81000517 	ldw	r4,20(r16)
1001ed6c:	1885c83a 	sub	r2,r3,r2
1001ed70:	1100290e 	bge	r2,r4,1001ee18 <__swbuf_r+0x10c>
1001ed74:	10800044 	addi	r2,r2,1
1001ed78:	81000217 	ldw	r4,8(r16)
1001ed7c:	19400044 	addi	r5,r3,1
1001ed80:	81400015 	stw	r5,0(r16)
1001ed84:	213fffc4 	addi	r4,r4,-1
1001ed88:	81000215 	stw	r4,8(r16)
1001ed8c:	1c800005 	stb	r18,0(r3)
1001ed90:	80c00517 	ldw	r3,20(r16)
1001ed94:	18802926 	beq	r3,r2,1001ee3c <__swbuf_r+0x130>
1001ed98:	8080030b 	ldhu	r2,12(r16)
1001ed9c:	1080004c 	andi	r2,r2,1
1001eda0:	10000226 	beq	r2,zero,1001edac <__swbuf_r+0xa0>
1001eda4:	98800298 	cmpnei	r2,r19,10
1001eda8:	10002426 	beq	r2,zero,1001ee3c <__swbuf_r+0x130>
1001edac:	9805883a 	mov	r2,r19
1001edb0:	dfc00417 	ldw	ra,16(sp)
1001edb4:	dcc00317 	ldw	r19,12(sp)
1001edb8:	dc800217 	ldw	r18,8(sp)
1001edbc:	dc400117 	ldw	r17,4(sp)
1001edc0:	dc000017 	ldw	r16,0(sp)
1001edc4:	dec00504 	addi	sp,sp,20
1001edc8:	f800283a 	ret
1001edcc:	800b883a 	mov	r5,r16
1001edd0:	8809883a 	mov	r4,r17
1001edd4:	0019ea80 	call	10019ea8 <__swsetup_r>
1001edd8:	10001c1e 	bne	r2,zero,1001ee4c <__swbuf_r+0x140>
1001eddc:	80c0030b 	ldhu	r3,12(r16)
1001ede0:	80800417 	ldw	r2,16(r16)
1001ede4:	94c03fcc 	andi	r19,r18,255
1001ede8:	1908000c 	andi	r4,r3,8192
1001edec:	203fdd1e 	bne	r4,zero,1001ed64 <__swbuf_r+0x58>
1001edf0:	81001917 	ldw	r4,100(r16)
1001edf4:	18c80014 	ori	r3,r3,8192
1001edf8:	0177ffc4 	movi	r5,-8193
1001edfc:	2148703a 	and	r4,r4,r5
1001ee00:	80c0030d 	sth	r3,12(r16)
1001ee04:	80c00017 	ldw	r3,0(r16)
1001ee08:	81001915 	stw	r4,100(r16)
1001ee0c:	81000517 	ldw	r4,20(r16)
1001ee10:	1885c83a 	sub	r2,r3,r2
1001ee14:	113fd716 	blt	r2,r4,1001ed74 <__swbuf_r+0x68>
1001ee18:	800b883a 	mov	r5,r16
1001ee1c:	8809883a 	mov	r4,r17
1001ee20:	00151ac0 	call	100151ac <_fflush_r>
1001ee24:	1000091e 	bne	r2,zero,1001ee4c <__swbuf_r+0x140>
1001ee28:	80c00017 	ldw	r3,0(r16)
1001ee2c:	00800044 	movi	r2,1
1001ee30:	003fd106 	br	1001ed78 <__swbuf_r+0x6c>
1001ee34:	00155300 	call	10015530 <__sinit>
1001ee38:	003fc006 	br	1001ed3c <__swbuf_r+0x30>
1001ee3c:	800b883a 	mov	r5,r16
1001ee40:	8809883a 	mov	r4,r17
1001ee44:	00151ac0 	call	100151ac <_fflush_r>
1001ee48:	103fd826 	beq	r2,zero,1001edac <__swbuf_r+0xa0>
1001ee4c:	04ffffc4 	movi	r19,-1
1001ee50:	003fd606 	br	1001edac <__swbuf_r+0xa0>

1001ee54 <__swbuf>:
1001ee54:	008400f4 	movhi	r2,4099
1001ee58:	280d883a 	mov	r6,r5
1001ee5c:	200b883a 	mov	r5,r4
1001ee60:	11219817 	ldw	r4,-31136(r2)
1001ee64:	001ed0c1 	jmpi	1001ed0c <__swbuf_r>

1001ee68 <_calloc_r>:
1001ee68:	298b383a 	mul	r5,r5,r6
1001ee6c:	deffff04 	addi	sp,sp,-4
1001ee70:	dfc00015 	stw	ra,0(sp)
1001ee74:	00162cc0 	call	100162cc <_malloc_r>
1001ee78:	1007883a 	mov	r3,r2
1001ee7c:	10000c26 	beq	r2,zero,1001eeb0 <_calloc_r+0x48>
1001ee80:	11bfff17 	ldw	r6,-4(r2)
1001ee84:	00bfff04 	movi	r2,-4
1001ee88:	308c703a 	and	r6,r6,r2
1001ee8c:	31bfff04 	addi	r6,r6,-4
1001ee90:	30800968 	cmpgeui	r2,r6,37
1001ee94:	1000141e 	bne	r2,zero,1001eee8 <_calloc_r+0x80>
1001ee98:	30800530 	cmpltui	r2,r6,20
1001ee9c:	10000826 	beq	r2,zero,1001eec0 <_calloc_r+0x58>
1001eea0:	1805883a 	mov	r2,r3
1001eea4:	10000015 	stw	zero,0(r2)
1001eea8:	10000115 	stw	zero,4(r2)
1001eeac:	10000215 	stw	zero,8(r2)
1001eeb0:	1805883a 	mov	r2,r3
1001eeb4:	dfc00017 	ldw	ra,0(sp)
1001eeb8:	dec00104 	addi	sp,sp,4
1001eebc:	f800283a 	ret
1001eec0:	18000015 	stw	zero,0(r3)
1001eec4:	18000115 	stw	zero,4(r3)
1001eec8:	30800728 	cmpgeui	r2,r6,28
1001eecc:	10000e26 	beq	r2,zero,1001ef08 <_calloc_r+0xa0>
1001eed0:	18000215 	stw	zero,8(r3)
1001eed4:	18000315 	stw	zero,12(r3)
1001eed8:	31800920 	cmpeqi	r6,r6,36
1001eedc:	30000c1e 	bne	r6,zero,1001ef10 <_calloc_r+0xa8>
1001eee0:	18800404 	addi	r2,r3,16
1001eee4:	003fef06 	br	1001eea4 <_calloc_r+0x3c>
1001eee8:	1809883a 	mov	r4,r3
1001eeec:	000b883a 	mov	r5,zero
1001eef0:	0016e600 	call	10016e60 <memset>
1001eef4:	1007883a 	mov	r3,r2
1001eef8:	1805883a 	mov	r2,r3
1001eefc:	dfc00017 	ldw	ra,0(sp)
1001ef00:	dec00104 	addi	sp,sp,4
1001ef04:	f800283a 	ret
1001ef08:	18800204 	addi	r2,r3,8
1001ef0c:	003fe506 	br	1001eea4 <_calloc_r+0x3c>
1001ef10:	18000415 	stw	zero,16(r3)
1001ef14:	18800604 	addi	r2,r3,24
1001ef18:	18000515 	stw	zero,20(r3)
1001ef1c:	003fe106 	br	1001eea4 <_calloc_r+0x3c>

1001ef20 <__fputwc>:
1001ef20:	defff904 	addi	sp,sp,-28
1001ef24:	dcc00415 	stw	r19,16(sp)
1001ef28:	dc800315 	stw	r18,12(sp)
1001ef2c:	dc000115 	stw	r16,4(sp)
1001ef30:	dfc00615 	stw	ra,24(sp)
1001ef34:	dd000515 	stw	r20,20(sp)
1001ef38:	dc400215 	stw	r17,8(sp)
1001ef3c:	2025883a 	mov	r18,r4
1001ef40:	2827883a 	mov	r19,r5
1001ef44:	3021883a 	mov	r16,r6
1001ef48:	001f1800 	call	1001f180 <__locale_mb_cur_max>
1001ef4c:	10800058 	cmpnei	r2,r2,1
1001ef50:	1000071e 	bne	r2,zero,1001ef70 <__fputwc+0x50>
1001ef54:	98bfffc4 	addi	r2,r19,-1
1001ef58:	10803fe8 	cmpgeui	r2,r2,255
1001ef5c:	1000041e 	bne	r2,zero,1001ef70 <__fputwc+0x50>
1001ef60:	980b883a 	mov	r5,r19
1001ef64:	dcc000c5 	stb	r19,3(sp)
1001ef68:	05000044 	movi	r20,1
1001ef6c:	00000a06 	br	1001ef98 <__fputwc+0x78>
1001ef70:	81c01704 	addi	r7,r16,92
1001ef74:	980d883a 	mov	r6,r19
1001ef78:	d94000c4 	addi	r5,sp,3
1001ef7c:	9009883a 	mov	r4,r18
1001ef80:	001f1f00 	call	1001f1f0 <_wcrtomb_r>
1001ef84:	1029883a 	mov	r20,r2
1001ef88:	10bfffd8 	cmpnei	r2,r2,-1
1001ef8c:	10003426 	beq	r2,zero,1001f060 <__fputwc+0x140>
1001ef90:	a0002926 	beq	r20,zero,1001f038 <__fputwc+0x118>
1001ef94:	d94000c3 	ldbu	r5,3(sp)
1001ef98:	0023883a 	mov	r17,zero
1001ef9c:	00000a06 	br	1001efc8 <__fputwc+0xa8>
1001efa0:	80800017 	ldw	r2,0(r16)
1001efa4:	11400005 	stb	r5,0(r2)
1001efa8:	80800017 	ldw	r2,0(r16)
1001efac:	10800044 	addi	r2,r2,1
1001efb0:	80800015 	stw	r2,0(r16)
1001efb4:	8c400044 	addi	r17,r17,1
1001efb8:	d88000c4 	addi	r2,sp,3
1001efbc:	1445883a 	add	r2,r2,r17
1001efc0:	8d001d2e 	bgeu	r17,r20,1001f038 <__fputwc+0x118>
1001efc4:	11400003 	ldbu	r5,0(r2)
1001efc8:	80800217 	ldw	r2,8(r16)
1001efcc:	10bfffc4 	addi	r2,r2,-1
1001efd0:	80800215 	stw	r2,8(r16)
1001efd4:	103ff20e 	bge	r2,zero,1001efa0 <__fputwc+0x80>
1001efd8:	80c00617 	ldw	r3,24(r16)
1001efdc:	10c01016 	blt	r2,r3,1001f020 <__fputwc+0x100>
1001efe0:	80800017 	ldw	r2,0(r16)
1001efe4:	11400005 	stb	r5,0(r2)
1001efe8:	80800017 	ldw	r2,0(r16)
1001efec:	10c00003 	ldbu	r3,0(r2)
1001eff0:	10800044 	addi	r2,r2,1
1001eff4:	18c002a0 	cmpeqi	r3,r3,10
1001eff8:	183fed26 	beq	r3,zero,1001efb0 <__fputwc+0x90>
1001effc:	800d883a 	mov	r6,r16
1001f000:	01400284 	movi	r5,10
1001f004:	9009883a 	mov	r4,r18
1001f008:	001ed0c0 	call	1001ed0c <__swbuf_r>
1001f00c:	10bfffe0 	cmpeqi	r2,r2,-1
1001f010:	10803fcc 	andi	r2,r2,255
1001f014:	103fe726 	beq	r2,zero,1001efb4 <__fputwc+0x94>
1001f018:	053fffc4 	movi	r20,-1
1001f01c:	00000706 	br	1001f03c <__fputwc+0x11c>
1001f020:	29403fcc 	andi	r5,r5,255
1001f024:	800d883a 	mov	r6,r16
1001f028:	9009883a 	mov	r4,r18
1001f02c:	001ed0c0 	call	1001ed0c <__swbuf_r>
1001f030:	10bfffe0 	cmpeqi	r2,r2,-1
1001f034:	003ff606 	br	1001f010 <__fputwc+0xf0>
1001f038:	9829883a 	mov	r20,r19
1001f03c:	a005883a 	mov	r2,r20
1001f040:	dfc00617 	ldw	ra,24(sp)
1001f044:	dd000517 	ldw	r20,20(sp)
1001f048:	dcc00417 	ldw	r19,16(sp)
1001f04c:	dc800317 	ldw	r18,12(sp)
1001f050:	dc400217 	ldw	r17,8(sp)
1001f054:	dc000117 	ldw	r16,4(sp)
1001f058:	dec00704 	addi	sp,sp,28
1001f05c:	f800283a 	ret
1001f060:	8080030b 	ldhu	r2,12(r16)
1001f064:	10801014 	ori	r2,r2,64
1001f068:	8080030d 	sth	r2,12(r16)
1001f06c:	003ff306 	br	1001f03c <__fputwc+0x11c>

1001f070 <_fputwc_r>:
1001f070:	3080030b 	ldhu	r2,12(r6)
1001f074:	10c8000c 	andi	r3,r2,8192
1001f078:	1800051e 	bne	r3,zero,1001f090 <_fputwc_r+0x20>
1001f07c:	30c01917 	ldw	r3,100(r6)
1001f080:	10880014 	ori	r2,r2,8192
1001f084:	3080030d 	sth	r2,12(r6)
1001f088:	18880014 	ori	r2,r3,8192
1001f08c:	30801915 	stw	r2,100(r6)
1001f090:	001ef201 	jmpi	1001ef20 <__fputwc>

1001f094 <fputwc>:
1001f094:	defffc04 	addi	sp,sp,-16
1001f098:	008400f4 	movhi	r2,4099
1001f09c:	dc000115 	stw	r16,4(sp)
1001f0a0:	14219817 	ldw	r16,-31136(r2)
1001f0a4:	dc400215 	stw	r17,8(sp)
1001f0a8:	dfc00315 	stw	ra,12(sp)
1001f0ac:	2023883a 	mov	r17,r4
1001f0b0:	80000226 	beq	r16,zero,1001f0bc <fputwc+0x28>
1001f0b4:	80800e17 	ldw	r2,56(r16)
1001f0b8:	10001026 	beq	r2,zero,1001f0fc <fputwc+0x68>
1001f0bc:	2880030b 	ldhu	r2,12(r5)
1001f0c0:	10c8000c 	andi	r3,r2,8192
1001f0c4:	1800051e 	bne	r3,zero,1001f0dc <fputwc+0x48>
1001f0c8:	28c01917 	ldw	r3,100(r5)
1001f0cc:	10880014 	ori	r2,r2,8192
1001f0d0:	2880030d 	sth	r2,12(r5)
1001f0d4:	18880014 	ori	r2,r3,8192
1001f0d8:	28801915 	stw	r2,100(r5)
1001f0dc:	280d883a 	mov	r6,r5
1001f0e0:	8009883a 	mov	r4,r16
1001f0e4:	880b883a 	mov	r5,r17
1001f0e8:	dfc00317 	ldw	ra,12(sp)
1001f0ec:	dc400217 	ldw	r17,8(sp)
1001f0f0:	dc000117 	ldw	r16,4(sp)
1001f0f4:	dec00404 	addi	sp,sp,16
1001f0f8:	001ef201 	jmpi	1001ef20 <__fputwc>
1001f0fc:	8009883a 	mov	r4,r16
1001f100:	d9400015 	stw	r5,0(sp)
1001f104:	00155300 	call	10015530 <__sinit>
1001f108:	d9400017 	ldw	r5,0(sp)
1001f10c:	003feb06 	br	1001f0bc <fputwc+0x28>

1001f110 <_setlocale_r>:
1001f110:	30001826 	beq	r6,zero,1001f174 <_setlocale_r+0x64>
1001f114:	014400b4 	movhi	r5,4098
1001f118:	defffe04 	addi	sp,sp,-8
1001f11c:	2959a604 	addi	r5,r5,26264
1001f120:	3009883a 	mov	r4,r6
1001f124:	dc000015 	stw	r16,0(sp)
1001f128:	dfc00115 	stw	ra,4(sp)
1001f12c:	3021883a 	mov	r16,r6
1001f130:	00178180 	call	10017818 <strcmp>
1001f134:	1000061e 	bne	r2,zero,1001f150 <_setlocale_r+0x40>
1001f138:	008400b4 	movhi	r2,4098
1001f13c:	1099a504 	addi	r2,r2,26260
1001f140:	dfc00117 	ldw	ra,4(sp)
1001f144:	dc000017 	ldw	r16,0(sp)
1001f148:	dec00204 	addi	sp,sp,8
1001f14c:	f800283a 	ret
1001f150:	014400b4 	movhi	r5,4098
1001f154:	2959a504 	addi	r5,r5,26260
1001f158:	8009883a 	mov	r4,r16
1001f15c:	00178180 	call	10017818 <strcmp>
1001f160:	103ff526 	beq	r2,zero,1001f138 <_setlocale_r+0x28>
1001f164:	80800003 	ldbu	r2,0(r16)
1001f168:	103ff326 	beq	r2,zero,1001f138 <_setlocale_r+0x28>
1001f16c:	0005883a 	mov	r2,zero
1001f170:	003ff306 	br	1001f140 <_setlocale_r+0x30>
1001f174:	008400b4 	movhi	r2,4098
1001f178:	1099a504 	addi	r2,r2,26260
1001f17c:	f800283a 	ret

1001f180 <__locale_mb_cur_max>:
1001f180:	008400b4 	movhi	r2,4098
1001f184:	109cf407 	ldb	r2,29648(r2)
1001f188:	f800283a 	ret

1001f18c <setlocale>:
1001f18c:	008400f4 	movhi	r2,4099
1001f190:	280d883a 	mov	r6,r5
1001f194:	200b883a 	mov	r5,r4
1001f198:	11219817 	ldw	r4,-31136(r2)
1001f19c:	001f1101 	jmpi	1001f110 <_setlocale_r>

1001f1a0 <_mbtowc_r>:
1001f1a0:	008400b4 	movhi	r2,4098
1001f1a4:	109ce317 	ldw	r2,29580(r2)
1001f1a8:	1000683a 	jmp	r2

1001f1ac <__ascii_mbtowc>:
1001f1ac:	deffff04 	addi	sp,sp,-4
1001f1b0:	28000826 	beq	r5,zero,1001f1d4 <__ascii_mbtowc+0x28>
1001f1b4:	30000926 	beq	r6,zero,1001f1dc <__ascii_mbtowc+0x30>
1001f1b8:	38000b26 	beq	r7,zero,1001f1e8 <__ascii_mbtowc+0x3c>
1001f1bc:	30800003 	ldbu	r2,0(r6)
1001f1c0:	28800015 	stw	r2,0(r5)
1001f1c4:	30800003 	ldbu	r2,0(r6)
1001f1c8:	1004c03a 	cmpne	r2,r2,zero
1001f1cc:	dec00104 	addi	sp,sp,4
1001f1d0:	f800283a 	ret
1001f1d4:	d80b883a 	mov	r5,sp
1001f1d8:	303ff71e 	bne	r6,zero,1001f1b8 <__ascii_mbtowc+0xc>
1001f1dc:	0005883a 	mov	r2,zero
1001f1e0:	dec00104 	addi	sp,sp,4
1001f1e4:	f800283a 	ret
1001f1e8:	00bfff84 	movi	r2,-2
1001f1ec:	003ff706 	br	1001f1cc <__ascii_mbtowc+0x20>

1001f1f0 <_wcrtomb_r>:
1001f1f0:	defffa04 	addi	sp,sp,-24
1001f1f4:	dc400415 	stw	r17,16(sp)
1001f1f8:	dc000315 	stw	r16,12(sp)
1001f1fc:	008400b4 	movhi	r2,4098
1001f200:	dfc00515 	stw	ra,20(sp)
1001f204:	2021883a 	mov	r16,r4
1001f208:	3823883a 	mov	r17,r7
1001f20c:	109ce217 	ldw	r2,29576(r2)
1001f210:	28000826 	beq	r5,zero,1001f234 <_wcrtomb_r+0x44>
1001f214:	103ee83a 	callr	r2
1001f218:	10ffffd8 	cmpnei	r3,r2,-1
1001f21c:	18000a26 	beq	r3,zero,1001f248 <_wcrtomb_r+0x58>
1001f220:	dfc00517 	ldw	ra,20(sp)
1001f224:	dc400417 	ldw	r17,16(sp)
1001f228:	dc000317 	ldw	r16,12(sp)
1001f22c:	dec00604 	addi	sp,sp,24
1001f230:	f800283a 	ret
1001f234:	000d883a 	mov	r6,zero
1001f238:	d9400084 	addi	r5,sp,2
1001f23c:	103ee83a 	callr	r2
1001f240:	10ffffd8 	cmpnei	r3,r2,-1
1001f244:	183ff61e 	bne	r3,zero,1001f220 <_wcrtomb_r+0x30>
1001f248:	00802284 	movi	r2,138
1001f24c:	88000015 	stw	zero,0(r17)
1001f250:	80800015 	stw	r2,0(r16)
1001f254:	00bfffc4 	movi	r2,-1
1001f258:	003ff106 	br	1001f220 <_wcrtomb_r+0x30>

1001f25c <wcrtomb>:
1001f25c:	defffa04 	addi	sp,sp,-24
1001f260:	008400f4 	movhi	r2,4099
1001f264:	dc400415 	stw	r17,16(sp)
1001f268:	dc000315 	stw	r16,12(sp)
1001f26c:	dfc00515 	stw	ra,20(sp)
1001f270:	14219817 	ldw	r16,-31136(r2)
1001f274:	008400b4 	movhi	r2,4098
1001f278:	3023883a 	mov	r17,r6
1001f27c:	109ce217 	ldw	r2,29576(r2)
1001f280:	300f883a 	mov	r7,r6
1001f284:	20000b26 	beq	r4,zero,1001f2b4 <wcrtomb+0x58>
1001f288:	280d883a 	mov	r6,r5
1001f28c:	200b883a 	mov	r5,r4
1001f290:	8009883a 	mov	r4,r16
1001f294:	103ee83a 	callr	r2
1001f298:	10ffffd8 	cmpnei	r3,r2,-1
1001f29c:	18000b26 	beq	r3,zero,1001f2cc <wcrtomb+0x70>
1001f2a0:	dfc00517 	ldw	ra,20(sp)
1001f2a4:	dc400417 	ldw	r17,16(sp)
1001f2a8:	dc000317 	ldw	r16,12(sp)
1001f2ac:	dec00604 	addi	sp,sp,24
1001f2b0:	f800283a 	ret
1001f2b4:	000d883a 	mov	r6,zero
1001f2b8:	d9400084 	addi	r5,sp,2
1001f2bc:	8009883a 	mov	r4,r16
1001f2c0:	103ee83a 	callr	r2
1001f2c4:	10ffffd8 	cmpnei	r3,r2,-1
1001f2c8:	183ff51e 	bne	r3,zero,1001f2a0 <wcrtomb+0x44>
1001f2cc:	00802284 	movi	r2,138
1001f2d0:	88000015 	stw	zero,0(r17)
1001f2d4:	80800015 	stw	r2,0(r16)
1001f2d8:	00bfffc4 	movi	r2,-1
1001f2dc:	003ff006 	br	1001f2a0 <wcrtomb+0x44>

1001f2e0 <_wctomb_r>:
1001f2e0:	008400b4 	movhi	r2,4098
1001f2e4:	109ce217 	ldw	r2,29576(r2)
1001f2e8:	1000683a 	jmp	r2

1001f2ec <__ascii_wctomb>:
1001f2ec:	28000926 	beq	r5,zero,1001f314 <__ascii_wctomb+0x28>
1001f2f0:	30804030 	cmpltui	r2,r6,256
1001f2f4:	10000326 	beq	r2,zero,1001f304 <__ascii_wctomb+0x18>
1001f2f8:	29800005 	stb	r6,0(r5)
1001f2fc:	00800044 	movi	r2,1
1001f300:	f800283a 	ret
1001f304:	00802284 	movi	r2,138
1001f308:	20800015 	stw	r2,0(r4)
1001f30c:	00bfffc4 	movi	r2,-1
1001f310:	f800283a 	ret
1001f314:	0005883a 	mov	r2,zero
1001f318:	f800283a 	ret

1001f31c <__muldi3>:
1001f31c:	20bfffcc 	andi	r2,r4,65535
1001f320:	2012d43a 	srli	r9,r4,16
1001f324:	32bfffcc 	andi	r10,r6,65535
1001f328:	3018d43a 	srli	r12,r6,16
1001f32c:	1297383a 	mul	r11,r2,r10
1001f330:	4a95383a 	mul	r10,r9,r10
1001f334:	1311383a 	mul	r8,r2,r12
1001f338:	5804d43a 	srli	r2,r11,16
1001f33c:	4b13383a 	mul	r9,r9,r12
1001f340:	4291883a 	add	r8,r8,r10
1001f344:	1205883a 	add	r2,r2,r8
1001f348:	1280022e 	bgeu	r2,r10,1001f354 <__muldi3+0x38>
1001f34c:	00c00074 	movhi	r3,1
1001f350:	48d3883a 	add	r9,r9,r3
1001f354:	1010d43a 	srli	r8,r2,16
1001f358:	21c9383a 	mul	r4,r4,r7
1001f35c:	314d383a 	mul	r6,r6,r5
1001f360:	1004943a 	slli	r2,r2,16
1001f364:	4253883a 	add	r9,r8,r9
1001f368:	5affffcc 	andi	r11,r11,65535
1001f36c:	2249883a 	add	r4,r4,r9
1001f370:	12c5883a 	add	r2,r2,r11
1001f374:	2187883a 	add	r3,r4,r6
1001f378:	f800283a 	ret

1001f37c <__udivdi3>:
1001f37c:	defff504 	addi	sp,sp,-44
1001f380:	dd400615 	stw	r21,24(sp)
1001f384:	dc000115 	stw	r16,4(sp)
1001f388:	dfc00a15 	stw	ra,40(sp)
1001f38c:	df000915 	stw	fp,36(sp)
1001f390:	ddc00815 	stw	r23,32(sp)
1001f394:	dd800715 	stw	r22,28(sp)
1001f398:	dd000515 	stw	r20,20(sp)
1001f39c:	dcc00415 	stw	r19,16(sp)
1001f3a0:	dc800315 	stw	r18,12(sp)
1001f3a4:	dc400215 	stw	r17,8(sp)
1001f3a8:	202b883a 	mov	r21,r4
1001f3ac:	2821883a 	mov	r16,r5
1001f3b0:	3800821e 	bne	r7,zero,1001f5bc <__udivdi3+0x240>
1001f3b4:	3827883a 	mov	r19,r7
1001f3b8:	3023883a 	mov	r17,r6
1001f3bc:	2025883a 	mov	r18,r4
1001f3c0:	29803d2e 	bgeu	r5,r6,1001f4b8 <__udivdi3+0x13c>
1001f3c4:	00bfffd4 	movui	r2,65535
1001f3c8:	282d883a 	mov	r22,r5
1001f3cc:	1180a52e 	bgeu	r2,r6,1001f664 <__udivdi3+0x2e8>
1001f3d0:	00804034 	movhi	r2,256
1001f3d4:	30813836 	bltu	r6,r2,1001f8b8 <__udivdi3+0x53c>
1001f3d8:	3006d63a 	srli	r3,r6,24
1001f3dc:	04c00604 	movi	r19,24
1001f3e0:	008400b4 	movhi	r2,4098
1001f3e4:	1885883a 	add	r2,r3,r2
1001f3e8:	1099a903 	ldbu	r2,26276(r2)
1001f3ec:	14e7883a 	add	r19,r2,r19
1001f3f0:	00800804 	movi	r2,32
1001f3f4:	14c5c83a 	sub	r2,r2,r19
1001f3f8:	10000526 	beq	r2,zero,1001f410 <__udivdi3+0x94>
1001f3fc:	80a0983a 	sll	r16,r16,r2
1001f400:	ace6d83a 	srl	r19,r21,r19
1001f404:	30a2983a 	sll	r17,r6,r2
1001f408:	a8a4983a 	sll	r18,r21,r2
1001f40c:	9c2cb03a 	or	r22,r19,r16
1001f410:	882ad43a 	srli	r21,r17,16
1001f414:	b009883a 	mov	r4,r22
1001f418:	8d3fffcc 	andi	r20,r17,65535
1001f41c:	a80b883a 	mov	r5,r21
1001f420:	00149e80 	call	100149e8 <__umodsi3>
1001f424:	a80b883a 	mov	r5,r21
1001f428:	b009883a 	mov	r4,r22
1001f42c:	1027883a 	mov	r19,r2
1001f430:	00149840 	call	10014984 <__udivsi3>
1001f434:	1021883a 	mov	r16,r2
1001f438:	9826943a 	slli	r19,r19,16
1001f43c:	9004d43a 	srli	r2,r18,16
1001f440:	a407383a 	mul	r3,r20,r16
1001f444:	9884b03a 	or	r2,r19,r2
1001f448:	10c0052e 	bgeu	r2,r3,1001f460 <__udivdi3+0xe4>
1001f44c:	1445883a 	add	r2,r2,r17
1001f450:	813fffc4 	addi	r4,r16,-1
1001f454:	14400136 	bltu	r2,r17,1001f45c <__udivdi3+0xe0>
1001f458:	10c12836 	bltu	r2,r3,1001f8fc <__udivdi3+0x580>
1001f45c:	2021883a 	mov	r16,r4
1001f460:	10e7c83a 	sub	r19,r2,r3
1001f464:	a80b883a 	mov	r5,r21
1001f468:	9809883a 	mov	r4,r19
1001f46c:	00149e80 	call	100149e8 <__umodsi3>
1001f470:	102d883a 	mov	r22,r2
1001f474:	a80b883a 	mov	r5,r21
1001f478:	9809883a 	mov	r4,r19
1001f47c:	00149840 	call	10014984 <__udivsi3>
1001f480:	b02c943a 	slli	r22,r22,16
1001f484:	a0a9383a 	mul	r20,r20,r2
1001f488:	94bfffcc 	andi	r18,r18,65535
1001f48c:	b4a4b03a 	or	r18,r22,r18
1001f490:	9500052e 	bgeu	r18,r20,1001f4a8 <__udivdi3+0x12c>
1001f494:	8ca5883a 	add	r18,r17,r18
1001f498:	10ffffc4 	addi	r3,r2,-1
1001f49c:	94400136 	bltu	r18,r17,1001f4a4 <__udivdi3+0x128>
1001f4a0:	95011436 	bltu	r18,r20,1001f8f4 <__udivdi3+0x578>
1001f4a4:	1805883a 	mov	r2,r3
1001f4a8:	800c943a 	slli	r6,r16,16
1001f4ac:	0007883a 	mov	r3,zero
1001f4b0:	3084b03a 	or	r2,r6,r2
1001f4b4:	00005506 	br	1001f60c <__udivdi3+0x290>
1001f4b8:	3000041e 	bne	r6,zero,1001f4cc <__udivdi3+0x150>
1001f4bc:	000b883a 	mov	r5,zero
1001f4c0:	01000044 	movi	r4,1
1001f4c4:	00149840 	call	10014984 <__udivsi3>
1001f4c8:	1023883a 	mov	r17,r2
1001f4cc:	00bfffd4 	movui	r2,65535
1001f4d0:	14405f2e 	bgeu	r2,r17,1001f650 <__udivdi3+0x2d4>
1001f4d4:	00804034 	movhi	r2,256
1001f4d8:	8880f436 	bltu	r17,r2,1001f8ac <__udivdi3+0x530>
1001f4dc:	8806d63a 	srli	r3,r17,24
1001f4e0:	04c00604 	movi	r19,24
1001f4e4:	008400b4 	movhi	r2,4098
1001f4e8:	1885883a 	add	r2,r3,r2
1001f4ec:	1099a903 	ldbu	r2,26276(r2)
1001f4f0:	14e7883a 	add	r19,r2,r19
1001f4f4:	00800804 	movi	r2,32
1001f4f8:	14c5c83a 	sub	r2,r2,r19
1001f4fc:	10005e1e 	bne	r2,zero,1001f678 <__udivdi3+0x2fc>
1001f500:	8828d43a 	srli	r20,r17,16
1001f504:	8461c83a 	sub	r16,r16,r17
1001f508:	8d7fffcc 	andi	r21,r17,65535
1001f50c:	00c00044 	movi	r3,1
1001f510:	8009883a 	mov	r4,r16
1001f514:	a00b883a 	mov	r5,r20
1001f518:	d8c00015 	stw	r3,0(sp)
1001f51c:	00149e80 	call	100149e8 <__umodsi3>
1001f520:	8009883a 	mov	r4,r16
1001f524:	a00b883a 	mov	r5,r20
1001f528:	1027883a 	mov	r19,r2
1001f52c:	00149840 	call	10014984 <__udivsi3>
1001f530:	1021883a 	mov	r16,r2
1001f534:	9826943a 	slli	r19,r19,16
1001f538:	9004d43a 	srli	r2,r18,16
1001f53c:	8549383a 	mul	r4,r16,r21
1001f540:	d8c00017 	ldw	r3,0(sp)
1001f544:	9884b03a 	or	r2,r19,r2
1001f548:	1100052e 	bgeu	r2,r4,1001f560 <__udivdi3+0x1e4>
1001f54c:	1445883a 	add	r2,r2,r17
1001f550:	817fffc4 	addi	r5,r16,-1
1001f554:	14400136 	bltu	r2,r17,1001f55c <__udivdi3+0x1e0>
1001f558:	1100eb36 	bltu	r2,r4,1001f908 <__udivdi3+0x58c>
1001f55c:	2821883a 	mov	r16,r5
1001f560:	1127c83a 	sub	r19,r2,r4
1001f564:	a00b883a 	mov	r5,r20
1001f568:	9809883a 	mov	r4,r19
1001f56c:	d8c00015 	stw	r3,0(sp)
1001f570:	00149e80 	call	100149e8 <__umodsi3>
1001f574:	102d883a 	mov	r22,r2
1001f578:	a00b883a 	mov	r5,r20
1001f57c:	9809883a 	mov	r4,r19
1001f580:	00149840 	call	10014984 <__udivsi3>
1001f584:	b02c943a 	slli	r22,r22,16
1001f588:	156b383a 	mul	r21,r2,r21
1001f58c:	94bfffcc 	andi	r18,r18,65535
1001f590:	b4a4b03a 	or	r18,r22,r18
1001f594:	d8c00017 	ldw	r3,0(sp)
1001f598:	9540052e 	bgeu	r18,r21,1001f5b0 <__udivdi3+0x234>
1001f59c:	8ca5883a 	add	r18,r17,r18
1001f5a0:	113fffc4 	addi	r4,r2,-1
1001f5a4:	94400136 	bltu	r18,r17,1001f5ac <__udivdi3+0x230>
1001f5a8:	9540d036 	bltu	r18,r21,1001f8ec <__udivdi3+0x570>
1001f5ac:	2005883a 	mov	r2,r4
1001f5b0:	800c943a 	slli	r6,r16,16
1001f5b4:	3084b03a 	or	r2,r6,r2
1001f5b8:	00001406 	br	1001f60c <__udivdi3+0x290>
1001f5bc:	29c01136 	bltu	r5,r7,1001f604 <__udivdi3+0x288>
1001f5c0:	00bfffd4 	movui	r2,65535
1001f5c4:	11c01d2e 	bgeu	r2,r7,1001f63c <__udivdi3+0x2c0>
1001f5c8:	00804034 	movhi	r2,256
1001f5cc:	3880ac36 	bltu	r7,r2,1001f880 <__udivdi3+0x504>
1001f5d0:	3806d63a 	srli	r3,r7,24
1001f5d4:	01000604 	movi	r4,24
1001f5d8:	008400b4 	movhi	r2,4098
1001f5dc:	1885883a 	add	r2,r3,r2
1001f5e0:	10d9a903 	ldbu	r3,26276(r2)
1001f5e4:	05800804 	movi	r22,32
1001f5e8:	1907883a 	add	r3,r3,r4
1001f5ec:	b0edc83a 	sub	r22,r22,r3
1001f5f0:	b000531e 	bne	r22,zero,1001f740 <__udivdi3+0x3c4>
1001f5f4:	3c00a536 	bltu	r7,r16,1001f88c <__udivdi3+0x510>
1001f5f8:	a985403a 	cmpgeu	r2,r21,r6
1001f5fc:	0007883a 	mov	r3,zero
1001f600:	00000206 	br	1001f60c <__udivdi3+0x290>
1001f604:	0007883a 	mov	r3,zero
1001f608:	0005883a 	mov	r2,zero
1001f60c:	dfc00a17 	ldw	ra,40(sp)
1001f610:	df000917 	ldw	fp,36(sp)
1001f614:	ddc00817 	ldw	r23,32(sp)
1001f618:	dd800717 	ldw	r22,28(sp)
1001f61c:	dd400617 	ldw	r21,24(sp)
1001f620:	dd000517 	ldw	r20,20(sp)
1001f624:	dcc00417 	ldw	r19,16(sp)
1001f628:	dc800317 	ldw	r18,12(sp)
1001f62c:	dc400217 	ldw	r17,8(sp)
1001f630:	dc000117 	ldw	r16,4(sp)
1001f634:	dec00b04 	addi	sp,sp,44
1001f638:	f800283a 	ret
1001f63c:	38804030 	cmpltui	r2,r7,256
1001f640:	1000951e 	bne	r2,zero,1001f898 <__udivdi3+0x51c>
1001f644:	3806d23a 	srli	r3,r7,8
1001f648:	01000204 	movi	r4,8
1001f64c:	003fe206 	br	1001f5d8 <__udivdi3+0x25c>
1001f650:	88804030 	cmpltui	r2,r17,256
1001f654:	10009b1e 	bne	r2,zero,1001f8c4 <__udivdi3+0x548>
1001f658:	8806d23a 	srli	r3,r17,8
1001f65c:	04c00204 	movi	r19,8
1001f660:	003fa006 	br	1001f4e4 <__udivdi3+0x168>
1001f664:	30804030 	cmpltui	r2,r6,256
1001f668:	10008e1e 	bne	r2,zero,1001f8a4 <__udivdi3+0x528>
1001f66c:	3006d23a 	srli	r3,r6,8
1001f670:	04c00204 	movi	r19,8
1001f674:	003f5a06 	br	1001f3e0 <__udivdi3+0x64>
1001f678:	88a2983a 	sll	r17,r17,r2
1001f67c:	84ecd83a 	srl	r22,r16,r19
1001f680:	80a0983a 	sll	r16,r16,r2
1001f684:	8828d43a 	srli	r20,r17,16
1001f688:	b009883a 	mov	r4,r22
1001f68c:	ace6d83a 	srl	r19,r21,r19
1001f690:	a00b883a 	mov	r5,r20
1001f694:	a8a4983a 	sll	r18,r21,r2
1001f698:	00149e80 	call	100149e8 <__umodsi3>
1001f69c:	b009883a 	mov	r4,r22
1001f6a0:	a00b883a 	mov	r5,r20
1001f6a4:	9c26b03a 	or	r19,r19,r16
1001f6a8:	1021883a 	mov	r16,r2
1001f6ac:	00149840 	call	10014984 <__udivsi3>
1001f6b0:	102f883a 	mov	r23,r2
1001f6b4:	8d7fffcc 	andi	r21,r17,65535
1001f6b8:	8020943a 	slli	r16,r16,16
1001f6bc:	9804d43a 	srli	r2,r19,16
1001f6c0:	aded383a 	mul	r22,r21,r23
1001f6c4:	8084b03a 	or	r2,r16,r2
1001f6c8:	1580062e 	bgeu	r2,r22,1001f6e4 <__udivdi3+0x368>
1001f6cc:	1445883a 	add	r2,r2,r17
1001f6d0:	b8ffffc4 	addi	r3,r23,-1
1001f6d4:	14408336 	bltu	r2,r17,1001f8e4 <__udivdi3+0x568>
1001f6d8:	1580822e 	bgeu	r2,r22,1001f8e4 <__udivdi3+0x568>
1001f6dc:	bdffff84 	addi	r23,r23,-2
1001f6e0:	1445883a 	add	r2,r2,r17
1001f6e4:	15adc83a 	sub	r22,r2,r22
1001f6e8:	a00b883a 	mov	r5,r20
1001f6ec:	b009883a 	mov	r4,r22
1001f6f0:	00149e80 	call	100149e8 <__umodsi3>
1001f6f4:	1021883a 	mov	r16,r2
1001f6f8:	b009883a 	mov	r4,r22
1001f6fc:	a00b883a 	mov	r5,r20
1001f700:	00149840 	call	10014984 <__udivsi3>
1001f704:	8020943a 	slli	r16,r16,16
1001f708:	a889383a 	mul	r4,r21,r2
1001f70c:	9cffffcc 	andi	r19,r19,65535
1001f710:	84e0b03a 	or	r16,r16,r19
1001f714:	8100062e 	bgeu	r16,r4,1001f730 <__udivdi3+0x3b4>
1001f718:	8461883a 	add	r16,r16,r17
1001f71c:	10ffffc4 	addi	r3,r2,-1
1001f720:	84406c36 	bltu	r16,r17,1001f8d4 <__udivdi3+0x558>
1001f724:	81006b2e 	bgeu	r16,r4,1001f8d4 <__udivdi3+0x558>
1001f728:	10bfff84 	addi	r2,r2,-2
1001f72c:	8461883a 	add	r16,r16,r17
1001f730:	b806943a 	slli	r3,r23,16
1001f734:	8121c83a 	sub	r16,r16,r4
1001f738:	1886b03a 	or	r3,r3,r2
1001f73c:	003f7406 	br	1001f510 <__udivdi3+0x194>
1001f740:	30f8d83a 	srl	fp,r6,r3
1001f744:	3d8e983a 	sll	r7,r7,r22
1001f748:	80eed83a 	srl	r23,r16,r3
1001f74c:	a8c6d83a 	srl	r3,r21,r3
1001f750:	e1f8b03a 	or	fp,fp,r7
1001f754:	e024d43a 	srli	r18,fp,16
1001f758:	85a0983a 	sll	r16,r16,r22
1001f75c:	b809883a 	mov	r4,r23
1001f760:	900b883a 	mov	r5,r18
1001f764:	1c22b03a 	or	r17,r3,r16
1001f768:	35a8983a 	sll	r20,r6,r22
1001f76c:	00149e80 	call	100149e8 <__umodsi3>
1001f770:	b809883a 	mov	r4,r23
1001f774:	900b883a 	mov	r5,r18
1001f778:	1027883a 	mov	r19,r2
1001f77c:	00149840 	call	10014984 <__udivsi3>
1001f780:	1021883a 	mov	r16,r2
1001f784:	e0ffffcc 	andi	r3,fp,65535
1001f788:	9826943a 	slli	r19,r19,16
1001f78c:	8804d43a 	srli	r2,r17,16
1001f790:	1c09383a 	mul	r4,r3,r16
1001f794:	9884b03a 	or	r2,r19,r2
1001f798:	1100062e 	bgeu	r2,r4,1001f7b4 <__udivdi3+0x438>
1001f79c:	1705883a 	add	r2,r2,fp
1001f7a0:	817fffc4 	addi	r5,r16,-1
1001f7a4:	17004d36 	bltu	r2,fp,1001f8dc <__udivdi3+0x560>
1001f7a8:	11004c2e 	bgeu	r2,r4,1001f8dc <__udivdi3+0x560>
1001f7ac:	843fff84 	addi	r16,r16,-2
1001f7b0:	1705883a 	add	r2,r2,fp
1001f7b4:	1127c83a 	sub	r19,r2,r4
1001f7b8:	900b883a 	mov	r5,r18
1001f7bc:	9809883a 	mov	r4,r19
1001f7c0:	d8c00015 	stw	r3,0(sp)
1001f7c4:	00149e80 	call	100149e8 <__umodsi3>
1001f7c8:	9809883a 	mov	r4,r19
1001f7cc:	900b883a 	mov	r5,r18
1001f7d0:	102f883a 	mov	r23,r2
1001f7d4:	00149840 	call	10014984 <__udivsi3>
1001f7d8:	d8c00017 	ldw	r3,0(sp)
1001f7dc:	b82e943a 	slli	r23,r23,16
1001f7e0:	8c7fffcc 	andi	r17,r17,65535
1001f7e4:	1889383a 	mul	r4,r3,r2
1001f7e8:	bc62b03a 	or	r17,r23,r17
1001f7ec:	8900062e 	bgeu	r17,r4,1001f808 <__udivdi3+0x48c>
1001f7f0:	8f23883a 	add	r17,r17,fp
1001f7f4:	10ffffc4 	addi	r3,r2,-1
1001f7f8:	8f003436 	bltu	r17,fp,1001f8cc <__udivdi3+0x550>
1001f7fc:	8900332e 	bgeu	r17,r4,1001f8cc <__udivdi3+0x550>
1001f800:	10bfff84 	addi	r2,r2,-2
1001f804:	8f23883a 	add	r17,r17,fp
1001f808:	8020943a 	slli	r16,r16,16
1001f80c:	a17fffcc 	andi	r5,r20,65535
1001f810:	a00cd43a 	srli	r6,r20,16
1001f814:	8084b03a 	or	r2,r16,r2
1001f818:	10ffffcc 	andi	r3,r2,65535
1001f81c:	1028d43a 	srli	r20,r2,16
1001f820:	1951383a 	mul	r8,r3,r5
1001f824:	1987383a 	mul	r3,r3,r6
1001f828:	a14b383a 	mul	r5,r20,r5
1001f82c:	400ed43a 	srli	r7,r8,16
1001f830:	8923c83a 	sub	r17,r17,r4
1001f834:	1947883a 	add	r3,r3,r5
1001f838:	38c7883a 	add	r3,r7,r3
1001f83c:	a1a9383a 	mul	r20,r20,r6
1001f840:	1940022e 	bgeu	r3,r5,1001f84c <__udivdi3+0x4d0>
1001f844:	01000074 	movhi	r4,1
1001f848:	a129883a 	add	r20,r20,r4
1001f84c:	180cd43a 	srli	r6,r3,16
1001f850:	3529883a 	add	r20,r6,r20
1001f854:	8d000836 	bltu	r17,r20,1001f878 <__udivdi3+0x4fc>
1001f858:	8d000226 	beq	r17,r20,1001f864 <__udivdi3+0x4e8>
1001f85c:	0007883a 	mov	r3,zero
1001f860:	003f6a06 	br	1001f60c <__udivdi3+0x290>
1001f864:	1806943a 	slli	r3,r3,16
1001f868:	ad8c983a 	sll	r6,r21,r22
1001f86c:	423fffcc 	andi	r8,r8,65535
1001f870:	1a07883a 	add	r3,r3,r8
1001f874:	30fff92e 	bgeu	r6,r3,1001f85c <__udivdi3+0x4e0>
1001f878:	10bfffc4 	addi	r2,r2,-1
1001f87c:	003ff706 	br	1001f85c <__udivdi3+0x4e0>
1001f880:	3806d43a 	srli	r3,r7,16
1001f884:	01000404 	movi	r4,16
1001f888:	003f5306 	br	1001f5d8 <__udivdi3+0x25c>
1001f88c:	0007883a 	mov	r3,zero
1001f890:	00800044 	movi	r2,1
1001f894:	003f5d06 	br	1001f60c <__udivdi3+0x290>
1001f898:	3807883a 	mov	r3,r7
1001f89c:	0009883a 	mov	r4,zero
1001f8a0:	003f4d06 	br	1001f5d8 <__udivdi3+0x25c>
1001f8a4:	3007883a 	mov	r3,r6
1001f8a8:	003ecd06 	br	1001f3e0 <__udivdi3+0x64>
1001f8ac:	8806d43a 	srli	r3,r17,16
1001f8b0:	04c00404 	movi	r19,16
1001f8b4:	003f0b06 	br	1001f4e4 <__udivdi3+0x168>
1001f8b8:	3006d43a 	srli	r3,r6,16
1001f8bc:	04c00404 	movi	r19,16
1001f8c0:	003ec706 	br	1001f3e0 <__udivdi3+0x64>
1001f8c4:	8807883a 	mov	r3,r17
1001f8c8:	003f0606 	br	1001f4e4 <__udivdi3+0x168>
1001f8cc:	1805883a 	mov	r2,r3
1001f8d0:	003fcd06 	br	1001f808 <__udivdi3+0x48c>
1001f8d4:	1805883a 	mov	r2,r3
1001f8d8:	003f9506 	br	1001f730 <__udivdi3+0x3b4>
1001f8dc:	2821883a 	mov	r16,r5
1001f8e0:	003fb406 	br	1001f7b4 <__udivdi3+0x438>
1001f8e4:	182f883a 	mov	r23,r3
1001f8e8:	003f7e06 	br	1001f6e4 <__udivdi3+0x368>
1001f8ec:	10bfff84 	addi	r2,r2,-2
1001f8f0:	003f2f06 	br	1001f5b0 <__udivdi3+0x234>
1001f8f4:	10bfff84 	addi	r2,r2,-2
1001f8f8:	003eeb06 	br	1001f4a8 <__udivdi3+0x12c>
1001f8fc:	843fff84 	addi	r16,r16,-2
1001f900:	1445883a 	add	r2,r2,r17
1001f904:	003ed606 	br	1001f460 <__udivdi3+0xe4>
1001f908:	843fff84 	addi	r16,r16,-2
1001f90c:	1445883a 	add	r2,r2,r17
1001f910:	003f1306 	br	1001f560 <__udivdi3+0x1e4>

1001f914 <__umoddi3>:
1001f914:	defff404 	addi	sp,sp,-48
1001f918:	dc400315 	stw	r17,12(sp)
1001f91c:	dc000215 	stw	r16,8(sp)
1001f920:	dfc00b15 	stw	ra,44(sp)
1001f924:	df000a15 	stw	fp,40(sp)
1001f928:	ddc00915 	stw	r23,36(sp)
1001f92c:	dd800815 	stw	r22,32(sp)
1001f930:	dd400715 	stw	r21,28(sp)
1001f934:	dd000615 	stw	r20,24(sp)
1001f938:	dcc00515 	stw	r19,20(sp)
1001f93c:	dc800415 	stw	r18,16(sp)
1001f940:	2823883a 	mov	r17,r5
1001f944:	2021883a 	mov	r16,r4
1001f948:	3800701e 	bne	r7,zero,1001fb0c <__umoddi3+0x1f8>
1001f94c:	382b883a 	mov	r21,r7
1001f950:	3027883a 	mov	r19,r6
1001f954:	2029883a 	mov	r20,r4
1001f958:	2980392e 	bgeu	r5,r6,1001fa40 <__umoddi3+0x12c>
1001f95c:	00bfffd4 	movui	r2,65535
1001f960:	282f883a 	mov	r23,r5
1001f964:	11809736 	bltu	r2,r6,1001fbc4 <__umoddi3+0x2b0>
1001f968:	30804030 	cmpltui	r2,r6,256
1001f96c:	1001231e 	bne	r2,zero,1001fdfc <__umoddi3+0x4e8>
1001f970:	3006d23a 	srli	r3,r6,8
1001f974:	05400204 	movi	r21,8
1001f978:	008400b4 	movhi	r2,4098
1001f97c:	1885883a 	add	r2,r3,r2
1001f980:	1099a903 	ldbu	r2,26276(r2)
1001f984:	156b883a 	add	r21,r2,r21
1001f988:	00800804 	movi	r2,32
1001f98c:	1565c83a 	sub	r18,r2,r21
1001f990:	90000526 	beq	r18,zero,1001f9a8 <__umoddi3+0x94>
1001f994:	8ca2983a 	sll	r17,r17,r18
1001f998:	856ad83a 	srl	r21,r16,r21
1001f99c:	34a6983a 	sll	r19,r6,r18
1001f9a0:	84a8983a 	sll	r20,r16,r18
1001f9a4:	ac6eb03a 	or	r23,r21,r17
1001f9a8:	982cd43a 	srli	r22,r19,16
1001f9ac:	b809883a 	mov	r4,r23
1001f9b0:	9c3fffcc 	andi	r16,r19,65535
1001f9b4:	b00b883a 	mov	r5,r22
1001f9b8:	00149e80 	call	100149e8 <__umodsi3>
1001f9bc:	b00b883a 	mov	r5,r22
1001f9c0:	b809883a 	mov	r4,r23
1001f9c4:	102b883a 	mov	r21,r2
1001f9c8:	00149840 	call	10014984 <__udivsi3>
1001f9cc:	a82a943a 	slli	r21,r21,16
1001f9d0:	a006d43a 	srli	r3,r20,16
1001f9d4:	8085383a 	mul	r2,r16,r2
1001f9d8:	a8c6b03a 	or	r3,r21,r3
1001f9dc:	1880032e 	bgeu	r3,r2,1001f9ec <__umoddi3+0xd8>
1001f9e0:	1cc7883a 	add	r3,r3,r19
1001f9e4:	1cc00136 	bltu	r3,r19,1001f9ec <__umoddi3+0xd8>
1001f9e8:	18811836 	bltu	r3,r2,1001fe4c <__umoddi3+0x538>
1001f9ec:	18abc83a 	sub	r21,r3,r2
1001f9f0:	b00b883a 	mov	r5,r22
1001f9f4:	a809883a 	mov	r4,r21
1001f9f8:	00149e80 	call	100149e8 <__umodsi3>
1001f9fc:	1023883a 	mov	r17,r2
1001fa00:	b00b883a 	mov	r5,r22
1001fa04:	a809883a 	mov	r4,r21
1001fa08:	00149840 	call	10014984 <__udivsi3>
1001fa0c:	8822943a 	slli	r17,r17,16
1001fa10:	8085383a 	mul	r2,r16,r2
1001fa14:	a0ffffcc 	andi	r3,r20,65535
1001fa18:	88c6b03a 	or	r3,r17,r3
1001fa1c:	1880042e 	bgeu	r3,r2,1001fa30 <__umoddi3+0x11c>
1001fa20:	1cc7883a 	add	r3,r3,r19
1001fa24:	1cc00236 	bltu	r3,r19,1001fa30 <__umoddi3+0x11c>
1001fa28:	1880012e 	bgeu	r3,r2,1001fa30 <__umoddi3+0x11c>
1001fa2c:	1cc7883a 	add	r3,r3,r19
1001fa30:	1885c83a 	sub	r2,r3,r2
1001fa34:	1484d83a 	srl	r2,r2,r18
1001fa38:	0007883a 	mov	r3,zero
1001fa3c:	00003606 	br	1001fb18 <__umoddi3+0x204>
1001fa40:	3000041e 	bne	r6,zero,1001fa54 <__umoddi3+0x140>
1001fa44:	000b883a 	mov	r5,zero
1001fa48:	01000044 	movi	r4,1
1001fa4c:	00149840 	call	10014984 <__udivsi3>
1001fa50:	1027883a 	mov	r19,r2
1001fa54:	00bfffd4 	movui	r2,65535
1001fa58:	14c0552e 	bgeu	r2,r19,1001fbb0 <__umoddi3+0x29c>
1001fa5c:	00804034 	movhi	r2,256
1001fa60:	9880ee36 	bltu	r19,r2,1001fe1c <__umoddi3+0x508>
1001fa64:	9806d63a 	srli	r3,r19,24
1001fa68:	05400604 	movi	r21,24
1001fa6c:	008400b4 	movhi	r2,4098
1001fa70:	1885883a 	add	r2,r3,r2
1001fa74:	1099a903 	ldbu	r2,26276(r2)
1001fa78:	156b883a 	add	r21,r2,r21
1001fa7c:	00800804 	movi	r2,32
1001fa80:	1565c83a 	sub	r18,r2,r21
1001fa84:	9000ab1e 	bne	r18,zero,1001fd34 <__umoddi3+0x420>
1001fa88:	982cd43a 	srli	r22,r19,16
1001fa8c:	8ce3c83a 	sub	r17,r17,r19
1001fa90:	9d7fffcc 	andi	r21,r19,65535
1001fa94:	b00b883a 	mov	r5,r22
1001fa98:	8809883a 	mov	r4,r17
1001fa9c:	00149e80 	call	100149e8 <__umodsi3>
1001faa0:	b00b883a 	mov	r5,r22
1001faa4:	8809883a 	mov	r4,r17
1001faa8:	1021883a 	mov	r16,r2
1001faac:	00149840 	call	10014984 <__udivsi3>
1001fab0:	8020943a 	slli	r16,r16,16
1001fab4:	a006d43a 	srli	r3,r20,16
1001fab8:	1545383a 	mul	r2,r2,r21
1001fabc:	80c6b03a 	or	r3,r16,r3
1001fac0:	1880042e 	bgeu	r3,r2,1001fad4 <__umoddi3+0x1c0>
1001fac4:	1cc7883a 	add	r3,r3,r19
1001fac8:	1cc00236 	bltu	r3,r19,1001fad4 <__umoddi3+0x1c0>
1001facc:	1880012e 	bgeu	r3,r2,1001fad4 <__umoddi3+0x1c0>
1001fad0:	1cc7883a 	add	r3,r3,r19
1001fad4:	18a1c83a 	sub	r16,r3,r2
1001fad8:	b00b883a 	mov	r5,r22
1001fadc:	8009883a 	mov	r4,r16
1001fae0:	00149e80 	call	100149e8 <__umodsi3>
1001fae4:	1023883a 	mov	r17,r2
1001fae8:	b00b883a 	mov	r5,r22
1001faec:	8009883a 	mov	r4,r16
1001faf0:	00149840 	call	10014984 <__udivsi3>
1001faf4:	8822943a 	slli	r17,r17,16
1001faf8:	1545383a 	mul	r2,r2,r21
1001fafc:	a53fffcc 	andi	r20,r20,65535
1001fb00:	8d06b03a 	or	r3,r17,r20
1001fb04:	18bfca2e 	bgeu	r3,r2,1001fa30 <__umoddi3+0x11c>
1001fb08:	003fc506 	br	1001fa20 <__umoddi3+0x10c>
1001fb0c:	2005883a 	mov	r2,r4
1001fb10:	29c00d2e 	bgeu	r5,r7,1001fb48 <__umoddi3+0x234>
1001fb14:	2807883a 	mov	r3,r5
1001fb18:	dfc00b17 	ldw	ra,44(sp)
1001fb1c:	df000a17 	ldw	fp,40(sp)
1001fb20:	ddc00917 	ldw	r23,36(sp)
1001fb24:	dd800817 	ldw	r22,32(sp)
1001fb28:	dd400717 	ldw	r21,28(sp)
1001fb2c:	dd000617 	ldw	r20,24(sp)
1001fb30:	dcc00517 	ldw	r19,20(sp)
1001fb34:	dc800417 	ldw	r18,16(sp)
1001fb38:	dc400317 	ldw	r17,12(sp)
1001fb3c:	dc000217 	ldw	r16,8(sp)
1001fb40:	dec00c04 	addi	sp,sp,48
1001fb44:	f800283a 	ret
1001fb48:	013fffd4 	movui	r4,65535
1001fb4c:	2807883a 	mov	r3,r5
1001fb50:	21c0122e 	bgeu	r4,r7,1001fb9c <__umoddi3+0x288>
1001fb54:	01004034 	movhi	r4,256
1001fb58:	3900ad36 	bltu	r7,r4,1001fe10 <__umoddi3+0x4fc>
1001fb5c:	3810d63a 	srli	r8,r7,24
1001fb60:	01400604 	movi	r5,24
1001fb64:	010400b4 	movhi	r4,4098
1001fb68:	4109883a 	add	r4,r8,r4
1001fb6c:	2519a903 	ldbu	r20,26276(r4)
1001fb70:	04c00804 	movi	r19,32
1001fb74:	a169883a 	add	r20,r20,r5
1001fb78:	9d27c83a 	sub	r19,r19,r20
1001fb7c:	9800161e 	bne	r19,zero,1001fbd8 <__umoddi3+0x2c4>
1001fb80:	3c400136 	bltu	r7,r17,1001fb88 <__umoddi3+0x274>
1001fb84:	81bfe436 	bltu	r16,r6,1001fb18 <__umoddi3+0x204>
1001fb88:	8185c83a 	sub	r2,r16,r6
1001fb8c:	89cfc83a 	sub	r7,r17,r7
1001fb90:	8087803a 	cmpltu	r3,r16,r2
1001fb94:	38c7c83a 	sub	r3,r7,r3
1001fb98:	003fdf06 	br	1001fb18 <__umoddi3+0x204>
1001fb9c:	39004030 	cmpltui	r4,r7,256
1001fba0:	2000981e 	bne	r4,zero,1001fe04 <__umoddi3+0x4f0>
1001fba4:	3810d23a 	srli	r8,r7,8
1001fba8:	01400204 	movi	r5,8
1001fbac:	003fed06 	br	1001fb64 <__umoddi3+0x250>
1001fbb0:	98804030 	cmpltui	r2,r19,256
1001fbb4:	10009c1e 	bne	r2,zero,1001fe28 <__umoddi3+0x514>
1001fbb8:	9806d23a 	srli	r3,r19,8
1001fbbc:	05400204 	movi	r21,8
1001fbc0:	003faa06 	br	1001fa6c <__umoddi3+0x158>
1001fbc4:	00804034 	movhi	r2,256
1001fbc8:	30809936 	bltu	r6,r2,1001fe30 <__umoddi3+0x51c>
1001fbcc:	3006d63a 	srli	r3,r6,24
1001fbd0:	05400604 	movi	r21,24
1001fbd4:	003f6806 	br	1001f978 <__umoddi3+0x64>
1001fbd8:	3504d83a 	srl	r2,r6,r20
1001fbdc:	3cce983a 	sll	r7,r7,r19
1001fbe0:	8d38d83a 	srl	fp,r17,r20
1001fbe4:	8ce2983a 	sll	r17,r17,r19
1001fbe8:	11eeb03a 	or	r23,r2,r7
1001fbec:	b82cd43a 	srli	r22,r23,16
1001fbf0:	8504d83a 	srl	r2,r16,r20
1001fbf4:	e009883a 	mov	r4,fp
1001fbf8:	b00b883a 	mov	r5,r22
1001fbfc:	34e4983a 	sll	r18,r6,r19
1001fc00:	1462b03a 	or	r17,r2,r17
1001fc04:	00149e80 	call	100149e8 <__umodsi3>
1001fc08:	e009883a 	mov	r4,fp
1001fc0c:	b00b883a 	mov	r5,r22
1001fc10:	102b883a 	mov	r21,r2
1001fc14:	00149840 	call	10014984 <__udivsi3>
1001fc18:	100d883a 	mov	r6,r2
1001fc1c:	b8ffffcc 	andi	r3,r23,65535
1001fc20:	a82a943a 	slli	r21,r21,16
1001fc24:	8804d43a 	srli	r2,r17,16
1001fc28:	1989383a 	mul	r4,r3,r6
1001fc2c:	84e0983a 	sll	r16,r16,r19
1001fc30:	a884b03a 	or	r2,r21,r2
1001fc34:	1100062e 	bgeu	r2,r4,1001fc50 <__umoddi3+0x33c>
1001fc38:	15c5883a 	add	r2,r2,r23
1001fc3c:	317fffc4 	addi	r5,r6,-1
1001fc40:	15c08036 	bltu	r2,r23,1001fe44 <__umoddi3+0x530>
1001fc44:	11007f2e 	bgeu	r2,r4,1001fe44 <__umoddi3+0x530>
1001fc48:	31bfff84 	addi	r6,r6,-2
1001fc4c:	15c5883a 	add	r2,r2,r23
1001fc50:	112bc83a 	sub	r21,r2,r4
1001fc54:	b00b883a 	mov	r5,r22
1001fc58:	a809883a 	mov	r4,r21
1001fc5c:	d9800115 	stw	r6,4(sp)
1001fc60:	d8c00015 	stw	r3,0(sp)
1001fc64:	00149e80 	call	100149e8 <__umodsi3>
1001fc68:	b00b883a 	mov	r5,r22
1001fc6c:	a809883a 	mov	r4,r21
1001fc70:	1039883a 	mov	fp,r2
1001fc74:	00149840 	call	10014984 <__udivsi3>
1001fc78:	d8c00017 	ldw	r3,0(sp)
1001fc7c:	e038943a 	slli	fp,fp,16
1001fc80:	8c7fffcc 	andi	r17,r17,65535
1001fc84:	1887383a 	mul	r3,r3,r2
1001fc88:	e462b03a 	or	r17,fp,r17
1001fc8c:	d9800117 	ldw	r6,4(sp)
1001fc90:	88c0062e 	bgeu	r17,r3,1001fcac <__umoddi3+0x398>
1001fc94:	8de3883a 	add	r17,r17,r23
1001fc98:	113fffc4 	addi	r4,r2,-1
1001fc9c:	8dc06736 	bltu	r17,r23,1001fe3c <__umoddi3+0x528>
1001fca0:	88c0662e 	bgeu	r17,r3,1001fe3c <__umoddi3+0x528>
1001fca4:	10bfff84 	addi	r2,r2,-2
1001fca8:	8de3883a 	add	r17,r17,r23
1001fcac:	300a943a 	slli	r5,r6,16
1001fcb0:	9010d43a 	srli	r8,r18,16
1001fcb4:	91bfffcc 	andi	r6,r18,65535
1001fcb8:	2888b03a 	or	r4,r5,r2
1001fcbc:	21ffffcc 	andi	r7,r4,65535
1001fcc0:	2008d43a 	srli	r4,r4,16
1001fcc4:	300b883a 	mov	r5,r6
1001fcc8:	398d383a 	mul	r6,r7,r6
1001fccc:	214b383a 	mul	r5,r4,r5
1001fcd0:	3a0f383a 	mul	r7,r7,r8
1001fcd4:	3004d43a 	srli	r2,r6,16
1001fcd8:	88c7c83a 	sub	r3,r17,r3
1001fcdc:	394f883a 	add	r7,r7,r5
1001fce0:	11c5883a 	add	r2,r2,r7
1001fce4:	2209383a 	mul	r4,r4,r8
1001fce8:	1140022e 	bgeu	r2,r5,1001fcf4 <__umoddi3+0x3e0>
1001fcec:	01400074 	movhi	r5,1
1001fcf0:	2149883a 	add	r4,r4,r5
1001fcf4:	100ad43a 	srli	r5,r2,16
1001fcf8:	1004943a 	slli	r2,r2,16
1001fcfc:	31bfffcc 	andi	r6,r6,65535
1001fd00:	2909883a 	add	r4,r5,r4
1001fd04:	1185883a 	add	r2,r2,r6
1001fd08:	19003636 	bltu	r3,r4,1001fde4 <__umoddi3+0x4d0>
1001fd0c:	19003426 	beq	r3,r4,1001fde0 <__umoddi3+0x4cc>
1001fd10:	8085c83a 	sub	r2,r16,r2
1001fd14:	80a1803a 	cmpltu	r16,r16,r2
1001fd18:	1907c83a 	sub	r3,r3,r4
1001fd1c:	1c07c83a 	sub	r3,r3,r16
1001fd20:	1d20983a 	sll	r16,r3,r20
1001fd24:	14c4d83a 	srl	r2,r2,r19
1001fd28:	1cc6d83a 	srl	r3,r3,r19
1001fd2c:	8084b03a 	or	r2,r16,r2
1001fd30:	003f7906 	br	1001fb18 <__umoddi3+0x204>
1001fd34:	9ca6983a 	sll	r19,r19,r18
1001fd38:	8d68d83a 	srl	r20,r17,r21
1001fd3c:	856ad83a 	srl	r21,r16,r21
1001fd40:	982cd43a 	srli	r22,r19,16
1001fd44:	a009883a 	mov	r4,r20
1001fd48:	8ca2983a 	sll	r17,r17,r18
1001fd4c:	b00b883a 	mov	r5,r22
1001fd50:	00149e80 	call	100149e8 <__umodsi3>
1001fd54:	a009883a 	mov	r4,r20
1001fd58:	b00b883a 	mov	r5,r22
1001fd5c:	ac6eb03a 	or	r23,r21,r17
1001fd60:	1023883a 	mov	r17,r2
1001fd64:	00149840 	call	10014984 <__udivsi3>
1001fd68:	9d7fffcc 	andi	r21,r19,65535
1001fd6c:	8822943a 	slli	r17,r17,16
1001fd70:	b806d43a 	srli	r3,r23,16
1001fd74:	a885383a 	mul	r2,r21,r2
1001fd78:	84a8983a 	sll	r20,r16,r18
1001fd7c:	88c6b03a 	or	r3,r17,r3
1001fd80:	1880042e 	bgeu	r3,r2,1001fd94 <__umoddi3+0x480>
1001fd84:	1cc7883a 	add	r3,r3,r19
1001fd88:	1cc00236 	bltu	r3,r19,1001fd94 <__umoddi3+0x480>
1001fd8c:	1880012e 	bgeu	r3,r2,1001fd94 <__umoddi3+0x480>
1001fd90:	1cc7883a 	add	r3,r3,r19
1001fd94:	18a3c83a 	sub	r17,r3,r2
1001fd98:	8809883a 	mov	r4,r17
1001fd9c:	b00b883a 	mov	r5,r22
1001fda0:	00149e80 	call	100149e8 <__umodsi3>
1001fda4:	1021883a 	mov	r16,r2
1001fda8:	8809883a 	mov	r4,r17
1001fdac:	b00b883a 	mov	r5,r22
1001fdb0:	00149840 	call	10014984 <__udivsi3>
1001fdb4:	8022943a 	slli	r17,r16,16
1001fdb8:	a885383a 	mul	r2,r21,r2
1001fdbc:	bdffffcc 	andi	r23,r23,65535
1001fdc0:	8de2b03a 	or	r17,r17,r23
1001fdc4:	8880042e 	bgeu	r17,r2,1001fdd8 <__umoddi3+0x4c4>
1001fdc8:	8ce3883a 	add	r17,r17,r19
1001fdcc:	8cc00236 	bltu	r17,r19,1001fdd8 <__umoddi3+0x4c4>
1001fdd0:	8880012e 	bgeu	r17,r2,1001fdd8 <__umoddi3+0x4c4>
1001fdd4:	8ce3883a 	add	r17,r17,r19
1001fdd8:	88a3c83a 	sub	r17,r17,r2
1001fddc:	003f2d06 	br	1001fa94 <__umoddi3+0x180>
1001fde0:	80bfcb2e 	bgeu	r16,r2,1001fd10 <__umoddi3+0x3fc>
1001fde4:	14a5c83a 	sub	r18,r2,r18
1001fde8:	1485803a 	cmpltu	r2,r2,r18
1001fdec:	15c5883a 	add	r2,r2,r23
1001fdf0:	2089c83a 	sub	r4,r4,r2
1001fdf4:	9005883a 	mov	r2,r18
1001fdf8:	003fc506 	br	1001fd10 <__umoddi3+0x3fc>
1001fdfc:	3007883a 	mov	r3,r6
1001fe00:	003edd06 	br	1001f978 <__umoddi3+0x64>
1001fe04:	3811883a 	mov	r8,r7
1001fe08:	000b883a 	mov	r5,zero
1001fe0c:	003f5506 	br	1001fb64 <__umoddi3+0x250>
1001fe10:	3810d43a 	srli	r8,r7,16
1001fe14:	01400404 	movi	r5,16
1001fe18:	003f5206 	br	1001fb64 <__umoddi3+0x250>
1001fe1c:	9806d43a 	srli	r3,r19,16
1001fe20:	05400404 	movi	r21,16
1001fe24:	003f1106 	br	1001fa6c <__umoddi3+0x158>
1001fe28:	9807883a 	mov	r3,r19
1001fe2c:	003f0f06 	br	1001fa6c <__umoddi3+0x158>
1001fe30:	3006d43a 	srli	r3,r6,16
1001fe34:	05400404 	movi	r21,16
1001fe38:	003ecf06 	br	1001f978 <__umoddi3+0x64>
1001fe3c:	2005883a 	mov	r2,r4
1001fe40:	003f9a06 	br	1001fcac <__umoddi3+0x398>
1001fe44:	280d883a 	mov	r6,r5
1001fe48:	003f8106 	br	1001fc50 <__umoddi3+0x33c>
1001fe4c:	1cc7883a 	add	r3,r3,r19
1001fe50:	003ee606 	br	1001f9ec <__umoddi3+0xd8>

1001fe54 <__adddf3>:
1001fe54:	02000434 	movhi	r8,16
1001fe58:	defffb04 	addi	sp,sp,-20
1001fe5c:	423fffc4 	addi	r8,r8,-1
1001fe60:	2a12703a 	and	r9,r5,r8
1001fe64:	3a06703a 	and	r3,r7,r8
1001fe68:	3804d53a 	srli	r2,r7,20
1001fe6c:	dc000015 	stw	r16,0(sp)
1001fe70:	2820d53a 	srli	r16,r5,20
1001fe74:	2016d77a 	srli	r11,r4,29
1001fe78:	3014d77a 	srli	r10,r6,29
1001fe7c:	280ad7fa 	srli	r5,r5,31
1001fe80:	481290fa 	slli	r9,r9,3
1001fe84:	180690fa 	slli	r3,r3,3
1001fe88:	380ed7fa 	srli	r7,r7,31
1001fe8c:	dc400115 	stw	r17,4(sp)
1001fe90:	8401ffcc 	andi	r16,r16,2047
1001fe94:	1081ffcc 	andi	r2,r2,2047
1001fe98:	dfc00415 	stw	ra,16(sp)
1001fe9c:	dcc00315 	stw	r19,12(sp)
1001fea0:	dc800215 	stw	r18,8(sp)
1001fea4:	5a52b03a 	or	r9,r11,r9
1001fea8:	50c6b03a 	or	r3,r10,r3
1001feac:	2823883a 	mov	r17,r5
1001feb0:	201890fa 	slli	r12,r4,3
1001feb4:	301690fa 	slli	r11,r6,3
1001feb8:	8095c83a 	sub	r10,r16,r2
1001febc:	29c06a26 	beq	r5,r7,10020068 <__adddf3+0x214>
1001fec0:	0280590e 	bge	zero,r10,10020028 <__adddf3+0x1d4>
1001fec4:	10007c26 	beq	r2,zero,100200b8 <__adddf3+0x264>
1001fec8:	8081ffd8 	cmpnei	r2,r16,2047
1001fecc:	10010726 	beq	r2,zero,100202ec <__adddf3+0x498>
1001fed0:	18c02034 	orhi	r3,r3,128
1001fed4:	50800e48 	cmpgei	r2,r10,57
1001fed8:	1000ed1e 	bne	r2,zero,10020290 <__adddf3+0x43c>
1001fedc:	50800808 	cmpgei	r2,r10,32
1001fee0:	1001541e 	bne	r2,zero,10020434 <__adddf3+0x5e0>
1001fee4:	01000804 	movi	r4,32
1001fee8:	2289c83a 	sub	r4,r4,r10
1001feec:	1926983a 	sll	r19,r3,r4
1001fef0:	5a84d83a 	srl	r2,r11,r10
1001fef4:	5908983a 	sll	r4,r11,r4
1001fef8:	1a86d83a 	srl	r3,r3,r10
1001fefc:	98a6b03a 	or	r19,r19,r2
1001ff00:	2016c03a 	cmpne	r11,r4,zero
1001ff04:	9ae6b03a 	or	r19,r19,r11
1001ff08:	48d3c83a 	sub	r9,r9,r3
1001ff0c:	64e7c83a 	sub	r19,r12,r19
1001ff10:	64c9803a 	cmpltu	r4,r12,r19
1001ff14:	4909c83a 	sub	r4,r9,r4
1001ff18:	2080202c 	andhi	r2,r4,128
1001ff1c:	10008726 	beq	r2,zero,1002013c <__adddf3+0x2e8>
1001ff20:	02402034 	movhi	r9,128
1001ff24:	4a7fffc4 	addi	r9,r9,-1
1001ff28:	2264703a 	and	r18,r4,r9
1001ff2c:	9000cf26 	beq	r18,zero,1002026c <__adddf3+0x418>
1001ff30:	9009883a 	mov	r4,r18
1001ff34:	002252c0 	call	1002252c <__clzsi2>
1001ff38:	10fffe04 	addi	r3,r2,-8
1001ff3c:	01000804 	movi	r4,32
1001ff40:	20c9c83a 	sub	r4,r4,r3
1001ff44:	990ad83a 	srl	r5,r19,r4
1001ff48:	90c8983a 	sll	r4,r18,r3
1001ff4c:	98e6983a 	sll	r19,r19,r3
1001ff50:	2908b03a 	or	r4,r5,r4
1001ff54:	1c00be16 	blt	r3,r16,10020250 <__adddf3+0x3fc>
1001ff58:	1c21c83a 	sub	r16,r3,r16
1001ff5c:	81400044 	addi	r5,r16,1
1001ff60:	28800808 	cmpgei	r2,r5,32
1001ff64:	10011b1e 	bne	r2,zero,100203d4 <__adddf3+0x580>
1001ff68:	00800804 	movi	r2,32
1001ff6c:	1145c83a 	sub	r2,r2,r5
1001ff70:	9946d83a 	srl	r3,r19,r5
1001ff74:	98a6983a 	sll	r19,r19,r2
1001ff78:	2084983a 	sll	r2,r4,r2
1001ff7c:	2148d83a 	srl	r4,r4,r5
1001ff80:	9826c03a 	cmpne	r19,r19,zero
1001ff84:	10c4b03a 	or	r2,r2,r3
1001ff88:	14e6b03a 	or	r19,r2,r19
1001ff8c:	0021883a 	mov	r16,zero
1001ff90:	988001cc 	andi	r2,r19,7
1001ff94:	10000726 	beq	r2,zero,1001ffb4 <__adddf3+0x160>
1001ff98:	988003cc 	andi	r2,r19,15
1001ff9c:	10800120 	cmpeqi	r2,r2,4
1001ffa0:	1000041e 	bne	r2,zero,1001ffb4 <__adddf3+0x160>
1001ffa4:	99400104 	addi	r5,r19,4
1001ffa8:	2ce7803a 	cmpltu	r19,r5,r19
1001ffac:	24c9883a 	add	r4,r4,r19
1001ffb0:	2827883a 	mov	r19,r5
1001ffb4:	2080202c 	andhi	r2,r4,128
1001ffb8:	10006226 	beq	r2,zero,10020144 <__adddf3+0x2f0>
1001ffbc:	84000044 	addi	r16,r16,1
1001ffc0:	8081ffe0 	cmpeqi	r2,r16,2047
1001ffc4:	8401ffcc 	andi	r16,r16,2047
1001ffc8:	1000731e 	bne	r2,zero,10020198 <__adddf3+0x344>
1001ffcc:	017fe034 	movhi	r5,65408
1001ffd0:	297fffc4 	addi	r5,r5,-1
1001ffd4:	214a703a 	and	r5,r4,r5
1001ffd8:	2804977a 	slli	r2,r5,29
1001ffdc:	280a927a 	slli	r5,r5,9
1001ffe0:	9826d0fa 	srli	r19,r19,3
1001ffe4:	2808d33a 	srli	r4,r5,12
1001ffe8:	14c4b03a 	or	r2,r2,r19
1001ffec:	8020953a 	slli	r16,r16,20
1001fff0:	00c00434 	movhi	r3,16
1001fff4:	8c403fcc 	andi	r17,r17,255
1001fff8:	882297fa 	slli	r17,r17,31
1001fffc:	18ffffc4 	addi	r3,r3,-1
10020000:	20c6703a 	and	r3,r4,r3
10020004:	1c06b03a 	or	r3,r3,r16
10020008:	1c46b03a 	or	r3,r3,r17
1002000c:	dfc00417 	ldw	ra,16(sp)
10020010:	dcc00317 	ldw	r19,12(sp)
10020014:	dc800217 	ldw	r18,8(sp)
10020018:	dc400117 	ldw	r17,4(sp)
1002001c:	dc000017 	ldw	r16,0(sp)
10020020:	dec00504 	addi	sp,sp,20
10020024:	f800283a 	ret
10020028:	50002b1e 	bne	r10,zero,100200d8 <__adddf3+0x284>
1002002c:	80800044 	addi	r2,r16,1
10020030:	1081ff8c 	andi	r2,r2,2046
10020034:	1000a11e 	bne	r2,zero,100202bc <__adddf3+0x468>
10020038:	4b0ab03a 	or	r5,r9,r12
1002003c:	1ac4b03a 	or	r2,r3,r11
10020040:	80015c1e 	bne	r16,zero,100205b4 <__adddf3+0x760>
10020044:	28012826 	beq	r5,zero,100204e8 <__adddf3+0x694>
10020048:	1001671e 	bne	r2,zero,100205e8 <__adddf3+0x794>
1002004c:	4826977a 	slli	r19,r9,29
10020050:	00c80034 	movhi	r3,8192
10020054:	18ffffc4 	addi	r3,r3,-1
10020058:	20c4703a 	and	r2,r4,r3
1002005c:	9884b03a 	or	r2,r19,r2
10020060:	4812d0fa 	srli	r9,r9,3
10020064:	00003d06 	br	1002015c <__adddf3+0x308>
10020068:	02804f0e 	bge	zero,r10,100201a8 <__adddf3+0x354>
1002006c:	10002426 	beq	r2,zero,10020100 <__adddf3+0x2ac>
10020070:	8081ffd8 	cmpnei	r2,r16,2047
10020074:	10009d26 	beq	r2,zero,100202ec <__adddf3+0x498>
10020078:	18c02034 	orhi	r3,r3,128
1002007c:	50800e48 	cmpgei	r2,r10,57
10020080:	10003b1e 	bne	r2,zero,10020170 <__adddf3+0x31c>
10020084:	50800808 	cmpgei	r2,r10,32
10020088:	10010326 	beq	r2,zero,10020498 <__adddf3+0x644>
1002008c:	54fff804 	addi	r19,r10,-32
10020090:	51000820 	cmpeqi	r4,r10,32
10020094:	1cc4d83a 	srl	r2,r3,r19
10020098:	2000041e 	bne	r4,zero,100200ac <__adddf3+0x258>
1002009c:	01001004 	movi	r4,64
100200a0:	2295c83a 	sub	r10,r4,r10
100200a4:	1a86983a 	sll	r3,r3,r10
100200a8:	58d6b03a 	or	r11,r11,r3
100200ac:	5826c03a 	cmpne	r19,r11,zero
100200b0:	98a6b03a 	or	r19,r19,r2
100200b4:	00003006 	br	10020178 <__adddf3+0x324>
100200b8:	1ac4b03a 	or	r2,r3,r11
100200bc:	10007726 	beq	r2,zero,1002029c <__adddf3+0x448>
100200c0:	50bfffc4 	addi	r2,r10,-1
100200c4:	10011926 	beq	r2,zero,1002052c <__adddf3+0x6d8>
100200c8:	5281ffd8 	cmpnei	r10,r10,2047
100200cc:	50012026 	beq	r10,zero,10020550 <__adddf3+0x6fc>
100200d0:	1015883a 	mov	r10,r2
100200d4:	003f7f06 	br	1001fed4 <__adddf3+0x80>
100200d8:	1409c83a 	sub	r4,r2,r16
100200dc:	8000a61e 	bne	r16,zero,10020378 <__adddf3+0x524>
100200e0:	4b0ab03a 	or	r5,r9,r12
100200e4:	2800f726 	beq	r5,zero,100204c4 <__adddf3+0x670>
100200e8:	217fffc4 	addi	r5,r4,-1
100200ec:	28017f26 	beq	r5,zero,100206ec <__adddf3+0x898>
100200f0:	2101ffd8 	cmpnei	r4,r4,2047
100200f4:	2001a326 	beq	r4,zero,10020784 <__adddf3+0x930>
100200f8:	2809883a 	mov	r4,r5
100200fc:	0000a106 	br	10020384 <__adddf3+0x530>
10020100:	1ac4b03a 	or	r2,r3,r11
10020104:	10006526 	beq	r2,zero,1002029c <__adddf3+0x448>
10020108:	50bfffc4 	addi	r2,r10,-1
1002010c:	10000426 	beq	r2,zero,10020120 <__adddf3+0x2cc>
10020110:	5281ffd8 	cmpnei	r10,r10,2047
10020114:	50014326 	beq	r10,zero,10020624 <__adddf3+0x7d0>
10020118:	1015883a 	mov	r10,r2
1002011c:	003fd706 	br	1002007c <__adddf3+0x228>
10020120:	62e7883a 	add	r19,r12,r11
10020124:	48d3883a 	add	r9,r9,r3
10020128:	9b09803a 	cmpltu	r4,r19,r12
1002012c:	4909883a 	add	r4,r9,r4
10020130:	2080202c 	andhi	r2,r4,128
10020134:	1000b41e 	bne	r2,zero,10020408 <__adddf3+0x5b4>
10020138:	04000044 	movi	r16,1
1002013c:	988001cc 	andi	r2,r19,7
10020140:	103f951e 	bne	r2,zero,1001ff98 <__adddf3+0x144>
10020144:	9826d0fa 	srli	r19,r19,3
10020148:	2004977a 	slli	r2,r4,29
1002014c:	2012d0fa 	srli	r9,r4,3
10020150:	9884b03a 	or	r2,r19,r2
10020154:	80c1ffe0 	cmpeqi	r3,r16,2047
10020158:	1800351e 	bne	r3,zero,10020230 <__adddf3+0x3dc>
1002015c:	01000434 	movhi	r4,16
10020160:	213fffc4 	addi	r4,r4,-1
10020164:	4908703a 	and	r4,r9,r4
10020168:	8401ffcc 	andi	r16,r16,2047
1002016c:	003f9f06 	br	1001ffec <__adddf3+0x198>
10020170:	1ac8b03a 	or	r4,r3,r11
10020174:	2026c03a 	cmpne	r19,r4,zero
10020178:	9b27883a 	add	r19,r19,r12
1002017c:	9b09803a 	cmpltu	r4,r19,r12
10020180:	2249883a 	add	r4,r4,r9
10020184:	2080202c 	andhi	r2,r4,128
10020188:	103fec26 	beq	r2,zero,1002013c <__adddf3+0x2e8>
1002018c:	84000044 	addi	r16,r16,1
10020190:	8081ffe0 	cmpeqi	r2,r16,2047
10020194:	10009d26 	beq	r2,zero,1002040c <__adddf3+0x5b8>
10020198:	0401ffc4 	movi	r16,2047
1002019c:	0009883a 	mov	r4,zero
100201a0:	0005883a 	mov	r2,zero
100201a4:	003f9106 	br	1001ffec <__adddf3+0x198>
100201a8:	5000571e 	bne	r10,zero,10020308 <__adddf3+0x4b4>
100201ac:	80800044 	addi	r2,r16,1
100201b0:	1141ff8c 	andi	r5,r2,2046
100201b4:	2800ed1e 	bne	r5,zero,1002056c <__adddf3+0x718>
100201b8:	4b04b03a 	or	r2,r9,r12
100201bc:	8000a826 	beq	r16,zero,10020460 <__adddf3+0x60c>
100201c0:	10010226 	beq	r2,zero,100205cc <__adddf3+0x778>
100201c4:	1ad6b03a 	or	r11,r3,r11
100201c8:	480a977a 	slli	r5,r9,29
100201cc:	4812d0fa 	srli	r9,r9,3
100201d0:	58015f26 	beq	r11,zero,10020750 <__adddf3+0x8fc>
100201d4:	02080034 	movhi	r8,8192
100201d8:	423fffc4 	addi	r8,r8,-1
100201dc:	2204703a 	and	r2,r4,r8
100201e0:	4900022c 	andhi	r4,r9,8
100201e4:	114ab03a 	or	r5,r2,r5
100201e8:	20000826 	beq	r4,zero,1002020c <__adddf3+0x3b8>
100201ec:	1808d0fa 	srli	r4,r3,3
100201f0:	2080022c 	andhi	r2,r4,8
100201f4:	1000051e 	bne	r2,zero,1002020c <__adddf3+0x3b8>
100201f8:	1806977a 	slli	r3,r3,29
100201fc:	3204703a 	and	r2,r6,r8
10020200:	3823883a 	mov	r17,r7
10020204:	10cab03a 	or	r5,r2,r3
10020208:	2013883a 	mov	r9,r4
1002020c:	2804d77a 	srli	r2,r5,29
10020210:	480890fa 	slli	r4,r9,3
10020214:	00c80034 	movhi	r3,8192
10020218:	18ffffc4 	addi	r3,r3,-1
1002021c:	1108b03a 	or	r4,r2,r4
10020220:	2004977a 	slli	r2,r4,29
10020224:	2012d0fa 	srli	r9,r4,3
10020228:	28ca703a 	and	r5,r5,r3
1002022c:	1144b03a 	or	r2,r2,r5
10020230:	4886b03a 	or	r3,r9,r2
10020234:	18016b26 	beq	r3,zero,100207e4 <__adddf3+0x990>
10020238:	00c00434 	movhi	r3,16
1002023c:	49000234 	orhi	r4,r9,8
10020240:	18ffffc4 	addi	r3,r3,-1
10020244:	20c8703a 	and	r4,r4,r3
10020248:	0401ffc4 	movi	r16,2047
1002024c:	003f6706 	br	1001ffec <__adddf3+0x198>
10020250:	017fe034 	movhi	r5,65408
10020254:	297fffc4 	addi	r5,r5,-1
10020258:	988001cc 	andi	r2,r19,7
1002025c:	80e1c83a 	sub	r16,r16,r3
10020260:	2148703a 	and	r4,r4,r5
10020264:	103f4c1e 	bne	r2,zero,1001ff98 <__adddf3+0x144>
10020268:	003fb606 	br	10020144 <__adddf3+0x2f0>
1002026c:	9809883a 	mov	r4,r19
10020270:	002252c0 	call	1002252c <__clzsi2>
10020274:	10c00604 	addi	r3,r2,24
10020278:	19000808 	cmpgei	r4,r3,32
1002027c:	203f2f26 	beq	r4,zero,1001ff3c <__adddf3+0xe8>
10020280:	113ffe04 	addi	r4,r2,-8
10020284:	9908983a 	sll	r4,r19,r4
10020288:	0027883a 	mov	r19,zero
1002028c:	003f3106 	br	1001ff54 <__adddf3+0x100>
10020290:	1ac8b03a 	or	r4,r3,r11
10020294:	2026c03a 	cmpne	r19,r4,zero
10020298:	003f1c06 	br	1001ff0c <__adddf3+0xb8>
1002029c:	4826977a 	slli	r19,r9,29
100202a0:	00c80034 	movhi	r3,8192
100202a4:	18ffffc4 	addi	r3,r3,-1
100202a8:	20c4703a 	and	r2,r4,r3
100202ac:	14c4b03a 	or	r2,r2,r19
100202b0:	4812d0fa 	srli	r9,r9,3
100202b4:	5021883a 	mov	r16,r10
100202b8:	003fa606 	br	10020154 <__adddf3+0x300>
100202bc:	62e7c83a 	sub	r19,r12,r11
100202c0:	48e5c83a 	sub	r18,r9,r3
100202c4:	64c9803a 	cmpltu	r4,r12,r19
100202c8:	9125c83a 	sub	r18,r18,r4
100202cc:	9080202c 	andhi	r2,r18,128
100202d0:	1000b21e 	bne	r2,zero,1002059c <__adddf3+0x748>
100202d4:	9c84b03a 	or	r2,r19,r18
100202d8:	103f141e 	bne	r2,zero,1001ff2c <__adddf3+0xd8>
100202dc:	0013883a 	mov	r9,zero
100202e0:	0021883a 	mov	r16,zero
100202e4:	0023883a 	mov	r17,zero
100202e8:	003f9c06 	br	1002015c <__adddf3+0x308>
100202ec:	4826977a 	slli	r19,r9,29
100202f0:	00c80034 	movhi	r3,8192
100202f4:	18ffffc4 	addi	r3,r3,-1
100202f8:	20c4703a 	and	r2,r4,r3
100202fc:	14c4b03a 	or	r2,r2,r19
10020300:	4812d0fa 	srli	r9,r9,3
10020304:	003fca06 	br	10020230 <__adddf3+0x3dc>
10020308:	1409c83a 	sub	r4,r2,r16
1002030c:	80005e1e 	bne	r16,zero,10020488 <__adddf3+0x634>
10020310:	4b0ab03a 	or	r5,r9,r12
10020314:	28011326 	beq	r5,zero,10020764 <__adddf3+0x910>
10020318:	217fffc4 	addi	r5,r4,-1
1002031c:	28012c26 	beq	r5,zero,100207d0 <__adddf3+0x97c>
10020320:	2101ffd8 	cmpnei	r4,r4,2047
10020324:	2000a926 	beq	r4,zero,100205cc <__adddf3+0x778>
10020328:	2809883a 	mov	r4,r5
1002032c:	21400e48 	cmpgei	r5,r4,57
10020330:	2800b91e 	bne	r5,zero,10020618 <__adddf3+0x7c4>
10020334:	21400808 	cmpgei	r5,r4,32
10020338:	28011a1e 	bne	r5,zero,100207a4 <__adddf3+0x950>
1002033c:	01400804 	movi	r5,32
10020340:	290bc83a 	sub	r5,r5,r4
10020344:	4966983a 	sll	r19,r9,r5
10020348:	610cd83a 	srl	r6,r12,r4
1002034c:	614a983a 	sll	r5,r12,r5
10020350:	4912d83a 	srl	r9,r9,r4
10020354:	99a6b03a 	or	r19,r19,r6
10020358:	280ac03a 	cmpne	r5,r5,zero
1002035c:	9966b03a 	or	r19,r19,r5
10020360:	1a47883a 	add	r3,r3,r9
10020364:	9ae7883a 	add	r19,r19,r11
10020368:	9ac9803a 	cmpltu	r4,r19,r11
1002036c:	20c9883a 	add	r4,r4,r3
10020370:	1021883a 	mov	r16,r2
10020374:	003f8306 	br	10020184 <__adddf3+0x330>
10020378:	1141ffd8 	cmpnei	r5,r2,2047
1002037c:	28006326 	beq	r5,zero,1002050c <__adddf3+0x6b8>
10020380:	4a402034 	orhi	r9,r9,128
10020384:	21400e48 	cmpgei	r5,r4,57
10020388:	28006e1e 	bne	r5,zero,10020544 <__adddf3+0x6f0>
1002038c:	21400808 	cmpgei	r5,r4,32
10020390:	2800ab1e 	bne	r5,zero,10020640 <__adddf3+0x7ec>
10020394:	01400804 	movi	r5,32
10020398:	290bc83a 	sub	r5,r5,r4
1002039c:	4966983a 	sll	r19,r9,r5
100203a0:	610cd83a 	srl	r6,r12,r4
100203a4:	614a983a 	sll	r5,r12,r5
100203a8:	4912d83a 	srl	r9,r9,r4
100203ac:	99a6b03a 	or	r19,r19,r6
100203b0:	280ac03a 	cmpne	r5,r5,zero
100203b4:	9966b03a 	or	r19,r19,r5
100203b8:	1a47c83a 	sub	r3,r3,r9
100203bc:	5ce7c83a 	sub	r19,r11,r19
100203c0:	5cc9803a 	cmpltu	r4,r11,r19
100203c4:	1909c83a 	sub	r4,r3,r4
100203c8:	3823883a 	mov	r17,r7
100203cc:	1021883a 	mov	r16,r2
100203d0:	003ed106 	br	1001ff18 <__adddf3+0xc4>
100203d4:	843ff844 	addi	r16,r16,-31
100203d8:	28800820 	cmpeqi	r2,r5,32
100203dc:	2420d83a 	srl	r16,r4,r16
100203e0:	1000041e 	bne	r2,zero,100203f4 <__adddf3+0x5a0>
100203e4:	00801004 	movi	r2,64
100203e8:	114bc83a 	sub	r5,r2,r5
100203ec:	2148983a 	sll	r4,r4,r5
100203f0:	9926b03a 	or	r19,r19,r4
100203f4:	9826c03a 	cmpne	r19,r19,zero
100203f8:	9c26b03a 	or	r19,r19,r16
100203fc:	0009883a 	mov	r4,zero
10020400:	0021883a 	mov	r16,zero
10020404:	003f4d06 	br	1002013c <__adddf3+0x2e8>
10020408:	04000084 	movi	r16,2
1002040c:	00bfe034 	movhi	r2,65408
10020410:	10bfffc4 	addi	r2,r2,-1
10020414:	208a703a 	and	r5,r4,r2
10020418:	9804d07a 	srli	r2,r19,1
1002041c:	280697fa 	slli	r3,r5,31
10020420:	9cc0004c 	andi	r19,r19,1
10020424:	14e6b03a 	or	r19,r2,r19
10020428:	2808d07a 	srli	r4,r5,1
1002042c:	1ce6b03a 	or	r19,r3,r19
10020430:	003ed706 	br	1001ff90 <__adddf3+0x13c>
10020434:	54fff804 	addi	r19,r10,-32
10020438:	50800820 	cmpeqi	r2,r10,32
1002043c:	1ce6d83a 	srl	r19,r3,r19
10020440:	1000041e 	bne	r2,zero,10020454 <__adddf3+0x600>
10020444:	00801004 	movi	r2,64
10020448:	1295c83a 	sub	r10,r2,r10
1002044c:	1a86983a 	sll	r3,r3,r10
10020450:	58d6b03a 	or	r11,r11,r3
10020454:	5808c03a 	cmpne	r4,r11,zero
10020458:	24e6b03a 	or	r19,r4,r19
1002045c:	003eab06 	br	1001ff0c <__adddf3+0xb8>
10020460:	1000a926 	beq	r2,zero,10020708 <__adddf3+0x8b4>
10020464:	1ac4b03a 	or	r2,r3,r11
10020468:	1000ae1e 	bne	r2,zero,10020724 <__adddf3+0x8d0>
1002046c:	4806977a 	slli	r3,r9,29
10020470:	00880034 	movhi	r2,8192
10020474:	10bfffc4 	addi	r2,r2,-1
10020478:	2084703a 	and	r2,r4,r2
1002047c:	10c4b03a 	or	r2,r2,r3
10020480:	4812d0fa 	srli	r9,r9,3
10020484:	003f3506 	br	1002015c <__adddf3+0x308>
10020488:	1141ffd8 	cmpnei	r5,r2,2047
1002048c:	28004f26 	beq	r5,zero,100205cc <__adddf3+0x778>
10020490:	4a402034 	orhi	r9,r9,128
10020494:	003fa506 	br	1002032c <__adddf3+0x4d8>
10020498:	01000804 	movi	r4,32
1002049c:	2289c83a 	sub	r4,r4,r10
100204a0:	1926983a 	sll	r19,r3,r4
100204a4:	5a84d83a 	srl	r2,r11,r10
100204a8:	5908983a 	sll	r4,r11,r4
100204ac:	1a86d83a 	srl	r3,r3,r10
100204b0:	98a6b03a 	or	r19,r19,r2
100204b4:	2016c03a 	cmpne	r11,r4,zero
100204b8:	9ae6b03a 	or	r19,r19,r11
100204bc:	48d3883a 	add	r9,r9,r3
100204c0:	003f2d06 	br	10020178 <__adddf3+0x324>
100204c4:	01480034 	movhi	r5,8192
100204c8:	1826977a 	slli	r19,r3,29
100204cc:	297fffc4 	addi	r5,r5,-1
100204d0:	3144703a 	and	r2,r6,r5
100204d4:	14c4b03a 	or	r2,r2,r19
100204d8:	1812d0fa 	srli	r9,r3,3
100204dc:	3823883a 	mov	r17,r7
100204e0:	2021883a 	mov	r16,r4
100204e4:	003f1b06 	br	10020154 <__adddf3+0x300>
100204e8:	10007d26 	beq	r2,zero,100206e0 <__adddf3+0x88c>
100204ec:	00880034 	movhi	r2,8192
100204f0:	1808977a 	slli	r4,r3,29
100204f4:	10bfffc4 	addi	r2,r2,-1
100204f8:	3084703a 	and	r2,r6,r2
100204fc:	1104b03a 	or	r2,r2,r4
10020500:	1812d0fa 	srli	r9,r3,3
10020504:	3823883a 	mov	r17,r7
10020508:	003f1406 	br	1002015c <__adddf3+0x308>
1002050c:	180a977a 	slli	r5,r3,29
10020510:	01080034 	movhi	r4,8192
10020514:	213fffc4 	addi	r4,r4,-1
10020518:	3104703a 	and	r2,r6,r4
1002051c:	2884b03a 	or	r2,r5,r2
10020520:	1812d0fa 	srli	r9,r3,3
10020524:	3823883a 	mov	r17,r7
10020528:	003f4106 	br	10020230 <__adddf3+0x3dc>
1002052c:	62e7c83a 	sub	r19,r12,r11
10020530:	48d3c83a 	sub	r9,r9,r3
10020534:	64c9803a 	cmpltu	r4,r12,r19
10020538:	4909c83a 	sub	r4,r9,r4
1002053c:	04000044 	movi	r16,1
10020540:	003e7506 	br	1001ff18 <__adddf3+0xc4>
10020544:	4b12b03a 	or	r9,r9,r12
10020548:	4826c03a 	cmpne	r19,r9,zero
1002054c:	003f9b06 	br	100203bc <__adddf3+0x568>
10020550:	4826977a 	slli	r19,r9,29
10020554:	00c80034 	movhi	r3,8192
10020558:	18ffffc4 	addi	r3,r3,-1
1002055c:	20c4703a 	and	r2,r4,r3
10020560:	9884b03a 	or	r2,r19,r2
10020564:	4812d0fa 	srli	r9,r9,3
10020568:	003f3106 	br	10020230 <__adddf3+0x3dc>
1002056c:	1101ffe0 	cmpeqi	r4,r2,2047
10020570:	203f091e 	bne	r4,zero,10020198 <__adddf3+0x344>
10020574:	62d7883a 	add	r11,r12,r11
10020578:	5b09803a 	cmpltu	r4,r11,r12
1002057c:	48d3883a 	add	r9,r9,r3
10020580:	490b883a 	add	r5,r9,r4
10020584:	282697fa 	slli	r19,r5,31
10020588:	5816d07a 	srli	r11,r11,1
1002058c:	2808d07a 	srli	r4,r5,1
10020590:	1021883a 	mov	r16,r2
10020594:	9ae6b03a 	or	r19,r19,r11
10020598:	003ee806 	br	1002013c <__adddf3+0x2e8>
1002059c:	5b27c83a 	sub	r19,r11,r12
100205a0:	1a53c83a 	sub	r9,r3,r9
100205a4:	5cc9803a 	cmpltu	r4,r11,r19
100205a8:	4925c83a 	sub	r18,r9,r4
100205ac:	3823883a 	mov	r17,r7
100205b0:	003e5e06 	br	1001ff2c <__adddf3+0xd8>
100205b4:	28002d1e 	bne	r5,zero,1002066c <__adddf3+0x818>
100205b8:	103fd41e 	bne	r2,zero,1002050c <__adddf3+0x6b8>
100205bc:	00bfffc4 	movi	r2,-1
100205c0:	0023883a 	mov	r17,zero
100205c4:	4013883a 	mov	r9,r8
100205c8:	003f1b06 	br	10020238 <__adddf3+0x3e4>
100205cc:	00880034 	movhi	r2,8192
100205d0:	1808977a 	slli	r4,r3,29
100205d4:	10bfffc4 	addi	r2,r2,-1
100205d8:	3084703a 	and	r2,r6,r2
100205dc:	1104b03a 	or	r2,r2,r4
100205e0:	1812d0fa 	srli	r9,r3,3
100205e4:	003f1206 	br	10020230 <__adddf3+0x3dc>
100205e8:	62e7c83a 	sub	r19,r12,r11
100205ec:	48cbc83a 	sub	r5,r9,r3
100205f0:	64c9803a 	cmpltu	r4,r12,r19
100205f4:	2909c83a 	sub	r4,r5,r4
100205f8:	2080202c 	andhi	r2,r4,128
100205fc:	10003626 	beq	r2,zero,100206d8 <__adddf3+0x884>
10020600:	5b27c83a 	sub	r19,r11,r12
10020604:	1a53c83a 	sub	r9,r3,r9
10020608:	5cc9803a 	cmpltu	r4,r11,r19
1002060c:	4909c83a 	sub	r4,r9,r4
10020610:	3823883a 	mov	r17,r7
10020614:	003e5e06 	br	1001ff90 <__adddf3+0x13c>
10020618:	4b12b03a 	or	r9,r9,r12
1002061c:	4826c03a 	cmpne	r19,r9,zero
10020620:	003f5006 	br	10020364 <__adddf3+0x510>
10020624:	4806977a 	slli	r3,r9,29
10020628:	00880034 	movhi	r2,8192
1002062c:	10bfffc4 	addi	r2,r2,-1
10020630:	2084703a 	and	r2,r4,r2
10020634:	10c4b03a 	or	r2,r2,r3
10020638:	4812d0fa 	srli	r9,r9,3
1002063c:	003efc06 	br	10020230 <__adddf3+0x3dc>
10020640:	217ff804 	addi	r5,r4,-32
10020644:	21800820 	cmpeqi	r6,r4,32
10020648:	494ad83a 	srl	r5,r9,r5
1002064c:	3000041e 	bne	r6,zero,10020660 <__adddf3+0x80c>
10020650:	01801004 	movi	r6,64
10020654:	3109c83a 	sub	r4,r6,r4
10020658:	4912983a 	sll	r9,r9,r4
1002065c:	6258b03a 	or	r12,r12,r9
10020660:	6026c03a 	cmpne	r19,r12,zero
10020664:	9966b03a 	or	r19,r19,r5
10020668:	003f5406 	br	100203bc <__adddf3+0x568>
1002066c:	480a977a 	slli	r5,r9,29
10020670:	4812d0fa 	srli	r9,r9,3
10020674:	10003626 	beq	r2,zero,10020750 <__adddf3+0x8fc>
10020678:	02080034 	movhi	r8,8192
1002067c:	423fffc4 	addi	r8,r8,-1
10020680:	2204703a 	and	r2,r4,r8
10020684:	4900022c 	andhi	r4,r9,8
10020688:	114ab03a 	or	r5,r2,r5
1002068c:	20000826 	beq	r4,zero,100206b0 <__adddf3+0x85c>
10020690:	1808d0fa 	srli	r4,r3,3
10020694:	2080022c 	andhi	r2,r4,8
10020698:	1000051e 	bne	r2,zero,100206b0 <__adddf3+0x85c>
1002069c:	1806977a 	slli	r3,r3,29
100206a0:	3204703a 	and	r2,r6,r8
100206a4:	3823883a 	mov	r17,r7
100206a8:	10cab03a 	or	r5,r2,r3
100206ac:	2013883a 	mov	r9,r4
100206b0:	480890fa 	slli	r4,r9,3
100206b4:	2804d77a 	srli	r2,r5,29
100206b8:	00c80034 	movhi	r3,8192
100206bc:	18ffffc4 	addi	r3,r3,-1
100206c0:	1108b03a 	or	r4,r2,r4
100206c4:	200c977a 	slli	r6,r4,29
100206c8:	28c4703a 	and	r2,r5,r3
100206cc:	2012d0fa 	srli	r9,r4,3
100206d0:	3084b03a 	or	r2,r6,r2
100206d4:	003ed606 	br	10020230 <__adddf3+0x3dc>
100206d8:	9904b03a 	or	r2,r19,r4
100206dc:	103e971e 	bne	r2,zero,1002013c <__adddf3+0x2e8>
100206e0:	0013883a 	mov	r9,zero
100206e4:	0023883a 	mov	r17,zero
100206e8:	003e9c06 	br	1002015c <__adddf3+0x308>
100206ec:	5b27c83a 	sub	r19,r11,r12
100206f0:	1a53c83a 	sub	r9,r3,r9
100206f4:	5cc9803a 	cmpltu	r4,r11,r19
100206f8:	4909c83a 	sub	r4,r9,r4
100206fc:	3823883a 	mov	r17,r7
10020700:	04000044 	movi	r16,1
10020704:	003e0406 	br	1001ff18 <__adddf3+0xc4>
10020708:	180a977a 	slli	r5,r3,29
1002070c:	01080034 	movhi	r4,8192
10020710:	213fffc4 	addi	r4,r4,-1
10020714:	3104703a 	and	r2,r6,r4
10020718:	2884b03a 	or	r2,r5,r2
1002071c:	1812d0fa 	srli	r9,r3,3
10020720:	003e8e06 	br	1002015c <__adddf3+0x308>
10020724:	62e7883a 	add	r19,r12,r11
10020728:	48d3883a 	add	r9,r9,r3
1002072c:	9b09803a 	cmpltu	r4,r19,r12
10020730:	4909883a 	add	r4,r9,r4
10020734:	2080202c 	andhi	r2,r4,128
10020738:	103e8026 	beq	r2,zero,1002013c <__adddf3+0x2e8>
1002073c:	00bfe034 	movhi	r2,65408
10020740:	10bfffc4 	addi	r2,r2,-1
10020744:	2088703a 	and	r4,r4,r2
10020748:	04000044 	movi	r16,1
1002074c:	003e7b06 	br	1002013c <__adddf3+0x2e8>
10020750:	00880034 	movhi	r2,8192
10020754:	10bfffc4 	addi	r2,r2,-1
10020758:	2084703a 	and	r2,r4,r2
1002075c:	1144b03a 	or	r2,r2,r5
10020760:	003eb306 	br	10020230 <__adddf3+0x3dc>
10020764:	180e977a 	slli	r7,r3,29
10020768:	01480034 	movhi	r5,8192
1002076c:	297fffc4 	addi	r5,r5,-1
10020770:	3144703a 	and	r2,r6,r5
10020774:	3884b03a 	or	r2,r7,r2
10020778:	1812d0fa 	srli	r9,r3,3
1002077c:	2021883a 	mov	r16,r4
10020780:	003e7406 	br	10020154 <__adddf3+0x300>
10020784:	00880034 	movhi	r2,8192
10020788:	1808977a 	slli	r4,r3,29
1002078c:	10bfffc4 	addi	r2,r2,-1
10020790:	3084703a 	and	r2,r6,r2
10020794:	1104b03a 	or	r2,r2,r4
10020798:	1812d0fa 	srli	r9,r3,3
1002079c:	3823883a 	mov	r17,r7
100207a0:	003ea306 	br	10020230 <__adddf3+0x3dc>
100207a4:	217ff804 	addi	r5,r4,-32
100207a8:	21800820 	cmpeqi	r6,r4,32
100207ac:	494ad83a 	srl	r5,r9,r5
100207b0:	3000041e 	bne	r6,zero,100207c4 <__adddf3+0x970>
100207b4:	01801004 	movi	r6,64
100207b8:	3109c83a 	sub	r4,r6,r4
100207bc:	4912983a 	sll	r9,r9,r4
100207c0:	6258b03a 	or	r12,r12,r9
100207c4:	6026c03a 	cmpne	r19,r12,zero
100207c8:	9966b03a 	or	r19,r19,r5
100207cc:	003ee506 	br	10020364 <__adddf3+0x510>
100207d0:	62e7883a 	add	r19,r12,r11
100207d4:	48d3883a 	add	r9,r9,r3
100207d8:	9ac9803a 	cmpltu	r4,r19,r11
100207dc:	4909883a 	add	r4,r9,r4
100207e0:	003e5306 	br	10020130 <__adddf3+0x2dc>
100207e4:	0005883a 	mov	r2,zero
100207e8:	0401ffc4 	movi	r16,2047
100207ec:	0009883a 	mov	r4,zero
100207f0:	003dfe06 	br	1001ffec <__adddf3+0x198>

100207f4 <__divdf3>:
100207f4:	defff104 	addi	sp,sp,-60
100207f8:	2804d53a 	srli	r2,r5,20
100207fc:	dd000915 	stw	r20,36(sp)
10020800:	2828d7fa 	srli	r20,r5,31
10020804:	dc000515 	stw	r16,20(sp)
10020808:	04000434 	movhi	r16,16
1002080c:	ddc00c15 	stw	r23,48(sp)
10020810:	dc800715 	stw	r18,28(sp)
10020814:	843fffc4 	addi	r16,r16,-1
10020818:	dfc00e15 	stw	ra,56(sp)
1002081c:	df000d15 	stw	fp,52(sp)
10020820:	dd800b15 	stw	r22,44(sp)
10020824:	dd400a15 	stw	r21,40(sp)
10020828:	dcc00815 	stw	r19,32(sp)
1002082c:	dc400615 	stw	r17,24(sp)
10020830:	1081ffcc 	andi	r2,r2,2047
10020834:	2025883a 	mov	r18,r4
10020838:	2c20703a 	and	r16,r5,r16
1002083c:	a02f883a 	mov	r23,r20
10020840:	10008926 	beq	r2,zero,10020a68 <__divdf3+0x274>
10020844:	10c1ffe0 	cmpeqi	r3,r2,2047
10020848:	18009f1e 	bne	r3,zero,10020ac8 <__divdf3+0x2d4>
1002084c:	800a90fa 	slli	r5,r16,3
10020850:	2008d77a 	srli	r4,r4,29
10020854:	902490fa 	slli	r18,r18,3
10020858:	157f0044 	addi	r21,r2,-1023
1002085c:	2148b03a 	or	r4,r4,r5
10020860:	25802034 	orhi	r22,r4,128
10020864:	0023883a 	mov	r17,zero
10020868:	0021883a 	mov	r16,zero
1002086c:	3806d53a 	srli	r3,r7,20
10020870:	01000434 	movhi	r4,16
10020874:	213fffc4 	addi	r4,r4,-1
10020878:	18c1ffcc 	andi	r3,r3,2047
1002087c:	3926703a 	and	r19,r7,r4
10020880:	380ed7fa 	srli	r7,r7,31
10020884:	18006326 	beq	r3,zero,10020a14 <__divdf3+0x220>
10020888:	1881ffe0 	cmpeqi	r2,r3,2047
1002088c:	1000201e 	bne	r2,zero,10020910 <__divdf3+0x11c>
10020890:	980890fa 	slli	r4,r19,3
10020894:	300ad77a 	srli	r5,r6,29
10020898:	301090fa 	slli	r8,r6,3
1002089c:	18ff0044 	addi	r3,r3,-1023
100208a0:	2908b03a 	or	r4,r5,r4
100208a4:	a8ebc83a 	sub	r21,r21,r3
100208a8:	24c02034 	orhi	r19,r4,128
100208ac:	0007883a 	mov	r3,zero
100208b0:	89800428 	cmpgeui	r6,r17,16
100208b4:	a1f8f03a 	xor	fp,r20,r7
100208b8:	3000ad1e 	bne	r6,zero,10020b70 <__divdf3+0x37c>
100208bc:	882290ba 	slli	r17,r17,2
100208c0:	008400b4 	movhi	r2,4098
100208c4:	8885883a 	add	r2,r17,r2
100208c8:	10823417 	ldw	r2,2256(r2)
100208cc:	1000683a 	jmp	r2
100208d0:	10020b70 	cmpltui	zero,r2,2093
100208d4:	10020a04 	addi	zero,r2,2088
100208d8:	100209a8 	cmpgeui	zero,r2,2086
100208dc:	1002092c 	andhi	zero,r2,2084
100208e0:	100209a8 	cmpgeui	zero,r2,2086
100208e4:	10020b2c 	andhi	zero,r2,2092
100208e8:	100209a8 	cmpgeui	zero,r2,2086
100208ec:	1002092c 	andhi	zero,r2,2084
100208f0:	10020a04 	addi	zero,r2,2088
100208f4:	10020a04 	addi	zero,r2,2088
100208f8:	10020b2c 	andhi	zero,r2,2092
100208fc:	1002092c 	andhi	zero,r2,2084
10020900:	1002093c 	xorhi	zero,r2,2084
10020904:	1002093c 	xorhi	zero,r2,2084
10020908:	1002093c 	xorhi	zero,r2,2084
1002090c:	10020b44 	addi	zero,r2,2093
10020910:	9990b03a 	or	r8,r19,r6
10020914:	ad7e0044 	addi	r21,r21,-2047
10020918:	4000801e 	bne	r8,zero,10020b1c <__divdf3+0x328>
1002091c:	8c400094 	ori	r17,r17,2
10020920:	0027883a 	mov	r19,zero
10020924:	00c00084 	movi	r3,2
10020928:	003fe106 	br	100208b0 <__divdf3+0xbc>
1002092c:	382f883a 	mov	r23,r7
10020930:	982d883a 	mov	r22,r19
10020934:	4025883a 	mov	r18,r8
10020938:	1821883a 	mov	r16,r3
1002093c:	808000a0 	cmpeqi	r2,r16,2
10020940:	10017c1e 	bne	r2,zero,10020f34 <__divdf3+0x740>
10020944:	808000e0 	cmpeqi	r2,r16,3
10020948:	1001ca1e 	bne	r2,zero,10021074 <__divdf3+0x880>
1002094c:	80800060 	cmpeqi	r2,r16,1
10020950:	1000141e 	bne	r2,zero,100209a4 <__divdf3+0x1b0>
10020954:	ac00ffc4 	addi	r16,r21,1023
10020958:	b839883a 	mov	fp,r23
1002095c:	0401580e 	bge	zero,r16,10020ec0 <__divdf3+0x6cc>
10020960:	908001cc 	andi	r2,r18,7
10020964:	1001921e 	bne	r2,zero,10020fb0 <__divdf3+0x7bc>
10020968:	900ad0fa 	srli	r5,r18,3
1002096c:	b080402c 	andhi	r2,r22,256
10020970:	10000426 	beq	r2,zero,10020984 <__divdf3+0x190>
10020974:	00bfc034 	movhi	r2,65280
10020978:	10bfffc4 	addi	r2,r2,-1
1002097c:	b0ac703a 	and	r22,r22,r2
10020980:	ac010004 	addi	r16,r21,1024
10020984:	8081ffc8 	cmpgei	r2,r16,2047
10020988:	10001e1e 	bne	r2,zero,10020a04 <__divdf3+0x210>
1002098c:	b024977a 	slli	r18,r22,29
10020990:	b008927a 	slli	r4,r22,9
10020994:	8081ffcc 	andi	r2,r16,2047
10020998:	9164b03a 	or	r18,r18,r5
1002099c:	2008d33a 	srli	r4,r4,12
100209a0:	00000406 	br	100209b4 <__divdf3+0x1c0>
100209a4:	b839883a 	mov	fp,r23
100209a8:	0005883a 	mov	r2,zero
100209ac:	0009883a 	mov	r4,zero
100209b0:	0025883a 	mov	r18,zero
100209b4:	1004953a 	slli	r2,r2,20
100209b8:	00c00434 	movhi	r3,16
100209bc:	e03897fa 	slli	fp,fp,31
100209c0:	18ffffc4 	addi	r3,r3,-1
100209c4:	20c6703a 	and	r3,r4,r3
100209c8:	1886b03a 	or	r3,r3,r2
100209cc:	1f06b03a 	or	r3,r3,fp
100209d0:	9005883a 	mov	r2,r18
100209d4:	dfc00e17 	ldw	ra,56(sp)
100209d8:	df000d17 	ldw	fp,52(sp)
100209dc:	ddc00c17 	ldw	r23,48(sp)
100209e0:	dd800b17 	ldw	r22,44(sp)
100209e4:	dd400a17 	ldw	r21,40(sp)
100209e8:	dd000917 	ldw	r20,36(sp)
100209ec:	dcc00817 	ldw	r19,32(sp)
100209f0:	dc800717 	ldw	r18,28(sp)
100209f4:	dc400617 	ldw	r17,24(sp)
100209f8:	dc000517 	ldw	r16,20(sp)
100209fc:	dec00f04 	addi	sp,sp,60
10020a00:	f800283a 	ret
10020a04:	0081ffc4 	movi	r2,2047
10020a08:	0009883a 	mov	r4,zero
10020a0c:	0025883a 	mov	r18,zero
10020a10:	003fe806 	br	100209b4 <__divdf3+0x1c0>
10020a14:	9990b03a 	or	r8,r19,r6
10020a18:	40003c26 	beq	r8,zero,10020b0c <__divdf3+0x318>
10020a1c:	98011826 	beq	r19,zero,10020e80 <__divdf3+0x68c>
10020a20:	9809883a 	mov	r4,r19
10020a24:	d9800115 	stw	r6,4(sp)
10020a28:	d9c00015 	stw	r7,0(sp)
10020a2c:	002252c0 	call	1002252c <__clzsi2>
10020a30:	d9c00017 	ldw	r7,0(sp)
10020a34:	d9800117 	ldw	r6,4(sp)
10020a38:	117ffd44 	addi	r5,r2,-11
10020a3c:	00c00744 	movi	r3,29
10020a40:	123ffe04 	addi	r8,r2,-8
10020a44:	1947c83a 	sub	r3,r3,r5
10020a48:	9a08983a 	sll	r4,r19,r8
10020a4c:	30c6d83a 	srl	r3,r6,r3
10020a50:	3210983a 	sll	r8,r6,r8
10020a54:	1926b03a 	or	r19,r3,r4
10020a58:	1545883a 	add	r2,r2,r21
10020a5c:	1540fcc4 	addi	r21,r2,1011
10020a60:	0007883a 	mov	r3,zero
10020a64:	003f9206 	br	100208b0 <__divdf3+0xbc>
10020a68:	242cb03a 	or	r22,r4,r16
10020a6c:	2023883a 	mov	r17,r4
10020a70:	b0002126 	beq	r22,zero,10020af8 <__divdf3+0x304>
10020a74:	d9c00115 	stw	r7,4(sp)
10020a78:	d9800015 	stw	r6,0(sp)
10020a7c:	8000f526 	beq	r16,zero,10020e54 <__divdf3+0x660>
10020a80:	8009883a 	mov	r4,r16
10020a84:	002252c0 	call	1002252c <__clzsi2>
10020a88:	d9800017 	ldw	r6,0(sp)
10020a8c:	d9c00117 	ldw	r7,4(sp)
10020a90:	102b883a 	mov	r21,r2
10020a94:	113ffd44 	addi	r4,r2,-11
10020a98:	05800744 	movi	r22,29
10020a9c:	acbffe04 	addi	r18,r21,-8
10020aa0:	b12dc83a 	sub	r22,r22,r4
10020aa4:	848a983a 	sll	r5,r16,r18
10020aa8:	8d88d83a 	srl	r4,r17,r22
10020aac:	8ca4983a 	sll	r18,r17,r18
10020ab0:	216cb03a 	or	r22,r4,r5
10020ab4:	00bf0344 	movi	r2,-1011
10020ab8:	156bc83a 	sub	r21,r2,r21
10020abc:	0023883a 	mov	r17,zero
10020ac0:	0021883a 	mov	r16,zero
10020ac4:	003f6906 	br	1002086c <__divdf3+0x78>
10020ac8:	242cb03a 	or	r22,r4,r16
10020acc:	b000051e 	bne	r22,zero,10020ae4 <__divdf3+0x2f0>
10020ad0:	0025883a 	mov	r18,zero
10020ad4:	04400204 	movi	r17,8
10020ad8:	0541ffc4 	movi	r21,2047
10020adc:	04000084 	movi	r16,2
10020ae0:	003f6206 	br	1002086c <__divdf3+0x78>
10020ae4:	802d883a 	mov	r22,r16
10020ae8:	04400304 	movi	r17,12
10020aec:	0541ffc4 	movi	r21,2047
10020af0:	040000c4 	movi	r16,3
10020af4:	003f5d06 	br	1002086c <__divdf3+0x78>
10020af8:	0025883a 	mov	r18,zero
10020afc:	04400104 	movi	r17,4
10020b00:	002b883a 	mov	r21,zero
10020b04:	04000044 	movi	r16,1
10020b08:	003f5806 	br	1002086c <__divdf3+0x78>
10020b0c:	8c400054 	ori	r17,r17,1
10020b10:	0027883a 	mov	r19,zero
10020b14:	00c00044 	movi	r3,1
10020b18:	003f6506 	br	100208b0 <__divdf3+0xbc>
10020b1c:	8c4000d4 	ori	r17,r17,3
10020b20:	3011883a 	mov	r8,r6
10020b24:	00c000c4 	movi	r3,3
10020b28:	003f6106 	br	100208b0 <__divdf3+0xbc>
10020b2c:	01000434 	movhi	r4,16
10020b30:	0039883a 	mov	fp,zero
10020b34:	213fffc4 	addi	r4,r4,-1
10020b38:	04bfffc4 	movi	r18,-1
10020b3c:	0081ffc4 	movi	r2,2047
10020b40:	003f9c06 	br	100209b4 <__divdf3+0x1c0>
10020b44:	b080022c 	andhi	r2,r22,8
10020b48:	1000a126 	beq	r2,zero,10020dd0 <__divdf3+0x5dc>
10020b4c:	9880022c 	andhi	r2,r19,8
10020b50:	10009f1e 	bne	r2,zero,10020dd0 <__divdf3+0x5dc>
10020b54:	00800434 	movhi	r2,16
10020b58:	99000234 	orhi	r4,r19,8
10020b5c:	10bfffc4 	addi	r2,r2,-1
10020b60:	2088703a 	and	r4,r4,r2
10020b64:	3839883a 	mov	fp,r7
10020b68:	4025883a 	mov	r18,r8
10020b6c:	003ff306 	br	10020b3c <__divdf3+0x348>
10020b70:	9d80b236 	bltu	r19,r22,10020e3c <__divdf3+0x648>
10020b74:	9d80b026 	beq	r19,r22,10020e38 <__divdf3+0x644>
10020b78:	ad7fffc4 	addi	r21,r21,-1
10020b7c:	b007883a 	mov	r3,r22
10020b80:	0021883a 	mov	r16,zero
10020b84:	400cd63a 	srli	r6,r8,24
10020b88:	9826923a 	slli	r19,r19,8
10020b8c:	4004923a 	slli	r2,r8,8
10020b90:	1809883a 	mov	r4,r3
10020b94:	34e2b03a 	or	r17,r6,r19
10020b98:	8828d43a 	srli	r20,r17,16
10020b9c:	d8c00115 	stw	r3,4(sp)
10020ba0:	d8800015 	stw	r2,0(sp)
10020ba4:	a00b883a 	mov	r5,r20
10020ba8:	00149840 	call	10014984 <__udivsi3>
10020bac:	d8c00117 	ldw	r3,4(sp)
10020bb0:	a00b883a 	mov	r5,r20
10020bb4:	102d883a 	mov	r22,r2
10020bb8:	1809883a 	mov	r4,r3
10020bbc:	00149e80 	call	100149e8 <__umodsi3>
10020bc0:	1006943a 	slli	r3,r2,16
10020bc4:	8dffffcc 	andi	r23,r17,65535
10020bc8:	9004d43a 	srli	r2,r18,16
10020bcc:	bda7383a 	mul	r19,r23,r22
10020bd0:	10c4b03a 	or	r2,r2,r3
10020bd4:	14c0042e 	bgeu	r2,r19,10020be8 <__divdf3+0x3f4>
10020bd8:	1445883a 	add	r2,r2,r17
10020bdc:	b0ffffc4 	addi	r3,r22,-1
10020be0:	1440e12e 	bgeu	r2,r17,10020f68 <__divdf3+0x774>
10020be4:	182d883a 	mov	r22,r3
10020be8:	14e7c83a 	sub	r19,r2,r19
10020bec:	a00b883a 	mov	r5,r20
10020bf0:	9809883a 	mov	r4,r19
10020bf4:	00149840 	call	10014984 <__udivsi3>
10020bf8:	a00b883a 	mov	r5,r20
10020bfc:	9809883a 	mov	r4,r19
10020c00:	d8800115 	stw	r2,4(sp)
10020c04:	00149e80 	call	100149e8 <__umodsi3>
10020c08:	d8c00117 	ldw	r3,4(sp)
10020c0c:	1004943a 	slli	r2,r2,16
10020c10:	94bfffcc 	andi	r18,r18,65535
10020c14:	b8cb383a 	mul	r5,r23,r3
10020c18:	9084b03a 	or	r2,r18,r2
10020c1c:	1140042e 	bgeu	r2,r5,10020c30 <__divdf3+0x43c>
10020c20:	1445883a 	add	r2,r2,r17
10020c24:	193fffc4 	addi	r4,r3,-1
10020c28:	1440cb2e 	bgeu	r2,r17,10020f58 <__divdf3+0x764>
10020c2c:	2007883a 	mov	r3,r4
10020c30:	b008943a 	slli	r4,r22,16
10020c34:	d9800017 	ldw	r6,0(sp)
10020c38:	1145c83a 	sub	r2,r2,r5
10020c3c:	20ecb03a 	or	r22,r4,r3
10020c40:	b0ffffcc 	andi	r3,r22,65535
10020c44:	300ed43a 	srli	r7,r6,16
10020c48:	323fffcc 	andi	r8,r6,65535
10020c4c:	b026d43a 	srli	r19,r22,16
10020c50:	40e5383a 	mul	r18,r8,r3
10020c54:	38c9383a 	mul	r4,r7,r3
10020c58:	9a13383a 	mul	r9,r19,r8
10020c5c:	9006d43a 	srli	r3,r18,16
10020c60:	2249883a 	add	r4,r4,r9
10020c64:	1907883a 	add	r3,r3,r4
10020c68:	99c9383a 	mul	r4,r19,r7
10020c6c:	1a40022e 	bgeu	r3,r9,10020c78 <__divdf3+0x484>
10020c70:	01400074 	movhi	r5,1
10020c74:	2149883a 	add	r4,r4,r5
10020c78:	1826d43a 	srli	r19,r3,16
10020c7c:	1806943a 	slli	r3,r3,16
10020c80:	94bfffcc 	andi	r18,r18,65535
10020c84:	9927883a 	add	r19,r19,r4
10020c88:	1ca5883a 	add	r18,r3,r18
10020c8c:	14c05f36 	bltu	r2,r19,10020e0c <__divdf3+0x618>
10020c90:	14c05d26 	beq	r2,r19,10020e08 <__divdf3+0x614>
10020c94:	84a5c83a 	sub	r18,r16,r18
10020c98:	14c5c83a 	sub	r2,r2,r19
10020c9c:	84a7803a 	cmpltu	r19,r16,r18
10020ca0:	da000215 	stw	r8,8(sp)
10020ca4:	d9c00115 	stw	r7,4(sp)
10020ca8:	14e7c83a 	sub	r19,r2,r19
10020cac:	ac00ffc4 	addi	r16,r21,1023
10020cb0:	8cc0b626 	beq	r17,r19,10020f8c <__divdf3+0x798>
10020cb4:	9809883a 	mov	r4,r19
10020cb8:	a00b883a 	mov	r5,r20
10020cbc:	00149840 	call	10014984 <__udivsi3>
10020cc0:	9809883a 	mov	r4,r19
10020cc4:	a00b883a 	mov	r5,r20
10020cc8:	d8800315 	stw	r2,12(sp)
10020ccc:	00149e80 	call	100149e8 <__umodsi3>
10020cd0:	d8c00317 	ldw	r3,12(sp)
10020cd4:	1008943a 	slli	r4,r2,16
10020cd8:	9004d43a 	srli	r2,r18,16
10020cdc:	b8e7383a 	mul	r19,r23,r3
10020ce0:	d9c00117 	ldw	r7,4(sp)
10020ce4:	1104b03a 	or	r2,r2,r4
10020ce8:	da000217 	ldw	r8,8(sp)
10020cec:	14c0062e 	bgeu	r2,r19,10020d08 <__divdf3+0x514>
10020cf0:	1445883a 	add	r2,r2,r17
10020cf4:	193fffc4 	addi	r4,r3,-1
10020cf8:	1440ab36 	bltu	r2,r17,10020fa8 <__divdf3+0x7b4>
10020cfc:	14c0aa2e 	bgeu	r2,r19,10020fa8 <__divdf3+0x7b4>
10020d00:	18ffff84 	addi	r3,r3,-2
10020d04:	1445883a 	add	r2,r2,r17
10020d08:	14e7c83a 	sub	r19,r2,r19
10020d0c:	a00b883a 	mov	r5,r20
10020d10:	9809883a 	mov	r4,r19
10020d14:	da000415 	stw	r8,16(sp)
10020d18:	d8c00315 	stw	r3,12(sp)
10020d1c:	d9c00215 	stw	r7,8(sp)
10020d20:	00149840 	call	10014984 <__udivsi3>
10020d24:	a00b883a 	mov	r5,r20
10020d28:	9809883a 	mov	r4,r19
10020d2c:	d8800115 	stw	r2,4(sp)
10020d30:	00149e80 	call	100149e8 <__umodsi3>
10020d34:	da400117 	ldw	r9,4(sp)
10020d38:	1004943a 	slli	r2,r2,16
10020d3c:	94bfffcc 	andi	r18,r18,65535
10020d40:	ba6f383a 	mul	r23,r23,r9
10020d44:	9084b03a 	or	r2,r18,r2
10020d48:	d9c00217 	ldw	r7,8(sp)
10020d4c:	d8c00317 	ldw	r3,12(sp)
10020d50:	da000417 	ldw	r8,16(sp)
10020d54:	15c0062e 	bgeu	r2,r23,10020d70 <__divdf3+0x57c>
10020d58:	1445883a 	add	r2,r2,r17
10020d5c:	493fffc4 	addi	r4,r9,-1
10020d60:	14408f36 	bltu	r2,r17,10020fa0 <__divdf3+0x7ac>
10020d64:	15c08e2e 	bgeu	r2,r23,10020fa0 <__divdf3+0x7ac>
10020d68:	4a7fff84 	addi	r9,r9,-2
10020d6c:	1445883a 	add	r2,r2,r17
10020d70:	180a943a 	slli	r5,r3,16
10020d74:	15c5c83a 	sub	r2,r2,r23
10020d78:	2a64b03a 	or	r18,r5,r9
10020d7c:	9012d43a 	srli	r9,r18,16
10020d80:	913fffcc 	andi	r4,r18,65535
10020d84:	220b383a 	mul	r5,r4,r8
10020d88:	3909383a 	mul	r4,r7,r4
10020d8c:	4a11383a 	mul	r8,r9,r8
10020d90:	2806d43a 	srli	r3,r5,16
10020d94:	3a4f383a 	mul	r7,r7,r9
10020d98:	2209883a 	add	r4,r4,r8
10020d9c:	1907883a 	add	r3,r3,r4
10020da0:	1a00022e 	bgeu	r3,r8,10020dac <__divdf3+0x5b8>
10020da4:	01000074 	movhi	r4,1
10020da8:	390f883a 	add	r7,r7,r4
10020dac:	1808d43a 	srli	r4,r3,16
10020db0:	1806943a 	slli	r3,r3,16
10020db4:	297fffcc 	andi	r5,r5,65535
10020db8:	21cf883a 	add	r7,r4,r7
10020dbc:	1947883a 	add	r3,r3,r5
10020dc0:	11c00a36 	bltu	r2,r7,10020dec <__divdf3+0x5f8>
10020dc4:	11c00826 	beq	r2,r7,10020de8 <__divdf3+0x5f4>
10020dc8:	94800054 	ori	r18,r18,1
10020dcc:	003ee306 	br	1002095c <__divdf3+0x168>
10020dd0:	00800434 	movhi	r2,16
10020dd4:	b1000234 	orhi	r4,r22,8
10020dd8:	10bfffc4 	addi	r2,r2,-1
10020ddc:	2088703a 	and	r4,r4,r2
10020de0:	a039883a 	mov	fp,r20
10020de4:	003f5506 	br	10020b3c <__divdf3+0x348>
10020de8:	183edc26 	beq	r3,zero,1002095c <__divdf3+0x168>
10020dec:	8885883a 	add	r2,r17,r2
10020df0:	913fffc4 	addi	r4,r18,-1
10020df4:	14406036 	bltu	r2,r17,10020f78 <__divdf3+0x784>
10020df8:	11c07d36 	bltu	r2,r7,10020ff0 <__divdf3+0x7fc>
10020dfc:	11c0a326 	beq	r2,r7,1002108c <__divdf3+0x898>
10020e00:	2025883a 	mov	r18,r4
10020e04:	003ff006 	br	10020dc8 <__divdf3+0x5d4>
10020e08:	84bfa22e 	bgeu	r16,r18,10020c94 <__divdf3+0x4a0>
10020e0c:	d8c00017 	ldw	r3,0(sp)
10020e10:	80e1883a 	add	r16,r16,r3
10020e14:	80c7803a 	cmpltu	r3,r16,r3
10020e18:	1c47883a 	add	r3,r3,r17
10020e1c:	10c5883a 	add	r2,r2,r3
10020e20:	b0ffffc4 	addi	r3,r22,-1
10020e24:	8880482e 	bgeu	r17,r2,10020f48 <__divdf3+0x754>
10020e28:	14c06a36 	bltu	r2,r19,10020fd4 <__divdf3+0x7e0>
10020e2c:	98806826 	beq	r19,r2,10020fd0 <__divdf3+0x7dc>
10020e30:	182d883a 	mov	r22,r3
10020e34:	003f9706 	br	10020c94 <__divdf3+0x4a0>
10020e38:	923f4f36 	bltu	r18,r8,10020b78 <__divdf3+0x384>
10020e3c:	b00a97fa 	slli	r5,r22,31
10020e40:	9004d07a 	srli	r2,r18,1
10020e44:	902097fa 	slli	r16,r18,31
10020e48:	b006d07a 	srli	r3,r22,1
10020e4c:	28a4b03a 	or	r18,r5,r2
10020e50:	003f4c06 	br	10020b84 <__divdf3+0x390>
10020e54:	002252c0 	call	1002252c <__clzsi2>
10020e58:	11000544 	addi	r4,r2,21
10020e5c:	21400748 	cmpgei	r5,r4,29
10020e60:	15400804 	addi	r21,r2,32
10020e64:	d9800017 	ldw	r6,0(sp)
10020e68:	d9c00117 	ldw	r7,4(sp)
10020e6c:	283f0a26 	beq	r5,zero,10020a98 <__divdf3+0x2a4>
10020e70:	113ffe04 	addi	r4,r2,-8
10020e74:	912c983a 	sll	r22,r18,r4
10020e78:	0025883a 	mov	r18,zero
10020e7c:	003f0d06 	br	10020ab4 <__divdf3+0x2c0>
10020e80:	3009883a 	mov	r4,r6
10020e84:	d9c00115 	stw	r7,4(sp)
10020e88:	d9800015 	stw	r6,0(sp)
10020e8c:	002252c0 	call	1002252c <__clzsi2>
10020e90:	11400544 	addi	r5,r2,21
10020e94:	28c00748 	cmpgei	r3,r5,29
10020e98:	1009883a 	mov	r4,r2
10020e9c:	d9800017 	ldw	r6,0(sp)
10020ea0:	10800804 	addi	r2,r2,32
10020ea4:	d9c00117 	ldw	r7,4(sp)
10020ea8:	183ee426 	beq	r3,zero,10020a3c <__divdf3+0x248>
10020eac:	213ffe04 	addi	r4,r4,-8
10020eb0:	3126983a 	sll	r19,r6,r4
10020eb4:	0011883a 	mov	r8,zero
10020eb8:	003ee706 	br	10020a58 <__divdf3+0x264>
10020ebc:	04bfffc4 	movi	r18,-1
10020ec0:	01000044 	movi	r4,1
10020ec4:	2409c83a 	sub	r4,r4,r16
10020ec8:	20800e48 	cmpgei	r2,r4,57
10020ecc:	103eb61e 	bne	r2,zero,100209a8 <__divdf3+0x1b4>
10020ed0:	20800808 	cmpgei	r2,r4,32
10020ed4:	10004e1e 	bne	r2,zero,10021010 <__divdf3+0x81c>
10020ed8:	a8810784 	addi	r2,r21,1054
10020edc:	b086983a 	sll	r3,r22,r2
10020ee0:	910ad83a 	srl	r5,r18,r4
10020ee4:	9084983a 	sll	r2,r18,r2
10020ee8:	b108d83a 	srl	r4,r22,r4
10020eec:	1964b03a 	or	r18,r3,r5
10020ef0:	1004c03a 	cmpne	r2,r2,zero
10020ef4:	90a4b03a 	or	r18,r18,r2
10020ef8:	908001cc 	andi	r2,r18,7
10020efc:	10000726 	beq	r2,zero,10020f1c <__divdf3+0x728>
10020f00:	908003cc 	andi	r2,r18,15
10020f04:	10800120 	cmpeqi	r2,r2,4
10020f08:	1000041e 	bne	r2,zero,10020f1c <__divdf3+0x728>
10020f0c:	90800104 	addi	r2,r18,4
10020f10:	14a5803a 	cmpltu	r18,r2,r18
10020f14:	2489883a 	add	r4,r4,r18
10020f18:	1025883a 	mov	r18,r2
10020f1c:	2080202c 	andhi	r2,r4,128
10020f20:	10005026 	beq	r2,zero,10021064 <__divdf3+0x870>
10020f24:	00800044 	movi	r2,1
10020f28:	0009883a 	mov	r4,zero
10020f2c:	0025883a 	mov	r18,zero
10020f30:	003ea006 	br	100209b4 <__divdf3+0x1c0>
10020f34:	b839883a 	mov	fp,r23
10020f38:	0081ffc4 	movi	r2,2047
10020f3c:	0009883a 	mov	r4,zero
10020f40:	0025883a 	mov	r18,zero
10020f44:	003e9b06 	br	100209b4 <__divdf3+0x1c0>
10020f48:	88bfb91e 	bne	r17,r2,10020e30 <__divdf3+0x63c>
10020f4c:	d9000017 	ldw	r4,0(sp)
10020f50:	813fb736 	bltu	r16,r4,10020e30 <__divdf3+0x63c>
10020f54:	003fb406 	br	10020e28 <__divdf3+0x634>
10020f58:	117f342e 	bgeu	r2,r5,10020c2c <__divdf3+0x438>
10020f5c:	18ffff84 	addi	r3,r3,-2
10020f60:	1445883a 	add	r2,r2,r17
10020f64:	003f3206 	br	10020c30 <__divdf3+0x43c>
10020f68:	14ff1e2e 	bgeu	r2,r19,10020be4 <__divdf3+0x3f0>
10020f6c:	b5bfff84 	addi	r22,r22,-2
10020f70:	1445883a 	add	r2,r2,r17
10020f74:	003f1c06 	br	10020be8 <__divdf3+0x3f4>
10020f78:	2025883a 	mov	r18,r4
10020f7c:	11ff921e 	bne	r2,r7,10020dc8 <__divdf3+0x5d4>
10020f80:	d8800017 	ldw	r2,0(sp)
10020f84:	10ff901e 	bne	r2,r3,10020dc8 <__divdf3+0x5d4>
10020f88:	003e7406 	br	1002095c <__divdf3+0x168>
10020f8c:	043fcb0e 	bge	zero,r16,10020ebc <__divdf3+0x6c8>
10020f90:	000b883a 	mov	r5,zero
10020f94:	04800044 	movi	r18,1
10020f98:	b4ad883a 	add	r22,r22,r18
10020f9c:	003e7306 	br	1002096c <__divdf3+0x178>
10020fa0:	2013883a 	mov	r9,r4
10020fa4:	003f7206 	br	10020d70 <__divdf3+0x57c>
10020fa8:	2007883a 	mov	r3,r4
10020fac:	003f5606 	br	10020d08 <__divdf3+0x514>
10020fb0:	908003cc 	andi	r2,r18,15
10020fb4:	10800118 	cmpnei	r2,r2,4
10020fb8:	103e6b26 	beq	r2,zero,10020968 <__divdf3+0x174>
10020fbc:	91400104 	addi	r5,r18,4
10020fc0:	00bffec4 	movi	r2,-5
10020fc4:	14a5803a 	cmpltu	r18,r2,r18
10020fc8:	280ad0fa 	srli	r5,r5,3
10020fcc:	003ff206 	br	10020f98 <__divdf3+0x7a4>
10020fd0:	84bf972e 	bgeu	r16,r18,10020e30 <__divdf3+0x63c>
10020fd4:	d8c00017 	ldw	r3,0(sp)
10020fd8:	b5bfff84 	addi	r22,r22,-2
10020fdc:	80e1883a 	add	r16,r16,r3
10020fe0:	80c7803a 	cmpltu	r3,r16,r3
10020fe4:	1c47883a 	add	r3,r3,r17
10020fe8:	10c5883a 	add	r2,r2,r3
10020fec:	003f2906 	br	10020c94 <__divdf3+0x4a0>
10020ff0:	d9400017 	ldw	r5,0(sp)
10020ff4:	94bfff84 	addi	r18,r18,-2
10020ff8:	2949883a 	add	r4,r5,r5
10020ffc:	214b803a 	cmpltu	r5,r4,r5
10021000:	2c4d883a 	add	r6,r5,r17
10021004:	1185883a 	add	r2,r2,r6
10021008:	d9000015 	stw	r4,0(sp)
1002100c:	003fdb06 	br	10020f7c <__divdf3+0x788>
10021010:	00bff844 	movi	r2,-31
10021014:	1421c83a 	sub	r16,r2,r16
10021018:	21000820 	cmpeqi	r4,r4,32
1002101c:	b420d83a 	srl	r16,r22,r16
10021020:	2000031e 	bne	r4,zero,10021030 <__divdf3+0x83c>
10021024:	a8810f84 	addi	r2,r21,1086
10021028:	b088983a 	sll	r4,r22,r2
1002102c:	9124b03a 	or	r18,r18,r4
10021030:	9024c03a 	cmpne	r18,r18,zero
10021034:	9424b03a 	or	r18,r18,r16
10021038:	914001cc 	andi	r5,r18,7
1002103c:	2800051e 	bne	r5,zero,10021054 <__divdf3+0x860>
10021040:	0009883a 	mov	r4,zero
10021044:	9024d0fa 	srli	r18,r18,3
10021048:	0005883a 	mov	r2,zero
1002104c:	9164b03a 	or	r18,r18,r5
10021050:	003e5806 	br	100209b4 <__divdf3+0x1c0>
10021054:	908003cc 	andi	r2,r18,15
10021058:	10800118 	cmpnei	r2,r2,4
1002105c:	0009883a 	mov	r4,zero
10021060:	103faa1e 	bne	r2,zero,10020f0c <__divdf3+0x718>
10021064:	2004927a 	slli	r2,r4,9
10021068:	200a977a 	slli	r5,r4,29
1002106c:	1008d33a 	srli	r4,r2,12
10021070:	003ff406 	br	10021044 <__divdf3+0x850>
10021074:	00800434 	movhi	r2,16
10021078:	b1000234 	orhi	r4,r22,8
1002107c:	10bfffc4 	addi	r2,r2,-1
10021080:	2088703a 	and	r4,r4,r2
10021084:	b839883a 	mov	fp,r23
10021088:	003eac06 	br	10020b3c <__divdf3+0x348>
1002108c:	d9400017 	ldw	r5,0(sp)
10021090:	28ffd736 	bltu	r5,r3,10020ff0 <__divdf3+0x7fc>
10021094:	2025883a 	mov	r18,r4
10021098:	003fb906 	br	10020f80 <__divdf3+0x78c>

1002109c <__eqdf2>:
1002109c:	2810d53a 	srli	r8,r5,20
100210a0:	3806d53a 	srli	r3,r7,20
100210a4:	00800434 	movhi	r2,16
100210a8:	4201ffcc 	andi	r8,r8,2047
100210ac:	10bfffc4 	addi	r2,r2,-1
100210b0:	4281ffd8 	cmpnei	r10,r8,2047
100210b4:	2892703a 	and	r9,r5,r2
100210b8:	18c1ffcc 	andi	r3,r3,2047
100210bc:	3884703a 	and	r2,r7,r2
100210c0:	280ad7fa 	srli	r5,r5,31
100210c4:	380ed7fa 	srli	r7,r7,31
100210c8:	50000626 	beq	r10,zero,100210e4 <__eqdf2+0x48>
100210cc:	1a81ffe0 	cmpeqi	r10,r3,2047
100210d0:	5000021e 	bne	r10,zero,100210dc <__eqdf2+0x40>
100210d4:	40c0011e 	bne	r8,r3,100210dc <__eqdf2+0x40>
100210d8:	48800826 	beq	r9,r2,100210fc <__eqdf2+0x60>
100210dc:	00800044 	movi	r2,1
100210e0:	f800283a 	ret
100210e4:	4914b03a 	or	r10,r9,r4
100210e8:	503ffc1e 	bne	r10,zero,100210dc <__eqdf2+0x40>
100210ec:	18c1ffd8 	cmpnei	r3,r3,2047
100210f0:	183ffa1e 	bne	r3,zero,100210dc <__eqdf2+0x40>
100210f4:	1184b03a 	or	r2,r2,r6
100210f8:	103ff81e 	bne	r2,zero,100210dc <__eqdf2+0x40>
100210fc:	21bff71e 	bne	r4,r6,100210dc <__eqdf2+0x40>
10021100:	29c00426 	beq	r5,r7,10021114 <__eqdf2+0x78>
10021104:	403ff51e 	bne	r8,zero,100210dc <__eqdf2+0x40>
10021108:	4904b03a 	or	r2,r9,r4
1002110c:	1004c03a 	cmpne	r2,r2,zero
10021110:	f800283a 	ret
10021114:	0005883a 	mov	r2,zero
10021118:	f800283a 	ret

1002111c <__gedf2>:
1002111c:	2810d53a 	srli	r8,r5,20
10021120:	3812d53a 	srli	r9,r7,20
10021124:	00800434 	movhi	r2,16
10021128:	4201ffcc 	andi	r8,r8,2047
1002112c:	10bfffc4 	addi	r2,r2,-1
10021130:	4281ffd8 	cmpnei	r10,r8,2047
10021134:	2896703a 	and	r11,r5,r2
10021138:	3886703a 	and	r3,r7,r2
1002113c:	280ad7fa 	srli	r5,r5,31
10021140:	4a41ffcc 	andi	r9,r9,2047
10021144:	3804d7fa 	srli	r2,r7,31
10021148:	50000b26 	beq	r10,zero,10021178 <__gedf2+0x5c>
1002114c:	49c1ffd8 	cmpnei	r7,r9,2047
10021150:	38000d26 	beq	r7,zero,10021188 <__gedf2+0x6c>
10021154:	4000191e 	bne	r8,zero,100211bc <__gedf2+0xa0>
10021158:	5914b03a 	or	r10,r11,r4
1002115c:	500f003a 	cmpeq	r7,r10,zero
10021160:	4800131e 	bne	r9,zero,100211b0 <__gedf2+0x94>
10021164:	1998b03a 	or	r12,r3,r6
10021168:	6000111e 	bne	r12,zero,100211b0 <__gedf2+0x94>
1002116c:	50000a1e 	bne	r10,zero,10021198 <__gedf2+0x7c>
10021170:	0005883a 	mov	r2,zero
10021174:	f800283a 	ret
10021178:	590eb03a 	or	r7,r11,r4
1002117c:	38001e1e 	bne	r7,zero,100211f8 <__gedf2+0xdc>
10021180:	49c1ffe0 	cmpeqi	r7,r9,2047
10021184:	38000d26 	beq	r7,zero,100211bc <__gedf2+0xa0>
10021188:	198eb03a 	or	r7,r3,r6
1002118c:	38001a1e 	bne	r7,zero,100211f8 <__gedf2+0xdc>
10021190:	40000526 	beq	r8,zero,100211a8 <__gedf2+0x8c>
10021194:	28800d26 	beq	r5,r2,100211cc <__gedf2+0xb0>
10021198:	00800044 	movi	r2,1
1002119c:	28000626 	beq	r5,zero,100211b8 <__gedf2+0x9c>
100211a0:	00bfffc4 	movi	r2,-1
100211a4:	f800283a 	ret
100211a8:	590eb03a 	or	r7,r11,r4
100211ac:	380f003a 	cmpeq	r7,r7,zero
100211b0:	383ff826 	beq	r7,zero,10021194 <__gedf2+0x78>
100211b4:	103ffa26 	beq	r2,zero,100211a0 <__gedf2+0x84>
100211b8:	f800283a 	ret
100211bc:	483ff51e 	bne	r9,zero,10021194 <__gedf2+0x78>
100211c0:	198eb03a 	or	r7,r3,r6
100211c4:	383ff31e 	bne	r7,zero,10021194 <__gedf2+0x78>
100211c8:	003ff306 	br	10021198 <__gedf2+0x7c>
100211cc:	4a000716 	blt	r9,r8,100211ec <__gedf2+0xd0>
100211d0:	427ff816 	blt	r8,r9,100211b4 <__gedf2+0x98>
100211d4:	1afff036 	bltu	r3,r11,10021198 <__gedf2+0x7c>
100211d8:	58c00926 	beq	r11,r3,10021200 <__gedf2+0xe4>
100211dc:	58ffe42e 	bgeu	r11,r3,10021170 <__gedf2+0x54>
100211e0:	283fef26 	beq	r5,zero,100211a0 <__gedf2+0x84>
100211e4:	2805883a 	mov	r2,r5
100211e8:	f800283a 	ret
100211ec:	103fec1e 	bne	r2,zero,100211a0 <__gedf2+0x84>
100211f0:	00800044 	movi	r2,1
100211f4:	f800283a 	ret
100211f8:	00bfff84 	movi	r2,-2
100211fc:	f800283a 	ret
10021200:	313fe536 	bltu	r6,r4,10021198 <__gedf2+0x7c>
10021204:	21bfda2e 	bgeu	r4,r6,10021170 <__gedf2+0x54>
10021208:	003ff506 	br	100211e0 <__gedf2+0xc4>

1002120c <__ledf2>:
1002120c:	2810d53a 	srli	r8,r5,20
10021210:	3812d53a 	srli	r9,r7,20
10021214:	00800434 	movhi	r2,16
10021218:	4201ffcc 	andi	r8,r8,2047
1002121c:	10bfffc4 	addi	r2,r2,-1
10021220:	4281ffd8 	cmpnei	r10,r8,2047
10021224:	2896703a 	and	r11,r5,r2
10021228:	3886703a 	and	r3,r7,r2
1002122c:	280ad7fa 	srli	r5,r5,31
10021230:	4a41ffcc 	andi	r9,r9,2047
10021234:	3804d7fa 	srli	r2,r7,31
10021238:	50000b26 	beq	r10,zero,10021268 <__ledf2+0x5c>
1002123c:	49c1ffd8 	cmpnei	r7,r9,2047
10021240:	38000d26 	beq	r7,zero,10021278 <__ledf2+0x6c>
10021244:	40001b1e 	bne	r8,zero,100212b4 <__ledf2+0xa8>
10021248:	5914b03a 	or	r10,r11,r4
1002124c:	500f003a 	cmpeq	r7,r10,zero
10021250:	48000e1e 	bne	r9,zero,1002128c <__ledf2+0x80>
10021254:	1998b03a 	or	r12,r3,r6
10021258:	60000c1e 	bne	r12,zero,1002128c <__ledf2+0x80>
1002125c:	50000d1e 	bne	r10,zero,10021294 <__ledf2+0x88>
10021260:	0005883a 	mov	r2,zero
10021264:	f800283a 	ret
10021268:	590eb03a 	or	r7,r11,r4
1002126c:	38000d1e 	bne	r7,zero,100212a4 <__ledf2+0x98>
10021270:	49c1ffe0 	cmpeqi	r7,r9,2047
10021274:	38000f26 	beq	r7,zero,100212b4 <__ledf2+0xa8>
10021278:	198eb03a 	or	r7,r3,r6
1002127c:	3800091e 	bne	r7,zero,100212a4 <__ledf2+0x98>
10021280:	4000031e 	bne	r8,zero,10021290 <__ledf2+0x84>
10021284:	590eb03a 	or	r7,r11,r4
10021288:	380f003a 	cmpeq	r7,r7,zero
1002128c:	3800071e 	bne	r7,zero,100212ac <__ledf2+0xa0>
10021290:	28800c26 	beq	r5,r2,100212c4 <__ledf2+0xb8>
10021294:	00800044 	movi	r2,1
10021298:	28000526 	beq	r5,zero,100212b0 <__ledf2+0xa4>
1002129c:	00bfffc4 	movi	r2,-1
100212a0:	f800283a 	ret
100212a4:	00800084 	movi	r2,2
100212a8:	f800283a 	ret
100212ac:	103ffb26 	beq	r2,zero,1002129c <__ledf2+0x90>
100212b0:	f800283a 	ret
100212b4:	483ff61e 	bne	r9,zero,10021290 <__ledf2+0x84>
100212b8:	198eb03a 	or	r7,r3,r6
100212bc:	383ff41e 	bne	r7,zero,10021290 <__ledf2+0x84>
100212c0:	003ff406 	br	10021294 <__ledf2+0x88>
100212c4:	4a00030e 	bge	r9,r8,100212d4 <__ledf2+0xc8>
100212c8:	103ff41e 	bne	r2,zero,1002129c <__ledf2+0x90>
100212cc:	00800044 	movi	r2,1
100212d0:	f800283a 	ret
100212d4:	427ff516 	blt	r8,r9,100212ac <__ledf2+0xa0>
100212d8:	1affee36 	bltu	r3,r11,10021294 <__ledf2+0x88>
100212dc:	58c00426 	beq	r11,r3,100212f0 <__ledf2+0xe4>
100212e0:	58ffdf2e 	bgeu	r11,r3,10021260 <__ledf2+0x54>
100212e4:	283fed26 	beq	r5,zero,1002129c <__ledf2+0x90>
100212e8:	2805883a 	mov	r2,r5
100212ec:	f800283a 	ret
100212f0:	313fe836 	bltu	r6,r4,10021294 <__ledf2+0x88>
100212f4:	21bfda2e 	bgeu	r4,r6,10021260 <__ledf2+0x54>
100212f8:	003ffa06 	br	100212e4 <__ledf2+0xd8>

100212fc <__muldf3>:
100212fc:	2806d53a 	srli	r3,r5,20
10021300:	defff504 	addi	sp,sp,-44
10021304:	dc000215 	stw	r16,8(sp)
10021308:	04000434 	movhi	r16,16
1002130c:	dd000615 	stw	r20,24(sp)
10021310:	dc800415 	stw	r18,16(sp)
10021314:	843fffc4 	addi	r16,r16,-1
10021318:	dfc00a15 	stw	ra,40(sp)
1002131c:	ddc00915 	stw	r23,36(sp)
10021320:	dd800815 	stw	r22,32(sp)
10021324:	dd400715 	stw	r21,28(sp)
10021328:	dcc00515 	stw	r19,20(sp)
1002132c:	dc400315 	stw	r17,12(sp)
10021330:	18c1ffcc 	andi	r3,r3,2047
10021334:	2025883a 	mov	r18,r4
10021338:	2c20703a 	and	r16,r5,r16
1002133c:	2828d7fa 	srli	r20,r5,31
10021340:	18005c26 	beq	r3,zero,100214b4 <__muldf3+0x1b8>
10021344:	1881ffe0 	cmpeqi	r2,r3,2047
10021348:	1000711e 	bne	r2,zero,10021510 <__muldf3+0x214>
1002134c:	800490fa 	slli	r2,r16,3
10021350:	2020d77a 	srli	r16,r4,29
10021354:	202290fa 	slli	r17,r4,3
10021358:	1cff0044 	addi	r19,r3,-1023
1002135c:	80a0b03a 	or	r16,r16,r2
10021360:	84002034 	orhi	r16,r16,128
10021364:	002d883a 	mov	r22,zero
10021368:	002f883a 	mov	r23,zero
1002136c:	3806d53a 	srli	r3,r7,20
10021370:	01000434 	movhi	r4,16
10021374:	213fffc4 	addi	r4,r4,-1
10021378:	18c1ffcc 	andi	r3,r3,2047
1002137c:	3924703a 	and	r18,r7,r4
10021380:	382ad7fa 	srli	r21,r7,31
10021384:	18006926 	beq	r3,zero,1002152c <__muldf3+0x230>
10021388:	1881ffe0 	cmpeqi	r2,r3,2047
1002138c:	1000211e 	bne	r2,zero,10021414 <__muldf3+0x118>
10021390:	900890fa 	slli	r4,r18,3
10021394:	300ad77a 	srli	r5,r6,29
10021398:	301090fa 	slli	r8,r6,3
1002139c:	18ff0044 	addi	r3,r3,-1023
100213a0:	2908b03a 	or	r4,r5,r4
100213a4:	98e7883a 	add	r19,r19,r3
100213a8:	24802034 	orhi	r18,r4,128
100213ac:	0007883a 	mov	r3,zero
100213b0:	b1000428 	cmpgeui	r4,r22,16
100213b4:	a54cf03a 	xor	r6,r20,r21
100213b8:	99400044 	addi	r5,r19,1
100213bc:	2000981e 	bne	r4,zero,10021620 <__muldf3+0x324>
100213c0:	b00890ba 	slli	r4,r22,2
100213c4:	008400b4 	movhi	r2,4098
100213c8:	2085883a 	add	r2,r4,r2
100213cc:	1084f517 	ldw	r2,5076(r2)
100213d0:	1000683a 	jmp	r2
100213d4:	10021620 	cmpeqi	zero,r2,2136
100213d8:	10021434 	orhi	zero,r2,2128
100213dc:	10021434 	orhi	zero,r2,2128
100213e0:	10021430 	cmpltui	zero,r2,2128
100213e4:	10021440 	call	11002144 <_gp+0xfd1b28>
100213e8:	10021440 	call	11002144 <_gp+0xfd1b28>
100213ec:	100215dc 	xori	zero,r2,2135
100213f0:	10021430 	cmpltui	zero,r2,2128
100213f4:	10021440 	call	11002144 <_gp+0xfd1b28>
100213f8:	100215dc 	xori	zero,r2,2135
100213fc:	10021440 	call	11002144 <_gp+0xfd1b28>
10021400:	10021430 	cmpltui	zero,r2,2128
10021404:	100215d4 	ori	zero,r2,2135
10021408:	100215d4 	ori	zero,r2,2135
1002140c:	100215d4 	ori	zero,r2,2135
10021410:	100215f4 	orhi	zero,r2,2135
10021414:	3490b03a 	or	r8,r6,r18
10021418:	9cc1ffc4 	addi	r19,r19,2047
1002141c:	4000691e 	bne	r8,zero,100215c4 <__muldf3+0x2c8>
10021420:	b5800094 	ori	r22,r22,2
10021424:	0025883a 	mov	r18,zero
10021428:	00c00084 	movi	r3,2
1002142c:	003fe006 	br	100213b0 <__muldf3+0xb4>
10021430:	a80d883a 	mov	r6,r21
10021434:	9021883a 	mov	r16,r18
10021438:	4023883a 	mov	r17,r8
1002143c:	182f883a 	mov	r23,r3
10021440:	b88000a0 	cmpeqi	r2,r23,2
10021444:	10004d1e 	bne	r2,zero,1002157c <__muldf3+0x280>
10021448:	b88000e0 	cmpeqi	r2,r23,3
1002144c:	1001491e 	bne	r2,zero,10021974 <__muldf3+0x678>
10021450:	b8800060 	cmpeqi	r2,r23,1
10021454:	1000d826 	beq	r2,zero,100217b8 <__muldf3+0x4bc>
10021458:	0007883a 	mov	r3,zero
1002145c:	0021883a 	mov	r16,zero
10021460:	0023883a 	mov	r17,zero
10021464:	30803fcc 	andi	r2,r6,255
10021468:	01000434 	movhi	r4,16
1002146c:	1806953a 	slli	r3,r3,20
10021470:	213fffc4 	addi	r4,r4,-1
10021474:	100497fa 	slli	r2,r2,31
10021478:	8120703a 	and	r16,r16,r4
1002147c:	80c6b03a 	or	r3,r16,r3
10021480:	1886b03a 	or	r3,r3,r2
10021484:	8805883a 	mov	r2,r17
10021488:	dfc00a17 	ldw	ra,40(sp)
1002148c:	ddc00917 	ldw	r23,36(sp)
10021490:	dd800817 	ldw	r22,32(sp)
10021494:	dd400717 	ldw	r21,28(sp)
10021498:	dd000617 	ldw	r20,24(sp)
1002149c:	dcc00517 	ldw	r19,20(sp)
100214a0:	dc800417 	ldw	r18,16(sp)
100214a4:	dc400317 	ldw	r17,12(sp)
100214a8:	dc000217 	ldw	r16,8(sp)
100214ac:	dec00b04 	addi	sp,sp,44
100214b0:	f800283a 	ret
100214b4:	8122b03a 	or	r17,r16,r4
100214b8:	88003d26 	beq	r17,zero,100215b0 <__muldf3+0x2b4>
100214bc:	d9c00115 	stw	r7,4(sp)
100214c0:	d9800015 	stw	r6,0(sp)
100214c4:	8000e826 	beq	r16,zero,10021868 <__muldf3+0x56c>
100214c8:	8009883a 	mov	r4,r16
100214cc:	002252c0 	call	1002252c <__clzsi2>
100214d0:	d9800017 	ldw	r6,0(sp)
100214d4:	d9c00117 	ldw	r7,4(sp)
100214d8:	1007883a 	mov	r3,r2
100214dc:	117ffd44 	addi	r5,r2,-11
100214e0:	01000744 	movi	r4,29
100214e4:	1c7ffe04 	addi	r17,r3,-8
100214e8:	2149c83a 	sub	r4,r4,r5
100214ec:	8460983a 	sll	r16,r16,r17
100214f0:	9108d83a 	srl	r4,r18,r4
100214f4:	9462983a 	sll	r17,r18,r17
100214f8:	2420b03a 	or	r16,r4,r16
100214fc:	04ff0344 	movi	r19,-1011
10021500:	98e7c83a 	sub	r19,r19,r3
10021504:	002d883a 	mov	r22,zero
10021508:	002f883a 	mov	r23,zero
1002150c:	003f9706 	br	1002136c <__muldf3+0x70>
10021510:	8122b03a 	or	r17,r16,r4
10021514:	8800211e 	bne	r17,zero,1002159c <__muldf3+0x2a0>
10021518:	0021883a 	mov	r16,zero
1002151c:	05800204 	movi	r22,8
10021520:	04c1ffc4 	movi	r19,2047
10021524:	05c00084 	movi	r23,2
10021528:	003f9006 	br	1002136c <__muldf3+0x70>
1002152c:	3490b03a 	or	r8,r6,r18
10021530:	40001626 	beq	r8,zero,1002158c <__muldf3+0x290>
10021534:	9000c026 	beq	r18,zero,10021838 <__muldf3+0x53c>
10021538:	9009883a 	mov	r4,r18
1002153c:	d9800015 	stw	r6,0(sp)
10021540:	002252c0 	call	1002252c <__clzsi2>
10021544:	d9800017 	ldw	r6,0(sp)
10021548:	1007883a 	mov	r3,r2
1002154c:	113ffd44 	addi	r4,r2,-11
10021550:	01400744 	movi	r5,29
10021554:	1a3ffe04 	addi	r8,r3,-8
10021558:	290bc83a 	sub	r5,r5,r4
1002155c:	314ad83a 	srl	r5,r6,r5
10021560:	9208983a 	sll	r4,r18,r8
10021564:	3210983a 	sll	r8,r6,r8
10021568:	2924b03a 	or	r18,r5,r4
1002156c:	98c7c83a 	sub	r3,r19,r3
10021570:	1cff0344 	addi	r19,r3,-1011
10021574:	0007883a 	mov	r3,zero
10021578:	003f8d06 	br	100213b0 <__muldf3+0xb4>
1002157c:	00c1ffc4 	movi	r3,2047
10021580:	0021883a 	mov	r16,zero
10021584:	0023883a 	mov	r17,zero
10021588:	003fb606 	br	10021464 <__muldf3+0x168>
1002158c:	b5800054 	ori	r22,r22,1
10021590:	0025883a 	mov	r18,zero
10021594:	00c00044 	movi	r3,1
10021598:	003f8506 	br	100213b0 <__muldf3+0xb4>
1002159c:	2023883a 	mov	r17,r4
100215a0:	05800304 	movi	r22,12
100215a4:	04c1ffc4 	movi	r19,2047
100215a8:	05c000c4 	movi	r23,3
100215ac:	003f6f06 	br	1002136c <__muldf3+0x70>
100215b0:	0021883a 	mov	r16,zero
100215b4:	05800104 	movi	r22,4
100215b8:	0027883a 	mov	r19,zero
100215bc:	05c00044 	movi	r23,1
100215c0:	003f6a06 	br	1002136c <__muldf3+0x70>
100215c4:	b58000d4 	ori	r22,r22,3
100215c8:	3011883a 	mov	r8,r6
100215cc:	00c000c4 	movi	r3,3
100215d0:	003f7706 	br	100213b0 <__muldf3+0xb4>
100215d4:	a00d883a 	mov	r6,r20
100215d8:	003f9906 	br	10021440 <__muldf3+0x144>
100215dc:	04000434 	movhi	r16,16
100215e0:	000d883a 	mov	r6,zero
100215e4:	843fffc4 	addi	r16,r16,-1
100215e8:	047fffc4 	movi	r17,-1
100215ec:	00c1ffc4 	movi	r3,2047
100215f0:	003f9c06 	br	10021464 <__muldf3+0x168>
100215f4:	8080022c 	andhi	r2,r16,8
100215f8:	10008926 	beq	r2,zero,10021820 <__muldf3+0x524>
100215fc:	9080022c 	andhi	r2,r18,8
10021600:	1000871e 	bne	r2,zero,10021820 <__muldf3+0x524>
10021604:	00800434 	movhi	r2,16
10021608:	94000234 	orhi	r16,r18,8
1002160c:	10bfffc4 	addi	r2,r2,-1
10021610:	80a0703a 	and	r16,r16,r2
10021614:	a80d883a 	mov	r6,r21
10021618:	4023883a 	mov	r17,r8
1002161c:	003ff306 	br	100215ec <__muldf3+0x2f0>
10021620:	8818d43a 	srli	r12,r17,16
10021624:	4028d43a 	srli	r20,r8,16
10021628:	42ffffcc 	andi	r11,r8,65535
1002162c:	8c7fffcc 	andi	r17,r17,65535
10021630:	5c47383a 	mul	r3,r11,r17
10021634:	62c9383a 	mul	r4,r12,r11
10021638:	a445383a 	mul	r2,r20,r17
1002163c:	1810d43a 	srli	r8,r3,16
10021640:	651d383a 	mul	r14,r12,r20
10021644:	1105883a 	add	r2,r2,r4
10021648:	4091883a 	add	r8,r8,r2
1002164c:	4100022e 	bgeu	r8,r4,10021658 <__muldf3+0x35c>
10021650:	00800074 	movhi	r2,1
10021654:	709d883a 	add	r14,r14,r2
10021658:	901ed43a 	srli	r15,r18,16
1002165c:	94bfffcc 	andi	r18,r18,65535
10021660:	9449383a 	mul	r4,r18,r17
10021664:	648f383a 	mul	r7,r12,r18
10021668:	7c63383a 	mul	r17,r15,r17
1002166c:	201ad43a 	srli	r13,r4,16
10021670:	4014943a 	slli	r10,r8,16
10021674:	89e3883a 	add	r17,r17,r7
10021678:	1a7fffcc 	andi	r9,r3,65535
1002167c:	6c5b883a 	add	r13,r13,r17
10021680:	4006d43a 	srli	r3,r8,16
10021684:	5253883a 	add	r9,r10,r9
10021688:	63c5383a 	mul	r2,r12,r15
1002168c:	69c0022e 	bgeu	r13,r7,10021698 <__muldf3+0x39c>
10021690:	01c00074 	movhi	r7,1
10021694:	11c5883a 	add	r2,r2,r7
10021698:	802ad43a 	srli	r21,r16,16
1002169c:	823fffcc 	andi	r8,r16,65535
100216a0:	5a2d383a 	mul	r22,r11,r8
100216a4:	a20f383a 	mul	r7,r20,r8
100216a8:	aad7383a 	mul	r11,r21,r11
100216ac:	6814943a 	slli	r10,r13,16
100216b0:	b018d43a 	srli	r12,r22,16
100216b4:	6822d43a 	srli	r17,r13,16
100216b8:	213fffcc 	andi	r4,r4,65535
100216bc:	3acf883a 	add	r7,r7,r11
100216c0:	5115883a 	add	r10,r10,r4
100216c4:	61cf883a 	add	r7,r12,r7
100216c8:	889b883a 	add	r13,r17,r2
100216cc:	1a87883a 	add	r3,r3,r10
100216d0:	a569383a 	mul	r20,r20,r21
100216d4:	3ac0022e 	bgeu	r7,r11,100216e0 <__muldf3+0x3e4>
100216d8:	00800074 	movhi	r2,1
100216dc:	a0a9883a 	add	r20,r20,r2
100216e0:	9217383a 	mul	r11,r18,r8
100216e4:	aca5383a 	mul	r18,r21,r18
100216e8:	7a11383a 	mul	r8,r15,r8
100216ec:	5820d43a 	srli	r16,r11,16
100216f0:	3808d43a 	srli	r4,r7,16
100216f4:	380e943a 	slli	r7,r7,16
100216f8:	4491883a 	add	r8,r8,r18
100216fc:	b5bfffcc 	andi	r22,r22,65535
10021700:	8211883a 	add	r8,r16,r8
10021704:	2529883a 	add	r20,r4,r20
10021708:	3d8f883a 	add	r7,r7,r22
1002170c:	7d59383a 	mul	r12,r15,r21
10021710:	4480022e 	bgeu	r8,r18,1002171c <__muldf3+0x420>
10021714:	00800074 	movhi	r2,1
10021718:	6099883a 	add	r12,r12,r2
1002171c:	4004943a 	slli	r2,r8,16
10021720:	5affffcc 	andi	r11,r11,65535
10021724:	1b87883a 	add	r3,r3,r14
10021728:	12c5883a 	add	r2,r2,r11
1002172c:	1a95803a 	cmpltu	r10,r3,r10
10021730:	1345883a 	add	r2,r2,r13
10021734:	19c7883a 	add	r3,r3,r7
10021738:	129d883a 	add	r14,r2,r10
1002173c:	19cf803a 	cmpltu	r7,r3,r7
10021740:	7509883a 	add	r4,r14,r20
10021744:	4010d43a 	srli	r8,r8,16
10021748:	21d7883a 	add	r11,r4,r7
1002174c:	1345803a 	cmpltu	r2,r2,r13
10021750:	72a1803a 	cmpltu	r16,r14,r10
10021754:	1420b03a 	or	r16,r2,r16
10021758:	2509803a 	cmpltu	r4,r4,r20
1002175c:	59cf803a 	cmpltu	r7,r11,r7
10021760:	21ceb03a 	or	r7,r4,r7
10021764:	8221883a 	add	r16,r16,r8
10021768:	81e1883a 	add	r16,r16,r7
1002176c:	1822927a 	slli	r17,r3,9
10021770:	8321883a 	add	r16,r16,r12
10021774:	8020927a 	slli	r16,r16,9
10021778:	5808d5fa 	srli	r4,r11,23
1002177c:	1806d5fa 	srli	r3,r3,23
10021780:	8a62b03a 	or	r17,r17,r9
10021784:	5804927a 	slli	r2,r11,9
10021788:	8120b03a 	or	r16,r16,r4
1002178c:	8822c03a 	cmpne	r17,r17,zero
10021790:	88e2b03a 	or	r17,r17,r3
10021794:	80c0402c 	andhi	r3,r16,256
10021798:	88a2b03a 	or	r17,r17,r2
1002179c:	18005a26 	beq	r3,zero,10021908 <__muldf3+0x60c>
100217a0:	8804d07a 	srli	r2,r17,1
100217a4:	800697fa 	slli	r3,r16,31
100217a8:	8c40004c 	andi	r17,r17,1
100217ac:	8020d07a 	srli	r16,r16,1
100217b0:	1462b03a 	or	r17,r2,r17
100217b4:	88e2b03a 	or	r17,r17,r3
100217b8:	28c0ffc4 	addi	r3,r5,1023
100217bc:	00c0350e 	bge	zero,r3,10021894 <__muldf3+0x598>
100217c0:	888001cc 	andi	r2,r17,7
100217c4:	10000726 	beq	r2,zero,100217e4 <__muldf3+0x4e8>
100217c8:	888003cc 	andi	r2,r17,15
100217cc:	10800120 	cmpeqi	r2,r2,4
100217d0:	1000041e 	bne	r2,zero,100217e4 <__muldf3+0x4e8>
100217d4:	88800104 	addi	r2,r17,4
100217d8:	1463803a 	cmpltu	r17,r2,r17
100217dc:	8461883a 	add	r16,r16,r17
100217e0:	1023883a 	mov	r17,r2
100217e4:	8080402c 	andhi	r2,r16,256
100217e8:	10000426 	beq	r2,zero,100217fc <__muldf3+0x500>
100217ec:	00bfc034 	movhi	r2,65280
100217f0:	10bfffc4 	addi	r2,r2,-1
100217f4:	80a0703a 	and	r16,r16,r2
100217f8:	28c10004 	addi	r3,r5,1024
100217fc:	1881ffc8 	cmpgei	r2,r3,2047
10021800:	103f5e1e 	bne	r2,zero,1002157c <__muldf3+0x280>
10021804:	8004977a 	slli	r2,r16,29
10021808:	8822d0fa 	srli	r17,r17,3
1002180c:	8020927a 	slli	r16,r16,9
10021810:	18c1ffcc 	andi	r3,r3,2047
10021814:	1462b03a 	or	r17,r2,r17
10021818:	8020d33a 	srli	r16,r16,12
1002181c:	003f1106 	br	10021464 <__muldf3+0x168>
10021820:	00800434 	movhi	r2,16
10021824:	84000234 	orhi	r16,r16,8
10021828:	10bfffc4 	addi	r2,r2,-1
1002182c:	80a0703a 	and	r16,r16,r2
10021830:	a00d883a 	mov	r6,r20
10021834:	003f6d06 	br	100215ec <__muldf3+0x2f0>
10021838:	3009883a 	mov	r4,r6
1002183c:	d9800015 	stw	r6,0(sp)
10021840:	002252c0 	call	1002252c <__clzsi2>
10021844:	11000544 	addi	r4,r2,21
10021848:	21400748 	cmpgei	r5,r4,29
1002184c:	10c00804 	addi	r3,r2,32
10021850:	d9800017 	ldw	r6,0(sp)
10021854:	283f3e26 	beq	r5,zero,10021550 <__muldf3+0x254>
10021858:	10bffe04 	addi	r2,r2,-8
1002185c:	30a4983a 	sll	r18,r6,r2
10021860:	0011883a 	mov	r8,zero
10021864:	003f4106 	br	1002156c <__muldf3+0x270>
10021868:	002252c0 	call	1002252c <__clzsi2>
1002186c:	11400544 	addi	r5,r2,21
10021870:	29000748 	cmpgei	r4,r5,29
10021874:	10c00804 	addi	r3,r2,32
10021878:	d9800017 	ldw	r6,0(sp)
1002187c:	d9c00117 	ldw	r7,4(sp)
10021880:	203f1726 	beq	r4,zero,100214e0 <__muldf3+0x1e4>
10021884:	10bffe04 	addi	r2,r2,-8
10021888:	90a0983a 	sll	r16,r18,r2
1002188c:	0023883a 	mov	r17,zero
10021890:	003f1a06 	br	100214fc <__muldf3+0x200>
10021894:	00800044 	movi	r2,1
10021898:	10c5c83a 	sub	r2,r2,r3
1002189c:	11000e48 	cmpgei	r4,r2,57
100218a0:	203eed1e 	bne	r4,zero,10021458 <__muldf3+0x15c>
100218a4:	11000808 	cmpgei	r4,r2,32
100218a8:	2000191e 	bne	r4,zero,10021910 <__muldf3+0x614>
100218ac:	29410784 	addi	r5,r5,1054
100218b0:	8146983a 	sll	r3,r16,r5
100218b4:	8888d83a 	srl	r4,r17,r2
100218b8:	894a983a 	sll	r5,r17,r5
100218bc:	80a0d83a 	srl	r16,r16,r2
100218c0:	1904b03a 	or	r2,r3,r4
100218c4:	2822c03a 	cmpne	r17,r5,zero
100218c8:	1444b03a 	or	r2,r2,r17
100218cc:	10c001cc 	andi	r3,r2,7
100218d0:	18000726 	beq	r3,zero,100218f0 <__muldf3+0x5f4>
100218d4:	10c003cc 	andi	r3,r2,15
100218d8:	18c00120 	cmpeqi	r3,r3,4
100218dc:	1800041e 	bne	r3,zero,100218f0 <__muldf3+0x5f4>
100218e0:	10c00104 	addi	r3,r2,4
100218e4:	1885803a 	cmpltu	r2,r3,r2
100218e8:	80a1883a 	add	r16,r16,r2
100218ec:	1805883a 	mov	r2,r3
100218f0:	80c0202c 	andhi	r3,r16,128
100218f4:	18001b26 	beq	r3,zero,10021964 <__muldf3+0x668>
100218f8:	00c00044 	movi	r3,1
100218fc:	0021883a 	mov	r16,zero
10021900:	0023883a 	mov	r17,zero
10021904:	003ed706 	br	10021464 <__muldf3+0x168>
10021908:	980b883a 	mov	r5,r19
1002190c:	003faa06 	br	100217b8 <__muldf3+0x4bc>
10021910:	013ff844 	movi	r4,-31
10021914:	20c7c83a 	sub	r3,r4,r3
10021918:	10800820 	cmpeqi	r2,r2,32
1002191c:	80c6d83a 	srl	r3,r16,r3
10021920:	1000031e 	bne	r2,zero,10021930 <__muldf3+0x634>
10021924:	28810f84 	addi	r2,r5,1086
10021928:	8084983a 	sll	r2,r16,r2
1002192c:	88a2b03a 	or	r17,r17,r2
10021930:	8822c03a 	cmpne	r17,r17,zero
10021934:	88c4b03a 	or	r2,r17,r3
10021938:	144001cc 	andi	r17,r2,7
1002193c:	8800051e 	bne	r17,zero,10021954 <__muldf3+0x658>
10021940:	0021883a 	mov	r16,zero
10021944:	1004d0fa 	srli	r2,r2,3
10021948:	0007883a 	mov	r3,zero
1002194c:	1462b03a 	or	r17,r2,r17
10021950:	003ec406 	br	10021464 <__muldf3+0x168>
10021954:	10c003cc 	andi	r3,r2,15
10021958:	18c00118 	cmpnei	r3,r3,4
1002195c:	0021883a 	mov	r16,zero
10021960:	183fdf1e 	bne	r3,zero,100218e0 <__muldf3+0x5e4>
10021964:	8006927a 	slli	r3,r16,9
10021968:	8022977a 	slli	r17,r16,29
1002196c:	1820d33a 	srli	r16,r3,12
10021970:	003ff406 	br	10021944 <__muldf3+0x648>
10021974:	00800434 	movhi	r2,16
10021978:	84000234 	orhi	r16,r16,8
1002197c:	10bfffc4 	addi	r2,r2,-1
10021980:	80a0703a 	and	r16,r16,r2
10021984:	003f1906 	br	100215ec <__muldf3+0x2f0>

10021988 <__subdf3>:
10021988:	00800434 	movhi	r2,16
1002198c:	3812d53a 	srli	r9,r7,20
10021990:	10bfffc4 	addi	r2,r2,-1
10021994:	defffb04 	addi	sp,sp,-20
10021998:	2890703a 	and	r8,r5,r2
1002199c:	3884703a 	and	r2,r7,r2
100219a0:	2806d7fa 	srli	r3,r5,31
100219a4:	dcc00315 	stw	r19,12(sp)
100219a8:	dc400115 	stw	r17,4(sp)
100219ac:	280ad53a 	srli	r5,r5,20
100219b0:	401090fa 	slli	r8,r8,3
100219b4:	2026d77a 	srli	r19,r4,29
100219b8:	100490fa 	slli	r2,r2,3
100219bc:	3022d77a 	srli	r17,r6,29
100219c0:	4a81ffcc 	andi	r10,r9,2047
100219c4:	dc800215 	stw	r18,8(sp)
100219c8:	dc000015 	stw	r16,0(sp)
100219cc:	dfc00415 	stw	ra,16(sp)
100219d0:	5241ffe0 	cmpeqi	r9,r10,2047
100219d4:	1825883a 	mov	r18,r3
100219d8:	2c01ffcc 	andi	r16,r5,2047
100219dc:	18c03fcc 	andi	r3,r3,255
100219e0:	9a18b03a 	or	r12,r19,r8
100219e4:	201a90fa 	slli	r13,r4,3
100219e8:	380ed7fa 	srli	r7,r7,31
100219ec:	8896b03a 	or	r11,r17,r2
100219f0:	301c90fa 	slli	r14,r6,3
100219f4:	4800711e 	bne	r9,zero,10021bbc <__subdf3+0x234>
100219f8:	39c0005c 	xori	r7,r7,1
100219fc:	8291c83a 	sub	r8,r16,r10
10021a00:	19c05a26 	beq	r3,r7,10021b6c <__subdf3+0x1e4>
10021a04:	0200720e 	bge	zero,r8,10021bd0 <__subdf3+0x248>
10021a08:	50008126 	beq	r10,zero,10021c10 <__subdf3+0x288>
10021a0c:	8081ffd8 	cmpnei	r2,r16,2047
10021a10:	10011626 	beq	r2,zero,10021e6c <__subdf3+0x4e4>
10021a14:	5ac02034 	orhi	r11,r11,128
10021a18:	40800e48 	cmpgei	r2,r8,57
10021a1c:	1000fe1e 	bne	r2,zero,10021e18 <__subdf3+0x490>
10021a20:	40800808 	cmpgei	r2,r8,32
10021a24:	10015e1e 	bne	r2,zero,10021fa0 <__subdf3+0x618>
10021a28:	00800804 	movi	r2,32
10021a2c:	1205c83a 	sub	r2,r2,r8
10021a30:	58a2983a 	sll	r17,r11,r2
10021a34:	7206d83a 	srl	r3,r14,r8
10021a38:	709c983a 	sll	r14,r14,r2
10021a3c:	5a04d83a 	srl	r2,r11,r8
10021a40:	88e2b03a 	or	r17,r17,r3
10021a44:	701cc03a 	cmpne	r14,r14,zero
10021a48:	8ba2b03a 	or	r17,r17,r14
10021a4c:	6099c83a 	sub	r12,r12,r2
10021a50:	6c63c83a 	sub	r17,r13,r17
10021a54:	6c49803a 	cmpltu	r4,r13,r17
10021a58:	6109c83a 	sub	r4,r12,r4
10021a5c:	2080202c 	andhi	r2,r4,128
10021a60:	10009f26 	beq	r2,zero,10021ce0 <__subdf3+0x358>
10021a64:	04c02034 	movhi	r19,128
10021a68:	9cffffc4 	addi	r19,r19,-1
10021a6c:	24e6703a 	and	r19,r4,r19
10021a70:	9800e026 	beq	r19,zero,10021df4 <__subdf3+0x46c>
10021a74:	9809883a 	mov	r4,r19
10021a78:	002252c0 	call	1002252c <__clzsi2>
10021a7c:	123ffe04 	addi	r8,r2,-8
10021a80:	01000804 	movi	r4,32
10021a84:	2209c83a 	sub	r4,r4,r8
10021a88:	8906d83a 	srl	r3,r17,r4
10021a8c:	9a08983a 	sll	r4,r19,r8
10021a90:	8a22983a 	sll	r17,r17,r8
10021a94:	1908b03a 	or	r4,r3,r4
10021a98:	4400cf16 	blt	r8,r16,10021dd8 <__subdf3+0x450>
10021a9c:	4411c83a 	sub	r8,r8,r16
10021aa0:	40800044 	addi	r2,r8,1
10021aa4:	10c00808 	cmpgei	r3,r2,32
10021aa8:	1801251e 	bne	r3,zero,10021f40 <__subdf3+0x5b8>
10021aac:	00c00804 	movi	r3,32
10021ab0:	1887c83a 	sub	r3,r3,r2
10021ab4:	888ad83a 	srl	r5,r17,r2
10021ab8:	88e2983a 	sll	r17,r17,r3
10021abc:	20c6983a 	sll	r3,r4,r3
10021ac0:	2088d83a 	srl	r4,r4,r2
10021ac4:	8822c03a 	cmpne	r17,r17,zero
10021ac8:	1946b03a 	or	r3,r3,r5
10021acc:	1c62b03a 	or	r17,r3,r17
10021ad0:	0021883a 	mov	r16,zero
10021ad4:	888001cc 	andi	r2,r17,7
10021ad8:	10000726 	beq	r2,zero,10021af8 <__subdf3+0x170>
10021adc:	888003cc 	andi	r2,r17,15
10021ae0:	10800120 	cmpeqi	r2,r2,4
10021ae4:	1000041e 	bne	r2,zero,10021af8 <__subdf3+0x170>
10021ae8:	88c00104 	addi	r3,r17,4
10021aec:	1c63803a 	cmpltu	r17,r3,r17
10021af0:	2449883a 	add	r4,r4,r17
10021af4:	1823883a 	mov	r17,r3
10021af8:	2080202c 	andhi	r2,r4,128
10021afc:	10007a26 	beq	r2,zero,10021ce8 <__subdf3+0x360>
10021b00:	82000044 	addi	r8,r16,1
10021b04:	4081ffe0 	cmpeqi	r2,r8,2047
10021b08:	4201ffcc 	andi	r8,r8,2047
10021b0c:	10008c1e 	bne	r2,zero,10021d40 <__subdf3+0x3b8>
10021b10:	00bfe034 	movhi	r2,65408
10021b14:	10bfffc4 	addi	r2,r2,-1
10021b18:	2084703a 	and	r2,r4,r2
10021b1c:	1008927a 	slli	r4,r2,9
10021b20:	8822d0fa 	srli	r17,r17,3
10021b24:	100c977a 	slli	r6,r2,29
10021b28:	2008d33a 	srli	r4,r4,12
10021b2c:	3444b03a 	or	r2,r6,r17
10021b30:	4010953a 	slli	r8,r8,20
10021b34:	00c00434 	movhi	r3,16
10021b38:	94803fcc 	andi	r18,r18,255
10021b3c:	902497fa 	slli	r18,r18,31
10021b40:	18ffffc4 	addi	r3,r3,-1
10021b44:	20c6703a 	and	r3,r4,r3
10021b48:	1a06b03a 	or	r3,r3,r8
10021b4c:	1c86b03a 	or	r3,r3,r18
10021b50:	dfc00417 	ldw	ra,16(sp)
10021b54:	dcc00317 	ldw	r19,12(sp)
10021b58:	dc800217 	ldw	r18,8(sp)
10021b5c:	dc400117 	ldw	r17,4(sp)
10021b60:	dc000017 	ldw	r16,0(sp)
10021b64:	dec00504 	addi	sp,sp,20
10021b68:	f800283a 	ret
10021b6c:	0200320e 	bge	zero,r8,10021c38 <__subdf3+0x2b0>
10021b70:	50004c26 	beq	r10,zero,10021ca4 <__subdf3+0x31c>
10021b74:	8081ffd8 	cmpnei	r2,r16,2047
10021b78:	1000bc26 	beq	r2,zero,10021e6c <__subdf3+0x4e4>
10021b7c:	5ac02034 	orhi	r11,r11,128
10021b80:	40800e48 	cmpgei	r2,r8,57
10021b84:	1000641e 	bne	r2,zero,10021d18 <__subdf3+0x390>
10021b88:	40800808 	cmpgei	r2,r8,32
10021b8c:	10011726 	beq	r2,zero,10021fec <__subdf3+0x664>
10021b90:	447ff804 	addi	r17,r8,-32
10021b94:	40800820 	cmpeqi	r2,r8,32
10021b98:	5c46d83a 	srl	r3,r11,r17
10021b9c:	1000041e 	bne	r2,zero,10021bb0 <__subdf3+0x228>
10021ba0:	00801004 	movi	r2,64
10021ba4:	1205c83a 	sub	r2,r2,r8
10021ba8:	5884983a 	sll	r2,r11,r2
10021bac:	709cb03a 	or	r14,r14,r2
10021bb0:	7022c03a 	cmpne	r17,r14,zero
10021bb4:	88e2b03a 	or	r17,r17,r3
10021bb8:	00005906 	br	10021d20 <__subdf3+0x398>
10021bbc:	5b8ab03a 	or	r5,r11,r14
10021bc0:	823e0044 	addi	r8,r16,-2047
10021bc4:	28001a1e 	bne	r5,zero,10021c30 <__subdf3+0x2a8>
10021bc8:	39c0005c 	xori	r7,r7,1
10021bcc:	19c01a26 	beq	r3,r7,10021c38 <__subdf3+0x2b0>
10021bd0:	4000291e 	bne	r8,zero,10021c78 <__subdf3+0x2f0>
10021bd4:	80800044 	addi	r2,r16,1
10021bd8:	1081ff8c 	andi	r2,r2,2046
10021bdc:	1000911e 	bne	r2,zero,10021e24 <__subdf3+0x49c>
10021be0:	6346b03a 	or	r3,r12,r13
10021be4:	5b84b03a 	or	r2,r11,r14
10021be8:	8001551e 	bne	r16,zero,10022140 <__subdf3+0x7b8>
10021bec:	18011b26 	beq	r3,zero,1002205c <__subdf3+0x6d4>
10021bf0:	1001641e 	bne	r2,zero,10022184 <__subdf3+0x7fc>
10021bf4:	00880034 	movhi	r2,8192
10021bf8:	6022977a 	slli	r17,r12,29
10021bfc:	10bfffc4 	addi	r2,r2,-1
10021c00:	2088703a 	and	r4,r4,r2
10021c04:	2444b03a 	or	r2,r4,r17
10021c08:	6026d0fa 	srli	r19,r12,3
10021c0c:	00003d06 	br	10021d04 <__subdf3+0x37c>
10021c10:	5b84b03a 	or	r2,r11,r14
10021c14:	10008e26 	beq	r2,zero,10021e50 <__subdf3+0x4c8>
10021c18:	40bfffc4 	addi	r2,r8,-1
10021c1c:	10011f26 	beq	r2,zero,1002209c <__subdf3+0x714>
10021c20:	4201ffd8 	cmpnei	r8,r8,2047
10021c24:	40012d26 	beq	r8,zero,100220dc <__subdf3+0x754>
10021c28:	1011883a 	mov	r8,r2
10021c2c:	003f7a06 	br	10021a18 <__subdf3+0x90>
10021c30:	39c03fcc 	andi	r7,r7,255
10021c34:	19ffe61e 	bne	r3,r7,10021bd0 <__subdf3+0x248>
10021c38:	4000931e 	bne	r8,zero,10021e88 <__subdf3+0x500>
10021c3c:	80c00044 	addi	r3,r16,1
10021c40:	1881ff8c 	andi	r2,r3,2046
10021c44:	10012c1e 	bne	r2,zero,100220f8 <__subdf3+0x770>
10021c48:	6344b03a 	or	r2,r12,r13
10021c4c:	8000f91e 	bne	r16,zero,10022034 <__subdf3+0x6ac>
10021c50:	10017326 	beq	r2,zero,10022220 <__subdf3+0x898>
10021c54:	5b84b03a 	or	r2,r11,r14
10021c58:	1001781e 	bne	r2,zero,1002223c <__subdf3+0x8b4>
10021c5c:	6004977a 	slli	r2,r12,29
10021c60:	00c80034 	movhi	r3,8192
10021c64:	18ffffc4 	addi	r3,r3,-1
10021c68:	20c6703a 	and	r3,r4,r3
10021c6c:	10c4b03a 	or	r2,r2,r3
10021c70:	6026d0fa 	srli	r19,r12,3
10021c74:	00002306 	br	10021d04 <__subdf3+0x37c>
10021c78:	5411c83a 	sub	r8,r10,r16
10021c7c:	3825883a 	mov	r18,r7
10021c80:	8000991e 	bne	r16,zero,10021ee8 <__subdf3+0x560>
10021c84:	6344b03a 	or	r2,r12,r13
10021c88:	1000e326 	beq	r2,zero,10022018 <__subdf3+0x690>
10021c8c:	40bfffc4 	addi	r2,r8,-1
10021c90:	10015d26 	beq	r2,zero,10022208 <__subdf3+0x880>
10021c94:	4201ffd8 	cmpnei	r8,r8,2047
10021c98:	4000f926 	beq	r8,zero,10022080 <__subdf3+0x6f8>
10021c9c:	1011883a 	mov	r8,r2
10021ca0:	00009406 	br	10021ef4 <__subdf3+0x56c>
10021ca4:	5b84b03a 	or	r2,r11,r14
10021ca8:	10010226 	beq	r2,zero,100220b4 <__subdf3+0x72c>
10021cac:	40bfffc4 	addi	r2,r8,-1
10021cb0:	10000426 	beq	r2,zero,10021cc4 <__subdf3+0x33c>
10021cb4:	4201ffd8 	cmpnei	r8,r8,2047
10021cb8:	40014126 	beq	r8,zero,100221c0 <__subdf3+0x838>
10021cbc:	1011883a 	mov	r8,r2
10021cc0:	003faf06 	br	10021b80 <__subdf3+0x1f8>
10021cc4:	6ba3883a 	add	r17,r13,r14
10021cc8:	62c9883a 	add	r4,r12,r11
10021ccc:	8b5b803a 	cmpltu	r13,r17,r13
10021cd0:	2349883a 	add	r4,r4,r13
10021cd4:	2080202c 	andhi	r2,r4,128
10021cd8:	1000a61e 	bne	r2,zero,10021f74 <__subdf3+0x5ec>
10021cdc:	04000044 	movi	r16,1
10021ce0:	888001cc 	andi	r2,r17,7
10021ce4:	103f7d1e 	bne	r2,zero,10021adc <__subdf3+0x154>
10021ce8:	8822d0fa 	srli	r17,r17,3
10021cec:	2004977a 	slli	r2,r4,29
10021cf0:	2026d0fa 	srli	r19,r4,3
10021cf4:	8011883a 	mov	r8,r16
10021cf8:	8884b03a 	or	r2,r17,r2
10021cfc:	40c1ffe0 	cmpeqi	r3,r8,2047
10021d00:	18002d1e 	bne	r3,zero,10021db8 <__subdf3+0x430>
10021d04:	01000434 	movhi	r4,16
10021d08:	213fffc4 	addi	r4,r4,-1
10021d0c:	9908703a 	and	r4,r19,r4
10021d10:	4201ffcc 	andi	r8,r8,2047
10021d14:	003f8606 	br	10021b30 <__subdf3+0x1a8>
10021d18:	5ba2b03a 	or	r17,r11,r14
10021d1c:	8822c03a 	cmpne	r17,r17,zero
10021d20:	8b63883a 	add	r17,r17,r13
10021d24:	8b49803a 	cmpltu	r4,r17,r13
10021d28:	2309883a 	add	r4,r4,r12
10021d2c:	2080202c 	andhi	r2,r4,128
10021d30:	103feb26 	beq	r2,zero,10021ce0 <__subdf3+0x358>
10021d34:	84000044 	addi	r16,r16,1
10021d38:	8081ffe0 	cmpeqi	r2,r16,2047
10021d3c:	10008e26 	beq	r2,zero,10021f78 <__subdf3+0x5f0>
10021d40:	0201ffc4 	movi	r8,2047
10021d44:	0009883a 	mov	r4,zero
10021d48:	0005883a 	mov	r2,zero
10021d4c:	003f7806 	br	10021b30 <__subdf3+0x1a8>
10021d50:	6010977a 	slli	r8,r12,29
10021d54:	6026d0fa 	srli	r19,r12,3
10021d58:	1000bb26 	beq	r2,zero,10022048 <__subdf3+0x6c0>
10021d5c:	01480034 	movhi	r5,8192
10021d60:	297fffc4 	addi	r5,r5,-1
10021d64:	2146703a 	and	r3,r4,r5
10021d68:	9880022c 	andhi	r2,r19,8
10021d6c:	1a06b03a 	or	r3,r3,r8
10021d70:	10000826 	beq	r2,zero,10021d94 <__subdf3+0x40c>
10021d74:	5808d0fa 	srli	r4,r11,3
10021d78:	2080022c 	andhi	r2,r4,8
10021d7c:	1000051e 	bne	r2,zero,10021d94 <__subdf3+0x40c>
10021d80:	5804977a 	slli	r2,r11,29
10021d84:	3146703a 	and	r3,r6,r5
10021d88:	3825883a 	mov	r18,r7
10021d8c:	1886b03a 	or	r3,r3,r2
10021d90:	2027883a 	mov	r19,r4
10021d94:	1804d77a 	srli	r2,r3,29
10021d98:	980890fa 	slli	r4,r19,3
10021d9c:	01480034 	movhi	r5,8192
10021da0:	297fffc4 	addi	r5,r5,-1
10021da4:	1108b03a 	or	r4,r2,r4
10021da8:	2004977a 	slli	r2,r4,29
10021dac:	2026d0fa 	srli	r19,r4,3
10021db0:	1946703a 	and	r3,r3,r5
10021db4:	10c4b03a 	or	r2,r2,r3
10021db8:	14c6b03a 	or	r3,r2,r19
10021dbc:	18014926 	beq	r3,zero,100222e4 <__subdf3+0x95c>
10021dc0:	00c00434 	movhi	r3,16
10021dc4:	99000234 	orhi	r4,r19,8
10021dc8:	18ffffc4 	addi	r3,r3,-1
10021dcc:	20c8703a 	and	r4,r4,r3
10021dd0:	0201ffc4 	movi	r8,2047
10021dd4:	003f5606 	br	10021b30 <__subdf3+0x1a8>
10021dd8:	00bfe034 	movhi	r2,65408
10021ddc:	10bfffc4 	addi	r2,r2,-1
10021de0:	2088703a 	and	r4,r4,r2
10021de4:	888001cc 	andi	r2,r17,7
10021de8:	8221c83a 	sub	r16,r16,r8
10021dec:	103f3b1e 	bne	r2,zero,10021adc <__subdf3+0x154>
10021df0:	003fbd06 	br	10021ce8 <__subdf3+0x360>
10021df4:	8809883a 	mov	r4,r17
10021df8:	002252c0 	call	1002252c <__clzsi2>
10021dfc:	12000604 	addi	r8,r2,24
10021e00:	40c00808 	cmpgei	r3,r8,32
10021e04:	183f1e26 	beq	r3,zero,10021a80 <__subdf3+0xf8>
10021e08:	113ffe04 	addi	r4,r2,-8
10021e0c:	8908983a 	sll	r4,r17,r4
10021e10:	0023883a 	mov	r17,zero
10021e14:	003f2006 	br	10021a98 <__subdf3+0x110>
10021e18:	5ba2b03a 	or	r17,r11,r14
10021e1c:	8822c03a 	cmpne	r17,r17,zero
10021e20:	003f0b06 	br	10021a50 <__subdf3+0xc8>
10021e24:	6ba3c83a 	sub	r17,r13,r14
10021e28:	62e7c83a 	sub	r19,r12,r11
10021e2c:	6c49803a 	cmpltu	r4,r13,r17
10021e30:	9927c83a 	sub	r19,r19,r4
10021e34:	9880202c 	andhi	r2,r19,128
10021e38:	1000bb1e 	bne	r2,zero,10022128 <__subdf3+0x7a0>
10021e3c:	8cc4b03a 	or	r2,r17,r19
10021e40:	103f0b1e 	bne	r2,zero,10021a70 <__subdf3+0xe8>
10021e44:	0027883a 	mov	r19,zero
10021e48:	0025883a 	mov	r18,zero
10021e4c:	003fad06 	br	10021d04 <__subdf3+0x37c>
10021e50:	00880034 	movhi	r2,8192
10021e54:	6022977a 	slli	r17,r12,29
10021e58:	10bfffc4 	addi	r2,r2,-1
10021e5c:	2088703a 	and	r4,r4,r2
10021e60:	2444b03a 	or	r2,r4,r17
10021e64:	6026d0fa 	srli	r19,r12,3
10021e68:	003fa406 	br	10021cfc <__subdf3+0x374>
10021e6c:	00880034 	movhi	r2,8192
10021e70:	6022977a 	slli	r17,r12,29
10021e74:	10bfffc4 	addi	r2,r2,-1
10021e78:	2088703a 	and	r4,r4,r2
10021e7c:	2444b03a 	or	r2,r4,r17
10021e80:	6026d0fa 	srli	r19,r12,3
10021e84:	003fcc06 	br	10021db8 <__subdf3+0x430>
10021e88:	5411c83a 	sub	r8,r10,r16
10021e8c:	80004f26 	beq	r16,zero,10021fcc <__subdf3+0x644>
10021e90:	5081ffd8 	cmpnei	r2,r10,2047
10021e94:	1000b426 	beq	r2,zero,10022168 <__subdf3+0x7e0>
10021e98:	63002034 	orhi	r12,r12,128
10021e9c:	40800e48 	cmpgei	r2,r8,57
10021ea0:	1000c41e 	bne	r2,zero,100221b4 <__subdf3+0x82c>
10021ea4:	40800808 	cmpgei	r2,r8,32
10021ea8:	1000f91e 	bne	r2,zero,10022290 <__subdf3+0x908>
10021eac:	00800804 	movi	r2,32
10021eb0:	1205c83a 	sub	r2,r2,r8
10021eb4:	60a2983a 	sll	r17,r12,r2
10021eb8:	6a06d83a 	srl	r3,r13,r8
10021ebc:	6884983a 	sll	r2,r13,r2
10021ec0:	6210d83a 	srl	r8,r12,r8
10021ec4:	88e2b03a 	or	r17,r17,r3
10021ec8:	1004c03a 	cmpne	r2,r2,zero
10021ecc:	88a2b03a 	or	r17,r17,r2
10021ed0:	5a17883a 	add	r11,r11,r8
10021ed4:	8ba3883a 	add	r17,r17,r14
10021ed8:	8b85803a 	cmpltu	r2,r17,r14
10021edc:	12c9883a 	add	r4,r2,r11
10021ee0:	5021883a 	mov	r16,r10
10021ee4:	003f9106 	br	10021d2c <__subdf3+0x3a4>
10021ee8:	5081ffd8 	cmpnei	r2,r10,2047
10021eec:	10006426 	beq	r2,zero,10022080 <__subdf3+0x6f8>
10021ef0:	63002034 	orhi	r12,r12,128
10021ef4:	40800e48 	cmpgei	r2,r8,57
10021ef8:	1000751e 	bne	r2,zero,100220d0 <__subdf3+0x748>
10021efc:	40800808 	cmpgei	r2,r8,32
10021f00:	1000b61e 	bne	r2,zero,100221dc <__subdf3+0x854>
10021f04:	00800804 	movi	r2,32
10021f08:	1205c83a 	sub	r2,r2,r8
10021f0c:	60a2983a 	sll	r17,r12,r2
10021f10:	6a06d83a 	srl	r3,r13,r8
10021f14:	6884983a 	sll	r2,r13,r2
10021f18:	6210d83a 	srl	r8,r12,r8
10021f1c:	88e2b03a 	or	r17,r17,r3
10021f20:	1004c03a 	cmpne	r2,r2,zero
10021f24:	88a2b03a 	or	r17,r17,r2
10021f28:	5a17c83a 	sub	r11,r11,r8
10021f2c:	7463c83a 	sub	r17,r14,r17
10021f30:	7445803a 	cmpltu	r2,r14,r17
10021f34:	5889c83a 	sub	r4,r11,r2
10021f38:	5021883a 	mov	r16,r10
10021f3c:	003ec706 	br	10021a5c <__subdf3+0xd4>
10021f40:	423ff844 	addi	r8,r8,-31
10021f44:	10c00820 	cmpeqi	r3,r2,32
10021f48:	2210d83a 	srl	r8,r4,r8
10021f4c:	1800041e 	bne	r3,zero,10021f60 <__subdf3+0x5d8>
10021f50:	00c01004 	movi	r3,64
10021f54:	1885c83a 	sub	r2,r3,r2
10021f58:	2088983a 	sll	r4,r4,r2
10021f5c:	8922b03a 	or	r17,r17,r4
10021f60:	8822c03a 	cmpne	r17,r17,zero
10021f64:	8a22b03a 	or	r17,r17,r8
10021f68:	0009883a 	mov	r4,zero
10021f6c:	0021883a 	mov	r16,zero
10021f70:	003f5b06 	br	10021ce0 <__subdf3+0x358>
10021f74:	04000084 	movi	r16,2
10021f78:	00bfe034 	movhi	r2,65408
10021f7c:	10bfffc4 	addi	r2,r2,-1
10021f80:	2084703a 	and	r2,r4,r2
10021f84:	8806d07a 	srli	r3,r17,1
10021f88:	100a97fa 	slli	r5,r2,31
10021f8c:	8c40004c 	andi	r17,r17,1
10021f90:	1c62b03a 	or	r17,r3,r17
10021f94:	1008d07a 	srli	r4,r2,1
10021f98:	2c62b03a 	or	r17,r5,r17
10021f9c:	003ecd06 	br	10021ad4 <__subdf3+0x14c>
10021fa0:	447ff804 	addi	r17,r8,-32
10021fa4:	40800820 	cmpeqi	r2,r8,32
10021fa8:	5c46d83a 	srl	r3,r11,r17
10021fac:	1000041e 	bne	r2,zero,10021fc0 <__subdf3+0x638>
10021fb0:	00801004 	movi	r2,64
10021fb4:	1205c83a 	sub	r2,r2,r8
10021fb8:	5884983a 	sll	r2,r11,r2
10021fbc:	709cb03a 	or	r14,r14,r2
10021fc0:	7022c03a 	cmpne	r17,r14,zero
10021fc4:	88e2b03a 	or	r17,r17,r3
10021fc8:	003ea106 	br	10021a50 <__subdf3+0xc8>
10021fcc:	6344b03a 	or	r2,r12,r13
10021fd0:	1000a526 	beq	r2,zero,10022268 <__subdf3+0x8e0>
10021fd4:	40bfffc4 	addi	r2,r8,-1
10021fd8:	1000bd26 	beq	r2,zero,100222d0 <__subdf3+0x948>
10021fdc:	4201ffd8 	cmpnei	r8,r8,2047
10021fe0:	40006126 	beq	r8,zero,10022168 <__subdf3+0x7e0>
10021fe4:	1011883a 	mov	r8,r2
10021fe8:	003fac06 	br	10021e9c <__subdf3+0x514>
10021fec:	00800804 	movi	r2,32
10021ff0:	1205c83a 	sub	r2,r2,r8
10021ff4:	58a2983a 	sll	r17,r11,r2
10021ff8:	7206d83a 	srl	r3,r14,r8
10021ffc:	709c983a 	sll	r14,r14,r2
10022000:	5a04d83a 	srl	r2,r11,r8
10022004:	88e2b03a 	or	r17,r17,r3
10022008:	701cc03a 	cmpne	r14,r14,zero
1002200c:	8ba2b03a 	or	r17,r17,r14
10022010:	6099883a 	add	r12,r12,r2
10022014:	003f4206 	br	10021d20 <__subdf3+0x398>
10022018:	5808977a 	slli	r4,r11,29
1002201c:	00c80034 	movhi	r3,8192
10022020:	18ffffc4 	addi	r3,r3,-1
10022024:	30cc703a 	and	r6,r6,r3
10022028:	2184b03a 	or	r2,r4,r6
1002202c:	5826d0fa 	srli	r19,r11,3
10022030:	003f3206 	br	10021cfc <__subdf3+0x374>
10022034:	10004c26 	beq	r2,zero,10022168 <__subdf3+0x7e0>
10022038:	5b9cb03a 	or	r14,r11,r14
1002203c:	6010977a 	slli	r8,r12,29
10022040:	6026d0fa 	srli	r19,r12,3
10022044:	703f451e 	bne	r14,zero,10021d5c <__subdf3+0x3d4>
10022048:	00880034 	movhi	r2,8192
1002204c:	10bfffc4 	addi	r2,r2,-1
10022050:	2084703a 	and	r2,r4,r2
10022054:	1204b03a 	or	r2,r2,r8
10022058:	003f5706 	br	10021db8 <__subdf3+0x430>
1002205c:	103f7926 	beq	r2,zero,10021e44 <__subdf3+0x4bc>
10022060:	5804977a 	slli	r2,r11,29
10022064:	00c80034 	movhi	r3,8192
10022068:	18ffffc4 	addi	r3,r3,-1
1002206c:	30c6703a 	and	r3,r6,r3
10022070:	10c4b03a 	or	r2,r2,r3
10022074:	5826d0fa 	srli	r19,r11,3
10022078:	3825883a 	mov	r18,r7
1002207c:	003f2106 	br	10021d04 <__subdf3+0x37c>
10022080:	5804977a 	slli	r2,r11,29
10022084:	00c80034 	movhi	r3,8192
10022088:	18ffffc4 	addi	r3,r3,-1
1002208c:	30c6703a 	and	r3,r6,r3
10022090:	10c4b03a 	or	r2,r2,r3
10022094:	5826d0fa 	srli	r19,r11,3
10022098:	003f4706 	br	10021db8 <__subdf3+0x430>
1002209c:	6ba3c83a 	sub	r17,r13,r14
100220a0:	62c9c83a 	sub	r4,r12,r11
100220a4:	6c5b803a 	cmpltu	r13,r13,r17
100220a8:	2349c83a 	sub	r4,r4,r13
100220ac:	04000044 	movi	r16,1
100220b0:	003e6a06 	br	10021a5c <__subdf3+0xd4>
100220b4:	6004977a 	slli	r2,r12,29
100220b8:	00c80034 	movhi	r3,8192
100220bc:	18ffffc4 	addi	r3,r3,-1
100220c0:	20c8703a 	and	r4,r4,r3
100220c4:	1104b03a 	or	r2,r2,r4
100220c8:	6026d0fa 	srli	r19,r12,3
100220cc:	003f0b06 	br	10021cfc <__subdf3+0x374>
100220d0:	6366b03a 	or	r19,r12,r13
100220d4:	9822c03a 	cmpne	r17,r19,zero
100220d8:	003f9406 	br	10021f2c <__subdf3+0x5a4>
100220dc:	6004977a 	slli	r2,r12,29
100220e0:	00c80034 	movhi	r3,8192
100220e4:	18ffffc4 	addi	r3,r3,-1
100220e8:	20c8703a 	and	r4,r4,r3
100220ec:	1104b03a 	or	r2,r2,r4
100220f0:	6026d0fa 	srli	r19,r12,3
100220f4:	003f3006 	br	10021db8 <__subdf3+0x430>
100220f8:	1881ffe0 	cmpeqi	r2,r3,2047
100220fc:	103f101e 	bne	r2,zero,10021d40 <__subdf3+0x3b8>
10022100:	6b9d883a 	add	r14,r13,r14
10022104:	62c9883a 	add	r4,r12,r11
10022108:	7345803a 	cmpltu	r2,r14,r13
1002210c:	2085883a 	add	r2,r4,r2
10022110:	102297fa 	slli	r17,r2,31
10022114:	701cd07a 	srli	r14,r14,1
10022118:	1008d07a 	srli	r4,r2,1
1002211c:	1821883a 	mov	r16,r3
10022120:	8ba2b03a 	or	r17,r17,r14
10022124:	003eee06 	br	10021ce0 <__subdf3+0x358>
10022128:	7363c83a 	sub	r17,r14,r13
1002212c:	5b09c83a 	sub	r4,r11,r12
10022130:	7467803a 	cmpltu	r19,r14,r17
10022134:	24e7c83a 	sub	r19,r4,r19
10022138:	3825883a 	mov	r18,r7
1002213c:	003e4c06 	br	10021a70 <__subdf3+0xe8>
10022140:	183f031e 	bne	r3,zero,10021d50 <__subdf3+0x3c8>
10022144:	10005d26 	beq	r2,zero,100222bc <__subdf3+0x934>
10022148:	00880034 	movhi	r2,8192
1002214c:	5806977a 	slli	r3,r11,29
10022150:	10bfffc4 	addi	r2,r2,-1
10022154:	3084703a 	and	r2,r6,r2
10022158:	10c4b03a 	or	r2,r2,r3
1002215c:	5826d0fa 	srli	r19,r11,3
10022160:	3825883a 	mov	r18,r7
10022164:	003f1406 	br	10021db8 <__subdf3+0x430>
10022168:	00880034 	movhi	r2,8192
1002216c:	5806977a 	slli	r3,r11,29
10022170:	10bfffc4 	addi	r2,r2,-1
10022174:	3084703a 	and	r2,r6,r2
10022178:	10c4b03a 	or	r2,r2,r3
1002217c:	5826d0fa 	srli	r19,r11,3
10022180:	003f0d06 	br	10021db8 <__subdf3+0x430>
10022184:	6ba3c83a 	sub	r17,r13,r14
10022188:	62c5c83a 	sub	r2,r12,r11
1002218c:	6c49803a 	cmpltu	r4,r13,r17
10022190:	1109c83a 	sub	r4,r2,r4
10022194:	2080202c 	andhi	r2,r4,128
10022198:	10003a26 	beq	r2,zero,10022284 <__subdf3+0x8fc>
1002219c:	7363c83a 	sub	r17,r14,r13
100221a0:	5b09c83a 	sub	r4,r11,r12
100221a4:	745d803a 	cmpltu	r14,r14,r17
100221a8:	2389c83a 	sub	r4,r4,r14
100221ac:	3825883a 	mov	r18,r7
100221b0:	003e4806 	br	10021ad4 <__subdf3+0x14c>
100221b4:	6362b03a 	or	r17,r12,r13
100221b8:	8822c03a 	cmpne	r17,r17,zero
100221bc:	003f4506 	br	10021ed4 <__subdf3+0x54c>
100221c0:	6004977a 	slli	r2,r12,29
100221c4:	00c80034 	movhi	r3,8192
100221c8:	18ffffc4 	addi	r3,r3,-1
100221cc:	20c6703a 	and	r3,r4,r3
100221d0:	10c4b03a 	or	r2,r2,r3
100221d4:	6026d0fa 	srli	r19,r12,3
100221d8:	003ef706 	br	10021db8 <__subdf3+0x430>
100221dc:	40bff804 	addi	r2,r8,-32
100221e0:	40c00820 	cmpeqi	r3,r8,32
100221e4:	6084d83a 	srl	r2,r12,r2
100221e8:	1800041e 	bne	r3,zero,100221fc <__subdf3+0x874>
100221ec:	04c01004 	movi	r19,64
100221f0:	9a11c83a 	sub	r8,r19,r8
100221f4:	6226983a 	sll	r19,r12,r8
100221f8:	6cdab03a 	or	r13,r13,r19
100221fc:	6822c03a 	cmpne	r17,r13,zero
10022200:	88a2b03a 	or	r17,r17,r2
10022204:	003f4906 	br	10021f2c <__subdf3+0x5a4>
10022208:	7363c83a 	sub	r17,r14,r13
1002220c:	5b09c83a 	sub	r4,r11,r12
10022210:	745d803a 	cmpltu	r14,r14,r17
10022214:	2389c83a 	sub	r4,r4,r14
10022218:	04000044 	movi	r16,1
1002221c:	003e0f06 	br	10021a5c <__subdf3+0xd4>
10022220:	00880034 	movhi	r2,8192
10022224:	5806977a 	slli	r3,r11,29
10022228:	10bfffc4 	addi	r2,r2,-1
1002222c:	3084703a 	and	r2,r6,r2
10022230:	10c4b03a 	or	r2,r2,r3
10022234:	5826d0fa 	srli	r19,r11,3
10022238:	003eb206 	br	10021d04 <__subdf3+0x37c>
1002223c:	6ba3883a 	add	r17,r13,r14
10022240:	62c9883a 	add	r4,r12,r11
10022244:	8b5b803a 	cmpltu	r13,r17,r13
10022248:	2349883a 	add	r4,r4,r13
1002224c:	2080202c 	andhi	r2,r4,128
10022250:	103ea326 	beq	r2,zero,10021ce0 <__subdf3+0x358>
10022254:	00bfe034 	movhi	r2,65408
10022258:	10bfffc4 	addi	r2,r2,-1
1002225c:	2088703a 	and	r4,r4,r2
10022260:	04000044 	movi	r16,1
10022264:	003e9e06 	br	10021ce0 <__subdf3+0x358>
10022268:	00880034 	movhi	r2,8192
1002226c:	5806977a 	slli	r3,r11,29
10022270:	10bfffc4 	addi	r2,r2,-1
10022274:	3084703a 	and	r2,r6,r2
10022278:	10c4b03a 	or	r2,r2,r3
1002227c:	5826d0fa 	srli	r19,r11,3
10022280:	003e9e06 	br	10021cfc <__subdf3+0x374>
10022284:	8904b03a 	or	r2,r17,r4
10022288:	103eee26 	beq	r2,zero,10021e44 <__subdf3+0x4bc>
1002228c:	003e9406 	br	10021ce0 <__subdf3+0x358>
10022290:	40bff804 	addi	r2,r8,-32
10022294:	40c00820 	cmpeqi	r3,r8,32
10022298:	6084d83a 	srl	r2,r12,r2
1002229c:	1800041e 	bne	r3,zero,100222b0 <__subdf3+0x928>
100222a0:	04c01004 	movi	r19,64
100222a4:	9a11c83a 	sub	r8,r19,r8
100222a8:	6226983a 	sll	r19,r12,r8
100222ac:	6cdab03a 	or	r13,r13,r19
100222b0:	6822c03a 	cmpne	r17,r13,zero
100222b4:	88a2b03a 	or	r17,r17,r2
100222b8:	003f0606 	br	10021ed4 <__subdf3+0x54c>
100222bc:	04c00434 	movhi	r19,16
100222c0:	9cffffc4 	addi	r19,r19,-1
100222c4:	0025883a 	mov	r18,zero
100222c8:	00bfffc4 	movi	r2,-1
100222cc:	003ebc06 	br	10021dc0 <__subdf3+0x438>
100222d0:	6ba3883a 	add	r17,r13,r14
100222d4:	62c9883a 	add	r4,r12,r11
100222d8:	8b9d803a 	cmpltu	r14,r17,r14
100222dc:	2389883a 	add	r4,r4,r14
100222e0:	003e7c06 	br	10021cd4 <__subdf3+0x34c>
100222e4:	0005883a 	mov	r2,zero
100222e8:	0201ffc4 	movi	r8,2047
100222ec:	0009883a 	mov	r4,zero
100222f0:	003e0f06 	br	10021b30 <__subdf3+0x1a8>

100222f4 <__unorddf2>:
100222f4:	2806d53a 	srli	r3,r5,20
100222f8:	3810d53a 	srli	r8,r7,20
100222fc:	00800434 	movhi	r2,16
10022300:	18c1ffcc 	andi	r3,r3,2047
10022304:	10bfffc4 	addi	r2,r2,-1
10022308:	18c1ffd8 	cmpnei	r3,r3,2047
1002230c:	288a703a 	and	r5,r5,r2
10022310:	388e703a 	and	r7,r7,r2
10022314:	4201ffcc 	andi	r8,r8,2047
10022318:	18000426 	beq	r3,zero,1002232c <__unorddf2+0x38>
1002231c:	4201ffd8 	cmpnei	r8,r8,2047
10022320:	40000626 	beq	r8,zero,1002233c <__unorddf2+0x48>
10022324:	0005883a 	mov	r2,zero
10022328:	f800283a 	ret
1002232c:	214ab03a 	or	r5,r4,r5
10022330:	283ffa26 	beq	r5,zero,1002231c <__unorddf2+0x28>
10022334:	00800044 	movi	r2,1
10022338:	f800283a 	ret
1002233c:	398eb03a 	or	r7,r7,r6
10022340:	3804c03a 	cmpne	r2,r7,zero
10022344:	f800283a 	ret

10022348 <__fixdfsi>:
10022348:	280cd53a 	srli	r6,r5,20
1002234c:	00c00434 	movhi	r3,16
10022350:	18ffffc4 	addi	r3,r3,-1
10022354:	3181ffcc 	andi	r6,r6,2047
10022358:	31c0ffd0 	cmplti	r7,r6,1023
1002235c:	28c6703a 	and	r3,r5,r3
10022360:	280ad7fa 	srli	r5,r5,31
10022364:	3800061e 	bne	r7,zero,10022380 <__fixdfsi+0x38>
10022368:	30810790 	cmplti	r2,r6,1054
1002236c:	1000061e 	bne	r2,zero,10022388 <__fixdfsi+0x40>
10022370:	00a00034 	movhi	r2,32768
10022374:	10bfffc4 	addi	r2,r2,-1
10022378:	2885883a 	add	r2,r5,r2
1002237c:	f800283a 	ret
10022380:	0005883a 	mov	r2,zero
10022384:	f800283a 	ret
10022388:	00810cc4 	movi	r2,1075
1002238c:	118fc83a 	sub	r7,r2,r6
10022390:	38800808 	cmpgei	r2,r7,32
10022394:	18c00434 	orhi	r3,r3,16
10022398:	1000071e 	bne	r2,zero,100223b8 <__fixdfsi+0x70>
1002239c:	30befb44 	addi	r2,r6,-1043
100223a0:	1886983a 	sll	r3,r3,r2
100223a4:	21c4d83a 	srl	r2,r4,r7
100223a8:	1884b03a 	or	r2,r3,r2
100223ac:	283ff526 	beq	r5,zero,10022384 <__fixdfsi+0x3c>
100223b0:	0085c83a 	sub	r2,zero,r2
100223b4:	f800283a 	ret
100223b8:	008104c4 	movi	r2,1043
100223bc:	1185c83a 	sub	r2,r2,r6
100223c0:	1884d83a 	srl	r2,r3,r2
100223c4:	003ff906 	br	100223ac <__fixdfsi+0x64>

100223c8 <__floatsidf>:
100223c8:	defffd04 	addi	sp,sp,-12
100223cc:	dfc00215 	stw	ra,8(sp)
100223d0:	dc400115 	stw	r17,4(sp)
100223d4:	dc000015 	stw	r16,0(sp)
100223d8:	20001326 	beq	r4,zero,10022428 <__floatsidf+0x60>
100223dc:	2021883a 	mov	r16,r4
100223e0:	2022d7fa 	srli	r17,r4,31
100223e4:	20002116 	blt	r4,zero,1002246c <__floatsidf+0xa4>
100223e8:	8009883a 	mov	r4,r16
100223ec:	002252c0 	call	1002252c <__clzsi2>
100223f0:	01010784 	movi	r4,1054
100223f4:	2089c83a 	sub	r4,r4,r2
100223f8:	10c002c8 	cmpgei	r3,r2,11
100223fc:	2101ffcc 	andi	r4,r4,2047
10022400:	18001c1e 	bne	r3,zero,10022474 <__floatsidf+0xac>
10022404:	018002c4 	movi	r6,11
10022408:	308dc83a 	sub	r6,r6,r2
1002240c:	818ad83a 	srl	r5,r16,r6
10022410:	00c00434 	movhi	r3,16
10022414:	10800544 	addi	r2,r2,21
10022418:	18ffffc4 	addi	r3,r3,-1
1002241c:	8084983a 	sll	r2,r16,r2
10022420:	28ca703a 	and	r5,r5,r3
10022424:	00000406 	br	10022438 <__floatsidf+0x70>
10022428:	0023883a 	mov	r17,zero
1002242c:	0009883a 	mov	r4,zero
10022430:	000b883a 	mov	r5,zero
10022434:	0005883a 	mov	r2,zero
10022438:	2008953a 	slli	r4,r4,20
1002243c:	8c403fcc 	andi	r17,r17,255
10022440:	01800434 	movhi	r6,16
10022444:	31bfffc4 	addi	r6,r6,-1
10022448:	880697fa 	slli	r3,r17,31
1002244c:	298a703a 	and	r5,r5,r6
10022450:	290ab03a 	or	r5,r5,r4
10022454:	28c6b03a 	or	r3,r5,r3
10022458:	dfc00217 	ldw	ra,8(sp)
1002245c:	dc400117 	ldw	r17,4(sp)
10022460:	dc000017 	ldw	r16,0(sp)
10022464:	dec00304 	addi	sp,sp,12
10022468:	f800283a 	ret
1002246c:	0121c83a 	sub	r16,zero,r4
10022470:	003fdd06 	br	100223e8 <__floatsidf+0x20>
10022474:	10bffd44 	addi	r2,r2,-11
10022478:	808a983a 	sll	r5,r16,r2
1002247c:	00800434 	movhi	r2,16
10022480:	10bfffc4 	addi	r2,r2,-1
10022484:	288a703a 	and	r5,r5,r2
10022488:	0005883a 	mov	r2,zero
1002248c:	003fea06 	br	10022438 <__floatsidf+0x70>

10022490 <__floatunsidf>:
10022490:	defffe04 	addi	sp,sp,-8
10022494:	dc000015 	stw	r16,0(sp)
10022498:	dfc00115 	stw	ra,4(sp)
1002249c:	2021883a 	mov	r16,r4
100224a0:	20000f26 	beq	r4,zero,100224e0 <__floatunsidf+0x50>
100224a4:	002252c0 	call	1002252c <__clzsi2>
100224a8:	01010784 	movi	r4,1054
100224ac:	2089c83a 	sub	r4,r4,r2
100224b0:	10c002c8 	cmpgei	r3,r2,11
100224b4:	2101ffcc 	andi	r4,r4,2047
100224b8:	1800151e 	bne	r3,zero,10022510 <__floatunsidf+0x80>
100224bc:	00c002c4 	movi	r3,11
100224c0:	1887c83a 	sub	r3,r3,r2
100224c4:	80c6d83a 	srl	r3,r16,r3
100224c8:	01400434 	movhi	r5,16
100224cc:	10800544 	addi	r2,r2,21
100224d0:	297fffc4 	addi	r5,r5,-1
100224d4:	80a0983a 	sll	r16,r16,r2
100224d8:	1944703a 	and	r2,r3,r5
100224dc:	00000206 	br	100224e8 <__floatunsidf+0x58>
100224e0:	0009883a 	mov	r4,zero
100224e4:	0005883a 	mov	r2,zero
100224e8:	2008953a 	slli	r4,r4,20
100224ec:	00c00434 	movhi	r3,16
100224f0:	18ffffc4 	addi	r3,r3,-1
100224f4:	10c6703a 	and	r3,r2,r3
100224f8:	1906b03a 	or	r3,r3,r4
100224fc:	8005883a 	mov	r2,r16
10022500:	dfc00117 	ldw	ra,4(sp)
10022504:	dc000017 	ldw	r16,0(sp)
10022508:	dec00204 	addi	sp,sp,8
1002250c:	f800283a 	ret
10022510:	10bffd44 	addi	r2,r2,-11
10022514:	8084983a 	sll	r2,r16,r2
10022518:	00c00434 	movhi	r3,16
1002251c:	18ffffc4 	addi	r3,r3,-1
10022520:	10c4703a 	and	r2,r2,r3
10022524:	0021883a 	mov	r16,zero
10022528:	003fef06 	br	100224e8 <__floatunsidf+0x58>

1002252c <__clzsi2>:
1002252c:	00bfffd4 	movui	r2,65535
10022530:	11000b36 	bltu	r2,r4,10022560 <__clzsi2+0x34>
10022534:	20804030 	cmpltui	r2,r4,256
10022538:	1000071e 	bne	r2,zero,10022558 <__clzsi2+0x2c>
1002253c:	2008d23a 	srli	r4,r4,8
10022540:	01400604 	movi	r5,24
10022544:	00c400b4 	movhi	r3,4098
10022548:	20c7883a 	add	r3,r4,r3
1002254c:	1899a903 	ldbu	r2,26276(r3)
10022550:	2885c83a 	sub	r2,r5,r2
10022554:	f800283a 	ret
10022558:	01400804 	movi	r5,32
1002255c:	003ff906 	br	10022544 <__clzsi2+0x18>
10022560:	00804034 	movhi	r2,256
10022564:	20800336 	bltu	r4,r2,10022574 <__clzsi2+0x48>
10022568:	2008d63a 	srli	r4,r4,24
1002256c:	01400204 	movi	r5,8
10022570:	003ff406 	br	10022544 <__clzsi2+0x18>
10022574:	2008d43a 	srli	r4,r4,16
10022578:	01400404 	movi	r5,16
1002257c:	003ff106 	br	10022544 <__clzsi2+0x18>

10022580 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10022580:	defffe04 	addi	sp,sp,-8
10022584:	dfc00115 	stw	ra,4(sp)
10022588:	df000015 	stw	fp,0(sp)
1002258c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022590:	d0a01917 	ldw	r2,-32668(gp)
10022594:	10000326 	beq	r2,zero,100225a4 <alt_get_errno+0x24>
10022598:	d0a01917 	ldw	r2,-32668(gp)
1002259c:	103ee83a 	callr	r2
100225a0:	00000106 	br	100225a8 <alt_get_errno+0x28>
100225a4:	d0a7d404 	addi	r2,gp,-24752
}
100225a8:	e037883a 	mov	sp,fp
100225ac:	dfc00117 	ldw	ra,4(sp)
100225b0:	df000017 	ldw	fp,0(sp)
100225b4:	dec00204 	addi	sp,sp,8
100225b8:	f800283a 	ret

100225bc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
100225bc:	defffb04 	addi	sp,sp,-20
100225c0:	dfc00415 	stw	ra,16(sp)
100225c4:	df000315 	stw	fp,12(sp)
100225c8:	df000304 	addi	fp,sp,12
100225cc:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
100225d0:	e0bffd17 	ldw	r2,-12(fp)
100225d4:	10000616 	blt	r2,zero,100225f0 <close+0x34>
100225d8:	e0bffd17 	ldw	r2,-12(fp)
100225dc:	10c00324 	muli	r3,r2,12
100225e0:	008400b4 	movhi	r2,4098
100225e4:	109d0f04 	addi	r2,r2,29756
100225e8:	1885883a 	add	r2,r3,r2
100225ec:	00000106 	br	100225f4 <close+0x38>
100225f0:	0005883a 	mov	r2,zero
100225f4:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
100225f8:	e0bfff17 	ldw	r2,-4(fp)
100225fc:	10001926 	beq	r2,zero,10022664 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
10022600:	e0bfff17 	ldw	r2,-4(fp)
10022604:	10800017 	ldw	r2,0(r2)
10022608:	10800417 	ldw	r2,16(r2)
1002260c:	10000626 	beq	r2,zero,10022628 <close+0x6c>
10022610:	e0bfff17 	ldw	r2,-4(fp)
10022614:	10800017 	ldw	r2,0(r2)
10022618:	10800417 	ldw	r2,16(r2)
1002261c:	e13fff17 	ldw	r4,-4(fp)
10022620:	103ee83a 	callr	r2
10022624:	00000106 	br	1002262c <close+0x70>
10022628:	0005883a 	mov	r2,zero
1002262c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
10022630:	e13ffd17 	ldw	r4,-12(fp)
10022634:	00230800 	call	10023080 <alt_release_fd>
    if (rval < 0)
10022638:	e0bffe17 	ldw	r2,-8(fp)
1002263c:	1000070e 	bge	r2,zero,1002265c <close+0xa0>
    {
      ALT_ERRNO = -rval;
10022640:	00225800 	call	10022580 <alt_get_errno>
10022644:	1007883a 	mov	r3,r2
10022648:	e0bffe17 	ldw	r2,-8(fp)
1002264c:	0085c83a 	sub	r2,zero,r2
10022650:	18800015 	stw	r2,0(r3)
      return -1;
10022654:	00bfffc4 	movi	r2,-1
10022658:	00000706 	br	10022678 <close+0xbc>
    }
    return 0;
1002265c:	0005883a 	mov	r2,zero
10022660:	00000506 	br	10022678 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
10022664:	00225800 	call	10022580 <alt_get_errno>
10022668:	1007883a 	mov	r3,r2
1002266c:	00801444 	movi	r2,81
10022670:	18800015 	stw	r2,0(r3)
    return -1;
10022674:	00bfffc4 	movi	r2,-1
  }
}
10022678:	e037883a 	mov	sp,fp
1002267c:	dfc00117 	ldw	ra,4(sp)
10022680:	df000017 	ldw	fp,0(sp)
10022684:	dec00204 	addi	sp,sp,8
10022688:	f800283a 	ret

1002268c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1002268c:	defffc04 	addi	sp,sp,-16
10022690:	df000315 	stw	fp,12(sp)
10022694:	df000304 	addi	fp,sp,12
10022698:	e13fff15 	stw	r4,-4(fp)
1002269c:	e17ffe15 	stw	r5,-8(fp)
100226a0:	e1bffd15 	stw	r6,-12(fp)
  return len;
100226a4:	e0bffd17 	ldw	r2,-12(fp)
}
100226a8:	e037883a 	mov	sp,fp
100226ac:	df000017 	ldw	fp,0(sp)
100226b0:	dec00104 	addi	sp,sp,4
100226b4:	f800283a 	ret

100226b8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
100226b8:	defffd04 	addi	sp,sp,-12
100226bc:	df000215 	stw	fp,8(sp)
100226c0:	df000204 	addi	fp,sp,8
100226c4:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
100226c8:	0001883a 	nop
100226cc:	e0bffe17 	ldw	r2,-8(fp)
100226d0:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
100226d4:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
100226d8:	10000226 	beq	r2,zero,100226e4 <_exit+0x2c>
    ALT_SIM_FAIL();
100226dc:	002af070 	cmpltui	zero,zero,43969
100226e0:	00000106 	br	100226e8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
100226e4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
100226e8:	003fff06 	br	100226e8 <_exit+0x30>

100226ec <alt_get_errno>:
{
100226ec:	defffe04 	addi	sp,sp,-8
100226f0:	dfc00115 	stw	ra,4(sp)
100226f4:	df000015 	stw	fp,0(sp)
100226f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100226fc:	d0a01917 	ldw	r2,-32668(gp)
10022700:	10000326 	beq	r2,zero,10022710 <alt_get_errno+0x24>
10022704:	d0a01917 	ldw	r2,-32668(gp)
10022708:	103ee83a 	callr	r2
1002270c:	00000106 	br	10022714 <alt_get_errno+0x28>
10022710:	d0a7d404 	addi	r2,gp,-24752
}
10022714:	e037883a 	mov	sp,fp
10022718:	dfc00117 	ldw	ra,4(sp)
1002271c:	df000017 	ldw	fp,0(sp)
10022720:	dec00204 	addi	sp,sp,8
10022724:	f800283a 	ret

10022728 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
10022728:	defffb04 	addi	sp,sp,-20
1002272c:	dfc00415 	stw	ra,16(sp)
10022730:	df000315 	stw	fp,12(sp)
10022734:	df000304 	addi	fp,sp,12
10022738:	e13ffe15 	stw	r4,-8(fp)
1002273c:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022740:	e0bffe17 	ldw	r2,-8(fp)
10022744:	10000616 	blt	r2,zero,10022760 <fstat+0x38>
10022748:	e0bffe17 	ldw	r2,-8(fp)
1002274c:	10c00324 	muli	r3,r2,12
10022750:	008400b4 	movhi	r2,4098
10022754:	109d0f04 	addi	r2,r2,29756
10022758:	1885883a 	add	r2,r3,r2
1002275c:	00000106 	br	10022764 <fstat+0x3c>
10022760:	0005883a 	mov	r2,zero
10022764:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022768:	e0bfff17 	ldw	r2,-4(fp)
1002276c:	10001026 	beq	r2,zero,100227b0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
10022770:	e0bfff17 	ldw	r2,-4(fp)
10022774:	10800017 	ldw	r2,0(r2)
10022778:	10800817 	ldw	r2,32(r2)
1002277c:	10000726 	beq	r2,zero,1002279c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
10022780:	e0bfff17 	ldw	r2,-4(fp)
10022784:	10800017 	ldw	r2,0(r2)
10022788:	10800817 	ldw	r2,32(r2)
1002278c:	e17ffd17 	ldw	r5,-12(fp)
10022790:	e13fff17 	ldw	r4,-4(fp)
10022794:	103ee83a 	callr	r2
10022798:	00000a06 	br	100227c4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1002279c:	e0bffd17 	ldw	r2,-12(fp)
100227a0:	00c80004 	movi	r3,8192
100227a4:	10c00115 	stw	r3,4(r2)
      return 0;
100227a8:	0005883a 	mov	r2,zero
100227ac:	00000506 	br	100227c4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100227b0:	00226ec0 	call	100226ec <alt_get_errno>
100227b4:	1007883a 	mov	r3,r2
100227b8:	00801444 	movi	r2,81
100227bc:	18800015 	stw	r2,0(r3)
    return -1;
100227c0:	00bfffc4 	movi	r2,-1
  }
}
100227c4:	e037883a 	mov	sp,fp
100227c8:	dfc00117 	ldw	ra,4(sp)
100227cc:	df000017 	ldw	fp,0(sp)
100227d0:	dec00204 	addi	sp,sp,8
100227d4:	f800283a 	ret

100227d8 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
100227d8:	deffff04 	addi	sp,sp,-4
100227dc:	df000015 	stw	fp,0(sp)
100227e0:	d839883a 	mov	fp,sp
  return 0;
100227e4:	0005883a 	mov	r2,zero
}
100227e8:	e037883a 	mov	sp,fp
100227ec:	df000017 	ldw	fp,0(sp)
100227f0:	dec00104 	addi	sp,sp,4
100227f4:	f800283a 	ret

100227f8 <alt_get_errno>:
{
100227f8:	defffe04 	addi	sp,sp,-8
100227fc:	dfc00115 	stw	ra,4(sp)
10022800:	df000015 	stw	fp,0(sp)
10022804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022808:	d0a01917 	ldw	r2,-32668(gp)
1002280c:	10000326 	beq	r2,zero,1002281c <alt_get_errno+0x24>
10022810:	d0a01917 	ldw	r2,-32668(gp)
10022814:	103ee83a 	callr	r2
10022818:	00000106 	br	10022820 <alt_get_errno+0x28>
1002281c:	d0a7d404 	addi	r2,gp,-24752
}
10022820:	e037883a 	mov	sp,fp
10022824:	dfc00117 	ldw	ra,4(sp)
10022828:	df000017 	ldw	fp,0(sp)
1002282c:	dec00204 	addi	sp,sp,8
10022830:	f800283a 	ret

10022834 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10022834:	deffea04 	addi	sp,sp,-88
10022838:	dfc01515 	stw	ra,84(sp)
1002283c:	df001415 	stw	fp,80(sp)
10022840:	df001404 	addi	fp,sp,80
10022844:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022848:	e0bfec17 	ldw	r2,-80(fp)
1002284c:	10000616 	blt	r2,zero,10022868 <isatty+0x34>
10022850:	e0bfec17 	ldw	r2,-80(fp)
10022854:	10c00324 	muli	r3,r2,12
10022858:	008400b4 	movhi	r2,4098
1002285c:	109d0f04 	addi	r2,r2,29756
10022860:	1885883a 	add	r2,r3,r2
10022864:	00000106 	br	1002286c <isatty+0x38>
10022868:	0005883a 	mov	r2,zero
1002286c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022870:	e0bfff17 	ldw	r2,-4(fp)
10022874:	10000e26 	beq	r2,zero,100228b0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10022878:	e0bfff17 	ldw	r2,-4(fp)
1002287c:	10800017 	ldw	r2,0(r2)
10022880:	10800817 	ldw	r2,32(r2)
10022884:	1000021e 	bne	r2,zero,10022890 <isatty+0x5c>
    {
      return 1;
10022888:	00800044 	movi	r2,1
1002288c:	00000d06 	br	100228c4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10022890:	e0bfed04 	addi	r2,fp,-76
10022894:	100b883a 	mov	r5,r2
10022898:	e13fec17 	ldw	r4,-80(fp)
1002289c:	00227280 	call	10022728 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
100228a0:	e0bfee17 	ldw	r2,-72(fp)
100228a4:	10880020 	cmpeqi	r2,r2,8192
100228a8:	10803fcc 	andi	r2,r2,255
100228ac:	00000506 	br	100228c4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100228b0:	00227f80 	call	100227f8 <alt_get_errno>
100228b4:	1007883a 	mov	r3,r2
100228b8:	00801444 	movi	r2,81
100228bc:	18800015 	stw	r2,0(r3)
    return 0;
100228c0:	0005883a 	mov	r2,zero
  }
}
100228c4:	e037883a 	mov	sp,fp
100228c8:	dfc00117 	ldw	ra,4(sp)
100228cc:	df000017 	ldw	fp,0(sp)
100228d0:	dec00204 	addi	sp,sp,8
100228d4:	f800283a 	ret

100228d8 <alt_get_errno>:
{
100228d8:	defffe04 	addi	sp,sp,-8
100228dc:	dfc00115 	stw	ra,4(sp)
100228e0:	df000015 	stw	fp,0(sp)
100228e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100228e8:	d0a01917 	ldw	r2,-32668(gp)
100228ec:	10000326 	beq	r2,zero,100228fc <alt_get_errno+0x24>
100228f0:	d0a01917 	ldw	r2,-32668(gp)
100228f4:	103ee83a 	callr	r2
100228f8:	00000106 	br	10022900 <alt_get_errno+0x28>
100228fc:	d0a7d404 	addi	r2,gp,-24752
}
10022900:	e037883a 	mov	sp,fp
10022904:	dfc00117 	ldw	ra,4(sp)
10022908:	df000017 	ldw	fp,0(sp)
1002290c:	dec00204 	addi	sp,sp,8
10022910:	f800283a 	ret

10022914 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
10022914:	defffb04 	addi	sp,sp,-20
10022918:	dfc00415 	stw	ra,16(sp)
1002291c:	df000315 	stw	fp,12(sp)
10022920:	df000304 	addi	fp,sp,12
10022924:	e13ffe15 	stw	r4,-8(fp)
10022928:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
1002292c:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
10022930:	e0bffe17 	ldw	r2,-8(fp)
10022934:	00802e16 	blt	zero,r2,100229f0 <kill+0xdc>
  {
    switch (sig)
10022938:	e0bffd17 	ldw	r2,-12(fp)
1002293c:	10800828 	cmpgeui	r2,r2,32
10022940:	1000281e 	bne	r2,zero,100229e4 <kill+0xd0>
10022944:	e0bffd17 	ldw	r2,-12(fp)
10022948:	100690ba 	slli	r3,r2,2
1002294c:	008400b4 	movhi	r2,4098
10022950:	1885883a 	add	r2,r3,r2
10022954:	108a5717 	ldw	r2,10588(r2)
10022958:	1000683a 	jmp	r2
1002295c:	10022a04 	addi	zero,r2,2216
10022960:	100229e4 	muli	zero,r2,2215
10022964:	100229e4 	muli	zero,r2,2215
10022968:	100229dc 	xori	zero,r2,2215
1002296c:	100229dc 	xori	zero,r2,2215
10022970:	100229dc 	xori	zero,r2,2215
10022974:	100229dc 	xori	zero,r2,2215
10022978:	100229e4 	muli	zero,r2,2215
1002297c:	100229dc 	xori	zero,r2,2215
10022980:	100229dc 	xori	zero,r2,2215
10022984:	100229dc 	xori	zero,r2,2215
10022988:	100229dc 	xori	zero,r2,2215
1002298c:	100229dc 	xori	zero,r2,2215
10022990:	100229dc 	xori	zero,r2,2215
10022994:	100229dc 	xori	zero,r2,2215
10022998:	100229dc 	xori	zero,r2,2215
1002299c:	10022a04 	addi	zero,r2,2216
100229a0:	100229e4 	muli	zero,r2,2215
100229a4:	100229e4 	muli	zero,r2,2215
100229a8:	100229e4 	muli	zero,r2,2215
100229ac:	10022a04 	addi	zero,r2,2216
100229b0:	100229e4 	muli	zero,r2,2215
100229b4:	100229e4 	muli	zero,r2,2215
100229b8:	100229dc 	xori	zero,r2,2215
100229bc:	100229dc 	xori	zero,r2,2215
100229c0:	100229dc 	xori	zero,r2,2215
100229c4:	100229dc 	xori	zero,r2,2215
100229c8:	100229dc 	xori	zero,r2,2215
100229cc:	100229e4 	muli	zero,r2,2215
100229d0:	100229e4 	muli	zero,r2,2215
100229d4:	100229dc 	xori	zero,r2,2215
100229d8:	100229dc 	xori	zero,r2,2215
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
100229dc:	0009883a 	mov	r4,zero
100229e0:	00226b80 	call	100226b8 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
100229e4:	00800584 	movi	r2,22
100229e8:	e0bfff15 	stw	r2,-4(fp)
100229ec:	00000606 	br	10022a08 <kill+0xf4>
    }
  }

  else if (pid > 0)
100229f0:	e0bffe17 	ldw	r2,-8(fp)
100229f4:	0080040e 	bge	zero,r2,10022a08 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
100229f8:	008000c4 	movi	r2,3
100229fc:	e0bfff15 	stw	r2,-4(fp)
10022a00:	00000106 	br	10022a08 <kill+0xf4>
      break;
10022a04:	0001883a 	nop
  }

  if (status)
10022a08:	e0bfff17 	ldw	r2,-4(fp)
10022a0c:	10000626 	beq	r2,zero,10022a28 <kill+0x114>
  {
    ALT_ERRNO = status;
10022a10:	00228d80 	call	100228d8 <alt_get_errno>
10022a14:	1007883a 	mov	r3,r2
10022a18:	e0bfff17 	ldw	r2,-4(fp)
10022a1c:	18800015 	stw	r2,0(r3)
    return -1;
10022a20:	00bfffc4 	movi	r2,-1
10022a24:	00000106 	br	10022a2c <kill+0x118>
  }

  return 0;
10022a28:	0005883a 	mov	r2,zero
}
10022a2c:	e037883a 	mov	sp,fp
10022a30:	dfc00117 	ldw	ra,4(sp)
10022a34:	df000017 	ldw	fp,0(sp)
10022a38:	dec00204 	addi	sp,sp,8
10022a3c:	f800283a 	ret

10022a40 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10022a40:	defffc04 	addi	sp,sp,-16
10022a44:	df000315 	stw	fp,12(sp)
10022a48:	df000304 	addi	fp,sp,12
10022a4c:	e13fff15 	stw	r4,-4(fp)
10022a50:	e17ffe15 	stw	r5,-8(fp)
10022a54:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
10022a58:	e0fffe17 	ldw	r3,-8(fp)
10022a5c:	e0bfff17 	ldw	r2,-4(fp)
10022a60:	18800c26 	beq	r3,r2,10022a94 <alt_load_section+0x54>
  {
    while( to != end )
10022a64:	00000806 	br	10022a88 <alt_load_section+0x48>
    {
      *to++ = *from++;
10022a68:	e0ffff17 	ldw	r3,-4(fp)
10022a6c:	18800104 	addi	r2,r3,4
10022a70:	e0bfff15 	stw	r2,-4(fp)
10022a74:	e0bffe17 	ldw	r2,-8(fp)
10022a78:	11000104 	addi	r4,r2,4
10022a7c:	e13ffe15 	stw	r4,-8(fp)
10022a80:	18c00017 	ldw	r3,0(r3)
10022a84:	10c00015 	stw	r3,0(r2)
    while( to != end )
10022a88:	e0fffe17 	ldw	r3,-8(fp)
10022a8c:	e0bffd17 	ldw	r2,-12(fp)
10022a90:	18bff51e 	bne	r3,r2,10022a68 <alt_load_section+0x28>
    }
  }
}
10022a94:	0001883a 	nop
10022a98:	e037883a 	mov	sp,fp
10022a9c:	df000017 	ldw	fp,0(sp)
10022aa0:	dec00104 	addi	sp,sp,4
10022aa4:	f800283a 	ret

10022aa8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10022aa8:	defffe04 	addi	sp,sp,-8
10022aac:	dfc00115 	stw	ra,4(sp)
10022ab0:	df000015 	stw	fp,0(sp)
10022ab4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10022ab8:	018400f4 	movhi	r6,4099
10022abc:	31a1a504 	addi	r6,r6,-31084
10022ac0:	014400b4 	movhi	r5,4098
10022ac4:	2959f604 	addi	r5,r5,26584
10022ac8:	010400f4 	movhi	r4,4099
10022acc:	2121a504 	addi	r4,r4,-31084
10022ad0:	0022a400 	call	10022a40 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10022ad4:	01840034 	movhi	r6,4096
10022ad8:	31808e04 	addi	r6,r6,568
10022adc:	01440034 	movhi	r5,4096
10022ae0:	29400804 	addi	r5,r5,32
10022ae4:	01040034 	movhi	r4,4096
10022ae8:	21000804 	addi	r4,r4,32
10022aec:	0022a400 	call	10022a40 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
10022af0:	018400b4 	movhi	r6,4098
10022af4:	3199f604 	addi	r6,r6,26584
10022af8:	014400b4 	movhi	r5,4098
10022afc:	2953c004 	addi	r5,r5,20224
10022b00:	010400b4 	movhi	r4,4098
10022b04:	2113c004 	addi	r4,r4,20224
10022b08:	0022a400 	call	10022a40 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
10022b0c:	002405c0 	call	1002405c <alt_dcache_flush_all>
  alt_icache_flush_all();
10022b10:	002447c0 	call	1002447c <alt_icache_flush_all>
}
10022b14:	0001883a 	nop
10022b18:	e037883a 	mov	sp,fp
10022b1c:	dfc00117 	ldw	ra,4(sp)
10022b20:	df000017 	ldw	fp,0(sp)
10022b24:	dec00204 	addi	sp,sp,8
10022b28:	f800283a 	ret

10022b2c <alt_get_errno>:
{
10022b2c:	defffe04 	addi	sp,sp,-8
10022b30:	dfc00115 	stw	ra,4(sp)
10022b34:	df000015 	stw	fp,0(sp)
10022b38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022b3c:	d0a01917 	ldw	r2,-32668(gp)
10022b40:	10000326 	beq	r2,zero,10022b50 <alt_get_errno+0x24>
10022b44:	d0a01917 	ldw	r2,-32668(gp)
10022b48:	103ee83a 	callr	r2
10022b4c:	00000106 	br	10022b54 <alt_get_errno+0x28>
10022b50:	d0a7d404 	addi	r2,gp,-24752
}
10022b54:	e037883a 	mov	sp,fp
10022b58:	dfc00117 	ldw	ra,4(sp)
10022b5c:	df000017 	ldw	fp,0(sp)
10022b60:	dec00204 	addi	sp,sp,8
10022b64:	f800283a 	ret

10022b68 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10022b68:	defff904 	addi	sp,sp,-28
10022b6c:	dfc00615 	stw	ra,24(sp)
10022b70:	df000515 	stw	fp,20(sp)
10022b74:	df000504 	addi	fp,sp,20
10022b78:	e13ffd15 	stw	r4,-12(fp)
10022b7c:	e17ffc15 	stw	r5,-16(fp)
10022b80:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10022b84:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022b88:	e0bffd17 	ldw	r2,-12(fp)
10022b8c:	10000616 	blt	r2,zero,10022ba8 <lseek+0x40>
10022b90:	e0bffd17 	ldw	r2,-12(fp)
10022b94:	10c00324 	muli	r3,r2,12
10022b98:	008400b4 	movhi	r2,4098
10022b9c:	109d0f04 	addi	r2,r2,29756
10022ba0:	1885883a 	add	r2,r3,r2
10022ba4:	00000106 	br	10022bac <lseek+0x44>
10022ba8:	0005883a 	mov	r2,zero
10022bac:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
10022bb0:	e0bffe17 	ldw	r2,-8(fp)
10022bb4:	10001026 	beq	r2,zero,10022bf8 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10022bb8:	e0bffe17 	ldw	r2,-8(fp)
10022bbc:	10800017 	ldw	r2,0(r2)
10022bc0:	10800717 	ldw	r2,28(r2)
10022bc4:	10000926 	beq	r2,zero,10022bec <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10022bc8:	e0bffe17 	ldw	r2,-8(fp)
10022bcc:	10800017 	ldw	r2,0(r2)
10022bd0:	10800717 	ldw	r2,28(r2)
10022bd4:	e1bffb17 	ldw	r6,-20(fp)
10022bd8:	e17ffc17 	ldw	r5,-16(fp)
10022bdc:	e13ffe17 	ldw	r4,-8(fp)
10022be0:	103ee83a 	callr	r2
10022be4:	e0bfff15 	stw	r2,-4(fp)
10022be8:	00000506 	br	10022c00 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10022bec:	00bfde84 	movi	r2,-134
10022bf0:	e0bfff15 	stw	r2,-4(fp)
10022bf4:	00000206 	br	10022c00 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
10022bf8:	00bfebc4 	movi	r2,-81
10022bfc:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
10022c00:	e0bfff17 	ldw	r2,-4(fp)
10022c04:	1000070e 	bge	r2,zero,10022c24 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
10022c08:	0022b2c0 	call	10022b2c <alt_get_errno>
10022c0c:	1007883a 	mov	r3,r2
10022c10:	e0bfff17 	ldw	r2,-4(fp)
10022c14:	0085c83a 	sub	r2,zero,r2
10022c18:	18800015 	stw	r2,0(r3)
    rc = -1;
10022c1c:	00bfffc4 	movi	r2,-1
10022c20:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
10022c24:	e0bfff17 	ldw	r2,-4(fp)
}
10022c28:	e037883a 	mov	sp,fp
10022c2c:	dfc00117 	ldw	ra,4(sp)
10022c30:	df000017 	ldw	fp,0(sp)
10022c34:	dec00204 	addi	sp,sp,8
10022c38:	f800283a 	ret

10022c3c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10022c3c:	defffd04 	addi	sp,sp,-12
10022c40:	dfc00215 	stw	ra,8(sp)
10022c44:	df000115 	stw	fp,4(sp)
10022c48:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10022c4c:	0009883a 	mov	r4,zero
10022c50:	00233200 	call	10023320 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10022c54:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10022c58:	00233580 	call	10023358 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10022c5c:	018400b4 	movhi	r6,4098
10022c60:	3199ec04 	addi	r6,r6,26544
10022c64:	014400b4 	movhi	r5,4098
10022c68:	2959ec04 	addi	r5,r5,26544
10022c6c:	010400b4 	movhi	r4,4098
10022c70:	2119ec04 	addi	r4,r4,26544
10022c74:	00247f40 	call	100247f4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10022c78:	00241840 	call	10024184 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10022c7c:	010400b4 	movhi	r4,4098
10022c80:	21107904 	addi	r4,r4,16868
10022c84:	0024b600 	call	10024b60 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10022c88:	d0a7d917 	ldw	r2,-24732(gp)
10022c8c:	d0e7da17 	ldw	r3,-24728(gp)
10022c90:	d127db17 	ldw	r4,-24724(gp)
10022c94:	200d883a 	mov	r6,r4
10022c98:	180b883a 	mov	r5,r3
10022c9c:	1009883a 	mov	r4,r2
10022ca0:	00041740 	call	10004174 <main>
10022ca4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10022ca8:	01000044 	movi	r4,1
10022cac:	00225bc0 	call	100225bc <close>
  exit (result);
10022cb0:	e13fff17 	ldw	r4,-4(fp)
10022cb4:	0024b740 	call	10024b74 <exit>

10022cb8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10022cb8:	defffe04 	addi	sp,sp,-8
10022cbc:	df000115 	stw	fp,4(sp)
10022cc0:	df000104 	addi	fp,sp,4
10022cc4:	e13fff15 	stw	r4,-4(fp)
}
10022cc8:	0001883a 	nop
10022ccc:	e037883a 	mov	sp,fp
10022cd0:	df000017 	ldw	fp,0(sp)
10022cd4:	dec00104 	addi	sp,sp,4
10022cd8:	f800283a 	ret

10022cdc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10022cdc:	defffe04 	addi	sp,sp,-8
10022ce0:	df000115 	stw	fp,4(sp)
10022ce4:	df000104 	addi	fp,sp,4
10022ce8:	e13fff15 	stw	r4,-4(fp)
}
10022cec:	0001883a 	nop
10022cf0:	e037883a 	mov	sp,fp
10022cf4:	df000017 	ldw	fp,0(sp)
10022cf8:	dec00104 	addi	sp,sp,4
10022cfc:	f800283a 	ret

10022d00 <alt_get_errno>:
{
10022d00:	defffe04 	addi	sp,sp,-8
10022d04:	dfc00115 	stw	ra,4(sp)
10022d08:	df000015 	stw	fp,0(sp)
10022d0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022d10:	d0a01917 	ldw	r2,-32668(gp)
10022d14:	10000326 	beq	r2,zero,10022d24 <alt_get_errno+0x24>
10022d18:	d0a01917 	ldw	r2,-32668(gp)
10022d1c:	103ee83a 	callr	r2
10022d20:	00000106 	br	10022d28 <alt_get_errno+0x28>
10022d24:	d0a7d404 	addi	r2,gp,-24752
}
10022d28:	e037883a 	mov	sp,fp
10022d2c:	dfc00117 	ldw	ra,4(sp)
10022d30:	df000017 	ldw	fp,0(sp)
10022d34:	dec00204 	addi	sp,sp,8
10022d38:	f800283a 	ret

10022d3c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
10022d3c:	defffd04 	addi	sp,sp,-12
10022d40:	df000215 	stw	fp,8(sp)
10022d44:	df000204 	addi	fp,sp,8
10022d48:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
10022d4c:	e0bffe17 	ldw	r2,-8(fp)
10022d50:	10800217 	ldw	r2,8(r2)
10022d54:	10d00034 	orhi	r3,r2,16384
10022d58:	e0bffe17 	ldw	r2,-8(fp)
10022d5c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10022d60:	e03fff15 	stw	zero,-4(fp)
10022d64:	00001a06 	br	10022dd0 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10022d68:	e0bfff17 	ldw	r2,-4(fp)
10022d6c:	10c00324 	muli	r3,r2,12
10022d70:	008400b4 	movhi	r2,4098
10022d74:	1885883a 	add	r2,r3,r2
10022d78:	10dd0f17 	ldw	r3,29756(r2)
10022d7c:	e0bffe17 	ldw	r2,-8(fp)
10022d80:	10800017 	ldw	r2,0(r2)
10022d84:	18800f1e 	bne	r3,r2,10022dc4 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10022d88:	e0bfff17 	ldw	r2,-4(fp)
10022d8c:	10c00324 	muli	r3,r2,12
10022d90:	008400b4 	movhi	r2,4098
10022d94:	1885883a 	add	r2,r3,r2
10022d98:	109d1117 	ldw	r2,29764(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
10022d9c:	1000090e 	bge	r2,zero,10022dc4 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
10022da0:	e0bfff17 	ldw	r2,-4(fp)
10022da4:	10c00324 	muli	r3,r2,12
10022da8:	008400b4 	movhi	r2,4098
10022dac:	109d0f04 	addi	r2,r2,29756
10022db0:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10022db4:	e0fffe17 	ldw	r3,-8(fp)
10022db8:	18800226 	beq	r3,r2,10022dc4 <alt_file_locked+0x88>
    {
      return -EACCES;
10022dbc:	00bffcc4 	movi	r2,-13
10022dc0:	00000806 	br	10022de4 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
10022dc4:	e0bfff17 	ldw	r2,-4(fp)
10022dc8:	10800044 	addi	r2,r2,1
10022dcc:	e0bfff15 	stw	r2,-4(fp)
10022dd0:	d0a01817 	ldw	r2,-32672(gp)
10022dd4:	1007883a 	mov	r3,r2
10022dd8:	e0bfff17 	ldw	r2,-4(fp)
10022ddc:	18bfe22e 	bgeu	r3,r2,10022d68 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
10022de0:	0005883a 	mov	r2,zero
}
10022de4:	e037883a 	mov	sp,fp
10022de8:	df000017 	ldw	fp,0(sp)
10022dec:	dec00104 	addi	sp,sp,4
10022df0:	f800283a 	ret

10022df4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
10022df4:	defff604 	addi	sp,sp,-40
10022df8:	dfc00915 	stw	ra,36(sp)
10022dfc:	df000815 	stw	fp,32(sp)
10022e00:	df000804 	addi	fp,sp,32
10022e04:	e13ffa15 	stw	r4,-24(fp)
10022e08:	e17ff915 	stw	r5,-28(fp)
10022e0c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
10022e10:	00bfffc4 	movi	r2,-1
10022e14:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
10022e18:	00bffb44 	movi	r2,-19
10022e1c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
10022e20:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
10022e24:	d1601604 	addi	r5,gp,-32680
10022e28:	e13ffa17 	ldw	r4,-24(fp)
10022e2c:	00242440 	call	10024244 <alt_find_dev>
10022e30:	e0bfff15 	stw	r2,-4(fp)
10022e34:	e0bfff17 	ldw	r2,-4(fp)
10022e38:	1000051e 	bne	r2,zero,10022e50 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
10022e3c:	e13ffa17 	ldw	r4,-24(fp)
10022e40:	00242d40 	call	100242d4 <alt_find_file>
10022e44:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
10022e48:	00800044 	movi	r2,1
10022e4c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10022e50:	e0bfff17 	ldw	r2,-4(fp)
10022e54:	10002926 	beq	r2,zero,10022efc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
10022e58:	e13fff17 	ldw	r4,-4(fp)
10022e5c:	00243dc0 	call	100243dc <alt_get_fd>
10022e60:	e0bffe15 	stw	r2,-8(fp)
10022e64:	e0bffe17 	ldw	r2,-8(fp)
10022e68:	1000030e 	bge	r2,zero,10022e78 <open+0x84>
    {
      status = index;
10022e6c:	e0bffe17 	ldw	r2,-8(fp)
10022e70:	e0bffd15 	stw	r2,-12(fp)
10022e74:	00002306 	br	10022f04 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
10022e78:	e0bffe17 	ldw	r2,-8(fp)
10022e7c:	10c00324 	muli	r3,r2,12
10022e80:	008400b4 	movhi	r2,4098
10022e84:	109d0f04 	addi	r2,r2,29756
10022e88:	1885883a 	add	r2,r3,r2
10022e8c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
10022e90:	e0fff917 	ldw	r3,-28(fp)
10022e94:	00900034 	movhi	r2,16384
10022e98:	10bfffc4 	addi	r2,r2,-1
10022e9c:	1886703a 	and	r3,r3,r2
10022ea0:	e0bffb17 	ldw	r2,-20(fp)
10022ea4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10022ea8:	e0bffc17 	ldw	r2,-16(fp)
10022eac:	1000051e 	bne	r2,zero,10022ec4 <open+0xd0>
10022eb0:	e13ffb17 	ldw	r4,-20(fp)
10022eb4:	0022d3c0 	call	10022d3c <alt_file_locked>
10022eb8:	e0bffd15 	stw	r2,-12(fp)
10022ebc:	e0bffd17 	ldw	r2,-12(fp)
10022ec0:	10001016 	blt	r2,zero,10022f04 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
10022ec4:	e0bfff17 	ldw	r2,-4(fp)
10022ec8:	10800317 	ldw	r2,12(r2)
10022ecc:	10000826 	beq	r2,zero,10022ef0 <open+0xfc>
10022ed0:	e0bfff17 	ldw	r2,-4(fp)
10022ed4:	10800317 	ldw	r2,12(r2)
10022ed8:	e1fff817 	ldw	r7,-32(fp)
10022edc:	e1bff917 	ldw	r6,-28(fp)
10022ee0:	e17ffa17 	ldw	r5,-24(fp)
10022ee4:	e13ffb17 	ldw	r4,-20(fp)
10022ee8:	103ee83a 	callr	r2
10022eec:	00000106 	br	10022ef4 <open+0x100>
10022ef0:	0005883a 	mov	r2,zero
10022ef4:	e0bffd15 	stw	r2,-12(fp)
10022ef8:	00000206 	br	10022f04 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
10022efc:	00bffb44 	movi	r2,-19
10022f00:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
10022f04:	e0bffd17 	ldw	r2,-12(fp)
10022f08:	1000090e 	bge	r2,zero,10022f30 <open+0x13c>
  {
    alt_release_fd (index);  
10022f0c:	e13ffe17 	ldw	r4,-8(fp)
10022f10:	00230800 	call	10023080 <alt_release_fd>
    ALT_ERRNO = -status;
10022f14:	0022d000 	call	10022d00 <alt_get_errno>
10022f18:	1007883a 	mov	r3,r2
10022f1c:	e0bffd17 	ldw	r2,-12(fp)
10022f20:	0085c83a 	sub	r2,zero,r2
10022f24:	18800015 	stw	r2,0(r3)
    return -1;
10022f28:	00bfffc4 	movi	r2,-1
10022f2c:	00000106 	br	10022f34 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
10022f30:	e0bffe17 	ldw	r2,-8(fp)
}
10022f34:	e037883a 	mov	sp,fp
10022f38:	dfc00117 	ldw	ra,4(sp)
10022f3c:	df000017 	ldw	fp,0(sp)
10022f40:	dec00204 	addi	sp,sp,8
10022f44:	f800283a 	ret

10022f48 <alt_get_errno>:
{
10022f48:	defffe04 	addi	sp,sp,-8
10022f4c:	dfc00115 	stw	ra,4(sp)
10022f50:	df000015 	stw	fp,0(sp)
10022f54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022f58:	d0a01917 	ldw	r2,-32668(gp)
10022f5c:	10000326 	beq	r2,zero,10022f6c <alt_get_errno+0x24>
10022f60:	d0a01917 	ldw	r2,-32668(gp)
10022f64:	103ee83a 	callr	r2
10022f68:	00000106 	br	10022f70 <alt_get_errno+0x28>
10022f6c:	d0a7d404 	addi	r2,gp,-24752
}
10022f70:	e037883a 	mov	sp,fp
10022f74:	dfc00117 	ldw	ra,4(sp)
10022f78:	df000017 	ldw	fp,0(sp)
10022f7c:	dec00204 	addi	sp,sp,8
10022f80:	f800283a 	ret

10022f84 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10022f84:	defff904 	addi	sp,sp,-28
10022f88:	dfc00615 	stw	ra,24(sp)
10022f8c:	df000515 	stw	fp,20(sp)
10022f90:	df000504 	addi	fp,sp,20
10022f94:	e13ffd15 	stw	r4,-12(fp)
10022f98:	e17ffc15 	stw	r5,-16(fp)
10022f9c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022fa0:	e0bffd17 	ldw	r2,-12(fp)
10022fa4:	10000616 	blt	r2,zero,10022fc0 <read+0x3c>
10022fa8:	e0bffd17 	ldw	r2,-12(fp)
10022fac:	10c00324 	muli	r3,r2,12
10022fb0:	008400b4 	movhi	r2,4098
10022fb4:	109d0f04 	addi	r2,r2,29756
10022fb8:	1885883a 	add	r2,r3,r2
10022fbc:	00000106 	br	10022fc4 <read+0x40>
10022fc0:	0005883a 	mov	r2,zero
10022fc4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022fc8:	e0bfff17 	ldw	r2,-4(fp)
10022fcc:	10002226 	beq	r2,zero,10023058 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10022fd0:	e0bfff17 	ldw	r2,-4(fp)
10022fd4:	10800217 	ldw	r2,8(r2)
10022fd8:	108000cc 	andi	r2,r2,3
10022fdc:	10800060 	cmpeqi	r2,r2,1
10022fe0:	1000181e 	bne	r2,zero,10023044 <read+0xc0>
        (fd->dev->read))
10022fe4:	e0bfff17 	ldw	r2,-4(fp)
10022fe8:	10800017 	ldw	r2,0(r2)
10022fec:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10022ff0:	10001426 	beq	r2,zero,10023044 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
10022ff4:	e0bfff17 	ldw	r2,-4(fp)
10022ff8:	10800017 	ldw	r2,0(r2)
10022ffc:	10800517 	ldw	r2,20(r2)
10023000:	e0fffb17 	ldw	r3,-20(fp)
10023004:	180d883a 	mov	r6,r3
10023008:	e17ffc17 	ldw	r5,-16(fp)
1002300c:	e13fff17 	ldw	r4,-4(fp)
10023010:	103ee83a 	callr	r2
10023014:	e0bffe15 	stw	r2,-8(fp)
10023018:	e0bffe17 	ldw	r2,-8(fp)
1002301c:	1000070e 	bge	r2,zero,1002303c <read+0xb8>
        {
          ALT_ERRNO = -rval;
10023020:	0022f480 	call	10022f48 <alt_get_errno>
10023024:	1007883a 	mov	r3,r2
10023028:	e0bffe17 	ldw	r2,-8(fp)
1002302c:	0085c83a 	sub	r2,zero,r2
10023030:	18800015 	stw	r2,0(r3)
          return -1;
10023034:	00bfffc4 	movi	r2,-1
10023038:	00000c06 	br	1002306c <read+0xe8>
        }
        return rval;
1002303c:	e0bffe17 	ldw	r2,-8(fp)
10023040:	00000a06 	br	1002306c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
10023044:	0022f480 	call	10022f48 <alt_get_errno>
10023048:	1007883a 	mov	r3,r2
1002304c:	00800344 	movi	r2,13
10023050:	18800015 	stw	r2,0(r3)
10023054:	00000406 	br	10023068 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10023058:	0022f480 	call	10022f48 <alt_get_errno>
1002305c:	1007883a 	mov	r3,r2
10023060:	00801444 	movi	r2,81
10023064:	18800015 	stw	r2,0(r3)
  }
  return -1;
10023068:	00bfffc4 	movi	r2,-1
}
1002306c:	e037883a 	mov	sp,fp
10023070:	dfc00117 	ldw	ra,4(sp)
10023074:	df000017 	ldw	fp,0(sp)
10023078:	dec00204 	addi	sp,sp,8
1002307c:	f800283a 	ret

10023080 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10023080:	defffe04 	addi	sp,sp,-8
10023084:	df000115 	stw	fp,4(sp)
10023088:	df000104 	addi	fp,sp,4
1002308c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
10023090:	e0bfff17 	ldw	r2,-4(fp)
10023094:	108000d0 	cmplti	r2,r2,3
10023098:	10000a1e 	bne	r2,zero,100230c4 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
1002309c:	e0bfff17 	ldw	r2,-4(fp)
100230a0:	10c00324 	muli	r3,r2,12
100230a4:	008400b4 	movhi	r2,4098
100230a8:	1885883a 	add	r2,r3,r2
100230ac:	101d1115 	stw	zero,29764(r2)
    alt_fd_list[fd].dev      = 0;
100230b0:	e0bfff17 	ldw	r2,-4(fp)
100230b4:	10c00324 	muli	r3,r2,12
100230b8:	008400b4 	movhi	r2,4098
100230bc:	1885883a 	add	r2,r3,r2
100230c0:	101d0f15 	stw	zero,29756(r2)
  }
}
100230c4:	0001883a 	nop
100230c8:	e037883a 	mov	sp,fp
100230cc:	df000017 	ldw	fp,0(sp)
100230d0:	dec00104 	addi	sp,sp,4
100230d4:	f800283a 	ret

100230d8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
100230d8:	defff904 	addi	sp,sp,-28
100230dc:	df000615 	stw	fp,24(sp)
100230e0:	df000604 	addi	fp,sp,24
100230e4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
100230e8:	0005303a 	rdctl	r2,status
100230ec:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100230f0:	e0fffd17 	ldw	r3,-12(fp)
100230f4:	00bfff84 	movi	r2,-2
100230f8:	1884703a 	and	r2,r3,r2
100230fc:	1001703a 	wrctl	status,r2
  return context;
10023100:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10023104:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
10023108:	d0a01a17 	ldw	r2,-32664(gp)
1002310c:	10c000c4 	addi	r3,r2,3
10023110:	00bfff04 	movi	r2,-4
10023114:	1884703a 	and	r2,r3,r2
10023118:	d0a01a15 	stw	r2,-32664(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1002311c:	d0e01a17 	ldw	r3,-32664(gp)
10023120:	e0bffa17 	ldw	r2,-24(fp)
10023124:	1887883a 	add	r3,r3,r2
10023128:	00860034 	movhi	r2,6144
1002312c:	10800004 	addi	r2,r2,0
10023130:	10c0062e 	bgeu	r2,r3,1002314c <sbrk+0x74>
10023134:	e0bfff17 	ldw	r2,-4(fp)
10023138:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
1002313c:	e0bffc17 	ldw	r2,-16(fp)
10023140:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10023144:	00bfffc4 	movi	r2,-1
10023148:	00000b06 	br	10023178 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1002314c:	d0a01a17 	ldw	r2,-32664(gp)
10023150:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
10023154:	d0e01a17 	ldw	r3,-32664(gp)
10023158:	e0bffa17 	ldw	r2,-24(fp)
1002315c:	1885883a 	add	r2,r3,r2
10023160:	d0a01a15 	stw	r2,-32664(gp)
10023164:	e0bfff17 	ldw	r2,-4(fp)
10023168:	e0bffb15 	stw	r2,-20(fp)
1002316c:	e0bffb17 	ldw	r2,-20(fp)
10023170:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10023174:	e0bffe17 	ldw	r2,-8(fp)
} 
10023178:	e037883a 	mov	sp,fp
1002317c:	df000017 	ldw	fp,0(sp)
10023180:	dec00104 	addi	sp,sp,4
10023184:	f800283a 	ret

10023188 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10023188:	defffd04 	addi	sp,sp,-12
1002318c:	dfc00215 	stw	ra,8(sp)
10023190:	df000115 	stw	fp,4(sp)
10023194:	df000104 	addi	fp,sp,4
10023198:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
1002319c:	e13fff17 	ldw	r4,-4(fp)
100231a0:	0023f340 	call	10023f34 <alt_busy_sleep>
}
100231a4:	e037883a 	mov	sp,fp
100231a8:	dfc00117 	ldw	ra,4(sp)
100231ac:	df000017 	ldw	fp,0(sp)
100231b0:	dec00204 	addi	sp,sp,8
100231b4:	f800283a 	ret

100231b8 <alt_get_errno>:
{
100231b8:	defffe04 	addi	sp,sp,-8
100231bc:	dfc00115 	stw	ra,4(sp)
100231c0:	df000015 	stw	fp,0(sp)
100231c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100231c8:	d0a01917 	ldw	r2,-32668(gp)
100231cc:	10000326 	beq	r2,zero,100231dc <alt_get_errno+0x24>
100231d0:	d0a01917 	ldw	r2,-32668(gp)
100231d4:	103ee83a 	callr	r2
100231d8:	00000106 	br	100231e0 <alt_get_errno+0x28>
100231dc:	d0a7d404 	addi	r2,gp,-24752
}
100231e0:	e037883a 	mov	sp,fp
100231e4:	dfc00117 	ldw	ra,4(sp)
100231e8:	df000017 	ldw	fp,0(sp)
100231ec:	dec00204 	addi	sp,sp,8
100231f0:	f800283a 	ret

100231f4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
100231f4:	defff904 	addi	sp,sp,-28
100231f8:	dfc00615 	stw	ra,24(sp)
100231fc:	df000515 	stw	fp,20(sp)
10023200:	df000504 	addi	fp,sp,20
10023204:	e13ffd15 	stw	r4,-12(fp)
10023208:	e17ffc15 	stw	r5,-16(fp)
1002320c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10023210:	e0bffd17 	ldw	r2,-12(fp)
10023214:	10000616 	blt	r2,zero,10023230 <write+0x3c>
10023218:	e0bffd17 	ldw	r2,-12(fp)
1002321c:	10c00324 	muli	r3,r2,12
10023220:	008400b4 	movhi	r2,4098
10023224:	109d0f04 	addi	r2,r2,29756
10023228:	1885883a 	add	r2,r3,r2
1002322c:	00000106 	br	10023234 <write+0x40>
10023230:	0005883a 	mov	r2,zero
10023234:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10023238:	e0bfff17 	ldw	r2,-4(fp)
1002323c:	10002126 	beq	r2,zero,100232c4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
10023240:	e0bfff17 	ldw	r2,-4(fp)
10023244:	10800217 	ldw	r2,8(r2)
10023248:	108000cc 	andi	r2,r2,3
1002324c:	10001826 	beq	r2,zero,100232b0 <write+0xbc>
10023250:	e0bfff17 	ldw	r2,-4(fp)
10023254:	10800017 	ldw	r2,0(r2)
10023258:	10800617 	ldw	r2,24(r2)
1002325c:	10001426 	beq	r2,zero,100232b0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10023260:	e0bfff17 	ldw	r2,-4(fp)
10023264:	10800017 	ldw	r2,0(r2)
10023268:	10800617 	ldw	r2,24(r2)
1002326c:	e0fffb17 	ldw	r3,-20(fp)
10023270:	180d883a 	mov	r6,r3
10023274:	e17ffc17 	ldw	r5,-16(fp)
10023278:	e13fff17 	ldw	r4,-4(fp)
1002327c:	103ee83a 	callr	r2
10023280:	e0bffe15 	stw	r2,-8(fp)
10023284:	e0bffe17 	ldw	r2,-8(fp)
10023288:	1000070e 	bge	r2,zero,100232a8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1002328c:	00231b80 	call	100231b8 <alt_get_errno>
10023290:	1007883a 	mov	r3,r2
10023294:	e0bffe17 	ldw	r2,-8(fp)
10023298:	0085c83a 	sub	r2,zero,r2
1002329c:	18800015 	stw	r2,0(r3)
        return -1;
100232a0:	00bfffc4 	movi	r2,-1
100232a4:	00000c06 	br	100232d8 <write+0xe4>
      }
      return rval;
100232a8:	e0bffe17 	ldw	r2,-8(fp)
100232ac:	00000a06 	br	100232d8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
100232b0:	00231b80 	call	100231b8 <alt_get_errno>
100232b4:	1007883a 	mov	r3,r2
100232b8:	00800344 	movi	r2,13
100232bc:	18800015 	stw	r2,0(r3)
100232c0:	00000406 	br	100232d4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
100232c4:	00231b80 	call	100231b8 <alt_get_errno>
100232c8:	1007883a 	mov	r3,r2
100232cc:	00801444 	movi	r2,81
100232d0:	18800015 	stw	r2,0(r3)
  }
  return -1;
100232d4:	00bfffc4 	movi	r2,-1
}
100232d8:	e037883a 	mov	sp,fp
100232dc:	dfc00117 	ldw	ra,4(sp)
100232e0:	df000017 	ldw	fp,0(sp)
100232e4:	dec00204 	addi	sp,sp,8
100232e8:	f800283a 	ret

100232ec <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
100232ec:	defffd04 	addi	sp,sp,-12
100232f0:	dfc00215 	stw	ra,8(sp)
100232f4:	df000115 	stw	fp,4(sp)
100232f8:	df000104 	addi	fp,sp,4
100232fc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
10023300:	d1601604 	addi	r5,gp,-32680
10023304:	e13fff17 	ldw	r4,-4(fp)
10023308:	00240e00 	call	100240e0 <alt_dev_llist_insert>
}
1002330c:	e037883a 	mov	sp,fp
10023310:	dfc00117 	ldw	ra,4(sp)
10023314:	df000017 	ldw	fp,0(sp)
10023318:	dec00204 	addi	sp,sp,8
1002331c:	f800283a 	ret

10023320 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
10023320:	defffd04 	addi	sp,sp,-12
10023324:	dfc00215 	stw	ra,8(sp)
10023328:	df000115 	stw	fp,4(sp)
1002332c:	df000104 	addi	fp,sp,4
10023330:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
10023334:	0024a140 	call	10024a14 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
10023338:	00800044 	movi	r2,1
1002333c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
10023340:	0001883a 	nop
10023344:	e037883a 	mov	sp,fp
10023348:	dfc00117 	ldw	ra,4(sp)
1002334c:	df000017 	ldw	fp,0(sp)
10023350:	dec00204 	addi	sp,sp,8
10023354:	f800283a 	ret

10023358 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
10023358:	defffe04 	addi	sp,sp,-8
1002335c:	dfc00115 	stw	ra,4(sp)
10023360:	df000015 	stw	fp,0(sp)
10023364:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
10023368:	01800144 	movi	r6,5
1002336c:	000b883a 	mov	r5,zero
10023370:	010400b4 	movhi	r4,4098
10023374:	211d7904 	addi	r4,r4,30180
10023378:	00235080 	call	10023508 <altera_avalon_jtag_uart_init>
1002337c:	010400b4 	movhi	r4,4098
10023380:	211d6f04 	addi	r4,r4,30140
10023384:	00232ec0 	call	100232ec <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
10023388:	0001883a 	nop
}
1002338c:	0001883a 	nop
10023390:	e037883a 	mov	sp,fp
10023394:	dfc00117 	ldw	ra,4(sp)
10023398:	df000017 	ldw	fp,0(sp)
1002339c:	dec00204 	addi	sp,sp,8
100233a0:	f800283a 	ret

100233a4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
100233a4:	defffa04 	addi	sp,sp,-24
100233a8:	dfc00515 	stw	ra,20(sp)
100233ac:	df000415 	stw	fp,16(sp)
100233b0:	df000404 	addi	fp,sp,16
100233b4:	e13ffe15 	stw	r4,-8(fp)
100233b8:	e17ffd15 	stw	r5,-12(fp)
100233bc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100233c0:	e0bffe17 	ldw	r2,-8(fp)
100233c4:	10800017 	ldw	r2,0(r2)
100233c8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
100233cc:	e0bfff17 	ldw	r2,-4(fp)
100233d0:	10c00a04 	addi	r3,r2,40
100233d4:	e0bffe17 	ldw	r2,-8(fp)
100233d8:	10800217 	ldw	r2,8(r2)
100233dc:	100f883a 	mov	r7,r2
100233e0:	e1bffc17 	ldw	r6,-16(fp)
100233e4:	e17ffd17 	ldw	r5,-12(fp)
100233e8:	1809883a 	mov	r4,r3
100233ec:	00239c80 	call	100239c8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
100233f0:	e037883a 	mov	sp,fp
100233f4:	dfc00117 	ldw	ra,4(sp)
100233f8:	df000017 	ldw	fp,0(sp)
100233fc:	dec00204 	addi	sp,sp,8
10023400:	f800283a 	ret

10023404 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
10023404:	defffa04 	addi	sp,sp,-24
10023408:	dfc00515 	stw	ra,20(sp)
1002340c:	df000415 	stw	fp,16(sp)
10023410:	df000404 	addi	fp,sp,16
10023414:	e13ffe15 	stw	r4,-8(fp)
10023418:	e17ffd15 	stw	r5,-12(fp)
1002341c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10023420:	e0bffe17 	ldw	r2,-8(fp)
10023424:	10800017 	ldw	r2,0(r2)
10023428:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1002342c:	e0bfff17 	ldw	r2,-4(fp)
10023430:	10c00a04 	addi	r3,r2,40
10023434:	e0bffe17 	ldw	r2,-8(fp)
10023438:	10800217 	ldw	r2,8(r2)
1002343c:	100f883a 	mov	r7,r2
10023440:	e1bffc17 	ldw	r6,-16(fp)
10023444:	e17ffd17 	ldw	r5,-12(fp)
10023448:	1809883a 	mov	r4,r3
1002344c:	0023be40 	call	10023be4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
10023450:	e037883a 	mov	sp,fp
10023454:	dfc00117 	ldw	ra,4(sp)
10023458:	df000017 	ldw	fp,0(sp)
1002345c:	dec00204 	addi	sp,sp,8
10023460:	f800283a 	ret

10023464 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10023464:	defffc04 	addi	sp,sp,-16
10023468:	dfc00315 	stw	ra,12(sp)
1002346c:	df000215 	stw	fp,8(sp)
10023470:	df000204 	addi	fp,sp,8
10023474:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10023478:	e0bffe17 	ldw	r2,-8(fp)
1002347c:	10800017 	ldw	r2,0(r2)
10023480:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
10023484:	e0bfff17 	ldw	r2,-4(fp)
10023488:	10c00a04 	addi	r3,r2,40
1002348c:	e0bffe17 	ldw	r2,-8(fp)
10023490:	10800217 	ldw	r2,8(r2)
10023494:	100b883a 	mov	r5,r2
10023498:	1809883a 	mov	r4,r3
1002349c:	002386c0 	call	1002386c <altera_avalon_jtag_uart_close>
}
100234a0:	e037883a 	mov	sp,fp
100234a4:	dfc00117 	ldw	ra,4(sp)
100234a8:	df000017 	ldw	fp,0(sp)
100234ac:	dec00204 	addi	sp,sp,8
100234b0:	f800283a 	ret

100234b4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
100234b4:	defffa04 	addi	sp,sp,-24
100234b8:	dfc00515 	stw	ra,20(sp)
100234bc:	df000415 	stw	fp,16(sp)
100234c0:	df000404 	addi	fp,sp,16
100234c4:	e13ffe15 	stw	r4,-8(fp)
100234c8:	e17ffd15 	stw	r5,-12(fp)
100234cc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
100234d0:	e0bffe17 	ldw	r2,-8(fp)
100234d4:	10800017 	ldw	r2,0(r2)
100234d8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
100234dc:	e0bfff17 	ldw	r2,-4(fp)
100234e0:	10800a04 	addi	r2,r2,40
100234e4:	e1bffc17 	ldw	r6,-16(fp)
100234e8:	e17ffd17 	ldw	r5,-12(fp)
100234ec:	1009883a 	mov	r4,r2
100234f0:	00238d40 	call	100238d4 <altera_avalon_jtag_uart_ioctl>
}
100234f4:	e037883a 	mov	sp,fp
100234f8:	dfc00117 	ldw	ra,4(sp)
100234fc:	df000017 	ldw	fp,0(sp)
10023500:	dec00204 	addi	sp,sp,8
10023504:	f800283a 	ret

10023508 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
10023508:	defffa04 	addi	sp,sp,-24
1002350c:	dfc00515 	stw	ra,20(sp)
10023510:	df000415 	stw	fp,16(sp)
10023514:	df000404 	addi	fp,sp,16
10023518:	e13fff15 	stw	r4,-4(fp)
1002351c:	e17ffe15 	stw	r5,-8(fp)
10023520:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10023524:	e0bfff17 	ldw	r2,-4(fp)
10023528:	00c00044 	movi	r3,1
1002352c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
10023530:	e0bfff17 	ldw	r2,-4(fp)
10023534:	10800017 	ldw	r2,0(r2)
10023538:	10800104 	addi	r2,r2,4
1002353c:	1007883a 	mov	r3,r2
10023540:	e0bfff17 	ldw	r2,-4(fp)
10023544:	10800817 	ldw	r2,32(r2)
10023548:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1002354c:	e0bffe17 	ldw	r2,-8(fp)
10023550:	e0fffd17 	ldw	r3,-12(fp)
10023554:	d8000015 	stw	zero,0(sp)
10023558:	e1ffff17 	ldw	r7,-4(fp)
1002355c:	018400b4 	movhi	r6,4098
10023560:	318d7204 	addi	r6,r6,13768
10023564:	180b883a 	mov	r5,r3
10023568:	1009883a 	mov	r4,r2
1002356c:	00244b00 	call	100244b0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
10023570:	e0bfff17 	ldw	r2,-4(fp)
10023574:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
10023578:	e0bfff17 	ldw	r2,-4(fp)
1002357c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
10023580:	d0e7dd17 	ldw	r3,-24716(gp)
10023584:	e1ffff17 	ldw	r7,-4(fp)
10023588:	018400b4 	movhi	r6,4098
1002358c:	318df304 	addi	r6,r6,14284
10023590:	180b883a 	mov	r5,r3
10023594:	1009883a 	mov	r4,r2
10023598:	0023e080 	call	10023e08 <alt_alarm_start>
1002359c:	1000040e 	bge	r2,zero,100235b0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
100235a0:	e0ffff17 	ldw	r3,-4(fp)
100235a4:	00a00034 	movhi	r2,32768
100235a8:	10bfffc4 	addi	r2,r2,-1
100235ac:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
100235b0:	0001883a 	nop
100235b4:	e037883a 	mov	sp,fp
100235b8:	dfc00117 	ldw	ra,4(sp)
100235bc:	df000017 	ldw	fp,0(sp)
100235c0:	dec00204 	addi	sp,sp,8
100235c4:	f800283a 	ret

100235c8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
100235c8:	defff804 	addi	sp,sp,-32
100235cc:	df000715 	stw	fp,28(sp)
100235d0:	df000704 	addi	fp,sp,28
100235d4:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
100235d8:	e0bff917 	ldw	r2,-28(fp)
100235dc:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
100235e0:	e0bffd17 	ldw	r2,-12(fp)
100235e4:	10800017 	ldw	r2,0(r2)
100235e8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
100235ec:	e0bffc17 	ldw	r2,-16(fp)
100235f0:	10800104 	addi	r2,r2,4
100235f4:	10800037 	ldwio	r2,0(r2)
100235f8:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
100235fc:	e0bffb17 	ldw	r2,-20(fp)
10023600:	1080c00c 	andi	r2,r2,768
10023604:	10006b26 	beq	r2,zero,100237b4 <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
10023608:	e0bffb17 	ldw	r2,-20(fp)
1002360c:	1080400c 	andi	r2,r2,256
10023610:	10003426 	beq	r2,zero,100236e4 <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
10023614:	00800074 	movhi	r2,1
10023618:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1002361c:	e0bffd17 	ldw	r2,-12(fp)
10023620:	10800a17 	ldw	r2,40(r2)
10023624:	10800044 	addi	r2,r2,1
10023628:	1081ffcc 	andi	r2,r2,2047
1002362c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
10023630:	e0bffd17 	ldw	r2,-12(fp)
10023634:	10800b17 	ldw	r2,44(r2)
10023638:	e0fffa17 	ldw	r3,-24(fp)
1002363c:	18801426 	beq	r3,r2,10023690 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
10023640:	e0bffc17 	ldw	r2,-16(fp)
10023644:	10800037 	ldwio	r2,0(r2)
10023648:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1002364c:	e0bfff17 	ldw	r2,-4(fp)
10023650:	10a0000c 	andi	r2,r2,32768
10023654:	10001026 	beq	r2,zero,10023698 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10023658:	e0bffd17 	ldw	r2,-12(fp)
1002365c:	10800a17 	ldw	r2,40(r2)
10023660:	e0ffff17 	ldw	r3,-4(fp)
10023664:	1809883a 	mov	r4,r3
10023668:	e0fffd17 	ldw	r3,-12(fp)
1002366c:	1885883a 	add	r2,r3,r2
10023670:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10023674:	e0bffd17 	ldw	r2,-12(fp)
10023678:	10800a17 	ldw	r2,40(r2)
1002367c:	10800044 	addi	r2,r2,1
10023680:	10c1ffcc 	andi	r3,r2,2047
10023684:	e0bffd17 	ldw	r2,-12(fp)
10023688:	10c00a15 	stw	r3,40(r2)
      {
1002368c:	003fe306 	br	1002361c <altera_avalon_jtag_uart_irq+0x54>
          break;
10023690:	0001883a 	nop
10023694:	00000106 	br	1002369c <altera_avalon_jtag_uart_irq+0xd4>
          break;
10023698:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1002369c:	e0bfff17 	ldw	r2,-4(fp)
100236a0:	10bfffec 	andhi	r2,r2,65535
100236a4:	10000f26 	beq	r2,zero,100236e4 <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
100236a8:	e0bffd17 	ldw	r2,-12(fp)
100236ac:	10c00817 	ldw	r3,32(r2)
100236b0:	00bfff84 	movi	r2,-2
100236b4:	1886703a 	and	r3,r3,r2
100236b8:	e0bffd17 	ldw	r2,-12(fp)
100236bc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
100236c0:	e0bffc17 	ldw	r2,-16(fp)
100236c4:	10800104 	addi	r2,r2,4
100236c8:	1007883a 	mov	r3,r2
100236cc:	e0bffd17 	ldw	r2,-12(fp)
100236d0:	10800817 	ldw	r2,32(r2)
100236d4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
100236d8:	e0bffc17 	ldw	r2,-16(fp)
100236dc:	10800104 	addi	r2,r2,4
100236e0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
100236e4:	e0bffb17 	ldw	r2,-20(fp)
100236e8:	1080800c 	andi	r2,r2,512
100236ec:	103fbf26 	beq	r2,zero,100235ec <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
100236f0:	e0bffb17 	ldw	r2,-20(fp)
100236f4:	1004d43a 	srli	r2,r2,16
100236f8:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
100236fc:	00001306 	br	1002374c <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
10023700:	e0bffc17 	ldw	r2,-16(fp)
10023704:	e0fffd17 	ldw	r3,-12(fp)
10023708:	18c00d17 	ldw	r3,52(r3)
1002370c:	e13ffd17 	ldw	r4,-12(fp)
10023710:	20c7883a 	add	r3,r4,r3
10023714:	18c20e03 	ldbu	r3,2104(r3)
10023718:	18c03fcc 	andi	r3,r3,255
1002371c:	18c0201c 	xori	r3,r3,128
10023720:	18ffe004 	addi	r3,r3,-128
10023724:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10023728:	e0bffd17 	ldw	r2,-12(fp)
1002372c:	10800d17 	ldw	r2,52(r2)
10023730:	10800044 	addi	r2,r2,1
10023734:	10c1ffcc 	andi	r3,r2,2047
10023738:	e0bffd17 	ldw	r2,-12(fp)
1002373c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
10023740:	e0bffe17 	ldw	r2,-8(fp)
10023744:	10bfffc4 	addi	r2,r2,-1
10023748:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
1002374c:	e0bffe17 	ldw	r2,-8(fp)
10023750:	10000526 	beq	r2,zero,10023768 <altera_avalon_jtag_uart_irq+0x1a0>
10023754:	e0bffd17 	ldw	r2,-12(fp)
10023758:	10c00d17 	ldw	r3,52(r2)
1002375c:	e0bffd17 	ldw	r2,-12(fp)
10023760:	10800c17 	ldw	r2,48(r2)
10023764:	18bfe61e 	bne	r3,r2,10023700 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
10023768:	e0bffe17 	ldw	r2,-8(fp)
1002376c:	103f9f26 	beq	r2,zero,100235ec <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10023770:	e0bffd17 	ldw	r2,-12(fp)
10023774:	10c00817 	ldw	r3,32(r2)
10023778:	00bfff44 	movi	r2,-3
1002377c:	1886703a 	and	r3,r3,r2
10023780:	e0bffd17 	ldw	r2,-12(fp)
10023784:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023788:	e0bffd17 	ldw	r2,-12(fp)
1002378c:	10800017 	ldw	r2,0(r2)
10023790:	10800104 	addi	r2,r2,4
10023794:	1007883a 	mov	r3,r2
10023798:	e0bffd17 	ldw	r2,-12(fp)
1002379c:	10800817 	ldw	r2,32(r2)
100237a0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
100237a4:	e0bffc17 	ldw	r2,-16(fp)
100237a8:	10800104 	addi	r2,r2,4
100237ac:	10800037 	ldwio	r2,0(r2)
  {
100237b0:	003f8e06 	br	100235ec <altera_avalon_jtag_uart_irq+0x24>
      break;
100237b4:	0001883a 	nop
      }
    }
  }
}
100237b8:	0001883a 	nop
100237bc:	e037883a 	mov	sp,fp
100237c0:	df000017 	ldw	fp,0(sp)
100237c4:	dec00104 	addi	sp,sp,4
100237c8:	f800283a 	ret

100237cc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
100237cc:	defffc04 	addi	sp,sp,-16
100237d0:	df000315 	stw	fp,12(sp)
100237d4:	df000304 	addi	fp,sp,12
100237d8:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
100237dc:	e0bffd17 	ldw	r2,-12(fp)
100237e0:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
100237e4:	e0bfff17 	ldw	r2,-4(fp)
100237e8:	10800017 	ldw	r2,0(r2)
100237ec:	10800104 	addi	r2,r2,4
100237f0:	10800037 	ldwio	r2,0(r2)
100237f4:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
100237f8:	e0bffe17 	ldw	r2,-8(fp)
100237fc:	1081000c 	andi	r2,r2,1024
10023800:	10000b26 	beq	r2,zero,10023830 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
10023804:	e0bfff17 	ldw	r2,-4(fp)
10023808:	10800017 	ldw	r2,0(r2)
1002380c:	10800104 	addi	r2,r2,4
10023810:	1007883a 	mov	r3,r2
10023814:	e0bfff17 	ldw	r2,-4(fp)
10023818:	10800817 	ldw	r2,32(r2)
1002381c:	10810014 	ori	r2,r2,1024
10023820:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
10023824:	e0bfff17 	ldw	r2,-4(fp)
10023828:	10000915 	stw	zero,36(r2)
1002382c:	00000a06 	br	10023858 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
10023830:	e0bfff17 	ldw	r2,-4(fp)
10023834:	10c00917 	ldw	r3,36(r2)
10023838:	00a00034 	movhi	r2,32768
1002383c:	10bfff04 	addi	r2,r2,-4
10023840:	10c00536 	bltu	r2,r3,10023858 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
10023844:	e0bfff17 	ldw	r2,-4(fp)
10023848:	10800917 	ldw	r2,36(r2)
1002384c:	10c00044 	addi	r3,r2,1
10023850:	e0bfff17 	ldw	r2,-4(fp)
10023854:	10c00915 	stw	r3,36(r2)
10023858:	d0a7dd17 	ldw	r2,-24716(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1002385c:	e037883a 	mov	sp,fp
10023860:	df000017 	ldw	fp,0(sp)
10023864:	dec00104 	addi	sp,sp,4
10023868:	f800283a 	ret

1002386c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1002386c:	defffd04 	addi	sp,sp,-12
10023870:	df000215 	stw	fp,8(sp)
10023874:	df000204 	addi	fp,sp,8
10023878:	e13fff15 	stw	r4,-4(fp)
1002387c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10023880:	00000506 	br	10023898 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10023884:	e0bffe17 	ldw	r2,-8(fp)
10023888:	1090000c 	andi	r2,r2,16384
1002388c:	10000226 	beq	r2,zero,10023898 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
10023890:	00bffd44 	movi	r2,-11
10023894:	00000b06 	br	100238c4 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10023898:	e0bfff17 	ldw	r2,-4(fp)
1002389c:	10c00d17 	ldw	r3,52(r2)
100238a0:	e0bfff17 	ldw	r2,-4(fp)
100238a4:	10800c17 	ldw	r2,48(r2)
100238a8:	18800526 	beq	r3,r2,100238c0 <altera_avalon_jtag_uart_close+0x54>
100238ac:	e0bfff17 	ldw	r2,-4(fp)
100238b0:	10c00917 	ldw	r3,36(r2)
100238b4:	e0bfff17 	ldw	r2,-4(fp)
100238b8:	10800117 	ldw	r2,4(r2)
100238bc:	18bff136 	bltu	r3,r2,10023884 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
100238c0:	0005883a 	mov	r2,zero
}
100238c4:	e037883a 	mov	sp,fp
100238c8:	df000017 	ldw	fp,0(sp)
100238cc:	dec00104 	addi	sp,sp,4
100238d0:	f800283a 	ret

100238d4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
100238d4:	defffa04 	addi	sp,sp,-24
100238d8:	df000515 	stw	fp,20(sp)
100238dc:	df000504 	addi	fp,sp,20
100238e0:	e13ffd15 	stw	r4,-12(fp)
100238e4:	e17ffc15 	stw	r5,-16(fp)
100238e8:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
100238ec:	00bff9c4 	movi	r2,-25
100238f0:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
100238f4:	e0bffc17 	ldw	r2,-16(fp)
100238f8:	109a8060 	cmpeqi	r2,r2,27137
100238fc:	1000041e 	bne	r2,zero,10023910 <altera_avalon_jtag_uart_ioctl+0x3c>
10023900:	e0bffc17 	ldw	r2,-16(fp)
10023904:	109a80a0 	cmpeqi	r2,r2,27138
10023908:	1000181e 	bne	r2,zero,1002396c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
1002390c:	00002906 	br	100239b4 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
10023910:	e0bffd17 	ldw	r2,-12(fp)
10023914:	10c00117 	ldw	r3,4(r2)
10023918:	00a00034 	movhi	r2,32768
1002391c:	10bfffc4 	addi	r2,r2,-1
10023920:	18802126 	beq	r3,r2,100239a8 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
10023924:	e0bffb17 	ldw	r2,-20(fp)
10023928:	10800017 	ldw	r2,0(r2)
1002392c:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
10023930:	e0bffe17 	ldw	r2,-8(fp)
10023934:	10800090 	cmplti	r2,r2,2
10023938:	1000061e 	bne	r2,zero,10023954 <altera_avalon_jtag_uart_ioctl+0x80>
1002393c:	e0fffe17 	ldw	r3,-8(fp)
10023940:	00a00034 	movhi	r2,32768
10023944:	10bfffc4 	addi	r2,r2,-1
10023948:	18800226 	beq	r3,r2,10023954 <altera_avalon_jtag_uart_ioctl+0x80>
1002394c:	e0bffe17 	ldw	r2,-8(fp)
10023950:	00000206 	br	1002395c <altera_avalon_jtag_uart_ioctl+0x88>
10023954:	00a00034 	movhi	r2,32768
10023958:	10bfff84 	addi	r2,r2,-2
1002395c:	e0fffd17 	ldw	r3,-12(fp)
10023960:	18800115 	stw	r2,4(r3)
      rc = 0;
10023964:	e03fff15 	stw	zero,-4(fp)
    break;
10023968:	00000f06 	br	100239a8 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
1002396c:	e0bffd17 	ldw	r2,-12(fp)
10023970:	10c00117 	ldw	r3,4(r2)
10023974:	00a00034 	movhi	r2,32768
10023978:	10bfffc4 	addi	r2,r2,-1
1002397c:	18800c26 	beq	r3,r2,100239b0 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
10023980:	e0bffd17 	ldw	r2,-12(fp)
10023984:	10c00917 	ldw	r3,36(r2)
10023988:	e0bffd17 	ldw	r2,-12(fp)
1002398c:	10800117 	ldw	r2,4(r2)
10023990:	1885803a 	cmpltu	r2,r3,r2
10023994:	10c03fcc 	andi	r3,r2,255
10023998:	e0bffb17 	ldw	r2,-20(fp)
1002399c:	10c00015 	stw	r3,0(r2)
      rc = 0;
100239a0:	e03fff15 	stw	zero,-4(fp)
    break;
100239a4:	00000206 	br	100239b0 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
100239a8:	0001883a 	nop
100239ac:	00000106 	br	100239b4 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
100239b0:	0001883a 	nop
  }

  return rc;
100239b4:	e0bfff17 	ldw	r2,-4(fp)
}
100239b8:	e037883a 	mov	sp,fp
100239bc:	df000017 	ldw	fp,0(sp)
100239c0:	dec00104 	addi	sp,sp,4
100239c4:	f800283a 	ret

100239c8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
100239c8:	defff304 	addi	sp,sp,-52
100239cc:	dfc00c15 	stw	ra,48(sp)
100239d0:	df000b15 	stw	fp,44(sp)
100239d4:	df000b04 	addi	fp,sp,44
100239d8:	e13ff815 	stw	r4,-32(fp)
100239dc:	e17ff715 	stw	r5,-36(fp)
100239e0:	e1bff615 	stw	r6,-40(fp)
100239e4:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
100239e8:	e0bff717 	ldw	r2,-36(fp)
100239ec:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
100239f0:	00004706 	br	10023b10 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
100239f4:	e0bff817 	ldw	r2,-32(fp)
100239f8:	10800a17 	ldw	r2,40(r2)
100239fc:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
10023a00:	e0bff817 	ldw	r2,-32(fp)
10023a04:	10800b17 	ldw	r2,44(r2)
10023a08:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
10023a0c:	e0fffd17 	ldw	r3,-12(fp)
10023a10:	e0bffc17 	ldw	r2,-16(fp)
10023a14:	18800536 	bltu	r3,r2,10023a2c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
10023a18:	e0fffd17 	ldw	r3,-12(fp)
10023a1c:	e0bffc17 	ldw	r2,-16(fp)
10023a20:	1885c83a 	sub	r2,r3,r2
10023a24:	e0bffe15 	stw	r2,-8(fp)
10023a28:	00000406 	br	10023a3c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
10023a2c:	00c20004 	movi	r3,2048
10023a30:	e0bffc17 	ldw	r2,-16(fp)
10023a34:	1885c83a 	sub	r2,r3,r2
10023a38:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023a3c:	e0bffe17 	ldw	r2,-8(fp)
10023a40:	10001e26 	beq	r2,zero,10023abc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
10023a44:	e0fff617 	ldw	r3,-40(fp)
10023a48:	e0bffe17 	ldw	r2,-8(fp)
10023a4c:	1880022e 	bgeu	r3,r2,10023a58 <altera_avalon_jtag_uart_read+0x90>
        n = space;
10023a50:	e0bff617 	ldw	r2,-40(fp)
10023a54:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10023a58:	e0bff817 	ldw	r2,-32(fp)
10023a5c:	10c00e04 	addi	r3,r2,56
10023a60:	e0bffc17 	ldw	r2,-16(fp)
10023a64:	1885883a 	add	r2,r3,r2
10023a68:	e1bffe17 	ldw	r6,-8(fp)
10023a6c:	100b883a 	mov	r5,r2
10023a70:	e13fff17 	ldw	r4,-4(fp)
10023a74:	0016c340 	call	10016c34 <memcpy>
      ptr   += n;
10023a78:	e0ffff17 	ldw	r3,-4(fp)
10023a7c:	e0bffe17 	ldw	r2,-8(fp)
10023a80:	1885883a 	add	r2,r3,r2
10023a84:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
10023a88:	e0fff617 	ldw	r3,-40(fp)
10023a8c:	e0bffe17 	ldw	r2,-8(fp)
10023a90:	1885c83a 	sub	r2,r3,r2
10023a94:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10023a98:	e0fffc17 	ldw	r3,-16(fp)
10023a9c:	e0bffe17 	ldw	r2,-8(fp)
10023aa0:	1885883a 	add	r2,r3,r2
10023aa4:	10c1ffcc 	andi	r3,r2,2047
10023aa8:	e0bff817 	ldw	r2,-32(fp)
10023aac:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
10023ab0:	e0bff617 	ldw	r2,-40(fp)
10023ab4:	00bfcf16 	blt	zero,r2,100239f4 <altera_avalon_jtag_uart_read+0x2c>
10023ab8:	00000106 	br	10023ac0 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
10023abc:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
10023ac0:	e0ffff17 	ldw	r3,-4(fp)
10023ac4:	e0bff717 	ldw	r2,-36(fp)
10023ac8:	1880141e 	bne	r3,r2,10023b1c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
10023acc:	e0bff517 	ldw	r2,-44(fp)
10023ad0:	1090000c 	andi	r2,r2,16384
10023ad4:	1000131e 	bne	r2,zero,10023b24 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
10023ad8:	0001883a 	nop
10023adc:	e0bff817 	ldw	r2,-32(fp)
10023ae0:	10800a17 	ldw	r2,40(r2)
10023ae4:	e0fffd17 	ldw	r3,-12(fp)
10023ae8:	1880051e 	bne	r3,r2,10023b00 <altera_avalon_jtag_uart_read+0x138>
10023aec:	e0bff817 	ldw	r2,-32(fp)
10023af0:	10c00917 	ldw	r3,36(r2)
10023af4:	e0bff817 	ldw	r2,-32(fp)
10023af8:	10800117 	ldw	r2,4(r2)
10023afc:	18bff736 	bltu	r3,r2,10023adc <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
10023b00:	e0bff817 	ldw	r2,-32(fp)
10023b04:	10800a17 	ldw	r2,40(r2)
10023b08:	e0fffd17 	ldw	r3,-12(fp)
10023b0c:	18800726 	beq	r3,r2,10023b2c <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
10023b10:	e0bff617 	ldw	r2,-40(fp)
10023b14:	00bfb716 	blt	zero,r2,100239f4 <altera_avalon_jtag_uart_read+0x2c>
10023b18:	00000506 	br	10023b30 <altera_avalon_jtag_uart_read+0x168>
      break;
10023b1c:	0001883a 	nop
10023b20:	00000306 	br	10023b30 <altera_avalon_jtag_uart_read+0x168>
      break;
10023b24:	0001883a 	nop
10023b28:	00000106 	br	10023b30 <altera_avalon_jtag_uart_read+0x168>
      break;
10023b2c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
10023b30:	e0ffff17 	ldw	r3,-4(fp)
10023b34:	e0bff717 	ldw	r2,-36(fp)
10023b38:	18801826 	beq	r3,r2,10023b9c <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
10023b3c:	0005303a 	rdctl	r2,status
10023b40:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023b44:	e0fff917 	ldw	r3,-28(fp)
10023b48:	00bfff84 	movi	r2,-2
10023b4c:	1884703a 	and	r2,r3,r2
10023b50:	1001703a 	wrctl	status,r2
  return context;
10023b54:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10023b58:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10023b5c:	e0bff817 	ldw	r2,-32(fp)
10023b60:	10800817 	ldw	r2,32(r2)
10023b64:	10c00054 	ori	r3,r2,1
10023b68:	e0bff817 	ldw	r2,-32(fp)
10023b6c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023b70:	e0bff817 	ldw	r2,-32(fp)
10023b74:	10800017 	ldw	r2,0(r2)
10023b78:	10800104 	addi	r2,r2,4
10023b7c:	1007883a 	mov	r3,r2
10023b80:	e0bff817 	ldw	r2,-32(fp)
10023b84:	10800817 	ldw	r2,32(r2)
10023b88:	18800035 	stwio	r2,0(r3)
10023b8c:	e0bffb17 	ldw	r2,-20(fp)
10023b90:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
10023b94:	e0bffa17 	ldw	r2,-24(fp)
10023b98:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10023b9c:	e0ffff17 	ldw	r3,-4(fp)
10023ba0:	e0bff717 	ldw	r2,-36(fp)
10023ba4:	18800426 	beq	r3,r2,10023bb8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
10023ba8:	e0ffff17 	ldw	r3,-4(fp)
10023bac:	e0bff717 	ldw	r2,-36(fp)
10023bb0:	1885c83a 	sub	r2,r3,r2
10023bb4:	00000606 	br	10023bd0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
10023bb8:	e0bff517 	ldw	r2,-44(fp)
10023bbc:	1090000c 	andi	r2,r2,16384
10023bc0:	10000226 	beq	r2,zero,10023bcc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
10023bc4:	00bffd44 	movi	r2,-11
10023bc8:	00000106 	br	10023bd0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
10023bcc:	00bffec4 	movi	r2,-5
}
10023bd0:	e037883a 	mov	sp,fp
10023bd4:	dfc00117 	ldw	ra,4(sp)
10023bd8:	df000017 	ldw	fp,0(sp)
10023bdc:	dec00204 	addi	sp,sp,8
10023be0:	f800283a 	ret

10023be4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
10023be4:	defff304 	addi	sp,sp,-52
10023be8:	dfc00c15 	stw	ra,48(sp)
10023bec:	df000b15 	stw	fp,44(sp)
10023bf0:	df000b04 	addi	fp,sp,44
10023bf4:	e13ff815 	stw	r4,-32(fp)
10023bf8:	e17ff715 	stw	r5,-36(fp)
10023bfc:	e1bff615 	stw	r6,-40(fp)
10023c00:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
10023c04:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
10023c08:	e0bff717 	ldw	r2,-36(fp)
10023c0c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10023c10:	00003706 	br	10023cf0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
10023c14:	e0bff817 	ldw	r2,-32(fp)
10023c18:	10800c17 	ldw	r2,48(r2)
10023c1c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
10023c20:	e0bff817 	ldw	r2,-32(fp)
10023c24:	10800d17 	ldw	r2,52(r2)
10023c28:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
10023c2c:	e0fffc17 	ldw	r3,-16(fp)
10023c30:	e0bfff17 	ldw	r2,-4(fp)
10023c34:	1880062e 	bgeu	r3,r2,10023c50 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10023c38:	e0ffff17 	ldw	r3,-4(fp)
10023c3c:	e0bffc17 	ldw	r2,-16(fp)
10023c40:	1885c83a 	sub	r2,r3,r2
10023c44:	10bfffc4 	addi	r2,r2,-1
10023c48:	e0bffe15 	stw	r2,-8(fp)
10023c4c:	00000b06 	br	10023c7c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
10023c50:	e0bfff17 	ldw	r2,-4(fp)
10023c54:	10000526 	beq	r2,zero,10023c6c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
10023c58:	00c20004 	movi	r3,2048
10023c5c:	e0bffc17 	ldw	r2,-16(fp)
10023c60:	1885c83a 	sub	r2,r3,r2
10023c64:	e0bffe15 	stw	r2,-8(fp)
10023c68:	00000406 	br	10023c7c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
10023c6c:	00c1ffc4 	movi	r3,2047
10023c70:	e0bffc17 	ldw	r2,-16(fp)
10023c74:	1885c83a 	sub	r2,r3,r2
10023c78:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023c7c:	e0bffe17 	ldw	r2,-8(fp)
10023c80:	10001e26 	beq	r2,zero,10023cfc <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
10023c84:	e0fff617 	ldw	r3,-40(fp)
10023c88:	e0bffe17 	ldw	r2,-8(fp)
10023c8c:	1880022e 	bgeu	r3,r2,10023c98 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
10023c90:	e0bff617 	ldw	r2,-40(fp)
10023c94:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
10023c98:	e0bff817 	ldw	r2,-32(fp)
10023c9c:	10c20e04 	addi	r3,r2,2104
10023ca0:	e0bffc17 	ldw	r2,-16(fp)
10023ca4:	1885883a 	add	r2,r3,r2
10023ca8:	e1bffe17 	ldw	r6,-8(fp)
10023cac:	e17ff717 	ldw	r5,-36(fp)
10023cb0:	1009883a 	mov	r4,r2
10023cb4:	0016c340 	call	10016c34 <memcpy>
      ptr   += n;
10023cb8:	e0fff717 	ldw	r3,-36(fp)
10023cbc:	e0bffe17 	ldw	r2,-8(fp)
10023cc0:	1885883a 	add	r2,r3,r2
10023cc4:	e0bff715 	stw	r2,-36(fp)
      count -= n;
10023cc8:	e0fff617 	ldw	r3,-40(fp)
10023ccc:	e0bffe17 	ldw	r2,-8(fp)
10023cd0:	1885c83a 	sub	r2,r3,r2
10023cd4:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10023cd8:	e0fffc17 	ldw	r3,-16(fp)
10023cdc:	e0bffe17 	ldw	r2,-8(fp)
10023ce0:	1885883a 	add	r2,r3,r2
10023ce4:	10c1ffcc 	andi	r3,r2,2047
10023ce8:	e0bff817 	ldw	r2,-32(fp)
10023cec:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
10023cf0:	e0bff617 	ldw	r2,-40(fp)
10023cf4:	00bfc716 	blt	zero,r2,10023c14 <altera_avalon_jtag_uart_write+0x30>
10023cf8:	00000106 	br	10023d00 <altera_avalon_jtag_uart_write+0x11c>
        break;
10023cfc:	0001883a 	nop
  NIOS2_READ_STATUS (context);
10023d00:	0005303a 	rdctl	r2,status
10023d04:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023d08:	e0fff917 	ldw	r3,-28(fp)
10023d0c:	00bfff84 	movi	r2,-2
10023d10:	1884703a 	and	r2,r3,r2
10023d14:	1001703a 	wrctl	status,r2
  return context;
10023d18:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
10023d1c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10023d20:	e0bff817 	ldw	r2,-32(fp)
10023d24:	10800817 	ldw	r2,32(r2)
10023d28:	10c00094 	ori	r3,r2,2
10023d2c:	e0bff817 	ldw	r2,-32(fp)
10023d30:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023d34:	e0bff817 	ldw	r2,-32(fp)
10023d38:	10800017 	ldw	r2,0(r2)
10023d3c:	10800104 	addi	r2,r2,4
10023d40:	1007883a 	mov	r3,r2
10023d44:	e0bff817 	ldw	r2,-32(fp)
10023d48:	10800817 	ldw	r2,32(r2)
10023d4c:	18800035 	stwio	r2,0(r3)
10023d50:	e0bffb17 	ldw	r2,-20(fp)
10023d54:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
10023d58:	e0bffa17 	ldw	r2,-24(fp)
10023d5c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
10023d60:	e0bff617 	ldw	r2,-40(fp)
10023d64:	0080100e 	bge	zero,r2,10023da8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
10023d68:	e0bff517 	ldw	r2,-44(fp)
10023d6c:	1090000c 	andi	r2,r2,16384
10023d70:	1000101e 	bne	r2,zero,10023db4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10023d74:	0001883a 	nop
10023d78:	e0bff817 	ldw	r2,-32(fp)
10023d7c:	10800d17 	ldw	r2,52(r2)
10023d80:	e0ffff17 	ldw	r3,-4(fp)
10023d84:	1880051e 	bne	r3,r2,10023d9c <altera_avalon_jtag_uart_write+0x1b8>
10023d88:	e0bff817 	ldw	r2,-32(fp)
10023d8c:	10c00917 	ldw	r3,36(r2)
10023d90:	e0bff817 	ldw	r2,-32(fp)
10023d94:	10800117 	ldw	r2,4(r2)
10023d98:	18bff736 	bltu	r3,r2,10023d78 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10023d9c:	e0bff817 	ldw	r2,-32(fp)
10023da0:	10800917 	ldw	r2,36(r2)
10023da4:	1000051e 	bne	r2,zero,10023dbc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
10023da8:	e0bff617 	ldw	r2,-40(fp)
10023dac:	00bfd016 	blt	zero,r2,10023cf0 <altera_avalon_jtag_uart_write+0x10c>
10023db0:	00000306 	br	10023dc0 <altera_avalon_jtag_uart_write+0x1dc>
        break;
10023db4:	0001883a 	nop
10023db8:	00000106 	br	10023dc0 <altera_avalon_jtag_uart_write+0x1dc>
         break;
10023dbc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10023dc0:	e0fff717 	ldw	r3,-36(fp)
10023dc4:	e0bffd17 	ldw	r2,-12(fp)
10023dc8:	18800426 	beq	r3,r2,10023ddc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
10023dcc:	e0fff717 	ldw	r3,-36(fp)
10023dd0:	e0bffd17 	ldw	r2,-12(fp)
10023dd4:	1885c83a 	sub	r2,r3,r2
10023dd8:	00000606 	br	10023df4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
10023ddc:	e0bff517 	ldw	r2,-44(fp)
10023de0:	1090000c 	andi	r2,r2,16384
10023de4:	10000226 	beq	r2,zero,10023df0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
10023de8:	00bffd44 	movi	r2,-11
10023dec:	00000106 	br	10023df4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
10023df0:	00bffec4 	movi	r2,-5
}
10023df4:	e037883a 	mov	sp,fp
10023df8:	dfc00117 	ldw	ra,4(sp)
10023dfc:	df000017 	ldw	fp,0(sp)
10023e00:	dec00204 	addi	sp,sp,8
10023e04:	f800283a 	ret

10023e08 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
10023e08:	defff504 	addi	sp,sp,-44
10023e0c:	df000a15 	stw	fp,40(sp)
10023e10:	df000a04 	addi	fp,sp,40
10023e14:	e13ff915 	stw	r4,-28(fp)
10023e18:	e17ff815 	stw	r5,-32(fp)
10023e1c:	e1bff715 	stw	r6,-36(fp)
10023e20:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
10023e24:	e03fff15 	stw	zero,-4(fp)
10023e28:	d0a7dd17 	ldw	r2,-24716(gp)
  
  if (alt_ticks_per_second ())
10023e2c:	10003c26 	beq	r2,zero,10023f20 <alt_alarm_start+0x118>
  {
    if (alarm)
10023e30:	e0bff917 	ldw	r2,-28(fp)
10023e34:	10003826 	beq	r2,zero,10023f18 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10023e38:	e0bff917 	ldw	r2,-28(fp)
10023e3c:	e0fff717 	ldw	r3,-36(fp)
10023e40:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10023e44:	e0bff917 	ldw	r2,-28(fp)
10023e48:	e0fff617 	ldw	r3,-40(fp)
10023e4c:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
10023e50:	0005303a 	rdctl	r2,status
10023e54:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023e58:	e0fffd17 	ldw	r3,-12(fp)
10023e5c:	00bfff84 	movi	r2,-2
10023e60:	1884703a 	and	r2,r3,r2
10023e64:	1001703a 	wrctl	status,r2
  return context;
10023e68:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
10023e6c:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10023e70:	d0a7de17 	ldw	r2,-24712(gp)
      
      current_nticks = alt_nticks();
10023e74:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10023e78:	e0fff817 	ldw	r3,-32(fp)
10023e7c:	e0bfff17 	ldw	r2,-4(fp)
10023e80:	1885883a 	add	r2,r3,r2
10023e84:	10c00044 	addi	r3,r2,1
10023e88:	e0bff917 	ldw	r2,-28(fp)
10023e8c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10023e90:	e0bff917 	ldw	r2,-28(fp)
10023e94:	10c00217 	ldw	r3,8(r2)
10023e98:	e0bfff17 	ldw	r2,-4(fp)
10023e9c:	1880042e 	bgeu	r3,r2,10023eb0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10023ea0:	e0bff917 	ldw	r2,-28(fp)
10023ea4:	00c00044 	movi	r3,1
10023ea8:	10c00405 	stb	r3,16(r2)
10023eac:	00000206 	br	10023eb8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10023eb0:	e0bff917 	ldw	r2,-28(fp)
10023eb4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10023eb8:	e0bff917 	ldw	r2,-28(fp)
10023ebc:	d0e01c04 	addi	r3,gp,-32656
10023ec0:	e0fffb15 	stw	r3,-20(fp)
10023ec4:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10023ec8:	e0bffa17 	ldw	r2,-24(fp)
10023ecc:	e0fffb17 	ldw	r3,-20(fp)
10023ed0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10023ed4:	e0bffb17 	ldw	r2,-20(fp)
10023ed8:	10c00017 	ldw	r3,0(r2)
10023edc:	e0bffa17 	ldw	r2,-24(fp)
10023ee0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10023ee4:	e0bffb17 	ldw	r2,-20(fp)
10023ee8:	10800017 	ldw	r2,0(r2)
10023eec:	e0fffa17 	ldw	r3,-24(fp)
10023ef0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10023ef4:	e0bffb17 	ldw	r2,-20(fp)
10023ef8:	e0fffa17 	ldw	r3,-24(fp)
10023efc:	10c00015 	stw	r3,0(r2)
10023f00:	e0bffe17 	ldw	r2,-8(fp)
10023f04:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10023f08:	e0bffc17 	ldw	r2,-16(fp)
10023f0c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
10023f10:	0005883a 	mov	r2,zero
10023f14:	00000306 	br	10023f24 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
10023f18:	00bffa84 	movi	r2,-22
10023f1c:	00000106 	br	10023f24 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
10023f20:	00bfde84 	movi	r2,-134
  }
}
10023f24:	e037883a 	mov	sp,fp
10023f28:	df000017 	ldw	fp,0(sp)
10023f2c:	dec00104 	addi	sp,sp,4
10023f30:	f800283a 	ret

10023f34 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
10023f34:	defffb04 	addi	sp,sp,-20
10023f38:	df000415 	stw	fp,16(sp)
10023f3c:	df000404 	addi	fp,sp,16
10023f40:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
10023f44:	008000c4 	movi	r2,3
10023f48:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
10023f4c:	e0fffe17 	ldw	r3,-8(fp)
10023f50:	008003f4 	movhi	r2,15
10023f54:	10909004 	addi	r2,r2,16960
10023f58:	1887383a 	mul	r3,r3,r2
10023f5c:	00817db4 	movhi	r2,1526
10023f60:	10b84004 	addi	r2,r2,-7936
10023f64:	10c7203a 	divu	r3,r2,r3
  big_loops = us / (INT_MAX/
10023f68:	00a00034 	movhi	r2,32768
10023f6c:	10bfffc4 	addi	r2,r2,-1
10023f70:	10c5203a 	divu	r2,r2,r3
10023f74:	e0fffc17 	ldw	r3,-16(fp)
10023f78:	1885203a 	divu	r2,r3,r2
10023f7c:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
10023f80:	e0bffd17 	ldw	r2,-12(fp)
10023f84:	10002526 	beq	r2,zero,1002401c <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
10023f88:	e03fff15 	stw	zero,-4(fp)
10023f8c:	00001406 	br	10023fe0 <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10023f90:	00a00034 	movhi	r2,32768
10023f94:	10bfffc4 	addi	r2,r2,-1
10023f98:	10bfffc4 	addi	r2,r2,-1
10023f9c:	103ffe1e 	bne	r2,zero,10023f98 <alt_busy_sleep+0x64>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10023fa0:	e0fffe17 	ldw	r3,-8(fp)
10023fa4:	008003f4 	movhi	r2,15
10023fa8:	10909004 	addi	r2,r2,16960
10023fac:	1887383a 	mul	r3,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
10023fb0:	00817db4 	movhi	r2,1526
10023fb4:	10b84004 	addi	r2,r2,-7936
10023fb8:	10c7203a 	divu	r3,r2,r3
10023fbc:	00a00034 	movhi	r2,32768
10023fc0:	10bfffc4 	addi	r2,r2,-1
10023fc4:	10c5203a 	divu	r2,r2,r3
10023fc8:	e0fffc17 	ldw	r3,-16(fp)
10023fcc:	1885c83a 	sub	r2,r3,r2
10023fd0:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
10023fd4:	e0bfff17 	ldw	r2,-4(fp)
10023fd8:	10800044 	addi	r2,r2,1
10023fdc:	e0bfff15 	stw	r2,-4(fp)
10023fe0:	e0ffff17 	ldw	r3,-4(fp)
10023fe4:	e0bffd17 	ldw	r2,-12(fp)
10023fe8:	18bfe916 	blt	r3,r2,10023f90 <alt_busy_sleep+0x5c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10023fec:	e0fffe17 	ldw	r3,-8(fp)
10023ff0:	008003f4 	movhi	r2,15
10023ff4:	10909004 	addi	r2,r2,16960
10023ff8:	1887383a 	mul	r3,r3,r2
10023ffc:	00817db4 	movhi	r2,1526
10024000:	10b84004 	addi	r2,r2,-7936
10024004:	10c7203a 	divu	r3,r2,r3
10024008:	e0bffc17 	ldw	r2,-16(fp)
1002400c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
10024010:	10bfffc4 	addi	r2,r2,-1
10024014:	103ffe1e 	bne	r2,zero,10024010 <alt_busy_sleep+0xdc>
10024018:	00000b06 	br	10024048 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1002401c:	e0fffe17 	ldw	r3,-8(fp)
10024020:	008003f4 	movhi	r2,15
10024024:	10909004 	addi	r2,r2,16960
10024028:	1887383a 	mul	r3,r3,r2
1002402c:	00817db4 	movhi	r2,1526
10024030:	10b84004 	addi	r2,r2,-7936
10024034:	10c7203a 	divu	r3,r2,r3
10024038:	e0bffc17 	ldw	r2,-16(fp)
1002403c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
10024040:	10bfffc4 	addi	r2,r2,-1
10024044:	00bffe16 	blt	zero,r2,10024040 <alt_busy_sleep+0x10c>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10024048:	0005883a 	mov	r2,zero
}
1002404c:	e037883a 	mov	sp,fp
10024050:	df000017 	ldw	fp,0(sp)
10024054:	dec00104 	addi	sp,sp,4
10024058:	f800283a 	ret

1002405c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1002405c:	defffe04 	addi	sp,sp,-8
10024060:	df000115 	stw	fp,4(sp)
10024064:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10024068:	e03fff15 	stw	zero,-4(fp)
1002406c:	00000506 	br	10024084 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
10024070:	e0bfff17 	ldw	r2,-4(fp)
10024074:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10024078:	e0bfff17 	ldw	r2,-4(fp)
1002407c:	10800804 	addi	r2,r2,32
10024080:	e0bfff15 	stw	r2,-4(fp)
10024084:	e0bfff17 	ldw	r2,-4(fp)
10024088:	10820030 	cmpltui	r2,r2,2048
1002408c:	103ff81e 	bne	r2,zero,10024070 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10024090:	0001883a 	nop
10024094:	e037883a 	mov	sp,fp
10024098:	df000017 	ldw	fp,0(sp)
1002409c:	dec00104 	addi	sp,sp,4
100240a0:	f800283a 	ret

100240a4 <alt_get_errno>:
{
100240a4:	defffe04 	addi	sp,sp,-8
100240a8:	dfc00115 	stw	ra,4(sp)
100240ac:	df000015 	stw	fp,0(sp)
100240b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100240b4:	d0a01917 	ldw	r2,-32668(gp)
100240b8:	10000326 	beq	r2,zero,100240c8 <alt_get_errno+0x24>
100240bc:	d0a01917 	ldw	r2,-32668(gp)
100240c0:	103ee83a 	callr	r2
100240c4:	00000106 	br	100240cc <alt_get_errno+0x28>
100240c8:	d0a7d404 	addi	r2,gp,-24752
}
100240cc:	e037883a 	mov	sp,fp
100240d0:	dfc00117 	ldw	ra,4(sp)
100240d4:	df000017 	ldw	fp,0(sp)
100240d8:	dec00204 	addi	sp,sp,8
100240dc:	f800283a 	ret

100240e0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
100240e0:	defffa04 	addi	sp,sp,-24
100240e4:	dfc00515 	stw	ra,20(sp)
100240e8:	df000415 	stw	fp,16(sp)
100240ec:	df000404 	addi	fp,sp,16
100240f0:	e13ffd15 	stw	r4,-12(fp)
100240f4:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
100240f8:	e0bffd17 	ldw	r2,-12(fp)
100240fc:	10000326 	beq	r2,zero,1002410c <alt_dev_llist_insert+0x2c>
10024100:	e0bffd17 	ldw	r2,-12(fp)
10024104:	10800217 	ldw	r2,8(r2)
10024108:	1000061e 	bne	r2,zero,10024124 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1002410c:	00240a40 	call	100240a4 <alt_get_errno>
10024110:	1007883a 	mov	r3,r2
10024114:	00800584 	movi	r2,22
10024118:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1002411c:	00bffa84 	movi	r2,-22
10024120:	00001306 	br	10024170 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
10024124:	e0bffd17 	ldw	r2,-12(fp)
10024128:	e0fffc17 	ldw	r3,-16(fp)
1002412c:	e0ffff15 	stw	r3,-4(fp)
10024130:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
10024134:	e0bffe17 	ldw	r2,-8(fp)
10024138:	e0ffff17 	ldw	r3,-4(fp)
1002413c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10024140:	e0bfff17 	ldw	r2,-4(fp)
10024144:	10c00017 	ldw	r3,0(r2)
10024148:	e0bffe17 	ldw	r2,-8(fp)
1002414c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
10024150:	e0bfff17 	ldw	r2,-4(fp)
10024154:	10800017 	ldw	r2,0(r2)
10024158:	e0fffe17 	ldw	r3,-8(fp)
1002415c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10024160:	e0bfff17 	ldw	r2,-4(fp)
10024164:	e0fffe17 	ldw	r3,-8(fp)
10024168:	10c00015 	stw	r3,0(r2)

  return 0;  
1002416c:	0005883a 	mov	r2,zero
}
10024170:	e037883a 	mov	sp,fp
10024174:	dfc00117 	ldw	ra,4(sp)
10024178:	df000017 	ldw	fp,0(sp)
1002417c:	dec00204 	addi	sp,sp,8
10024180:	f800283a 	ret

10024184 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
10024184:	defffd04 	addi	sp,sp,-12
10024188:	dfc00215 	stw	ra,8(sp)
1002418c:	df000115 	stw	fp,4(sp)
10024190:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10024194:	008400b4 	movhi	r2,4098
10024198:	1093be04 	addi	r2,r2,20216
1002419c:	e0bfff15 	stw	r2,-4(fp)
100241a0:	00000606 	br	100241bc <_do_ctors+0x38>
        (*ctor) (); 
100241a4:	e0bfff17 	ldw	r2,-4(fp)
100241a8:	10800017 	ldw	r2,0(r2)
100241ac:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
100241b0:	e0bfff17 	ldw	r2,-4(fp)
100241b4:	10bfff04 	addi	r2,r2,-4
100241b8:	e0bfff15 	stw	r2,-4(fp)
100241bc:	e0ffff17 	ldw	r3,-4(fp)
100241c0:	008400b4 	movhi	r2,4098
100241c4:	1093bc84 	addi	r2,r2,20210
100241c8:	18bff62e 	bgeu	r3,r2,100241a4 <_do_ctors+0x20>
}
100241cc:	0001883a 	nop
100241d0:	e037883a 	mov	sp,fp
100241d4:	dfc00117 	ldw	ra,4(sp)
100241d8:	df000017 	ldw	fp,0(sp)
100241dc:	dec00204 	addi	sp,sp,8
100241e0:	f800283a 	ret

100241e4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
100241e4:	defffd04 	addi	sp,sp,-12
100241e8:	dfc00215 	stw	ra,8(sp)
100241ec:	df000115 	stw	fp,4(sp)
100241f0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100241f4:	008400b4 	movhi	r2,4098
100241f8:	1093bf04 	addi	r2,r2,20220
100241fc:	e0bfff15 	stw	r2,-4(fp)
10024200:	00000606 	br	1002421c <_do_dtors+0x38>
        (*dtor) (); 
10024204:	e0bfff17 	ldw	r2,-4(fp)
10024208:	10800017 	ldw	r2,0(r2)
1002420c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
10024210:	e0bfff17 	ldw	r2,-4(fp)
10024214:	10bfff04 	addi	r2,r2,-4
10024218:	e0bfff15 	stw	r2,-4(fp)
1002421c:	e0ffff17 	ldw	r3,-4(fp)
10024220:	008400b4 	movhi	r2,4098
10024224:	1093bf04 	addi	r2,r2,20220
10024228:	18bff62e 	bgeu	r3,r2,10024204 <_do_dtors+0x20>
}
1002422c:	0001883a 	nop
10024230:	e037883a 	mov	sp,fp
10024234:	dfc00117 	ldw	ra,4(sp)
10024238:	df000017 	ldw	fp,0(sp)
1002423c:	dec00204 	addi	sp,sp,8
10024240:	f800283a 	ret

10024244 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
10024244:	defffa04 	addi	sp,sp,-24
10024248:	dfc00515 	stw	ra,20(sp)
1002424c:	df000415 	stw	fp,16(sp)
10024250:	df000404 	addi	fp,sp,16
10024254:	e13ffd15 	stw	r4,-12(fp)
10024258:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
1002425c:	e0bffc17 	ldw	r2,-16(fp)
10024260:	10800017 	ldw	r2,0(r2)
10024264:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
10024268:	e13ffd17 	ldw	r4,-12(fp)
1002426c:	00178f00 	call	100178f0 <strlen>
10024270:	10800044 	addi	r2,r2,1
10024274:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10024278:	00000d06 	br	100242b0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1002427c:	e0bfff17 	ldw	r2,-4(fp)
10024280:	10800217 	ldw	r2,8(r2)
10024284:	e0fffe17 	ldw	r3,-8(fp)
10024288:	180d883a 	mov	r6,r3
1002428c:	e17ffd17 	ldw	r5,-12(fp)
10024290:	1009883a 	mov	r4,r2
10024294:	0016ba80 	call	10016ba8 <memcmp>
10024298:	1000021e 	bne	r2,zero,100242a4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1002429c:	e0bfff17 	ldw	r2,-4(fp)
100242a0:	00000706 	br	100242c0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
100242a4:	e0bfff17 	ldw	r2,-4(fp)
100242a8:	10800017 	ldw	r2,0(r2)
100242ac:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
100242b0:	e0ffff17 	ldw	r3,-4(fp)
100242b4:	e0bffc17 	ldw	r2,-16(fp)
100242b8:	18bff01e 	bne	r3,r2,1002427c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
100242bc:	0005883a 	mov	r2,zero
}
100242c0:	e037883a 	mov	sp,fp
100242c4:	dfc00117 	ldw	ra,4(sp)
100242c8:	df000017 	ldw	fp,0(sp)
100242cc:	dec00204 	addi	sp,sp,8
100242d0:	f800283a 	ret

100242d4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
100242d4:	defffb04 	addi	sp,sp,-20
100242d8:	dfc00415 	stw	ra,16(sp)
100242dc:	df000315 	stw	fp,12(sp)
100242e0:	df000304 	addi	fp,sp,12
100242e4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
100242e8:	d0a01417 	ldw	r2,-32688(gp)
100242ec:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
100242f0:	00003106 	br	100243b8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
100242f4:	e0bfff17 	ldw	r2,-4(fp)
100242f8:	10800217 	ldw	r2,8(r2)
100242fc:	1009883a 	mov	r4,r2
10024300:	00178f00 	call	100178f0 <strlen>
10024304:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10024308:	e0bfff17 	ldw	r2,-4(fp)
1002430c:	10c00217 	ldw	r3,8(r2)
10024310:	e0bffe17 	ldw	r2,-8(fp)
10024314:	10bfffc4 	addi	r2,r2,-1
10024318:	1885883a 	add	r2,r3,r2
1002431c:	10800003 	ldbu	r2,0(r2)
10024320:	10803fcc 	andi	r2,r2,255
10024324:	1080201c 	xori	r2,r2,128
10024328:	10bfe004 	addi	r2,r2,-128
1002432c:	10800bd8 	cmpnei	r2,r2,47
10024330:	1000031e 	bne	r2,zero,10024340 <alt_find_file+0x6c>
    {
      len -= 1;
10024334:	e0bffe17 	ldw	r2,-8(fp)
10024338:	10bfffc4 	addi	r2,r2,-1
1002433c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10024340:	e0bffe17 	ldw	r2,-8(fp)
10024344:	e0fffd17 	ldw	r3,-12(fp)
10024348:	1885883a 	add	r2,r3,r2
1002434c:	10800003 	ldbu	r2,0(r2)
10024350:	10803fcc 	andi	r2,r2,255
10024354:	1080201c 	xori	r2,r2,128
10024358:	10bfe004 	addi	r2,r2,-128
1002435c:	10800be0 	cmpeqi	r2,r2,47
10024360:	1000081e 	bne	r2,zero,10024384 <alt_find_file+0xb0>
10024364:	e0bffe17 	ldw	r2,-8(fp)
10024368:	e0fffd17 	ldw	r3,-12(fp)
1002436c:	1885883a 	add	r2,r3,r2
10024370:	10800003 	ldbu	r2,0(r2)
10024374:	10803fcc 	andi	r2,r2,255
10024378:	1080201c 	xori	r2,r2,128
1002437c:	10bfe004 	addi	r2,r2,-128
10024380:	10000a1e 	bne	r2,zero,100243ac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10024384:	e0bfff17 	ldw	r2,-4(fp)
10024388:	10800217 	ldw	r2,8(r2)
1002438c:	e0fffe17 	ldw	r3,-8(fp)
10024390:	180d883a 	mov	r6,r3
10024394:	e17ffd17 	ldw	r5,-12(fp)
10024398:	1009883a 	mov	r4,r2
1002439c:	0016ba80 	call	10016ba8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
100243a0:	1000021e 	bne	r2,zero,100243ac <alt_find_file+0xd8>
    {
      /* match found */

      return next;
100243a4:	e0bfff17 	ldw	r2,-4(fp)
100243a8:	00000706 	br	100243c8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
100243ac:	e0bfff17 	ldw	r2,-4(fp)
100243b0:	10800017 	ldw	r2,0(r2)
100243b4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
100243b8:	e0ffff17 	ldw	r3,-4(fp)
100243bc:	d0a01404 	addi	r2,gp,-32688
100243c0:	18bfcc1e 	bne	r3,r2,100242f4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
100243c4:	0005883a 	mov	r2,zero
}
100243c8:	e037883a 	mov	sp,fp
100243cc:	dfc00117 	ldw	ra,4(sp)
100243d0:	df000017 	ldw	fp,0(sp)
100243d4:	dec00204 	addi	sp,sp,8
100243d8:	f800283a 	ret

100243dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
100243dc:	defffc04 	addi	sp,sp,-16
100243e0:	df000315 	stw	fp,12(sp)
100243e4:	df000304 	addi	fp,sp,12
100243e8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
100243ec:	00bffa04 	movi	r2,-24
100243f0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
100243f4:	e03fff15 	stw	zero,-4(fp)
100243f8:	00001706 	br	10024458 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
100243fc:	e0bfff17 	ldw	r2,-4(fp)
10024400:	10c00324 	muli	r3,r2,12
10024404:	008400b4 	movhi	r2,4098
10024408:	1885883a 	add	r2,r3,r2
1002440c:	109d0f17 	ldw	r2,29756(r2)
10024410:	10000e1e 	bne	r2,zero,1002444c <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
10024414:	e0bfff17 	ldw	r2,-4(fp)
10024418:	11000324 	muli	r4,r2,12
1002441c:	e0fffd17 	ldw	r3,-12(fp)
10024420:	008400b4 	movhi	r2,4098
10024424:	2085883a 	add	r2,r4,r2
10024428:	10dd0f15 	stw	r3,29756(r2)
      if (i > alt_max_fd)
1002442c:	d0e01817 	ldw	r3,-32672(gp)
10024430:	e0bfff17 	ldw	r2,-4(fp)
10024434:	1880020e 	bge	r3,r2,10024440 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
10024438:	e0bfff17 	ldw	r2,-4(fp)
1002443c:	d0a01815 	stw	r2,-32672(gp)
      }
      rc = i;
10024440:	e0bfff17 	ldw	r2,-4(fp)
10024444:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
10024448:	00000706 	br	10024468 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
1002444c:	e0bfff17 	ldw	r2,-4(fp)
10024450:	10800044 	addi	r2,r2,1
10024454:	e0bfff15 	stw	r2,-4(fp)
10024458:	e0bfff17 	ldw	r2,-4(fp)
1002445c:	10800810 	cmplti	r2,r2,32
10024460:	103fe61e 	bne	r2,zero,100243fc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
10024464:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10024468:	e0bffe17 	ldw	r2,-8(fp)
}
1002446c:	e037883a 	mov	sp,fp
10024470:	df000017 	ldw	fp,0(sp)
10024474:	dec00104 	addi	sp,sp,4
10024478:	f800283a 	ret

1002447c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1002447c:	defffe04 	addi	sp,sp,-8
10024480:	dfc00115 	stw	ra,4(sp)
10024484:	df000015 	stw	fp,0(sp)
10024488:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1002448c:	01440004 	movi	r5,4096
10024490:	0009883a 	mov	r4,zero
10024494:	0024a380 	call	10024a38 <alt_icache_flush>
#endif
}
10024498:	0001883a 	nop
1002449c:	e037883a 	mov	sp,fp
100244a0:	dfc00117 	ldw	ra,4(sp)
100244a4:	df000017 	ldw	fp,0(sp)
100244a8:	dec00204 	addi	sp,sp,8
100244ac:	f800283a 	ret

100244b0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
100244b0:	defff904 	addi	sp,sp,-28
100244b4:	dfc00615 	stw	ra,24(sp)
100244b8:	df000515 	stw	fp,20(sp)
100244bc:	df000504 	addi	fp,sp,20
100244c0:	e13fff15 	stw	r4,-4(fp)
100244c4:	e17ffe15 	stw	r5,-8(fp)
100244c8:	e1bffd15 	stw	r6,-12(fp)
100244cc:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
100244d0:	e0800217 	ldw	r2,8(fp)
100244d4:	d8800015 	stw	r2,0(sp)
100244d8:	e1fffc17 	ldw	r7,-16(fp)
100244dc:	e1bffd17 	ldw	r6,-12(fp)
100244e0:	e17ffe17 	ldw	r5,-8(fp)
100244e4:	e13fff17 	ldw	r4,-4(fp)
100244e8:	00246600 	call	10024660 <alt_iic_isr_register>
}  
100244ec:	e037883a 	mov	sp,fp
100244f0:	dfc00117 	ldw	ra,4(sp)
100244f4:	df000017 	ldw	fp,0(sp)
100244f8:	dec00204 	addi	sp,sp,8
100244fc:	f800283a 	ret

10024500 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
10024500:	defff904 	addi	sp,sp,-28
10024504:	df000615 	stw	fp,24(sp)
10024508:	df000604 	addi	fp,sp,24
1002450c:	e13ffb15 	stw	r4,-20(fp)
10024510:	e17ffa15 	stw	r5,-24(fp)
10024514:	e0bffa17 	ldw	r2,-24(fp)
10024518:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
1002451c:	0005303a 	rdctl	r2,status
10024520:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10024524:	e0fffe17 	ldw	r3,-8(fp)
10024528:	00bfff84 	movi	r2,-2
1002452c:	1884703a 	and	r2,r3,r2
10024530:	1001703a 	wrctl	status,r2
  return context;
10024534:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10024538:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
1002453c:	00c00044 	movi	r3,1
10024540:	e0bfff17 	ldw	r2,-4(fp)
10024544:	1884983a 	sll	r2,r3,r2
10024548:	1007883a 	mov	r3,r2
1002454c:	d0a7dc17 	ldw	r2,-24720(gp)
10024550:	1884b03a 	or	r2,r3,r2
10024554:	d0a7dc15 	stw	r2,-24720(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10024558:	d0a7dc17 	ldw	r2,-24720(gp)
1002455c:	100170fa 	wrctl	ienable,r2
10024560:	e0bffd17 	ldw	r2,-12(fp)
10024564:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10024568:	e0bffc17 	ldw	r2,-16(fp)
1002456c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10024570:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
10024574:	0001883a 	nop
}
10024578:	e037883a 	mov	sp,fp
1002457c:	df000017 	ldw	fp,0(sp)
10024580:	dec00104 	addi	sp,sp,4
10024584:	f800283a 	ret

10024588 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
10024588:	defff904 	addi	sp,sp,-28
1002458c:	df000615 	stw	fp,24(sp)
10024590:	df000604 	addi	fp,sp,24
10024594:	e13ffb15 	stw	r4,-20(fp)
10024598:	e17ffa15 	stw	r5,-24(fp)
1002459c:	e0bffa17 	ldw	r2,-24(fp)
100245a0:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
100245a4:	0005303a 	rdctl	r2,status
100245a8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100245ac:	e0fffe17 	ldw	r3,-8(fp)
100245b0:	00bfff84 	movi	r2,-2
100245b4:	1884703a 	and	r2,r3,r2
100245b8:	1001703a 	wrctl	status,r2
  return context;
100245bc:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
100245c0:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
100245c4:	00c00044 	movi	r3,1
100245c8:	e0bfff17 	ldw	r2,-4(fp)
100245cc:	1884983a 	sll	r2,r3,r2
100245d0:	0084303a 	nor	r2,zero,r2
100245d4:	1007883a 	mov	r3,r2
100245d8:	d0a7dc17 	ldw	r2,-24720(gp)
100245dc:	1884703a 	and	r2,r3,r2
100245e0:	d0a7dc15 	stw	r2,-24720(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
100245e4:	d0a7dc17 	ldw	r2,-24720(gp)
100245e8:	100170fa 	wrctl	ienable,r2
100245ec:	e0bffd17 	ldw	r2,-12(fp)
100245f0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
100245f4:	e0bffc17 	ldw	r2,-16(fp)
100245f8:	1001703a 	wrctl	status,r2
  return 0;
100245fc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
10024600:	0001883a 	nop
}
10024604:	e037883a 	mov	sp,fp
10024608:	df000017 	ldw	fp,0(sp)
1002460c:	dec00104 	addi	sp,sp,4
10024610:	f800283a 	ret

10024614 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
10024614:	defffc04 	addi	sp,sp,-16
10024618:	df000315 	stw	fp,12(sp)
1002461c:	df000304 	addi	fp,sp,12
10024620:	e13ffe15 	stw	r4,-8(fp)
10024624:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10024628:	000530fa 	rdctl	r2,ienable
1002462c:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
10024630:	00c00044 	movi	r3,1
10024634:	e0bffd17 	ldw	r2,-12(fp)
10024638:	1884983a 	sll	r2,r3,r2
1002463c:	1007883a 	mov	r3,r2
10024640:	e0bfff17 	ldw	r2,-4(fp)
10024644:	1884703a 	and	r2,r3,r2
10024648:	1004c03a 	cmpne	r2,r2,zero
1002464c:	10803fcc 	andi	r2,r2,255
}
10024650:	e037883a 	mov	sp,fp
10024654:	df000017 	ldw	fp,0(sp)
10024658:	dec00104 	addi	sp,sp,4
1002465c:	f800283a 	ret

10024660 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10024660:	defff504 	addi	sp,sp,-44
10024664:	dfc00a15 	stw	ra,40(sp)
10024668:	df000915 	stw	fp,36(sp)
1002466c:	df000904 	addi	fp,sp,36
10024670:	e13ffa15 	stw	r4,-24(fp)
10024674:	e17ff915 	stw	r5,-28(fp)
10024678:	e1bff815 	stw	r6,-32(fp)
1002467c:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
10024680:	00bffa84 	movi	r2,-22
10024684:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
10024688:	e0bff917 	ldw	r2,-28(fp)
1002468c:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
10024690:	e0bffe17 	ldw	r2,-8(fp)
10024694:	10800808 	cmpgei	r2,r2,32
10024698:	1000241e 	bne	r2,zero,1002472c <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
1002469c:	0005303a 	rdctl	r2,status
100246a0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100246a4:	e0fffc17 	ldw	r3,-16(fp)
100246a8:	00bfff84 	movi	r2,-2
100246ac:	1884703a 	and	r2,r3,r2
100246b0:	1001703a 	wrctl	status,r2
  return context;
100246b4:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
100246b8:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
100246bc:	e0bffe17 	ldw	r2,-8(fp)
100246c0:	100890fa 	slli	r4,r2,3
100246c4:	e0fff817 	ldw	r3,-32(fp)
100246c8:	008400f4 	movhi	r2,4099
100246cc:	2085883a 	add	r2,r4,r2
100246d0:	10e9b815 	stw	r3,-22816(r2)
    alt_irq[id].context = isr_context;
100246d4:	e0bffe17 	ldw	r2,-8(fp)
100246d8:	100890fa 	slli	r4,r2,3
100246dc:	e0fff717 	ldw	r3,-36(fp)
100246e0:	008400f4 	movhi	r2,4099
100246e4:	2085883a 	add	r2,r4,r2
100246e8:	10e9b915 	stw	r3,-22812(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
100246ec:	e0bff817 	ldw	r2,-32(fp)
100246f0:	10000526 	beq	r2,zero,10024708 <alt_iic_isr_register+0xa8>
100246f4:	e0bffe17 	ldw	r2,-8(fp)
100246f8:	100b883a 	mov	r5,r2
100246fc:	e13ffa17 	ldw	r4,-24(fp)
10024700:	00245000 	call	10024500 <alt_ic_irq_enable>
10024704:	00000406 	br	10024718 <alt_iic_isr_register+0xb8>
10024708:	e0bffe17 	ldw	r2,-8(fp)
1002470c:	100b883a 	mov	r5,r2
10024710:	e13ffa17 	ldw	r4,-24(fp)
10024714:	00245880 	call	10024588 <alt_ic_irq_disable>
10024718:	e0bfff15 	stw	r2,-4(fp)
1002471c:	e0bffd17 	ldw	r2,-12(fp)
10024720:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
10024724:	e0bffb17 	ldw	r2,-20(fp)
10024728:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1002472c:	e0bfff17 	ldw	r2,-4(fp)
}
10024730:	e037883a 	mov	sp,fp
10024734:	dfc00117 	ldw	ra,4(sp)
10024738:	df000017 	ldw	fp,0(sp)
1002473c:	dec00204 	addi	sp,sp,8
10024740:	f800283a 	ret

10024744 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
10024744:	defff904 	addi	sp,sp,-28
10024748:	dfc00615 	stw	ra,24(sp)
1002474c:	df000515 	stw	fp,20(sp)
10024750:	df000504 	addi	fp,sp,20
10024754:	e13ffe15 	stw	r4,-8(fp)
10024758:	e17ffd15 	stw	r5,-12(fp)
1002475c:	e1bffc15 	stw	r6,-16(fp)
10024760:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
10024764:	e1bffb17 	ldw	r6,-20(fp)
10024768:	e17ffc17 	ldw	r5,-16(fp)
1002476c:	e13ffd17 	ldw	r4,-12(fp)
10024770:	0022df40 	call	10022df4 <open>
10024774:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
10024778:	e0bfff17 	ldw	r2,-4(fp)
1002477c:	10001716 	blt	r2,zero,100247dc <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
10024780:	e0bfff17 	ldw	r2,-4(fp)
10024784:	10c00324 	muli	r3,r2,12
10024788:	008400b4 	movhi	r2,4098
1002478c:	1885883a 	add	r2,r3,r2
10024790:	10dd0f17 	ldw	r3,29756(r2)
10024794:	e0bffe17 	ldw	r2,-8(fp)
10024798:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1002479c:	e0bfff17 	ldw	r2,-4(fp)
100247a0:	10c00324 	muli	r3,r2,12
100247a4:	008400b4 	movhi	r2,4098
100247a8:	1885883a 	add	r2,r3,r2
100247ac:	10dd1017 	ldw	r3,29760(r2)
100247b0:	e0bffe17 	ldw	r2,-8(fp)
100247b4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
100247b8:	e0bfff17 	ldw	r2,-4(fp)
100247bc:	10c00324 	muli	r3,r2,12
100247c0:	008400b4 	movhi	r2,4098
100247c4:	1885883a 	add	r2,r3,r2
100247c8:	10dd1117 	ldw	r3,29764(r2)
100247cc:	e0bffe17 	ldw	r2,-8(fp)
100247d0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
100247d4:	e13fff17 	ldw	r4,-4(fp)
100247d8:	00230800 	call	10023080 <alt_release_fd>
  }
} 
100247dc:	0001883a 	nop
100247e0:	e037883a 	mov	sp,fp
100247e4:	dfc00117 	ldw	ra,4(sp)
100247e8:	df000017 	ldw	fp,0(sp)
100247ec:	dec00204 	addi	sp,sp,8
100247f0:	f800283a 	ret

100247f4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
100247f4:	defffb04 	addi	sp,sp,-20
100247f8:	dfc00415 	stw	ra,16(sp)
100247fc:	df000315 	stw	fp,12(sp)
10024800:	df000304 	addi	fp,sp,12
10024804:	e13fff15 	stw	r4,-4(fp)
10024808:	e17ffe15 	stw	r5,-8(fp)
1002480c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
10024810:	01c07fc4 	movi	r7,511
10024814:	01800044 	movi	r6,1
10024818:	e17fff17 	ldw	r5,-4(fp)
1002481c:	010400b4 	movhi	r4,4098
10024820:	211d1204 	addi	r4,r4,29768
10024824:	00247440 	call	10024744 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
10024828:	01c07fc4 	movi	r7,511
1002482c:	000d883a 	mov	r6,zero
10024830:	e17ffe17 	ldw	r5,-8(fp)
10024834:	010400b4 	movhi	r4,4098
10024838:	211d0f04 	addi	r4,r4,29756
1002483c:	00247440 	call	10024744 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
10024840:	01c07fc4 	movi	r7,511
10024844:	01800044 	movi	r6,1
10024848:	e17ffd17 	ldw	r5,-12(fp)
1002484c:	010400b4 	movhi	r4,4098
10024850:	211d1504 	addi	r4,r4,29780
10024854:	00247440 	call	10024744 <alt_open_fd>
}  
10024858:	0001883a 	nop
1002485c:	e037883a 	mov	sp,fp
10024860:	dfc00117 	ldw	ra,4(sp)
10024864:	df000017 	ldw	fp,0(sp)
10024868:	dec00204 	addi	sp,sp,8
1002486c:	f800283a 	ret

10024870 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10024870:	defffa04 	addi	sp,sp,-24
10024874:	df000515 	stw	fp,20(sp)
10024878:	df000504 	addi	fp,sp,20
1002487c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
10024880:	0005303a 	rdctl	r2,status
10024884:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10024888:	e0fffc17 	ldw	r3,-16(fp)
1002488c:	00bfff84 	movi	r2,-2
10024890:	1884703a 	and	r2,r3,r2
10024894:	1001703a 	wrctl	status,r2
  return context;
10024898:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1002489c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
100248a0:	e0bffb17 	ldw	r2,-20(fp)
100248a4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
100248a8:	e0bffd17 	ldw	r2,-12(fp)
100248ac:	10800017 	ldw	r2,0(r2)
100248b0:	e0fffd17 	ldw	r3,-12(fp)
100248b4:	18c00117 	ldw	r3,4(r3)
100248b8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
100248bc:	e0bffd17 	ldw	r2,-12(fp)
100248c0:	10800117 	ldw	r2,4(r2)
100248c4:	e0fffd17 	ldw	r3,-12(fp)
100248c8:	18c00017 	ldw	r3,0(r3)
100248cc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
100248d0:	e0bffd17 	ldw	r2,-12(fp)
100248d4:	e0fffd17 	ldw	r3,-12(fp)
100248d8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
100248dc:	e0bffd17 	ldw	r2,-12(fp)
100248e0:	e0fffd17 	ldw	r3,-12(fp)
100248e4:	10c00015 	stw	r3,0(r2)
100248e8:	e0bfff17 	ldw	r2,-4(fp)
100248ec:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
100248f0:	e0bffe17 	ldw	r2,-8(fp)
100248f4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
100248f8:	0001883a 	nop
100248fc:	e037883a 	mov	sp,fp
10024900:	df000017 	ldw	fp,0(sp)
10024904:	dec00104 	addi	sp,sp,4
10024908:	f800283a 	ret

1002490c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1002490c:	defffb04 	addi	sp,sp,-20
10024910:	dfc00415 	stw	ra,16(sp)
10024914:	df000315 	stw	fp,12(sp)
10024918:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1002491c:	d0a01c17 	ldw	r2,-32656(gp)
10024920:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
10024924:	d0a7de17 	ldw	r2,-24712(gp)
10024928:	10800044 	addi	r2,r2,1
1002492c:	d0a7de15 	stw	r2,-24712(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10024930:	00002e06 	br	100249ec <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
10024934:	e0bfff17 	ldw	r2,-4(fp)
10024938:	10800017 	ldw	r2,0(r2)
1002493c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10024940:	e0bfff17 	ldw	r2,-4(fp)
10024944:	10800403 	ldbu	r2,16(r2)
10024948:	10803fcc 	andi	r2,r2,255
1002494c:	10000426 	beq	r2,zero,10024960 <alt_tick+0x54>
10024950:	d0a7de17 	ldw	r2,-24712(gp)
10024954:	1000021e 	bne	r2,zero,10024960 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10024958:	e0bfff17 	ldw	r2,-4(fp)
1002495c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10024960:	e0bfff17 	ldw	r2,-4(fp)
10024964:	10800217 	ldw	r2,8(r2)
10024968:	d0e7de17 	ldw	r3,-24712(gp)
1002496c:	18801d36 	bltu	r3,r2,100249e4 <alt_tick+0xd8>
10024970:	e0bfff17 	ldw	r2,-4(fp)
10024974:	10800403 	ldbu	r2,16(r2)
10024978:	10803fcc 	andi	r2,r2,255
1002497c:	1000191e 	bne	r2,zero,100249e4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
10024980:	e0bfff17 	ldw	r2,-4(fp)
10024984:	10800317 	ldw	r2,12(r2)
10024988:	e0ffff17 	ldw	r3,-4(fp)
1002498c:	18c00517 	ldw	r3,20(r3)
10024990:	1809883a 	mov	r4,r3
10024994:	103ee83a 	callr	r2
10024998:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1002499c:	e0bffd17 	ldw	r2,-12(fp)
100249a0:	1000031e 	bne	r2,zero,100249b0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
100249a4:	e13fff17 	ldw	r4,-4(fp)
100249a8:	00248700 	call	10024870 <alt_alarm_stop>
100249ac:	00000d06 	br	100249e4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
100249b0:	e0bfff17 	ldw	r2,-4(fp)
100249b4:	10c00217 	ldw	r3,8(r2)
100249b8:	e0bffd17 	ldw	r2,-12(fp)
100249bc:	1887883a 	add	r3,r3,r2
100249c0:	e0bfff17 	ldw	r2,-4(fp)
100249c4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
100249c8:	e0bfff17 	ldw	r2,-4(fp)
100249cc:	10c00217 	ldw	r3,8(r2)
100249d0:	d0a7de17 	ldw	r2,-24712(gp)
100249d4:	1880032e 	bgeu	r3,r2,100249e4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
100249d8:	e0bfff17 	ldw	r2,-4(fp)
100249dc:	00c00044 	movi	r3,1
100249e0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
100249e4:	e0bffe17 	ldw	r2,-8(fp)
100249e8:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
100249ec:	e0ffff17 	ldw	r3,-4(fp)
100249f0:	d0a01c04 	addi	r2,gp,-32656
100249f4:	18bfcf1e 	bne	r3,r2,10024934 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
100249f8:	0001883a 	nop
}
100249fc:	0001883a 	nop
10024a00:	e037883a 	mov	sp,fp
10024a04:	dfc00117 	ldw	ra,4(sp)
10024a08:	df000017 	ldw	fp,0(sp)
10024a0c:	dec00204 	addi	sp,sp,8
10024a10:	f800283a 	ret

10024a14 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
10024a14:	deffff04 	addi	sp,sp,-4
10024a18:	df000015 	stw	fp,0(sp)
10024a1c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
10024a20:	000170fa 	wrctl	ienable,zero
}
10024a24:	0001883a 	nop
10024a28:	e037883a 	mov	sp,fp
10024a2c:	df000017 	ldw	fp,0(sp)
10024a30:	dec00104 	addi	sp,sp,4
10024a34:	f800283a 	ret

10024a38 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
10024a38:	defffb04 	addi	sp,sp,-20
10024a3c:	df000415 	stw	fp,16(sp)
10024a40:	df000404 	addi	fp,sp,16
10024a44:	e13ffd15 	stw	r4,-12(fp)
10024a48:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
10024a4c:	e0bffc17 	ldw	r2,-16(fp)
10024a50:	10840070 	cmpltui	r2,r2,4097
10024a54:	1000021e 	bne	r2,zero,10024a60 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
10024a58:	00840004 	movi	r2,4096
10024a5c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
10024a60:	e0fffd17 	ldw	r3,-12(fp)
10024a64:	e0bffc17 	ldw	r2,-16(fp)
10024a68:	1885883a 	add	r2,r3,r2
10024a6c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
10024a70:	e0bffd17 	ldw	r2,-12(fp)
10024a74:	e0bfff15 	stw	r2,-4(fp)
10024a78:	00000506 	br	10024a90 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
10024a7c:	e0bfff17 	ldw	r2,-4(fp)
10024a80:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
10024a84:	e0bfff17 	ldw	r2,-4(fp)
10024a88:	10800804 	addi	r2,r2,32
10024a8c:	e0bfff15 	stw	r2,-4(fp)
10024a90:	e0ffff17 	ldw	r3,-4(fp)
10024a94:	e0bffe17 	ldw	r2,-8(fp)
10024a98:	18bff836 	bltu	r3,r2,10024a7c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
10024a9c:	e0bffd17 	ldw	r2,-12(fp)
10024aa0:	108007cc 	andi	r2,r2,31
10024aa4:	10000226 	beq	r2,zero,10024ab0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
10024aa8:	e0bfff17 	ldw	r2,-4(fp)
10024aac:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
10024ab0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
10024ab4:	0001883a 	nop
10024ab8:	e037883a 	mov	sp,fp
10024abc:	df000017 	ldw	fp,0(sp)
10024ac0:	dec00104 	addi	sp,sp,4
10024ac4:	f800283a 	ret

10024ac8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10024ac8:	defffe04 	addi	sp,sp,-8
10024acc:	df000115 	stw	fp,4(sp)
10024ad0:	df000104 	addi	fp,sp,4
10024ad4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
10024ad8:	e0bfff17 	ldw	r2,-4(fp)
10024adc:	10bffe84 	addi	r2,r2,-6
10024ae0:	10c00428 	cmpgeui	r3,r2,16
10024ae4:	1800191e 	bne	r3,zero,10024b4c <alt_exception_cause_generated_bad_addr+0x84>
10024ae8:	100690ba 	slli	r3,r2,2
10024aec:	008400b4 	movhi	r2,4098
10024af0:	1885883a 	add	r2,r3,r2
10024af4:	1092bf17 	ldw	r2,19196(r2)
10024af8:	1000683a 	jmp	r2
10024afc:	10024b3c 	xorhi	zero,r2,2348
10024b00:	10024b3c 	xorhi	zero,r2,2348
10024b04:	10024b4c 	andi	zero,r2,2349
10024b08:	10024b4c 	andi	zero,r2,2349
10024b0c:	10024b4c 	andi	zero,r2,2349
10024b10:	10024b3c 	xorhi	zero,r2,2348
10024b14:	10024b44 	addi	zero,r2,2349
10024b18:	10024b4c 	andi	zero,r2,2349
10024b1c:	10024b3c 	xorhi	zero,r2,2348
10024b20:	10024b3c 	xorhi	zero,r2,2348
10024b24:	10024b4c 	andi	zero,r2,2349
10024b28:	10024b3c 	xorhi	zero,r2,2348
10024b2c:	10024b44 	addi	zero,r2,2349
10024b30:	10024b4c 	andi	zero,r2,2349
10024b34:	10024b4c 	andi	zero,r2,2349
10024b38:	10024b3c 	xorhi	zero,r2,2348
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10024b3c:	00800044 	movi	r2,1
10024b40:	00000306 	br	10024b50 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10024b44:	0005883a 	mov	r2,zero
10024b48:	00000106 	br	10024b50 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
10024b4c:	0005883a 	mov	r2,zero
  }
}
10024b50:	e037883a 	mov	sp,fp
10024b54:	df000017 	ldw	fp,0(sp)
10024b58:	dec00104 	addi	sp,sp,4
10024b5c:	f800283a 	ret

10024b60 <atexit>:
10024b60:	200b883a 	mov	r5,r4
10024b64:	000f883a 	mov	r7,zero
10024b68:	000d883a 	mov	r6,zero
10024b6c:	0009883a 	mov	r4,zero
10024b70:	0024ba81 	jmpi	10024ba8 <__register_exitproc>

10024b74 <exit>:
10024b74:	defffe04 	addi	sp,sp,-8
10024b78:	000b883a 	mov	r5,zero
10024b7c:	dc000015 	stw	r16,0(sp)
10024b80:	dfc00115 	stw	ra,4(sp)
10024b84:	2021883a 	mov	r16,r4
10024b88:	0024c380 	call	10024c38 <__call_exitprocs>
10024b8c:	008400f4 	movhi	r2,4099
10024b90:	11219717 	ldw	r4,-31140(r2)
10024b94:	20800f17 	ldw	r2,60(r4)
10024b98:	10000126 	beq	r2,zero,10024ba0 <exit+0x2c>
10024b9c:	103ee83a 	callr	r2
10024ba0:	8009883a 	mov	r4,r16
10024ba4:	00226b80 	call	100226b8 <_exit>

10024ba8 <__register_exitproc>:
10024ba8:	008400f4 	movhi	r2,4099
10024bac:	10e19717 	ldw	r3,-31140(r2)
10024bb0:	18805217 	ldw	r2,328(r3)
10024bb4:	10001726 	beq	r2,zero,10024c14 <__register_exitproc+0x6c>
10024bb8:	10c00117 	ldw	r3,4(r2)
10024bbc:	1a000808 	cmpgei	r8,r3,32
10024bc0:	40001b1e 	bne	r8,zero,10024c30 <__register_exitproc+0x88>
10024bc4:	20000b26 	beq	r4,zero,10024bf4 <__register_exitproc+0x4c>
10024bc8:	181090ba 	slli	r8,r3,2
10024bcc:	02400044 	movi	r9,1
10024bd0:	48d2983a 	sll	r9,r9,r3
10024bd4:	1211883a 	add	r8,r2,r8
10024bd8:	41802215 	stw	r6,136(r8)
10024bdc:	11806217 	ldw	r6,392(r2)
10024be0:	21000098 	cmpnei	r4,r4,2
10024be4:	324cb03a 	or	r6,r6,r9
10024be8:	11806215 	stw	r6,392(r2)
10024bec:	41c04215 	stw	r7,264(r8)
10024bf0:	20000b26 	beq	r4,zero,10024c20 <__register_exitproc+0x78>
10024bf4:	19000084 	addi	r4,r3,2
10024bf8:	200890ba 	slli	r4,r4,2
10024bfc:	18c00044 	addi	r3,r3,1
10024c00:	10c00115 	stw	r3,4(r2)
10024c04:	1105883a 	add	r2,r2,r4
10024c08:	11400015 	stw	r5,0(r2)
10024c0c:	0005883a 	mov	r2,zero
10024c10:	f800283a 	ret
10024c14:	18805304 	addi	r2,r3,332
10024c18:	18805215 	stw	r2,328(r3)
10024c1c:	003fe606 	br	10024bb8 <__register_exitproc+0x10>
10024c20:	11006317 	ldw	r4,396(r2)
10024c24:	2252b03a 	or	r9,r4,r9
10024c28:	12406315 	stw	r9,396(r2)
10024c2c:	003ff106 	br	10024bf4 <__register_exitproc+0x4c>
10024c30:	00bfffc4 	movi	r2,-1
10024c34:	f800283a 	ret

10024c38 <__call_exitprocs>:
10024c38:	defff704 	addi	sp,sp,-36
10024c3c:	008400f4 	movhi	r2,4099
10024c40:	ddc00715 	stw	r23,28(sp)
10024c44:	15e19717 	ldw	r23,-31140(r2)
10024c48:	dd400515 	stw	r21,20(sp)
10024c4c:	dd000415 	stw	r20,16(sp)
10024c50:	dcc00315 	stw	r19,12(sp)
10024c54:	dfc00815 	stw	ra,32(sp)
10024c58:	dd800615 	stw	r22,24(sp)
10024c5c:	dc800215 	stw	r18,8(sp)
10024c60:	dc400115 	stw	r17,4(sp)
10024c64:	dc000015 	stw	r16,0(sp)
10024c68:	2029883a 	mov	r20,r4
10024c6c:	282b883a 	mov	r21,r5
10024c70:	04c00044 	movi	r19,1
10024c74:	bc805217 	ldw	r18,328(r23)
10024c78:	90000d26 	beq	r18,zero,10024cb0 <__call_exitprocs+0x78>
10024c7c:	94000117 	ldw	r16,4(r18)
10024c80:	847fffc4 	addi	r17,r16,-1
10024c84:	88000a16 	blt	r17,zero,10024cb0 <__call_exitprocs+0x78>
10024c88:	84000044 	addi	r16,r16,1
10024c8c:	802090ba 	slli	r16,r16,2
10024c90:	9421883a 	add	r16,r18,r16
10024c94:	a8001126 	beq	r21,zero,10024cdc <__call_exitprocs+0xa4>
10024c98:	80804017 	ldw	r2,256(r16)
10024c9c:	15400f26 	beq	r2,r21,10024cdc <__call_exitprocs+0xa4>
10024ca0:	8c7fffc4 	addi	r17,r17,-1
10024ca4:	88bfffd8 	cmpnei	r2,r17,-1
10024ca8:	843fff04 	addi	r16,r16,-4
10024cac:	103ff91e 	bne	r2,zero,10024c94 <__call_exitprocs+0x5c>
10024cb0:	dfc00817 	ldw	ra,32(sp)
10024cb4:	ddc00717 	ldw	r23,28(sp)
10024cb8:	dd800617 	ldw	r22,24(sp)
10024cbc:	dd400517 	ldw	r21,20(sp)
10024cc0:	dd000417 	ldw	r20,16(sp)
10024cc4:	dcc00317 	ldw	r19,12(sp)
10024cc8:	dc800217 	ldw	r18,8(sp)
10024ccc:	dc400117 	ldw	r17,4(sp)
10024cd0:	dc000017 	ldw	r16,0(sp)
10024cd4:	dec00904 	addi	sp,sp,36
10024cd8:	f800283a 	ret
10024cdc:	90800117 	ldw	r2,4(r18)
10024ce0:	81800017 	ldw	r6,0(r16)
10024ce4:	10bfffc4 	addi	r2,r2,-1
10024ce8:	14401526 	beq	r2,r17,10024d40 <__call_exitprocs+0x108>
10024cec:	80000015 	stw	zero,0(r16)
10024cf0:	303feb26 	beq	r6,zero,10024ca0 <__call_exitprocs+0x68>
10024cf4:	9c46983a 	sll	r3,r19,r17
10024cf8:	90806217 	ldw	r2,392(r18)
10024cfc:	95800117 	ldw	r22,4(r18)
10024d00:	1884703a 	and	r2,r3,r2
10024d04:	1000061e 	bne	r2,zero,10024d20 <__call_exitprocs+0xe8>
10024d08:	303ee83a 	callr	r6
10024d0c:	90800117 	ldw	r2,4(r18)
10024d10:	15bfd81e 	bne	r2,r22,10024c74 <__call_exitprocs+0x3c>
10024d14:	b8805217 	ldw	r2,328(r23)
10024d18:	14bfe126 	beq	r2,r18,10024ca0 <__call_exitprocs+0x68>
10024d1c:	003fd506 	br	10024c74 <__call_exitprocs+0x3c>
10024d20:	90806317 	ldw	r2,396(r18)
10024d24:	81002017 	ldw	r4,128(r16)
10024d28:	1886703a 	and	r3,r3,r2
10024d2c:	1800061e 	bne	r3,zero,10024d48 <__call_exitprocs+0x110>
10024d30:	200b883a 	mov	r5,r4
10024d34:	a009883a 	mov	r4,r20
10024d38:	303ee83a 	callr	r6
10024d3c:	003ff306 	br	10024d0c <__call_exitprocs+0xd4>
10024d40:	94400115 	stw	r17,4(r18)
10024d44:	003fea06 	br	10024cf0 <__call_exitprocs+0xb8>
10024d48:	303ee83a 	callr	r6
10024d4c:	003fef06 	br	10024d0c <__call_exitprocs+0xd4>
10024d50:	0001ffff 	0x1ffff
10024d54:	0001ffff 	0x1ffff
10024d58:	0001ffff 	0x1ffff
10024d5c:	0001ffff 	0x1ffff
10024d60:	010d0bff 	0x10d0bff
10024d64:	01010004 	movi	r4,1024
10024d68:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
10024d6c:	00000000 	call	10000000 <__alt_mem_sdram>
10024d70:	01110bff 	0x1110bff
10024d74:	01010004 	movi	r4,1024
10024d78:	7f000105 	stb	fp,4(r15)
10024d7c:	007d0000 	call	1007d000 <_gp+0x4c9e4>
10024d80:	00000000 	call	10000000 <__alt_mem_sdram>
10024d84:	01883a00 	call	101883a0 <_gp+0x157d84>
10024d88:	010d0bff 	0x10d0bff
10024d8c:	01010002 	0x1010002
	...
10024d98:	010d0bff 	0x10d0bff
10024d9c:	01010004 	movi	r4,1024
10024da0:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
10024da4:	00000000 	call	10000000 <__alt_mem_sdram>
10024da8:	0201ffff 	0x201ffff
10024dac:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024db0:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024db4:	0201ffff 	0x201ffff
10024db8:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024dbc:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024dc0:	0201ffff 	0x201ffff
10024dc4:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024dc8:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024dcc:	0201ffff 	0x201ffff
10024dd0:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024dd4:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024dd8:	0201ffff 	0x201ffff
10024ddc:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024de0:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024de4:	0001ffff 	0x1ffff
10024de8:	0001ffff 	0x1ffff
10024dec:	0001ffff 	0x1ffff
10024df0:	0001ffff 	0x1ffff
10024df4:	0201ffff 	0x201ffff
10024df8:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024dfc:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e00:	0001ffff 	0x1ffff
10024e04:	0001ffff 	0x1ffff
10024e08:	0001ffff 	0x1ffff
10024e0c:	0201ffff 	0x201ffff
10024e10:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
10024e14:	010d0bff 	0x10d0bff
10024e18:	01010004 	movi	r4,1024
10024e1c:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
10024e20:	00000000 	call	10000000 <__alt_mem_sdram>
10024e24:	0201ffff 	0x201ffff
10024e28:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e2c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e30:	0201ffff 	0x201ffff
10024e34:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e38:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e3c:	0201ffff 	0x201ffff
10024e40:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e44:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e48:	0201ffff 	0x201ffff
10024e4c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e50:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e54:	0201ffff 	0x201ffff
10024e58:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e5c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e60:	0201ffff 	0x201ffff
10024e64:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e68:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e6c:	0201ffff 	0x201ffff
10024e70:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e74:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e78:	0201ffff 	0x201ffff
10024e7c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e80:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e84:	0201ffff 	0x201ffff
10024e88:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e8c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e90:	0201ffff 	0x201ffff
10024e94:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024e98:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024e9c:	0001ffff 	0x1ffff
10024ea0:	0001ffff 	0x1ffff
10024ea4:	010d0bff 	0x10d0bff
10024ea8:	01010002 	0x1010002
	...
10024eb4:	0201ffff 	0x201ffff
10024eb8:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024ebc:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024ec0:	0201ffff 	0x201ffff
10024ec4:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024ec8:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024ecc:	010d0bff 	0x10d0bff
10024ed0:	01010002 	0x1010002
	...
10024edc:	0001ffff 	0x1ffff
10024ee0:	0201ffff 	0x201ffff
10024ee4:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024ee8:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024eec:	0201ffff 	0x201ffff
10024ef0:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
10024ef4:	10006968 	cmpgeui	zero,r2,421
10024ef8:	10009e30 	cmpltui	zero,r2,632
10024efc:	10006998 	cmpnei	zero,r2,422
