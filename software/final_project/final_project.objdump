
final_project.elf:     file format elf32-littlenios2
final_project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000238

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x0002607c memsz 0x0002607c flags r-x
    LOAD off    0x0002709c vaddr 0x1002609c paddr 0x10028598 align 2**12
         filesz 0x000024fc memsz 0x000024fc flags rw-
    LOAD off    0x00029a94 vaddr 0x1002aa94 paddr 0x1002aa94 align 2**12
         filesz 0x00000000 memsz 0x000001a4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00024498  10000238  10000238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000019cc  100246d0  100246d0  000256d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000024fc  1002609c  10028598  0002709c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000001a4  1002aa94  1002aa94  00029a94  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00029598  2**0
                  CONTENTS
  7 .sdram        00000000  1002ac38  1002ac38  00029598  2**0
                  CONTENTS
  8 .comment      0000002c  00000000  00000000  00029598  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00002a58  00000000  00000000  000295c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000be834  00000000  00000000  0002c020  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0001d04f  00000000  00000000  000ea854  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00035ddd  00000000  00000000  001078a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00008094  00000000  00000000  0013d680  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0001fefa  00000000  00000000  00145714  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00050ab9  00000000  00000000  0016560e  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  001b60c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 0000a578  00000000  00000000  001b6128  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  001d1f1c  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  001d1f1f  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  001d1f2b  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  001d1f2c  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  001d1f2d  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  001d1f31  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  001d1f35  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  001d1f39  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  001d1f44  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  001d1f4f  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000011  00000000  00000000  001d1f5a  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000015  00000000  00000000  001d1f6b  2**0
                  CONTENTS, READONLY
 30 .jdi          00006d84  00000000  00000000  001d1f80  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000238 l    d  .text	00000000 .text
100246d0 l    d  .rodata	00000000 .rodata
1002609c l    d  .rwdata	00000000 .rwdata
1002aa94 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
1002ac38 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Lab7/final_project/software/final_project_bsp/obj/HAL/src/crt0.o
10000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 aesop.c
10028520 l     O .rwdata	00000001 CNST_AES_NB
10028521 l     O .rwdata	00000001 CNST_AES_NR
10028522 l     O .rwdata	00000001 CNST_AES_NK
00000000 l    df *ABS*	00000000 core.c
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 logic.c
100266dc l     O .rwdata	000000e1 GAME_BOARDS
10001dd8 l     F .text	00000030 is_over
10001eb4 l     F .text	0000005c stack_pop
10001f10 l     F .text	00000028 stack_isempty
00000000 l    df *ABS*	00000000 main.c
100267bd l     O .rwdata	000000e1 GAME_BOARDS
1002aa94 l     O .bss	00000002 ctl_reg.3882
1002aa96 l     O .bss	00000002 no_device.3883
00000000 l    df *ABS*	00000000 tile_eng_driver.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 updater.cpp
1002689e l     O .rwdata	000000e1 _ZL11GAME_BOARDS
10028523 l     O .rwdata	00000001 _ZStL19piecewise_construct
10005fbc l     F .text	00000074 _Z41__static_initialization_and_destruction_0ii
10006030 l     F .text	00000030 _GLOBAL__sub_I_workset
10006060 l     F .text	00000030 _GLOBAL__sub_D_workset
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 new_handler.cc
1002aa98 l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
10008320 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
1000855c l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
100085e4 l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
100087cc l     F .text	00000094 _ZL15get_ttype_entryP16lsda_header_infom
10008860 l     F .text	000000a0 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
10008900 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
10008970 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_alloc.cc
10009240 l     F .text	000000ec _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
1002aaf0 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
1000932c l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
100094f8 l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 tree.cc
1000955c l     F .text	00000064 _ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base
00000000 l    df *ABS*	00000000 functexcept.cc
00000000 l    df *ABS*	00000000 snprintf_lite.cc
00000000 l    df *ABS*	00000000 cow-stdexcept.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
1002aa9c l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 stdexcept.cc
00000000 l    df *ABS*	00000000 sso_string.cc
00000000 l    df *ABS*	00000000 cow-string-inst.cc
1000e428 l     F .text	0000009c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag.part.22
1000e428 l     F .text	0000009c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25
1000e4c8 l     F .text	00000018 _ZNSs4_Rep10_M_disposeERKSaIcE.part.12
00000000 l    df *ABS*	00000000 string-inst.cc
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
1001416c l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
1002aaa4 l     O .bss	00000004 fc_static
10014280 l     F .text	000000d8 _Unwind_RaiseException_Phase2
10014358 l     F .text	00000024 uw_install_context.isra.4
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 impure.c
10026980 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
10015d50 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
10015f90 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtoul.c
1001654c l     F .text	00000250 _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 vfprintf.c
10018948 l     F .text	000000c0 __sbprintf
10025b72 l     O .rodata	00000010 blanks.5226
10025b62 l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 dtoa.c
10018c24 l     F .text	00000210 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1001a7ac l     F .text	00000008 __fp_lock
1001a7c0 l     F .text	00000168 __sinit.part.0
1001a928 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
10025e14 l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001ce1c l     F .text	000000f4 __sprint_r.part.0
1001e26c l     F .text	000000c0 __sbprintf
10025f48 l     O .rodata	00000010 blanks.5203
10025f38 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
10021c48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
10021d54 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
10021db4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
10021ec0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
10021fa0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10022108 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
100221f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
100223c8 l     F .text	0000003c alt_get_errno
10022404 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
10022610 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10028588 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
10022880 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
100229b4 l     F .text	00000034 alt_dev_reg
100274c0 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
10022ca4 l     F .text	00000204 altera_avalon_jtag_uart_irq
10022ea8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
100234e4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
10023874 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
10023f14 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
1002aad4 g     O .bss	00000004 alt_instruction_exception_handler
100111ac  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv
1000945c g     F .text	00000028 __cxa_free_exception
10000f28 g     F .text	00000290 screen_test
1000ff60  w    F .text	0000003c _ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
1001002c  w    F .text	00000074 _ZNSsC2ERKSsjj
10015be8 g     F .text	00000018 putchar
1000cae4 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
1001c48c g     F .text	00000074 _mprec_log10
100082cc g     F .text	00000014 _ZSt10unexpectedv
10007908  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10010920  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
10004a04 g     F .text	000000d4 writeSprite
10009ebc g     F .text	00000034 _ZSt18__throw_bad_typeidv
1001c56c g     F .text	00000074 __any_on
1001b5c8 g     F .text	00000058 _isatty_r
10025e20 g     O .rodata	00000028 __mprec_tinytens
10012854  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj
1000d084 g     F .text	00000030 _ZNSt14overflow_errorC1ERKSs
1000ad40 g     F .text	00000010 _ZNSt12__cow_stringC1Ev
10022304 g     F .text	0000007c alt_main
10010928  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
10015c00 g     F .text	000000cc _puts_r
100120ac  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj
100070c8  w    F .text	00000030 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
1002ab38 g     O .bss	00000100 alt_irq
1000c70c g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
1000bd88 g     F .text	00000008 _ZGTtNKSt13runtime_error4whatEv
10011f38  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj
10028558  w    O .rwdata	00000004 _ZNSs4nposE
1000c1a0 g     F .text	000000e0 _ZGTtNSt15underflow_errorC2EPKc
1001b640 g     F .text	00000064 _lseek_r
1000ee38  w    F .text	000000e4 _ZNSs6assignEPKcj
1000da60  w    F .text	00000090 _ZNKSs13find_first_ofEPKcjj
1001317c  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj
100143fc g     F .text	00000020 .hidden _Unwind_GetIPInfo
10010588  w    F .text	00000010 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj
10012160  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_
10028598 g       *ABS*	00000000 __flash_rwdata_start
10013e9c  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj
1001261c  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE
1001aaf0 g     F .text	000000a4 __sflags
10020764 g     F .text	00000080 .hidden __eqdf2
1000b378 g     F .text	000000e0 _ZGTtNSt12domain_errorC1EPKc
1000ab98 g     F .text	00000030 _ZNSt12length_errorC2EPKc
10010938  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj
10008480 g     F .text	00000084 __cxa_rethrow
10014394 g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
1000d594  w    F .text	00000018 _ZNKSs6rbeginEv
10008300 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
10007b4c  w    F .text	00000054 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_
1000e0c0  w    F .text	000000b0 _ZNKSs7compareEjjPKc
1000feb8  w    F .text	000000a8 _ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag
1000d4b0  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_
100143ec g     F .text	00000010 .hidden _Unwind_GetIP
1002ac38 g       *ABS*	00000000 __alt_heap_start
1001179c  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE
1000b13c g     F .text	00000004 _Z23_txnal_cow_string_c_strPKv
1000cf4c g     F .text	00000030 _ZNSt12length_errorC1ERKSs
10016238 g     F .text	00000060 _kill_r
1000d3d4  w    F .text	00000030 _ZNKSs15_M_check_lengthEjjPKc
1000e7cc  w    F .text	00000038 _ZNSs5beginEv
10008514 g     F .text	00000010 _ZNSt9bad_allocD2Ev
10015ba8 g     F .text	00000038 printf
1000d5ec  w    F .text	00000010 _ZNKSs5crendEv
10013b3c  w    F .text	000000f8 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
10007a34  w    F .text	00000038 _ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000f1a0  w    F .text	0000000c _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE
1001e918 g     F .text	0000006c _wcrtomb_r
1000b964 g     F .text	0000002c _ZGTtNSt12length_errorD0Ev
1000f004  w    F .text	0000019c _ZNSs6insertEjPKcj
10015ff0 g     F .text	00000084 _signal_r
1000bf64 g     F .text	00000008 _ZGTtNSt11range_errorD2Ev
10025788  w    O .rodata	00000013 _ZTSSt14overflow_error
100065d4  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC2Ev
1000d678  w    F .text	00000014 _ZNKSs4backEv
10016378 g     F .text	0000005c __sseek
1001aaa8 g     F .text	00000010 __sinit
1001e32c g     F .text	00000148 __swbuf_r
10007094  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2EPKSt18_Rb_tree_node_base
100114c8  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
100094cc g     F .text	0000002c __cxa_free_dependent_exception
1000c400 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
1001e838 g     F .text	00000070 _setlocale_r
10025420  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
10013678  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_
1001a930 g     F .text	00000068 __sfmoreglue
1000b868 g     F .text	000000f4 _ZGTtNSt12length_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100223a4 g     F .text	00000024 __malloc_unlock
1000a8dc g     F .text	00000070 _ZNSt11logic_errorC1ERKS_
1000c1a0 g     F .text	000000e0 _ZGTtNSt15underflow_errorC1EPKc
1000c70c g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
10007640  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base
1000e170  w    F .text	00000094 _ZNKSs7compareEjjPKcj
100105c8  w    F .text	00000060 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc
1000aca4 g     F .text	00000030 _ZNSt11range_errorC2EPKc
100081a4 g     F .text	00000020 _ZSt18uncaught_exceptionv
10012244  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc
100257bc  w    O .rodata	0000000c _ZTISt15underflow_error
1001095c  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
10012f70  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj
1000abc8 g     F .text	00000030 _ZNSt12out_of_rangeC2EPKc
1000e3d8  w    F .text	00000040 _ZNSsC1EjcRKSaIcE
1000e504  w    F .text	00000044 _ZNSsD2Ev
10005c64 g     F .text	00000080 UsbGetRetryCnt
100070f8  w    F .text	000001a0 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_
10007f78  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED2Ev
1000c74c g     F .text	00000020 __cxa_deleted_virtual
1001121c  w    F .text	00000100 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
10012fc0  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
1000fa20  w    F .text	000000a8 _ZNSspLEc
100128a0  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj
1000d118 g     F .text	00000014 _ZNSt12__sso_stringC2EPKcj
1000b33c g     F .text	00000008 _ZGTtNSt11logic_errorD1Ev
10013530  w    F .text	000000b4 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc
100158f8 g     F .text	0000012c memmove
100011b8 g     F .text	00000088 IO_init
100065d4  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000d208 g     F .text	00000018 _ZNSt12__sso_stringD2Ev
1000d0e4 g     F .text	00000014 _ZNSt12__sso_stringC1Ev
1000c6dc g     F .text	00000004 _ZNSt9exceptionD2Ev
1001aa94 g     F .text	00000014 _cleanup
1001189c  w    F .text	0000013c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
1001053c  w    F .text	0000004c _ZNSs7replaceEjjPKc
100047e0 g     F .text	000000c4 writePalette
1001b6a4 g     F .text	000000a4 _Balloc
1000d9c4  w    F .text	0000000c _ZNKSs5rfindERKSsj
10011f60  w    F .text	00000038 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE
1000d4d4  w    F .text	00000024 _ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_
10011184  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
1000f20c  w    F .text	00000040 _ZNSs6insertEjPKc
1002572c  w    O .rodata	00000011 _ZTSSt12out_of_range
10007540  w    F .text	0000003c _ZNKSt4lessI9TileGroupEclERKS0_S3_
100255c0  w    O .rodata	0000000c _ZTISt8bad_cast
100075f8  w    F .text	00000048 _ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv
1000efc8  w    F .text	00000038 _ZNSsaSEPKc
10013e14  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_
10006f80  w    F .text	00000024 _ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE
100077c8  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000b180 g     F .text	000000d4 _ZGTtNSt11logic_errorC2EPKc
1000ad50 g     F .text	00000004 _ZNSt12__cow_stringC2ERKSs
100207e4 g     F .text	000000f0 .hidden __gtdf2
1002552c  w    O .rodata	00000014 _ZTVSt13bad_exception
100241e4 g     F .text	00000024 altera_nios2_gen2_irq_init
10009624 g     F .text	00000004 _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
10011050  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
10005f88 g     F .text	00000034 clearQueue
1000cdcc g     F .text	00000034 _ZNSt14overflow_errorD0Ev
10007e88  w    F .text	00000060 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv
1001112c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10000000 g     F .entry	0000001c __reset
1001b620 g     F .text	00000008 __localeconv_l
1000b788 g     F .text	000000e0 _ZGTtNSt12length_errorC2EPKc
1000b660 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10028550  w    O .rwdata	00000001 _ZNSs4_Rep11_S_terminalE
1000cdbc g     F .text	00000010 _ZNSt14overflow_errorD2Ev
10014438 g     F .text	00000008 .hidden _Unwind_GetRegionStart
1000d68c  w    F .text	00000088 _ZNKSs4copyEPcjj
1000ad04 g     F .text	00000030 _ZNSt15underflow_errorC1EPKc
10000020 g       *ABS*	00000000 __flash_exceptions_start
100123e4  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE
1000cca8 g     F .text	00000010 _ZNSt12out_of_rangeD2Ev
10010ac0  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc
100246d0 g     O .rodata	00000100 aes_sbox
10014c3c g     F .text	00000060 _fstat_r
10006e44  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC2ERS6_
1000e4e0  w    F .text	00000024 _ZNSs4_Rep10_M_disposeERKSaIcE
1002aaa8 g     O .bss	00000004 errno
1000ed6c  w    F .text	00000018 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc
10000e80 g     F .text	000000a8 transpose
100162f0 g     F .text	00000008 __seofread
10006e78  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_
1000659c  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv
1000e04c  w    F .text	00000074 _ZNKSs7compareEPKc
1000fafc  w    F .text	0000005c _ZNSsC1ERKSs
1000b75c g     F .text	0000002c _ZGTtNSt16invalid_argumentD0Ev
10007bf8  w    F .text	0000003c _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j
1001460c g     F .text	00000088 .hidden _Unwind_Backtrace
10006e1c  w    F .text	00000028 _ZNKSt9_IdentityI9TileGroupEclERKS0_
10011578  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
1002aac0 g     O .bss	00000004 alt_argv
1000edbc  w    F .text	0000007c _ZNSs15_M_replace_safeEjjPKcj
1002609c g     O .rwdata	00000600 gf_mul
10013d0c  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jRKS3_
10005d64 g     F .text	00000058 addToSet
10030520 g       *ABS*	00000000 _gp
10022850 g     F .text	00000030 usleep
10013d54  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj
1000c7e0 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
1000cdbc g     F .text	00000010 _ZNSt14overflow_errorD1Ev
10006ad4  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base
10007688  w    F .text	00000050 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_
10012fb0  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj
1000c78c g     F .text	00000038 _ZNSt8bad_castD0Ev
10001f38 g     F .text	0000094c blinkys_move
10021ea0 g     F .text	00000020 getpid
1000e218  w    F .text	0000000c _ZNKSs4_Rep12_M_is_leakedEv
10013098  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj
100090c0 g     F .text	00000180 __cxa_call_unexpected
10008040 g     F .text	00000008 __cxa_get_exception_ptr
10013680  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_
10006c68  w    F .text	000001b4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_
10010710  w    F .text	0000003c _ZNSsC2ESt16initializer_listIcERKSaIcE
1000d12c g     F .text	0000007c _ZNSt12__sso_stringC2ERKS_
10027340 g     O .rwdata	00000180 alt_fd_list
1000cc64 g     F .text	00000010 _ZNSt12length_errorD2Ev
10013e28  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
1000ab68 g     F .text	00000030 _ZNSt16invalid_argumentC1EPKc
1000690c  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv
10013b1c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
100060b8  w    F .text	0000003c _ZNSt15_Rb_tree_headerC2Ev
10025818  w    O .rodata	00000014 _ZTVSt12out_of_range
10015be0 g     F .text	00000008 _putchar_r
10014520 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
1000d220 g     F .text	00000078 _ZNSt12__sso_stringC1EOS_
100143bc g     F .text	00000018 .hidden _Unwind_GetCFA
100082e0 g     F .text	00000014 _ZSt13set_terminatePFvvE
10023a14 g     F .text	00000090 alt_find_dev
100157f8 g     F .text	00000100 memcpy
1000d554  w    F .text	00000010 _ZNSsC2Ev
100119d8  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc
10009484 g     F .text	00000048 __cxa_allocate_dependent_exception
10005f2c g     F .text	0000005c hasRemain
1001074c  w    F .text	0000003c _ZNSsC1IPKcEET_S2_RKSaIcE
1001a7b4 g     F .text	0000000c _cleanup_r
1000c890 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
10021a90 g     F .text	000000c8 .hidden __floatsidf
10010e4c  w    F .text	00000084 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
10023fc4 g     F .text	0000007c alt_io_redirect
100208d4 g     F .text	000000f0 .hidden __ltdf2
10025840  w    O .rodata	00000014 _ZTVSt11range_error
1000ccec g     F .text	00000064 _ZNSt13runtime_errorD2Ev
100076d8  w    F .text	00000024 _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
1000a340 g     F .text	000000ac _ZSt21__throw_runtime_errorPKc
100246d0 g       *ABS*	00000000 __DTOR_END__
1000d9d0  w    F .text	00000040 _ZNKSs5rfindEPKcj
1000ce44 g     F .text	000000a8 _ZNSt11logic_errorC2ERKSs
1000c8a8 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
100257f0  w    O .rodata	00000014 _ZTVSt16invalid_argument
1000db3c  w    F .text	00000010 _ZNKSs13find_first_ofEcj
10010798  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_
10015ccc g     F .text	00000010 puts
10024298 g     F .text	00000098 alt_exception_cause_generated_bad_addr
1000fbfc  w    F .text	00000100 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
1000bd54 g     F .text	00000008 _ZGTtNSt13runtime_errorD1Ev
1000d054 g     F .text	00000030 _ZNSt11range_errorC2ERKSs
1000d7a8  w    F .text	000000d8 _ZNKSs4findEPKcjj
1000b660 g     F .text	000000f4 _ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100109b0  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
1000d298 g     F .text	000000d4 _ZNSt12__sso_stringaSEOS_
1001c3e4 g     F .text	000000a8 __ratio
1000fbf8  w    F .text	00000004 _ZNSsaSERKSs
1000b344 g     F .text	0000002c _ZGTtNSt11logic_errorD0Ev
10025740  w    O .rodata	0000000c _ZTISt12out_of_range
1001e254 g     F .text	00000018 __vfiprintf_internal
10012e38  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j
1000794c  w    F .text	00000058 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi
10012ed4  w    F .text	00000090 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj
100109c8  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj
100101c8  w    F .text	0000003c _ZNSsC2EPKcjRKSaIcE
1000bd54 g     F .text	00000008 _ZGTtNSt13runtime_errorD2Ev
100230a4 g     F .text	0000021c altera_avalon_jtag_uart_read
10014e70 g     F .text	00000010 malloc
10015b78 g     F .text	00000030 _printf_r
10006384  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED2Ev
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
100140ac g     F .text	00000064 .hidden __udivsi3
1000ef44  w    F .text	0000004c _ZNSs6assignERKSsjj
10021efc g     F .text	000000a4 isatty
100126fc  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj
10016074 g     F .text	000000bc _raise_r
1000d404  w    F .text	00000018 _ZNKSs8_M_limitEjj
10025e70 g     O .rodata	000000c8 __mprec_tens
1000a498 g     F .text	000000ac _ZSt22__throw_overflow_errorPKc
10006488  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv
1000cf7c g     F .text	00000030 _ZNSt12out_of_rangeC2ERKSs
10011200  w    F .text	0000001c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv
1000d47c  w    F .text	00000034 _ZNSs9_M_assignEPcjc
10006b6c  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
100066e8  w    F .text	00000024 _ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE
10011bf4  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc
10024208 g     F .text	00000090 alt_icache_flush
1000d5fc  w    F .text	0000000c _ZNKSs4sizeEv
10012c04  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv
1002aab4 g     O .bss	00000004 __malloc_top_pad
100052f0 g     F .text	00000268 UsbGetConfigDesc2
10007c34  w    F .text	0000003c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv
10016298 g     F .text	00000004 _getpid_r
1000aa8c g     F .text	000000ac _ZNSt11logic_errorC2EPKc
1000b254 g     F .text	000000e8 _ZGTtNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100167b8 g     F .text	00000018 strtoul
10007aa8  w    F .text	00000044 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j
10007004  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base
1000f7c8  w    F .text	00000038 _ZNSs6appendEPKc
10012bfc  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
1000be70 g     F .text	000000f4 _ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001b628 g     F .text	0000000c _localeconv_r
100093d4 g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
100081c4 g     F .text	0000001c _ZSt19uncaught_exceptionsv
1001baa4 g     F .text	00000034 __i2b
1001afac g     F .text	000004c4 __sfvwrite_r
1001334c  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_
1000ca28 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
10016130 g     F .text	000000b8 __sigtramp_r
1000d38c  w    F .text	00000008 _ZNKSs9_M_ibeginEv
1000cfac g     F .text	000000a8 _ZNSt13runtime_errorC2ERKSs
1000db4c  w    F .text	0000008c _ZNKSs12find_last_ofEPKcjj
100128cc  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
1000bf6c g     F .text	0000002c _ZGTtNSt11range_errorD0Ev
10015f38 g     F .text	00000058 _sbrk_r
100100ec  w    F .text	00000074 _ZNSsC2ERKSsjjRKSaIcE
1000ffc8  w    F .text	00000064 _ZNSsC1ERKSsjRKSaIcE
1000c6e4 g     F .text	0000000c _ZGTtNKSt9exception4whatEv
1000f974  w    F .text	00000008 _ZNSs6resizeEj
1002568c  w    O .rodata	00000020 _ZTVSt9type_info
10007a6c  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_
100256e8  w    O .rodata	00000015 _ZTSSt16invalid_argument
10009e54 g     F .text	00000034 _ZSt17__throw_bad_allocv
100107a8 g     F .text	000000a4 _ZNSt13random_device7_M_initERKSs
1000b378 g     F .text	000000e0 _ZGTtNSt12domain_errorC2EPKc
1001c78c g     F .text	00000064 _read_r
1000c6e4 g     F .text	0000000c _ZNKSt9exception4whatEv
1000f1ac  w    F .text	00000060 _ZNSs6insertEjRKSsjj
10011ae4  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc
1000b180 g     F .text	000000d4 _ZGTtNSt11logic_errorC1EPKc
1000786c  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC2IS2_S2_Lb1EEEOT_OT0_
10028580 g     O .rwdata	00000004 alt_max_fd
1001e540 g     F .text	000000f8 _fclose_r
10025388  w    O .rodata	0000000c _ZTISt9bad_alloc
1000d380  w    F .text	0000000c _ZNKSs6_M_repEv
1001a784 g     F .text	00000028 fflush
1000662c  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002aab0 g     O .bss	00000004 __malloc_max_sbrked_mem
1000ea7c  w    F .text	00000050 _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE
10012060  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
1000b754 g     F .text	00000008 _ZGTtNSt16invalid_argumentD1Ev
1000fb58  w    F .text	000000a0 _ZNSs6assignERKSs
10007c70  w    F .text	0000016c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_
1000ab98 g     F .text	00000030 _ZNSt12length_errorC1EPKc
10002c74 g     F .text	00000088 gbPalette
1001200c  w    F .text	00000054 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj
1000b33c g     F .text	00000008 _ZGTtNSt11logic_errorD2Ev
10009dec g     F .text	00000034 _ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_
1000d768  w    F .text	00000028 _ZNSs6assignEOSs
1001f51c g     F .text	000009a0 .hidden __adddf3
10025454  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
10006300  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev
10006290  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC2Ev
1000e504  w    F .text	00000044 _ZNSsD1Ev
1001c198 g     F .text	00000104 __b2d
10010b20  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj
1000b144 g     F .text	0000002c _Z20_txnal_cow_string_D1Pv
10006ab0  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev
1000ad40 g     F .text	00000010 _ZNSt12__cow_stringC2Ev
1000c77c g     F .text	00000010 _ZNSt8bad_castD1Ev
1001efdc g     F .text	00000540 .hidden __umoddi3
1000ed84  w    F .text	00000038 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc
10022230 g     F .text	000000d4 lseek
10012380  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_
10006b6c  w    F .text	0000005c _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_
1000e850  w    F .text	00000048 _ZNSs3endEv
1000d0e4 g     F .text	00000014 _ZNSt12__sso_stringC2Ev
1000c9bc g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
100257c8  w    O .rodata	00000014 _ZTVSt11logic_error
10008504 g     F .text	00000004 _ZdlPv
1000cc74 g     F .text	00000034 _ZNSt12length_errorD0Ev
10028560 g     O .rwdata	00000004 _global_impure_ptr
1001c7f0 g     F .text	0000062c _realloc_r
1000a750 g     F .text	00000150 _ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv
10006350  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED2Ev
1002ac38 g       *ABS*	00000000 __bss_end
10008034 g     F .text	0000000c _ZSt15get_new_handlerv
10023e30 g     F .text	000000e4 alt_iic_isr_register
100240dc g     F .text	00000108 alt_tick
1001437c g     F .text	00000018 .hidden _Unwind_SjLj_Register
10012c14  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
10013f44  w    F .text	00000010 _ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_
1000c280 g     F .text	000000f4 _ZGTtNSt15underflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001ea44 g     F .text	00000598 .hidden __udivdi3
10011c0c  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc
10010930  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj
10025854  w    O .rodata	00000014 _ZTVSt14overflow_error
1000ad34 g     F .text	0000000c _ZNSt12__sso_stringC2ERKSs
1001e798 g     F .text	00000024 _fputwc_r
1000a0f4 g     F .text	000000ac _ZSt20__throw_length_errorPKc
10009620 g     F .text	00000004 _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
10025e48 g     O .rodata	00000028 __mprec_bigtens
1001b880 g     F .text	00000110 __s2b
1000acd4 g     F .text	00000030 _ZNSt14overflow_errorC2EPKc
10014694 g     F .text	00000018 abort
10012c0c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv
10021b58 g     F .text	0000009c .hidden __floatunsidf
1000d3a4  w    F .text	00000030 _ZNKSs8_M_checkEjPKc
1000f298  w    F .text	00000024 _ZNSs4_Rep10_M_refcopyEv
1001bf28 g     F .text	00000058 __mcmp
1000683c  w    F .text	00000024 _ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE
10004d40 g     F .text	00000100 UsbSetAddress
100080f4 g     F .text	000000b0 __cxa_end_catch
10006ab0  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC2Ev
10012448  w    F .text	0000006c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_
1001aac8 g     F .text	00000014 __fp_lock_all
1000c37c g     F .text	0000002c _ZGTtNSt15underflow_errorD0Ev
10023de4 g     F .text	0000004c alt_ic_irq_enabled
1001147c  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
100066c0  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv
1000c6e0 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
10010710  w    F .text	0000003c _ZNSsC1ESt16initializer_listIcERKSaIcE
10000dc0 g     F .text	000000c0 add_round_key
10024040 g     F .text	0000009c alt_alarm_stop
10010a94  w    F .text	0000002c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc
1000e224  w    F .text	0000000c _ZNKSs4_Rep12_M_is_sharedEv
1000d36c  w    F .text	00000008 _ZNKSs7_M_dataEv
1002aac8 g     O .bss	00000004 alt_irq_active
10013d54  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jj
10011448  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
100147cc g     F .text	00000458 _fseeko_r
100082a8 g     F .text	00000014 _ZSt9terminatev
1000a24c g     F .text	000000f4 _ZSt24__throw_out_of_range_fmtPKcz
1001231c  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_
1000ce00 g     F .text	00000010 _ZNSt15underflow_errorD1Ev
1000a048 g     F .text	000000ac _ZSt24__throw_invalid_argumentPKc
10006384  w    F .text	00000080 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev
100000fc g     F .exceptions	000000c8 alt_irq_handler
1000ef90  w    F .text	00000038 _ZNSs6assignEPKc
10027318 g     O .rwdata	00000028 alt_dev_null
1000fac8  w    F .text	00000034 _ZNSs4_Rep7_M_grabERKSaIcES2_
100111a4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv
10007454  w    F .text	0000007c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E
1000d670  w    F .text	00000008 _ZNKSs5frontEv
1000bd5c g     F .text	0000002c _ZGTtNSt13runtime_errorD0Ev
1000cbb4 g     F .text	00000028 _ZNSt11logic_errorD0Ev
10010204  w    F .text	000002ac _ZNSs7replaceEjjPKcj
1000c718 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
10011710  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj
10011fc0  w    F .text	0000004c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
1000ad04 g     F .text	00000030 _ZNSt15underflow_errorC2EPKc
100074f8  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E
10010f88  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_RKS3_
1000a8a0 g     F .text	0000003c _Z27_txnal_cow_string_D1_commitPv
10012848  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
1000ad34 g     F .text	0000000c _ZNSt12__sso_stringC1ERKSs
10025620  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
10007e00  w    F .text	0000003c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j
10006350  w    F .text	00000034 _ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev
1002382c g     F .text	00000048 alt_dcache_flush_all
1001b990 g     F .text	00000064 __hi0bits
10010f88  w    F .text	00000088 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_
10010b40  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj
1002852c  w    O .rwdata	00000008 _ZTISt9exception
100012b4 g     F .text	00000068 IO_read
10021a10 g     F .text	00000080 .hidden __fixdfsi
1000d5ac  w    F .text	00000010 _ZNKSs4rendEv
100104b0  w    F .text	00000024 _ZNSs7replaceEjjRKSs
1000c16c g     F .text	00000008 _ZGTtNSt14overflow_errorD1Ev
100109d0  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
10010ef8  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EjcRKS3_
10007aec  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E
100134bc  w    F .text	00000074 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
10007f78  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev
1000f368  w    F .text	00000094 _ZNSs7reserveEj
1000b370 g     F .text	00000008 _ZGTtNKSt11logic_error4whatEv
1000662c  w    F .text	00000024 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev
10007ee8  w    F .text	00000068 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_
10028598 g       *ABS*	00000000 __ram_rwdata_end
10010a84  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
1000cae0 g     F .text	00000004 _ZNSt9type_infoD1Ev
1000d12c g     F .text	0000007c _ZNSt12__sso_stringC1ERKS_
10028578 g     O .rwdata	00000008 alt_dev_list
1000c718 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
100256c8  w    O .rodata	00000011 _ZTSSt12domain_error
100228bc g     F .text	000000f8 write
1000a94c g     F .text	00000068 _ZNSt11logic_erroraSERKS_
1001c5e0 g     F .text	000000cc _putc_r
1000b95c g     F .text	00000008 _ZGTtNSt12length_errorD1Ev
10006c44  w    F .text	00000024 _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
10007ba0  w    F .text	00000030 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv
10006528  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv
100076fc  w    F .text	00000024 _ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
1000e804  w    F .text	0000004c _ZNSs4rendEv
10010ed0  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
1000caf4 g     F .text	00000008 _ZNSt9type_infoD0Ev
10013e78  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ESt16initializer_listIcERKS3_
1000ccec g     F .text	00000064 _ZNSt13runtime_errorD1Ev
1000b788 g     F .text	000000e0 _ZGTtNSt12length_errorC1EPKc
10012cf8  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj
1002609c g       *ABS*	00000000 __ram_rodata_end
1000c76c g     F .text	00000004 _ZdlPvj
100111f4  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
10021df0 g     F .text	000000b0 fstat
10010c24  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj
1000e204  w    F .text	00000008 _ZNSs12_Alloc_hiderC2EPcRKSaIcE
10021fdc g     F .text	0000012c kill
10010910  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj
1000bb98 g     F .text	000000d4 _ZGTtNSt13runtime_errorC1EPKc
1000ceec g     F .text	00000030 _ZNSt12domain_errorC2ERKSs
100208d4 g     F .text	000000f0 .hidden __ledf2
1000ceec g     F .text	00000030 _ZNSt12domain_errorC1ERKSs
1000cbdc g     F .text	00000010 _ZNSt12domain_errorD1Ev
10010160  w    F .text	0000003c _ZNSsC2IPcEET_S1_RKSaIcE
1000625c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED2Ev
100064bc  w    F .text	00000034 _ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv
10005ce4 g     F .text	00000080 UsbPrintMem
1001bcc4 g     F .text	00000128 __pow5mult
1000fcfc  w    F .text	000000f0 _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_
10006090  w    F .text	00000028 _ZnwjPv
1000a670 g     F .text	000000e0 _ZN9__gnu_cxx15__concat_size_tEPcjj
1001cf28 g     F .text	0000132c ___vfiprintf_internal_r
1000ce10 g     F .text	00000034 _ZNSt15underflow_errorD0Ev
10014110 g     F .text	0000005c .hidden __umodsi3
1000caec g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
1000cd78 g     F .text	00000010 _ZNSt11range_errorD2Ev
1001116c  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10007bd0  w    F .text	00000028 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_
1000bd90 g     F .text	000000e0 _ZGTtNSt11range_errorC1EPKc
10008388 g     F .text	00000064 __cxa_init_primary_exception
1000d88c  w    F .text	00000040 _ZNKSs4findEPKcj
100082f4 g     F .text	0000000c _ZSt13get_terminatev
10011a64  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj
1000dde4  w    F .text	0000000c _ZNKSs16find_last_not_ofERKSsj
1002ac38 g       *ABS*	00000000 end
1000d0b4 g     F .text	00000030 _ZNSt15underflow_errorC2ERKSs
100073c8  w    F .text	0000008c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E
10010b94  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_
10014c24 g     F .text	00000018 fseeko
10010160  w    F .text	0000003c _ZNSsC1IPcEET_S1_RKSaIcE
1000d394  w    F .text	00000010 _ZNKSs7_M_iendEv
10002ad0 g     F .text	0000006c blinkyPalette
100145f4 g     F .text	00000018 .hidden _Unwind_DeleteException
10002fbc g     F .text	0000049c drawBoard
100147b4 g     F .text	00000018 fseek
10022be4 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
10011028  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
1000ad54 g     F .text	0000001c _ZNSt12__cow_stringC1EPKcj
1000d0f8 g     F .text	00000020 _ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000dc24  w    F .text	00000010 _ZNKSs12find_last_ofEcj
1000d57c  w    F .text	00000008 _ZNKSs5beginEv
1000c8f0 g     F .text	000000cc _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
10007298  w    F .text	00000028 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv
100246c2 g       *ABS*	00000000 __CTOR_LIST__
10006860  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC2IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000f2bc  w    F .text	000000ac _ZNSs4_Rep8_M_cloneERKSaIcEj
1002ab00  w    O .bss	00000010 _ZNSs4_Rep20_S_empty_rep_storageE
1002355c g     F .text	0000007c alt_avalon_timer_sc_init
1000cb48 g     F .text	00000008 _ZNKSt13runtime_error4whatEv
10021bf4 g     F .text	00000054 .hidden __clzsi2
10025760  w    O .rodata	0000000c _ZTISt13runtime_error
1000c818 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
100232c0 g     F .text	00000224 altera_avalon_jtag_uart_write
10010f10  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_
1001aab8 g     F .text	00000004 __sfp_lock_acquire
100254b4  w    O .rodata	00000012 _ZTSSt13bad_exception
10015684 g     F .text	000000e8 memchr
100167d0 g     F .text	00002160 ___vfprintf_internal_r
10025804  w    O .rodata	00000014 _ZTVSt12length_error
10006fa4  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC2IS2_bLb1EEEOT_OT0_
10005658 g     F .text	00000100 UsbClassRequest
1001acb0 g     F .text	000002fc _free_r
1000c770 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
1000df74  w    F .text	000000d8 _ZNKSs7compareEjjRKSsjj
1000786c  w    F .text	00000064 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_
10025c83 g     O .rodata	00000180 _ctype_b
1001067c  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_
1001e8a8 g     F .text	0000000c __locale_mb_cur_max
1000e3a4  w    F .text	00000034 _ZNSsC1ERKSaIcE
1000096c g     F .text	000000ac sub_word32
10012cec  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j
10024408 g     F .text	00000118 __call_exitprocs
1000625c  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev
1000e23c  w    F .text	00000008 _ZNSs4_Rep15_M_set_sharableEv
1000e968  w    F .text	00000048 _ZNSs4backEv
10000658 g     F .text	000001f0 key_expansion
100131cc  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj
10028554  w    O .rwdata	00000004 _ZNSs4_Rep11_S_max_sizeE
1000cc20 g     F .text	00000010 _ZNSt16invalid_argumentD2Ev
100064f0  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_
10006140  w    F .text	0000003c _ZN9TileGroupC2E10__tile_col
1000cc64 g     F .text	00000010 _ZNSt12length_errorD1Ev
1000bf98 g     F .text	000000e0 _ZGTtNSt14overflow_errorC1EPKc
1000d92c  w    F .text	00000098 _ZNKSs5rfindEPKcjj
10028568 g     O .rwdata	00000004 __malloc_sbrk_base
10000238 g     F .text	0000004c _start
100256bc  w    O .rodata	0000000c _ZTISt11logic_error
1000d798  w    F .text	00000008 _ZNKSs4dataEv
1000a8dc g     F .text	00000070 _ZNSt11logic_errorC2ERKS_
1002aacc g     O .bss	00000004 _alt_tick_rate
1001397c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
1000617c  w    F .text	00000058 _ZN9TileGroupC2Ess
10009628 g     F .text	00000004 _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base
10000848 g     F .text	000000d8 shift_rows
10013678  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
1002567c  w    O .rodata	0000000d _ZTSSt9type_info
1000d5c4  w    F .text	00000010 _ZNKSs4cendEv
1000d620  w    F .text	0000000c _ZNKSs8capacityEv
1000d374  w    F .text	0000000c _ZNSs7_M_dataEPc
1000d0b4 g     F .text	00000030 _ZNSt15underflow_errorC1ERKSs
10008508 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
10015cf0 g     F .text	00000060 rand
1000c72c g     F .text	00000020 __cxa_pure_virtual
1001bdec g     F .text	0000013c __lshift
10025394  w    O .rodata	00000014 _ZTVSt9bad_alloc
1002aad0 g     O .bss	00000004 _alt_nticks
100161f8 g     F .text	00000014 signal
1000d5d4  w    F .text	00000018 _ZNKSs7crbeginEv
1002264c g     F .text	000000fc read
10022a20 g     F .text	00000060 alt_sys_init
1000fafc  w    F .text	0000005c _ZNSsC2ERKSs
10010a74  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc
1000d7a0  w    F .text	00000008 _ZNKSs13get_allocatorEv
1000c374 g     F .text	00000008 _ZGTtNSt15underflow_errorD2Ev
10025600  w    O .rodata	0000000c _ZTISt10bad_typeid
10009688 g     F .text	0000005c _ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_
10015b14 g     F .text	00000064 _open_r
1000e8e8  w    F .text	00000048 _ZNSsixEj
1000e3d8  w    F .text	00000040 _ZNSsC2EjcRKSaIcE
10024378 g     F .text	00000090 __register_exitproc
10025378  w    O .rodata	0000000d _ZTSSt9bad_alloc
1000498c g     F .text	00000078 parseSprite
10011420  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv
10002884 g     F .text	00000024 pinkys_move
1000c6f0 g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
10006608  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev
1000bf64 g     F .text	00000008 _ZGTtNSt11range_errorD1Ev
1000c4e4 g     F .text	0000015c _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
1001143c  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj
1001313c  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj
10010bdc  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_
10011144  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
1000eacc  w    F .text	0000005c _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_
1000bc6c g     F .text	000000e8 _ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10006bec  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
1000be70 g     F .text	000000f4 _ZGTtNSt11range_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001bad8 g     F .text	000001ec __multiply
10011010  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
100117e0  w    F .text	0000005c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_
10022f48 g     F .text	00000068 altera_avalon_jtag_uart_close
10006404  w    F .text	00000084 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_
10013e78  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_
10013db4  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_jjRKS3_
1002609c g       *ABS*	00000000 __ram_rwdata_start
1000cbdc g     F .text	00000010 _ZNSt12domain_errorD2Ev
10014458 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
100246d0 g       *ABS*	00000000 __ram_rodata_start
1000de84  w    F .text	00000054 _ZNKSs7compareERKSs
1002ab10 g     O .bss	00000028 __malloc_current_mallinfo
10014564 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
100133e4  w    F .text	000000d8 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj
1000e7b8  w    F .text	00000014 _ZNSs7_M_leakEv
1001c29c g     F .text	00000148 __d2b
10025554  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
1000cae0 g     F .text	00000004 _ZNSt9type_infoD2Ev
10013058  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj
10006950  w    F .text	00000038 _ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv
1000c71c g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
1000e598  w    F .text	000001b8 _ZNSs9_M_mutateEjjj
1000c640 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
1000cc20 g     F .text	00000010 _ZNSt16invalid_argumentD1Ev
1000d584  w    F .text	00000010 _ZNKSs3endEv
10004e40 g     F .text	00000148 UsbGetDeviceDesc1
1001084c g     F .text	000000bc _ZNSt13random_device14_M_init_pretr1ERKSs
10022a80 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1001679c g     F .text	00000004 _strtoul_r
100247d0 g     O .rodata	00000100 aes_invsbox
10023bac g     F .text	000000a0 alt_get_fd
10023704 g     F .text	00000128 alt_busy_sleep
100062c8  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev
100257a8  w    O .rodata	00000014 _ZTSSt15underflow_error
1002853c  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
10006290  w    F .text	00000038 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev
10018bcc g     F .text	00000058 _close_r
10011a0c  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc
1000ce00 g     F .text	00000010 _ZNSt15underflow_errorD2Ev
1000acd4 g     F .text	00000030 _ZNSt14overflow_errorC1EPKc
1000f83c  w    F .text	000000e4 _ZNSs6appendEjc
10013c44  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
1000f5b8  w    F .text	00000108 _ZNSs6appendERKSsjj
1000670c  w    F .text	00000130 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_
1000dbd8  w    F .text	0000000c _ZNKSs12find_last_ofERKSsj
1001576c g     F .text	0000008c memcmp
10022b40 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
1002ac38 g       *ABS*	00000000 __alt_stack_base
10022b90 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10008524 g     F .text	00000038 _ZNSt9bad_allocD0Ev
10013264  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj
1000c400 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
1000ae2c g     F .text	00000044 _ZNSt12__cow_stringD1Ev
1000f3fc  w    F .text	000000f0 _ZNSs13shrink_to_fitEv
1000cd78 g     F .text	00000010 _ZNSt11range_errorD1Ev
10018a6c g     F .text	00000160 __swsetup_r
1001283c  w    F .text	0000000c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
1002576c  w    O .rodata	00000010 _ZTSSt11range_error
1000c174 g     F .text	0000002c _ZGTtNSt14overflow_errorD0Ev
100145a8 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
10011b94  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc
1001febc g     F .text	000008a8 .hidden __divdf3
1001a998 g     F .text	000000fc __sfp
1001c500 g     F .text	0000006c __copybits
10011010  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
100256dc  w    O .rodata	0000000c _ZTISt12domain_error
100255b4  w    O .rodata	0000000c _ZTSSt8bad_cast
1000cae4 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
100132f8  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_
10013c34  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_
10010698  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_
1002579c  w    O .rodata	0000000c _ZTISt14overflow_error
10026da4 g     O .rwdata	00000408 __malloc_av_
1000705c  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC2ERKSt17_Rb_tree_iteratorIS0_E
1001aac4 g     F .text	00000004 __sinit_lock_release
1000abf8 g     F .text	000000ac _ZNSt13runtime_errorC2EPKc
1000ddf0  w    F .text	00000040 _ZNKSs16find_last_not_ofEPKcj
100209c4 g     F .text	0000068c .hidden __muldf3
1001629c g     F .text	00000054 __sread
10000adc g     F .text	00000028 rot_word
10005be0 g     F .text	00000084 UsbWaitTDListDone
10025518  w    O .rodata	00000014 _ZTVSt9exception
1000c710 g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
1000f920  w    F .text	00000054 _ZNSs6resizeEjc
10023aa4 g     F .text	00000108 alt_find_file
10010598  w    F .text	00000030 _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs
1002855c  w    O .rwdata	00000004 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4nposE
10000b04 g     F .text	000002bc mix_columns
10007a10  w    F .text	00000024 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv
1000b254 g     F .text	000000e8 _ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10006afc  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base
1000e548  w    F .text	00000050 _ZNSs5clearEv
10002b3c g     F .text	00000068 pinkyPalette
100238b0 g     F .text	000000a4 alt_dev_llist_insert
10022380 g     F .text	00000024 __malloc_lock
100227a0 g     F .text	000000b0 sbrk
1000ad50 g     F .text	00000004 _ZNSt12__cow_stringC1ERKSs
10009f9c g     F .text	000000ac _ZSt20__throw_domain_errorPKc
10009ef0 g     F .text	000000ac _ZSt19__throw_logic_errorPKc
10010b00  w    F .text	00000020 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc
10025650  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
10006560  w    F .text	0000003c _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_
100083ec g     F .text	00000094 __cxa_throw
10006650  w    F .text	00000070 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
1001a724 g     F .text	00000060 _fflush_r
1001441c g     F .text	00000010 .hidden _Unwind_SetIP
1001e488 g     F .text	000000b8 _calloc_r
10012798  w    F .text	000000a4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
100061d4  w    F .text	00000088 _ZNK9TileGroupltERKS_
1000d1a8 g     F .text	00000060 _ZNSt12__sso_stringaSERKS_
10025720  w    O .rodata	0000000c _ZTISt12length_error
1000e230  w    F .text	0000000c _ZNSs4_Rep13_M_set_leakedEv
1000b990 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC1EPKc
1000a3ec g     F .text	000000ac _ZSt19__throw_range_errorPKc
1000cf1c g     F .text	00000030 _ZNSt16invalid_argumentC1ERKSs
100048a4 g     F .text	000000e8 parseSpriteLine
1001479c g     F .text	00000014 fopen
1002aa94 g       *ABS*	00000000 __bss_start
10006b24  w    F .text	00000048 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E
10010908  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
100121b0  w    F .text	00000094 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc
10015a24 g     F .text	000000f0 memset
1000d548  w    F .text	0000000c _ZNSs12_S_empty_repEv
10003904 g     F .text	00000db0 main
1002574c  w    O .rodata	00000012 _ZTSSt13runtime_error
1000b754 g     F .text	00000008 _ZGTtNSt16invalid_argumentD2Ev
1000ded8  w    F .text	0000009c _ZNKSs7compareEjjRKSs
100079a4  w    F .text	0000006c _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E
1000dcc8  w    F .text	00000040 _ZNKSs17find_first_not_ofEPKcj
1000ad70 g     F .text	0000005c _ZNSt12__cow_stringC1ERKS_
10004738 g     F .text	000000a8 writePaletteHelper
1002aac4 g     O .bss	00000004 alt_envp
1000b170 g     F .text	00000008 _Z26_txnal_logic_error_get_msgPv
1002aaac g     O .bss	00000004 __malloc_max_total_mem
1002560c  w    O .rodata	00000014 _ZTVSt10bad_typeid
10013a34  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_
10022ae0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10013e14  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcjRKS3_
10005558 g     F .text	00000100 UsbSetConfig
1001e474 g     F .text	00000014 __swbuf
10015cdc g     F .text	00000014 srand
1000c724 g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
10009e20 g     F .text	00000034 _ZSt21__throw_bad_exceptionv
1000c6c4 g     F .text	0000000c __cxa_get_globals_fast
10013db4  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_
1000d740  w    F .text	00000028 _ZNSsaSEOSs
1001292c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
10010f10  w    F .text	00000078 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
1000e2fc  w    F .text	000000a8 _ZNSs12_S_constructEjcRKSaIcE
10012e44  w    F .text	00000040 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj
10006140  w    F .text	0000003c _ZN9TileGroupC1E10__tile_col
100255cc  w    O .rodata	00000014 _ZTVSt8bad_cast
100163d4 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000d43c  w    F .text	00000020 _ZNSs7_M_copyEPcPKcj
1000c7c4 g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
1001e638 g     F .text	00000010 fclose
1000d880  w    F .text	0000000c _ZNKSs4findERKSsj
10000a18 g     F .text	000000c4 sub_word
10007b1c  w    F .text	00000030 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base
1000cca8 g     F .text	00000010 _ZNSt12out_of_rangeD1Ev
10018e34 g     F .text	000016c8 _dtoa_r
10014e90 g     F .text	000007f4 _malloc_r
1000b140 g     F .text	00000004 _Z23_txnal_sso_string_c_strPKv
100096e4 g     F .text	00000254 _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
10002ba4 g     F .text	00000068 inkyPalette
1001074c  w    F .text	0000003c _ZNSsC2IPKcEET_S2_RKSaIcE
1001ea14 g     F .text	00000030 __ascii_wctomb
10013c34  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_
1000c6f0 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
1000f7c4  w    F .text	00000004 _ZNSspLESt16initializer_listIcE
1000e3a4  w    F .text	00000034 _ZNSsC2ERKSaIcE
10028584 g     O .rwdata	00000004 alt_errno
10013a54  w    F .text	000000c8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
10010628  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_
1000adcc g     F .text	00000060 _ZNSt12__cow_stringaSERKS_
1000d084 g     F .text	00000030 _ZNSt14overflow_errorC2ERKSs
1000dbe4  w    F .text	00000040 _ZNKSs12find_last_ofEPKcj
1000cd88 g     F .text	00000034 _ZNSt11range_errorD0Ev
1001620c g     F .text	0000001c _init_signal
10025644  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
1001b470 g     F .text	000000a4 _fwalk
10001e08 g     F .text	0000004c recur_free
1001e8c8 g     F .text	0000000c _mbtowc_r
1000c6e0 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
1000b580 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC1EPKc
1001c6ac g     F .text	000000e0 putc
10013fb4 g     F .text	00000080 .hidden __divsi3
1001ab94 g     F .text	0000011c _malloc_trim_r
10005e30 g     F .text	000000fc getOne
10005758 g     F .text	00000148 UsbGetHidDesc
100246cc g       *ABS*	00000000 __CTOR_END__
1000d45c  w    F .text	00000020 _ZNSs7_M_moveEPcPKcj
1000f4ec  w    F .text	000000c8 _ZNSs6appendERKSs
1000f97c  w    F .text	000000a4 _ZNSs9push_backEc
100163dc g     F .text	000000d8 strcmp
1000abc8 g     F .text	00000030 _ZNSt12out_of_rangeC1EPKc
1000d51c  w    F .text	00000024 _ZNSs13_S_copy_charsEPcPKcS1_
1000da10  w    F .text	00000050 _ZNKSs5rfindEcj
100246d0 g       *ABS*	00000000 __flash_rodata_start
10025540  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
100246cc g       *ABS*	00000000 __DTOR_LIST__
1000e418  w    F .text	00000010 _ZNSs18_S_construct_aux_2EjcRKSaIcE
1000d208 g     F .text	00000018 _ZNSt12__sso_stringD1Ev
1000d0f8 g     F .text	00000020 _ZNSt12__sso_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
100106b4  w    F .text	0000005c _ZNSsC1EPKcRKSaIcE
100167a0 g     F .text	00000018 strtoul_l
10020764 g     F .text	00000080 .hidden __nedf2
1000c77c g     F .text	00000010 _ZNSt8bad_castD2Ev
1000aa24 g     F .text	00000068 _ZNSt13runtime_erroraSERKS_
10004c48 g     F .text	00000044 UsbRead
100122bc  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j
100046b4 g     F .text	00000084 drawTile
100111e4  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
1000cf7c g     F .text	00000030 _ZNSt12out_of_rangeC1ERKSs
100229e8 g     F .text	00000038 alt_irq_init
1000ff9c  w    F .text	0000002c _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
10022748 g     F .text	00000058 alt_release_fd
10012670  w    F .text	0000008c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj
1000c410 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
100114b4  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv
1000f258  w    F .text	00000040 _ZNSs8pop_backEv
100104d4  w    F .text	00000068 _ZNSs7replaceEjjRKSsjj
10002df4 g     F .text	000001c8 initScreen
10009938 g     F .text	000004b4 _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
10025f68 g     O .rodata	00000100 .hidden __clz_tab
1000cb50 g     F .text	00000064 _ZNSt11logic_errorD2Ev
1000e750  w    F .text	00000068 _ZNSs12_M_leak_hardEv
1002aab8 g     O .bss	00000004 _PathLocale
10006860  w    F .text	00000068 _ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_
100256ac  w    O .rodata	00000010 _ZTSSt11logic_error
1000cb50 g     F .text	00000064 _ZNSt11logic_errorD1Ev
10024330 g     F .text	00000014 atexit
1001163c  w    F .text	000000d4 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_
1000bb64 g     F .text	00000008 _ZGTtNSt12out_of_rangeD1Ev
1002577c  w    O .rodata	0000000c _ZTISt11range_error
100120f8  w    F .text	00000068 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_
1000c16c g     F .text	00000008 _ZGTtNSt14overflow_errorD2Ev
1000d054 g     F .text	00000030 _ZNSt11range_errorC1ERKSs
10018a08 g     F .text	00000064 _write_r
10010ee4  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_
1000c374 g     F .text	00000008 _ZGTtNSt15underflow_errorD1Ev
1000617c  w    F .text	00000058 _ZN9TileGroupC1Ess
1000f24c  w    F .text	0000000c _ZNSs6insertEjRKSs
100137c8  w    F .text	0000010c _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_
1000ba70 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1001e8b4 g     F .text	00000014 setlocale
1000ccb8 g     F .text	00000034 _ZNSt12out_of_rangeD0Ev
10014450 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
1000b580 g     F .text	000000e0 _ZGTtNSt16invalid_argumentC2EPKc
1000c3a8 g     F .text	00000058 __cxa_call_terminate
1001257c  w    F .text	000000a0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_
100135e4  w    F .text	00000094 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj
100068c8  w    F .text	00000044 _ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000c280 g     F .text	000000f4 _ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000eb28  w    F .text	000000a4 _ZNSs14_M_replace_auxEjjjc
10028564 g     O .rwdata	00000004 _impure_ptr
10028534  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
1002aabc g     O .bss	00000004 alt_argc
10007720  w    F .text	000000a8 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_
1000ed08  w    F .text	00000064 _ZNSs7replaceEjjjc
1001a4fc g     F .text	00000228 __sflush_r
1001002c  w    F .text	00000074 _ZNSsC1ERKSsjj
100239b4 g     F .text	00000060 _do_dtors
1000b868 g     F .text	000000f4 _ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10005dbc g     F .text	00000074 addPendingPos
100147b0 g     F .text	00000004 _fseek_r
1000705c  w    F .text	00000038 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E
1000962c g     F .text	0000005c _ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_
10015d6c g     F .text	000001cc __srefill_r
10007f50  w    F .text	00000028 _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv
1000fdec  w    F .text	000000cc _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
10011614  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_
100100a0  w    F .text	0000004c _ZNKSs6substrEjj
10008314 g     F .text	0000000c _ZSt14get_unexpectedv
10000020 g       .exceptions	00000000 alt_irq_entry
1001e8d4 g     F .text	00000044 __ascii_mbtowc
1000d62c  w    F .text	00000010 _ZNKSs5emptyEv
1001c13c g     F .text	0000005c __ulp
10014440 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
100028cc g     F .text	00000204 clydes_move
10010788  w    F .text	00000010 _ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_
1001aadc g     F .text	00000014 __fp_unlock_all
1000ab68 g     F .text	00000030 _ZNSt16invalid_argumentC2EPKc
10011124  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
10010918  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
10006bc8  w    F .text	00000024 _ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE
10028570 g     O .rwdata	00000008 alt_fs_list
100254f4  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
1002669c g     O .rwdata	00000040 Rcon
10012f64  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j
10007ddc  w    F .text	00000024 _ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv
1001442c g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
1000cc30 g     F .text	00000034 _ZNSt16invalid_argumentD0Ev
1000ab38 g     F .text	00000030 _ZNSt12domain_errorC2EPKc
10010bb8  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_
100101c8  w    F .text	0000003c _ZNSsC1EPKcjRKSaIcE
100074d0  w    F .text	00000028 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv
10006bec  w    F .text	00000058 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
10007094  w    F .text	00000034 _ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base
10008048 g     F .text	000000ac __cxa_begin_catch
100130a8  w    F .text	00000088 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj
1000f000  w    F .text	00000004 _ZNSs6assignESt16initializer_listIcE
100058a0 g     F .text	00000340 UsbGetReportDesc
1000c8a8 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
100082bc g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
1000aee8 g     F .text	00000118 _ZNKSt3_V214error_category10_M_messageEi
1000d564  w    F .text	00000018 _ZNSsC2EOSs
10002cfc g     F .text	00000084 textPalette
1002570c  w    O .rodata	00000011 _ZTSSt12length_error
10000020 g       *ABS*	00000000 __ram_exceptions_start
1001b634 g     F .text	0000000c localeconv
1000d118 g     F .text	00000014 _ZNSt12__sso_stringC1EPKcj
10009e88 g     F .text	00000034 _ZSt16__throw_bad_castv
10014c9c g     F .text	00000098 __swhatbuf_r
10007e3c  w    F .text	0000004c _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_
100028a8 g     F .text	00000024 inkys_move
1000c704 g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
10028544 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
10025868  w    O .rodata	00000014 _ZTVSt15underflow_error
1000dcbc  w    F .text	0000000c _ZNKSs17find_first_not_ofERKSsj
100060f4  w    F .text	0000004c _ZNSt15_Rb_tree_header8_M_resetEv
10006608  w    F .text	00000024 _ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC2Ev
10023c80 g     F .text	00000050 alt_ic_isr_register
100124b4  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_
1000b458 g     F .text	000000f4 _ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10009404 g     F .text	00000058 __cxa_allocate_exception
1000a9b4 g     F .text	00000070 _ZNSt13runtime_errorC2ERKS_
10010ef8  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_
1000a9b4 g     F .text	00000070 _ZNSt13runtime_errorC1ERKS_
100078d0  w    F .text	00000038 _ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_
10025448  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
1000d63c  w    F .text	0000000c _ZNKSsixEj
10008020 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
1000b178 g     F .text	00000008 _Z28_txnal_runtime_error_get_msgPv
1000ec04  w    F .text	00000048 _ZNSsaSEc
1000ae2c g     F .text	00000044 _ZNSt12__cow_stringD2Ev
10028598 g       *ABS*	00000000 _edata
1000b54c g     F .text	00000008 _ZGTtNSt12domain_errorD1Ev
1000b95c g     F .text	00000008 _ZGTtNSt12length_errorD2Ev
10007038  w    F .text	00000024 _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
1000de30  w    F .text	00000054 _ZNKSs16find_last_not_ofEcj
1002ac38 g       *ABS*	00000000 _end
10028524 g     O .rwdata	00000001 _ZSt7nothrow
1000cd50 g     F .text	00000028 _ZNSt13runtime_errorD0Ev
1000131c g     F .text	00000468 init_game
10008a9c g     F .text	00000624 __gxx_personality_sj0
1000bd90 g     F .text	000000e0 _ZGTtNSt11range_errorC2EPKc
10004bec g     F .text	0000005c UsbWrite
1001e648 g     F .text	00000150 __fputwc
10010aec  w    F .text	00000014 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj
10000238 g       *ABS*	00000000 __ram_exceptions_end
100138d4  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag
1000d564  w    F .text	00000018 _ZNSsC1EOSs
10022fb0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
1000b000 g     F .text	0000013c _Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_
1000b458 g     F .text	000000f4 _ZGTtNSt12domain_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10004ad8 g     F .text	00000098 writeText
10011194  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv
10002c0c g     F .text	00000068 clydePalette
10011a6c  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc
1000d5bc  w    F .text	00000008 _ZNKSs6cbeginEv
10013e8c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPKcvEET_S8_RKS3_
1000ae88 g     F .text	00000060 _ZNSt12__cow_stringaSEOS_
1000c6dc g     F .text	00000004 _ZNSt9exceptionD1Ev
10013b1c  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_
10023d58 g     F .text	0000008c alt_ic_irq_disable
100095c0 g     F .text	00000060 _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
10003458 g     F .text	000004ac updateBoard
10010d04  w    F .text	00000148 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj
10013f34  w    F .text	00000010 _ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
100162f8 g     F .text	00000080 __swrite
10007fb0 g     F .text	00000070 _Znwj
1000ef1c  w    F .text	00000028 _ZNSsaSESt16initializer_listIcE
10011134  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
1002856c g     O .rwdata	00000004 __malloc_trim_threshold
10012da0  w    F .text	00000098 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj
10013d0c  w    F .text	00000048 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_
10010a8c  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
10024344 g     F .text	00000034 exit
100114ac  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
100143d4 g     F .text	00000018 .hidden _Unwind_SetGR
1000f5b4  w    F .text	00000004 _ZNSspLERKSs
1001b514 g     F .text	000000b4 _fwalk_reent
1000c448 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
10012d38  w    F .text	00000068 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj
100257dc  w    O .rodata	00000014 _ZTVSt12domain_error
1001bf80 g     F .text	000001bc __mdiff
100081e0 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
1000e930  w    F .text	00000038 _ZNSs5frontEv
10011454  w    F .text	00000028 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj
1000b990 g     F .text	000000e0 _ZGTtNSt12out_of_rangeC2EPKc
10014034 g     F .text	00000078 .hidden __modsi3
1000757c  w    F .text	00000044 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv
1000d220 g     F .text	00000078 _ZNSt12__sso_stringC2EOS_
1000d648  w    F .text	00000028 _ZNKSs2atEj
10008514 g     F .text	00000010 _ZNSt9bad_allocD1Ev
1001131c  w    F .text	00000104 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv
1000dafc  w    F .text	00000040 _ZNKSs13find_first_ofEPKcj
1000dc34  w    F .text	00000088 _ZNKSs17find_first_not_ofEPKcjj
10010b60  w    F .text	00000034 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc
18000000 g       *ABS*	00000000 __alt_data_end
1000a5f0 g     F .text	00000080 _ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_
10000020 g     F .exceptions	00000000 alt_exception
1001aabc g     F .text	00000004 __sfp_lock_release
10012518  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_
1000ad54 g     F .text	0000001c _ZNSt12__cow_stringC2EPKcj
1001183c  w    F .text	00000060 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv
100129e4  w    F .text	0000008c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj
100254c8  w    O .rodata	0000000c _ZTISt13bad_exception
10000000 g       *ABS*	00000000 __alt_mem_sdram
10006e44  w    F .text	00000034 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_
10001e54 g     F .text	00000060 stack_push
1000bf98 g     F .text	000000e0 _ZGTtNSt14overflow_errorC2EPKc
10006fa4  w    F .text	00000060 _ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_
100062c8  w    F .text	00000038 _ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC2Ev
10012e84  w    F .text	00000050 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj
1000bb64 g     F .text	00000008 _ZGTtNSt12out_of_rangeD2Ev
100100ec  w    F .text	00000074 _ZNSsC1ERKSsjjRKSaIcE
100072c0  w    F .text	00000108 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_
10001240 g     F .text	00000074 IO_write
10025b82 g     O .rodata	00000101 _ctype_
100132a4  w    F .text	00000054 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj
1000cbec g     F .text	00000034 _ZNSt12domain_errorD0Ev
100219bc g     F .text	00000054 .hidden __unorddf2
1000d790  w    F .text	00000008 _ZNKSs5c_strEv
100114a4  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv
10006300  w    F .text	00000050 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC2Ev
1000ae70 g     F .text	00000018 _ZNSt12__cow_stringC1EOS_
1000d540  w    F .text	00000008 _ZNSs10_S_compareEjj
1002aad8 g     O .bss	00000018 workset
100146ac g     F .text	000000f0 _fopen_r
10021d80 g     F .text	00000034 _exit
10011aa0  w    F .text	00000044 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc
1000e270  w    F .text	0000008c _ZNSs4_Rep9_S_createEjjRKSaIcE
10013e8c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_
100235d8 g     F .text	0000012c alt_alarm_start
1000e244  w    F .text	00000024 _ZNSs4_Rep26_M_set_length_and_sharableEj
1000a1a0 g     F .text	000000ac _ZSt20__throw_out_of_rangePKc
1000eca8  w    F .text	00000060 _ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc
10007004  w    F .text	00000034 _ZNSt17_Rb_tree_iteratorI9TileGroupEC2EPSt18_Rb_tree_node_base
10013f54 g     F .text	00000060 .hidden __muldi3
10013e28  w    F .text	00000050 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
100143a4 g     F .text	00000018 .hidden _Unwind_GetGR
1000c6d0 g     F .text	0000000c __cxa_get_globals
10014d34 g     F .text	0000013c __smakebuf_r
10028528 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
100111d4  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv
1000bc6c g     F .text	000000e8 _ZGTtNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000f838  w    F .text	00000004 _ZNSs6appendESt16initializer_listIcE
1000f800  w    F .text	00000038 _ZNSspLEPKc
10006988  w    F .text	000000a4 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_
100164b4 g     F .text	00000098 strlen
1000ea08  w    F .text	00000074 _ZNSs5eraseEjj
1000a544 g     F .text	000000ac _ZSt23__throw_underflow_errorPKc
10015fdc g     F .text	00000014 _init_signal_r
10028548  w    O .rwdata	00000008 _ZTISt9type_info
100224bc g     F .text	00000154 open
1000c728 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
1000e20c  w    F .text	0000000c _ZNSs4_Rep12_S_empty_repEv
1000e204  w    F .text	00000008 _ZNSs12_Alloc_hiderC1EPcRKSaIcE
10010c2c  w    F .text	000000d8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
1000ec4c  w    F .text	0000005c _ZNSs6insertEjjc
100207e4 g     F .text	000000f0 .hidden __gedf2
1000ebcc  w    F .text	00000038 _ZNSs6assignEjc
1000abf8 g     F .text	000000ac _ZNSt13runtime_errorC1EPKc
100254a4  w    O .rodata	0000000d _ZTSSt9exception
1000c078 g     F .text	000000f4 _ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10006a2c  w    F .text	00000084 _ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv
1002582c  w    O .rodata	00000014 _ZTVSt13runtime_error
1000ad70 g     F .text	0000005c _ZNSt12__cow_stringC2ERKS_
100255f0  w    O .rodata	0000000f _ZTSSt10bad_typeid
1000d608  w    F .text	0000000c _ZNKSs6lengthEv
1000b554 g     F .text	0000002c _ZGTtNSt12domain_errorD0Ev
10004b70 g     F .text	0000007c clearScreen
1000d4f8  w    F .text	00000024 _ZNSs13_S_copy_charsEPcS_S_
1000c078 g     F .text	000000f4 _ZGTtNSt14overflow_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
1000cb40 g     F .text	00000008 _ZNKSt11logic_error4whatEv
10011c64  w    F .text	00000270 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
1000dd58  w    F .text	0000008c _ZNKSs16find_last_not_ofEPKcjj
1001019c  w    F .text	0000002c _ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
1000d8cc  w    F .text	00000060 _ZNKSs4findEcj
1000c6fc g     F .text	00000008 _ZNSt9exceptionD0Ev
1001cf10 g     F .text	00000018 __sprint_r
10023c4c g     F .text	00000034 alt_icache_flush_all
10012a70  w    F .text	0000018c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
1000c7d0 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
1000e9b0  w    F .text	00000058 _ZNSs2atEj
100114dc  w    F .text	0000009c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc
10013680  w    F .text	00000008 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_
10014448 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
10010644  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_
1002858c g     O .rwdata	00000004 alt_priority_mask
10011430  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
1001398c  w    F .text	000000a8 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag
10023cd0 g     F .text	00000088 alt_ic_irq_enable
10013688  w    F .text	00000140 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
10018930 g     F .text	00000018 __vfprintf_internal
1000d614  w    F .text	0000000c _ZNKSs8max_sizeEv
10011ed4  w    F .text	00000064 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj
1000bb98 g     F .text	000000d4 _ZGTtNSt13runtime_errorC2EPKc
1000bb6c g     F .text	0000002c _ZGTtNSt12out_of_rangeD0Ev
10013130  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j
1001ea08 g     F .text	0000000c _wctomb_r
1000dd08  w    F .text	00000050 _ZNKSs17find_first_not_ofEcj
1000ffc8  w    F .text	00000064 _ZNSsC2ERKSsjRKSaIcE
1000c7d0 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
10021050 g     F .text	0000096c .hidden __subdf3
10011b3c  w    F .text	00000058 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc
1000e4c4  w    F .text	00000004 _ZNSs4_Rep10_M_destroyERKSaIcE
100106b4  w    F .text	0000005c _ZNSsC2EPKcRKSaIcE
10010c00  w    F .text	00000024 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
1001298c  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE
1000e268  w    F .text	00000008 _ZNSs4_Rep10_M_refdataEv
1001b9f4 g     F .text	000000b0 __lo0bits
10005160 g     F .text	00000190 UsbGetConfigDesc1
1000e898  w    F .text	00000050 _ZNSs6rbeginEv
1000b54c g     F .text	00000008 _ZGTtNSt12domain_errorD2Ev
10011f98  w    F .text	00000028 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE
1000aa8c g     F .text	000000ac _ZNSt11logic_errorC1EPKc
100129b8  w    F .text	0000002c _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE
10028590 g     O .rwdata	00000008 alt_alarm_list
1000ba70 g     F .text	000000f4 _ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
10023954 g     F .text	00000060 _do_ctors
10011154  w    F .text	00000018 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv
10016228 g     F .text	00000010 __sigtramp
10013258  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j
10025700  w    O .rodata	0000000c _ZTISt16invalid_argument
1000daf0  w    F .text	0000000c _ZNKSs13find_first_ofERKSsj
1000ff60  w    F .text	0000003c _ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE
10004c8c g     F .text	000000b4 UsbSoftReset
1000aca4 g     F .text	00000030 _ZNSt11range_errorC1EPKc
1001e984 g     F .text	00000084 wcrtomb
1001094c  w    F .text	00000010 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv
1000d41c  w    F .text	00000020 _ZNKSs11_M_disjunctEPKc
1001304c  w    F .text	0000000c _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j
10021c84 g     F .text	000000d0 close
1000d714  w    F .text	0000002c _ZNSs4swapERSs
1000ae70 g     F .text	00000018 _ZNSt12__cow_stringC2EOS_
100111ec  w    F .text	00000008 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
10004f88 g     F .text	000001d8 UsbGetDeviceDesc2
100271ac g     O .rwdata	0000016c __global_locale
100060b8  w    F .text	0000003c _ZNSt15_Rb_tree_headerC1Ev
10010ed0  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev
10010660  w    F .text	0000001c _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE
100254d4  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
1000ce44 g     F .text	000000a8 _ZNSt11logic_errorC1ERKSs
10022170 g     F .text	00000084 alt_load
10000920 g     F .text	0000004c sub_byte
1000d554  w    F .text	00000010 _ZNSsC1Ev
100075c0  w    F .text	00000038 _ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_
1000cafc g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
1000ab38 g     F .text	00000030 _ZNSt12domain_errorC1EPKc
10010ee4  w    F .text	00000014 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_
1001e7bc g     F .text	0000007c fputwc
100161e8 g     F .text	00000010 raise
1000cf1c g     F .text	00000030 _ZNSt16invalid_argumentC2ERKSs
10014e80 g     F .text	00000010 free
1001aac0 g     F .text	00000004 __sinit_lock_acquire
10002d80 g     F .text	00000074 wallPalette
1000cf4c g     F .text	00000030 _ZNSt12length_errorC2ERKSs
1001b76c g     F .text	00000114 __multadd
1000c8b8 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
1001b748 g     F .text	00000024 _Bfree
100111bc  w    F .text	00000018 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv
10000284 g     F .text	000003d4 aes_encrypt
1001397c  w    F .text	00000010 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_
10013a34  w    F .text	00000020 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_RKS3_
1000f6c0  w    F .text	00000104 _ZNSs6appendEPKcj
10001784 g     F .text	00000654 tickgame
1000cfac g     F .text	000000a8 _ZNSt13runtime_errorC1ERKSs



Disassembly of section .entry:

10000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1000000c:	00bffd16 	blt	zero,r2,10000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000010:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000014:	08408e14 	ori	at,at,568
    jmp r1
10000018:	0800683a 	jmp	at
1000001c:	00000000 	call	10000000 <__reset>

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001c40 	call	100001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffc15 	stw	r2,-16(fp)

  return active;
10000118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0ffff17 	ldw	r3,-4(fp)
10000130:	e0bffe17 	ldw	r2,-8(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001126 	beq	r2,zero,10000180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	e0bffd17 	ldw	r2,-12(fp)
10000140:	100690fa 	slli	r3,r2,3
10000144:	008400f4 	movhi	r2,4099
10000148:	1885883a 	add	r2,r3,r2
1000014c:	10eace17 	ldw	r3,-21704(r2)
10000150:	e0bffd17 	ldw	r2,-12(fp)
10000154:	100890fa 	slli	r4,r2,3
10000158:	008400f4 	movhi	r2,4099
1000015c:	2085883a 	add	r2,r4,r2
10000160:	10aacf17 	ldw	r2,-21700(r2)
10000164:	1009883a 	mov	r4,r2
10000168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
1000016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
10000170:	0005313a 	rdctl	r2,ipending
10000174:	e0bffb15 	stw	r2,-20(fp)
  return active;
10000178:	e0bffb17 	ldw	r2,-20(fp)
1000017c:	00000706 	br	1000019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
10000180:	e0bffe17 	ldw	r2,-8(fp)
10000184:	1085883a 	add	r2,r2,r2
10000188:	e0bffe15 	stw	r2,-8(fp)
      i++;
1000018c:	e0bffd17 	ldw	r2,-12(fp)
10000190:	10800044 	addi	r2,r2,1
10000194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
10000198:	003fe406 	br	1000012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
1000019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
100001a0:	e0bfff17 	ldw	r2,-4(fp)
100001a4:	103fde1e 	bne	r2,zero,10000120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001a8:	0001883a 	nop
}
100001ac:	0001883a 	nop
100001b0:	e037883a 	mov	sp,fp
100001b4:	dfc00117 	ldw	ra,4(sp)
100001b8:	df000017 	ldw	fp,0(sp)
100001bc:	dec00204 	addi	sp,sp,8
100001c0:	f800283a 	ret

100001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001c4:	defffb04 	addi	sp,sp,-20
100001c8:	dfc00415 	stw	ra,16(sp)
100001cc:	df000315 	stw	fp,12(sp)
100001d0:	df000304 	addi	fp,sp,12
100001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
100001d8:	000531fa 	rdctl	r2,exception
100001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
100001e0:	e0bfff17 	ldw	r2,-4(fp)
100001e4:	1004d0ba 	srli	r2,r2,2
100001e8:	108007cc 	andi	r2,r2,31
100001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
100001f0:	0005333a 	rdctl	r2,badaddr
100001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f8:	d0a96d17 	ldw	r2,-23116(gp)
100001fc:	10000726 	beq	r2,zero,1000021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
10000200:	d0a96d17 	ldw	r2,-23116(gp)
10000204:	e0ffff17 	ldw	r3,-4(fp)
10000208:	e1bffe17 	ldw	r6,-8(fp)
1000020c:	e17ffd17 	ldw	r5,-12(fp)
10000210:	1809883a 	mov	r4,r3
10000214:	103ee83a 	callr	r2
10000218:	00000206 	br	10000224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
1000021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000220:	0005883a 	mov	r2,zero
}
10000224:	e037883a 	mov	sp,fp
10000228:	dfc00117 	ldw	ra,4(sp)
1000022c:	df000017 	ldw	fp,0(sp)
10000230:	dec00204 	addi	sp,sp,8
10000234:	f800283a 	ret

Disassembly of section .text:

10000238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10000238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
1000023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
10000240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10000244:	00bffd16 	blt	zero,r2,1000023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000248:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
1000024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000250:	068400f4 	movhi	gp,4099
    ori gp, gp, %lo(_gp)
10000254:	d6814814 	ori	gp,gp,1312
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000258:	008400b4 	movhi	r2,4098
    ori r2, r2, %lo(__bss_start)
1000025c:	10aaa514 	ori	r2,r2,43668

    movhi r3, %hi(__bss_end)
10000260:	00c400b4 	movhi	r3,4098
    ori r3, r3, %lo(__bss_end)
10000264:	18eb0e14 	ori	r3,r3,44088

    beq r2, r3, 1f
10000268:	10c00326 	beq	r2,r3,10000278 <_start+0x40>

0:
    stw zero, (r2)
1000026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10000274:	10fffd36 	bltu	r2,r3,1000026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000278:	00221700 	call	10022170 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
1000027c:	00223040 	call	10022304 <alt_main>

10000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000280:	003fff06 	br	10000280 <alt_after_alt_main>

10000284 <aes_encrypt>:
[0 1]  [1 1] ...
[0 2]  ...
[0 3] ...
*/

void aes_encrypt(uint8_t* data_in, uint32_t* data_out, uint32_t* keyarr) {
10000284:	deffd404 	addi	sp,sp,-176
10000288:	dfc02b15 	stw	ra,172(sp)
1000028c:	df002a15 	stw	fp,168(sp)
10000290:	ddc02915 	stw	r23,164(sp)
10000294:	dd802815 	stw	r22,160(sp)
10000298:	dd402715 	stw	r21,156(sp)
1000029c:	dd002615 	stw	r20,152(sp)
100002a0:	dcc02515 	stw	r19,148(sp)
100002a4:	dc802415 	stw	r18,144(sp)
100002a8:	dc402315 	stw	r17,140(sp)
100002ac:	dc002215 	stw	r16,136(sp)
100002b0:	df002a04 	addi	fp,sp,168
100002b4:	e13fdb15 	stw	r4,-148(fp)
100002b8:	e17fda15 	stw	r5,-152(fp)
100002bc:	e1bfd915 	stw	r6,-156(fp)
100002c0:	d809883a 	mov	r4,sp
100002c4:	202f883a 	mov	r23,r4
	aes_state state; // = malloc(sizeof(uint32_t) * 4); //Flattened.
	aes_state state_in; // = malloc(sizeof(uint32_t) * 4); //Temporary.
	// Generate round keys.
	
	uint32_t key_out[(CNST_AES_NR+1)][CNST_AES_NB];
100002c8:	01000104 	movi	r4,4
100002cc:	21003fcc 	andi	r4,r4,255
100002d0:	213fffc4 	addi	r4,r4,-1
100002d4:	e13ff615 	stw	r4,-40(fp)
100002d8:	01000104 	movi	r4,4
100002dc:	21003fcc 	andi	r4,r4,255
100002e0:	200f883a 	mov	r7,r4
100002e4:	0011883a 	mov	r8,zero
100002e8:	3808d6fa 	srli	r4,r7,27
100002ec:	4006917a 	slli	r3,r8,5
100002f0:	20c6b03a 	or	r3,r4,r3
100002f4:	3804917a 	slli	r2,r7,5
100002f8:	00800104 	movi	r2,4
100002fc:	10803fcc 	andi	r2,r2,255
10000300:	102890ba 	slli	r20,r2,2
10000304:	00800284 	movi	r2,10
10000308:	10803fcc 	andi	r2,r2,255
1000030c:	e0bff515 	stw	r2,-44(fp)
10000310:	00800104 	movi	r2,4
10000314:	10803fcc 	andi	r2,r2,255
10000318:	1013883a 	mov	r9,r2
1000031c:	0015883a 	mov	r10,zero
10000320:	00800284 	movi	r2,10
10000324:	10803fcc 	andi	r2,r2,255
10000328:	10800044 	addi	r2,r2,1
1000032c:	1017883a 	mov	r11,r2
10000330:	0019883a 	mov	r12,zero
10000334:	580d883a 	mov	r6,r11
10000338:	600f883a 	mov	r7,r12
1000033c:	4809883a 	mov	r4,r9
10000340:	500b883a 	mov	r5,r10
10000344:	0013f540 	call	10013f54 <__muldi3>
10000348:	1009883a 	mov	r4,r2
1000034c:	180b883a 	mov	r5,r3
10000350:	2005883a 	mov	r2,r4
10000354:	2807883a 	mov	r3,r5
10000358:	1008d6fa 	srli	r4,r2,27
1000035c:	1826917a 	slli	r19,r3,5
10000360:	24e6b03a 	or	r19,r4,r19
10000364:	1024917a 	slli	r18,r2,5
10000368:	00800104 	movi	r2,4
1000036c:	10803fcc 	andi	r2,r2,255
10000370:	102b883a 	mov	r21,r2
10000374:	002d883a 	mov	r22,zero
10000378:	00800284 	movi	r2,10
1000037c:	10803fcc 	andi	r2,r2,255
10000380:	10800044 	addi	r2,r2,1
10000384:	e0bfd715 	stw	r2,-164(fp)
10000388:	e03fd815 	stw	zero,-160(fp)
1000038c:	e1bfd717 	ldw	r6,-164(fp)
10000390:	e1ffd817 	ldw	r7,-160(fp)
10000394:	a809883a 	mov	r4,r21
10000398:	b00b883a 	mov	r5,r22
1000039c:	0013f540 	call	10013f54 <__muldi3>
100003a0:	1009883a 	mov	r4,r2
100003a4:	180b883a 	mov	r5,r3
100003a8:	2005883a 	mov	r2,r4
100003ac:	2807883a 	mov	r3,r5
100003b0:	1008d6fa 	srli	r4,r2,27
100003b4:	1822917a 	slli	r17,r3,5
100003b8:	2462b03a 	or	r17,r4,r17
100003bc:	1020917a 	slli	r16,r2,5
100003c0:	00800284 	movi	r2,10
100003c4:	10803fcc 	andi	r2,r2,255
100003c8:	10c00044 	addi	r3,r2,1
100003cc:	00800104 	movi	r2,4
100003d0:	10803fcc 	andi	r2,r2,255
100003d4:	1885383a 	mul	r2,r3,r2
100003d8:	100490ba 	slli	r2,r2,2
100003dc:	108000c4 	addi	r2,r2,3
100003e0:	1004d0ba 	srli	r2,r2,2
100003e4:	100490ba 	slli	r2,r2,2
100003e8:	d8b7c83a 	sub	sp,sp,r2
100003ec:	d8800104 	addi	r2,sp,4
100003f0:	108000c4 	addi	r2,r2,3
100003f4:	1004d0ba 	srli	r2,r2,2
100003f8:	100490ba 	slli	r2,r2,2
100003fc:	e0bff415 	stw	r2,-48(fp)
	key_expansion(&keyarr[0], &key_out[0][0], CNST_AES_NK, CNST_AES_NB, CNST_AES_NR);
10000400:	e0fff417 	ldw	r3,-48(fp)
10000404:	00800104 	movi	r2,4
10000408:	11003fcc 	andi	r4,r2,255
1000040c:	00800104 	movi	r2,4
10000410:	11403fcc 	andi	r5,r2,255
10000414:	00800284 	movi	r2,10
10000418:	10803fcc 	andi	r2,r2,255
1000041c:	d8800015 	stw	r2,0(sp)
10000420:	280f883a 	mov	r7,r5
10000424:	200d883a 	mov	r6,r4
10000428:	180b883a 	mov	r5,r3
1000042c:	e13fd917 	ldw	r4,-156(fp)
10000430:	00006580 	call	10000658 <key_expansion>

	memcpy(state.state8, data_in, sizeof(state));
10000434:	e0ffdb17 	ldw	r3,-148(fp)
10000438:	e0bff004 	addi	r2,fp,-64
1000043c:	1809883a 	mov	r4,r3
10000440:	00c00404 	movi	r3,16
10000444:	180d883a 	mov	r6,r3
10000448:	200b883a 	mov	r5,r4
1000044c:	1009883a 	mov	r4,r2
10000450:	00157f80 	call	100157f8 <memcpy>
	
	add_round_key(state.state32, key_out[0], state_in.state32);
10000454:	e0fff417 	ldw	r3,-48(fp)
10000458:	e13fec04 	addi	r4,fp,-80
1000045c:	e0bff004 	addi	r2,fp,-64
10000460:	200d883a 	mov	r6,r4
10000464:	180b883a 	mov	r5,r3
10000468:	1009883a 	mov	r4,r2
1000046c:	0000dc00 	call	10000dc0 <add_round_key>
	memcpy(&state, &state_in, sizeof(state_in));
10000470:	e0bfec17 	ldw	r2,-80(fp)
10000474:	e0bff015 	stw	r2,-64(fp)
10000478:	e0bfed17 	ldw	r2,-76(fp)
1000047c:	e0bff115 	stw	r2,-60(fp)
10000480:	e0bfee17 	ldw	r2,-72(fp)
10000484:	e0bff215 	stw	r2,-56(fp)
10000488:	e0bfef17 	ldw	r2,-68(fp)
1000048c:	e0bff315 	stw	r2,-52(fp)
	
	aes_state state_in0, state_in1, state_in2, state_in3;
	
	for(uint8_t round = 1; round < CNST_AES_NR; round += 1) {
10000490:	00800044 	movi	r2,1
10000494:	e0bff745 	stb	r2,-35(fp)
10000498:	00003306 	br	10000568 <aes_encrypt+0x2e4>
		// Sub words.
		for (uint8_t k = 0; k < 4; k++) sub_word(&state.state8[k], &state_in0.state8[k]);
1000049c:	e03ff785 	stb	zero,-34(fp)
100004a0:	00000d06 	br	100004d8 <aes_encrypt+0x254>
100004a4:	e0bff783 	ldbu	r2,-34(fp)
100004a8:	e0fff004 	addi	r3,fp,-64
100004ac:	100490ba 	slli	r2,r2,2
100004b0:	1889883a 	add	r4,r3,r2
100004b4:	e0bff783 	ldbu	r2,-34(fp)
100004b8:	e0ffe804 	addi	r3,fp,-96
100004bc:	100490ba 	slli	r2,r2,2
100004c0:	1885883a 	add	r2,r3,r2
100004c4:	100b883a 	mov	r5,r2
100004c8:	0000a180 	call	10000a18 <sub_word>
100004cc:	e0bff783 	ldbu	r2,-34(fp)
100004d0:	10800044 	addi	r2,r2,1
100004d4:	e0bff785 	stb	r2,-34(fp)
100004d8:	e0bff783 	ldbu	r2,-34(fp)
100004dc:	10800130 	cmpltui	r2,r2,4
100004e0:	103ff01e 	bne	r2,zero,100004a4 <aes_encrypt+0x220>
		//memcpy(&state, &state_in, sizeof(state_in));
		
		// Shift Rows.
		shift_rows(state_in0.state8, state_in1.state8);
100004e4:	e0ffe404 	addi	r3,fp,-112
100004e8:	e0bfe804 	addi	r2,fp,-96
100004ec:	180b883a 	mov	r5,r3
100004f0:	1009883a 	mov	r4,r2
100004f4:	00008480 	call	10000848 <shift_rows>
		// memcpy(&state, &state_in, sizeof(state_in));
		
		// Mix Columns.
		mix_columns(state_in1.state8, state_in2.state8);
100004f8:	e0ffe004 	addi	r3,fp,-128
100004fc:	e0bfe404 	addi	r2,fp,-112
10000500:	180b883a 	mov	r5,r3
10000504:	1009883a 	mov	r4,r2
10000508:	0000b040 	call	10000b04 <mix_columns>
		//memcpy(&state, &state_in, sizeof(state_in));
		
		// Add Round Key
		add_round_key(state_in2.state32, key_out[round], state_in3.state32);
1000050c:	a006d0ba 	srli	r3,r20,2
10000510:	e0bff743 	ldbu	r2,-35(fp)
10000514:	1885383a 	mul	r2,r3,r2
10000518:	100490ba 	slli	r2,r2,2
1000051c:	e0fff417 	ldw	r3,-48(fp)
10000520:	1887883a 	add	r3,r3,r2
10000524:	e13fdc04 	addi	r4,fp,-144
10000528:	e0bfe004 	addi	r2,fp,-128
1000052c:	200d883a 	mov	r6,r4
10000530:	180b883a 	mov	r5,r3
10000534:	1009883a 	mov	r4,r2
10000538:	0000dc00 	call	10000dc0 <add_round_key>
		memcpy(&state, &state_in3, sizeof(state_in3));
1000053c:	e0bfdc17 	ldw	r2,-144(fp)
10000540:	e0bff015 	stw	r2,-64(fp)
10000544:	e0bfdd17 	ldw	r2,-140(fp)
10000548:	e0bff115 	stw	r2,-60(fp)
1000054c:	e0bfde17 	ldw	r2,-136(fp)
10000550:	e0bff215 	stw	r2,-56(fp)
10000554:	e0bfdf17 	ldw	r2,-132(fp)
10000558:	e0bff315 	stw	r2,-52(fp)
	for(uint8_t round = 1; round < CNST_AES_NR; round += 1) {
1000055c:	e0bff743 	ldbu	r2,-35(fp)
10000560:	10800044 	addi	r2,r2,1
10000564:	e0bff745 	stb	r2,-35(fp)
10000568:	00800284 	movi	r2,10
1000056c:	e0fff743 	ldbu	r3,-35(fp)
10000570:	10803fcc 	andi	r2,r2,255
10000574:	18bfc936 	bltu	r3,r2,1000049c <aes_encrypt+0x218>
	}
	
	// Sub words.
	for (uint8_t k = 0; k < 4; k++) sub_word(&state.state8[k], &state_in0.state8[k]);
10000578:	e03ff7c5 	stb	zero,-33(fp)
1000057c:	00000d06 	br	100005b4 <aes_encrypt+0x330>
10000580:	e0bff7c3 	ldbu	r2,-33(fp)
10000584:	e0fff004 	addi	r3,fp,-64
10000588:	100490ba 	slli	r2,r2,2
1000058c:	1889883a 	add	r4,r3,r2
10000590:	e0bff7c3 	ldbu	r2,-33(fp)
10000594:	e0ffe804 	addi	r3,fp,-96
10000598:	100490ba 	slli	r2,r2,2
1000059c:	1885883a 	add	r2,r3,r2
100005a0:	100b883a 	mov	r5,r2
100005a4:	0000a180 	call	10000a18 <sub_word>
100005a8:	e0bff7c3 	ldbu	r2,-33(fp)
100005ac:	10800044 	addi	r2,r2,1
100005b0:	e0bff7c5 	stb	r2,-33(fp)
100005b4:	e0bff7c3 	ldbu	r2,-33(fp)
100005b8:	10800130 	cmpltui	r2,r2,4
100005bc:	103ff01e 	bne	r2,zero,10000580 <aes_encrypt+0x2fc>
	//memcpy(&state, &state_in, sizeof(state_in));
	
	// Shift Rows.
	shift_rows(&state_in0.state8, &state_in1.state8);
100005c0:	e0ffe404 	addi	r3,fp,-112
100005c4:	e0bfe804 	addi	r2,fp,-96
100005c8:	180b883a 	mov	r5,r3
100005cc:	1009883a 	mov	r4,r2
100005d0:	00008480 	call	10000848 <shift_rows>
	//memcpy(&state, &state_in, sizeof(state_in));

	// Add Round Key
	add_round_key(&state_in1.state32, &key_out[CNST_AES_NR], &state_in2.state32);
100005d4:	a006d0ba 	srli	r3,r20,2
100005d8:	00800284 	movi	r2,10
100005dc:	10803fcc 	andi	r2,r2,255
100005e0:	1885383a 	mul	r2,r3,r2
100005e4:	100490ba 	slli	r2,r2,2
100005e8:	e0fff417 	ldw	r3,-48(fp)
100005ec:	1887883a 	add	r3,r3,r2
100005f0:	e13fe004 	addi	r4,fp,-128
100005f4:	e0bfe404 	addi	r2,fp,-112
100005f8:	200d883a 	mov	r6,r4
100005fc:	180b883a 	mov	r5,r3
10000600:	1009883a 	mov	r4,r2
10000604:	0000dc00 	call	10000dc0 <add_round_key>
	//memcpy(&state, &state_in, sizeof(state_in));

	// Now everything is ready.
	memcpy(data_out, state_in2.state32, sizeof(state_in2.state32));
10000608:	e0bfe004 	addi	r2,fp,-128
1000060c:	01800404 	movi	r6,16
10000610:	100b883a 	mov	r5,r2
10000614:	e13fda17 	ldw	r4,-152(fp)
10000618:	00157f80 	call	100157f8 <memcpy>
1000061c:	b837883a 	mov	sp,r23
}
10000620:	0001883a 	nop
10000624:	e6fff804 	addi	sp,fp,-32
10000628:	dfc00917 	ldw	ra,36(sp)
1000062c:	df000817 	ldw	fp,32(sp)
10000630:	ddc00717 	ldw	r23,28(sp)
10000634:	dd800617 	ldw	r22,24(sp)
10000638:	dd400517 	ldw	r21,20(sp)
1000063c:	dd000417 	ldw	r20,16(sp)
10000640:	dcc00317 	ldw	r19,12(sp)
10000644:	dc800217 	ldw	r18,8(sp)
10000648:	dc400117 	ldw	r17,4(sp)
1000064c:	dc000017 	ldw	r16,0(sp)
10000650:	dec00a04 	addi	sp,sp,40
10000654:	f800283a 	ret

10000658 <key_expansion>:

// Verified working.
void key_expansion(uint8_t* key_in, uint32_t* key_out, uint8_t Nk, uint8_t Nb, uint8_t Nr) {
10000658:	defff704 	addi	sp,sp,-36
1000065c:	dfc00815 	stw	ra,32(sp)
10000660:	df000715 	stw	fp,28(sp)
10000664:	df000704 	addi	fp,sp,28
10000668:	e13ffd15 	stw	r4,-12(fp)
1000066c:	e17ffc15 	stw	r5,-16(fp)
10000670:	3007883a 	mov	r3,r6
10000674:	3809883a 	mov	r4,r7
10000678:	e0800217 	ldw	r2,8(fp)
1000067c:	e0fffb05 	stb	r3,-20(fp)
10000680:	2007883a 	mov	r3,r4
10000684:	e0fffa05 	stb	r3,-24(fp)
10000688:	e0bff905 	stb	r2,-28(fp)
	uint32_t temp;
	for(uint8_t i=0; i<Nk; i++) {
1000068c:	e03ffec5 	stb	zero,-5(fp)
10000690:	00002b06 	br	10000740 <key_expansion+0xe8>
		key_out[i] = key_in[4*i+3] | (key_in[4*i+2] << 8) | (key_in[4*i+1] << 16) | (key_in[4*i] << 24);
10000694:	e0bffec3 	ldbu	r2,-5(fp)
10000698:	100490ba 	slli	r2,r2,2
1000069c:	108000c4 	addi	r2,r2,3
100006a0:	e0fffd17 	ldw	r3,-12(fp)
100006a4:	1885883a 	add	r2,r3,r2
100006a8:	10800003 	ldbu	r2,0(r2)
100006ac:	10c03fcc 	andi	r3,r2,255
100006b0:	e0bffec3 	ldbu	r2,-5(fp)
100006b4:	100490ba 	slli	r2,r2,2
100006b8:	10800084 	addi	r2,r2,2
100006bc:	e13ffd17 	ldw	r4,-12(fp)
100006c0:	2085883a 	add	r2,r4,r2
100006c4:	10800003 	ldbu	r2,0(r2)
100006c8:	10803fcc 	andi	r2,r2,255
100006cc:	1004923a 	slli	r2,r2,8
100006d0:	1886b03a 	or	r3,r3,r2
100006d4:	e0bffec3 	ldbu	r2,-5(fp)
100006d8:	100490ba 	slli	r2,r2,2
100006dc:	10800044 	addi	r2,r2,1
100006e0:	e13ffd17 	ldw	r4,-12(fp)
100006e4:	2085883a 	add	r2,r4,r2
100006e8:	10800003 	ldbu	r2,0(r2)
100006ec:	10803fcc 	andi	r2,r2,255
100006f0:	1004943a 	slli	r2,r2,16
100006f4:	1886b03a 	or	r3,r3,r2
100006f8:	e0bffec3 	ldbu	r2,-5(fp)
100006fc:	100490ba 	slli	r2,r2,2
10000700:	1009883a 	mov	r4,r2
10000704:	e0bffd17 	ldw	r2,-12(fp)
10000708:	1105883a 	add	r2,r2,r4
1000070c:	10800003 	ldbu	r2,0(r2)
10000710:	10803fcc 	andi	r2,r2,255
10000714:	1004963a 	slli	r2,r2,24
10000718:	1888b03a 	or	r4,r3,r2
1000071c:	e0bffec3 	ldbu	r2,-5(fp)
10000720:	100490ba 	slli	r2,r2,2
10000724:	e0fffc17 	ldw	r3,-16(fp)
10000728:	1885883a 	add	r2,r3,r2
1000072c:	2007883a 	mov	r3,r4
10000730:	10c00015 	stw	r3,0(r2)
	for(uint8_t i=0; i<Nk; i++) {
10000734:	e0bffec3 	ldbu	r2,-5(fp)
10000738:	10800044 	addi	r2,r2,1
1000073c:	e0bffec5 	stb	r2,-5(fp)
10000740:	e0fffec3 	ldbu	r3,-5(fp)
10000744:	e0bffb03 	ldbu	r2,-20(fp)
10000748:	18bfd236 	bltu	r3,r2,10000694 <key_expansion+0x3c>
	}
	uint8_t i = Nk;
1000074c:	e0bffb03 	ldbu	r2,-20(fp)
10000750:	e0bffe85 	stb	r2,-6(fp)
	while(i<Nb*(Nr+1)) {
10000754:	00003006 	br	10000818 <key_expansion+0x1c0>
		temp = key_out[i-1];
10000758:	e0fffe83 	ldbu	r3,-6(fp)
1000075c:	00900034 	movhi	r2,16384
10000760:	10bfffc4 	addi	r2,r2,-1
10000764:	1885883a 	add	r2,r3,r2
10000768:	100490ba 	slli	r2,r2,2
1000076c:	e0fffc17 	ldw	r3,-16(fp)
10000770:	1885883a 	add	r2,r3,r2
10000774:	10800017 	ldw	r2,0(r2)
10000778:	e0bfff15 	stw	r2,-4(fp)
		if(i % Nk == 0) {
1000077c:	e0bffe83 	ldbu	r2,-6(fp)
10000780:	e0fffb03 	ldbu	r3,-20(fp)
10000784:	10c9203a 	divu	r4,r2,r3
10000788:	20c7383a 	mul	r3,r4,r3
1000078c:	10c5c83a 	sub	r2,r2,r3
10000790:	10803fcc 	andi	r2,r2,255
10000794:	10000f1e 	bne	r2,zero,100007d4 <key_expansion+0x17c>
			temp = sub_word32(rot_word(temp)) ^ Rcon[i/Nk];
10000798:	e13fff17 	ldw	r4,-4(fp)
1000079c:	0000adc0 	call	10000adc <rot_word>
100007a0:	1009883a 	mov	r4,r2
100007a4:	000096c0 	call	1000096c <sub_word32>
100007a8:	1009883a 	mov	r4,r2
100007ac:	e0fffe83 	ldbu	r3,-6(fp)
100007b0:	e0bffb03 	ldbu	r2,-20(fp)
100007b4:	1885203a 	divu	r2,r3,r2
100007b8:	10803fcc 	andi	r2,r2,255
100007bc:	100690ba 	slli	r3,r2,2
100007c0:	008400b4 	movhi	r2,4098
100007c4:	1885883a 	add	r2,r3,r2
100007c8:	1099a717 	ldw	r2,26268(r2)
100007cc:	2084f03a 	xor	r2,r4,r2
100007d0:	e0bfff15 	stw	r2,-4(fp)
		}
		key_out[i] = key_out[i-Nk] ^ temp;
100007d4:	e0fffe83 	ldbu	r3,-6(fp)
100007d8:	e0bffb03 	ldbu	r2,-20(fp)
100007dc:	1885c83a 	sub	r2,r3,r2
100007e0:	100490ba 	slli	r2,r2,2
100007e4:	e0fffc17 	ldw	r3,-16(fp)
100007e8:	1885883a 	add	r2,r3,r2
100007ec:	11000017 	ldw	r4,0(r2)
100007f0:	e0bffe83 	ldbu	r2,-6(fp)
100007f4:	100490ba 	slli	r2,r2,2
100007f8:	e0fffc17 	ldw	r3,-16(fp)
100007fc:	1885883a 	add	r2,r3,r2
10000800:	e0ffff17 	ldw	r3,-4(fp)
10000804:	20c6f03a 	xor	r3,r4,r3
10000808:	10c00015 	stw	r3,0(r2)
		++i;
1000080c:	e0bffe83 	ldbu	r2,-6(fp)
10000810:	10800044 	addi	r2,r2,1
10000814:	e0bffe85 	stb	r2,-6(fp)
	while(i<Nb*(Nr+1)) {
10000818:	e0fffe83 	ldbu	r3,-6(fp)
1000081c:	e13ffa03 	ldbu	r4,-24(fp)
10000820:	e0bff903 	ldbu	r2,-28(fp)
10000824:	10800044 	addi	r2,r2,1
10000828:	2085383a 	mul	r2,r4,r2
1000082c:	18bfca16 	blt	r3,r2,10000758 <key_expansion+0x100>
	}
}
10000830:	0001883a 	nop
10000834:	e037883a 	mov	sp,fp
10000838:	dfc00117 	ldw	ra,4(sp)
1000083c:	df000017 	ldw	fp,0(sp)
10000840:	dec00204 	addi	sp,sp,8
10000844:	f800283a 	ret

10000848 <shift_rows>:

// Verified working.
void shift_rows(uint8_t* in, uint8_t* result) {
10000848:	defffb04 	addi	sp,sp,-20
1000084c:	df000415 	stw	fp,16(sp)
10000850:	df000404 	addi	fp,sp,16
10000854:	e13ffd15 	stw	r4,-12(fp)
10000858:	e17ffc15 	stw	r5,-16(fp)
	for(int i=0; i<4; i++) {
1000085c:	e03fff15 	stw	zero,-4(fp)
10000860:	00002706 	br	10000900 <shift_rows+0xb8>
		for(int j=0; j<4; j++) {
10000864:	e03ffe15 	stw	zero,-8(fp)
10000868:	00001f06 	br	100008e8 <shift_rows+0xa0>
			result[j*4+i] = in[((-i+3+j)%4)*4+i];
1000086c:	00c000c4 	movi	r3,3
10000870:	e0bfff17 	ldw	r2,-4(fp)
10000874:	1887c83a 	sub	r3,r3,r2
10000878:	e0bffe17 	ldw	r2,-8(fp)
1000087c:	1887883a 	add	r3,r3,r2
10000880:	00a00034 	movhi	r2,32768
10000884:	108000c4 	addi	r2,r2,3
10000888:	1884703a 	and	r2,r3,r2
1000088c:	1000040e 	bge	r2,zero,100008a0 <shift_rows+0x58>
10000890:	10bfffc4 	addi	r2,r2,-1
10000894:	00ffff04 	movi	r3,-4
10000898:	10c4b03a 	or	r2,r2,r3
1000089c:	10800044 	addi	r2,r2,1
100008a0:	100690ba 	slli	r3,r2,2
100008a4:	e0bfff17 	ldw	r2,-4(fp)
100008a8:	1885883a 	add	r2,r3,r2
100008ac:	1007883a 	mov	r3,r2
100008b0:	e0bffd17 	ldw	r2,-12(fp)
100008b4:	10c7883a 	add	r3,r2,r3
100008b8:	e0bffe17 	ldw	r2,-8(fp)
100008bc:	100890ba 	slli	r4,r2,2
100008c0:	e0bfff17 	ldw	r2,-4(fp)
100008c4:	2085883a 	add	r2,r4,r2
100008c8:	1009883a 	mov	r4,r2
100008cc:	e0bffc17 	ldw	r2,-16(fp)
100008d0:	1105883a 	add	r2,r2,r4
100008d4:	18c00003 	ldbu	r3,0(r3)
100008d8:	10c00005 	stb	r3,0(r2)
		for(int j=0; j<4; j++) {
100008dc:	e0bffe17 	ldw	r2,-8(fp)
100008e0:	10800044 	addi	r2,r2,1
100008e4:	e0bffe15 	stw	r2,-8(fp)
100008e8:	e0bffe17 	ldw	r2,-8(fp)
100008ec:	10800110 	cmplti	r2,r2,4
100008f0:	103fde1e 	bne	r2,zero,1000086c <shift_rows+0x24>
	for(int i=0; i<4; i++) {
100008f4:	e0bfff17 	ldw	r2,-4(fp)
100008f8:	10800044 	addi	r2,r2,1
100008fc:	e0bfff15 	stw	r2,-4(fp)
10000900:	e0bfff17 	ldw	r2,-4(fp)
10000904:	10800110 	cmplti	r2,r2,4
10000908:	103fd61e 	bne	r2,zero,10000864 <shift_rows+0x1c>
		}
	}
}
1000090c:	0001883a 	nop
10000910:	e037883a 	mov	sp,fp
10000914:	df000017 	ldw	fp,0(sp)
10000918:	dec00104 	addi	sp,sp,4
1000091c:	f800283a 	ret

10000920 <sub_byte>:

uint8_t sub_byte(uint8_t byte_in) {
10000920:	defffe04 	addi	sp,sp,-8
10000924:	df000115 	stw	fp,4(sp)
10000928:	df000104 	addi	fp,sp,4
1000092c:	2005883a 	mov	r2,r4
10000930:	e0bfff05 	stb	r2,-4(fp)
	return aes_sbox[(((byte_in & 0xF0) >> 4) * 16) + (byte_in & 0x0F)];
10000934:	e0bfff03 	ldbu	r2,-4(fp)
10000938:	1004d13a 	srli	r2,r2,4
1000093c:	10803fcc 	andi	r2,r2,255
10000940:	1006913a 	slli	r3,r2,4
10000944:	e0bfff03 	ldbu	r2,-4(fp)
10000948:	108003cc 	andi	r2,r2,15
1000094c:	1887883a 	add	r3,r3,r2
10000950:	008400b4 	movhi	r2,4098
10000954:	1885883a 	add	r2,r3,r2
10000958:	1091b403 	ldbu	r2,18128(r2)
}
1000095c:	e037883a 	mov	sp,fp
10000960:	df000017 	ldw	fp,0(sp)
10000964:	dec00104 	addi	sp,sp,4
10000968:	f800283a 	ret

1000096c <sub_word32>:

uint32_t sub_word32(uint32_t word_in) {
1000096c:	defffc04 	addi	sp,sp,-16
10000970:	dfc00315 	stw	ra,12(sp)
10000974:	df000215 	stw	fp,8(sp)
10000978:	df000204 	addi	fp,sp,8
1000097c:	e13ffe15 	stw	r4,-8(fp)
	uint8_t bo_3 = sub_byte((word_in & 0xFF000000) >> 24);
10000980:	e0bffe17 	ldw	r2,-8(fp)
10000984:	1004d63a 	srli	r2,r2,24
10000988:	10803fcc 	andi	r2,r2,255
1000098c:	1009883a 	mov	r4,r2
10000990:	00009200 	call	10000920 <sub_byte>
10000994:	e0bfffc5 	stb	r2,-1(fp)
	uint8_t bo_2 = sub_byte((word_in & 0x00FF0000) >> 16);
10000998:	e0bffe17 	ldw	r2,-8(fp)
1000099c:	1004d43a 	srli	r2,r2,16
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	1009883a 	mov	r4,r2
100009a8:	00009200 	call	10000920 <sub_byte>
100009ac:	e0bfff85 	stb	r2,-2(fp)
	uint8_t bo_1 = sub_byte((word_in & 0x0000FF00) >> 8);
100009b0:	e0bffe17 	ldw	r2,-8(fp)
100009b4:	1004d23a 	srli	r2,r2,8
100009b8:	10803fcc 	andi	r2,r2,255
100009bc:	1009883a 	mov	r4,r2
100009c0:	00009200 	call	10000920 <sub_byte>
100009c4:	e0bfff45 	stb	r2,-3(fp)
	uint8_t bo_0 = sub_byte((word_in & 0x000000FF));
100009c8:	e0bffe17 	ldw	r2,-8(fp)
100009cc:	10803fcc 	andi	r2,r2,255
100009d0:	1009883a 	mov	r4,r2
100009d4:	00009200 	call	10000920 <sub_byte>
100009d8:	e0bfff05 	stb	r2,-4(fp)

	return (bo_3 << 24) | (bo_2 << 16) | (bo_1 << 8) | bo_0;
100009dc:	e0bfffc3 	ldbu	r2,-1(fp)
100009e0:	1006963a 	slli	r3,r2,24
100009e4:	e0bfff83 	ldbu	r2,-2(fp)
100009e8:	1004943a 	slli	r2,r2,16
100009ec:	1886b03a 	or	r3,r3,r2
100009f0:	e0bfff43 	ldbu	r2,-3(fp)
100009f4:	1004923a 	slli	r2,r2,8
100009f8:	1886b03a 	or	r3,r3,r2
100009fc:	e0bfff03 	ldbu	r2,-4(fp)
10000a00:	1884b03a 	or	r2,r3,r2
}
10000a04:	e037883a 	mov	sp,fp
10000a08:	dfc00117 	ldw	ra,4(sp)
10000a0c:	df000017 	ldw	fp,0(sp)
10000a10:	dec00204 	addi	sp,sp,8
10000a14:	f800283a 	ret

10000a18 <sub_word>:

void sub_word(uint8_t* word_in, uint8_t* word_out) {
10000a18:	defffb04 	addi	sp,sp,-20
10000a1c:	dfc00415 	stw	ra,16(sp)
10000a20:	df000315 	stw	fp,12(sp)
10000a24:	dc000215 	stw	r16,8(sp)
10000a28:	df000304 	addi	fp,sp,12
10000a2c:	e13ffe15 	stw	r4,-8(fp)
10000a30:	e17ffd15 	stw	r5,-12(fp)
	word_out[3] = sub_byte(word_in[3]);
10000a34:	e0bffe17 	ldw	r2,-8(fp)
10000a38:	108000c4 	addi	r2,r2,3
10000a3c:	10800003 	ldbu	r2,0(r2)
10000a40:	10c03fcc 	andi	r3,r2,255
10000a44:	e0bffd17 	ldw	r2,-12(fp)
10000a48:	140000c4 	addi	r16,r2,3
10000a4c:	1809883a 	mov	r4,r3
10000a50:	00009200 	call	10000920 <sub_byte>
10000a54:	80800005 	stb	r2,0(r16)
	word_out[2] = sub_byte(word_in[2]);
10000a58:	e0bffe17 	ldw	r2,-8(fp)
10000a5c:	10800084 	addi	r2,r2,2
10000a60:	10800003 	ldbu	r2,0(r2)
10000a64:	10c03fcc 	andi	r3,r2,255
10000a68:	e0bffd17 	ldw	r2,-12(fp)
10000a6c:	14000084 	addi	r16,r2,2
10000a70:	1809883a 	mov	r4,r3
10000a74:	00009200 	call	10000920 <sub_byte>
10000a78:	80800005 	stb	r2,0(r16)
	word_out[1] = sub_byte(word_in[1]);
10000a7c:	e0bffe17 	ldw	r2,-8(fp)
10000a80:	10800044 	addi	r2,r2,1
10000a84:	10800003 	ldbu	r2,0(r2)
10000a88:	10c03fcc 	andi	r3,r2,255
10000a8c:	e0bffd17 	ldw	r2,-12(fp)
10000a90:	14000044 	addi	r16,r2,1
10000a94:	1809883a 	mov	r4,r3
10000a98:	00009200 	call	10000920 <sub_byte>
10000a9c:	80800005 	stb	r2,0(r16)
	word_out[0] = sub_byte(word_in[0]);
10000aa0:	e0bffe17 	ldw	r2,-8(fp)
10000aa4:	10800003 	ldbu	r2,0(r2)
10000aa8:	10803fcc 	andi	r2,r2,255
10000aac:	1009883a 	mov	r4,r2
10000ab0:	00009200 	call	10000920 <sub_byte>
10000ab4:	1007883a 	mov	r3,r2
10000ab8:	e0bffd17 	ldw	r2,-12(fp)
10000abc:	10c00005 	stb	r3,0(r2)
}
10000ac0:	0001883a 	nop
10000ac4:	e6ffff04 	addi	sp,fp,-4
10000ac8:	dfc00217 	ldw	ra,8(sp)
10000acc:	df000117 	ldw	fp,4(sp)
10000ad0:	dc000017 	ldw	r16,0(sp)
10000ad4:	dec00304 	addi	sp,sp,12
10000ad8:	f800283a 	ret

10000adc <rot_word>:

uint32_t rot_word(uint32_t word_in) {
10000adc:	defffe04 	addi	sp,sp,-8
10000ae0:	df000115 	stw	fp,4(sp)
10000ae4:	df000104 	addi	fp,sp,4
10000ae8:	e13fff15 	stw	r4,-4(fp)
	return (((word_in & 0x00FFFFFF) << 8) & 0xFFFFFF00) | ((word_in & 0xFF000000) >> 24);
10000aec:	e0bfff17 	ldw	r2,-4(fp)
10000af0:	1004123a 	roli	r2,r2,8
}
10000af4:	e037883a 	mov	sp,fp
10000af8:	df000017 	ldw	fp,0(sp)
10000afc:	dec00104 	addi	sp,sp,4
10000b00:	f800283a 	ret

10000b04 <mix_columns>:

void mix_columns(uint8_t* mat_in, uint8_t* result) {
10000b04:	defff304 	addi	sp,sp,-52
10000b08:	dfc00c15 	stw	ra,48(sp)
10000b0c:	df000b15 	stw	fp,44(sp)
10000b10:	df000b04 	addi	fp,sp,44
10000b14:	e13ff615 	stw	r4,-40(fp)
10000b18:	e17ff515 	stw	r5,-44(fp)
	uint8_t state_deasm[4][4];	// State_disassembled.
	uint8_t result_deasm[4][4];	// Result disassembled.
	
	memcpy(&state_deasm, mat_in, sizeof(state_deasm));
10000b1c:	e0fff617 	ldw	r3,-40(fp)
10000b20:	e0bffbc4 	addi	r2,fp,-17
10000b24:	1809883a 	mov	r4,r3
10000b28:	00c00404 	movi	r3,16
10000b2c:	180d883a 	mov	r6,r3
10000b30:	200b883a 	mov	r5,r4
10000b34:	1009883a 	mov	r4,r2
10000b38:	00157f80 	call	100157f8 <memcpy>
		
	// Calculate.
	for(uint8_t i=0; i<4; i++) {
10000b3c:	e03fffc5 	stb	zero,-1(fp)
10000b40:	00008f06 	br	10000d80 <mix_columns+0x27c>
		result_deasm[i][3] = 
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000b44:	e0bfffc3 	ldbu	r2,-1(fp)
10000b48:	100490ba 	slli	r2,r2,2
10000b4c:	e085883a 	add	r2,fp,r2
10000b50:	10bffc83 	ldbu	r2,-14(r2)
10000b54:	10803fcc 	andi	r2,r2,255
10000b58:	10c001a4 	muli	r3,r2,6
10000b5c:	008400b4 	movhi	r2,4098
10000b60:	1885883a 	add	r2,r3,r2
10000b64:	10d82703 	ldbu	r3,24732(r2)
10000b68:	e0bfffc3 	ldbu	r2,-1(fp)
10000b6c:	100490ba 	slli	r2,r2,2
10000b70:	e085883a 	add	r2,fp,r2
10000b74:	10bffc43 	ldbu	r2,-15(r2)
10000b78:	10803fcc 	andi	r2,r2,255
10000b7c:	110001a4 	muli	r4,r2,6
10000b80:	008400b4 	movhi	r2,4098
10000b84:	2085883a 	add	r2,r4,r2
10000b88:	10982743 	ldbu	r2,24733(r2)
		result_deasm[i][3] = 
10000b8c:	1884f03a 	xor	r2,r3,r2
10000b90:	1007883a 	mov	r3,r2
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000b94:	e0bfffc3 	ldbu	r2,-1(fp)
10000b98:	100490ba 	slli	r2,r2,2
10000b9c:	e085883a 	add	r2,fp,r2
10000ba0:	10bffc03 	ldbu	r2,-16(r2)
		result_deasm[i][3] = 
10000ba4:	1884f03a 	xor	r2,r3,r2
10000ba8:	1009883a 	mov	r4,r2
			gf_mul[state_deasm[i][3]][0] ^ gf_mul[state_deasm[i][2]][1] ^ state_deasm[i][1] ^ state_deasm[i][0];
10000bac:	e0bfffc3 	ldbu	r2,-1(fp)
10000bb0:	100490ba 	slli	r2,r2,2
10000bb4:	e085883a 	add	r2,fp,r2
10000bb8:	10fffbc3 	ldbu	r3,-17(r2)
		result_deasm[i][3] = 
10000bbc:	e0bfffc3 	ldbu	r2,-1(fp)
10000bc0:	20c6f03a 	xor	r3,r4,r3
10000bc4:	100490ba 	slli	r2,r2,2
10000bc8:	e085883a 	add	r2,fp,r2
10000bcc:	10fff885 	stb	r3,-30(r2)
		result_deasm[i][2] = 
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000bd0:	e0bfffc3 	ldbu	r2,-1(fp)
10000bd4:	100490ba 	slli	r2,r2,2
10000bd8:	e085883a 	add	r2,fp,r2
10000bdc:	10fffc83 	ldbu	r3,-14(r2)
10000be0:	e0bfffc3 	ldbu	r2,-1(fp)
10000be4:	100490ba 	slli	r2,r2,2
10000be8:	e085883a 	add	r2,fp,r2
10000bec:	10bffc43 	ldbu	r2,-15(r2)
10000bf0:	10803fcc 	andi	r2,r2,255
10000bf4:	110001a4 	muli	r4,r2,6
10000bf8:	008400b4 	movhi	r2,4098
10000bfc:	2085883a 	add	r2,r4,r2
10000c00:	10982703 	ldbu	r2,24732(r2)
		result_deasm[i][2] = 
10000c04:	1884f03a 	xor	r2,r3,r2
10000c08:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000c0c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c10:	100490ba 	slli	r2,r2,2
10000c14:	e085883a 	add	r2,fp,r2
10000c18:	10bffc03 	ldbu	r2,-16(r2)
10000c1c:	10803fcc 	andi	r2,r2,255
10000c20:	10c001a4 	muli	r3,r2,6
10000c24:	008400b4 	movhi	r2,4098
10000c28:	1885883a 	add	r2,r3,r2
10000c2c:	10982743 	ldbu	r2,24733(r2)
		result_deasm[i][2] = 
10000c30:	2084f03a 	xor	r2,r4,r2
10000c34:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ gf_mul[state_deasm[i][2]][0] ^ gf_mul[state_deasm[i][1]][1] ^ state_deasm[i][0];
10000c38:	e0bfffc3 	ldbu	r2,-1(fp)
10000c3c:	100490ba 	slli	r2,r2,2
10000c40:	e085883a 	add	r2,fp,r2
10000c44:	10fffbc3 	ldbu	r3,-17(r2)
		result_deasm[i][2] = 
10000c48:	e0bfffc3 	ldbu	r2,-1(fp)
10000c4c:	20c6f03a 	xor	r3,r4,r3
10000c50:	100490ba 	slli	r2,r2,2
10000c54:	e085883a 	add	r2,fp,r2
10000c58:	10fff845 	stb	r3,-31(r2)
		result_deasm[i][1] = 
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000c5c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c60:	100490ba 	slli	r2,r2,2
10000c64:	e085883a 	add	r2,fp,r2
10000c68:	10fffc83 	ldbu	r3,-14(r2)
10000c6c:	e0bfffc3 	ldbu	r2,-1(fp)
10000c70:	100490ba 	slli	r2,r2,2
10000c74:	e085883a 	add	r2,fp,r2
10000c78:	10bffc43 	ldbu	r2,-15(r2)
		result_deasm[i][1] = 
10000c7c:	1884f03a 	xor	r2,r3,r2
10000c80:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000c84:	e0bfffc3 	ldbu	r2,-1(fp)
10000c88:	100490ba 	slli	r2,r2,2
10000c8c:	e085883a 	add	r2,fp,r2
10000c90:	10bffc03 	ldbu	r2,-16(r2)
10000c94:	10803fcc 	andi	r2,r2,255
10000c98:	10c001a4 	muli	r3,r2,6
10000c9c:	008400b4 	movhi	r2,4098
10000ca0:	1885883a 	add	r2,r3,r2
10000ca4:	10982703 	ldbu	r2,24732(r2)
		result_deasm[i][1] = 
10000ca8:	2084f03a 	xor	r2,r4,r2
10000cac:	1009883a 	mov	r4,r2
			state_deasm[i][3] ^ state_deasm[i][2] ^ gf_mul[state_deasm[i][1]][0] ^ gf_mul[state_deasm[i][0]][1];
10000cb0:	e0bfffc3 	ldbu	r2,-1(fp)
10000cb4:	100490ba 	slli	r2,r2,2
10000cb8:	e085883a 	add	r2,fp,r2
10000cbc:	10bffbc3 	ldbu	r2,-17(r2)
10000cc0:	10803fcc 	andi	r2,r2,255
10000cc4:	10c001a4 	muli	r3,r2,6
10000cc8:	008400b4 	movhi	r2,4098
10000ccc:	1885883a 	add	r2,r3,r2
10000cd0:	10d82743 	ldbu	r3,24733(r2)
		result_deasm[i][1] = 
10000cd4:	e0bfffc3 	ldbu	r2,-1(fp)
10000cd8:	20c6f03a 	xor	r3,r4,r3
10000cdc:	100490ba 	slli	r2,r2,2
10000ce0:	e085883a 	add	r2,fp,r2
10000ce4:	10fff805 	stb	r3,-32(r2)
		result_deasm[i][0] = 
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000ce8:	e0bfffc3 	ldbu	r2,-1(fp)
10000cec:	100490ba 	slli	r2,r2,2
10000cf0:	e085883a 	add	r2,fp,r2
10000cf4:	10bffc83 	ldbu	r2,-14(r2)
10000cf8:	10803fcc 	andi	r2,r2,255
10000cfc:	10c001a4 	muli	r3,r2,6
10000d00:	008400b4 	movhi	r2,4098
10000d04:	1885883a 	add	r2,r3,r2
10000d08:	10d82743 	ldbu	r3,24733(r2)
10000d0c:	e0bfffc3 	ldbu	r2,-1(fp)
10000d10:	100490ba 	slli	r2,r2,2
10000d14:	e085883a 	add	r2,fp,r2
10000d18:	10bffc43 	ldbu	r2,-15(r2)
		result_deasm[i][0] = 
10000d1c:	1884f03a 	xor	r2,r3,r2
10000d20:	1007883a 	mov	r3,r2
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000d24:	e0bfffc3 	ldbu	r2,-1(fp)
10000d28:	100490ba 	slli	r2,r2,2
10000d2c:	e085883a 	add	r2,fp,r2
10000d30:	10bffc03 	ldbu	r2,-16(r2)
		result_deasm[i][0] = 
10000d34:	1884f03a 	xor	r2,r3,r2
10000d38:	1009883a 	mov	r4,r2
			gf_mul[state_deasm[i][3]][1] ^ state_deasm[i][2] ^ state_deasm[i][1] ^ gf_mul[state_deasm[i][0]][0];
10000d3c:	e0bfffc3 	ldbu	r2,-1(fp)
10000d40:	100490ba 	slli	r2,r2,2
10000d44:	e085883a 	add	r2,fp,r2
10000d48:	10bffbc3 	ldbu	r2,-17(r2)
10000d4c:	10803fcc 	andi	r2,r2,255
10000d50:	10c001a4 	muli	r3,r2,6
10000d54:	008400b4 	movhi	r2,4098
10000d58:	1885883a 	add	r2,r3,r2
10000d5c:	10d82703 	ldbu	r3,24732(r2)
		result_deasm[i][0] = 
10000d60:	e0bfffc3 	ldbu	r2,-1(fp)
10000d64:	20c6f03a 	xor	r3,r4,r3
10000d68:	100490ba 	slli	r2,r2,2
10000d6c:	e085883a 	add	r2,fp,r2
10000d70:	10fff7c5 	stb	r3,-33(r2)
	for(uint8_t i=0; i<4; i++) {
10000d74:	e0bfffc3 	ldbu	r2,-1(fp)
10000d78:	10800044 	addi	r2,r2,1
10000d7c:	e0bfffc5 	stb	r2,-1(fp)
10000d80:	e0bfffc3 	ldbu	r2,-1(fp)
10000d84:	10800130 	cmpltui	r2,r2,4
10000d88:	103f6e1e 	bne	r2,zero,10000b44 <mix_columns+0x40>
	}
	
	memcpy(result, &result_deasm, sizeof(state_deasm));
10000d8c:	e0bff517 	ldw	r2,-44(fp)
10000d90:	1009883a 	mov	r4,r2
10000d94:	e0bff7c4 	addi	r2,fp,-33
10000d98:	00c00404 	movi	r3,16
10000d9c:	180d883a 	mov	r6,r3
10000da0:	100b883a 	mov	r5,r2
10000da4:	00157f80 	call	100157f8 <memcpy>
}
10000da8:	0001883a 	nop
10000dac:	e037883a 	mov	sp,fp
10000db0:	dfc00117 	ldw	ra,4(sp)
10000db4:	df000017 	ldw	fp,0(sp)
10000db8:	dec00204 	addi	sp,sp,8
10000dbc:	f800283a 	ret

10000dc0 <add_round_key>:

// Each have a shape of uint32_t[4]
void add_round_key(uint32_t* state, uint32_t* round_key, uint32_t* result) {
10000dc0:	defffc04 	addi	sp,sp,-16
10000dc4:	df000315 	stw	fp,12(sp)
10000dc8:	df000304 	addi	fp,sp,12
10000dcc:	e13fff15 	stw	r4,-4(fp)
10000dd0:	e17ffe15 	stw	r5,-8(fp)
10000dd4:	e1bffd15 	stw	r6,-12(fp)
	result[0] = state[0] ^ round_key[0];
10000dd8:	e0bfff17 	ldw	r2,-4(fp)
10000ddc:	10c00017 	ldw	r3,0(r2)
10000de0:	e0bffe17 	ldw	r2,-8(fp)
10000de4:	10800017 	ldw	r2,0(r2)
10000de8:	1886f03a 	xor	r3,r3,r2
10000dec:	e0bffd17 	ldw	r2,-12(fp)
10000df0:	10c00015 	stw	r3,0(r2)
	result[1] = state[1] ^ round_key[1];
10000df4:	e0bfff17 	ldw	r2,-4(fp)
10000df8:	10800104 	addi	r2,r2,4
10000dfc:	11000017 	ldw	r4,0(r2)
10000e00:	e0bffe17 	ldw	r2,-8(fp)
10000e04:	10800104 	addi	r2,r2,4
10000e08:	10c00017 	ldw	r3,0(r2)
10000e0c:	e0bffd17 	ldw	r2,-12(fp)
10000e10:	10800104 	addi	r2,r2,4
10000e14:	20c6f03a 	xor	r3,r4,r3
10000e18:	10c00015 	stw	r3,0(r2)
	result[2] = state[2] ^ round_key[2];
10000e1c:	e0bfff17 	ldw	r2,-4(fp)
10000e20:	10800204 	addi	r2,r2,8
10000e24:	11000017 	ldw	r4,0(r2)
10000e28:	e0bffe17 	ldw	r2,-8(fp)
10000e2c:	10800204 	addi	r2,r2,8
10000e30:	10c00017 	ldw	r3,0(r2)
10000e34:	e0bffd17 	ldw	r2,-12(fp)
10000e38:	10800204 	addi	r2,r2,8
10000e3c:	20c6f03a 	xor	r3,r4,r3
10000e40:	10c00015 	stw	r3,0(r2)
	result[3] = state[3] ^ round_key[3];
10000e44:	e0bfff17 	ldw	r2,-4(fp)
10000e48:	10800304 	addi	r2,r2,12
10000e4c:	11000017 	ldw	r4,0(r2)
10000e50:	e0bffe17 	ldw	r2,-8(fp)
10000e54:	10800304 	addi	r2,r2,12
10000e58:	10c00017 	ldw	r3,0(r2)
10000e5c:	e0bffd17 	ldw	r2,-12(fp)
10000e60:	10800304 	addi	r2,r2,12
10000e64:	20c6f03a 	xor	r3,r4,r3
10000e68:	10c00015 	stw	r3,0(r2)
}
10000e6c:	0001883a 	nop
10000e70:	e037883a 	mov	sp,fp
10000e74:	df000017 	ldw	fp,0(sp)
10000e78:	dec00104 	addi	sp,sp,4
10000e7c:	f800283a 	ret

10000e80 <transpose>:

void transpose(uint8_t* arr_in, uint8_t* arr_out) {
10000e80:	defffb04 	addi	sp,sp,-20
10000e84:	df000415 	stw	fp,16(sp)
10000e88:	df000404 	addi	fp,sp,16
10000e8c:	e13ffd15 	stw	r4,-12(fp)
10000e90:	e17ffc15 	stw	r5,-16(fp)
	for(int i=0; i<4; i++) {
10000e94:	e03fff15 	stw	zero,-4(fp)
10000e98:	00001b06 	br	10000f08 <transpose+0x88>
		for(int j=0; j<4; j++) {
10000e9c:	e03ffe15 	stw	zero,-8(fp)
10000ea0:	00001306 	br	10000ef0 <transpose+0x70>
			arr_out[j*4+i] = arr_in[i*4+j];
10000ea4:	e0bfff17 	ldw	r2,-4(fp)
10000ea8:	100690ba 	slli	r3,r2,2
10000eac:	e0bffe17 	ldw	r2,-8(fp)
10000eb0:	1885883a 	add	r2,r3,r2
10000eb4:	1007883a 	mov	r3,r2
10000eb8:	e0bffd17 	ldw	r2,-12(fp)
10000ebc:	10c7883a 	add	r3,r2,r3
10000ec0:	e0bffe17 	ldw	r2,-8(fp)
10000ec4:	100890ba 	slli	r4,r2,2
10000ec8:	e0bfff17 	ldw	r2,-4(fp)
10000ecc:	2085883a 	add	r2,r4,r2
10000ed0:	1009883a 	mov	r4,r2
10000ed4:	e0bffc17 	ldw	r2,-16(fp)
10000ed8:	1105883a 	add	r2,r2,r4
10000edc:	18c00003 	ldbu	r3,0(r3)
10000ee0:	10c00005 	stb	r3,0(r2)
		for(int j=0; j<4; j++) {
10000ee4:	e0bffe17 	ldw	r2,-8(fp)
10000ee8:	10800044 	addi	r2,r2,1
10000eec:	e0bffe15 	stw	r2,-8(fp)
10000ef0:	e0bffe17 	ldw	r2,-8(fp)
10000ef4:	10800110 	cmplti	r2,r2,4
10000ef8:	103fea1e 	bne	r2,zero,10000ea4 <transpose+0x24>
	for(int i=0; i<4; i++) {
10000efc:	e0bfff17 	ldw	r2,-4(fp)
10000f00:	10800044 	addi	r2,r2,1
10000f04:	e0bfff15 	stw	r2,-4(fp)
10000f08:	e0bfff17 	ldw	r2,-4(fp)
10000f0c:	10800110 	cmplti	r2,r2,4
10000f10:	103fe21e 	bne	r2,zero,10000e9c <transpose+0x1c>
		}
	}
}
10000f14:	0001883a 	nop
10000f18:	e037883a 	mov	sp,fp
10000f1c:	df000017 	ldw	fp,0(sp)
10000f20:	dec00104 	addi	sp,sp,4
10000f24:	f800283a 	ret

10000f28 <screen_test>:
#include "core.h"
#include "hardware.h"
#include "tile_eng_driver.h"
#include <stdint.h>

void screen_test() {
10000f28:	deffc104 	addi	sp,sp,-252
10000f2c:	dfc03e15 	stw	ra,248(sp)
10000f30:	df003d15 	stw	fp,244(sp)
10000f34:	df003d04 	addi	fp,sp,244
	printf("Screen Test is running!");
10000f38:	010400b4 	movhi	r4,4098
10000f3c:	21123404 	addi	r4,r4,18640
10000f40:	0015ba80 	call	10015ba8 <printf>
	palette_ptr[0b00000] = 0x117180;
10000f44:	00c02004 	movi	r3,128
10000f48:	00800474 	movhi	r2,17
10000f4c:	109c6004 	addi	r2,r2,29056
10000f50:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00001] = 0x6EECFF;
10000f54:	00c02104 	movi	r3,132
10000f58:	00801bf4 	movhi	r2,111
10000f5c:	10bb3fc4 	addi	r2,r2,-4865
10000f60:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00010] = 0x1BB4CC;
10000f64:	00c02204 	movi	r3,136
10000f68:	00800734 	movhi	r2,28
10000f6c:	10ad3304 	addi	r2,r2,-19252
10000f70:	18800015 	stw	r2,0(r3)
	palette_ptr[0b00011] = 0x21E3FF;
10000f74:	00c02304 	movi	r3,140
10000f78:	008008b4 	movhi	r2,34
10000f7c:	10b8ffc4 	addi	r2,r2,-7169
10000f80:	18800015 	stw	r2,0(r3)

	Palette newPalette;
	newPalette.paletteId = 1;
10000f84:	00800044 	movi	r2,1
10000f88:	e0bff615 	stw	r2,-40(fp)
	newPalette.colors[0] = 0x723E80;
10000f8c:	00801cb4 	movhi	r2,114
10000f90:	108fa004 	addi	r2,r2,16000
10000f94:	e0bff715 	stw	r2,-36(fp)
	newPalette.colors[1] = 0xF3C7FF;
10000f98:	00803d34 	movhi	r2,244
10000f9c:	10b1ffc4 	addi	r2,r2,-14337
10000fa0:	e0bff815 	stw	r2,-32(fp)
	newPalette.colors[2] = 0x796380;
10000fa4:	00801e74 	movhi	r2,121
10000fa8:	1098e004 	addi	r2,r2,25472
10000fac:	e0bff915 	stw	r2,-28(fp)
	newPalette.colors[3] = 0xE57DFF;
10000fb0:	00803974 	movhi	r2,229
10000fb4:	109f7fc4 	addi	r2,r2,32255
10000fb8:	e0bffa15 	stw	r2,-24(fp)
	writePalette(&newPalette);
10000fbc:	e0bff604 	addi	r2,fp,-40
10000fc0:	1009883a 	mov	r4,r2
10000fc4:	00047e00 	call	100047e0 <writePalette>

	Palette newPalette2;
	newPalette2.paletteId = 2;
10000fc8:	00800084 	movi	r2,2
10000fcc:	e0bff115 	stw	r2,-60(fp)
	newPalette2.colors[0] = 0x2F802E;
10000fd0:	00800c34 	movhi	r2,48
10000fd4:	10a00b84 	addi	r2,r2,-32722
10000fd8:	e0bff215 	stw	r2,-56(fp)
	newPalette2.colors[3] = 0x5EFF5B;
10000fdc:	008017f4 	movhi	r2,95
10000fe0:	10bfd6c4 	addi	r2,r2,-165
10000fe4:	e0bff515 	stw	r2,-44(fp)
	writePalette(&newPalette2);
10000fe8:	e0bff104 	addi	r2,fp,-60
10000fec:	1009883a 	mov	r4,r2
10000ff0:	00047e00 	call	100047e0 <writePalette>

	Palette newPalette3;
	newPalette3.paletteId = 3;
10000ff4:	008000c4 	movi	r2,3
10000ff8:	e0bfec15 	stw	r2,-80(fp)
	newPalette3.colors[0] = 0x805E1B;
10000ffc:	00802034 	movhi	r2,128
10001000:	109786c4 	addi	r2,r2,24091
10001004:	e0bfed15 	stw	r2,-76(fp)
	newPalette3.colors[3] = 0xFFBC36;
10001008:	00804034 	movhi	r2,256
1000100c:	10af0d84 	addi	r2,r2,-17354
10001010:	e0bff015 	stw	r2,-64(fp)
	writePalette(&newPalette3);
10001014:	e0bfec04 	addi	r2,fp,-80
10001018:	1009883a 	mov	r4,r2
1000101c:	00047e00 	call	100047e0 <writePalette>

	Sprite wavey;
	wavey.sprite_id = 0;
10001020:	e03fe38d 	sth	zero,-114(fp)
	char wavey_mat[16][8] = {
10001024:	e0ffc384 	addi	r3,fp,-242
10001028:	008400b4 	movhi	r2,4098
1000102c:	10924384 	addi	r2,r2,18702
10001030:	01002004 	movi	r4,128
10001034:	200d883a 	mov	r6,r4
10001038:	100b883a 	mov	r5,r2
1000103c:	1809883a 	mov	r4,r3
10001040:	00157f80 	call	100157f8 <memcpy>
			"        ",
			"        ",
			"        ",
	};

	parseSprite(&wavey, wavey_mat);
10001044:	e0ffc384 	addi	r3,fp,-242
10001048:	e0bfe384 	addi	r2,fp,-114
1000104c:	180b883a 	mov	r5,r3
10001050:	1009883a 	mov	r4,r2
10001054:	000498c0 	call	1000498c <parseSprite>
	for(int i=0;i<15;i++) {
10001058:	e03fff15 	stw	zero,-4(fp)
1000105c:	00000c06 	br	10001090 <screen_test+0x168>
		printf("%04x\n",wavey.lines[i]);
10001060:	e0bfff17 	ldw	r2,-4(fp)
10001064:	1085883a 	add	r2,r2,r2
10001068:	e085883a 	add	r2,fp,r2
1000106c:	10bfe40b 	ldhu	r2,-112(r2)
10001070:	10bfffcc 	andi	r2,r2,65535
10001074:	100b883a 	mov	r5,r2
10001078:	010400b4 	movhi	r4,4098
1000107c:	21123a04 	addi	r4,r4,18664
10001080:	0015ba80 	call	10015ba8 <printf>
	for(int i=0;i<15;i++) {
10001084:	e0bfff17 	ldw	r2,-4(fp)
10001088:	10800044 	addi	r2,r2,1
1000108c:	e0bfff15 	stw	r2,-4(fp)
10001090:	e0bfff17 	ldw	r2,-4(fp)
10001094:	108003d0 	cmplti	r2,r2,15
10001098:	103ff11e 	bne	r2,zero,10001060 <screen_test+0x138>
	}
	printf("\n\n");
1000109c:	010400b4 	movhi	r4,4098
100010a0:	21123c04 	addi	r4,r4,18672
100010a4:	0015ccc0 	call	10015ccc <puts>

	writeSprite(&wavey);
100010a8:	e0bfe384 	addi	r2,fp,-114
100010ac:	1009883a 	mov	r4,r2
100010b0:	0004a040 	call	10004a04 <writeSprite>
	printf("\n\n");
100010b4:	010400b4 	movhi	r4,4098
100010b8:	21123c04 	addi	r4,r4,18672
100010bc:	0015ccc0 	call	10015ccc <puts>

	for(int i=0;i<8;i++) {
100010c0:	e03ffe15 	stw	zero,-8(fp)
100010c4:	00000b06 	br	100010f4 <screen_test+0x1cc>
		printf("%08x\n",spriteram_ptr[i]);
100010c8:	e0bffe17 	ldw	r2,-8(fp)
100010cc:	100490ba 	slli	r2,r2,2
100010d0:	10860004 	addi	r2,r2,6144
100010d4:	10800017 	ldw	r2,0(r2)
100010d8:	100b883a 	mov	r5,r2
100010dc:	010400b4 	movhi	r4,4098
100010e0:	21123d04 	addi	r4,r4,18676
100010e4:	0015ba80 	call	10015ba8 <printf>
	for(int i=0;i<8;i++) {
100010e8:	e0bffe17 	ldw	r2,-8(fp)
100010ec:	10800044 	addi	r2,r2,1
100010f0:	e0bffe15 	stw	r2,-8(fp)
100010f4:	e0bffe17 	ldw	r2,-8(fp)
100010f8:	10800210 	cmplti	r2,r2,8
100010fc:	103ff21e 	bne	r2,zero,100010c8 <screen_test+0x1a0>
	}

	// spriteram_ptr[0] = 0xFFFFFFFF;
	// spriteram_ptr[1] = 0xAAAAAAAA;
	uint8_t counter = 0;
10001100:	e03ffdc5 	stb	zero,-9(fp)
	for(int i=0; i<80; i++) {
10001104:	e03ffc15 	stw	zero,-16(fp)
10001108:	00001606 	br	10001164 <screen_test+0x23c>
		for(int j=0; j<30; j++) {
1000110c:	e03ffb15 	stw	zero,-20(fp)
10001110:	00000e06 	br	1000114c <screen_test+0x224>
			drawTile(i,j,counter&0x03,128);
10001114:	e0bffdc3 	ldbu	r2,-9(fp)
10001118:	108000cc 	andi	r2,r2,3
1000111c:	01c02004 	movi	r7,128
10001120:	100d883a 	mov	r6,r2
10001124:	e17ffb17 	ldw	r5,-20(fp)
10001128:	e13ffc17 	ldw	r4,-16(fp)
1000112c:	00046b40 	call	100046b4 <drawTile>
			counter = (counter+1) & 0x7F;
10001130:	e0bffdc3 	ldbu	r2,-9(fp)
10001134:	10800044 	addi	r2,r2,1
10001138:	10801fcc 	andi	r2,r2,127
1000113c:	e0bffdc5 	stb	r2,-9(fp)
		for(int j=0; j<30; j++) {
10001140:	e0bffb17 	ldw	r2,-20(fp)
10001144:	10800044 	addi	r2,r2,1
10001148:	e0bffb15 	stw	r2,-20(fp)
1000114c:	e0bffb17 	ldw	r2,-20(fp)
10001150:	10800790 	cmplti	r2,r2,30
10001154:	103fef1e 	bne	r2,zero,10001114 <screen_test+0x1ec>
	for(int i=0; i<80; i++) {
10001158:	e0bffc17 	ldw	r2,-16(fp)
1000115c:	10800044 	addi	r2,r2,1
10001160:	e0bffc15 	stw	r2,-16(fp)
10001164:	e0bffc17 	ldw	r2,-16(fp)
10001168:	10801410 	cmplti	r2,r2,80
1000116c:	103fe71e 	bne	r2,zero,1000110c <screen_test+0x1e4>
		}
	}

	writeText(0,0,"Score",0);
10001170:	000f883a 	mov	r7,zero
10001174:	018400b4 	movhi	r6,4098
10001178:	31923f04 	addi	r6,r6,18684
1000117c:	000b883a 	mov	r5,zero
10001180:	0009883a 	mov	r4,zero
10001184:	0004ad80 	call	10004ad8 <writeText>
	writeText(0,2,"Highscore",0);
10001188:	000f883a 	mov	r7,zero
1000118c:	018400b4 	movhi	r6,4098
10001190:	31924104 	addi	r6,r6,18692
10001194:	01400084 	movi	r5,2
10001198:	0009883a 	mov	r4,zero
1000119c:	0004ad80 	call	10004ad8 <writeText>
}
100011a0:	0001883a 	nop
100011a4:	e037883a 	mov	sp,fp
100011a8:	dfc00117 	ldw	ra,4(sp)
100011ac:	df000017 	ldw	fp,0(sp)
100011b0:	dec00204 	addi	sp,sp,8
100011b4:	f800283a 	ret

100011b8 <IO_init>:
//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
100011b8:	deffff04 	addi	sp,sp,-4
100011bc:	df000015 	stw	fp,0(sp)
100011c0:	d839883a 	mov	fp,sp
	*otg_hpi_reset = 0xFF;
100011c4:	00801404 	movi	r2,80
100011c8:	00ffffc4 	movi	r3,-1
100011cc:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
100011d0:	00801804 	movi	r2,96
100011d4:	00ffffc4 	movi	r3,-1
100011d8:	10c00005 	stb	r3,0(r2)
	*otg_hpi_r = 0xFF;
100011dc:	00804004 	movi	r2,256
100011e0:	00ffffc4 	movi	r3,-1
100011e4:	10c00005 	stb	r3,0(r2)
	*otg_hpi_w = 0xFF;
100011e8:	00801c04 	movi	r2,112
100011ec:	00ffffc4 	movi	r3,-1
100011f0:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = 0;
100011f4:	00801004 	movi	r2,64
100011f8:	10000015 	stw	zero,0(r2)
	*otg_hpi_data = 0;
100011fc:	00804404 	movi	r2,272
10001200:	10000015 	stw	zero,0(r2)
	// Reset OTG chip
	*otg_hpi_cs = 0;
10001204:	00801804 	movi	r2,96
10001208:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0;
1000120c:	00801404 	movi	r2,80
10001210:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0xFF;
10001214:	00801404 	movi	r2,80
10001218:	00ffffc4 	movi	r3,-1
1000121c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
10001220:	00801804 	movi	r2,96
10001224:	00ffffc4 	movi	r3,-1
10001228:	10c00005 	stb	r3,0(r2)
}
1000122c:	0001883a 	nop
10001230:	e037883a 	mov	sp,fp
10001234:	df000017 	ldw	fp,0(sp)
10001238:	dec00104 	addi	sp,sp,4
1000123c:	f800283a 	ret

10001240 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data)
{
10001240:	defffd04 	addi	sp,sp,-12
10001244:	df000215 	stw	fp,8(sp)
10001248:	df000204 	addi	fp,sp,8
1000124c:	2005883a 	mov	r2,r4
10001250:	2807883a 	mov	r3,r5
10001254:	e0bfff05 	stb	r2,-4(fp)
10001258:	1805883a 	mov	r2,r3
1000125c:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
10001260:	00801004 	movi	r2,64
10001264:	e0ffff03 	ldbu	r3,-4(fp)
10001268:	10c00015 	stw	r3,0(r2)
	*otg_hpi_data = Data;
1000126c:	00804404 	movi	r2,272
10001270:	e0fffe0b 	ldhu	r3,-8(fp)
10001274:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
10001278:	00801804 	movi	r2,96
1000127c:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0;
10001280:	00801c04 	movi	r2,112
10001284:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0xFF;
10001288:	00801c04 	movi	r2,112
1000128c:	00ffffc4 	movi	r3,-1
10001290:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
10001294:	00801804 	movi	r2,96
10001298:	00ffffc4 	movi	r3,-1
1000129c:	10c00005 	stb	r3,0(r2)
	//printf("Wrote %x to HPI %d\n", Data, Address);
}
100012a0:	0001883a 	nop
100012a4:	e037883a 	mov	sp,fp
100012a8:	df000017 	ldw	fp,0(sp)
100012ac:	dec00104 	addi	sp,sp,4
100012b0:	f800283a 	ret

100012b4 <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
100012b4:	defffd04 	addi	sp,sp,-12
100012b8:	df000215 	stw	fp,8(sp)
100012bc:	df000204 	addi	fp,sp,8
100012c0:	2005883a 	mov	r2,r4
100012c4:	e0bffe05 	stb	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	*otg_hpi_address = Address;
100012c8:	00801004 	movi	r2,64
100012cc:	e0fffe03 	ldbu	r3,-8(fp)
100012d0:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
100012d4:	00801804 	movi	r2,96
100012d8:	10000005 	stb	zero,0(r2)
	*otg_hpi_r = 0;
100012dc:	00804004 	movi	r2,256
100012e0:	10000005 	stb	zero,0(r2)
	temp = *otg_hpi_data;
100012e4:	00804404 	movi	r2,272
100012e8:	10800017 	ldw	r2,0(r2)
100012ec:	e0bfff8d 	sth	r2,-2(fp)
	*otg_hpi_r = 0xFF;
100012f0:	00804004 	movi	r2,256
100012f4:	00ffffc4 	movi	r3,-1
100012f8:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 0xFF;
100012fc:	00801804 	movi	r2,96
10001300:	00ffffc4 	movi	r3,-1
10001304:	10c00005 	stb	r3,0(r2)
	//printf("%x\n",temp);
	//printf("Read %x from HPI %d\n", temp, Address);
	return temp;
10001308:	e0bfff8b 	ldhu	r2,-2(fp)
}
1000130c:	e037883a 	mov	sp,fp
10001310:	df000017 	ldw	fp,0(sp)
10001314:	dec00104 	addi	sp,sp,4
10001318:	f800283a 	ret

1000131c <init_game>:
// In the board configuration, it contains additional PLAYER_POS, GHOST_INKY, GHOST_BLINKY, GHOST_CLYDE and GHOST_PINKY.
// These values are only used for initialization.

// Initialize a game.
// The game variable must already have space allocated.
void init_game(Game* game) {
1000131c:	defffc04 	addi	sp,sp,-16
10001320:	dfc00315 	stw	ra,12(sp)
10001324:	df000215 	stw	fp,8(sp)
10001328:	df000204 	addi	fp,sp,8
1000132c:	e13ffe15 	stw	r4,-8(fp)
    uint8_t current_board = 0;
10001330:	e03fff45 	stb	zero,-3(fp)
    initScreen();
10001334:	0002df40 	call	10002df4 <initScreen>

    game->candy_count = 0;
10001338:	e0bffe17 	ldw	r2,-8(fp)
1000133c:	1000ea0d 	sth	zero,936(r2)
    game->state = PREINIT;
10001340:	e0bffe17 	ldw	r2,-8(fp)
10001344:	1000e915 	stw	zero,932(r2)

    // Find tiles in this map and assign them.
    uint8_t i, j;
    for(i=0; i<15; i+=1) {
10001348:	e03fffc5 	stb	zero,-1(fp)
1000134c:	00010106 	br	10001754 <init_game+0x438>
        for(j=0; j<15; j+=1) {
10001350:	e03fff85 	stb	zero,-2(fp)
10001354:	0000f906 	br	1000173c <init_game+0x420>
            if(GAME_BOARDS[current_board][i][j] == PLAYER_POS) {
10001358:	e0ffff43 	ldbu	r3,-3(fp)
1000135c:	e13fffc3 	ldbu	r4,-1(fp)
10001360:	e0bfff83 	ldbu	r2,-2(fp)
10001364:	210003e4 	muli	r4,r4,15
10001368:	18c03864 	muli	r3,r3,225
1000136c:	20c7883a 	add	r3,r4,r3
10001370:	1887883a 	add	r3,r3,r2
10001374:	008400b4 	movhi	r2,4098
10001378:	1885883a 	add	r2,r3,r2
1000137c:	1099b703 	ldbu	r2,26332(r2)
10001380:	10803fcc 	andi	r2,r2,255
10001384:	10800218 	cmpnei	r2,r2,8
10001388:	1000161e 	bne	r2,zero,100013e4 <init_game+0xc8>
                game->player.xpos = i;
1000138c:	e0bffe17 	ldw	r2,-8(fp)
10001390:	e0ffffc3 	ldbu	r3,-1(fp)
10001394:	10c0e105 	stb	r3,900(r2)
                game->player.ypos = j;
10001398:	e0bffe17 	ldw	r2,-8(fp)
1000139c:	e0ffff83 	ldbu	r3,-2(fp)
100013a0:	10c0e145 	stb	r3,901(r2)
                game->game_map[i][j] = CANDY;
100013a4:	e13fffc3 	ldbu	r4,-1(fp)
100013a8:	e0bfff83 	ldbu	r2,-2(fp)
100013ac:	e0fffe17 	ldw	r3,-8(fp)
100013b0:	210003e4 	muli	r4,r4,15
100013b4:	2085883a 	add	r2,r4,r2
100013b8:	100490ba 	slli	r2,r2,2
100013bc:	1885883a 	add	r2,r3,r2
100013c0:	00c00044 	movi	r3,1
100013c4:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100013c8:	e0bffe17 	ldw	r2,-8(fp)
100013cc:	1080ea0b 	ldhu	r2,936(r2)
100013d0:	10800044 	addi	r2,r2,1
100013d4:	1007883a 	mov	r3,r2
100013d8:	e0bffe17 	ldw	r2,-8(fp)
100013dc:	10c0ea0d 	sth	r3,936(r2)
100013e0:	0000d306 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_BLINKY) {
100013e4:	e0ffff43 	ldbu	r3,-3(fp)
100013e8:	e13fffc3 	ldbu	r4,-1(fp)
100013ec:	e0bfff83 	ldbu	r2,-2(fp)
100013f0:	210003e4 	muli	r4,r4,15
100013f4:	18c03864 	muli	r3,r3,225
100013f8:	20c7883a 	add	r3,r4,r3
100013fc:	1887883a 	add	r3,r3,r2
10001400:	008400b4 	movhi	r2,4098
10001404:	1885883a 	add	r2,r3,r2
10001408:	1099b703 	ldbu	r2,26332(r2)
1000140c:	10803fcc 	andi	r2,r2,255
10001410:	10800118 	cmpnei	r2,r2,4
10001414:	1000161e 	bne	r2,zero,10001470 <init_game+0x154>
                game->blinky.xpos = i;
10001418:	e0bffe17 	ldw	r2,-8(fp)
1000141c:	e0ffffc3 	ldbu	r3,-1(fp)
10001420:	10c0e285 	stb	r3,906(r2)
                game->blinky.ypos = j;
10001424:	e0bffe17 	ldw	r2,-8(fp)
10001428:	e0ffff83 	ldbu	r3,-2(fp)
1000142c:	10c0e2c5 	stb	r3,907(r2)
                game->game_map[i][j] = CANDY;
10001430:	e13fffc3 	ldbu	r4,-1(fp)
10001434:	e0bfff83 	ldbu	r2,-2(fp)
10001438:	e0fffe17 	ldw	r3,-8(fp)
1000143c:	210003e4 	muli	r4,r4,15
10001440:	2085883a 	add	r2,r4,r2
10001444:	100490ba 	slli	r2,r2,2
10001448:	1885883a 	add	r2,r3,r2
1000144c:	00c00044 	movi	r3,1
10001450:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
10001454:	e0bffe17 	ldw	r2,-8(fp)
10001458:	1080ea0b 	ldhu	r2,936(r2)
1000145c:	10800044 	addi	r2,r2,1
10001460:	1007883a 	mov	r3,r2
10001464:	e0bffe17 	ldw	r2,-8(fp)
10001468:	10c0ea0d 	sth	r3,936(r2)
1000146c:	0000b006 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_PINKY) {
10001470:	e0ffff43 	ldbu	r3,-3(fp)
10001474:	e13fffc3 	ldbu	r4,-1(fp)
10001478:	e0bfff83 	ldbu	r2,-2(fp)
1000147c:	210003e4 	muli	r4,r4,15
10001480:	18c03864 	muli	r3,r3,225
10001484:	20c7883a 	add	r3,r4,r3
10001488:	1887883a 	add	r3,r3,r2
1000148c:	008400b4 	movhi	r2,4098
10001490:	1885883a 	add	r2,r3,r2
10001494:	1099b703 	ldbu	r2,26332(r2)
10001498:	10803fcc 	andi	r2,r2,255
1000149c:	10800158 	cmpnei	r2,r2,5
100014a0:	1000161e 	bne	r2,zero,100014fc <init_game+0x1e0>
                game->pinky.xpos = i;
100014a4:	e0bffe17 	ldw	r2,-8(fp)
100014a8:	e0ffffc3 	ldbu	r3,-1(fp)
100014ac:	10c0e405 	stb	r3,912(r2)
                game->pinky.ypos = j;
100014b0:	e0bffe17 	ldw	r2,-8(fp)
100014b4:	e0ffff83 	ldbu	r3,-2(fp)
100014b8:	10c0e445 	stb	r3,913(r2)
                game->game_map[i][j] = CANDY;
100014bc:	e13fffc3 	ldbu	r4,-1(fp)
100014c0:	e0bfff83 	ldbu	r2,-2(fp)
100014c4:	e0fffe17 	ldw	r3,-8(fp)
100014c8:	210003e4 	muli	r4,r4,15
100014cc:	2085883a 	add	r2,r4,r2
100014d0:	100490ba 	slli	r2,r2,2
100014d4:	1885883a 	add	r2,r3,r2
100014d8:	00c00044 	movi	r3,1
100014dc:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100014e0:	e0bffe17 	ldw	r2,-8(fp)
100014e4:	1080ea0b 	ldhu	r2,936(r2)
100014e8:	10800044 	addi	r2,r2,1
100014ec:	1007883a 	mov	r3,r2
100014f0:	e0bffe17 	ldw	r2,-8(fp)
100014f4:	10c0ea0d 	sth	r3,936(r2)
100014f8:	00008d06 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_INKY) {
100014fc:	e0ffff43 	ldbu	r3,-3(fp)
10001500:	e13fffc3 	ldbu	r4,-1(fp)
10001504:	e0bfff83 	ldbu	r2,-2(fp)
10001508:	210003e4 	muli	r4,r4,15
1000150c:	18c03864 	muli	r3,r3,225
10001510:	20c7883a 	add	r3,r4,r3
10001514:	1887883a 	add	r3,r3,r2
10001518:	008400b4 	movhi	r2,4098
1000151c:	1885883a 	add	r2,r3,r2
10001520:	1099b703 	ldbu	r2,26332(r2)
10001524:	10803fcc 	andi	r2,r2,255
10001528:	10800198 	cmpnei	r2,r2,6
1000152c:	1000161e 	bne	r2,zero,10001588 <init_game+0x26c>
                game->inky.xpos = i;
10001530:	e0bffe17 	ldw	r2,-8(fp)
10001534:	e0ffffc3 	ldbu	r3,-1(fp)
10001538:	10c0e585 	stb	r3,918(r2)
                game->inky.ypos = j;
1000153c:	e0bffe17 	ldw	r2,-8(fp)
10001540:	e0ffff83 	ldbu	r3,-2(fp)
10001544:	10c0e5c5 	stb	r3,919(r2)
                game->game_map[i][j] = CANDY;
10001548:	e13fffc3 	ldbu	r4,-1(fp)
1000154c:	e0bfff83 	ldbu	r2,-2(fp)
10001550:	e0fffe17 	ldw	r3,-8(fp)
10001554:	210003e4 	muli	r4,r4,15
10001558:	2085883a 	add	r2,r4,r2
1000155c:	100490ba 	slli	r2,r2,2
10001560:	1885883a 	add	r2,r3,r2
10001564:	00c00044 	movi	r3,1
10001568:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
1000156c:	e0bffe17 	ldw	r2,-8(fp)
10001570:	1080ea0b 	ldhu	r2,936(r2)
10001574:	10800044 	addi	r2,r2,1
10001578:	1007883a 	mov	r3,r2
1000157c:	e0bffe17 	ldw	r2,-8(fp)
10001580:	10c0ea0d 	sth	r3,936(r2)
10001584:	00006a06 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == GHOST_CLYDE) {
10001588:	e0ffff43 	ldbu	r3,-3(fp)
1000158c:	e13fffc3 	ldbu	r4,-1(fp)
10001590:	e0bfff83 	ldbu	r2,-2(fp)
10001594:	210003e4 	muli	r4,r4,15
10001598:	18c03864 	muli	r3,r3,225
1000159c:	20c7883a 	add	r3,r4,r3
100015a0:	1887883a 	add	r3,r3,r2
100015a4:	008400b4 	movhi	r2,4098
100015a8:	1885883a 	add	r2,r3,r2
100015ac:	1099b703 	ldbu	r2,26332(r2)
100015b0:	10803fcc 	andi	r2,r2,255
100015b4:	108001d8 	cmpnei	r2,r2,7
100015b8:	1000161e 	bne	r2,zero,10001614 <init_game+0x2f8>
                game->clyde.xpos = i;
100015bc:	e0bffe17 	ldw	r2,-8(fp)
100015c0:	e0ffffc3 	ldbu	r3,-1(fp)
100015c4:	10c0e705 	stb	r3,924(r2)
                game->clyde.ypos = j;
100015c8:	e0bffe17 	ldw	r2,-8(fp)
100015cc:	e0ffff83 	ldbu	r3,-2(fp)
100015d0:	10c0e745 	stb	r3,925(r2)
                game->game_map[i][j] = CANDY;
100015d4:	e13fffc3 	ldbu	r4,-1(fp)
100015d8:	e0bfff83 	ldbu	r2,-2(fp)
100015dc:	e0fffe17 	ldw	r3,-8(fp)
100015e0:	210003e4 	muli	r4,r4,15
100015e4:	2085883a 	add	r2,r4,r2
100015e8:	100490ba 	slli	r2,r2,2
100015ec:	1885883a 	add	r2,r3,r2
100015f0:	00c00044 	movi	r3,1
100015f4:	10c00015 	stw	r3,0(r2)
                game->candy_count += 1;
100015f8:	e0bffe17 	ldw	r2,-8(fp)
100015fc:	1080ea0b 	ldhu	r2,936(r2)
10001600:	10800044 	addi	r2,r2,1
10001604:	1007883a 	mov	r3,r2
10001608:	e0bffe17 	ldw	r2,-8(fp)
1000160c:	10c0ea0d 	sth	r3,936(r2)
10001610:	00004706 	br	10001730 <init_game+0x414>
            } else if(GAME_BOARDS[current_board][i][j] == CANDY || GAME_BOARDS[current_board][i][j] == SUPER) {
10001614:	e0ffff43 	ldbu	r3,-3(fp)
10001618:	e13fffc3 	ldbu	r4,-1(fp)
1000161c:	e0bfff83 	ldbu	r2,-2(fp)
10001620:	210003e4 	muli	r4,r4,15
10001624:	18c03864 	muli	r3,r3,225
10001628:	20c7883a 	add	r3,r4,r3
1000162c:	1887883a 	add	r3,r3,r2
10001630:	008400b4 	movhi	r2,4098
10001634:	1885883a 	add	r2,r3,r2
10001638:	1099b703 	ldbu	r2,26332(r2)
1000163c:	10803fcc 	andi	r2,r2,255
10001640:	10800060 	cmpeqi	r2,r2,1
10001644:	10000d1e 	bne	r2,zero,1000167c <init_game+0x360>
10001648:	e0ffff43 	ldbu	r3,-3(fp)
1000164c:	e13fffc3 	ldbu	r4,-1(fp)
10001650:	e0bfff83 	ldbu	r2,-2(fp)
10001654:	210003e4 	muli	r4,r4,15
10001658:	18c03864 	muli	r3,r3,225
1000165c:	20c7883a 	add	r3,r4,r3
10001660:	1887883a 	add	r3,r3,r2
10001664:	008400b4 	movhi	r2,4098
10001668:	1885883a 	add	r2,r3,r2
1000166c:	1099b703 	ldbu	r2,26332(r2)
10001670:	10803fcc 	andi	r2,r2,255
10001674:	10800098 	cmpnei	r2,r2,2
10001678:	10001a1e 	bne	r2,zero,100016e4 <init_game+0x3c8>
                game->candy_count += 1;
1000167c:	e0bffe17 	ldw	r2,-8(fp)
10001680:	1080ea0b 	ldhu	r2,936(r2)
10001684:	10800044 	addi	r2,r2,1
10001688:	1007883a 	mov	r3,r2
1000168c:	e0bffe17 	ldw	r2,-8(fp)
10001690:	10c0ea0d 	sth	r3,936(r2)
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
10001694:	e0ffff43 	ldbu	r3,-3(fp)
10001698:	e13fffc3 	ldbu	r4,-1(fp)
1000169c:	e0bfff83 	ldbu	r2,-2(fp)
100016a0:	210003e4 	muli	r4,r4,15
100016a4:	18c03864 	muli	r3,r3,225
100016a8:	20c7883a 	add	r3,r4,r3
100016ac:	1887883a 	add	r3,r3,r2
100016b0:	008400b4 	movhi	r2,4098
100016b4:	1885883a 	add	r2,r3,r2
100016b8:	10d9b703 	ldbu	r3,26332(r2)
100016bc:	e17fffc3 	ldbu	r5,-1(fp)
100016c0:	e0bfff83 	ldbu	r2,-2(fp)
100016c4:	18c03fcc 	andi	r3,r3,255
100016c8:	e13ffe17 	ldw	r4,-8(fp)
100016cc:	294003e4 	muli	r5,r5,15
100016d0:	2885883a 	add	r2,r5,r2
100016d4:	100490ba 	slli	r2,r2,2
100016d8:	2085883a 	add	r2,r4,r2
100016dc:	10c00015 	stw	r3,0(r2)
100016e0:	00001306 	br	10001730 <init_game+0x414>
            } else {    // WALL and WAY.
                game->game_map[i][j] = (Tile)GAME_BOARDS[current_board][i][j];
100016e4:	e0ffff43 	ldbu	r3,-3(fp)
100016e8:	e13fffc3 	ldbu	r4,-1(fp)
100016ec:	e0bfff83 	ldbu	r2,-2(fp)
100016f0:	210003e4 	muli	r4,r4,15
100016f4:	18c03864 	muli	r3,r3,225
100016f8:	20c7883a 	add	r3,r4,r3
100016fc:	1887883a 	add	r3,r3,r2
10001700:	008400b4 	movhi	r2,4098
10001704:	1885883a 	add	r2,r3,r2
10001708:	10d9b703 	ldbu	r3,26332(r2)
1000170c:	e17fffc3 	ldbu	r5,-1(fp)
10001710:	e0bfff83 	ldbu	r2,-2(fp)
10001714:	18c03fcc 	andi	r3,r3,255
10001718:	e13ffe17 	ldw	r4,-8(fp)
1000171c:	294003e4 	muli	r5,r5,15
10001720:	2885883a 	add	r2,r5,r2
10001724:	100490ba 	slli	r2,r2,2
10001728:	2085883a 	add	r2,r4,r2
1000172c:	10c00015 	stw	r3,0(r2)
        for(j=0; j<15; j+=1) {
10001730:	e0bfff83 	ldbu	r2,-2(fp)
10001734:	10800044 	addi	r2,r2,1
10001738:	e0bfff85 	stb	r2,-2(fp)
1000173c:	e0bfff83 	ldbu	r2,-2(fp)
10001740:	108003f0 	cmpltui	r2,r2,15
10001744:	103f041e 	bne	r2,zero,10001358 <init_game+0x3c>
    for(i=0; i<15; i+=1) {
10001748:	e0bfffc3 	ldbu	r2,-1(fp)
1000174c:	10800044 	addi	r2,r2,1
10001750:	e0bfffc5 	stb	r2,-1(fp)
10001754:	e0bfffc3 	ldbu	r2,-1(fp)
10001758:	108003f0 	cmpltui	r2,r2,15
1000175c:	103efc1e 	bne	r2,zero,10001350 <init_game+0x34>
            }
        }
    }

    game->state = PLAYING;
10001760:	e0bffe17 	ldw	r2,-8(fp)
10001764:	00c00044 	movi	r3,1
10001768:	10c0e915 	stw	r3,932(r2)
}
1000176c:	0001883a 	nop
10001770:	e037883a 	mov	sp,fp
10001774:	dfc00117 	ldw	ra,4(sp)
10001778:	df000017 	ldw	fp,0(sp)
1000177c:	dec00204 	addi	sp,sp,8
10001780:	f800283a 	ret

10001784 <tickgame>:

void tickgame(Game* board, char keypress) {
10001784:	defffa04 	addi	sp,sp,-24
10001788:	dfc00515 	stw	ra,20(sp)
1000178c:	df000415 	stw	fp,16(sp)
10001790:	df000404 	addi	fp,sp,16
10001794:	e13ffd15 	stw	r4,-12(fp)
10001798:	2805883a 	mov	r2,r5
1000179c:	e0bffc05 	stb	r2,-16(fp)
    if(board->state!=PLAYING) return;
100017a0:	e0bffd17 	ldw	r2,-12(fp)
100017a4:	1080e917 	ldw	r2,932(r2)
100017a8:	10800060 	cmpeqi	r2,r2,1
100017ac:	10018426 	beq	r2,zero,10001dc0 <tickgame+0x63c>
    // Move the player
    int16_t new_xpos = board->player.xpos;
100017b0:	e0bffd17 	ldw	r2,-12(fp)
100017b4:	1080e103 	ldbu	r2,900(r2)
100017b8:	10803fcc 	andi	r2,r2,255
100017bc:	e0bfff8d 	sth	r2,-2(fp)
    int16_t new_ypos = board->player.ypos;
100017c0:	e0bffd17 	ldw	r2,-12(fp)
100017c4:	1080e143 	ldbu	r2,901(r2)
100017c8:	10803fcc 	andi	r2,r2,255
100017cc:	e0bfff0d 	sth	r2,-4(fp)
    bool player_moved = false;
100017d0:	e03ffec5 	stb	zero,-5(fp)

    switch(keypress) {
100017d4:	e0bffc07 	ldb	r2,-16(fp)
100017d8:	10bfefc4 	addi	r2,r2,-65
100017dc:	10c00de8 	cmpgeui	r3,r2,55
100017e0:	1800531e 	bne	r3,zero,10001930 <tickgame+0x1ac>
100017e4:	100690ba 	slli	r3,r2,2
100017e8:	00840034 	movhi	r2,4096
100017ec:	1885883a 	add	r2,r3,r2
100017f0:	1085fe17 	ldw	r2,6136(r2)
100017f4:	1000683a 	jmp	r2
100017f8:	10001904 	addi	zero,r2,100
100017fc:	10001930 	cmpltui	zero,r2,100
10001800:	10001930 	cmpltui	zero,r2,100
10001804:	1000191c 	xori	zero,r2,100
10001808:	10001930 	cmpltui	zero,r2,100
1000180c:	10001930 	cmpltui	zero,r2,100
10001810:	10001930 	cmpltui	zero,r2,100
10001814:	10001930 	cmpltui	zero,r2,100
10001818:	10001930 	cmpltui	zero,r2,100
1000181c:	10001930 	cmpltui	zero,r2,100
10001820:	10001930 	cmpltui	zero,r2,100
10001824:	10001930 	cmpltui	zero,r2,100
10001828:	10001930 	cmpltui	zero,r2,100
1000182c:	10001930 	cmpltui	zero,r2,100
10001830:	10001930 	cmpltui	zero,r2,100
10001834:	10001930 	cmpltui	zero,r2,100
10001838:	10001930 	cmpltui	zero,r2,100
1000183c:	10001930 	cmpltui	zero,r2,100
10001840:	100018ec 	andhi	zero,r2,99
10001844:	10001930 	cmpltui	zero,r2,100
10001848:	10001930 	cmpltui	zero,r2,100
1000184c:	10001930 	cmpltui	zero,r2,100
10001850:	100018d4 	ori	zero,r2,99
10001854:	10001930 	cmpltui	zero,r2,100
10001858:	10001930 	cmpltui	zero,r2,100
1000185c:	10001930 	cmpltui	zero,r2,100
10001860:	10001930 	cmpltui	zero,r2,100
10001864:	10001930 	cmpltui	zero,r2,100
10001868:	10001930 	cmpltui	zero,r2,100
1000186c:	10001930 	cmpltui	zero,r2,100
10001870:	10001930 	cmpltui	zero,r2,100
10001874:	10001930 	cmpltui	zero,r2,100
10001878:	10001904 	addi	zero,r2,100
1000187c:	10001930 	cmpltui	zero,r2,100
10001880:	10001930 	cmpltui	zero,r2,100
10001884:	1000191c 	xori	zero,r2,100
10001888:	10001930 	cmpltui	zero,r2,100
1000188c:	10001930 	cmpltui	zero,r2,100
10001890:	10001930 	cmpltui	zero,r2,100
10001894:	10001930 	cmpltui	zero,r2,100
10001898:	10001930 	cmpltui	zero,r2,100
1000189c:	10001930 	cmpltui	zero,r2,100
100018a0:	10001930 	cmpltui	zero,r2,100
100018a4:	10001930 	cmpltui	zero,r2,100
100018a8:	10001930 	cmpltui	zero,r2,100
100018ac:	10001930 	cmpltui	zero,r2,100
100018b0:	10001930 	cmpltui	zero,r2,100
100018b4:	10001930 	cmpltui	zero,r2,100
100018b8:	10001930 	cmpltui	zero,r2,100
100018bc:	10001930 	cmpltui	zero,r2,100
100018c0:	100018ec 	andhi	zero,r2,99
100018c4:	10001930 	cmpltui	zero,r2,100
100018c8:	10001930 	cmpltui	zero,r2,100
100018cc:	10001930 	cmpltui	zero,r2,100
100018d0:	100018d4 	ori	zero,r2,99
        case 'w':
        case 'W':
            new_xpos -= 1;
100018d4:	e0bfff8b 	ldhu	r2,-2(fp)
100018d8:	10bfffc4 	addi	r2,r2,-1
100018dc:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
100018e0:	00800044 	movi	r2,1
100018e4:	e0bffec5 	stb	r2,-5(fp)
            break;
100018e8:	00001106 	br	10001930 <tickgame+0x1ac>
        case 'S':
        case 's':
            new_xpos += 1;
100018ec:	e0bfff8b 	ldhu	r2,-2(fp)
100018f0:	10800044 	addi	r2,r2,1
100018f4:	e0bfff8d 	sth	r2,-2(fp)
            player_moved = true;
100018f8:	00800044 	movi	r2,1
100018fc:	e0bffec5 	stb	r2,-5(fp)
            break;
10001900:	00000b06 	br	10001930 <tickgame+0x1ac>
        case 'A':
        case 'a':
            new_ypos -= 1;
10001904:	e0bfff0b 	ldhu	r2,-4(fp)
10001908:	10bfffc4 	addi	r2,r2,-1
1000190c:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10001910:	00800044 	movi	r2,1
10001914:	e0bffec5 	stb	r2,-5(fp)
            break;
10001918:	00000506 	br	10001930 <tickgame+0x1ac>
        case 'D':
        case 'd':
            new_ypos += 1;
1000191c:	e0bfff0b 	ldhu	r2,-4(fp)
10001920:	10800044 	addi	r2,r2,1
10001924:	e0bfff0d 	sth	r2,-4(fp)
            player_moved = true;
10001928:	00800044 	movi	r2,1
1000192c:	e0bffec5 	stb	r2,-5(fp)
    }
    // Now check if the new coordinate is legal.
    new_xpos = (new_xpos + _BOARD_H) % _BOARD_H;
10001930:	e0bfff8f 	ldh	r2,-2(fp)
10001934:	108003c4 	addi	r2,r2,15
10001938:	00c003c4 	movi	r3,15
1000193c:	10c7283a 	div	r3,r2,r3
10001940:	18c003e4 	muli	r3,r3,15
10001944:	10c5c83a 	sub	r2,r2,r3
10001948:	e0bfff8d 	sth	r2,-2(fp)
    new_ypos = (new_ypos + _BOARD_W) % _BOARD_W;
1000194c:	e0bfff0f 	ldh	r2,-4(fp)
10001950:	108003c4 	addi	r2,r2,15
10001954:	00c003c4 	movi	r3,15
10001958:	10c7283a 	div	r3,r2,r3
1000195c:	18c003e4 	muli	r3,r3,15
10001960:	10c5c83a 	sub	r2,r2,r3
10001964:	e0bfff0d 	sth	r2,-4(fp)

    if(board->game_map[new_xpos][new_ypos] != WALL) {
10001968:	e13fff8f 	ldh	r4,-2(fp)
1000196c:	e0bfff0f 	ldh	r2,-4(fp)
10001970:	e0fffd17 	ldw	r3,-12(fp)
10001974:	210003e4 	muli	r4,r4,15
10001978:	2085883a 	add	r2,r4,r2
1000197c:	100490ba 	slli	r2,r2,2
10001980:	1885883a 	add	r2,r3,r2
10001984:	10800017 	ldw	r2,0(r2)
10001988:	10005526 	beq	r2,zero,10001ae0 <tickgame+0x35c>
        // New position is valid. Check if player actually moved.
        if(player_moved) {
1000198c:	e0bffec3 	ldbu	r2,-5(fp)
10001990:	10005326 	beq	r2,zero,10001ae0 <tickgame+0x35c>
            board->player.xpos = new_xpos;
10001994:	e0bfff8b 	ldhu	r2,-2(fp)
10001998:	1007883a 	mov	r3,r2
1000199c:	e0bffd17 	ldw	r2,-12(fp)
100019a0:	10c0e105 	stb	r3,900(r2)
            board->player.ypos = new_ypos;
100019a4:	e0bfff0b 	ldhu	r2,-4(fp)
100019a8:	1007883a 	mov	r3,r2
100019ac:	e0bffd17 	ldw	r2,-12(fp)
100019b0:	10c0e145 	stb	r3,901(r2)
            // Add both tiles to update queue.
            addPendingPos(board->player.xpos, board->player.ypos);
100019b4:	e0bffd17 	ldw	r2,-12(fp)
100019b8:	1080e103 	ldbu	r2,900(r2)
100019bc:	10c03fcc 	andi	r3,r2,255
100019c0:	e0bffd17 	ldw	r2,-12(fp)
100019c4:	1080e143 	ldbu	r2,901(r2)
100019c8:	10803fcc 	andi	r2,r2,255
100019cc:	100b883a 	mov	r5,r2
100019d0:	1809883a 	mov	r4,r3
100019d4:	0005dbc0 	call	10005dbc <addPendingPos>
            addPendingPos(new_xpos, new_ypos);
100019d8:	e0bfff8f 	ldh	r2,-2(fp)
100019dc:	e0ffff0f 	ldh	r3,-4(fp)
100019e0:	180b883a 	mov	r5,r3
100019e4:	1009883a 	mov	r4,r2
100019e8:	0005dbc0 	call	10005dbc <addPendingPos>
            // Pick the tile up.
            switch(board->game_map[new_xpos][new_ypos]) {
100019ec:	e13fff8f 	ldh	r4,-2(fp)
100019f0:	e0bfff0f 	ldh	r2,-4(fp)
100019f4:	e0fffd17 	ldw	r3,-12(fp)
100019f8:	210003e4 	muli	r4,r4,15
100019fc:	2085883a 	add	r2,r4,r2
10001a00:	100490ba 	slli	r2,r2,2
10001a04:	1885883a 	add	r2,r3,r2
10001a08:	10800017 	ldw	r2,0(r2)
10001a0c:	10c00060 	cmpeqi	r3,r2,1
10001a10:	1800041e 	bne	r3,zero,10001a24 <tickgame+0x2a0>
10001a14:	10003426 	beq	r2,zero,10001ae8 <tickgame+0x364>
10001a18:	108000a0 	cmpeqi	r2,r2,2
10001a1c:	1000171e 	bne	r2,zero,10001a7c <tickgame+0x2f8>
                    board->player.invincible = 15*60;   // 15 seconds.
                    board->candy_count -= 1;
                    break;
                case WALL:  // which should not happen
                case WAY:
                    break;
10001a20:	00003106 	br	10001ae8 <tickgame+0x364>
                    board->game_map[new_xpos][new_ypos] = WAY;
10001a24:	e13fff8f 	ldh	r4,-2(fp)
10001a28:	e0bfff0f 	ldh	r2,-4(fp)
10001a2c:	e0fffd17 	ldw	r3,-12(fp)
10001a30:	210003e4 	muli	r4,r4,15
10001a34:	2085883a 	add	r2,r4,r2
10001a38:	100490ba 	slli	r2,r2,2
10001a3c:	1885883a 	add	r2,r3,r2
10001a40:	00c000c4 	movi	r3,3
10001a44:	10c00015 	stw	r3,0(r2)
                    board->player.points += 10;
10001a48:	e0bffd17 	ldw	r2,-12(fp)
10001a4c:	1080e18b 	ldhu	r2,902(r2)
10001a50:	10800284 	addi	r2,r2,10
10001a54:	1007883a 	mov	r3,r2
10001a58:	e0bffd17 	ldw	r2,-12(fp)
10001a5c:	10c0e18d 	sth	r3,902(r2)
                    board->candy_count -= 1;
10001a60:	e0bffd17 	ldw	r2,-12(fp)
10001a64:	1080ea0b 	ldhu	r2,936(r2)
10001a68:	10bfffc4 	addi	r2,r2,-1
10001a6c:	1007883a 	mov	r3,r2
10001a70:	e0bffd17 	ldw	r2,-12(fp)
10001a74:	10c0ea0d 	sth	r3,936(r2)
                    break;
10001a78:	00001c06 	br	10001aec <tickgame+0x368>
                    board->game_map[new_xpos][new_ypos] = WAY;
10001a7c:	e13fff8f 	ldh	r4,-2(fp)
10001a80:	e0bfff0f 	ldh	r2,-4(fp)
10001a84:	e0fffd17 	ldw	r3,-12(fp)
10001a88:	210003e4 	muli	r4,r4,15
10001a8c:	2085883a 	add	r2,r4,r2
10001a90:	100490ba 	slli	r2,r2,2
10001a94:	1885883a 	add	r2,r3,r2
10001a98:	00c000c4 	movi	r3,3
10001a9c:	10c00015 	stw	r3,0(r2)
                    board->player.points += 100;
10001aa0:	e0bffd17 	ldw	r2,-12(fp)
10001aa4:	1080e18b 	ldhu	r2,902(r2)
10001aa8:	10801904 	addi	r2,r2,100
10001aac:	1007883a 	mov	r3,r2
10001ab0:	e0bffd17 	ldw	r2,-12(fp)
10001ab4:	10c0e18d 	sth	r3,902(r2)
                    board->player.invincible = 15*60;   // 15 seconds.
10001ab8:	e0bffd17 	ldw	r2,-12(fp)
10001abc:	00c0e104 	movi	r3,900
10001ac0:	10c0e20d 	sth	r3,904(r2)
                    board->candy_count -= 1;
10001ac4:	e0bffd17 	ldw	r2,-12(fp)
10001ac8:	1080ea0b 	ldhu	r2,936(r2)
10001acc:	10bfffc4 	addi	r2,r2,-1
10001ad0:	1007883a 	mov	r3,r2
10001ad4:	e0bffd17 	ldw	r2,-12(fp)
10001ad8:	10c0ea0d 	sth	r3,936(r2)
                    break;
10001adc:	00000306 	br	10001aec <tickgame+0x368>
            }
        }
10001ae0:	0001883a 	nop
10001ae4:	00000106 	br	10001aec <tickgame+0x368>
                    break;
10001ae8:	0001883a 	nop
    }

    // Ghosts move.
    blinkys_move(board);
10001aec:	e13ffd17 	ldw	r4,-12(fp)
10001af0:	0001f380 	call	10001f38 <blinkys_move>

    // Check if the player met a ghost.
    if(board->player.invincible > 0) {
10001af4:	e0bffd17 	ldw	r2,-12(fp)
10001af8:	1080e20b 	ldhu	r2,904(r2)
10001afc:	10bfffcc 	andi	r2,r2,65535
10001b00:	10006026 	beq	r2,zero,10001c84 <tickgame+0x500>
        // Ghost gets eaten. Grant points and set ghost away.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10001b04:	e0bffd17 	ldw	r2,-12(fp)
10001b08:	10c0e103 	ldbu	r3,900(r2)
10001b0c:	e0bffd17 	ldw	r2,-12(fp)
10001b10:	1080e283 	ldbu	r2,906(r2)
10001b14:	18c03fcc 	andi	r3,r3,255
10001b18:	10803fcc 	andi	r2,r2,255
10001b1c:	1880111e 	bne	r3,r2,10001b64 <tickgame+0x3e0>
10001b20:	e0bffd17 	ldw	r2,-12(fp)
10001b24:	10c0e143 	ldbu	r3,901(r2)
10001b28:	e0bffd17 	ldw	r2,-12(fp)
10001b2c:	1080e2c3 	ldbu	r2,907(r2)
10001b30:	18c03fcc 	andi	r3,r3,255
10001b34:	10803fcc 	andi	r2,r2,255
10001b38:	18800a1e 	bne	r3,r2,10001b64 <tickgame+0x3e0>
            // Met Blinky when invincible.
            board->blinky.revive_cntdown = 15*60;
10001b3c:	e0bffd17 	ldw	r2,-12(fp)
10001b40:	00c0e104 	movi	r3,900
10001b44:	10c0e38d 	sth	r3,910(r2)
            board->player.points += 200;
10001b48:	e0bffd17 	ldw	r2,-12(fp)
10001b4c:	1080e18b 	ldhu	r2,902(r2)
10001b50:	10803204 	addi	r2,r2,200
10001b54:	1007883a 	mov	r3,r2
10001b58:	e0bffd17 	ldw	r2,-12(fp)
10001b5c:	10c0e18d 	sth	r3,902(r2)
10001b60:	00008f06 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001b64:	e0bffd17 	ldw	r2,-12(fp)
10001b68:	10c0e103 	ldbu	r3,900(r2)
10001b6c:	e0bffd17 	ldw	r2,-12(fp)
10001b70:	1080e583 	ldbu	r2,918(r2)
10001b74:	18c03fcc 	andi	r3,r3,255
10001b78:	10803fcc 	andi	r2,r2,255
10001b7c:	1880111e 	bne	r3,r2,10001bc4 <tickgame+0x440>
10001b80:	e0bffd17 	ldw	r2,-12(fp)
10001b84:	10c0e143 	ldbu	r3,901(r2)
10001b88:	e0bffd17 	ldw	r2,-12(fp)
10001b8c:	1080e5c3 	ldbu	r2,919(r2)
10001b90:	18c03fcc 	andi	r3,r3,255
10001b94:	10803fcc 	andi	r2,r2,255
10001b98:	18800a1e 	bne	r3,r2,10001bc4 <tickgame+0x440>
            // Met inky when invincible.
            board->inky.revive_cntdown = 15*60;
10001b9c:	e0bffd17 	ldw	r2,-12(fp)
10001ba0:	00c0e104 	movi	r3,900
10001ba4:	10c0e68d 	sth	r3,922(r2)
            board->player.points += 200;
10001ba8:	e0bffd17 	ldw	r2,-12(fp)
10001bac:	1080e18b 	ldhu	r2,902(r2)
10001bb0:	10803204 	addi	r2,r2,200
10001bb4:	1007883a 	mov	r3,r2
10001bb8:	e0bffd17 	ldw	r2,-12(fp)
10001bbc:	10c0e18d 	sth	r3,902(r2)
10001bc0:	00007706 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
10001bc4:	e0bffd17 	ldw	r2,-12(fp)
10001bc8:	10c0e103 	ldbu	r3,900(r2)
10001bcc:	e0bffd17 	ldw	r2,-12(fp)
10001bd0:	1080e403 	ldbu	r2,912(r2)
10001bd4:	18c03fcc 	andi	r3,r3,255
10001bd8:	10803fcc 	andi	r2,r2,255
10001bdc:	1880111e 	bne	r3,r2,10001c24 <tickgame+0x4a0>
10001be0:	e0bffd17 	ldw	r2,-12(fp)
10001be4:	10c0e143 	ldbu	r3,901(r2)
10001be8:	e0bffd17 	ldw	r2,-12(fp)
10001bec:	1080e443 	ldbu	r2,913(r2)
10001bf0:	18c03fcc 	andi	r3,r3,255
10001bf4:	10803fcc 	andi	r2,r2,255
10001bf8:	18800a1e 	bne	r3,r2,10001c24 <tickgame+0x4a0>
            // Met pinky when invincible.
            board->pinky.revive_cntdown = 15*60;
10001bfc:	e0bffd17 	ldw	r2,-12(fp)
10001c00:	00c0e104 	movi	r3,900
10001c04:	10c0e50d 	sth	r3,916(r2)
            board->player.points += 200;
10001c08:	e0bffd17 	ldw	r2,-12(fp)
10001c0c:	1080e18b 	ldhu	r2,902(r2)
10001c10:	10803204 	addi	r2,r2,200
10001c14:	1007883a 	mov	r3,r2
10001c18:	e0bffd17 	ldw	r2,-12(fp)
10001c1c:	10c0e18d 	sth	r3,902(r2)
10001c20:	00005f06 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
10001c24:	e0bffd17 	ldw	r2,-12(fp)
10001c28:	10c0e103 	ldbu	r3,900(r2)
10001c2c:	e0bffd17 	ldw	r2,-12(fp)
10001c30:	1080e703 	ldbu	r2,924(r2)
10001c34:	18c03fcc 	andi	r3,r3,255
10001c38:	10803fcc 	andi	r2,r2,255
10001c3c:	1880581e 	bne	r3,r2,10001da0 <tickgame+0x61c>
10001c40:	e0bffd17 	ldw	r2,-12(fp)
10001c44:	10c0e143 	ldbu	r3,901(r2)
10001c48:	e0bffd17 	ldw	r2,-12(fp)
10001c4c:	1080e743 	ldbu	r2,925(r2)
10001c50:	18c03fcc 	andi	r3,r3,255
10001c54:	10803fcc 	andi	r2,r2,255
10001c58:	1880511e 	bne	r3,r2,10001da0 <tickgame+0x61c>
            // Met clyde when invincible.
            board->clyde.revive_cntdown = 15*60;
10001c5c:	e0bffd17 	ldw	r2,-12(fp)
10001c60:	00c0e104 	movi	r3,900
10001c64:	10c0e80d 	sth	r3,928(r2)
            board->player.points += 200;
10001c68:	e0bffd17 	ldw	r2,-12(fp)
10001c6c:	1080e18b 	ldhu	r2,902(r2)
10001c70:	10803204 	addi	r2,r2,200
10001c74:	1007883a 	mov	r3,r2
10001c78:	e0bffd17 	ldw	r2,-12(fp)
10001c7c:	10c0e18d 	sth	r3,902(r2)
10001c80:	00004706 	br	10001da0 <tickgame+0x61c>
        }
    } else {
        // Player is not invincible. Gets killed if ghost met.
        // These branches are retained in case some additional things added.
        if(board->player.xpos == board->blinky.xpos && board->player.ypos == board->blinky.ypos) {
10001c84:	e0bffd17 	ldw	r2,-12(fp)
10001c88:	10c0e103 	ldbu	r3,900(r2)
10001c8c:	e0bffd17 	ldw	r2,-12(fp)
10001c90:	1080e283 	ldbu	r2,906(r2)
10001c94:	18c03fcc 	andi	r3,r3,255
10001c98:	10803fcc 	andi	r2,r2,255
10001c9c:	18800b1e 	bne	r3,r2,10001ccc <tickgame+0x548>
10001ca0:	e0bffd17 	ldw	r2,-12(fp)
10001ca4:	10c0e143 	ldbu	r3,901(r2)
10001ca8:	e0bffd17 	ldw	r2,-12(fp)
10001cac:	1080e2c3 	ldbu	r2,907(r2)
10001cb0:	18c03fcc 	andi	r3,r3,255
10001cb4:	10803fcc 	andi	r2,r2,255
10001cb8:	1880041e 	bne	r3,r2,10001ccc <tickgame+0x548>
            // Met Blinky
            board->state = DIED;
10001cbc:	e0bffd17 	ldw	r2,-12(fp)
10001cc0:	00c00084 	movi	r3,2
10001cc4:	10c0e915 	stw	r3,932(r2)
10001cc8:	00003506 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->inky.xpos && board->player.ypos == board->inky.ypos) {
10001ccc:	e0bffd17 	ldw	r2,-12(fp)
10001cd0:	10c0e103 	ldbu	r3,900(r2)
10001cd4:	e0bffd17 	ldw	r2,-12(fp)
10001cd8:	1080e583 	ldbu	r2,918(r2)
10001cdc:	18c03fcc 	andi	r3,r3,255
10001ce0:	10803fcc 	andi	r2,r2,255
10001ce4:	18800b1e 	bne	r3,r2,10001d14 <tickgame+0x590>
10001ce8:	e0bffd17 	ldw	r2,-12(fp)
10001cec:	10c0e143 	ldbu	r3,901(r2)
10001cf0:	e0bffd17 	ldw	r2,-12(fp)
10001cf4:	1080e5c3 	ldbu	r2,919(r2)
10001cf8:	18c03fcc 	andi	r3,r3,255
10001cfc:	10803fcc 	andi	r2,r2,255
10001d00:	1880041e 	bne	r3,r2,10001d14 <tickgame+0x590>
            // Met inky
            board->state = DIED;
10001d04:	e0bffd17 	ldw	r2,-12(fp)
10001d08:	00c00084 	movi	r3,2
10001d0c:	10c0e915 	stw	r3,932(r2)
10001d10:	00002306 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->pinky.xpos && board->player.ypos == board->pinky.ypos) {
10001d14:	e0bffd17 	ldw	r2,-12(fp)
10001d18:	10c0e103 	ldbu	r3,900(r2)
10001d1c:	e0bffd17 	ldw	r2,-12(fp)
10001d20:	1080e403 	ldbu	r2,912(r2)
10001d24:	18c03fcc 	andi	r3,r3,255
10001d28:	10803fcc 	andi	r2,r2,255
10001d2c:	18800b1e 	bne	r3,r2,10001d5c <tickgame+0x5d8>
10001d30:	e0bffd17 	ldw	r2,-12(fp)
10001d34:	10c0e143 	ldbu	r3,901(r2)
10001d38:	e0bffd17 	ldw	r2,-12(fp)
10001d3c:	1080e443 	ldbu	r2,913(r2)
10001d40:	18c03fcc 	andi	r3,r3,255
10001d44:	10803fcc 	andi	r2,r2,255
10001d48:	1880041e 	bne	r3,r2,10001d5c <tickgame+0x5d8>
            // Met pinky.
            board->state = DIED;
10001d4c:	e0bffd17 	ldw	r2,-12(fp)
10001d50:	00c00084 	movi	r3,2
10001d54:	10c0e915 	stw	r3,932(r2)
10001d58:	00001106 	br	10001da0 <tickgame+0x61c>
        } else if (board->player.xpos == board->clyde.xpos && board->player.ypos == board->clyde.ypos) {
10001d5c:	e0bffd17 	ldw	r2,-12(fp)
10001d60:	10c0e103 	ldbu	r3,900(r2)
10001d64:	e0bffd17 	ldw	r2,-12(fp)
10001d68:	1080e703 	ldbu	r2,924(r2)
10001d6c:	18c03fcc 	andi	r3,r3,255
10001d70:	10803fcc 	andi	r2,r2,255
10001d74:	18800a1e 	bne	r3,r2,10001da0 <tickgame+0x61c>
10001d78:	e0bffd17 	ldw	r2,-12(fp)
10001d7c:	10c0e143 	ldbu	r3,901(r2)
10001d80:	e0bffd17 	ldw	r2,-12(fp)
10001d84:	1080e743 	ldbu	r2,925(r2)
10001d88:	18c03fcc 	andi	r3,r3,255
10001d8c:	10803fcc 	andi	r2,r2,255
10001d90:	1880031e 	bne	r3,r2,10001da0 <tickgame+0x61c>
            // Met clyde.
            board->state = DIED;
10001d94:	e0bffd17 	ldw	r2,-12(fp)
10001d98:	00c00084 	movi	r3,2
10001d9c:	10c0e915 	stw	r3,932(r2)
        }
    }

    // Check if game finished.
    if(is_over(board)) board -> state = WON;
10001da0:	e13ffd17 	ldw	r4,-12(fp)
10001da4:	0001dd80 	call	10001dd8 <is_over>
10001da8:	10803fcc 	andi	r2,r2,255
10001dac:	10000526 	beq	r2,zero,10001dc4 <tickgame+0x640>
10001db0:	e0bffd17 	ldw	r2,-12(fp)
10001db4:	00c000c4 	movi	r3,3
10001db8:	10c0e915 	stw	r3,932(r2)
10001dbc:	00000106 	br	10001dc4 <tickgame+0x640>
    if(board->state!=PLAYING) return;
10001dc0:	0001883a 	nop
}
10001dc4:	e037883a 	mov	sp,fp
10001dc8:	dfc00117 	ldw	ra,4(sp)
10001dcc:	df000017 	ldw	fp,0(sp)
10001dd0:	dec00204 	addi	sp,sp,8
10001dd4:	f800283a 	ret

10001dd8 <is_over>:

// Check if the current map is finished.
// The whole game is passed so we can maintain the array shape.
static inline bool is_over(Game* board)
{
10001dd8:	defffe04 	addi	sp,sp,-8
10001ddc:	df000115 	stw	fp,4(sp)
10001de0:	df000104 	addi	fp,sp,4
10001de4:	e13fff15 	stw	r4,-4(fp)
    return board -> candy_count == 0;
10001de8:	e0bfff17 	ldw	r2,-4(fp)
10001dec:	1080ea0b 	ldhu	r2,936(r2)
10001df0:	10bfffcc 	andi	r2,r2,65535
10001df4:	1005003a 	cmpeq	r2,r2,zero
}
10001df8:	e037883a 	mov	sp,fp
10001dfc:	df000017 	ldw	fp,0(sp)
10001e00:	dec00104 	addi	sp,sp,4
10001e04:	f800283a 	ret

10001e08 <recur_free>:

// Recursively free a pointer.
void recur_free(LinkedPoints* lp)
{
10001e08:	defffd04 	addi	sp,sp,-12
10001e0c:	dfc00215 	stw	ra,8(sp)
10001e10:	df000115 	stw	fp,4(sp)
10001e14:	df000104 	addi	fp,sp,4
10001e18:	e13fff15 	stw	r4,-4(fp)
    if(lp != nullptr) {
10001e1c:	e0bfff17 	ldw	r2,-4(fp)
10001e20:	10000626 	beq	r2,zero,10001e3c <recur_free+0x34>
        recur_free(lp -> next);
10001e24:	e0bfff17 	ldw	r2,-4(fp)
10001e28:	10800117 	ldw	r2,4(r2)
10001e2c:	1009883a 	mov	r4,r2
10001e30:	0001e080 	call	10001e08 <recur_free>
        free(lp);
10001e34:	e13fff17 	ldw	r4,-4(fp)
10001e38:	0014e800 	call	10014e80 <free>
    }
}
10001e3c:	0001883a 	nop
10001e40:	e037883a 	mov	sp,fp
10001e44:	dfc00117 	ldw	ra,4(sp)
10001e48:	df000017 	ldw	fp,0(sp)
10001e4c:	dec00204 	addi	sp,sp,8
10001e50:	f800283a 	ret

10001e54 <stack_push>:

// LinkedPoints as stack: push
// Returns the new head (head will change)
LinkedPoints* stack_push(LinkedPoints* head, const Point* data) {
10001e54:	defffb04 	addi	sp,sp,-20
10001e58:	dfc00415 	stw	ra,16(sp)
10001e5c:	df000315 	stw	fp,12(sp)
10001e60:	df000304 	addi	fp,sp,12
10001e64:	e13ffe15 	stw	r4,-8(fp)
10001e68:	e17ffd15 	stw	r5,-12(fp)
    LinkedPoints* newPoint = malloc(sizeof(LinkedPoints));
10001e6c:	01000204 	movi	r4,8
10001e70:	0014e700 	call	10014e70 <malloc>
10001e74:	e0bfff15 	stw	r2,-4(fp)
    newPoint->curr = *data;
10001e78:	e0bfff17 	ldw	r2,-4(fp)
10001e7c:	e0fffd17 	ldw	r3,-12(fp)
10001e80:	19000003 	ldbu	r4,0(r3)
10001e84:	11000005 	stb	r4,0(r2)
10001e88:	18c00043 	ldbu	r3,1(r3)
10001e8c:	10c00045 	stb	r3,1(r2)
    newPoint->next = head;
10001e90:	e0bfff17 	ldw	r2,-4(fp)
10001e94:	e0fffe17 	ldw	r3,-8(fp)
10001e98:	10c00115 	stw	r3,4(r2)
    return newPoint;
10001e9c:	e0bfff17 	ldw	r2,-4(fp)
}
10001ea0:	e037883a 	mov	sp,fp
10001ea4:	dfc00117 	ldw	ra,4(sp)
10001ea8:	df000017 	ldw	fp,0(sp)
10001eac:	dec00204 	addi	sp,sp,8
10001eb0:	f800283a 	ret

10001eb4 <stack_pop>:
static inline Point stack_peek(LinkedPoints* head) {
    return head -> curr;
}

// Pop an element. Element will be written to popped_data.
LinkedPoints* stack_pop(LinkedPoints* head, Point* popped_data) {
10001eb4:	defffb04 	addi	sp,sp,-20
10001eb8:	dfc00415 	stw	ra,16(sp)
10001ebc:	df000315 	stw	fp,12(sp)
10001ec0:	df000304 	addi	fp,sp,12
10001ec4:	e13ffe15 	stw	r4,-8(fp)
10001ec8:	e17ffd15 	stw	r5,-12(fp)
    *popped_data = head -> curr;
10001ecc:	e0bffd17 	ldw	r2,-12(fp)
10001ed0:	e0fffe17 	ldw	r3,-8(fp)
10001ed4:	19000003 	ldbu	r4,0(r3)
10001ed8:	11000005 	stb	r4,0(r2)
10001edc:	18c00043 	ldbu	r3,1(r3)
10001ee0:	10c00045 	stb	r3,1(r2)
    LinkedPoints* nextptr = head -> next;
10001ee4:	e0bffe17 	ldw	r2,-8(fp)
10001ee8:	10800117 	ldw	r2,4(r2)
10001eec:	e0bfff15 	stw	r2,-4(fp)
    free(head);
10001ef0:	e13ffe17 	ldw	r4,-8(fp)
10001ef4:	0014e800 	call	10014e80 <free>
    return nextptr;
10001ef8:	e0bfff17 	ldw	r2,-4(fp)
}
10001efc:	e037883a 	mov	sp,fp
10001f00:	dfc00117 	ldw	ra,4(sp)
10001f04:	df000017 	ldw	fp,0(sp)
10001f08:	dec00204 	addi	sp,sp,8
10001f0c:	f800283a 	ret

10001f10 <stack_isempty>:

static inline bool stack_isempty(const LinkedPoints* head) {
10001f10:	defffe04 	addi	sp,sp,-8
10001f14:	df000115 	stw	fp,4(sp)
10001f18:	df000104 	addi	fp,sp,4
10001f1c:	e13fff15 	stw	r4,-4(fp)
    return head != nullptr;
10001f20:	e0bfff17 	ldw	r2,-4(fp)
10001f24:	1004c03a 	cmpne	r2,r2,zero
}
10001f28:	e037883a 	mov	sp,fp
10001f2c:	df000017 	ldw	fp,0(sp)
10001f30:	dec00104 	addi	sp,sp,4
10001f34:	f800283a 	ret

10001f38 <blinkys_move>:
static inline bool PointEquals(const Point a, const Point b) {
    return a.xpos == b.xpos && a.ypos == b.ypos;
}

// Blinky. Use Dijkstra to find the shortest path to the player.
void blinkys_move(Game* game) {
10001f38:	defea404 	addi	sp,sp,-1392
10001f3c:	dfc15b15 	stw	ra,1388(sp)
10001f40:	df015a15 	stw	fp,1384(sp)
10001f44:	df015a04 	addi	fp,sp,1384
10001f48:	e13ea615 	stw	r4,-1384(fp)
    LinkedPoints* dijkstra_fringe;
    dijkstra_fringe = nullptr;
10001f4c:	e03fff15 	stw	zero,-4(fp)
    // Put Blinky's current position into fringe.
    int8_t distances[_BOARD_H][_BOARD_W];
    bool dst_finalize[_BOARD_H][_BOARD_W];
    Tile tmp_map[_BOARD_H][_BOARD_W];

    memcpy(tmp_map, game->game_map, sizeof(tmp_map));
10001f50:	e0fea617 	ldw	r3,-1384(fp)
10001f54:	e0beaa04 	addi	r2,fp,-1368
10001f58:	0180e104 	movi	r6,900
10001f5c:	180b883a 	mov	r5,r3
10001f60:	1009883a 	mov	r4,r2
10001f64:	00157f80 	call	100157f8 <memcpy>

    // Mark other ghosts as obstacles.
    tmp_map[game->inky.xpos][game->inky.ypos] = WALL;
10001f68:	e0bea617 	ldw	r2,-1384(fp)
10001f6c:	1080e583 	ldbu	r2,918(r2)
10001f70:	10c03fcc 	andi	r3,r2,255
10001f74:	e0bea617 	ldw	r2,-1384(fp)
10001f78:	1080e5c3 	ldbu	r2,919(r2)
10001f7c:	10803fcc 	andi	r2,r2,255
10001f80:	18c003e4 	muli	r3,r3,15
10001f84:	1885883a 	add	r2,r3,r2
10001f88:	100490ba 	slli	r2,r2,2
10001f8c:	e085883a 	add	r2,fp,r2
10001f90:	103eaa15 	stw	zero,-1368(r2)
    tmp_map[game->clyde.xpos][game->clyde.ypos] = WALL;
10001f94:	e0bea617 	ldw	r2,-1384(fp)
10001f98:	1080e703 	ldbu	r2,924(r2)
10001f9c:	10c03fcc 	andi	r3,r2,255
10001fa0:	e0bea617 	ldw	r2,-1384(fp)
10001fa4:	1080e743 	ldbu	r2,925(r2)
10001fa8:	10803fcc 	andi	r2,r2,255
10001fac:	18c003e4 	muli	r3,r3,15
10001fb0:	1885883a 	add	r2,r3,r2
10001fb4:	100490ba 	slli	r2,r2,2
10001fb8:	e085883a 	add	r2,fp,r2
10001fbc:	103eaa15 	stw	zero,-1368(r2)
    tmp_map[game->pinky.xpos][game->pinky.ypos] = WALL;
10001fc0:	e0bea617 	ldw	r2,-1384(fp)
10001fc4:	1080e403 	ldbu	r2,912(r2)
10001fc8:	10c03fcc 	andi	r3,r2,255
10001fcc:	e0bea617 	ldw	r2,-1384(fp)
10001fd0:	1080e443 	ldbu	r2,913(r2)
10001fd4:	10803fcc 	andi	r2,r2,255
10001fd8:	18c003e4 	muli	r3,r3,15
10001fdc:	1885883a 	add	r2,r3,r2
10001fe0:	100490ba 	slli	r2,r2,2
10001fe4:	e085883a 	add	r2,fp,r2
10001fe8:	103eaa15 	stw	zero,-1368(r2)

    uint8_t i, j;

    for(i = 0; i<_BOARD_H;i+=1) {
10001fec:	e03ffec5 	stb	zero,-5(fp)
10001ff0:	00001806 	br	10002054 <blinkys_move+0x11c>
        for(j=0; j<_BOARD_W;j+=1) {
10001ff4:	e03ffe85 	stb	zero,-6(fp)
10001ff8:	00001006 	br	1000203c <blinkys_move+0x104>
            distances[i][j] = 63; //Something really long.
10001ffc:	e0fffec3 	ldbu	r3,-5(fp)
10002000:	e0bffe83 	ldbu	r2,-6(fp)
10002004:	18c003e4 	muli	r3,r3,15
10002008:	e0c7883a 	add	r3,fp,r3
1000200c:	1885883a 	add	r2,r3,r2
10002010:	00c00fc4 	movi	r3,63
10002014:	10ffc345 	stb	r3,-243(r2)
            dst_finalize[i][j] = false; // All not finalized.
10002018:	e0fffec3 	ldbu	r3,-5(fp)
1000201c:	e0bffe83 	ldbu	r2,-6(fp)
10002020:	18c003e4 	muli	r3,r3,15
10002024:	e0c7883a 	add	r3,fp,r3
10002028:	1885883a 	add	r2,r3,r2
1000202c:	103f8b05 	stb	zero,-468(r2)
        for(j=0; j<_BOARD_W;j+=1) {
10002030:	e0bffe83 	ldbu	r2,-6(fp)
10002034:	10800044 	addi	r2,r2,1
10002038:	e0bffe85 	stb	r2,-6(fp)
1000203c:	e0bffe83 	ldbu	r2,-6(fp)
10002040:	108003f0 	cmpltui	r2,r2,15
10002044:	103fed1e 	bne	r2,zero,10001ffc <blinkys_move+0xc4>
    for(i = 0; i<_BOARD_H;i+=1) {
10002048:	e0bffec3 	ldbu	r2,-5(fp)
1000204c:	10800044 	addi	r2,r2,1
10002050:	e0bffec5 	stb	r2,-5(fp)
10002054:	e0bffec3 	ldbu	r2,-5(fp)
10002058:	108003f0 	cmpltui	r2,r2,15
1000205c:	103fe51e 	bne	r2,zero,10001ff4 <blinkys_move+0xbc>
        }
    }

    distances[game->player.xpos][game->player.ypos] = 0;
10002060:	e0bea617 	ldw	r2,-1384(fp)
10002064:	1080e103 	ldbu	r2,900(r2)
10002068:	10c03fcc 	andi	r3,r2,255
1000206c:	e0bea617 	ldw	r2,-1384(fp)
10002070:	1080e143 	ldbu	r2,901(r2)
10002074:	10803fcc 	andi	r2,r2,255
10002078:	18c003e4 	muli	r3,r3,15
1000207c:	e0c7883a 	add	r3,fp,r3
10002080:	1885883a 	add	r2,r3,r2
10002084:	103fc345 	stb	zero,-243(r2)

    Point player_pos;
    player_pos.xpos = game->player.xpos;
10002088:	e0bea617 	ldw	r2,-1384(fp)
1000208c:	1080e103 	ldbu	r2,900(r2)
10002090:	e0bea985 	stb	r2,-1370(fp)
    player_pos.ypos = game->player.ypos;
10002094:	e0bea617 	ldw	r2,-1384(fp)
10002098:	1080e143 	ldbu	r2,901(r2)
1000209c:	e0bea9c5 	stb	r2,-1369(fp)
    // Propagate from player to ghost.
    stack_push(dijkstra_fringe, &player_pos);
100020a0:	e0bea984 	addi	r2,fp,-1370
100020a4:	100b883a 	mov	r5,r2
100020a8:	e13fff17 	ldw	r4,-4(fp)
100020ac:	0001e540 	call	10001e54 <stack_push>

    while(!stack_isempty(dijkstra_fringe)) {
100020b0:	00013606 	br	1000258c <blinkys_move+0x654>
        Point curr_seek;
        dijkstra_fringe = stack_pop(dijkstra_fringe, &curr_seek);
100020b4:	e0bea904 	addi	r2,fp,-1372
100020b8:	100b883a 	mov	r5,r2
100020bc:	e13fff17 	ldw	r4,-4(fp)
100020c0:	0001eb40 	call	10001eb4 <stack_pop>
100020c4:	e0bfff15 	stw	r2,-4(fp)
        dst_finalize[curr_seek.xpos][curr_seek.ypos] = true;
100020c8:	e0bea903 	ldbu	r2,-1372(fp)
100020cc:	10c03fcc 	andi	r3,r2,255
100020d0:	e0bea943 	ldbu	r2,-1371(fp)
100020d4:	10803fcc 	andi	r2,r2,255
100020d8:	18c003e4 	muli	r3,r3,15
100020dc:	e0c7883a 	add	r3,fp,r3
100020e0:	1885883a 	add	r2,r3,r2
100020e4:	00c00044 	movi	r3,1
100020e8:	10ff8b05 	stb	r3,-468(r2)
        // Investigate UP of current point.
        int16_t nxpos = curr_seek.xpos;
100020ec:	e0bea903 	ldbu	r2,-1372(fp)
100020f0:	10803fcc 	andi	r2,r2,255
100020f4:	e0bffd0d 	sth	r2,-12(fp)
        int16_t nypos = curr_seek.ypos;
100020f8:	e0bea943 	ldbu	r2,-1371(fp)
100020fc:	10803fcc 	andi	r2,r2,255
10002100:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
10002104:	e0bffd0f 	ldh	r2,-12(fp)
10002108:	10800384 	addi	r2,r2,14
1000210c:	00c003c4 	movi	r3,15
10002110:	10c7283a 	div	r3,r2,r3
10002114:	18c003e4 	muli	r3,r3,15
10002118:	10c5c83a 	sub	r2,r2,r3
1000211c:	e0bffd0d 	sth	r2,-12(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002120:	e13ffd0f 	ldh	r4,-12(fp)
10002124:	e0bffc8f 	ldh	r2,-14(fp)
10002128:	e0fea617 	ldw	r3,-1384(fp)
1000212c:	210003e4 	muli	r4,r4,15
10002130:	2085883a 	add	r2,r4,r2
10002134:	100490ba 	slli	r2,r2,2
10002138:	1885883a 	add	r2,r3,r2
1000213c:	10800017 	ldw	r2,0(r2)
10002140:	10003426 	beq	r2,zero,10002214 <blinkys_move+0x2dc>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002144:	e0fffd0f 	ldh	r3,-12(fp)
10002148:	e0bffc8f 	ldh	r2,-14(fp)
1000214c:	18c003e4 	muli	r3,r3,15
10002150:	e0c7883a 	add	r3,fp,r3
10002154:	1885883a 	add	r2,r3,r2
10002158:	113fc343 	ldbu	r4,-243(r2)
1000215c:	e0bea903 	ldbu	r2,-1372(fp)
10002160:	10c03fcc 	andi	r3,r2,255
10002164:	e0bea943 	ldbu	r2,-1371(fp)
10002168:	10803fcc 	andi	r2,r2,255
1000216c:	18c003e4 	muli	r3,r3,15
10002170:	e0c7883a 	add	r3,fp,r3
10002174:	1885883a 	add	r2,r3,r2
10002178:	10ffc343 	ldbu	r3,-243(r2)
1000217c:	20803fcc 	andi	r2,r4,255
10002180:	1080201c 	xori	r2,r2,128
10002184:	10bfe004 	addi	r2,r2,-128
10002188:	18c03fcc 	andi	r3,r3,255
1000218c:	18c0201c 	xori	r3,r3,128
10002190:	18ffe004 	addi	r3,r3,-128
10002194:	18800a0e 	bge	r3,r2,100021c0 <blinkys_move+0x288>
10002198:	e0bea903 	ldbu	r2,-1372(fp)
1000219c:	10c03fcc 	andi	r3,r2,255
100021a0:	e0bea943 	ldbu	r2,-1371(fp)
100021a4:	10803fcc 	andi	r2,r2,255
100021a8:	18c003e4 	muli	r3,r3,15
100021ac:	e0c7883a 	add	r3,fp,r3
100021b0:	1885883a 	add	r2,r3,r2
100021b4:	10bfc343 	ldbu	r2,-243(r2)
100021b8:	10800044 	addi	r2,r2,1
100021bc:	00000606 	br	100021d8 <blinkys_move+0x2a0>
100021c0:	e0fffd0f 	ldh	r3,-12(fp)
100021c4:	e0bffc8f 	ldh	r2,-14(fp)
100021c8:	18c003e4 	muli	r3,r3,15
100021cc:	e0c7883a 	add	r3,fp,r3
100021d0:	1885883a 	add	r2,r3,r2
100021d4:	10bfc343 	ldbu	r2,-243(r2)
100021d8:	e13ffd0f 	ldh	r4,-12(fp)
100021dc:	e0fffc8f 	ldh	r3,-14(fp)
100021e0:	210003e4 	muli	r4,r4,15
100021e4:	e109883a 	add	r4,fp,r4
100021e8:	20c7883a 	add	r3,r4,r3
100021ec:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
100021f0:	e0bffd0b 	ldhu	r2,-12(fp)
100021f4:	e0bea885 	stb	r2,-1374(fp)
            npt.ypos = nypos;
100021f8:	e0bffc8b 	ldhu	r2,-14(fp)
100021fc:	e0bea8c5 	stb	r2,-1373(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002200:	e0bea884 	addi	r2,fp,-1374
10002204:	100b883a 	mov	r5,r2
10002208:	e13fff17 	ldw	r4,-4(fp)
1000220c:	0001e540 	call	10001e54 <stack_push>
10002210:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate DOWN.
        nxpos = curr_seek.xpos;
10002214:	e0bea903 	ldbu	r2,-1372(fp)
10002218:	10803fcc 	andi	r2,r2,255
1000221c:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002220:	e0bea943 	ldbu	r2,-1371(fp)
10002224:	10803fcc 	andi	r2,r2,255
10002228:	e0bffc8d 	sth	r2,-14(fp)
        nxpos = (nxpos + 1) % _BOARD_H;
1000222c:	e0bffd0f 	ldh	r2,-12(fp)
10002230:	10800044 	addi	r2,r2,1
10002234:	00c003c4 	movi	r3,15
10002238:	10c7283a 	div	r3,r2,r3
1000223c:	18c003e4 	muli	r3,r3,15
10002240:	10c5c83a 	sub	r2,r2,r3
10002244:	e0bffd0d 	sth	r2,-12(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002248:	e13ffd0f 	ldh	r4,-12(fp)
1000224c:	e0bffc8f 	ldh	r2,-14(fp)
10002250:	e0fea617 	ldw	r3,-1384(fp)
10002254:	210003e4 	muli	r4,r4,15
10002258:	2085883a 	add	r2,r4,r2
1000225c:	100490ba 	slli	r2,r2,2
10002260:	1885883a 	add	r2,r3,r2
10002264:	10800017 	ldw	r2,0(r2)
10002268:	10003426 	beq	r2,zero,1000233c <blinkys_move+0x404>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
1000226c:	e0fffd0f 	ldh	r3,-12(fp)
10002270:	e0bffc8f 	ldh	r2,-14(fp)
10002274:	18c003e4 	muli	r3,r3,15
10002278:	e0c7883a 	add	r3,fp,r3
1000227c:	1885883a 	add	r2,r3,r2
10002280:	113fc343 	ldbu	r4,-243(r2)
10002284:	e0bea903 	ldbu	r2,-1372(fp)
10002288:	10c03fcc 	andi	r3,r2,255
1000228c:	e0bea943 	ldbu	r2,-1371(fp)
10002290:	10803fcc 	andi	r2,r2,255
10002294:	18c003e4 	muli	r3,r3,15
10002298:	e0c7883a 	add	r3,fp,r3
1000229c:	1885883a 	add	r2,r3,r2
100022a0:	10ffc343 	ldbu	r3,-243(r2)
100022a4:	20803fcc 	andi	r2,r4,255
100022a8:	1080201c 	xori	r2,r2,128
100022ac:	10bfe004 	addi	r2,r2,-128
100022b0:	18c03fcc 	andi	r3,r3,255
100022b4:	18c0201c 	xori	r3,r3,128
100022b8:	18ffe004 	addi	r3,r3,-128
100022bc:	18800a0e 	bge	r3,r2,100022e8 <blinkys_move+0x3b0>
100022c0:	e0bea903 	ldbu	r2,-1372(fp)
100022c4:	10c03fcc 	andi	r3,r2,255
100022c8:	e0bea943 	ldbu	r2,-1371(fp)
100022cc:	10803fcc 	andi	r2,r2,255
100022d0:	18c003e4 	muli	r3,r3,15
100022d4:	e0c7883a 	add	r3,fp,r3
100022d8:	1885883a 	add	r2,r3,r2
100022dc:	10bfc343 	ldbu	r2,-243(r2)
100022e0:	10800044 	addi	r2,r2,1
100022e4:	00000606 	br	10002300 <blinkys_move+0x3c8>
100022e8:	e0fffd0f 	ldh	r3,-12(fp)
100022ec:	e0bffc8f 	ldh	r2,-14(fp)
100022f0:	18c003e4 	muli	r3,r3,15
100022f4:	e0c7883a 	add	r3,fp,r3
100022f8:	1885883a 	add	r2,r3,r2
100022fc:	10bfc343 	ldbu	r2,-243(r2)
10002300:	e13ffd0f 	ldh	r4,-12(fp)
10002304:	e0fffc8f 	ldh	r3,-14(fp)
10002308:	210003e4 	muli	r4,r4,15
1000230c:	e109883a 	add	r4,fp,r4
10002310:	20c7883a 	add	r3,r4,r3
10002314:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002318:	e0bffd0b 	ldhu	r2,-12(fp)
1000231c:	e0bea805 	stb	r2,-1376(fp)
            npt.ypos = nypos;
10002320:	e0bffc8b 	ldhu	r2,-14(fp)
10002324:	e0bea845 	stb	r2,-1375(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002328:	e0bea804 	addi	r2,fp,-1376
1000232c:	100b883a 	mov	r5,r2
10002330:	e13fff17 	ldw	r4,-4(fp)
10002334:	0001e540 	call	10001e54 <stack_push>
10002338:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate LEFT.
        nxpos = curr_seek.xpos;
1000233c:	e0bea903 	ldbu	r2,-1372(fp)
10002340:	10803fcc 	andi	r2,r2,255
10002344:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002348:	e0bea943 	ldbu	r2,-1371(fp)
1000234c:	10803fcc 	andi	r2,r2,255
10002350:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10002354:	e0bffc8f 	ldh	r2,-14(fp)
10002358:	10800384 	addi	r2,r2,14
1000235c:	00c003c4 	movi	r3,15
10002360:	10c7283a 	div	r3,r2,r3
10002364:	18c003e4 	muli	r3,r3,15
10002368:	10c5c83a 	sub	r2,r2,r3
1000236c:	e0bffc8d 	sth	r2,-14(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002370:	e13ffd0f 	ldh	r4,-12(fp)
10002374:	e0bffc8f 	ldh	r2,-14(fp)
10002378:	e0fea617 	ldw	r3,-1384(fp)
1000237c:	210003e4 	muli	r4,r4,15
10002380:	2085883a 	add	r2,r4,r2
10002384:	100490ba 	slli	r2,r2,2
10002388:	1885883a 	add	r2,r3,r2
1000238c:	10800017 	ldw	r2,0(r2)
10002390:	10003426 	beq	r2,zero,10002464 <blinkys_move+0x52c>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
10002394:	e0fffd0f 	ldh	r3,-12(fp)
10002398:	e0bffc8f 	ldh	r2,-14(fp)
1000239c:	18c003e4 	muli	r3,r3,15
100023a0:	e0c7883a 	add	r3,fp,r3
100023a4:	1885883a 	add	r2,r3,r2
100023a8:	113fc343 	ldbu	r4,-243(r2)
100023ac:	e0bea903 	ldbu	r2,-1372(fp)
100023b0:	10c03fcc 	andi	r3,r2,255
100023b4:	e0bea943 	ldbu	r2,-1371(fp)
100023b8:	10803fcc 	andi	r2,r2,255
100023bc:	18c003e4 	muli	r3,r3,15
100023c0:	e0c7883a 	add	r3,fp,r3
100023c4:	1885883a 	add	r2,r3,r2
100023c8:	10ffc343 	ldbu	r3,-243(r2)
100023cc:	20803fcc 	andi	r2,r4,255
100023d0:	1080201c 	xori	r2,r2,128
100023d4:	10bfe004 	addi	r2,r2,-128
100023d8:	18c03fcc 	andi	r3,r3,255
100023dc:	18c0201c 	xori	r3,r3,128
100023e0:	18ffe004 	addi	r3,r3,-128
100023e4:	18800a0e 	bge	r3,r2,10002410 <blinkys_move+0x4d8>
100023e8:	e0bea903 	ldbu	r2,-1372(fp)
100023ec:	10c03fcc 	andi	r3,r2,255
100023f0:	e0bea943 	ldbu	r2,-1371(fp)
100023f4:	10803fcc 	andi	r2,r2,255
100023f8:	18c003e4 	muli	r3,r3,15
100023fc:	e0c7883a 	add	r3,fp,r3
10002400:	1885883a 	add	r2,r3,r2
10002404:	10bfc343 	ldbu	r2,-243(r2)
10002408:	10800044 	addi	r2,r2,1
1000240c:	00000606 	br	10002428 <blinkys_move+0x4f0>
10002410:	e0fffd0f 	ldh	r3,-12(fp)
10002414:	e0bffc8f 	ldh	r2,-14(fp)
10002418:	18c003e4 	muli	r3,r3,15
1000241c:	e0c7883a 	add	r3,fp,r3
10002420:	1885883a 	add	r2,r3,r2
10002424:	10bfc343 	ldbu	r2,-243(r2)
10002428:	e13ffd0f 	ldh	r4,-12(fp)
1000242c:	e0fffc8f 	ldh	r3,-14(fp)
10002430:	210003e4 	muli	r4,r4,15
10002434:	e109883a 	add	r4,fp,r4
10002438:	20c7883a 	add	r3,r4,r3
1000243c:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002440:	e0bffd0b 	ldhu	r2,-12(fp)
10002444:	e0bea785 	stb	r2,-1378(fp)
            npt.ypos = nypos;
10002448:	e0bffc8b 	ldhu	r2,-14(fp)
1000244c:	e0bea7c5 	stb	r2,-1377(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002450:	e0bea784 	addi	r2,fp,-1378
10002454:	100b883a 	mov	r5,r2
10002458:	e13fff17 	ldw	r4,-4(fp)
1000245c:	0001e540 	call	10001e54 <stack_push>
10002460:	e0bfff15 	stw	r2,-4(fp)
        }

        // Investigate RIGHT.
        nxpos = curr_seek.xpos;
10002464:	e0bea903 	ldbu	r2,-1372(fp)
10002468:	10803fcc 	andi	r2,r2,255
1000246c:	e0bffd0d 	sth	r2,-12(fp)
        nypos = curr_seek.ypos;
10002470:	e0bea943 	ldbu	r2,-1371(fp)
10002474:	10803fcc 	andi	r2,r2,255
10002478:	e0bffc8d 	sth	r2,-14(fp)
        nypos = (nypos + 1) % _BOARD_W;
1000247c:	e0bffc8f 	ldh	r2,-14(fp)
10002480:	10800044 	addi	r2,r2,1
10002484:	00c003c4 	movi	r3,15
10002488:	10c7283a 	div	r3,r2,r3
1000248c:	18c003e4 	muli	r3,r3,15
10002490:	10c5c83a 	sub	r2,r2,r3
10002494:	e0bffc8d 	sth	r2,-14(fp)

        if(game->game_map[nxpos][nypos] != WALL) {
10002498:	e13ffd0f 	ldh	r4,-12(fp)
1000249c:	e0bffc8f 	ldh	r2,-14(fp)
100024a0:	e0fea617 	ldw	r3,-1384(fp)
100024a4:	210003e4 	muli	r4,r4,15
100024a8:	2085883a 	add	r2,r4,r2
100024ac:	100490ba 	slli	r2,r2,2
100024b0:	1885883a 	add	r2,r3,r2
100024b4:	10800017 	ldw	r2,0(r2)
100024b8:	10003426 	beq	r2,zero,1000258c <blinkys_move+0x654>
            distances[nxpos][nypos] = distances[nxpos][nypos] > distances[curr_seek.xpos][curr_seek.ypos]? distances[curr_seek.xpos][curr_seek.ypos]+1 : distances[nxpos][nypos];
100024bc:	e0fffd0f 	ldh	r3,-12(fp)
100024c0:	e0bffc8f 	ldh	r2,-14(fp)
100024c4:	18c003e4 	muli	r3,r3,15
100024c8:	e0c7883a 	add	r3,fp,r3
100024cc:	1885883a 	add	r2,r3,r2
100024d0:	113fc343 	ldbu	r4,-243(r2)
100024d4:	e0bea903 	ldbu	r2,-1372(fp)
100024d8:	10c03fcc 	andi	r3,r2,255
100024dc:	e0bea943 	ldbu	r2,-1371(fp)
100024e0:	10803fcc 	andi	r2,r2,255
100024e4:	18c003e4 	muli	r3,r3,15
100024e8:	e0c7883a 	add	r3,fp,r3
100024ec:	1885883a 	add	r2,r3,r2
100024f0:	10ffc343 	ldbu	r3,-243(r2)
100024f4:	20803fcc 	andi	r2,r4,255
100024f8:	1080201c 	xori	r2,r2,128
100024fc:	10bfe004 	addi	r2,r2,-128
10002500:	18c03fcc 	andi	r3,r3,255
10002504:	18c0201c 	xori	r3,r3,128
10002508:	18ffe004 	addi	r3,r3,-128
1000250c:	18800a0e 	bge	r3,r2,10002538 <blinkys_move+0x600>
10002510:	e0bea903 	ldbu	r2,-1372(fp)
10002514:	10c03fcc 	andi	r3,r2,255
10002518:	e0bea943 	ldbu	r2,-1371(fp)
1000251c:	10803fcc 	andi	r2,r2,255
10002520:	18c003e4 	muli	r3,r3,15
10002524:	e0c7883a 	add	r3,fp,r3
10002528:	1885883a 	add	r2,r3,r2
1000252c:	10bfc343 	ldbu	r2,-243(r2)
10002530:	10800044 	addi	r2,r2,1
10002534:	00000606 	br	10002550 <blinkys_move+0x618>
10002538:	e0fffd0f 	ldh	r3,-12(fp)
1000253c:	e0bffc8f 	ldh	r2,-14(fp)
10002540:	18c003e4 	muli	r3,r3,15
10002544:	e0c7883a 	add	r3,fp,r3
10002548:	1885883a 	add	r2,r3,r2
1000254c:	10bfc343 	ldbu	r2,-243(r2)
10002550:	e13ffd0f 	ldh	r4,-12(fp)
10002554:	e0fffc8f 	ldh	r3,-14(fp)
10002558:	210003e4 	muli	r4,r4,15
1000255c:	e109883a 	add	r4,fp,r4
10002560:	20c7883a 	add	r3,r4,r3
10002564:	18bfc345 	stb	r2,-243(r3)
            Point npt;
            npt.xpos = nxpos;
10002568:	e0bffd0b 	ldhu	r2,-12(fp)
1000256c:	e0bea705 	stb	r2,-1380(fp)
            npt.ypos = nypos;
10002570:	e0bffc8b 	ldhu	r2,-14(fp)
10002574:	e0bea745 	stb	r2,-1379(fp)
            dijkstra_fringe = stack_push(dijkstra_fringe, &npt);
10002578:	e0bea704 	addi	r2,fp,-1380
1000257c:	100b883a 	mov	r5,r2
10002580:	e13fff17 	ldw	r4,-4(fp)
10002584:	0001e540 	call	10001e54 <stack_push>
10002588:	e0bfff15 	stw	r2,-4(fp)
    while(!stack_isempty(dijkstra_fringe)) {
1000258c:	e13fff17 	ldw	r4,-4(fp)
10002590:	0001f100 	call	10001f10 <stack_isempty>
10002594:	1080005c 	xori	r2,r2,1
10002598:	10803fcc 	andi	r2,r2,255
1000259c:	103ec51e 	bne	r2,zero,100020b4 <blinkys_move+0x17c>
        }
    }

    // Now all tiles are marked with a distance. See where should blinky go.
    uint8_t best_xpos = game->blinky.xpos;
100025a0:	e0bea617 	ldw	r2,-1384(fp)
100025a4:	1080e283 	ldbu	r2,906(r2)
100025a8:	e0bffe45 	stb	r2,-7(fp)
    uint8_t best_ypos = game->blinky.ypos;
100025ac:	e0bea617 	ldw	r2,-1384(fp)
100025b0:	1080e2c3 	ldbu	r2,907(r2)
100025b4:	e0bffe05 	stb	r2,-8(fp)
    uint8_t best_dist = 63;
100025b8:	00800fc4 	movi	r2,63
100025bc:	e0bffdc5 	stb	r2,-9(fp)

    // Investigate UP.
    int16_t nxpos = game->blinky.xpos;
100025c0:	e0bea617 	ldw	r2,-1384(fp)
100025c4:	1080e283 	ldbu	r2,906(r2)
100025c8:	10803fcc 	andi	r2,r2,255
100025cc:	e0bffc0d 	sth	r2,-16(fp)
    int16_t nypos = game->blinky.ypos;
100025d0:	e0bea617 	ldw	r2,-1384(fp)
100025d4:	1080e2c3 	ldbu	r2,907(r2)
100025d8:	10803fcc 	andi	r2,r2,255
100025dc:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos - 1 + _BOARD_H) % _BOARD_H;
100025e0:	e0bffc0f 	ldh	r2,-16(fp)
100025e4:	10800384 	addi	r2,r2,14
100025e8:	00c003c4 	movi	r3,15
100025ec:	10c7283a 	div	r3,r2,r3
100025f0:	18c003e4 	muli	r3,r3,15
100025f4:	10c5c83a 	sub	r2,r2,r3
100025f8:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
100025fc:	e0fffc0f 	ldh	r3,-16(fp)
10002600:	e0bffb8f 	ldh	r2,-18(fp)
10002604:	18c003e4 	muli	r3,r3,15
10002608:	e0c7883a 	add	r3,fp,r3
1000260c:	1885883a 	add	r2,r3,r2
10002610:	10bfc343 	ldbu	r2,-243(r2)
10002614:	10c03fcc 	andi	r3,r2,255
10002618:	18c0201c 	xori	r3,r3,128
1000261c:	18ffe004 	addi	r3,r3,-128
10002620:	e0bffdc3 	ldbu	r2,-9(fp)
10002624:	18800b0e 	bge	r3,r2,10002654 <blinkys_move+0x71c>
        best_dist = distances[nxpos][nypos];
10002628:	e0fffc0f 	ldh	r3,-16(fp)
1000262c:	e0bffb8f 	ldh	r2,-18(fp)
10002630:	18c003e4 	muli	r3,r3,15
10002634:	e0c7883a 	add	r3,fp,r3
10002638:	1885883a 	add	r2,r3,r2
1000263c:	10bfc343 	ldbu	r2,-243(r2)
10002640:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
10002644:	e0bffc0b 	ldhu	r2,-16(fp)
10002648:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
1000264c:	e0bffb8b 	ldhu	r2,-18(fp)
10002650:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate DOWN.
    nxpos = game->blinky.xpos;
10002654:	e0bea617 	ldw	r2,-1384(fp)
10002658:	1080e283 	ldbu	r2,906(r2)
1000265c:	10803fcc 	andi	r2,r2,255
10002660:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
10002664:	e0bea617 	ldw	r2,-1384(fp)
10002668:	1080e2c3 	ldbu	r2,907(r2)
1000266c:	10803fcc 	andi	r2,r2,255
10002670:	e0bffb8d 	sth	r2,-18(fp)
    nxpos = (nxpos + 1) % _BOARD_H;
10002674:	e0bffc0f 	ldh	r2,-16(fp)
10002678:	10800044 	addi	r2,r2,1
1000267c:	00c003c4 	movi	r3,15
10002680:	10c7283a 	div	r3,r2,r3
10002684:	18c003e4 	muli	r3,r3,15
10002688:	10c5c83a 	sub	r2,r2,r3
1000268c:	e0bffc0d 	sth	r2,-16(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002690:	e0fffc0f 	ldh	r3,-16(fp)
10002694:	e0bffb8f 	ldh	r2,-18(fp)
10002698:	18c003e4 	muli	r3,r3,15
1000269c:	e0c7883a 	add	r3,fp,r3
100026a0:	1885883a 	add	r2,r3,r2
100026a4:	10bfc343 	ldbu	r2,-243(r2)
100026a8:	10c03fcc 	andi	r3,r2,255
100026ac:	18c0201c 	xori	r3,r3,128
100026b0:	18ffe004 	addi	r3,r3,-128
100026b4:	e0bffdc3 	ldbu	r2,-9(fp)
100026b8:	18800b0e 	bge	r3,r2,100026e8 <blinkys_move+0x7b0>
        best_dist = distances[nxpos][nypos];
100026bc:	e0fffc0f 	ldh	r3,-16(fp)
100026c0:	e0bffb8f 	ldh	r2,-18(fp)
100026c4:	18c003e4 	muli	r3,r3,15
100026c8:	e0c7883a 	add	r3,fp,r3
100026cc:	1885883a 	add	r2,r3,r2
100026d0:	10bfc343 	ldbu	r2,-243(r2)
100026d4:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
100026d8:	e0bffc0b 	ldhu	r2,-16(fp)
100026dc:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
100026e0:	e0bffb8b 	ldhu	r2,-18(fp)
100026e4:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate LEFT.
    nxpos = game->blinky.xpos;
100026e8:	e0bea617 	ldw	r2,-1384(fp)
100026ec:	1080e283 	ldbu	r2,906(r2)
100026f0:	10803fcc 	andi	r2,r2,255
100026f4:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
100026f8:	e0bea617 	ldw	r2,-1384(fp)
100026fc:	1080e2c3 	ldbu	r2,907(r2)
10002700:	10803fcc 	andi	r2,r2,255
10002704:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos - 1 + _BOARD_W) % _BOARD_W;
10002708:	e0bffb8f 	ldh	r2,-18(fp)
1000270c:	10800384 	addi	r2,r2,14
10002710:	00c003c4 	movi	r3,15
10002714:	10c7283a 	div	r3,r2,r3
10002718:	18c003e4 	muli	r3,r3,15
1000271c:	10c5c83a 	sub	r2,r2,r3
10002720:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
10002724:	e0fffc0f 	ldh	r3,-16(fp)
10002728:	e0bffb8f 	ldh	r2,-18(fp)
1000272c:	18c003e4 	muli	r3,r3,15
10002730:	e0c7883a 	add	r3,fp,r3
10002734:	1885883a 	add	r2,r3,r2
10002738:	10bfc343 	ldbu	r2,-243(r2)
1000273c:	10c03fcc 	andi	r3,r2,255
10002740:	18c0201c 	xori	r3,r3,128
10002744:	18ffe004 	addi	r3,r3,-128
10002748:	e0bffdc3 	ldbu	r2,-9(fp)
1000274c:	18800b0e 	bge	r3,r2,1000277c <blinkys_move+0x844>
        best_dist = distances[nxpos][nypos];
10002750:	e0fffc0f 	ldh	r3,-16(fp)
10002754:	e0bffb8f 	ldh	r2,-18(fp)
10002758:	18c003e4 	muli	r3,r3,15
1000275c:	e0c7883a 	add	r3,fp,r3
10002760:	1885883a 	add	r2,r3,r2
10002764:	10bfc343 	ldbu	r2,-243(r2)
10002768:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
1000276c:	e0bffc0b 	ldhu	r2,-16(fp)
10002770:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
10002774:	e0bffb8b 	ldhu	r2,-18(fp)
10002778:	e0bffe05 	stb	r2,-8(fp)
    }

    // Investigate RIGHT.
    nxpos = game->blinky.xpos;
1000277c:	e0bea617 	ldw	r2,-1384(fp)
10002780:	1080e283 	ldbu	r2,906(r2)
10002784:	10803fcc 	andi	r2,r2,255
10002788:	e0bffc0d 	sth	r2,-16(fp)
    nypos = game->blinky.ypos;
1000278c:	e0bea617 	ldw	r2,-1384(fp)
10002790:	1080e2c3 	ldbu	r2,907(r2)
10002794:	10803fcc 	andi	r2,r2,255
10002798:	e0bffb8d 	sth	r2,-18(fp)
    nypos = (nypos + 1) % _BOARD_W;
1000279c:	e0bffb8f 	ldh	r2,-18(fp)
100027a0:	10800044 	addi	r2,r2,1
100027a4:	00c003c4 	movi	r3,15
100027a8:	10c7283a 	div	r3,r2,r3
100027ac:	18c003e4 	muli	r3,r3,15
100027b0:	10c5c83a 	sub	r2,r2,r3
100027b4:	e0bffb8d 	sth	r2,-18(fp)

    if(distances[nxpos][nypos] < best_dist) {
100027b8:	e0fffc0f 	ldh	r3,-16(fp)
100027bc:	e0bffb8f 	ldh	r2,-18(fp)
100027c0:	18c003e4 	muli	r3,r3,15
100027c4:	e0c7883a 	add	r3,fp,r3
100027c8:	1885883a 	add	r2,r3,r2
100027cc:	10bfc343 	ldbu	r2,-243(r2)
100027d0:	10c03fcc 	andi	r3,r2,255
100027d4:	18c0201c 	xori	r3,r3,128
100027d8:	18ffe004 	addi	r3,r3,-128
100027dc:	e0bffdc3 	ldbu	r2,-9(fp)
100027e0:	18800b0e 	bge	r3,r2,10002810 <blinkys_move+0x8d8>
        best_dist = distances[nxpos][nypos];
100027e4:	e0fffc0f 	ldh	r3,-16(fp)
100027e8:	e0bffb8f 	ldh	r2,-18(fp)
100027ec:	18c003e4 	muli	r3,r3,15
100027f0:	e0c7883a 	add	r3,fp,r3
100027f4:	1885883a 	add	r2,r3,r2
100027f8:	10bfc343 	ldbu	r2,-243(r2)
100027fc:	e0bffdc5 	stb	r2,-9(fp)
        best_xpos = nxpos;
10002800:	e0bffc0b 	ldhu	r2,-16(fp)
10002804:	e0bffe45 	stb	r2,-7(fp)
        best_ypos = nypos;
10002808:	e0bffb8b 	ldhu	r2,-18(fp)
1000280c:	e0bffe05 	stb	r2,-8(fp)
    }

    if(best_dist != 63) {
10002810:	e0bffdc3 	ldbu	r2,-9(fp)
10002814:	10800fe0 	cmpeqi	r2,r2,63
10002818:	1000141e 	bne	r2,zero,1000286c <blinkys_move+0x934>
    	// Add to update queue.
    	addPendingPos(game->blinky.xpos, game->blinky.ypos);
1000281c:	e0bea617 	ldw	r2,-1384(fp)
10002820:	1080e283 	ldbu	r2,906(r2)
10002824:	10c03fcc 	andi	r3,r2,255
10002828:	e0bea617 	ldw	r2,-1384(fp)
1000282c:	1080e2c3 	ldbu	r2,907(r2)
10002830:	10803fcc 	andi	r2,r2,255
10002834:	100b883a 	mov	r5,r2
10002838:	1809883a 	mov	r4,r3
1000283c:	0005dbc0 	call	10005dbc <addPendingPos>
    	addPendingPos(best_xpos, best_ypos);
10002840:	e0bffe43 	ldbu	r2,-7(fp)
10002844:	e0fffe03 	ldbu	r3,-8(fp)
10002848:	180b883a 	mov	r5,r3
1000284c:	1009883a 	mov	r4,r2
10002850:	0005dbc0 	call	10005dbc <addPendingPos>
    	// Move blinky.
        game->blinky.xpos = best_xpos;
10002854:	e0bea617 	ldw	r2,-1384(fp)
10002858:	e0fffe43 	ldbu	r3,-7(fp)
1000285c:	10c0e285 	stb	r3,906(r2)
        game->blinky.ypos = best_ypos;
10002860:	e0bea617 	ldw	r2,-1384(fp)
10002864:	e0fffe03 	ldbu	r3,-8(fp)
10002868:	10c0e2c5 	stb	r3,907(r2)
    }
}
1000286c:	0001883a 	nop
10002870:	e037883a 	mov	sp,fp
10002874:	dfc00117 	ldw	ra,4(sp)
10002878:	df000017 	ldw	fp,0(sp)
1000287c:	dec00204 	addi	sp,sp,8
10002880:	f800283a 	ret

10002884 <pinkys_move>:

// Pinky. Ambush the player by cutting a way towards the player's moving direction.
void pinkys_move(Game* game) {
10002884:	defffe04 	addi	sp,sp,-8
10002888:	df000115 	stw	fp,4(sp)
1000288c:	df000104 	addi	fp,sp,4
10002890:	e13fff15 	stw	r4,-4(fp)

}
10002894:	0001883a 	nop
10002898:	e037883a 	mov	sp,fp
1000289c:	df000017 	ldw	fp,0(sp)
100028a0:	dec00104 	addi	sp,sp,4
100028a4:	f800283a 	ret

100028a8 <inkys_move>:

// Inky. Patrol an area.
void inkys_move(Game*game) {
100028a8:	defffe04 	addi	sp,sp,-8
100028ac:	df000115 	stw	fp,4(sp)
100028b0:	df000104 	addi	fp,sp,4
100028b4:	e13fff15 	stw	r4,-4(fp)

}
100028b8:	0001883a 	nop
100028bc:	e037883a 	mov	sp,fp
100028c0:	df000017 	ldw	fp,0(sp)
100028c4:	dec00104 	addi	sp,sp,4
100028c8:	f800283a 	ret

100028cc <clydes_move>:

// Clyde. Move randomly.
void clydes_move(Game* game) {
100028cc:	defffa04 	addi	sp,sp,-24
100028d0:	dfc00515 	stw	ra,20(sp)
100028d4:	df000415 	stw	fp,16(sp)
100028d8:	df000404 	addi	fp,sp,16
100028dc:	e13ffc15 	stw	r4,-16(fp)
	int rand_direction = rand() % 4;
100028e0:	0015cf00 	call	10015cf0 <rand>
100028e4:	1007883a 	mov	r3,r2
100028e8:	00a00034 	movhi	r2,32768
100028ec:	108000c4 	addi	r2,r2,3
100028f0:	1884703a 	and	r2,r3,r2
100028f4:	1000040e 	bge	r2,zero,10002908 <clydes_move+0x3c>
100028f8:	10bfffc4 	addi	r2,r2,-1
100028fc:	00ffff04 	movi	r3,-4
10002900:	10c4b03a 	or	r2,r2,r3
10002904:	10800044 	addi	r2,r2,1
10002908:	e0bffd15 	stw	r2,-12(fp)
	int newx, newy;
	switch(rand_direction) {
1000290c:	e0bffd17 	ldw	r2,-12(fp)
10002910:	10800060 	cmpeqi	r2,r2,1
10002914:	10000f1e 	bne	r2,zero,10002954 <clydes_move+0x88>
10002918:	e0bffd17 	ldw	r2,-12(fp)
1000291c:	108000a0 	cmpeqi	r2,r2,2
10002920:	1000161e 	bne	r2,zero,1000297c <clydes_move+0xb0>
10002924:	e0bffd17 	ldw	r2,-12(fp)
10002928:	10001e1e 	bne	r2,zero,100029a4 <clydes_move+0xd8>
		case 0: {
			newx = game->clyde.xpos + 1;
1000292c:	e0bffc17 	ldw	r2,-16(fp)
10002930:	1080e703 	ldbu	r2,924(r2)
10002934:	10803fcc 	andi	r2,r2,255
10002938:	10800044 	addi	r2,r2,1
1000293c:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos;
10002940:	e0bffc17 	ldw	r2,-16(fp)
10002944:	1080e743 	ldbu	r2,925(r2)
10002948:	10803fcc 	andi	r2,r2,255
1000294c:	e0bffe15 	stw	r2,-8(fp)
			break;
10002950:	00001e06 	br	100029cc <clydes_move+0x100>
		}
		case 1: {
			newx = game->clyde.xpos - 1;
10002954:	e0bffc17 	ldw	r2,-16(fp)
10002958:	1080e703 	ldbu	r2,924(r2)
1000295c:	10803fcc 	andi	r2,r2,255
10002960:	10bfffc4 	addi	r2,r2,-1
10002964:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos;
10002968:	e0bffc17 	ldw	r2,-16(fp)
1000296c:	1080e743 	ldbu	r2,925(r2)
10002970:	10803fcc 	andi	r2,r2,255
10002974:	e0bffe15 	stw	r2,-8(fp)
			break;
10002978:	00001406 	br	100029cc <clydes_move+0x100>
		}
		case 2: {
			newx = game->clyde.xpos;
1000297c:	e0bffc17 	ldw	r2,-16(fp)
10002980:	1080e703 	ldbu	r2,924(r2)
10002984:	10803fcc 	andi	r2,r2,255
10002988:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos + 1;
1000298c:	e0bffc17 	ldw	r2,-16(fp)
10002990:	1080e743 	ldbu	r2,925(r2)
10002994:	10803fcc 	andi	r2,r2,255
10002998:	10800044 	addi	r2,r2,1
1000299c:	e0bffe15 	stw	r2,-8(fp)
			break;
100029a0:	00000a06 	br	100029cc <clydes_move+0x100>
		}
		default: {
			newx = game->clyde.xpos;
100029a4:	e0bffc17 	ldw	r2,-16(fp)
100029a8:	1080e703 	ldbu	r2,924(r2)
100029ac:	10803fcc 	andi	r2,r2,255
100029b0:	e0bfff15 	stw	r2,-4(fp)
			newy = game->clyde.ypos - 1;
100029b4:	e0bffc17 	ldw	r2,-16(fp)
100029b8:	1080e743 	ldbu	r2,925(r2)
100029bc:	10803fcc 	andi	r2,r2,255
100029c0:	10bfffc4 	addi	r2,r2,-1
100029c4:	e0bffe15 	stw	r2,-8(fp)
			break;
100029c8:	0001883a 	nop
		}
	}

	newx = (newx+16) % 16;
100029cc:	e0bfff17 	ldw	r2,-4(fp)
100029d0:	10c00404 	addi	r3,r2,16
100029d4:	00a00034 	movhi	r2,32768
100029d8:	108003c4 	addi	r2,r2,15
100029dc:	1884703a 	and	r2,r3,r2
100029e0:	1000040e 	bge	r2,zero,100029f4 <clydes_move+0x128>
100029e4:	10bfffc4 	addi	r2,r2,-1
100029e8:	00fffc04 	movi	r3,-16
100029ec:	10c4b03a 	or	r2,r2,r3
100029f0:	10800044 	addi	r2,r2,1
100029f4:	e0bfff15 	stw	r2,-4(fp)
	newy = (newy+16) % 16;
100029f8:	e0bffe17 	ldw	r2,-8(fp)
100029fc:	10c00404 	addi	r3,r2,16
10002a00:	00a00034 	movhi	r2,32768
10002a04:	108003c4 	addi	r2,r2,15
10002a08:	1884703a 	and	r2,r3,r2
10002a0c:	1000040e 	bge	r2,zero,10002a20 <clydes_move+0x154>
10002a10:	10bfffc4 	addi	r2,r2,-1
10002a14:	00fffc04 	movi	r3,-16
10002a18:	10c4b03a 	or	r2,r2,r3
10002a1c:	10800044 	addi	r2,r2,1
10002a20:	e0bffe15 	stw	r2,-8(fp)
	if(game->game_map[newx][newy] != WALL) {
10002a24:	e0fffc17 	ldw	r3,-16(fp)
10002a28:	e0bfff17 	ldw	r2,-4(fp)
10002a2c:	110003e4 	muli	r4,r2,15
10002a30:	e0bffe17 	ldw	r2,-8(fp)
10002a34:	2085883a 	add	r2,r4,r2
10002a38:	100490ba 	slli	r2,r2,2
10002a3c:	1885883a 	add	r2,r3,r2
10002a40:	10800017 	ldw	r2,0(r2)
10002a44:	10001c26 	beq	r2,zero,10002ab8 <clydes_move+0x1ec>
		// Add to update queue.
		addPendingPos(game->clyde.xpos, game->clyde.ypos);
10002a48:	e0bffc17 	ldw	r2,-16(fp)
10002a4c:	1080e703 	ldbu	r2,924(r2)
10002a50:	10c03fcc 	andi	r3,r2,255
10002a54:	e0bffc17 	ldw	r2,-16(fp)
10002a58:	1080e743 	ldbu	r2,925(r2)
10002a5c:	10803fcc 	andi	r2,r2,255
10002a60:	100b883a 	mov	r5,r2
10002a64:	1809883a 	mov	r4,r3
10002a68:	0005dbc0 	call	10005dbc <addPendingPos>
		addPendingPos(newx, newy);
10002a6c:	e0bfff17 	ldw	r2,-4(fp)
10002a70:	10bfffcc 	andi	r2,r2,65535
10002a74:	10a0001c 	xori	r2,r2,32768
10002a78:	10a00004 	addi	r2,r2,-32768
10002a7c:	e0fffe17 	ldw	r3,-8(fp)
10002a80:	18ffffcc 	andi	r3,r3,65535
10002a84:	18e0001c 	xori	r3,r3,32768
10002a88:	18e00004 	addi	r3,r3,-32768
10002a8c:	180b883a 	mov	r5,r3
10002a90:	1009883a 	mov	r4,r2
10002a94:	0005dbc0 	call	10005dbc <addPendingPos>
		game->clyde.xpos = newx;
10002a98:	e0bfff17 	ldw	r2,-4(fp)
10002a9c:	1007883a 	mov	r3,r2
10002aa0:	e0bffc17 	ldw	r2,-16(fp)
10002aa4:	10c0e705 	stb	r3,924(r2)
		game->clyde.ypos = newy;
10002aa8:	e0bffe17 	ldw	r2,-8(fp)
10002aac:	1007883a 	mov	r3,r2
10002ab0:	e0bffc17 	ldw	r2,-16(fp)
10002ab4:	10c0e745 	stb	r3,925(r2)
	}
}
10002ab8:	0001883a 	nop
10002abc:	e037883a 	mov	sp,fp
10002ac0:	dfc00117 	ldw	ra,4(sp)
10002ac4:	df000017 	ldw	fp,0(sp)
10002ac8:	dec00204 	addi	sp,sp,8
10002acc:	f800283a 	ret

10002ad0 <blinkyPalette>:

void blinkyPalette() {
10002ad0:	defffd04 	addi	sp,sp,-12
10002ad4:	dfc00215 	stw	ra,8(sp)
10002ad8:	df000115 	stw	fp,4(sp)
10002adc:	df000104 	addi	fp,sp,4
	Palette* binkyPalette;
	binkyPalette = malloc(sizeof(Palette));
10002ae0:	01000504 	movi	r4,20
10002ae4:	0014e700 	call	10014e70 <malloc>
10002ae8:	e0bfff15 	stw	r2,-4(fp)
	binkyPalette->colors[0] = 0x000000;
10002aec:	e0bfff17 	ldw	r2,-4(fp)
10002af0:	10000115 	stw	zero,4(r2)
	binkyPalette->colors[3] = 0xFF5243;
10002af4:	e0ffff17 	ldw	r3,-4(fp)
10002af8:	00803ff4 	movhi	r2,255
10002afc:	109490c4 	addi	r2,r2,21059
10002b00:	18800415 	stw	r2,16(r3)
	binkyPalette->paletteId = 3;
10002b04:	e0bfff17 	ldw	r2,-4(fp)
10002b08:	00c000c4 	movi	r3,3
10002b0c:	10c00015 	stw	r3,0(r2)
	writePalette(binkyPalette);
10002b10:	e13fff17 	ldw	r4,-4(fp)
10002b14:	00047e00 	call	100047e0 <writePalette>
	free(blinkyPalette);
10002b18:	01040034 	movhi	r4,4096
10002b1c:	210ab404 	addi	r4,r4,10960
10002b20:	0014e800 	call	10014e80 <free>
}
10002b24:	0001883a 	nop
10002b28:	e037883a 	mov	sp,fp
10002b2c:	dfc00117 	ldw	ra,4(sp)
10002b30:	df000017 	ldw	fp,0(sp)
10002b34:	dec00204 	addi	sp,sp,8
10002b38:	f800283a 	ret

10002b3c <pinkyPalette>:

void pinkyPalette() {
10002b3c:	defffd04 	addi	sp,sp,-12
10002b40:	dfc00215 	stw	ra,8(sp)
10002b44:	df000115 	stw	fp,4(sp)
10002b48:	df000104 	addi	fp,sp,4
	Palette* pinkyPalette;
	pinkyPalette = malloc(sizeof(Palette));
10002b4c:	01000504 	movi	r4,20
10002b50:	0014e700 	call	10014e70 <malloc>
10002b54:	e0bfff15 	stw	r2,-4(fp)
	pinkyPalette->colors[0] = 0x000000;
10002b58:	e0bfff17 	ldw	r2,-4(fp)
10002b5c:	10000115 	stw	zero,4(r2)
	pinkyPalette->colors[3] = 0xC92CE8;
10002b60:	e0ffff17 	ldw	r3,-4(fp)
10002b64:	00803274 	movhi	r2,201
10002b68:	108b3a04 	addi	r2,r2,11496
10002b6c:	18800415 	stw	r2,16(r3)
	pinkyPalette->paletteId = 4;
10002b70:	e0bfff17 	ldw	r2,-4(fp)
10002b74:	00c00104 	movi	r3,4
10002b78:	10c00015 	stw	r3,0(r2)
	writePalette(pinkyPalette);
10002b7c:	e13fff17 	ldw	r4,-4(fp)
10002b80:	00047e00 	call	100047e0 <writePalette>
	free(pinkyPalette);
10002b84:	e13fff17 	ldw	r4,-4(fp)
10002b88:	0014e800 	call	10014e80 <free>
}
10002b8c:	0001883a 	nop
10002b90:	e037883a 	mov	sp,fp
10002b94:	dfc00117 	ldw	ra,4(sp)
10002b98:	df000017 	ldw	fp,0(sp)
10002b9c:	dec00204 	addi	sp,sp,8
10002ba0:	f800283a 	ret

10002ba4 <inkyPalette>:

void inkyPalette(){
10002ba4:	defffd04 	addi	sp,sp,-12
10002ba8:	dfc00215 	stw	ra,8(sp)
10002bac:	df000115 	stw	fp,4(sp)
10002bb0:	df000104 	addi	fp,sp,4
	Palette* inkyPalette;
	inkyPalette = malloc(sizeof(Palette));
10002bb4:	01000504 	movi	r4,20
10002bb8:	0014e700 	call	10014e70 <malloc>
10002bbc:	e0bfff15 	stw	r2,-4(fp)
	inkyPalette->colors[0] = 0x000000;
10002bc0:	e0bfff17 	ldw	r2,-4(fp)
10002bc4:	10000115 	stw	zero,4(r2)
	inkyPalette->colors[3] = 0x2CD0E8;
10002bc8:	e0ffff17 	ldw	r3,-4(fp)
10002bcc:	00800b74 	movhi	r2,45
10002bd0:	10b43a04 	addi	r2,r2,-12056
10002bd4:	18800415 	stw	r2,16(r3)
	inkyPalette->paletteId = 5;
10002bd8:	e0bfff17 	ldw	r2,-4(fp)
10002bdc:	00c00144 	movi	r3,5
10002be0:	10c00015 	stw	r3,0(r2)
	writePalette(inkyPalette);
10002be4:	e13fff17 	ldw	r4,-4(fp)
10002be8:	00047e00 	call	100047e0 <writePalette>
	free(inkyPalette);
10002bec:	e13fff17 	ldw	r4,-4(fp)
10002bf0:	0014e800 	call	10014e80 <free>
}
10002bf4:	0001883a 	nop
10002bf8:	e037883a 	mov	sp,fp
10002bfc:	dfc00117 	ldw	ra,4(sp)
10002c00:	df000017 	ldw	fp,0(sp)
10002c04:	dec00204 	addi	sp,sp,8
10002c08:	f800283a 	ret

10002c0c <clydePalette>:

void clydePalette() {
10002c0c:	defffd04 	addi	sp,sp,-12
10002c10:	dfc00215 	stw	ra,8(sp)
10002c14:	df000115 	stw	fp,4(sp)
10002c18:	df000104 	addi	fp,sp,4
	Palette* clydePalette = malloc(sizeof(Palette));
10002c1c:	01000504 	movi	r4,20
10002c20:	0014e700 	call	10014e70 <malloc>
10002c24:	e0bfff15 	stw	r2,-4(fp)
	clydePalette->colors[0] = 0x000000;
10002c28:	e0bfff17 	ldw	r2,-4(fp)
10002c2c:	10000115 	stw	zero,4(r2)
	clydePalette->colors[3] = 0xFFB732;
10002c30:	e0ffff17 	ldw	r3,-4(fp)
10002c34:	00804034 	movhi	r2,256
10002c38:	10adcc84 	addi	r2,r2,-18638
10002c3c:	18800415 	stw	r2,16(r3)
	clydePalette->paletteId = 6;
10002c40:	e0bfff17 	ldw	r2,-4(fp)
10002c44:	00c00184 	movi	r3,6
10002c48:	10c00015 	stw	r3,0(r2)
	writePalette(clydePalette);
10002c4c:	e13fff17 	ldw	r4,-4(fp)
10002c50:	00047e00 	call	100047e0 <writePalette>
	free(clydePalette);
10002c54:	e13fff17 	ldw	r4,-4(fp)
10002c58:	0014e800 	call	10014e80 <free>
}
10002c5c:	0001883a 	nop
10002c60:	e037883a 	mov	sp,fp
10002c64:	dfc00117 	ldw	ra,4(sp)
10002c68:	df000017 	ldw	fp,0(sp)
10002c6c:	dec00204 	addi	sp,sp,8
10002c70:	f800283a 	ret

10002c74 <gbPalette>:

void gbPalette() {
10002c74:	defffd04 	addi	sp,sp,-12
10002c78:	dfc00215 	stw	ra,8(sp)
10002c7c:	df000115 	stw	fp,4(sp)
10002c80:	df000104 	addi	fp,sp,4
	Palette* gbPalette = malloc(sizeof(Palette));
10002c84:	01000504 	movi	r4,20
10002c88:	0014e700 	call	10014e70 <malloc>
10002c8c:	e0bfff15 	stw	r2,-4(fp)
	gbPalette->colors[0] = 0x000000;
10002c90:	e0bfff17 	ldw	r2,-4(fp)
10002c94:	10000115 	stw	zero,4(r2)
	gbPalette->colors[1] = 0xFFFFFF;	// White
10002c98:	e0ffff17 	ldw	r3,-4(fp)
10002c9c:	00804034 	movhi	r2,256
10002ca0:	10bfffc4 	addi	r2,r2,-1
10002ca4:	18800215 	stw	r2,8(r3)
	gbPalette->colors[2] = 0xFFFFFF;
10002ca8:	e0ffff17 	ldw	r3,-4(fp)
10002cac:	00804034 	movhi	r2,256
10002cb0:	10bfffc4 	addi	r2,r2,-1
10002cb4:	18800315 	stw	r2,12(r3)
	gbPalette->colors[3] = 0xFFFF00;	// Yellow
10002cb8:	e0ffff17 	ldw	r3,-4(fp)
10002cbc:	00804034 	movhi	r2,256
10002cc0:	10bfc004 	addi	r2,r2,-256
10002cc4:	18800415 	stw	r2,16(r3)
	gbPalette->paletteId = 1;
10002cc8:	e0bfff17 	ldw	r2,-4(fp)
10002ccc:	00c00044 	movi	r3,1
10002cd0:	10c00015 	stw	r3,0(r2)
	writePalette(gbPalette);
10002cd4:	e13fff17 	ldw	r4,-4(fp)
10002cd8:	00047e00 	call	100047e0 <writePalette>
	free(gbPalette);
10002cdc:	e13fff17 	ldw	r4,-4(fp)
10002ce0:	0014e800 	call	10014e80 <free>
}
10002ce4:	0001883a 	nop
10002ce8:	e037883a 	mov	sp,fp
10002cec:	dfc00117 	ldw	ra,4(sp)
10002cf0:	df000017 	ldw	fp,0(sp)
10002cf4:	dec00204 	addi	sp,sp,8
10002cf8:	f800283a 	ret

10002cfc <textPalette>:

void textPalette() {
10002cfc:	defffd04 	addi	sp,sp,-12
10002d00:	dfc00215 	stw	ra,8(sp)
10002d04:	df000115 	stw	fp,4(sp)
10002d08:	df000104 	addi	fp,sp,4
	Palette* textPalette = malloc(sizeof(Palette));
10002d0c:	01000504 	movi	r4,20
10002d10:	0014e700 	call	10014e70 <malloc>
10002d14:	e0bfff15 	stw	r2,-4(fp)
	textPalette->colors[0] = 0x000000;
10002d18:	e0bfff17 	ldw	r2,-4(fp)
10002d1c:	10000115 	stw	zero,4(r2)
	textPalette->colors[1] = 0xFFFFFF;
10002d20:	e0ffff17 	ldw	r3,-4(fp)
10002d24:	00804034 	movhi	r2,256
10002d28:	10bfffc4 	addi	r2,r2,-1
10002d2c:	18800215 	stw	r2,8(r3)
	textPalette->colors[2] = 0xFFFFFF;
10002d30:	e0ffff17 	ldw	r3,-4(fp)
10002d34:	00804034 	movhi	r2,256
10002d38:	10bfffc4 	addi	r2,r2,-1
10002d3c:	18800315 	stw	r2,12(r3)
	textPalette->colors[3] = 0xFFFFFF;
10002d40:	e0ffff17 	ldw	r3,-4(fp)
10002d44:	00804034 	movhi	r2,256
10002d48:	10bfffc4 	addi	r2,r2,-1
10002d4c:	18800415 	stw	r2,16(r3)
	textPalette->paletteId = 0;
10002d50:	e0bfff17 	ldw	r2,-4(fp)
10002d54:	10000015 	stw	zero,0(r2)
	writePalette(textPalette);
10002d58:	e13fff17 	ldw	r4,-4(fp)
10002d5c:	00047e00 	call	100047e0 <writePalette>
	free(textPalette);
10002d60:	e13fff17 	ldw	r4,-4(fp)
10002d64:	0014e800 	call	10014e80 <free>
}
10002d68:	0001883a 	nop
10002d6c:	e037883a 	mov	sp,fp
10002d70:	dfc00117 	ldw	ra,4(sp)
10002d74:	df000017 	ldw	fp,0(sp)
10002d78:	dec00204 	addi	sp,sp,8
10002d7c:	f800283a 	ret

10002d80 <wallPalette>:

void wallPalette() {
10002d80:	defffd04 	addi	sp,sp,-12
10002d84:	dfc00215 	stw	ra,8(sp)
10002d88:	df000115 	stw	fp,4(sp)
10002d8c:	df000104 	addi	fp,sp,4
	Palette* wallPalette = malloc(sizeof(Palette));
10002d90:	01000504 	movi	r4,20
10002d94:	0014e700 	call	10014e70 <malloc>
10002d98:	e0bfff15 	stw	r2,-4(fp)
	wallPalette->colors[0] = 0x0000FF;
10002d9c:	e0bfff17 	ldw	r2,-4(fp)
10002da0:	00c03fc4 	movi	r3,255
10002da4:	10c00115 	stw	r3,4(r2)
	wallPalette->colors[1] = 0x000000;
10002da8:	e0bfff17 	ldw	r2,-4(fp)
10002dac:	10000215 	stw	zero,8(r2)
	wallPalette->colors[2] = 0x000000;
10002db0:	e0bfff17 	ldw	r2,-4(fp)
10002db4:	10000315 	stw	zero,12(r2)
	wallPalette->colors[3] = 0x000000;
10002db8:	e0bfff17 	ldw	r2,-4(fp)
10002dbc:	10000415 	stw	zero,16(r2)
	wallPalette->paletteId = 2;
10002dc0:	e0bfff17 	ldw	r2,-4(fp)
10002dc4:	00c00084 	movi	r3,2
10002dc8:	10c00015 	stw	r3,0(r2)
	writePalette(wallPalette);
10002dcc:	e13fff17 	ldw	r4,-4(fp)
10002dd0:	00047e00 	call	100047e0 <writePalette>
	free(wallPalette);
10002dd4:	e13fff17 	ldw	r4,-4(fp)
10002dd8:	0014e800 	call	10014e80 <free>
}
10002ddc:	0001883a 	nop
10002de0:	e037883a 	mov	sp,fp
10002de4:	dfc00117 	ldw	ra,4(sp)
10002de8:	df000017 	ldw	fp,0(sp)
10002dec:	dec00204 	addi	sp,sp,8
10002df0:	f800283a 	ret

10002df4 <initScreen>:
// This function initializes the screen.
void initScreen() {
10002df4:	deff5c04 	addi	sp,sp,-656
10002df8:	dfc0a315 	stw	ra,652(sp)
10002dfc:	df00a215 	stw	fp,648(sp)
10002e00:	df00a204 	addi	fp,sp,648
	textPalette();
10002e04:	0002cfc0 	call	10002cfc <textPalette>
	clearScreen();
10002e08:	0004b700 	call	10004b70 <clearScreen>

	writeText(0,0,"Score",0);
10002e0c:	000f883a 	mov	r7,zero
10002e10:	018400b4 	movhi	r6,4098
10002e14:	31926404 	addi	r6,r6,18832
10002e18:	000b883a 	mov	r5,zero
10002e1c:	0009883a 	mov	r4,zero
10002e20:	0004ad80 	call	10004ad8 <writeText>
	writeText(2,1,"000000",0);
10002e24:	000f883a 	mov	r7,zero
10002e28:	018400b4 	movhi	r6,4098
10002e2c:	31926604 	addi	r6,r6,18840
10002e30:	01400044 	movi	r5,1
10002e34:	01000084 	movi	r4,2
10002e38:	0004ad80 	call	10004ad8 <writeText>
	writeText(0,2,"HighScore",0);
10002e3c:	000f883a 	mov	r7,zero
10002e40:	018400b4 	movhi	r6,4098
10002e44:	31926804 	addi	r6,r6,18848
10002e48:	01400084 	movi	r5,2
10002e4c:	0009883a 	mov	r4,zero
10002e50:	0004ad80 	call	10004ad8 <writeText>
	writeText(2,3,"000000",0);
10002e54:	000f883a 	mov	r7,zero
10002e58:	018400b4 	movhi	r6,4098
10002e5c:	31926604 	addi	r6,r6,18840
10002e60:	014000c4 	movi	r5,3
10002e64:	01000084 	movi	r4,2
10002e68:	0004ad80 	call	10004ad8 <writeText>

	gbPalette();
10002e6c:	0002c740 	call	10002c74 <gbPalette>
	wallPalette();
10002e70:	0002d800 	call	10002d80 <wallPalette>

	blinkyPalette();
10002e74:	0002ad00 	call	10002ad0 <blinkyPalette>
	inkyPalette();
10002e78:	0002ba40 	call	10002ba4 <inkyPalette>
	pinkyPalette();
10002e7c:	0002b3c0 	call	10002b3c <pinkyPalette>
	clydePalette();
10002e80:	0002c0c0 	call	10002c0c <clydePalette>

	Sprite candy_left;
	Sprite candy_right;
	Sprite scandy_left;
	Sprite scandy_right;
	candy_left.sprite_id = 1;
10002e84:	00800044 	movi	r2,1
10002e88:	e0bff78d 	sth	r2,-34(fp)
	candy_right.sprite_id = 2;
10002e8c:	00800084 	movi	r2,2
10002e90:	e0bfef0d 	sth	r2,-68(fp)
	scandy_left.sprite_id = 3;
10002e94:	008000c4 	movi	r2,3
10002e98:	e0bfe68d 	sth	r2,-102(fp)
	scandy_right.sprite_id = 4;
10002e9c:	00800104 	movi	r2,4
10002ea0:	e0bfde0d 	sth	r2,-136(fp)
	char candy_matl[16][8] = {
10002ea4:	e0ffbe04 	addi	r3,fp,-264
10002ea8:	008400b4 	movhi	r2,4098
10002eac:	10926a84 	addi	r2,r2,18858
10002eb0:	01002004 	movi	r4,128
10002eb4:	200d883a 	mov	r6,r4
10002eb8:	100b883a 	mov	r5,r2
10002ebc:	1809883a 	mov	r4,r3
10002ec0:	00157f80 	call	100157f8 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char candy_matr[16][8] = {
10002ec4:	e0ff9e04 	addi	r3,fp,-392
10002ec8:	008400b4 	movhi	r2,4098
10002ecc:	10928a84 	addi	r2,r2,18986
10002ed0:	01002004 	movi	r4,128
10002ed4:	200d883a 	mov	r6,r4
10002ed8:	100b883a 	mov	r5,r2
10002edc:	1809883a 	mov	r4,r3
10002ee0:	00157f80 	call	100157f8 <memcpy>
			"        ",
			"        ",
			"        ",
			"        ",
	};
	char scandy_matl[16][8] = {
10002ee4:	e0ff7e04 	addi	r3,fp,-520
10002ee8:	008400b4 	movhi	r2,4098
10002eec:	1092aa84 	addi	r2,r2,19114
10002ef0:	01002004 	movi	r4,128
10002ef4:	200d883a 	mov	r6,r4
10002ef8:	100b883a 	mov	r5,r2
10002efc:	1809883a 	mov	r4,r3
10002f00:	00157f80 	call	100157f8 <memcpy>
			"      *@",
			"       *",
			"        ",
			"        ",
	};
	char scandy_matr[16][8] = {
10002f04:	e0ff5e04 	addi	r3,fp,-648
10002f08:	008400b4 	movhi	r2,4098
10002f0c:	1092ca84 	addi	r2,r2,19242
10002f10:	01002004 	movi	r4,128
10002f14:	200d883a 	mov	r6,r4
10002f18:	100b883a 	mov	r5,r2
10002f1c:	1809883a 	mov	r4,r3
10002f20:	00157f80 	call	100157f8 <memcpy>
			"@*      ",
			"*       ",
			"        ",
			"        ",
	};
	parseSprite(&candy_left, candy_matl);
10002f24:	e0ffbe04 	addi	r3,fp,-264
10002f28:	e0bff784 	addi	r2,fp,-34
10002f2c:	180b883a 	mov	r5,r3
10002f30:	1009883a 	mov	r4,r2
10002f34:	000498c0 	call	1000498c <parseSprite>
	writeSprite(&candy_left);
10002f38:	e0bff784 	addi	r2,fp,-34
10002f3c:	1009883a 	mov	r4,r2
10002f40:	0004a040 	call	10004a04 <writeSprite>
	parseSprite(&candy_right, candy_matr);
10002f44:	e0ff9e04 	addi	r3,fp,-392
10002f48:	e0bfef04 	addi	r2,fp,-68
10002f4c:	180b883a 	mov	r5,r3
10002f50:	1009883a 	mov	r4,r2
10002f54:	000498c0 	call	1000498c <parseSprite>
	writeSprite(&candy_right);
10002f58:	e0bfef04 	addi	r2,fp,-68
10002f5c:	1009883a 	mov	r4,r2
10002f60:	0004a040 	call	10004a04 <writeSprite>
	parseSprite(&scandy_left, scandy_matl);
10002f64:	e0ff7e04 	addi	r3,fp,-520
10002f68:	e0bfe684 	addi	r2,fp,-102
10002f6c:	180b883a 	mov	r5,r3
10002f70:	1009883a 	mov	r4,r2
10002f74:	000498c0 	call	1000498c <parseSprite>
	writeSprite(&scandy_left);
10002f78:	e0bfe684 	addi	r2,fp,-102
10002f7c:	1009883a 	mov	r4,r2
10002f80:	0004a040 	call	10004a04 <writeSprite>
	parseSprite(&scandy_right, scandy_matr);
10002f84:	e0ff5e04 	addi	r3,fp,-648
10002f88:	e0bfde04 	addi	r2,fp,-136
10002f8c:	180b883a 	mov	r5,r3
10002f90:	1009883a 	mov	r4,r2
10002f94:	000498c0 	call	1000498c <parseSprite>
	writeSprite(&scandy_right);
10002f98:	e0bfde04 	addi	r2,fp,-136
10002f9c:	1009883a 	mov	r4,r2
10002fa0:	0004a040 	call	10004a04 <writeSprite>
}
10002fa4:	0001883a 	nop
10002fa8:	e037883a 	mov	sp,fp
10002fac:	dfc00117 	ldw	ra,4(sp)
10002fb0:	df000017 	ldw	fp,0(sp)
10002fb4:	dec00204 	addi	sp,sp,8
10002fb8:	f800283a 	ret

10002fbc <drawBoard>:

// Draw the game board.
void drawBoard(Game* game) {
10002fbc:	defff904 	addi	sp,sp,-28
10002fc0:	dfc00615 	stw	ra,24(sp)
10002fc4:	df000515 	stw	fp,20(sp)
10002fc8:	df000504 	addi	fp,sp,20
10002fcc:	e13ffb15 	stw	r4,-20(fp)
	// Draw the board.
	for(int i=0;i<_BOARD_W;i+=1) {
10002fd0:	e03fff15 	stw	zero,-4(fp)
10002fd4:	00009006 	br	10003218 <drawBoard+0x25c>
		for(int j=0;j<_BOARD_H;j+=1) {
10002fd8:	e03ffe15 	stw	zero,-8(fp)
10002fdc:	00008806 	br	10003200 <drawBoard+0x244>
			if(i==game->blinky.xpos && j==game->blinky.ypos) {
10002fe0:	e0bffb17 	ldw	r2,-20(fp)
10002fe4:	1080e283 	ldbu	r2,906(r2)
10002fe8:	10803fcc 	andi	r2,r2,255
10002fec:	e0ffff17 	ldw	r3,-4(fp)
10002ff0:	1880051e 	bne	r3,r2,10003008 <drawBoard+0x4c>
10002ff4:	e0bffb17 	ldw	r2,-20(fp)
10002ff8:	1080e2c3 	ldbu	r2,907(r2)
10002ffc:	10803fcc 	andi	r2,r2,255
10003000:	e0fffe17 	ldw	r3,-8(fp)
10003004:	18807226 	beq	r3,r2,100031d0 <drawBoard+0x214>
				continue;
			} else if(i==game->pinky.xpos && j==game->pinky.ypos) {
10003008:	e0bffb17 	ldw	r2,-20(fp)
1000300c:	1080e403 	ldbu	r2,912(r2)
10003010:	10803fcc 	andi	r2,r2,255
10003014:	e0ffff17 	ldw	r3,-4(fp)
10003018:	1880051e 	bne	r3,r2,10003030 <drawBoard+0x74>
1000301c:	e0bffb17 	ldw	r2,-20(fp)
10003020:	1080e443 	ldbu	r2,913(r2)
10003024:	10803fcc 	andi	r2,r2,255
10003028:	e0fffe17 	ldw	r3,-8(fp)
1000302c:	18806a26 	beq	r3,r2,100031d8 <drawBoard+0x21c>
				continue;
			} else if(i==game->inky.xpos && j==game->inky.ypos) {
10003030:	e0bffb17 	ldw	r2,-20(fp)
10003034:	1080e583 	ldbu	r2,918(r2)
10003038:	10803fcc 	andi	r2,r2,255
1000303c:	e0ffff17 	ldw	r3,-4(fp)
10003040:	1880051e 	bne	r3,r2,10003058 <drawBoard+0x9c>
10003044:	e0bffb17 	ldw	r2,-20(fp)
10003048:	1080e5c3 	ldbu	r2,919(r2)
1000304c:	10803fcc 	andi	r2,r2,255
10003050:	e0fffe17 	ldw	r3,-8(fp)
10003054:	18806226 	beq	r3,r2,100031e0 <drawBoard+0x224>
				continue;
			} else if(i==game->clyde.xpos && j==game->clyde.ypos) {
10003058:	e0bffb17 	ldw	r2,-20(fp)
1000305c:	1080e703 	ldbu	r2,924(r2)
10003060:	10803fcc 	andi	r2,r2,255
10003064:	e0ffff17 	ldw	r3,-4(fp)
10003068:	1880051e 	bne	r3,r2,10003080 <drawBoard+0xc4>
1000306c:	e0bffb17 	ldw	r2,-20(fp)
10003070:	1080e743 	ldbu	r2,925(r2)
10003074:	10803fcc 	andi	r2,r2,255
10003078:	e0fffe17 	ldw	r3,-8(fp)
1000307c:	18805a26 	beq	r3,r2,100031e8 <drawBoard+0x22c>
				continue;
			} else if(i==game->player.xpos && j==game->player.ypos) {
10003080:	e0bffb17 	ldw	r2,-20(fp)
10003084:	1080e103 	ldbu	r2,900(r2)
10003088:	10803fcc 	andi	r2,r2,255
1000308c:	e0ffff17 	ldw	r3,-4(fp)
10003090:	1880051e 	bne	r3,r2,100030a8 <drawBoard+0xec>
10003094:	e0bffb17 	ldw	r2,-20(fp)
10003098:	1080e143 	ldbu	r2,901(r2)
1000309c:	10803fcc 	andi	r2,r2,255
100030a0:	e0fffe17 	ldw	r3,-8(fp)
100030a4:	18805226 	beq	r3,r2,100031f0 <drawBoard+0x234>
				continue;
			}
			int curr_tile_xb = j*2+20;
100030a8:	e0bffe17 	ldw	r2,-8(fp)
100030ac:	10800284 	addi	r2,r2,10
100030b0:	1085883a 	add	r2,r2,r2
100030b4:	e0bffd15 	stw	r2,-12(fp)
			int curr_tile_y = i;
100030b8:	e0bfff17 	ldw	r2,-4(fp)
100030bc:	e0bffc15 	stw	r2,-16(fp)
			switch(game->game_map[i][j]) {
100030c0:	e0fffb17 	ldw	r3,-20(fp)
100030c4:	e0bfff17 	ldw	r2,-4(fp)
100030c8:	110003e4 	muli	r4,r2,15
100030cc:	e0bffe17 	ldw	r2,-8(fp)
100030d0:	2085883a 	add	r2,r4,r2
100030d4:	100490ba 	slli	r2,r2,2
100030d8:	1885883a 	add	r2,r3,r2
100030dc:	10800017 	ldw	r2,0(r2)
100030e0:	10c00060 	cmpeqi	r3,r2,1
100030e4:	1800131e 	bne	r3,zero,10003134 <drawBoard+0x178>
100030e8:	10000526 	beq	r2,zero,10003100 <drawBoard+0x144>
100030ec:	10c000a0 	cmpeqi	r3,r2,2
100030f0:	18002a1e 	bne	r3,zero,1000319c <drawBoard+0x1e0>
100030f4:	108000e0 	cmpeqi	r2,r2,3
100030f8:	10001b1e 	bne	r2,zero,10003168 <drawBoard+0x1ac>
100030fc:	00003d06 	br	100031f4 <drawBoard+0x238>
				case WALL: {
					drawTile(curr_tile_xb, curr_tile_y, 2, 0);
10003100:	000f883a 	mov	r7,zero
10003104:	01800084 	movi	r6,2
10003108:	e17ffc17 	ldw	r5,-16(fp)
1000310c:	e13ffd17 	ldw	r4,-12(fp)
10003110:	00046b40 	call	100046b4 <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
10003114:	e0bffd17 	ldw	r2,-12(fp)
10003118:	10800044 	addi	r2,r2,1
1000311c:	000f883a 	mov	r7,zero
10003120:	01800084 	movi	r6,2
10003124:	e17ffc17 	ldw	r5,-16(fp)
10003128:	1009883a 	mov	r4,r2
1000312c:	00046b40 	call	100046b4 <drawTile>
					break;
10003130:	00003006 	br	100031f4 <drawBoard+0x238>
				}
				case CANDY: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 129);
10003134:	01c02044 	movi	r7,129
10003138:	01800044 	movi	r6,1
1000313c:	e17ffc17 	ldw	r5,-16(fp)
10003140:	e13ffd17 	ldw	r4,-12(fp)
10003144:	00046b40 	call	100046b4 <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
10003148:	e0bffd17 	ldw	r2,-12(fp)
1000314c:	10800044 	addi	r2,r2,1
10003150:	01c02084 	movi	r7,130
10003154:	01800044 	movi	r6,1
10003158:	e17ffc17 	ldw	r5,-16(fp)
1000315c:	1009883a 	mov	r4,r2
10003160:	00046b40 	call	100046b4 <drawTile>
					break;
10003164:	00002306 	br	100031f4 <drawBoard+0x238>
				}
				case WAY: {
					drawTile(curr_tile_xb,curr_tile_y, 1, 0);
10003168:	000f883a 	mov	r7,zero
1000316c:	01800044 	movi	r6,1
10003170:	e17ffc17 	ldw	r5,-16(fp)
10003174:	e13ffd17 	ldw	r4,-12(fp)
10003178:	00046b40 	call	100046b4 <drawTile>
					drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
1000317c:	e0bffd17 	ldw	r2,-12(fp)
10003180:	10800044 	addi	r2,r2,1
10003184:	000f883a 	mov	r7,zero
10003188:	01800044 	movi	r6,1
1000318c:	e17ffc17 	ldw	r5,-16(fp)
10003190:	1009883a 	mov	r4,r2
10003194:	00046b40 	call	100046b4 <drawTile>
					break;
10003198:	00001606 	br	100031f4 <drawBoard+0x238>
				}
				case SUPER: {
					drawTile(curr_tile_xb, curr_tile_y, 1, 131);
1000319c:	01c020c4 	movi	r7,131
100031a0:	01800044 	movi	r6,1
100031a4:	e17ffc17 	ldw	r5,-16(fp)
100031a8:	e13ffd17 	ldw	r4,-12(fp)
100031ac:	00046b40 	call	100046b4 <drawTile>
					drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
100031b0:	e0bffd17 	ldw	r2,-12(fp)
100031b4:	10800044 	addi	r2,r2,1
100031b8:	01c02104 	movi	r7,132
100031bc:	01800044 	movi	r6,1
100031c0:	e17ffc17 	ldw	r5,-16(fp)
100031c4:	1009883a 	mov	r4,r2
100031c8:	00046b40 	call	100046b4 <drawTile>
					break;
100031cc:	00000906 	br	100031f4 <drawBoard+0x238>
				continue;
100031d0:	0001883a 	nop
100031d4:	00000706 	br	100031f4 <drawBoard+0x238>
				continue;
100031d8:	0001883a 	nop
100031dc:	00000506 	br	100031f4 <drawBoard+0x238>
				continue;
100031e0:	0001883a 	nop
100031e4:	00000306 	br	100031f4 <drawBoard+0x238>
				continue;
100031e8:	0001883a 	nop
100031ec:	00000106 	br	100031f4 <drawBoard+0x238>
				continue;
100031f0:	0001883a 	nop
		for(int j=0;j<_BOARD_H;j+=1) {
100031f4:	e0bffe17 	ldw	r2,-8(fp)
100031f8:	10800044 	addi	r2,r2,1
100031fc:	e0bffe15 	stw	r2,-8(fp)
10003200:	e0bffe17 	ldw	r2,-8(fp)
10003204:	108003d0 	cmplti	r2,r2,15
10003208:	103f751e 	bne	r2,zero,10002fe0 <drawBoard+0x24>
	for(int i=0;i<_BOARD_W;i+=1) {
1000320c:	e0bfff17 	ldw	r2,-4(fp)
10003210:	10800044 	addi	r2,r2,1
10003214:	e0bfff15 	stw	r2,-4(fp)
10003218:	e0bfff17 	ldw	r2,-4(fp)
1000321c:	108003d0 	cmplti	r2,r2,15
10003220:	103f6d1e 	bne	r2,zero,10002fd8 <drawBoard+0x1c>
			}
		}
	}

	// Draw player
	drawTile(game->player.ypos*2+20, game->player.xpos, 1, 1);
10003224:	e0bffb17 	ldw	r2,-20(fp)
10003228:	1080e143 	ldbu	r2,901(r2)
1000322c:	10803fcc 	andi	r2,r2,255
10003230:	10800284 	addi	r2,r2,10
10003234:	1085883a 	add	r2,r2,r2
10003238:	1007883a 	mov	r3,r2
1000323c:	e0bffb17 	ldw	r2,-20(fp)
10003240:	1080e103 	ldbu	r2,900(r2)
10003244:	10803fcc 	andi	r2,r2,255
10003248:	01c00044 	movi	r7,1
1000324c:	01800044 	movi	r6,1
10003250:	100b883a 	mov	r5,r2
10003254:	1809883a 	mov	r4,r3
10003258:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->player.ypos*2+21, game->player.xpos, 1, 2);
1000325c:	e0bffb17 	ldw	r2,-20(fp)
10003260:	1080e143 	ldbu	r2,901(r2)
10003264:	10803fcc 	andi	r2,r2,255
10003268:	1085883a 	add	r2,r2,r2
1000326c:	10c00544 	addi	r3,r2,21
10003270:	e0bffb17 	ldw	r2,-20(fp)
10003274:	1080e103 	ldbu	r2,900(r2)
10003278:	10803fcc 	andi	r2,r2,255
1000327c:	01c00084 	movi	r7,2
10003280:	01800044 	movi	r6,1
10003284:	100b883a 	mov	r5,r2
10003288:	1809883a 	mov	r4,r3
1000328c:	00046b40 	call	100046b4 <drawTile>
	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
10003290:	e0bffb17 	ldw	r2,-20(fp)
10003294:	1080e2c3 	ldbu	r2,907(r2)
10003298:	10803fcc 	andi	r2,r2,255
1000329c:	10800284 	addi	r2,r2,10
100032a0:	1085883a 	add	r2,r2,r2
100032a4:	1007883a 	mov	r3,r2
100032a8:	e0bffb17 	ldw	r2,-20(fp)
100032ac:	1080e283 	ldbu	r2,906(r2)
100032b0:	10803fcc 	andi	r2,r2,255
100032b4:	01c000c4 	movi	r7,3
100032b8:	018000c4 	movi	r6,3
100032bc:	100b883a 	mov	r5,r2
100032c0:	1809883a 	mov	r4,r3
100032c4:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
100032c8:	e0bffb17 	ldw	r2,-20(fp)
100032cc:	1080e2c3 	ldbu	r2,907(r2)
100032d0:	10803fcc 	andi	r2,r2,255
100032d4:	1085883a 	add	r2,r2,r2
100032d8:	10c00544 	addi	r3,r2,21
100032dc:	e0bffb17 	ldw	r2,-20(fp)
100032e0:	1080e283 	ldbu	r2,906(r2)
100032e4:	10803fcc 	andi	r2,r2,255
100032e8:	01c00104 	movi	r7,4
100032ec:	018000c4 	movi	r6,3
100032f0:	100b883a 	mov	r5,r2
100032f4:	1809883a 	mov	r4,r3
100032f8:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
100032fc:	e0bffb17 	ldw	r2,-20(fp)
10003300:	1080e443 	ldbu	r2,913(r2)
10003304:	10803fcc 	andi	r2,r2,255
10003308:	10800284 	addi	r2,r2,10
1000330c:	1085883a 	add	r2,r2,r2
10003310:	1007883a 	mov	r3,r2
10003314:	e0bffb17 	ldw	r2,-20(fp)
10003318:	1080e403 	ldbu	r2,912(r2)
1000331c:	10803fcc 	andi	r2,r2,255
10003320:	01c000c4 	movi	r7,3
10003324:	01800104 	movi	r6,4
10003328:	100b883a 	mov	r5,r2
1000332c:	1809883a 	mov	r4,r3
10003330:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
10003334:	e0bffb17 	ldw	r2,-20(fp)
10003338:	1080e443 	ldbu	r2,913(r2)
1000333c:	10803fcc 	andi	r2,r2,255
10003340:	1085883a 	add	r2,r2,r2
10003344:	10c00544 	addi	r3,r2,21
10003348:	e0bffb17 	ldw	r2,-20(fp)
1000334c:	1080e403 	ldbu	r2,912(r2)
10003350:	10803fcc 	andi	r2,r2,255
10003354:	01c00104 	movi	r7,4
10003358:	01800104 	movi	r6,4
1000335c:	100b883a 	mov	r5,r2
10003360:	1809883a 	mov	r4,r3
10003364:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
10003368:	e0bffb17 	ldw	r2,-20(fp)
1000336c:	1080e5c3 	ldbu	r2,919(r2)
10003370:	10803fcc 	andi	r2,r2,255
10003374:	10800284 	addi	r2,r2,10
10003378:	1085883a 	add	r2,r2,r2
1000337c:	1007883a 	mov	r3,r2
10003380:	e0bffb17 	ldw	r2,-20(fp)
10003384:	1080e583 	ldbu	r2,918(r2)
10003388:	10803fcc 	andi	r2,r2,255
1000338c:	01c000c4 	movi	r7,3
10003390:	01800144 	movi	r6,5
10003394:	100b883a 	mov	r5,r2
10003398:	1809883a 	mov	r4,r3
1000339c:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
100033a0:	e0bffb17 	ldw	r2,-20(fp)
100033a4:	1080e5c3 	ldbu	r2,919(r2)
100033a8:	10803fcc 	andi	r2,r2,255
100033ac:	1085883a 	add	r2,r2,r2
100033b0:	10c00544 	addi	r3,r2,21
100033b4:	e0bffb17 	ldw	r2,-20(fp)
100033b8:	1080e583 	ldbu	r2,918(r2)
100033bc:	10803fcc 	andi	r2,r2,255
100033c0:	01c00104 	movi	r7,4
100033c4:	01800144 	movi	r6,5
100033c8:	100b883a 	mov	r5,r2
100033cc:	1809883a 	mov	r4,r3
100033d0:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
100033d4:	e0bffb17 	ldw	r2,-20(fp)
100033d8:	1080e743 	ldbu	r2,925(r2)
100033dc:	10803fcc 	andi	r2,r2,255
100033e0:	10800284 	addi	r2,r2,10
100033e4:	1085883a 	add	r2,r2,r2
100033e8:	1007883a 	mov	r3,r2
100033ec:	e0bffb17 	ldw	r2,-20(fp)
100033f0:	1080e703 	ldbu	r2,924(r2)
100033f4:	10803fcc 	andi	r2,r2,255
100033f8:	01c000c4 	movi	r7,3
100033fc:	01800184 	movi	r6,6
10003400:	100b883a 	mov	r5,r2
10003404:	1809883a 	mov	r4,r3
10003408:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
1000340c:	e0bffb17 	ldw	r2,-20(fp)
10003410:	1080e743 	ldbu	r2,925(r2)
10003414:	10803fcc 	andi	r2,r2,255
10003418:	1085883a 	add	r2,r2,r2
1000341c:	10c00544 	addi	r3,r2,21
10003420:	e0bffb17 	ldw	r2,-20(fp)
10003424:	1080e703 	ldbu	r2,924(r2)
10003428:	10803fcc 	andi	r2,r2,255
1000342c:	01c00104 	movi	r7,4
10003430:	01800184 	movi	r6,6
10003434:	100b883a 	mov	r5,r2
10003438:	1809883a 	mov	r4,r3
1000343c:	00046b40 	call	100046b4 <drawTile>
}
10003440:	0001883a 	nop
10003444:	e037883a 	mov	sp,fp
10003448:	dfc00117 	ldw	ra,4(sp)
1000344c:	df000017 	ldw	fp,0(sp)
10003450:	dec00204 	addi	sp,sp,8
10003454:	f800283a 	ret

10003458 <updateBoard>:

// Update board. change mimimal tiles.
void updateBoard(Game* game) {
10003458:	defffa04 	addi	sp,sp,-24
1000345c:	dfc00515 	stw	ra,20(sp)
10003460:	df000415 	stw	fp,16(sp)
10003464:	df000404 	addi	fp,sp,16
10003468:	e13ffc15 	stw	r4,-16(fp)
	while(hasRemain()) {
1000346c:	00009406 	br	100036c0 <updateBoard+0x268>
		TileCollection k = getOne();
10003470:	0005e300 	call	10005e30 <getOne>
10003474:	e0bffd8d 	sth	r2,-10(fp)
		if(k.tile_x==game->blinky.xpos && k.tile_y==game->blinky.ypos) {
10003478:	e0bffd83 	ldbu	r2,-10(fp)
1000347c:	10c03fcc 	andi	r3,r2,255
10003480:	18c0201c 	xori	r3,r3,128
10003484:	18ffe004 	addi	r3,r3,-128
10003488:	e0bffc17 	ldw	r2,-16(fp)
1000348c:	1080e283 	ldbu	r2,906(r2)
10003490:	10803fcc 	andi	r2,r2,255
10003494:	1880081e 	bne	r3,r2,100034b8 <updateBoard+0x60>
10003498:	e0bffdc3 	ldbu	r2,-9(fp)
1000349c:	10c03fcc 	andi	r3,r2,255
100034a0:	18c0201c 	xori	r3,r3,128
100034a4:	18ffe004 	addi	r3,r3,-128
100034a8:	e0bffc17 	ldw	r2,-16(fp)
100034ac:	1080e2c3 	ldbu	r2,907(r2)
100034b0:	10803fcc 	andi	r2,r2,255
100034b4:	18807b26 	beq	r3,r2,100036a4 <updateBoard+0x24c>
			continue;
		} else if(k.tile_x==game->pinky.xpos && k.tile_y==game->pinky.ypos) {
100034b8:	e0bffd83 	ldbu	r2,-10(fp)
100034bc:	10c03fcc 	andi	r3,r2,255
100034c0:	18c0201c 	xori	r3,r3,128
100034c4:	18ffe004 	addi	r3,r3,-128
100034c8:	e0bffc17 	ldw	r2,-16(fp)
100034cc:	1080e403 	ldbu	r2,912(r2)
100034d0:	10803fcc 	andi	r2,r2,255
100034d4:	1880081e 	bne	r3,r2,100034f8 <updateBoard+0xa0>
100034d8:	e0bffdc3 	ldbu	r2,-9(fp)
100034dc:	10c03fcc 	andi	r3,r2,255
100034e0:	18c0201c 	xori	r3,r3,128
100034e4:	18ffe004 	addi	r3,r3,-128
100034e8:	e0bffc17 	ldw	r2,-16(fp)
100034ec:	1080e443 	ldbu	r2,913(r2)
100034f0:	10803fcc 	andi	r2,r2,255
100034f4:	18806d26 	beq	r3,r2,100036ac <updateBoard+0x254>
			continue;
		} else if(k.tile_x==game->inky.xpos && k.tile_y==game->inky.ypos) {
100034f8:	e0bffd83 	ldbu	r2,-10(fp)
100034fc:	10c03fcc 	andi	r3,r2,255
10003500:	18c0201c 	xori	r3,r3,128
10003504:	18ffe004 	addi	r3,r3,-128
10003508:	e0bffc17 	ldw	r2,-16(fp)
1000350c:	1080e583 	ldbu	r2,918(r2)
10003510:	10803fcc 	andi	r2,r2,255
10003514:	1880081e 	bne	r3,r2,10003538 <updateBoard+0xe0>
10003518:	e0bffdc3 	ldbu	r2,-9(fp)
1000351c:	10c03fcc 	andi	r3,r2,255
10003520:	18c0201c 	xori	r3,r3,128
10003524:	18ffe004 	addi	r3,r3,-128
10003528:	e0bffc17 	ldw	r2,-16(fp)
1000352c:	1080e5c3 	ldbu	r2,919(r2)
10003530:	10803fcc 	andi	r2,r2,255
10003534:	18805f26 	beq	r3,r2,100036b4 <updateBoard+0x25c>
			continue;
		} else if(k.tile_x==game->clyde.xpos && k.tile_y==game->clyde.ypos) {
10003538:	e0bffd83 	ldbu	r2,-10(fp)
1000353c:	10c03fcc 	andi	r3,r2,255
10003540:	18c0201c 	xori	r3,r3,128
10003544:	18ffe004 	addi	r3,r3,-128
10003548:	e0bffc17 	ldw	r2,-16(fp)
1000354c:	1080e703 	ldbu	r2,924(r2)
10003550:	10803fcc 	andi	r2,r2,255
10003554:	1880081e 	bne	r3,r2,10003578 <updateBoard+0x120>
10003558:	e0bffdc3 	ldbu	r2,-9(fp)
1000355c:	10c03fcc 	andi	r3,r2,255
10003560:	18c0201c 	xori	r3,r3,128
10003564:	18ffe004 	addi	r3,r3,-128
10003568:	e0bffc17 	ldw	r2,-16(fp)
1000356c:	1080e743 	ldbu	r2,925(r2)
10003570:	10803fcc 	andi	r2,r2,255
10003574:	18805126 	beq	r3,r2,100036bc <updateBoard+0x264>
			continue;
		}
		switch(game->game_map[k.tile_x][k.tile_y]) {
10003578:	e0bffd83 	ldbu	r2,-10(fp)
1000357c:	11003fcc 	andi	r4,r2,255
10003580:	2100201c 	xori	r4,r4,128
10003584:	213fe004 	addi	r4,r4,-128
10003588:	e0bffdc3 	ldbu	r2,-9(fp)
1000358c:	10803fcc 	andi	r2,r2,255
10003590:	1080201c 	xori	r2,r2,128
10003594:	10bfe004 	addi	r2,r2,-128
10003598:	e0fffc17 	ldw	r3,-16(fp)
1000359c:	210003e4 	muli	r4,r4,15
100035a0:	2085883a 	add	r2,r4,r2
100035a4:	100490ba 	slli	r2,r2,2
100035a8:	1885883a 	add	r2,r3,r2
100035ac:	10800017 	ldw	r2,0(r2)
100035b0:	10c00060 	cmpeqi	r3,r2,1
100035b4:	1800131e 	bne	r3,zero,10003604 <updateBoard+0x1ac>
100035b8:	10000526 	beq	r2,zero,100035d0 <updateBoard+0x178>
100035bc:	10c000a0 	cmpeqi	r3,r2,2
100035c0:	18002a1e 	bne	r3,zero,1000366c <updateBoard+0x214>
100035c4:	108000e0 	cmpeqi	r2,r2,3
100035c8:	10001b1e 	bne	r2,zero,10003638 <updateBoard+0x1e0>
100035cc:	00003c06 	br	100036c0 <updateBoard+0x268>
			int curr_tile_xb = k.tile_y*2+20;
			int curr_tile_y = k.tile_x;
			case WALL: {
				drawTile(curr_tile_xb, curr_tile_y, 2, 0);
100035d0:	000f883a 	mov	r7,zero
100035d4:	01800084 	movi	r6,2
100035d8:	e17ffe17 	ldw	r5,-8(fp)
100035dc:	e13fff17 	ldw	r4,-4(fp)
100035e0:	00046b40 	call	100046b4 <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 2, 0);
100035e4:	e0bfff17 	ldw	r2,-4(fp)
100035e8:	10800044 	addi	r2,r2,1
100035ec:	000f883a 	mov	r7,zero
100035f0:	01800084 	movi	r6,2
100035f4:	e17ffe17 	ldw	r5,-8(fp)
100035f8:	1009883a 	mov	r4,r2
100035fc:	00046b40 	call	100046b4 <drawTile>
				break;
10003600:	00002f06 	br	100036c0 <updateBoard+0x268>
			}
			case CANDY: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 129);
10003604:	01c02044 	movi	r7,129
10003608:	01800044 	movi	r6,1
1000360c:	e17ffe17 	ldw	r5,-8(fp)
10003610:	e13fff17 	ldw	r4,-4(fp)
10003614:	00046b40 	call	100046b4 <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 130);
10003618:	e0bfff17 	ldw	r2,-4(fp)
1000361c:	10800044 	addi	r2,r2,1
10003620:	01c02084 	movi	r7,130
10003624:	01800044 	movi	r6,1
10003628:	e17ffe17 	ldw	r5,-8(fp)
1000362c:	1009883a 	mov	r4,r2
10003630:	00046b40 	call	100046b4 <drawTile>
				break;
10003634:	00002206 	br	100036c0 <updateBoard+0x268>
			}
			case WAY: {
				drawTile(curr_tile_xb,curr_tile_y, 1, 0);
10003638:	000f883a 	mov	r7,zero
1000363c:	01800044 	movi	r6,1
10003640:	e17ffe17 	ldw	r5,-8(fp)
10003644:	e13fff17 	ldw	r4,-4(fp)
10003648:	00046b40 	call	100046b4 <drawTile>
				drawTile(curr_tile_xb+1,curr_tile_y, 1, 0);
1000364c:	e0bfff17 	ldw	r2,-4(fp)
10003650:	10800044 	addi	r2,r2,1
10003654:	000f883a 	mov	r7,zero
10003658:	01800044 	movi	r6,1
1000365c:	e17ffe17 	ldw	r5,-8(fp)
10003660:	1009883a 	mov	r4,r2
10003664:	00046b40 	call	100046b4 <drawTile>
				break;
10003668:	00001506 	br	100036c0 <updateBoard+0x268>
			}
			case SUPER: {
				drawTile(curr_tile_xb, curr_tile_y, 1, 131);
1000366c:	01c020c4 	movi	r7,131
10003670:	01800044 	movi	r6,1
10003674:	e17ffe17 	ldw	r5,-8(fp)
10003678:	e13fff17 	ldw	r4,-4(fp)
1000367c:	00046b40 	call	100046b4 <drawTile>
				drawTile(curr_tile_xb+1, curr_tile_y, 1, 132);
10003680:	e0bfff17 	ldw	r2,-4(fp)
10003684:	10800044 	addi	r2,r2,1
10003688:	01c02104 	movi	r7,132
1000368c:	01800044 	movi	r6,1
10003690:	e17ffe17 	ldw	r5,-8(fp)
10003694:	1009883a 	mov	r4,r2
10003698:	00046b40 	call	100046b4 <drawTile>
				break;
1000369c:	0001883a 	nop
100036a0:	00000706 	br	100036c0 <updateBoard+0x268>
			continue;
100036a4:	0001883a 	nop
100036a8:	00000506 	br	100036c0 <updateBoard+0x268>
			continue;
100036ac:	0001883a 	nop
100036b0:	00000306 	br	100036c0 <updateBoard+0x268>
			continue;
100036b4:	0001883a 	nop
100036b8:	00000106 	br	100036c0 <updateBoard+0x268>
			continue;
100036bc:	0001883a 	nop
	while(hasRemain()) {
100036c0:	0005f2c0 	call	10005f2c <hasRemain>
100036c4:	10803fcc 	andi	r2,r2,255
100036c8:	103f691e 	bne	r2,zero,10003470 <updateBoard+0x18>
			}
		}
	}

	// Draw player
	drawTile(game->player.ypos*2+20, game->player.xpos, 1, 1);
100036cc:	e0bffc17 	ldw	r2,-16(fp)
100036d0:	1080e143 	ldbu	r2,901(r2)
100036d4:	10803fcc 	andi	r2,r2,255
100036d8:	10800284 	addi	r2,r2,10
100036dc:	1085883a 	add	r2,r2,r2
100036e0:	1007883a 	mov	r3,r2
100036e4:	e0bffc17 	ldw	r2,-16(fp)
100036e8:	1080e103 	ldbu	r2,900(r2)
100036ec:	10803fcc 	andi	r2,r2,255
100036f0:	01c00044 	movi	r7,1
100036f4:	01800044 	movi	r6,1
100036f8:	100b883a 	mov	r5,r2
100036fc:	1809883a 	mov	r4,r3
10003700:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->player.ypos*2+21, game->player.xpos, 1, 2);
10003704:	e0bffc17 	ldw	r2,-16(fp)
10003708:	1080e143 	ldbu	r2,901(r2)
1000370c:	10803fcc 	andi	r2,r2,255
10003710:	1085883a 	add	r2,r2,r2
10003714:	10c00544 	addi	r3,r2,21
10003718:	e0bffc17 	ldw	r2,-16(fp)
1000371c:	1080e103 	ldbu	r2,900(r2)
10003720:	10803fcc 	andi	r2,r2,255
10003724:	01c00084 	movi	r7,2
10003728:	01800044 	movi	r6,1
1000372c:	100b883a 	mov	r5,r2
10003730:	1809883a 	mov	r4,r3
10003734:	00046b40 	call	100046b4 <drawTile>
	// Draw ghosts.
	drawTile(game->blinky.ypos*2+20, game->blinky.xpos, 3, 3);
10003738:	e0bffc17 	ldw	r2,-16(fp)
1000373c:	1080e2c3 	ldbu	r2,907(r2)
10003740:	10803fcc 	andi	r2,r2,255
10003744:	10800284 	addi	r2,r2,10
10003748:	1085883a 	add	r2,r2,r2
1000374c:	1007883a 	mov	r3,r2
10003750:	e0bffc17 	ldw	r2,-16(fp)
10003754:	1080e283 	ldbu	r2,906(r2)
10003758:	10803fcc 	andi	r2,r2,255
1000375c:	01c000c4 	movi	r7,3
10003760:	018000c4 	movi	r6,3
10003764:	100b883a 	mov	r5,r2
10003768:	1809883a 	mov	r4,r3
1000376c:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->blinky.ypos*2+21, game->blinky.xpos, 3, 4);
10003770:	e0bffc17 	ldw	r2,-16(fp)
10003774:	1080e2c3 	ldbu	r2,907(r2)
10003778:	10803fcc 	andi	r2,r2,255
1000377c:	1085883a 	add	r2,r2,r2
10003780:	10c00544 	addi	r3,r2,21
10003784:	e0bffc17 	ldw	r2,-16(fp)
10003788:	1080e283 	ldbu	r2,906(r2)
1000378c:	10803fcc 	andi	r2,r2,255
10003790:	01c00104 	movi	r7,4
10003794:	018000c4 	movi	r6,3
10003798:	100b883a 	mov	r5,r2
1000379c:	1809883a 	mov	r4,r3
100037a0:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->pinky.ypos*2+20, game->pinky.xpos, 4, 3);
100037a4:	e0bffc17 	ldw	r2,-16(fp)
100037a8:	1080e443 	ldbu	r2,913(r2)
100037ac:	10803fcc 	andi	r2,r2,255
100037b0:	10800284 	addi	r2,r2,10
100037b4:	1085883a 	add	r2,r2,r2
100037b8:	1007883a 	mov	r3,r2
100037bc:	e0bffc17 	ldw	r2,-16(fp)
100037c0:	1080e403 	ldbu	r2,912(r2)
100037c4:	10803fcc 	andi	r2,r2,255
100037c8:	01c000c4 	movi	r7,3
100037cc:	01800104 	movi	r6,4
100037d0:	100b883a 	mov	r5,r2
100037d4:	1809883a 	mov	r4,r3
100037d8:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->pinky.ypos*2+21, game->pinky.xpos, 4, 4);
100037dc:	e0bffc17 	ldw	r2,-16(fp)
100037e0:	1080e443 	ldbu	r2,913(r2)
100037e4:	10803fcc 	andi	r2,r2,255
100037e8:	1085883a 	add	r2,r2,r2
100037ec:	10c00544 	addi	r3,r2,21
100037f0:	e0bffc17 	ldw	r2,-16(fp)
100037f4:	1080e403 	ldbu	r2,912(r2)
100037f8:	10803fcc 	andi	r2,r2,255
100037fc:	01c00104 	movi	r7,4
10003800:	01800104 	movi	r6,4
10003804:	100b883a 	mov	r5,r2
10003808:	1809883a 	mov	r4,r3
1000380c:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->inky.ypos*2+20, game->inky.xpos, 5, 3);
10003810:	e0bffc17 	ldw	r2,-16(fp)
10003814:	1080e5c3 	ldbu	r2,919(r2)
10003818:	10803fcc 	andi	r2,r2,255
1000381c:	10800284 	addi	r2,r2,10
10003820:	1085883a 	add	r2,r2,r2
10003824:	1007883a 	mov	r3,r2
10003828:	e0bffc17 	ldw	r2,-16(fp)
1000382c:	1080e583 	ldbu	r2,918(r2)
10003830:	10803fcc 	andi	r2,r2,255
10003834:	01c000c4 	movi	r7,3
10003838:	01800144 	movi	r6,5
1000383c:	100b883a 	mov	r5,r2
10003840:	1809883a 	mov	r4,r3
10003844:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->inky.ypos*2+21, game->inky.xpos, 5, 4);
10003848:	e0bffc17 	ldw	r2,-16(fp)
1000384c:	1080e5c3 	ldbu	r2,919(r2)
10003850:	10803fcc 	andi	r2,r2,255
10003854:	1085883a 	add	r2,r2,r2
10003858:	10c00544 	addi	r3,r2,21
1000385c:	e0bffc17 	ldw	r2,-16(fp)
10003860:	1080e583 	ldbu	r2,918(r2)
10003864:	10803fcc 	andi	r2,r2,255
10003868:	01c00104 	movi	r7,4
1000386c:	01800144 	movi	r6,5
10003870:	100b883a 	mov	r5,r2
10003874:	1809883a 	mov	r4,r3
10003878:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->clyde.ypos*2+20, game->clyde.xpos, 6, 3);
1000387c:	e0bffc17 	ldw	r2,-16(fp)
10003880:	1080e743 	ldbu	r2,925(r2)
10003884:	10803fcc 	andi	r2,r2,255
10003888:	10800284 	addi	r2,r2,10
1000388c:	1085883a 	add	r2,r2,r2
10003890:	1007883a 	mov	r3,r2
10003894:	e0bffc17 	ldw	r2,-16(fp)
10003898:	1080e703 	ldbu	r2,924(r2)
1000389c:	10803fcc 	andi	r2,r2,255
100038a0:	01c000c4 	movi	r7,3
100038a4:	01800184 	movi	r6,6
100038a8:	100b883a 	mov	r5,r2
100038ac:	1809883a 	mov	r4,r3
100038b0:	00046b40 	call	100046b4 <drawTile>
	drawTile(game->clyde.ypos*2+21, game->clyde.xpos, 6, 4);
100038b4:	e0bffc17 	ldw	r2,-16(fp)
100038b8:	1080e743 	ldbu	r2,925(r2)
100038bc:	10803fcc 	andi	r2,r2,255
100038c0:	1085883a 	add	r2,r2,r2
100038c4:	10c00544 	addi	r3,r2,21
100038c8:	e0bffc17 	ldw	r2,-16(fp)
100038cc:	1080e703 	ldbu	r2,924(r2)
100038d0:	10803fcc 	andi	r2,r2,255
100038d4:	01c00104 	movi	r7,4
100038d8:	01800184 	movi	r6,6
100038dc:	100b883a 	mov	r5,r2
100038e0:	1809883a 	mov	r4,r3
100038e4:	00046b40 	call	100046b4 <drawTile>

	clearQueue();
100038e8:	0005f880 	call	10005f88 <clearQueue>
}
100038ec:	0001883a 	nop
100038f0:	e037883a 	mov	sp,fp
100038f4:	dfc00117 	ldw	ra,4(sp)
100038f8:	df000017 	ldw	fp,0(sp)
100038fc:	dec00204 	addi	sp,sp,8
10003900:	f800283a 	ret

10003904 <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
10003904:	deff0e04 	addi	sp,sp,-968
10003908:	dfc0f115 	stw	ra,964(sp)
1000390c:	df00f015 	stw	fp,960(sp)
10003910:	df00f004 	addi	fp,sp,960
	IO_init();
10003914:	00011b80 	call	100011b8 <IO_init>
	Game mainGame;
	init_game(&mainGame);
10003918:	e0bf1004 	addi	r2,fp,-960
1000391c:	1009883a 	mov	r4,r2
10003920:	000131c0 	call	1000131c <init_game>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
10003924:	e03ffe8d 	sth	zero,-6(fp)
	int keycode = 0;
10003928:	e03ffd15 	stw	zero,-12(fp)
	alt_u8 toggle = 0;
1000392c:	e03fff45 	stb	zero,-3(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
10003930:	010400b4 	movhi	r4,4098
10003934:	2112eb04 	addi	r4,r4,19372
10003938:	0015ccc0 	call	10015ccc <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	UsbSoftReset();
1000393c:	0004c8c0 	call	10004c8c <UsbSoftReset>
	drawBoard(&mainGame);
10003940:	e0bf1004 	addi	r2,fp,-960
10003944:	1009883a 	mov	r4,r2
10003948:	0002fbc0 	call	10002fbc <drawBoard>

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
1000394c:	000b883a 	mov	r5,zero
10003950:	01005104 	movi	r4,324
10003954:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10003958:	017fffd4 	movui	r5,65535
1000395c:	01302414 	movui	r4,49296
10003960:	0004bec0 	call	10004bec <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
10003964:	01409604 	movi	r5,600
10003968:	01006d04 	movi	r4,436
1000396c:	0004bec0 	call	10004bec <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
10003970:	00811004 	movi	r2,1088
10003974:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
10003978:	e0bfff8b 	ldhu	r2,-2(fp)
1000397c:	100b883a 	mov	r5,r2
10003980:	01005084 	movi	r4,322
10003984:	0004bec0 	call	10004bec <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
10003988:	00808404 	movi	r2,528
1000398c:	e0bffc8d 	sth	r2,-14(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
10003990:	e0bffc8b 	ldhu	r2,-14(fp)
10003994:	100b883a 	mov	r5,r2
10003998:	01302314 	movui	r4,49292
1000399c:	0004bec0 	call	10004bec <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
100039a0:	000b883a 	mov	r5,zero
100039a4:	01007104 	movi	r4,452
100039a8:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100039ac:	000b883a 	mov	r5,zero
100039b0:	01007184 	movi	r4,454
100039b4:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100039b8:	000b883a 	mov	r5,zero
100039bc:	01007204 	movi	r4,456
100039c0:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100039c4:	000b883a 	mov	r5,zero
100039c8:	01007284 	movi	r4,458
100039cc:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
100039d0:	000b883a 	mov	r5,zero
100039d4:	01007304 	movi	r4,460
100039d8:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
100039dc:	000b883a 	mov	r5,zero
100039e0:	01007384 	movi	r4,462
100039e4:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
100039e8:	000b883a 	mov	r5,zero
100039ec:	01007404 	movi	r4,464
100039f0:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
100039f4:	000b883a 	mov	r5,zero
100039f8:	01007484 	movi	r4,466
100039fc:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10003a00:	000b883a 	mov	r5,zero
10003a04:	01007504 	movi	r4,468
10003a08:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10003a0c:	000b883a 	mov	r5,zero
10003a10:	01007584 	movi	r4,470
10003a14:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10003a18:	000b883a 	mov	r5,zero
10003a1c:	01007604 	movi	r4,472
10003a20:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10003a24:	000b883a 	mov	r5,zero
10003a28:	01007684 	movi	r4,474
10003a2c:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10003a30:	000b883a 	mov	r5,zero
10003a34:	01007704 	movi	r4,476
10003a38:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10003a3c:	000b883a 	mov	r5,zero
10003a40:	01007784 	movi	r4,478
10003a44:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
10003a48:	01401c84 	movi	r5,114
10003a4c:	01007084 	movi	r4,450
10003a50:	0004bec0 	call	10004bec <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
10003a54:	01738054 	movui	r5,52737
10003a58:	01000044 	movi	r4,1
10003a5c:	00012400 	call	10001240 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
10003a60:	0001883a 	nop
10003a64:	010000c4 	movi	r4,3
10003a68:	00012b40 	call	100012b4 <IO_read>
10003a6c:	10bfffcc 	andi	r2,r2,65535
10003a70:	103ffc26 	beq	r2,zero,10003a64 <main+0x160>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10003a74:	00000806 	br	10003a98 <main+0x194>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
10003a78:	01000044 	movi	r4,1
10003a7c:	00012b40 	call	100012b4 <IO_read>
10003a80:	10bfffcc 	andi	r2,r2,65535
10003a84:	100b883a 	mov	r5,r2
10003a88:	010400b4 	movhi	r4,4098
10003a8c:	2112f104 	addi	r4,r4,19396
10003a90:	0015ba80 	call	10015ba8 <printf>
		goto USB_HOT_PLUG;
10003a94:	003fa906 	br	1000393c <main+0x38>
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10003a98:	01000044 	movi	r4,1
10003a9c:	00012b40 	call	100012b4 <IO_read>
10003aa0:	10bfffcc 	andi	r2,r2,65535
10003aa4:	1083fb58 	cmpnei	r2,r2,4077
10003aa8:	103ff31e 	bne	r2,zero,10003a78 <main+0x174>
	}
	// STEP 1b end

	printf("STEP 1 Complete");
10003aac:	010400b4 	movhi	r4,4098
10003ab0:	2112fa04 	addi	r4,r4,19432
10003ab4:	0015ba80 	call	10015ba8 <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
10003ab8:	01401d04 	movi	r5,116
10003abc:	01007084 	movi	r4,450
10003ac0:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
10003ac4:	01400f04 	movi	r5,60
10003ac8:	01007104 	movi	r4,452
10003acc:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
10003ad0:	000b883a 	mov	r5,zero
10003ad4:	01007184 	movi	r4,454
10003ad8:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
10003adc:	000b883a 	mov	r5,zero
10003ae0:	01007204 	movi	r4,456
10003ae4:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
10003ae8:	000b883a 	mov	r5,zero
10003aec:	01007284 	movi	r4,458
10003af0:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
10003af4:	000b883a 	mov	r5,zero
10003af8:	01007304 	movi	r4,460
10003afc:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10003b00:	000b883a 	mov	r5,zero
10003b04:	01007384 	movi	r4,462
10003b08:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10003b0c:	000b883a 	mov	r5,zero
10003b10:	01007404 	movi	r4,464
10003b14:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
10003b18:	000b883a 	mov	r5,zero
10003b1c:	01007484 	movi	r4,466
10003b20:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10003b24:	000b883a 	mov	r5,zero
10003b28:	01007504 	movi	r4,468
10003b2c:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10003b30:	000b883a 	mov	r5,zero
10003b34:	01007584 	movi	r4,470
10003b38:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10003b3c:	000b883a 	mov	r5,zero
10003b40:	01007604 	movi	r4,472
10003b44:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10003b48:	000b883a 	mov	r5,zero
10003b4c:	01007684 	movi	r4,474
10003b50:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10003b54:	000b883a 	mov	r5,zero
10003b58:	01007704 	movi	r4,476
10003b5c:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10003b60:	000b883a 	mov	r5,zero
10003b64:	01007784 	movi	r4,478
10003b68:	0004bec0 	call	10004bec <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
10003b6c:	01738054 	movui	r5,52737
10003b70:	01000044 	movi	r4,1
10003b74:	00012400 	call	10001240 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10003b78:	0001883a 	nop
10003b7c:	01000044 	movi	r4,1
10003b80:	00012b40 	call	100012b4 <IO_read>
10003b84:	10bfffcc 	andi	r2,r2,65535
10003b88:	1083fb58 	cmpnei	r2,r2,4077
10003b8c:	10000826 	beq	r2,zero,10003bb0 <main+0x2ac>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
10003b90:	01000044 	movi	r4,1
10003b94:	00012b40 	call	100012b4 <IO_read>
10003b98:	10bfffcc 	andi	r2,r2,65535
10003b9c:	100b883a 	mov	r5,r2
10003ba0:	010400b4 	movhi	r4,4098
10003ba4:	2112f104 	addi	r4,r4,19396
10003ba8:	0015ba80 	call	10015ba8 <printf>
		goto USB_HOT_PLUG;
10003bac:	003f6306 	br	1000393c <main+0x38>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
10003bb0:	00b02284 	movi	r2,-16246
10003bb4:	d0a95d0d 	sth	r2,-23180(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
10003bb8:	008c0004 	movi	r2,12288
10003bbc:	d0a95d8d 	sth	r2,-23178(gp)
	fs_device = A_DP_STAT;
10003bc0:	00880004 	movi	r2,8192
10003bc4:	e0bffe8d 	sth	r2,-6(fp)
	usb_ctl_val = UsbRead(ctl_reg);
10003bc8:	d0a95d0b 	ldhu	r2,-23180(gp)
10003bcc:	10bfffcc 	andi	r2,r2,65535
10003bd0:	1009883a 	mov	r4,r2
10003bd4:	0004c480 	call	10004c48 <UsbRead>
10003bd8:	e0bfff8d 	sth	r2,-2(fp)

	if (!(usb_ctl_val & no_device))
10003bdc:	d0a95d8b 	ldhu	r2,-23178(gp)
10003be0:	e0ffff8b 	ldhu	r3,-2(fp)
10003be4:	1884703a 	and	r2,r3,r2
10003be8:	10bfffcc 	andi	r2,r2,65535
10003bec:	1000351e 	bne	r2,zero,10003cc4 <main+0x3c0>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10003bf0:	e03fff05 	stb	zero,-4(fp)
10003bf4:	00000f06 	br	10003c34 <main+0x330>
		{
			usleep(5*1000);
10003bf8:	0104e204 	movi	r4,5000
10003bfc:	00228500 	call	10022850 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10003c00:	d0a95d0b 	ldhu	r2,-23180(gp)
10003c04:	10bfffcc 	andi	r2,r2,65535
10003c08:	1009883a 	mov	r4,r2
10003c0c:	0004c480 	call	10004c48 <UsbRead>
10003c10:	e0bfff8d 	sth	r2,-2(fp)
			if(usb_ctl_val & no_device) break;
10003c14:	d0a95d8b 	ldhu	r2,-23178(gp)
10003c18:	e0ffff8b 	ldhu	r3,-2(fp)
10003c1c:	1884703a 	and	r2,r3,r2
10003c20:	10bfffcc 	andi	r2,r2,65535
10003c24:	1000071e 	bne	r2,zero,10003c44 <main+0x340>
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10003c28:	e0bfff03 	ldbu	r2,-4(fp)
10003c2c:	10800044 	addi	r2,r2,1
10003c30:	e0bfff05 	stb	r2,-4(fp)
10003c34:	e0bfff03 	ldbu	r2,-4(fp)
10003c38:	10800170 	cmpltui	r2,r2,5
10003c3c:	103fee1e 	bne	r2,zero,10003bf8 <main+0x2f4>
10003c40:	00000106 	br	10003c48 <main+0x344>
			if(usb_ctl_val & no_device) break;
10003c44:	0001883a 	nop
		}
		if(!(usb_ctl_val & no_device))
10003c48:	d0a95d8b 	ldhu	r2,-23178(gp)
10003c4c:	e0ffff8b 	ldhu	r3,-2(fp)
10003c50:	1884703a 	and	r2,r3,r2
10003c54:	10bfffcc 	andi	r2,r2,65535
10003c58:	1000261e 	bne	r2,zero,10003cf4 <main+0x3f0>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
10003c5c:	010400b4 	movhi	r4,4098
10003c60:	2112fe04 	addi	r4,r4,19448
10003c64:	0015ccc0 	call	10015ccc <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
10003c68:	010400b4 	movhi	r4,4098
10003c6c:	21130804 	addi	r4,r4,19488
10003c70:	0015ccc0 	call	10015ccc <puts>
			while (!(usb_ctl_val & no_device))
10003c74:	00000d06 	br	10003cac <main+0x3a8>
			{
				usb_ctl_val = UsbRead(ctl_reg);
10003c78:	d0a95d0b 	ldhu	r2,-23180(gp)
10003c7c:	10bfffcc 	andi	r2,r2,65535
10003c80:	1009883a 	mov	r4,r2
10003c84:	0004c480 	call	10004c48 <UsbRead>
10003c88:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device)
10003c8c:	d0a95d8b 	ldhu	r2,-23178(gp)
10003c90:	e0ffff8b 	ldhu	r3,-2(fp)
10003c94:	1884703a 	and	r2,r3,r2
10003c98:	10bfffcc 	andi	r2,r2,65535
10003c9c:	10000126 	beq	r2,zero,10003ca4 <main+0x3a0>
					goto USB_HOT_PLUG;
10003ca0:	003f2606 	br	1000393c <main+0x38>

				usleep(2000);
10003ca4:	0101f404 	movi	r4,2000
10003ca8:	00228500 	call	10022850 <usleep>
			while (!(usb_ctl_val & no_device))
10003cac:	d0a95d8b 	ldhu	r2,-23178(gp)
10003cb0:	e0ffff8b 	ldhu	r3,-2(fp)
10003cb4:	1884703a 	and	r2,r3,r2
10003cb8:	10bfffcc 	andi	r2,r2,65535
10003cbc:	103fee26 	beq	r2,zero,10003c78 <main+0x374>
10003cc0:	00000c06 	br	10003cf4 <main+0x3f0>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
10003cc4:	e0ffff8b 	ldhu	r3,-2(fp)
10003cc8:	e0bffe8b 	ldhu	r2,-6(fp)
10003ccc:	1884703a 	and	r2,r3,r2
10003cd0:	10bfffcc 	andi	r2,r2,65535
10003cd4:	10000426 	beq	r2,zero,10003ce8 <main+0x3e4>
		{
			printf("[INFO]: full speed device\n");
10003cd8:	010400b4 	movhi	r4,4098
10003cdc:	21131404 	addi	r4,r4,19536
10003ce0:	0015ccc0 	call	10015ccc <puts>
10003ce4:	00000306 	br	10003cf4 <main+0x3f0>
		}
		else
		{
			printf("[INFO]: low speed device\n");
10003ce8:	010400b4 	movhi	r4,4098
10003cec:	21131b04 	addi	r4,r4,19564
10003cf0:	0015ccc0 	call	10015ccc <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
10003cf4:	0004d400 	call	10004d40 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003cf8:	00000306 	br	10003d08 <main+0x404>
	{
		UsbSetAddress();
10003cfc:	0004d400 	call	10004d40 <UsbSetAddress>
		usleep(10*1000);
10003d00:	0109c404 	movi	r4,10000
10003d04:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003d08:	010000c4 	movi	r4,3
10003d0c:	00012b40 	call	100012b4 <IO_read>
10003d10:	10bfffcc 	andi	r2,r2,65535
10003d14:	1080040c 	andi	r2,r2,16
10003d18:	103ff826 	beq	r2,zero,10003cfc <main+0x3f8>
	}

	UsbWaitTDListDone();
10003d1c:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
10003d20:	01414184 	movi	r5,1286
10003d24:	01000084 	movi	r4,2
10003d28:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003d2c:	0009883a 	mov	r4,zero
10003d30:	00012b40 	call	100012b4 <IO_read>
10003d34:	10bfffcc 	andi	r2,r2,65535
10003d38:	100b883a 	mov	r5,r2
10003d3c:	010400b4 	movhi	r4,4098
10003d40:	21132204 	addi	r4,r4,19592
10003d44:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508); // n
10003d48:	01414204 	movi	r5,1288
10003d4c:	01000084 	movi	r4,2
10003d50:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003d54:	0009883a 	mov	r4,zero
10003d58:	00012b40 	call	100012b4 <IO_read>
10003d5c:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
10003d60:	e0bfff8b 	ldhu	r2,-2(fp)
10003d64:	100b883a 	mov	r5,r2
10003d68:	010400b4 	movhi	r4,4098
10003d6c:	21132d04 	addi	r4,r4,19636
10003d70:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03) // retries occurred
10003d74:	e0bfff8b 	ldhu	r2,-2(fp)
10003d78:	108000e0 	cmpeqi	r2,r2,3
10003d7c:	1000031e 	bne	r2,zero,10003d8c <main+0x488>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003d80:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10003d84:	e0bfff8d 	sth	r2,-2(fp)

		goto USB_HOT_PLUG;
10003d88:	003eec06 	br	1000393c <main+0x38>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
10003d8c:	010400b4 	movhi	r4,4098
10003d90:	21133904 	addi	r4,r4,19684
10003d94:	0015ccc0 	call	10015ccc <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
10003d98:	0004e400 	call	10004e40 <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003d9c:	00000306 	br	10003dac <main+0x4a8>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
10003da0:	0004e400 	call	10004e40 <UsbGetDeviceDesc1>
		usleep(10*1000);
10003da4:	0109c404 	movi	r4,10000
10003da8:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003dac:	010000c4 	movi	r4,3
10003db0:	00012b40 	call	100012b4 <IO_read>
10003db4:	10bfffcc 	andi	r2,r2,65535
10003db8:	1080040c 	andi	r2,r2,16
10003dbc:	103ff826 	beq	r2,zero,10003da0 <main+0x49c>
	}

	UsbWaitTDListDone();
10003dc0:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003dc4:	01414184 	movi	r5,1286
10003dc8:	01000084 	movi	r4,2
10003dcc:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003dd0:	0009883a 	mov	r4,zero
10003dd4:	00012b40 	call	100012b4 <IO_read>
10003dd8:	10bfffcc 	andi	r2,r2,65535
10003ddc:	100b883a 	mov	r5,r2
10003de0:	010400b4 	movhi	r4,4098
10003de4:	21134804 	addi	r4,r4,19744
10003de8:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10003dec:	01414204 	movi	r5,1288
10003df0:	01000084 	movi	r4,2
10003df4:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003df8:	0009883a 	mov	r4,zero
10003dfc:	00012b40 	call	100012b4 <IO_read>
10003e00:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
10003e04:	e0bfff8b 	ldhu	r2,-2(fp)
10003e08:	100b883a 	mov	r5,r2
10003e0c:	010400b4 	movhi	r4,4098
10003e10:	21135304 	addi	r4,r4,19788
10003e14:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10003e18:	e0bfff8b 	ldhu	r2,-2(fp)
10003e1c:	108000e0 	cmpeqi	r2,r2,3
10003e20:	1000061e 	bne	r2,zero,10003e3c <main+0x538>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003e24:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10003e28:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003e2c:	010400b4 	movhi	r4,4098
10003e30:	21135f04 	addi	r4,r4,19836
10003e34:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10003e38:	003ec006 	br	1000393c <main+0x38>
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
10003e3c:	010400b4 	movhi	r4,4098
10003e40:	21136804 	addi	r4,r4,19872
10003e44:	0015ccc0 	call	10015ccc <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
10003e48:	0004f880 	call	10004f88 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003e4c:	00000306 	br	10003e5c <main+0x558>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
10003e50:	0004f880 	call	10004f88 <UsbGetDeviceDesc2>
		usleep(10*1000);
10003e54:	0109c404 	movi	r4,10000
10003e58:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003e5c:	010000c4 	movi	r4,3
10003e60:	00012b40 	call	100012b4 <IO_read>
10003e64:	10bfffcc 	andi	r2,r2,65535
10003e68:	1080040c 	andi	r2,r2,16
10003e6c:	103ff826 	beq	r2,zero,10003e50 <main+0x54c>
	}

	UsbWaitTDListDone();
10003e70:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003e74:	01414184 	movi	r5,1286
10003e78:	01000084 	movi	r4,2
10003e7c:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003e80:	0009883a 	mov	r4,zero
10003e84:	00012b40 	call	100012b4 <IO_read>
10003e88:	10bfffcc 	andi	r2,r2,65535
10003e8c:	100b883a 	mov	r5,r2
10003e90:	010400b4 	movhi	r4,4098
10003e94:	21134804 	addi	r4,r4,19744
10003e98:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10003e9c:	01414204 	movi	r5,1288
10003ea0:	01000084 	movi	r4,2
10003ea4:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003ea8:	0009883a 	mov	r4,zero
10003eac:	00012b40 	call	100012b4 <IO_read>
10003eb0:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
10003eb4:	e0bfff8b 	ldhu	r2,-2(fp)
10003eb8:	100b883a 	mov	r5,r2
10003ebc:	010400b4 	movhi	r4,4098
10003ec0:	21135304 	addi	r4,r4,19788
10003ec4:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10003ec8:	e0bfff8b 	ldhu	r2,-2(fp)
10003ecc:	108000e0 	cmpeqi	r2,r2,3
10003ed0:	1000061e 	bne	r2,zero,10003eec <main+0x5e8>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003ed4:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10003ed8:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003edc:	010400b4 	movhi	r4,4098
10003ee0:	21135f04 	addi	r4,r4,19836
10003ee4:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10003ee8:	003e9406 	br	1000393c <main+0x38>
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
10003eec:	010400b4 	movhi	r4,4098
10003ef0:	21137c04 	addi	r4,r4,19952
10003ef4:	0015ccc0 	call	10015ccc <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
10003ef8:	00051600 	call	10005160 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003efc:	00000306 	br	10003f0c <main+0x608>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
10003f00:	00051600 	call	10005160 <UsbGetConfigDesc1>
		usleep(10*1000);
10003f04:	0109c404 	movi	r4,10000
10003f08:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003f0c:	010000c4 	movi	r4,3
10003f10:	00012b40 	call	100012b4 <IO_read>
10003f14:	10bfffcc 	andi	r2,r2,65535
10003f18:	1080040c 	andi	r2,r2,16
10003f1c:	103ff826 	beq	r2,zero,10003f00 <main+0x5fc>
	}

	UsbWaitTDListDone();
10003f20:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003f24:	01414184 	movi	r5,1286
10003f28:	01000084 	movi	r4,2
10003f2c:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003f30:	0009883a 	mov	r4,zero
10003f34:	00012b40 	call	100012b4 <IO_read>
10003f38:	10bfffcc 	andi	r2,r2,65535
10003f3c:	100b883a 	mov	r5,r2
10003f40:	010400b4 	movhi	r4,4098
10003f44:	21138e04 	addi	r4,r4,20024
10003f48:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10003f4c:	01414204 	movi	r5,1288
10003f50:	01000084 	movi	r4,2
10003f54:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10003f58:	0009883a 	mov	r4,zero
10003f5c:	00012b40 	call	100012b4 <IO_read>
10003f60:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
10003f64:	e0bfff8b 	ldhu	r2,-2(fp)
10003f68:	100b883a 	mov	r5,r2
10003f6c:	010400b4 	movhi	r4,4098
10003f70:	21139904 	addi	r4,r4,20068
10003f74:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10003f78:	e0bfff8b 	ldhu	r2,-2(fp)
10003f7c:	108000e0 	cmpeqi	r2,r2,3
10003f80:	1000061e 	bne	r2,zero,10003f9c <main+0x698>
	{
		usb_ctl_val = UsbGetRetryCnt();
10003f84:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10003f88:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10003f8c:	010400b4 	movhi	r4,4098
10003f90:	21135f04 	addi	r4,r4,19836
10003f94:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10003f98:	003e6806 	br	1000393c <main+0x38>
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
10003f9c:	010400b4 	movhi	r4,4098
10003fa0:	2113a504 	addi	r4,r4,20116
10003fa4:	0015ccc0 	call	10015ccc <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
10003fa8:	00052f00 	call	100052f0 <UsbGetConfigDesc2>

	usleep(100*1000);
10003fac:	010000b4 	movhi	r4,2
10003fb0:	2121a804 	addi	r4,r4,-31072
10003fb4:	00228500 	call	10022850 <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003fb8:	00000306 	br	10003fc8 <main+0x6c4>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
10003fbc:	00052f00 	call	100052f0 <UsbGetConfigDesc2>
		usleep(10*1000);
10003fc0:	0109c404 	movi	r4,10000
10003fc4:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10003fc8:	010000c4 	movi	r4,3
10003fcc:	00012b40 	call	100012b4 <IO_read>
10003fd0:	10bfffcc 	andi	r2,r2,65535
10003fd4:	1080040c 	andi	r2,r2,16
10003fd8:	103ff826 	beq	r2,zero,10003fbc <main+0x6b8>
	}

	UsbWaitTDListDone();
10003fdc:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10003fe0:	01414184 	movi	r5,1286
10003fe4:	01000084 	movi	r4,2
10003fe8:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
10003fec:	0009883a 	mov	r4,zero
10003ff0:	00012b40 	call	100012b4 <IO_read>
10003ff4:	10bfffcc 	andi	r2,r2,65535
10003ff8:	100b883a 	mov	r5,r2
10003ffc:	010400b4 	movhi	r4,4098
10004000:	2113b804 	addi	r4,r4,20192
10004004:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10004008:	01414204 	movi	r5,1288
1000400c:	01000084 	movi	r4,2
10004010:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004014:	0009883a 	mov	r4,zero
10004018:	00012b40 	call	100012b4 <IO_read>
1000401c:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
10004020:	e0bfff8b 	ldhu	r2,-2(fp)
10004024:	100b883a 	mov	r5,r2
10004028:	010400b4 	movhi	r4,4098
1000402c:	2113c304 	addi	r4,r4,20236
10004030:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10004034:	e0bfff8b 	ldhu	r2,-2(fp)
10004038:	108000e0 	cmpeqi	r2,r2,3
1000403c:	1000061e 	bne	r2,zero,10004058 <main+0x754>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004040:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10004044:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004048:	010400b4 	movhi	r4,4098
1000404c:	21135f04 	addi	r4,r4,19836
10004050:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10004054:	003e3906 	br	1000393c <main+0x38>
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
10004058:	010400b4 	movhi	r4,4098
1000405c:	2113cf04 	addi	r4,r4,20284
10004060:	0015ccc0 	call	10015ccc <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
10004064:	01415b04 	movi	r5,1388
10004068:	01000084 	movi	r4,2
1000406c:	00012400 	call	10001240 <IO_write>
	code = IO_read(HPI_DATA);
10004070:	0009883a 	mov	r4,zero
10004074:	00012b40 	call	100012b4 <IO_read>
10004078:	e0bffc0d 	sth	r2,-16(fp)
	code = code & 0x003;
1000407c:	e0bffc0b 	ldhu	r2,-16(fp)
10004080:	108000cc 	andi	r2,r2,3
10004084:	e0bffc0d 	sth	r2,-16(fp)
	printf("\ncode = %x\n", code);
10004088:	e0bffc0b 	ldhu	r2,-16(fp)
1000408c:	100b883a 	mov	r5,r2
10004090:	010400b4 	movhi	r4,4098
10004094:	2113e204 	addi	r4,r4,20360
10004098:	0015ba80 	call	10015ba8 <printf>

	if (code == 0x01)
1000409c:	e0bffc0b 	ldhu	r2,-16(fp)
100040a0:	10800058 	cmpnei	r2,r2,1
100040a4:	1000041e 	bne	r2,zero,100040b8 <main+0x7b4>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
100040a8:	010400b4 	movhi	r4,4098
100040ac:	2113e504 	addi	r4,r4,20372
100040b0:	0015ccc0 	call	10015ccc <puts>
100040b4:	00000306 	br	100040c4 <main+0x7c0>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
100040b8:	010400b4 	movhi	r4,4098
100040bc:	2113f404 	addi	r4,r4,20432
100040c0:	0015ccc0 	call	10015ccc <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
100040c4:	01415d84 	movi	r5,1398
100040c8:	01000084 	movi	r4,2
100040cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x073F);
100040d0:	0141cfc4 	movi	r5,1855
100040d4:	0009883a 	mov	r4,zero
100040d8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x8105);
100040dc:	01604154 	movui	r5,33029
100040e0:	0009883a 	mov	r4,zero
100040e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0003);
100040e8:	014000c4 	movi	r5,3
100040ec:	0009883a 	mov	r4,zero
100040f0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);
100040f4:	01400204 	movi	r5,8
100040f8:	0009883a 	mov	r4,zero
100040fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
10004100:	016b0294 	movui	r5,44042
10004104:	0009883a 	mov	r4,zero
10004108:	00012400 	call	10001240 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
1000410c:	01415d84 	movi	r5,1398
10004110:	01006c04 	movi	r4,432
10004114:	0004bec0 	call	10004bec <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
10004118:	01415f04 	movi	r5,1404
1000411c:	01000084 	movi	r4,2
10004120:	00012400 	call	10001240 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
10004124:	0009883a 	mov	r4,zero
10004128:	00012b40 	call	100012b4 <IO_read>
1000412c:	e0bffbc5 	stb	r2,-17(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
10004130:	e0bffbc3 	ldbu	r2,-17(fp)
10004134:	100b883a 	mov	r5,r2
10004138:	010400b4 	movhi	r4,4098
1000413c:	2113fd04 	addi	r4,r4,20468
10004140:	0015ba80 	call	10015ba8 <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
10004144:	00055580 	call	10005558 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004148:	00000306 	br	10004158 <main+0x854>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
1000414c:	00055580 	call	10005558 <UsbSetConfig>
		usleep(10*1000);
10004150:	0109c404 	movi	r4,10000
10004154:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004158:	010000c4 	movi	r4,3
1000415c:	00012b40 	call	100012b4 <IO_read>
10004160:	10bfffcc 	andi	r2,r2,65535
10004164:	1080040c 	andi	r2,r2,16
10004168:	103ff826 	beq	r2,zero,1000414c <main+0x848>
	}

	UsbWaitTDListDone();
1000416c:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004170:	01414184 	movi	r5,1286
10004174:	01000084 	movi	r4,2
10004178:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
1000417c:	0009883a 	mov	r4,zero
10004180:	00012b40 	call	100012b4 <IO_read>
10004184:	10bfffcc 	andi	r2,r2,65535
10004188:	100b883a 	mov	r5,r2
1000418c:	010400b4 	movhi	r4,4098
10004190:	21140704 	addi	r4,r4,20508
10004194:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10004198:	01414204 	movi	r5,1288
1000419c:	01000084 	movi	r4,2
100041a0:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100041a4:	0009883a 	mov	r4,zero
100041a8:	00012b40 	call	100012b4 <IO_read>
100041ac:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
100041b0:	e0bfff8b 	ldhu	r2,-2(fp)
100041b4:	100b883a 	mov	r5,r2
100041b8:	010400b4 	movhi	r4,4098
100041bc:	21141204 	addi	r4,r4,20552
100041c0:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
100041c4:	e0bfff8b 	ldhu	r2,-2(fp)
100041c8:	108000e0 	cmpeqi	r2,r2,3
100041cc:	1000061e 	bne	r2,zero,100041e8 <main+0x8e4>
	{
		usb_ctl_val = UsbGetRetryCnt();
100041d0:	0005c640 	call	10005c64 <UsbGetRetryCnt>
100041d4:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100041d8:	010400b4 	movhi	r4,4098
100041dc:	21135f04 	addi	r4,r4,19836
100041e0:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
100041e4:	003dd506 	br	1000393c <main+0x38>
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
100041e8:	010400b4 	movhi	r4,4098
100041ec:	21141e04 	addi	r4,r4,20600
100041f0:	0015ccc0 	call	10015ccc <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
100041f4:	00056580 	call	10005658 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100041f8:	00000306 	br	10004208 <main+0x904>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
100041fc:	00056580 	call	10005658 <UsbClassRequest>
		usleep(10*1000);
10004200:	0109c404 	movi	r4,10000
10004204:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004208:	010000c4 	movi	r4,3
1000420c:	00012b40 	call	100012b4 <IO_read>
10004210:	10bfffcc 	andi	r2,r2,65535
10004214:	1080040c 	andi	r2,r2,16
10004218:	103ff826 	beq	r2,zero,100041fc <main+0x8f8>
	}

	UsbWaitTDListDone();
1000421c:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004220:	01414184 	movi	r5,1286
10004224:	01000084 	movi	r4,2
10004228:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
1000422c:	0009883a 	mov	r4,zero
10004230:	00012b40 	call	100012b4 <IO_read>
10004234:	10bfffcc 	andi	r2,r2,65535
10004238:	100b883a 	mov	r5,r2
1000423c:	010400b4 	movhi	r4,4098
10004240:	21143004 	addi	r4,r4,20672
10004244:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
10004248:	01414204 	movi	r5,1288
1000424c:	01000084 	movi	r4,2
10004250:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004254:	0009883a 	mov	r4,zero
10004258:	00012b40 	call	100012b4 <IO_read>
1000425c:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004260:	e0bfff8b 	ldhu	r2,-2(fp)
10004264:	100b883a 	mov	r5,r2
10004268:	010400b4 	movhi	r4,4098
1000426c:	21143b04 	addi	r4,r4,20716
10004270:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10004274:	e0bfff8b 	ldhu	r2,-2(fp)
10004278:	108000e0 	cmpeqi	r2,r2,3
1000427c:	1000061e 	bne	r2,zero,10004298 <main+0x994>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004280:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10004284:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004288:	010400b4 	movhi	r4,4098
1000428c:	21135f04 	addi	r4,r4,19836
10004290:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10004294:	003da906 	br	1000393c <main+0x38>
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
10004298:	010400b4 	movhi	r4,4098
1000429c:	21144704 	addi	r4,r4,20764
100042a0:	0015ccc0 	call	10015ccc <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
100042a4:	00057580 	call	10005758 <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100042a8:	00000306 	br	100042b8 <main+0x9b4>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
100042ac:	00057580 	call	10005758 <UsbGetHidDesc>
		usleep(10*1000);
100042b0:	0109c404 	movi	r4,10000
100042b4:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100042b8:	010000c4 	movi	r4,3
100042bc:	00012b40 	call	100012b4 <IO_read>
100042c0:	10bfffcc 	andi	r2,r2,65535
100042c4:	1080040c 	andi	r2,r2,16
100042c8:	103ff826 	beq	r2,zero,100042ac <main+0x9a8>
	}

	UsbWaitTDListDone();
100042cc:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100042d0:	01414184 	movi	r5,1286
100042d4:	01000084 	movi	r4,2
100042d8:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
100042dc:	0009883a 	mov	r4,zero
100042e0:	00012b40 	call	100012b4 <IO_read>
100042e4:	10bfffcc 	andi	r2,r2,65535
100042e8:	100b883a 	mov	r5,r2
100042ec:	010400b4 	movhi	r4,4098
100042f0:	21143004 	addi	r4,r4,20672
100042f4:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
100042f8:	01414204 	movi	r5,1288
100042fc:	01000084 	movi	r4,2
10004300:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10004304:	0009883a 	mov	r4,zero
10004308:	00012b40 	call	100012b4 <IO_read>
1000430c:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10004310:	e0bfff8b 	ldhu	r2,-2(fp)
10004314:	100b883a 	mov	r5,r2
10004318:	010400b4 	movhi	r4,4098
1000431c:	21143b04 	addi	r4,r4,20716
10004320:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
10004324:	e0bfff8b 	ldhu	r2,-2(fp)
10004328:	108000e0 	cmpeqi	r2,r2,3
1000432c:	1000061e 	bne	r2,zero,10004348 <main+0xa44>
	{
		usb_ctl_val = UsbGetRetryCnt();
10004330:	0005c640 	call	10005c64 <UsbGetRetryCnt>
10004334:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10004338:	010400b4 	movhi	r4,4098
1000433c:	21135f04 	addi	r4,r4,19836
10004340:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
10004344:	003d7d06 	br	1000393c <main+0x38>
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
10004348:	010400b4 	movhi	r4,4098
1000434c:	21145904 	addi	r4,r4,20836
10004350:	0015ccc0 	call	10015ccc <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
10004354:	00058a00 	call	100058a0 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004358:	00000306 	br	10004368 <main+0xa64>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
1000435c:	00058a00 	call	100058a0 <UsbGetReportDesc>
		usleep(10*1000);
10004360:	0109c404 	movi	r4,10000
10004364:	00228500 	call	10022850 <usleep>
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004368:	010000c4 	movi	r4,3
1000436c:	00012b40 	call	100012b4 <IO_read>
10004370:	10bfffcc 	andi	r2,r2,65535
10004374:	1080040c 	andi	r2,r2,16
10004378:	103ff826 	beq	r2,zero,1000435c <main+0xa58>
	}

	UsbWaitTDListDone();
1000437c:	0005be00 	call	10005be0 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10004380:	01414184 	movi	r5,1286
10004384:	01000084 	movi	r4,2
10004388:	00012400 	call	10001240 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
1000438c:	0009883a 	mov	r4,zero
10004390:	00012b40 	call	100012b4 <IO_read>
10004394:	10bfffcc 	andi	r2,r2,65535
10004398:	100b883a 	mov	r5,r2
1000439c:	010400b4 	movhi	r4,4098
100043a0:	21146d04 	addi	r4,r4,20916
100043a4:	0015ba80 	call	10015ba8 <printf>

	IO_write(HPI_ADDR,0x0508);
100043a8:	01414204 	movi	r5,1288
100043ac:	01000084 	movi	r4,2
100043b0:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100043b4:	0009883a 	mov	r4,zero
100043b8:	00012b40 	call	100012b4 <IO_read>
100043bc:	e0bfff8d 	sth	r2,-2(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
100043c0:	e0bfff8b 	ldhu	r2,-2(fp)
100043c4:	100b883a 	mov	r5,r2
100043c8:	010400b4 	movhi	r4,4098
100043cc:	21147904 	addi	r4,r4,20964
100043d0:	0015ba80 	call	10015ba8 <printf>
	while (usb_ctl_val != 0x03)
100043d4:	e0bfff8b 	ldhu	r2,-2(fp)
100043d8:	108000e0 	cmpeqi	r2,r2,3
100043dc:	1000061e 	bne	r2,zero,100043f8 <main+0xaf4>
	{
		usb_ctl_val = UsbGetRetryCnt();
100043e0:	0005c640 	call	10005c64 <UsbGetRetryCnt>
100043e4:	e0bfff8d 	sth	r2,-2(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100043e8:	010400b4 	movhi	r4,4098
100043ec:	21135f04 	addi	r4,r4,19836
100043f0:	0015ccc0 	call	10015ccc <puts>
		goto USB_HOT_PLUG;
100043f4:	003d5106 	br	1000393c <main+0x38>
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
100043f8:	010400b4 	movhi	r4,4098
100043fc:	21148504 	addi	r4,r4,21012
10004400:	0015ccc0 	call	10015ccc <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
10004404:	0109c404 	movi	r4,10000
10004408:	00228500 	call	10022850 <usleep>
	while(1)
	{
		toggle++;
1000440c:	e0bfff43 	ldbu	r2,-3(fp)
10004410:	10800044 	addi	r2,r2,1
10004414:	e0bfff45 	stb	r2,-3(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
10004418:	01414004 	movi	r5,1280
1000441c:	01000084 	movi	r4,2
10004420:	00012400 	call	10001240 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
10004424:	01414704 	movi	r5,1308
10004428:	0009883a 	mov	r4,zero
1000442c:	00012400 	call	10001240 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
10004430:	e0bffbc3 	ldbu	r2,-17(fp)
10004434:	108003cc 	andi	r2,r2,15
10004438:	100b883a 	mov	r5,r2
1000443c:	0009883a 	mov	r4,zero
10004440:	00012400 	call	10001240 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10004444:	0140a444 	movi	r5,657
10004448:	0009883a 	mov	r4,zero
1000444c:	00012400 	call	10001240 <IO_write>
		if(toggle%2)
10004450:	e0bfff43 	ldbu	r2,-3(fp)
10004454:	1080004c 	andi	r2,r2,1
10004458:	10803fcc 	andi	r2,r2,255
1000445c:	10000426 	beq	r2,zero,10004470 <main+0xb6c>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
10004460:	01400044 	movi	r5,1
10004464:	0009883a 	mov	r4,zero
10004468:	00012400 	call	10001240 <IO_write>
1000446c:	00000306 	br	1000447c <main+0xb78>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
10004470:	01401044 	movi	r5,65
10004474:	0009883a 	mov	r4,zero
10004478:	00012400 	call	10001240 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
1000447c:	014004c4 	movi	r5,19
10004480:	0009883a 	mov	r4,zero
10004484:	00012400 	call	10001240 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
10004488:	000b883a 	mov	r5,zero
1000448c:	0009883a 	mov	r4,zero
10004490:	00012400 	call	10001240 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004494:	01414004 	movi	r5,1280
10004498:	01006c04 	movi	r4,432
1000449c:	0004bec0 	call	10004bec <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100044a0:	00002406 	br	10004534 <main+0xc30>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
100044a4:	01414004 	movi	r5,1280
100044a8:	01000084 	movi	r4,2
100044ac:	00012400 	call	10001240 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
100044b0:	01414704 	movi	r5,1308
100044b4:	0009883a 	mov	r4,zero
100044b8:	00012400 	call	10001240 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
100044bc:	e0bffbc3 	ldbu	r2,-17(fp)
100044c0:	108003cc 	andi	r2,r2,15
100044c4:	100b883a 	mov	r5,r2
100044c8:	0009883a 	mov	r4,zero
100044cc:	00012400 	call	10001240 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
100044d0:	0140a444 	movi	r5,657
100044d4:	0009883a 	mov	r4,zero
100044d8:	00012400 	call	10001240 <IO_write>
			if(toggle%2)
100044dc:	e0bfff43 	ldbu	r2,-3(fp)
100044e0:	1080004c 	andi	r2,r2,1
100044e4:	10803fcc 	andi	r2,r2,255
100044e8:	10000426 	beq	r2,zero,100044fc <main+0xbf8>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
100044ec:	01400044 	movi	r5,1
100044f0:	0009883a 	mov	r4,zero
100044f4:	00012400 	call	10001240 <IO_write>
100044f8:	00000306 	br	10004508 <main+0xc04>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
100044fc:	01401044 	movi	r5,65
10004500:	0009883a 	mov	r4,zero
10004504:	00012400 	call	10001240 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
10004508:	014004c4 	movi	r5,19
1000450c:	0009883a 	mov	r4,zero
10004510:	00012400 	call	10001240 <IO_write>
			IO_write(HPI_DATA,0x0000);//
10004514:	000b883a 	mov	r5,zero
10004518:	0009883a 	mov	r4,zero
1000451c:	00012400 	call	10001240 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004520:	01414004 	movi	r5,1280
10004524:	01006c04 	movi	r4,432
10004528:	0004bec0 	call	10004bec <UsbWrite>
			usleep(10*1000);
1000452c:	0109c404 	movi	r4,10000
10004530:	00228500 	call	10022850 <usleep>
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10004534:	010000c4 	movi	r4,3
10004538:	00012b40 	call	100012b4 <IO_read>
1000453c:	10bfffcc 	andi	r2,r2,65535
10004540:	1080040c 	andi	r2,r2,16
10004544:	103fd726 	beq	r2,zero,100044a4 <main+0xba0>
		}//end while

		usb_ctl_val = UsbWaitTDListDone();
10004548:	0005be00 	call	10005be0 <UsbWaitTDListDone>
1000454c:	e0bfff8d 	sth	r2,-2(fp)

		// The first two keycodes are stored in 0x051E. Other keycodes are in 
		// subsequent addresses.
		keycode = UsbRead(0x051e);
10004550:	01014784 	movi	r4,1310
10004554:	0004c480 	call	10004c48 <UsbRead>
10004558:	10bfffcc 	andi	r2,r2,65535
1000455c:	e0bffd15 	stw	r2,-12(fp)
		printf("\nfirst two keycode values are %04x\n",keycode);
10004560:	e17ffd17 	ldw	r5,-12(fp)
10004564:	010400b4 	movhi	r4,4098
10004568:	21149904 	addi	r4,r4,21092
1000456c:	0015ba80 	call	10015ba8 <printf>
		// We only need the first keycode, which is at the lower byte of keycode.
		// Send the keycode to hardware via PIO.

		usleep(200);//usleep(5000);
10004570:	01003204 	movi	r4,200
10004574:	00228500 	call	10022850 <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
10004578:	d0a95d0b 	ldhu	r2,-23180(gp)
1000457c:	10bfffcc 	andi	r2,r2,65535
10004580:	1009883a 	mov	r4,r2
10004584:	0004c480 	call	10004c48 <UsbRead>
10004588:	e0bfff8d 	sth	r2,-2(fp)

		if(!(usb_ctl_val & no_device))
1000458c:	d0a95d8b 	ldhu	r2,-23178(gp)
10004590:	e0ffff8b 	ldhu	r3,-2(fp)
10004594:	1884703a 	and	r2,r3,r2
10004598:	10bfffcc 	andi	r2,r2,65535
1000459c:	10003f1e 	bne	r2,zero,1000469c <main+0xd98>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
100045a0:	e03fff05 	stb	zero,-4(fp)
100045a4:	00000f06 	br	100045e4 <main+0xce0>
			{
				usleep(5*1000);
100045a8:	0104e204 	movi	r4,5000
100045ac:	00228500 	call	10022850 <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
100045b0:	d0a95d0b 	ldhu	r2,-23180(gp)
100045b4:	10bfffcc 	andi	r2,r2,65535
100045b8:	1009883a 	mov	r4,r2
100045bc:	0004c480 	call	10004c48 <UsbRead>
100045c0:	e0bfff8d 	sth	r2,-2(fp)
				if(usb_ctl_val & no_device) break;
100045c4:	d0a95d8b 	ldhu	r2,-23178(gp)
100045c8:	e0ffff8b 	ldhu	r3,-2(fp)
100045cc:	1884703a 	and	r2,r3,r2
100045d0:	10bfffcc 	andi	r2,r2,65535
100045d4:	1000071e 	bne	r2,zero,100045f4 <main+0xcf0>
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
100045d8:	e0bfff03 	ldbu	r2,-4(fp)
100045dc:	10800044 	addi	r2,r2,1
100045e0:	e0bfff05 	stb	r2,-4(fp)
100045e4:	e0bfff03 	ldbu	r2,-4(fp)
100045e8:	108001f0 	cmpltui	r2,r2,7
100045ec:	103fee1e 	bne	r2,zero,100045a8 <main+0xca4>
100045f0:	00000106 	br	100045f8 <main+0xcf4>
				if(usb_ctl_val & no_device) break;
100045f4:	0001883a 	nop
			}
			if(!(usb_ctl_val & no_device))
100045f8:	d0a95d8b 	ldhu	r2,-23178(gp)
100045fc:	e0ffff8b 	ldhu	r3,-2(fp)
10004600:	1884703a 	and	r2,r3,r2
10004604:	10bfffcc 	andi	r2,r2,65535
10004608:	1000241e 	bne	r2,zero,1000469c <main+0xd98>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
1000460c:	010400b4 	movhi	r4,4098
10004610:	2114a204 	addi	r4,r4,21128
10004614:	0015ccc0 	call	10015ccc <puts>
				printf("[INFO]: please insert again!!! \n");
10004618:	010400b4 	movhi	r4,4098
1000461c:	2114ad04 	addi	r4,r4,21172
10004620:	0015ccc0 	call	10015ccc <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
10004624:	00001d06 	br	1000469c <main+0xd98>
		{

			usb_ctl_val = UsbRead(ctl_reg);
10004628:	d0a95d0b 	ldhu	r2,-23180(gp)
1000462c:	10bfffcc 	andi	r2,r2,65535
10004630:	1009883a 	mov	r4,r2
10004634:	0004c480 	call	10004c48 <UsbRead>
10004638:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
1000463c:	0104e204 	movi	r4,5000
10004640:	00228500 	call	10022850 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004644:	d0a95d0b 	ldhu	r2,-23180(gp)
10004648:	10bfffcc 	andi	r2,r2,65535
1000464c:	1009883a 	mov	r4,r2
10004650:	0004c480 	call	10004c48 <UsbRead>
10004654:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004658:	0104e204 	movi	r4,5000
1000465c:	00228500 	call	10022850 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10004660:	d0a95d0b 	ldhu	r2,-23180(gp)
10004664:	10bfffcc 	andi	r2,r2,65535
10004668:	1009883a 	mov	r4,r2
1000466c:	0004c480 	call	10004c48 <UsbRead>
10004670:	e0bfff8d 	sth	r2,-2(fp)
			usleep(5*1000);
10004674:	0104e204 	movi	r4,5000
10004678:	00228500 	call	10022850 <usleep>

			if(usb_ctl_val & no_device)
1000467c:	d0a95d8b 	ldhu	r2,-23178(gp)
10004680:	e0ffff8b 	ldhu	r3,-2(fp)
10004684:	1884703a 	and	r2,r3,r2
10004688:	10bfffcc 	andi	r2,r2,65535
1000468c:	10000126 	beq	r2,zero,10004694 <main+0xd90>
				goto USB_HOT_PLUG;
10004690:	003caa06 	br	1000393c <main+0x38>

			usleep(200);
10004694:	01003204 	movi	r4,200
10004698:	00228500 	call	10022850 <usleep>
		while (!(usb_ctl_val & no_device))
1000469c:	d0a95d8b 	ldhu	r2,-23178(gp)
100046a0:	e0ffff8b 	ldhu	r3,-2(fp)
100046a4:	1884703a 	and	r2,r3,r2
100046a8:	10bfffcc 	andi	r2,r2,65535
100046ac:	103fde26 	beq	r2,zero,10004628 <main+0xd24>
		toggle++;
100046b0:	003f5606 	br	1000440c <main+0xb08>

100046b4 <drawTile>:
#include "tile_eng_driver.h"
#include <stdint.h>
#include <stdio.h>
#include <string.h>

void drawTile(int x, int y, int paletteId, int spriteId) {
100046b4:	defffa04 	addi	sp,sp,-24
100046b8:	df000515 	stw	fp,20(sp)
100046bc:	df000504 	addi	fp,sp,20
100046c0:	e13ffe15 	stw	r4,-8(fp)
100046c4:	e17ffd15 	stw	r5,-12(fp)
100046c8:	e1bffc15 	stw	r6,-16(fp)
100046cc:	e1fffb15 	stw	r7,-20(fp)
	uint16_t tt_addr = ((y & 0xFF)<<8) | (x & 0xFF);
100046d0:	e0bffd17 	ldw	r2,-12(fp)
100046d4:	1004923a 	slli	r2,r2,8
100046d8:	1007883a 	mov	r3,r2
100046dc:	e0bffe17 	ldw	r2,-8(fp)
100046e0:	10803fcc 	andi	r2,r2,255
100046e4:	1884b03a 	or	r2,r3,r2
100046e8:	e0bfff8d 	sth	r2,-2(fp)
	uint16_t tt_data = ((paletteId & 0x7)<<8) | (spriteId & 0xFF);
100046ec:	e0bffc17 	ldw	r2,-16(fp)
100046f0:	1004923a 	slli	r2,r2,8
100046f4:	1081c00c 	andi	r2,r2,1792
100046f8:	1007883a 	mov	r3,r2
100046fc:	e0bffb17 	ldw	r2,-20(fp)
10004700:	10803fcc 	andi	r2,r2,255
10004704:	1884b03a 	or	r2,r3,r2
10004708:	e0bfff0d 	sth	r2,-4(fp)
	tiletable_ptr[tt_addr] = tt_data;
1000470c:	e0bfff8b 	ldhu	r2,-2(fp)
10004710:	100690ba 	slli	r3,r2,2
10004714:	00a00014 	movui	r2,32768
10004718:	1885883a 	add	r2,r3,r2
1000471c:	e0ffff0b 	ldhu	r3,-4(fp)
10004720:	10c00015 	stw	r3,0(r2)
}
10004724:	0001883a 	nop
10004728:	e037883a 	mov	sp,fp
1000472c:	df000017 	ldw	fp,0(sp)
10004730:	dec00104 	addi	sp,sp,4
10004734:	f800283a 	ret

10004738 <writePaletteHelper>:

// Internal function. Can be used but no need.
void writePaletteHelper(uint8_t paletteId, uint8_t colorIndex, int rgbColor) {
10004738:	defffa04 	addi	sp,sp,-24
1000473c:	dfc00515 	stw	ra,20(sp)
10004740:	df000415 	stw	fp,16(sp)
10004744:	df000404 	addi	fp,sp,16
10004748:	2005883a 	mov	r2,r4
1000474c:	2807883a 	mov	r3,r5
10004750:	e1bffc15 	stw	r6,-16(fp)
10004754:	e0bffe05 	stb	r2,-8(fp)
10004758:	1805883a 	mov	r2,r3
1000475c:	e0bffd05 	stb	r2,-12(fp)
	uint8_t paletteAddr = ((paletteId & 0x7) << 2) | (colorIndex & 0x3);
10004760:	e0bffe03 	ldbu	r2,-8(fp)
10004764:	100490ba 	slli	r2,r2,2
10004768:	1080070c 	andi	r2,r2,28
1000476c:	1007883a 	mov	r3,r2
10004770:	e0bffd03 	ldbu	r2,-12(fp)
10004774:	108000cc 	andi	r2,r2,3
10004778:	1884b03a 	or	r2,r3,r2
1000477c:	e0bfffc5 	stb	r2,-1(fp)
	palette_ptr[paletteAddr] = rgbColor & 0x00FFFFFF;
10004780:	e0bfffc3 	ldbu	r2,-1(fp)
10004784:	100490ba 	slli	r2,r2,2
10004788:	10c02004 	addi	r3,r2,128
1000478c:	e13ffc17 	ldw	r4,-16(fp)
10004790:	00804034 	movhi	r2,256
10004794:	10bfffc4 	addi	r2,r2,-1
10004798:	2084703a 	and	r2,r4,r2
1000479c:	18800015 	stw	r2,0(r3)
	printf("palette_ptr[%02x]=%06x\n",paletteAddr, rgbColor & 0x00FFFFFF);
100047a0:	e13fffc3 	ldbu	r4,-1(fp)
100047a4:	e0fffc17 	ldw	r3,-16(fp)
100047a8:	00804034 	movhi	r2,256
100047ac:	10bfffc4 	addi	r2,r2,-1
100047b0:	1884703a 	and	r2,r3,r2
100047b4:	100d883a 	mov	r6,r2
100047b8:	200b883a 	mov	r5,r4
100047bc:	010400b4 	movhi	r4,4098
100047c0:	2114b504 	addi	r4,r4,21204
100047c4:	0015ba80 	call	10015ba8 <printf>
}
100047c8:	0001883a 	nop
100047cc:	e037883a 	mov	sp,fp
100047d0:	dfc00117 	ldw	ra,4(sp)
100047d4:	df000017 	ldw	fp,0(sp)
100047d8:	dec00204 	addi	sp,sp,8
100047dc:	f800283a 	ret

100047e0 <writePalette>:

// Write an entire palette to the palette storage.
void writePalette(Palette* toWrite) {
100047e0:	defffd04 	addi	sp,sp,-12
100047e4:	dfc00215 	stw	ra,8(sp)
100047e8:	df000115 	stw	fp,4(sp)
100047ec:	df000104 	addi	fp,sp,4
100047f0:	e13fff15 	stw	r4,-4(fp)
	writePaletteHelper(toWrite->paletteId, 0, toWrite->colors[0]);
100047f4:	e0bfff17 	ldw	r2,-4(fp)
100047f8:	10800017 	ldw	r2,0(r2)
100047fc:	10c03fcc 	andi	r3,r2,255
10004800:	e0bfff17 	ldw	r2,-4(fp)
10004804:	10800117 	ldw	r2,4(r2)
10004808:	100d883a 	mov	r6,r2
1000480c:	000b883a 	mov	r5,zero
10004810:	1809883a 	mov	r4,r3
10004814:	00047380 	call	10004738 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 1, toWrite->colors[1]);
10004818:	e0bfff17 	ldw	r2,-4(fp)
1000481c:	10800017 	ldw	r2,0(r2)
10004820:	10c03fcc 	andi	r3,r2,255
10004824:	e0bfff17 	ldw	r2,-4(fp)
10004828:	10800217 	ldw	r2,8(r2)
1000482c:	100d883a 	mov	r6,r2
10004830:	01400044 	movi	r5,1
10004834:	1809883a 	mov	r4,r3
10004838:	00047380 	call	10004738 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 2, toWrite->colors[2]);
1000483c:	e0bfff17 	ldw	r2,-4(fp)
10004840:	10800017 	ldw	r2,0(r2)
10004844:	10c03fcc 	andi	r3,r2,255
10004848:	e0bfff17 	ldw	r2,-4(fp)
1000484c:	10800317 	ldw	r2,12(r2)
10004850:	100d883a 	mov	r6,r2
10004854:	01400084 	movi	r5,2
10004858:	1809883a 	mov	r4,r3
1000485c:	00047380 	call	10004738 <writePaletteHelper>
	writePaletteHelper(toWrite->paletteId, 3, toWrite->colors[3]);
10004860:	e0bfff17 	ldw	r2,-4(fp)
10004864:	10800017 	ldw	r2,0(r2)
10004868:	10c03fcc 	andi	r3,r2,255
1000486c:	e0bfff17 	ldw	r2,-4(fp)
10004870:	10800417 	ldw	r2,16(r2)
10004874:	100d883a 	mov	r6,r2
10004878:	014000c4 	movi	r5,3
1000487c:	1809883a 	mov	r4,r3
10004880:	00047380 	call	10004738 <writePaletteHelper>
	printf("\n");
10004884:	01000284 	movi	r4,10
10004888:	0015be80 	call	10015be8 <putchar>
}
1000488c:	0001883a 	nop
10004890:	e037883a 	mov	sp,fp
10004894:	dfc00117 	ldw	ra,4(sp)
10004898:	df000017 	ldw	fp,0(sp)
1000489c:	dec00204 	addi	sp,sp,8
100048a0:	f800283a 	ret

100048a4 <parseSpriteLine>:

// " " - 00, "@" - 01. "#" - 10, "*" - 11.
void parseSpriteLine(Sprite *sprite, uint8_t linenum, char data[8]) {
100048a4:	defffb04 	addi	sp,sp,-20
100048a8:	df000415 	stw	fp,16(sp)
100048ac:	df000404 	addi	fp,sp,16
100048b0:	e13ffe15 	stw	r4,-8(fp)
100048b4:	2805883a 	mov	r2,r5
100048b8:	e1bffc15 	stw	r6,-16(fp)
100048bc:	e0bffd05 	stb	r2,-12(fp)
	uint16_t result_line;
	for(uint8_t i=0; i<8; i++) {
100048c0:	e03fff45 	stb	zero,-3(fp)
100048c4:	00002306 	br	10004954 <parseSpriteLine+0xb0>
		switch(data[i]) {
100048c8:	e0bfff43 	ldbu	r2,-3(fp)
100048cc:	e0fffc17 	ldw	r3,-16(fp)
100048d0:	1885883a 	add	r2,r3,r2
100048d4:	10800003 	ldbu	r2,0(r2)
100048d8:	10803fcc 	andi	r2,r2,255
100048dc:	1080201c 	xori	r2,r2,128
100048e0:	10bfe004 	addi	r2,r2,-128
100048e4:	10c00aa0 	cmpeqi	r3,r2,42
100048e8:	1800051e 	bne	r3,zero,10004900 <parseSpriteLine+0x5c>
100048ec:	10c01020 	cmpeqi	r3,r2,64
100048f0:	18000d1e 	bne	r3,zero,10004928 <parseSpriteLine+0x84>
100048f4:	108008e0 	cmpeqi	r2,r2,35
100048f8:	1000061e 	bne	r2,zero,10004914 <parseSpriteLine+0x70>
100048fc:	00000f06 	br	1000493c <parseSpriteLine+0x98>
			case '*': {
				result_line = (result_line<<2) | 0b11;
10004900:	e0bfff8b 	ldhu	r2,-2(fp)
10004904:	100490ba 	slli	r2,r2,2
10004908:	108000d4 	ori	r2,r2,3
1000490c:	e0bfff8d 	sth	r2,-2(fp)
				break;
10004910:	00000d06 	br	10004948 <parseSpriteLine+0xa4>
			}
			case '#': {
				result_line = (result_line<<2) | 0b10;
10004914:	e0bfff8b 	ldhu	r2,-2(fp)
10004918:	100490ba 	slli	r2,r2,2
1000491c:	10800094 	ori	r2,r2,2
10004920:	e0bfff8d 	sth	r2,-2(fp)
				break;
10004924:	00000806 	br	10004948 <parseSpriteLine+0xa4>
			}
			case '@': {
				result_line = (result_line<<2) | 0b01;
10004928:	e0bfff8b 	ldhu	r2,-2(fp)
1000492c:	100490ba 	slli	r2,r2,2
10004930:	10800054 	ori	r2,r2,1
10004934:	e0bfff8d 	sth	r2,-2(fp)
				break;
10004938:	00000306 	br	10004948 <parseSpriteLine+0xa4>
			}
			default: {
				result_line = (result_line<<2) | 0b00;
1000493c:	e0bfff8b 	ldhu	r2,-2(fp)
10004940:	100490ba 	slli	r2,r2,2
10004944:	e0bfff8d 	sth	r2,-2(fp)
	for(uint8_t i=0; i<8; i++) {
10004948:	e0bfff43 	ldbu	r2,-3(fp)
1000494c:	10800044 	addi	r2,r2,1
10004950:	e0bfff45 	stb	r2,-3(fp)
10004954:	e0bfff43 	ldbu	r2,-3(fp)
10004958:	10800230 	cmpltui	r2,r2,8
1000495c:	103fda1e 	bne	r2,zero,100048c8 <parseSpriteLine+0x24>
			}
		}
	}
	sprite -> lines[linenum] = result_line;
10004960:	e0bffd03 	ldbu	r2,-12(fp)
10004964:	e0fffe17 	ldw	r3,-8(fp)
10004968:	1085883a 	add	r2,r2,r2
1000496c:	1885883a 	add	r2,r3,r2
10004970:	e0ffff8b 	ldhu	r3,-2(fp)
10004974:	10c0008d 	sth	r3,2(r2)
}
10004978:	0001883a 	nop
1000497c:	e037883a 	mov	sp,fp
10004980:	df000017 	ldw	fp,0(sp)
10004984:	dec00104 	addi	sp,sp,4
10004988:	f800283a 	ret

1000498c <parseSprite>:

// Parses all 128 characters in a custom sprite
void parseSprite(Sprite *target, char datas[16][8]) {
1000498c:	defffb04 	addi	sp,sp,-20
10004990:	dfc00415 	stw	ra,16(sp)
10004994:	df000315 	stw	fp,12(sp)
10004998:	df000304 	addi	fp,sp,12
1000499c:	e13ffe15 	stw	r4,-8(fp)
100049a0:	e17ffd15 	stw	r5,-12(fp)
	for(int i=0; i<16; i++) {
100049a4:	e03fff15 	stw	zero,-4(fp)
100049a8:	00000d06 	br	100049e0 <parseSprite+0x54>
		parseSpriteLine(target,i,datas[i]);
100049ac:	e0bfff17 	ldw	r2,-4(fp)
100049b0:	11003fcc 	andi	r4,r2,255
100049b4:	e0bfff17 	ldw	r2,-4(fp)
100049b8:	100490fa 	slli	r2,r2,3
100049bc:	e0fffd17 	ldw	r3,-12(fp)
100049c0:	1885883a 	add	r2,r3,r2
100049c4:	100d883a 	mov	r6,r2
100049c8:	200b883a 	mov	r5,r4
100049cc:	e13ffe17 	ldw	r4,-8(fp)
100049d0:	00048a40 	call	100048a4 <parseSpriteLine>
	for(int i=0; i<16; i++) {
100049d4:	e0bfff17 	ldw	r2,-4(fp)
100049d8:	10800044 	addi	r2,r2,1
100049dc:	e0bfff15 	stw	r2,-4(fp)
100049e0:	e0bfff17 	ldw	r2,-4(fp)
100049e4:	10800410 	cmplti	r2,r2,16
100049e8:	103ff01e 	bne	r2,zero,100049ac <parseSprite+0x20>
	}
}
100049ec:	0001883a 	nop
100049f0:	e037883a 	mov	sp,fp
100049f4:	dfc00117 	ldw	ra,4(sp)
100049f8:	df000017 	ldw	fp,0(sp)
100049fc:	dec00204 	addi	sp,sp,8
10004a00:	f800283a 	ret

10004a04 <writeSprite>:

void writeSprite(Sprite* target) {
10004a04:	defffb04 	addi	sp,sp,-20
10004a08:	dfc00415 	stw	ra,16(sp)
10004a0c:	df000315 	stw	fp,12(sp)
10004a10:	df000304 	addi	fp,sp,12
10004a14:	e13ffd15 	stw	r4,-12(fp)
	for(int i=0; i<8; i+=1) {
10004a18:	e03fff15 	stw	zero,-4(fp)
10004a1c:	00002506 	br	10004ab4 <writeSprite+0xb0>
		int prepare_dualine = (((int)(target->lines[2*i]) & 0xFFFF)<< 16) | (((int)(target->lines[2*i+1]) & 0xFFFF));
10004a20:	e0bfff17 	ldw	r2,-4(fp)
10004a24:	1085883a 	add	r2,r2,r2
10004a28:	e0fffd17 	ldw	r3,-12(fp)
10004a2c:	1085883a 	add	r2,r2,r2
10004a30:	1885883a 	add	r2,r3,r2
10004a34:	1080008b 	ldhu	r2,2(r2)
10004a38:	10bfffcc 	andi	r2,r2,65535
10004a3c:	1006943a 	slli	r3,r2,16
10004a40:	e0bfff17 	ldw	r2,-4(fp)
10004a44:	1085883a 	add	r2,r2,r2
10004a48:	10800044 	addi	r2,r2,1
10004a4c:	e13ffd17 	ldw	r4,-12(fp)
10004a50:	1085883a 	add	r2,r2,r2
10004a54:	2085883a 	add	r2,r4,r2
10004a58:	1080008b 	ldhu	r2,2(r2)
10004a5c:	10bfffcc 	andi	r2,r2,65535
10004a60:	1884b03a 	or	r2,r3,r2
10004a64:	e0bffe15 	stw	r2,-8(fp)
		printf("%08x\n",prepare_dualine);
10004a68:	e17ffe17 	ldw	r5,-8(fp)
10004a6c:	010400b4 	movhi	r4,4098
10004a70:	2114bb04 	addi	r4,r4,21228
10004a74:	0015ba80 	call	10015ba8 <printf>
		spriteram_ptr[((target->sprite_id & 0x3F) << 3) | (i&0x7)] = prepare_dualine;
10004a78:	e0bffd17 	ldw	r2,-12(fp)
10004a7c:	1080000b 	ldhu	r2,0(r2)
10004a80:	10bfffcc 	andi	r2,r2,65535
10004a84:	100490fa 	slli	r2,r2,3
10004a88:	10c07e0c 	andi	r3,r2,504
10004a8c:	e0bfff17 	ldw	r2,-4(fp)
10004a90:	108001cc 	andi	r2,r2,7
10004a94:	1884b03a 	or	r2,r3,r2
10004a98:	100490ba 	slli	r2,r2,2
10004a9c:	10860004 	addi	r2,r2,6144
10004aa0:	e0fffe17 	ldw	r3,-8(fp)
10004aa4:	10c00015 	stw	r3,0(r2)
	for(int i=0; i<8; i+=1) {
10004aa8:	e0bfff17 	ldw	r2,-4(fp)
10004aac:	10800044 	addi	r2,r2,1
10004ab0:	e0bfff15 	stw	r2,-4(fp)
10004ab4:	e0bfff17 	ldw	r2,-4(fp)
10004ab8:	10800210 	cmplti	r2,r2,8
10004abc:	103fd81e 	bne	r2,zero,10004a20 <writeSprite+0x1c>
	}
}
10004ac0:	0001883a 	nop
10004ac4:	e037883a 	mov	sp,fp
10004ac8:	dfc00117 	ldw	ra,4(sp)
10004acc:	df000017 	ldw	fp,0(sp)
10004ad0:	dec00204 	addi	sp,sp,8
10004ad4:	f800283a 	ret

10004ad8 <writeText>:

void writeText(int beginningX, int Y, char text[], int paletteId) {
10004ad8:	defff804 	addi	sp,sp,-32
10004adc:	dfc00715 	stw	ra,28(sp)
10004ae0:	df000615 	stw	fp,24(sp)
10004ae4:	df000604 	addi	fp,sp,24
10004ae8:	e13ffd15 	stw	r4,-12(fp)
10004aec:	e17ffc15 	stw	r5,-16(fp)
10004af0:	e1bffb15 	stw	r6,-20(fp)
10004af4:	e1fffa15 	stw	r7,-24(fp)
	int length = strlen(text);
10004af8:	e13ffb17 	ldw	r4,-20(fp)
10004afc:	00164b40 	call	100164b4 <strlen>
10004b00:	e0bffe15 	stw	r2,-8(fp)
	for(int i=0;i<length;i+=1) {
10004b04:	e03fff15 	stw	zero,-4(fp)
10004b08:	00001006 	br	10004b4c <writeText+0x74>
		drawTile(beginningX+i, Y, paletteId, text[i]&0x7F);
10004b0c:	e0fffd17 	ldw	r3,-12(fp)
10004b10:	e0bfff17 	ldw	r2,-4(fp)
10004b14:	1889883a 	add	r4,r3,r2
10004b18:	e0bfff17 	ldw	r2,-4(fp)
10004b1c:	e0fffb17 	ldw	r3,-20(fp)
10004b20:	1885883a 	add	r2,r3,r2
10004b24:	10800003 	ldbu	r2,0(r2)
10004b28:	10803fcc 	andi	r2,r2,255
10004b2c:	10801fcc 	andi	r2,r2,127
10004b30:	100f883a 	mov	r7,r2
10004b34:	e1bffa17 	ldw	r6,-24(fp)
10004b38:	e17ffc17 	ldw	r5,-16(fp)
10004b3c:	00046b40 	call	100046b4 <drawTile>
	for(int i=0;i<length;i+=1) {
10004b40:	e0bfff17 	ldw	r2,-4(fp)
10004b44:	10800044 	addi	r2,r2,1
10004b48:	e0bfff15 	stw	r2,-4(fp)
10004b4c:	e0ffff17 	ldw	r3,-4(fp)
10004b50:	e0bffe17 	ldw	r2,-8(fp)
10004b54:	18bfed16 	blt	r3,r2,10004b0c <writeText+0x34>
	}
}
10004b58:	0001883a 	nop
10004b5c:	e037883a 	mov	sp,fp
10004b60:	dfc00117 	ldw	ra,4(sp)
10004b64:	df000017 	ldw	fp,0(sp)
10004b68:	dec00204 	addi	sp,sp,8
10004b6c:	f800283a 	ret

10004b70 <clearScreen>:

void clearScreen() {
10004b70:	defffc04 	addi	sp,sp,-16
10004b74:	dfc00315 	stw	ra,12(sp)
10004b78:	df000215 	stw	fp,8(sp)
10004b7c:	df000204 	addi	fp,sp,8
	for(int i=0; i<30; i++){
10004b80:	e03fff15 	stw	zero,-4(fp)
10004b84:	00001006 	br	10004bc8 <clearScreen+0x58>
		for(int j=0; j<80; j++) {
10004b88:	e03ffe15 	stw	zero,-8(fp)
10004b8c:	00000806 	br	10004bb0 <clearScreen+0x40>
			drawTile(j,i,0,0);
10004b90:	000f883a 	mov	r7,zero
10004b94:	000d883a 	mov	r6,zero
10004b98:	e17fff17 	ldw	r5,-4(fp)
10004b9c:	e13ffe17 	ldw	r4,-8(fp)
10004ba0:	00046b40 	call	100046b4 <drawTile>
		for(int j=0; j<80; j++) {
10004ba4:	e0bffe17 	ldw	r2,-8(fp)
10004ba8:	10800044 	addi	r2,r2,1
10004bac:	e0bffe15 	stw	r2,-8(fp)
10004bb0:	e0bffe17 	ldw	r2,-8(fp)
10004bb4:	10801410 	cmplti	r2,r2,80
10004bb8:	103ff51e 	bne	r2,zero,10004b90 <clearScreen+0x20>
	for(int i=0; i<30; i++){
10004bbc:	e0bfff17 	ldw	r2,-4(fp)
10004bc0:	10800044 	addi	r2,r2,1
10004bc4:	e0bfff15 	stw	r2,-4(fp)
10004bc8:	e0bfff17 	ldw	r2,-4(fp)
10004bcc:	10800790 	cmplti	r2,r2,30
10004bd0:	103fed1e 	bne	r2,zero,10004b88 <clearScreen+0x18>
		}
	}
}
10004bd4:	0001883a 	nop
10004bd8:	e037883a 	mov	sp,fp
10004bdc:	dfc00117 	ldw	ra,4(sp)
10004be0:	df000017 	ldw	fp,0(sp)
10004be4:	dec00204 	addi	sp,sp,8
10004be8:	f800283a 	ret

10004bec <UsbWrite>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data)
{
10004bec:	defffc04 	addi	sp,sp,-16
10004bf0:	dfc00315 	stw	ra,12(sp)
10004bf4:	df000215 	stw	fp,8(sp)
10004bf8:	df000204 	addi	fp,sp,8
10004bfc:	2005883a 	mov	r2,r4
10004c00:	2807883a 	mov	r3,r5
10004c04:	e0bfff0d 	sth	r2,-4(fp)
10004c08:	1805883a 	mov	r2,r3
10004c0c:	e0bffe0d 	sth	r2,-8(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10004c10:	e0bfff0b 	ldhu	r2,-4(fp)
10004c14:	100b883a 	mov	r5,r2
10004c18:	01000084 	movi	r4,2
10004c1c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA, Data);
10004c20:	e0bffe0b 	ldhu	r2,-8(fp)
10004c24:	100b883a 	mov	r5,r2
10004c28:	0009883a 	mov	r4,zero
10004c2c:	00012400 	call	10001240 <IO_write>
}
10004c30:	0001883a 	nop
10004c34:	e037883a 	mov	sp,fp
10004c38:	dfc00117 	ldw	ra,4(sp)
10004c3c:	df000017 	ldw	fp,0(sp)
10004c40:	dec00204 	addi	sp,sp,8
10004c44:	f800283a 	ret

10004c48 <UsbRead>:
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address)
{
10004c48:	defffd04 	addi	sp,sp,-12
10004c4c:	dfc00215 	stw	ra,8(sp)
10004c50:	df000115 	stw	fp,4(sp)
10004c54:	df000104 	addi	fp,sp,4
10004c58:	2005883a 	mov	r2,r4
10004c5c:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	IO_write(HPI_ADDR, Address);
10004c60:	e0bfff0b 	ldhu	r2,-4(fp)
10004c64:	100b883a 	mov	r5,r2
10004c68:	01000084 	movi	r4,2
10004c6c:	00012400 	call	10001240 <IO_write>
	return IO_read(HPI_DATA);
10004c70:	0009883a 	mov	r4,zero
10004c74:	00012b40 	call	100012b4 <IO_read>
}
10004c78:	e037883a 	mov	sp,fp
10004c7c:	dfc00117 	ldw	ra,4(sp)
10004c80:	df000017 	ldw	fp,0(sp)
10004c84:	dec00204 	addi	sp,sp,8
10004c88:	f800283a 	ret

10004c8c <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
10004c8c:	defffe04 	addi	sp,sp,-8
10004c90:	dfc00115 	stw	ra,4(sp)
10004c94:	df000015 	stw	fp,0(sp)
10004c98:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
10004c9c:	017e9414 	movui	r5,64080
10004ca0:	01000044 	movi	r4,1
10004ca4:	00012400 	call	10001240 <IO_write>
	usleep(100000);
10004ca8:	010000b4 	movhi	r4,2
10004cac:	2121a804 	addi	r4,r4,-31072
10004cb0:	00228500 	call	10022850 <usleep>
	printf("[USB INIT]:reset finished!\n");
10004cb4:	010400b4 	movhi	r4,4098
10004cb8:	2114bd04 	addi	r4,r4,21236
10004cbc:	0015ccc0 	call	10015ccc <puts>

	usleep(500000);
10004cc0:	01000234 	movhi	r4,8
10004cc4:	21284804 	addi	r4,r4,-24288
10004cc8:	00228500 	call	10022850 <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
10004ccc:	010400b4 	movhi	r4,4098
10004cd0:	2114c404 	addi	r4,r4,21264
10004cd4:	0015ccc0 	call	10015ccc <puts>
	IO_read(HPI_MAILBOX);
10004cd8:	01000044 	movi	r4,1
10004cdc:	00012b40 	call	100012b4 <IO_read>
	IO_read(HPI_STATUS);
10004ce0:	010000c4 	movi	r4,3
10004ce4:	00012b40 	call	100012b4 <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
10004ce8:	01005104 	movi	r4,324
10004cec:	0004c480 	call	10004c48 <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10004cf0:	000b883a 	mov	r5,zero
10004cf4:	01005104 	movi	r4,324
10004cf8:	0004bec0 	call	10004bec <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
10004cfc:	01005204 	movi	r4,328
10004d00:	0004c480 	call	10004c48 <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
10004d04:	000b883a 	mov	r5,zero
10004d08:	01005204 	movi	r4,328
10004d0c:	0004bec0 	call	10004bec <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10004d10:	017fffd4 	movui	r5,65535
10004d14:	01302414 	movui	r4,49296
10004d18:	0004bec0 	call	10004bec <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
10004d1c:	017fffd4 	movui	r5,65535
10004d20:	01302c14 	movui	r4,49328
10004d24:	0004bec0 	call	10004bec <UsbWrite>
}
10004d28:	0001883a 	nop
10004d2c:	e037883a 	mov	sp,fp
10004d30:	dfc00117 	ldw	ra,4(sp)
10004d34:	df000017 	ldw	fp,0(sp)
10004d38:	dec00204 	addi	sp,sp,8
10004d3c:	f800283a 	ret

10004d40 <UsbSetAddress>:


void UsbSetAddress()
{
10004d40:	defffe04 	addi	sp,sp,-8
10004d44:	dfc00115 	stw	ra,4(sp)
10004d48:	df000015 	stw	fp,0(sp)
10004d4c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004d50:	01414004 	movi	r5,1280
10004d54:	01000084 	movi	r4,2
10004d58:	00012400 	call	10001240 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
10004d5c:	01414304 	movi	r5,1292
10004d60:	0009883a 	mov	r4,zero
10004d64:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004d68:	01400204 	movi	r5,8
10004d6c:	0009883a 	mov	r4,zero
10004d70:	00012400 	call	10001240 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
10004d74:	01403404 	movi	r5,208
10004d78:	0009883a 	mov	r4,zero
10004d7c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004d80:	01400044 	movi	r5,1
10004d84:	0009883a 	mov	r4,zero
10004d88:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004d8c:	014004c4 	movi	r5,19
10004d90:	0009883a 	mov	r4,zero
10004d94:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004d98:	01414504 	movi	r5,1300
10004d9c:	0009883a 	mov	r4,zero
10004da0:	00012400 	call	10001240 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
10004da4:	01414004 	movi	r5,1280
10004da8:	0009883a 	mov	r4,zero
10004dac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);
10004db0:	01400084 	movi	r5,2
10004db4:	0009883a 	mov	r4,zero
10004db8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004dbc:	000b883a 	mov	r5,zero
10004dc0:	0009883a 	mov	r4,zero
10004dc4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004dc8:	000b883a 	mov	r5,zero
10004dcc:	0009883a 	mov	r4,zero
10004dd0:	00012400 	call	10001240 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
10004dd4:	000b883a 	mov	r5,zero
10004dd8:	0009883a 	mov	r4,zero
10004ddc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//
10004de0:	000b883a 	mov	r5,zero
10004de4:	0009883a 	mov	r4,zero
10004de8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0090);//
10004dec:	01402404 	movi	r5,144
10004df0:	0009883a 	mov	r4,zero
10004df4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004df8:	01401044 	movi	r5,65
10004dfc:	0009883a 	mov	r4,zero
10004e00:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004e04:	014004c4 	movi	r5,19
10004e08:	0009883a 	mov	r4,zero
10004e0c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004e10:	000b883a 	mov	r5,zero
10004e14:	0009883a 	mov	r4,zero
10004e18:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004e1c:	01414004 	movi	r5,1280
10004e20:	01006c04 	movi	r4,432
10004e24:	0004bec0 	call	10004bec <UsbWrite>
}
10004e28:	0001883a 	nop
10004e2c:	e037883a 	mov	sp,fp
10004e30:	dfc00117 	ldw	ra,4(sp)
10004e34:	df000017 	ldw	fp,0(sp)
10004e38:	dec00204 	addi	sp,sp,8
10004e3c:	f800283a 	ret

10004e40 <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
10004e40:	defffe04 	addi	sp,sp,-8
10004e44:	dfc00115 	stw	ra,4(sp)
10004e48:	df000015 	stw	fp,0(sp)
10004e4c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004e50:	01414004 	movi	r5,1280
10004e54:	01000084 	movi	r4,2
10004e58:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10004e5c:	01414304 	movi	r5,1292
10004e60:	0009883a 	mov	r4,zero
10004e64:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004e68:	01400204 	movi	r5,8
10004e6c:	0009883a 	mov	r4,zero
10004e70:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10004e74:	0140b404 	movi	r5,720
10004e78:	0009883a 	mov	r4,zero
10004e7c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004e80:	01400044 	movi	r5,1
10004e84:	0009883a 	mov	r4,zero
10004e88:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004e8c:	014004c4 	movi	r5,19
10004e90:	0009883a 	mov	r4,zero
10004e94:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004e98:	01414504 	movi	r5,1300
10004e9c:	0009883a 	mov	r4,zero
10004ea0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10004ea4:	0141a004 	movi	r5,1664
10004ea8:	0009883a 	mov	r4,zero
10004eac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
10004eb0:	01404004 	movi	r5,256
10004eb4:	0009883a 	mov	r4,zero
10004eb8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004ebc:	000b883a 	mov	r5,zero
10004ec0:	0009883a 	mov	r4,zero
10004ec4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);
10004ec8:	01400204 	movi	r5,8
10004ecc:	0009883a 	mov	r4,zero
10004ed0:	00012400 	call	10001240 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
10004ed4:	01414b04 	movi	r5,1324
10004ed8:	0009883a 	mov	r4,zero
10004edc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//
10004ee0:	01400204 	movi	r5,8
10004ee4:	0009883a 	mov	r4,zero
10004ee8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//
10004eec:	0140a404 	movi	r5,656
10004ef0:	0009883a 	mov	r4,zero
10004ef4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004ef8:	01401044 	movi	r5,65
10004efc:	0009883a 	mov	r4,zero
10004f00:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004f04:	014004c4 	movi	r5,19
10004f08:	0009883a 	mov	r4,zero
10004f0c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);
10004f10:	01414804 	movi	r5,1312
10004f14:	0009883a 	mov	r4,zero
10004f18:	00012400 	call	10001240 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
10004f1c:	000b883a 	mov	r5,zero
10004f20:	0009883a 	mov	r4,zero
10004f24:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10004f28:	000b883a 	mov	r5,zero
10004f2c:	0009883a 	mov	r4,zero
10004f30:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
10004f34:	01408404 	movi	r5,528
10004f38:	0009883a 	mov	r4,zero
10004f3c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);
10004f40:	01401044 	movi	r5,65
10004f44:	0009883a 	mov	r4,zero
10004f48:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004f4c:	014004c4 	movi	r5,19
10004f50:	0009883a 	mov	r4,zero
10004f54:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10004f58:	000b883a 	mov	r5,zero
10004f5c:	0009883a 	mov	r4,zero
10004f60:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10004f64:	01414004 	movi	r5,1280
10004f68:	01006c04 	movi	r4,432
10004f6c:	0004bec0 	call	10004bec <UsbWrite>
}
10004f70:	0001883a 	nop
10004f74:	e037883a 	mov	sp,fp
10004f78:	dfc00117 	ldw	ra,4(sp)
10004f7c:	df000017 	ldw	fp,0(sp)
10004f80:	dec00204 	addi	sp,sp,8
10004f84:	f800283a 	ret

10004f88 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
10004f88:	defffe04 	addi	sp,sp,-8
10004f8c:	dfc00115 	stw	ra,4(sp)
10004f90:	df000015 	stw	fp,0(sp)
10004f94:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10004f98:	01414004 	movi	r5,1280
10004f9c:	01000084 	movi	r4,2
10004fa0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10004fa4:	01414304 	movi	r5,1292
10004fa8:	0009883a 	mov	r4,zero
10004fac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10004fb0:	01400204 	movi	r5,8
10004fb4:	0009883a 	mov	r4,zero
10004fb8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10004fbc:	0140b404 	movi	r5,720
10004fc0:	0009883a 	mov	r4,zero
10004fc4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10004fc8:	01400044 	movi	r5,1
10004fcc:	0009883a 	mov	r4,zero
10004fd0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
10004fd4:	014004c4 	movi	r5,19
10004fd8:	0009883a 	mov	r4,zero
10004fdc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10004fe0:	01414504 	movi	r5,1300
10004fe4:	0009883a 	mov	r4,zero
10004fe8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10004fec:	0141a004 	movi	r5,1664
10004ff0:	0009883a 	mov	r4,zero
10004ff4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
10004ff8:	01404004 	movi	r5,256
10004ffc:	0009883a 	mov	r4,zero
10005000:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10005004:	000b883a 	mov	r5,zero
10005008:	0009883a 	mov	r4,zero
1000500c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
10005010:	01400484 	movi	r5,18
10005014:	0009883a 	mov	r4,zero
10005018:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
1000501c:	01415104 	movi	r5,1348
10005020:	0009883a 	mov	r4,zero
10005024:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005028:	01400204 	movi	r5,8
1000502c:	0009883a 	mov	r4,zero
10005030:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005034:	0140a404 	movi	r5,656
10005038:	0009883a 	mov	r4,zero
1000503c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005040:	01401044 	movi	r5,65
10005044:	0009883a 	mov	r4,zero
10005048:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000504c:	014004c4 	movi	r5,19
10005050:	0009883a 	mov	r4,zero
10005054:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005058:	01414804 	movi	r5,1312
1000505c:	0009883a 	mov	r4,zero
10005060:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10005064:	01415304 	movi	r5,1356
10005068:	0009883a 	mov	r4,zero
1000506c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10005070:	01400204 	movi	r5,8
10005074:	0009883a 	mov	r4,zero
10005078:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
1000507c:	0140a404 	movi	r5,656
10005080:	0009883a 	mov	r4,zero
10005084:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
10005088:	01400044 	movi	r5,1
1000508c:	0009883a 	mov	r4,zero
10005090:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005094:	014004c4 	movi	r5,19
10005098:	0009883a 	mov	r4,zero
1000509c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100050a0:	01414b04 	movi	r5,1324
100050a4:	0009883a 	mov	r4,zero
100050a8:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
100050ac:	01415504 	movi	r5,1364
100050b0:	0009883a 	mov	r4,zero
100050b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
100050b8:	01400084 	movi	r5,2
100050bc:	0009883a 	mov	r4,zero
100050c0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100050c4:	0140a404 	movi	r5,656
100050c8:	0009883a 	mov	r4,zero
100050cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100050d0:	01401044 	movi	r5,65
100050d4:	0009883a 	mov	r4,zero
100050d8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100050dc:	014004c4 	movi	r5,19
100050e0:	0009883a 	mov	r4,zero
100050e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
100050e8:	01414e04 	movi	r5,1336
100050ec:	0009883a 	mov	r4,zero
100050f0:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
100050f4:	000b883a 	mov	r5,zero
100050f8:	0009883a 	mov	r4,zero
100050fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10005100:	000b883a 	mov	r5,zero
10005104:	0009883a 	mov	r4,zero
10005108:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
1000510c:	01408404 	movi	r5,528
10005110:	0009883a 	mov	r4,zero
10005114:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
10005118:	01401044 	movi	r5,65
1000511c:	0009883a 	mov	r4,zero
10005120:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005124:	014004c4 	movi	r5,19
10005128:	0009883a 	mov	r4,zero
1000512c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10005130:	000b883a 	mov	r5,zero
10005134:	0009883a 	mov	r4,zero
10005138:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000513c:	01414004 	movi	r5,1280
10005140:	01006c04 	movi	r4,432
10005144:	0004bec0 	call	10004bec <UsbWrite>
}
10005148:	0001883a 	nop
1000514c:	e037883a 	mov	sp,fp
10005150:	dfc00117 	ldw	ra,4(sp)
10005154:	df000017 	ldw	fp,0(sp)
10005158:	dec00204 	addi	sp,sp,8
1000515c:	f800283a 	ret

10005160 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
10005160:	defffe04 	addi	sp,sp,-8
10005164:	dfc00115 	stw	ra,4(sp)
10005168:	df000015 	stw	fp,0(sp)
1000516c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005170:	01414004 	movi	r5,1280
10005174:	01000084 	movi	r4,2
10005178:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000517c:	01414304 	movi	r5,1292
10005180:	0009883a 	mov	r4,zero
10005184:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005188:	01400204 	movi	r5,8
1000518c:	0009883a 	mov	r4,zero
10005190:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10005194:	0140b404 	movi	r5,720
10005198:	0009883a 	mov	r4,zero
1000519c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
100051a0:	01400044 	movi	r5,1
100051a4:	0009883a 	mov	r4,zero
100051a8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100051ac:	014004c4 	movi	r5,19
100051b0:	0009883a 	mov	r4,zero
100051b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100051b8:	01414504 	movi	r5,1300
100051bc:	0009883a 	mov	r4,zero
100051c0:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100051c4:	0141a004 	movi	r5,1664
100051c8:	0009883a 	mov	r4,zero
100051cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
100051d0:	01408004 	movi	r5,512
100051d4:	0009883a 	mov	r4,zero
100051d8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100051dc:	000b883a 	mov	r5,zero
100051e0:	0009883a 	mov	r4,zero
100051e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
100051e8:	01400244 	movi	r5,9
100051ec:	0009883a 	mov	r4,zero
100051f0:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
100051f4:	01415104 	movi	r5,1348
100051f8:	0009883a 	mov	r4,zero
100051fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005200:	01400204 	movi	r5,8
10005204:	0009883a 	mov	r4,zero
10005208:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000520c:	0140a404 	movi	r5,656
10005210:	0009883a 	mov	r4,zero
10005214:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005218:	01401044 	movi	r5,65
1000521c:	0009883a 	mov	r4,zero
10005220:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005224:	014004c4 	movi	r5,19
10005228:	0009883a 	mov	r4,zero
1000522c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005230:	01414804 	movi	r5,1312
10005234:	0009883a 	mov	r4,zero
10005238:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
1000523c:	01415304 	movi	r5,1356
10005240:	0009883a 	mov	r4,zero
10005244:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
10005248:	01400044 	movi	r5,1
1000524c:	0009883a 	mov	r4,zero
10005250:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10005254:	0140a404 	movi	r5,656
10005258:	0009883a 	mov	r4,zero
1000525c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005260:	01400044 	movi	r5,1
10005264:	0009883a 	mov	r4,zero
10005268:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000526c:	014004c4 	movi	r5,19
10005270:	0009883a 	mov	r4,zero
10005274:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005278:	01414b04 	movi	r5,1324
1000527c:	0009883a 	mov	r4,zero
10005280:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
10005284:	000b883a 	mov	r5,zero
10005288:	0009883a 	mov	r4,zero
1000528c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005290:	000b883a 	mov	r5,zero
10005294:	0009883a 	mov	r4,zero
10005298:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
1000529c:	01408404 	movi	r5,528
100052a0:	0009883a 	mov	r4,zero
100052a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100052a8:	01401044 	movi	r5,65
100052ac:	0009883a 	mov	r4,zero
100052b0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100052b4:	014004c4 	movi	r5,19
100052b8:	0009883a 	mov	r4,zero
100052bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100052c0:	000b883a 	mov	r5,zero
100052c4:	0009883a 	mov	r4,zero
100052c8:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100052cc:	01414004 	movi	r5,1280
100052d0:	01006c04 	movi	r4,432
100052d4:	0004bec0 	call	10004bec <UsbWrite>
}
100052d8:	0001883a 	nop
100052dc:	e037883a 	mov	sp,fp
100052e0:	dfc00117 	ldw	ra,4(sp)
100052e4:	df000017 	ldw	fp,0(sp)
100052e8:	dec00204 	addi	sp,sp,8
100052ec:	f800283a 	ret

100052f0 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
100052f0:	defffe04 	addi	sp,sp,-8
100052f4:	dfc00115 	stw	ra,4(sp)
100052f8:	df000015 	stw	fp,0(sp)
100052fc:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005300:	01414004 	movi	r5,1280
10005304:	01000084 	movi	r4,2
10005308:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000530c:	01414304 	movi	r5,1292
10005310:	0009883a 	mov	r4,zero
10005314:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005318:	01400204 	movi	r5,8
1000531c:	0009883a 	mov	r4,zero
10005320:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10005324:	0140b404 	movi	r5,720
10005328:	0009883a 	mov	r4,zero
1000532c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005330:	01400044 	movi	r5,1
10005334:	0009883a 	mov	r4,zero
10005338:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000533c:	014004c4 	movi	r5,19
10005340:	0009883a 	mov	r4,zero
10005344:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
10005348:	01414504 	movi	r5,1300
1000534c:	0009883a 	mov	r4,zero
10005350:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10005354:	0141a004 	movi	r5,1664
10005358:	0009883a 	mov	r4,zero
1000535c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10005360:	01408004 	movi	r5,512
10005364:	0009883a 	mov	r4,zero
10005368:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000536c:	000b883a 	mov	r5,zero
10005370:	0009883a 	mov	r4,zero
10005374:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
10005378:	01403fc4 	movi	r5,255
1000537c:	0009883a 	mov	r4,zero
10005380:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
10005384:	01415704 	movi	r5,1372
10005388:	0009883a 	mov	r4,zero
1000538c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005390:	01400204 	movi	r5,8
10005394:	0009883a 	mov	r4,zero
10005398:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000539c:	0140a404 	movi	r5,656
100053a0:	0009883a 	mov	r4,zero
100053a4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100053a8:	01401044 	movi	r5,65
100053ac:	0009883a 	mov	r4,zero
100053b0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100053b4:	014004c4 	movi	r5,19
100053b8:	0009883a 	mov	r4,zero
100053bc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
100053c0:	01414804 	movi	r5,1312
100053c4:	0009883a 	mov	r4,zero
100053c8:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
100053cc:	01415904 	movi	r5,1380
100053d0:	0009883a 	mov	r4,zero
100053d4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100053d8:	01400204 	movi	r5,8
100053dc:	0009883a 	mov	r4,zero
100053e0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100053e4:	0140a404 	movi	r5,656
100053e8:	0009883a 	mov	r4,zero
100053ec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100053f0:	01400044 	movi	r5,1
100053f4:	0009883a 	mov	r4,zero
100053f8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100053fc:	014004c4 	movi	r5,19
10005400:	0009883a 	mov	r4,zero
10005404:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10005408:	01414b04 	movi	r5,1324
1000540c:	0009883a 	mov	r4,zero
10005410:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
10005414:	01415b04 	movi	r5,1388
10005418:	0009883a 	mov	r4,zero
1000541c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10005420:	01400204 	movi	r5,8
10005424:	0009883a 	mov	r4,zero
10005428:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
1000542c:	0140a404 	movi	r5,656
10005430:	0009883a 	mov	r4,zero
10005434:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005438:	01401044 	movi	r5,65
1000543c:	0009883a 	mov	r4,zero
10005440:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005444:	014004c4 	movi	r5,19
10005448:	0009883a 	mov	r4,zero
1000544c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10005450:	01414e04 	movi	r5,1336
10005454:	0009883a 	mov	r4,zero
10005458:	00012400 	call	10001240 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
1000545c:	01415d04 	movi	r5,1396
10005460:	0009883a 	mov	r4,zero
10005464:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10005468:	01400204 	movi	r5,8
1000546c:	0009883a 	mov	r4,zero
10005470:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10005474:	0140a404 	movi	r5,656
10005478:	0009883a 	mov	r4,zero
1000547c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005480:	01400044 	movi	r5,1
10005484:	0009883a 	mov	r4,zero
10005488:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
1000548c:	014004c4 	movi	r5,19
10005490:	0009883a 	mov	r4,zero
10005494:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10005498:	01415104 	movi	r5,1348
1000549c:	0009883a 	mov	r4,zero
100054a0:	00012400 	call	10001240 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
100054a4:	01415f04 	movi	r5,1404
100054a8:	0009883a 	mov	r4,zero
100054ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
100054b0:	01400084 	movi	r5,2
100054b4:	0009883a 	mov	r4,zero
100054b8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100054bc:	0140a404 	movi	r5,656
100054c0:	0009883a 	mov	r4,zero
100054c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
100054c8:	01401044 	movi	r5,65
100054cc:	0009883a 	mov	r4,zero
100054d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100054d4:	014004c4 	movi	r5,19
100054d8:	0009883a 	mov	r4,zero
100054dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
100054e0:	01415404 	movi	r5,1360
100054e4:	0009883a 	mov	r4,zero
100054e8:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
100054ec:	000b883a 	mov	r5,zero
100054f0:	0009883a 	mov	r4,zero
100054f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
100054f8:	000b883a 	mov	r5,zero
100054fc:	0009883a 	mov	r4,zero
10005500:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
10005504:	01408404 	movi	r5,528
10005508:	0009883a 	mov	r4,zero
1000550c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
10005510:	01401044 	movi	r5,65
10005514:	0009883a 	mov	r4,zero
10005518:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000551c:	014004c4 	movi	r5,19
10005520:	0009883a 	mov	r4,zero
10005524:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10005528:	000b883a 	mov	r5,zero
1000552c:	0009883a 	mov	r4,zero
10005530:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005534:	01414004 	movi	r5,1280
10005538:	01006c04 	movi	r4,432
1000553c:	0004bec0 	call	10004bec <UsbWrite>
}
10005540:	0001883a 	nop
10005544:	e037883a 	mov	sp,fp
10005548:	dfc00117 	ldw	ra,4(sp)
1000554c:	df000017 	ldw	fp,0(sp)
10005550:	dec00204 	addi	sp,sp,8
10005554:	f800283a 	ret

10005558 <UsbSetConfig>:

void UsbSetConfig()
{
10005558:	defffe04 	addi	sp,sp,-8
1000555c:	dfc00115 	stw	ra,4(sp)
10005560:	df000015 	stw	fp,0(sp)
10005564:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005568:	01414004 	movi	r5,1280
1000556c:	01000084 	movi	r4,2
10005570:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005574:	01414304 	movi	r5,1292
10005578:	0009883a 	mov	r4,zero
1000557c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005580:	01400204 	movi	r5,8
10005584:	0009883a 	mov	r4,zero
10005588:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
1000558c:	0140b404 	movi	r5,720
10005590:	0009883a 	mov	r4,zero
10005594:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005598:	01400044 	movi	r5,1
1000559c:	0009883a 	mov	r4,zero
100055a0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100055a4:	014004c4 	movi	r5,19
100055a8:	0009883a 	mov	r4,zero
100055ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100055b0:	01414504 	movi	r5,1300
100055b4:	0009883a 	mov	r4,zero
100055b8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
100055bc:	01424004 	movi	r5,2304
100055c0:	0009883a 	mov	r4,zero
100055c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
100055c8:	01400044 	movi	r5,1
100055cc:	0009883a 	mov	r4,zero
100055d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100055d4:	000b883a 	mov	r5,zero
100055d8:	0009883a 	mov	r4,zero
100055dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100055e0:	000b883a 	mov	r5,zero
100055e4:	0009883a 	mov	r4,zero
100055e8:	00012400 	call	10001240 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
100055ec:	000b883a 	mov	r5,zero
100055f0:	0009883a 	mov	r4,zero
100055f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
100055f8:	000b883a 	mov	r5,zero
100055fc:	0009883a 	mov	r4,zero
10005600:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10005604:	0140a404 	movi	r5,656
10005608:	0009883a 	mov	r4,zero
1000560c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10005610:	01401044 	movi	r5,65
10005614:	0009883a 	mov	r4,zero
10005618:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000561c:	014004c4 	movi	r5,19
10005620:	0009883a 	mov	r4,zero
10005624:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005628:	000b883a 	mov	r5,zero
1000562c:	0009883a 	mov	r4,zero
10005630:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005634:	01414004 	movi	r5,1280
10005638:	01006c04 	movi	r4,432
1000563c:	0004bec0 	call	10004bec <UsbWrite>

}
10005640:	0001883a 	nop
10005644:	e037883a 	mov	sp,fp
10005648:	dfc00117 	ldw	ra,4(sp)
1000564c:	df000017 	ldw	fp,0(sp)
10005650:	dec00204 	addi	sp,sp,8
10005654:	f800283a 	ret

10005658 <UsbClassRequest>:

void UsbClassRequest()
{
10005658:	defffe04 	addi	sp,sp,-8
1000565c:	dfc00115 	stw	ra,4(sp)
10005660:	df000015 	stw	fp,0(sp)
10005664:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005668:	01414004 	movi	r5,1280
1000566c:	01000084 	movi	r4,2
10005670:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005674:	01414304 	movi	r5,1292
10005678:	0009883a 	mov	r4,zero
1000567c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005680:	01400204 	movi	r5,8
10005684:	0009883a 	mov	r4,zero
10005688:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
1000568c:	0140b404 	movi	r5,720
10005690:	0009883a 	mov	r4,zero
10005694:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005698:	01400044 	movi	r5,1
1000569c:	0009883a 	mov	r4,zero
100056a0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100056a4:	014004c4 	movi	r5,19
100056a8:	0009883a 	mov	r4,zero
100056ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100056b0:	01414504 	movi	r5,1300
100056b4:	0009883a 	mov	r4,zero
100056b8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
100056bc:	01428844 	movi	r5,2593
100056c0:	0009883a 	mov	r4,zero
100056c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
100056c8:	000b883a 	mov	r5,zero
100056cc:	0009883a 	mov	r4,zero
100056d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100056d4:	000b883a 	mov	r5,zero
100056d8:	0009883a 	mov	r4,zero
100056dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
100056e0:	000b883a 	mov	r5,zero
100056e4:	0009883a 	mov	r4,zero
100056e8:	00012400 	call	10001240 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
100056ec:	000b883a 	mov	r5,zero
100056f0:	0009883a 	mov	r4,zero
100056f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
100056f8:	000b883a 	mov	r5,zero
100056fc:	0009883a 	mov	r4,zero
10005700:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10005704:	0140a404 	movi	r5,656
10005708:	0009883a 	mov	r4,zero
1000570c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10005710:	01401044 	movi	r5,65
10005714:	0009883a 	mov	r4,zero
10005718:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000571c:	014004c4 	movi	r5,19
10005720:	0009883a 	mov	r4,zero
10005724:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);
10005728:	000b883a 	mov	r5,zero
1000572c:	0009883a 	mov	r4,zero
10005730:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005734:	01414004 	movi	r5,1280
10005738:	01006c04 	movi	r4,432
1000573c:	0004bec0 	call	10004bec <UsbWrite>
}
10005740:	0001883a 	nop
10005744:	e037883a 	mov	sp,fp
10005748:	dfc00117 	ldw	ra,4(sp)
1000574c:	df000017 	ldw	fp,0(sp)
10005750:	dec00204 	addi	sp,sp,8
10005754:	f800283a 	ret

10005758 <UsbGetHidDesc>:


void UsbGetHidDesc()
{
10005758:	defffe04 	addi	sp,sp,-8
1000575c:	dfc00115 	stw	ra,4(sp)
10005760:	df000015 	stw	fp,0(sp)
10005764:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10005768:	01414004 	movi	r5,1280
1000576c:	01000084 	movi	r4,2
10005770:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
10005774:	01414304 	movi	r5,1292
10005778:	0009883a 	mov	r4,zero
1000577c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10005780:	01400204 	movi	r5,8
10005784:	0009883a 	mov	r4,zero
10005788:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
1000578c:	0140b404 	movi	r5,720
10005790:	0009883a 	mov	r4,zero
10005794:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
10005798:	01400044 	movi	r5,1
1000579c:	0009883a 	mov	r4,zero
100057a0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100057a4:	014004c4 	movi	r5,19
100057a8:	0009883a 	mov	r4,zero
100057ac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100057b0:	01414504 	movi	r5,1300
100057b4:	0009883a 	mov	r4,zero
100057b8:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
100057bc:	0141a044 	movi	r5,1665
100057c0:	0009883a 	mov	r4,zero
100057c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
100057c8:	01484004 	movi	r5,8448
100057cc:	0009883a 	mov	r4,zero
100057d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100057d4:	000b883a 	mov	r5,zero
100057d8:	0009883a 	mov	r4,zero
100057dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
100057e0:	01401ec4 	movi	r5,123
100057e4:	0009883a 	mov	r4,zero
100057e8:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
100057ec:	01415104 	movi	r5,1348
100057f0:	0009883a 	mov	r4,zero
100057f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
100057f8:	01400204 	movi	r5,8
100057fc:	0009883a 	mov	r4,zero
10005800:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005804:	0140a404 	movi	r5,656
10005808:	0009883a 	mov	r4,zero
1000580c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005810:	01401044 	movi	r5,65
10005814:	0009883a 	mov	r4,zero
10005818:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000581c:	014004c4 	movi	r5,19
10005820:	0009883a 	mov	r4,zero
10005824:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005828:	01414804 	movi	r5,1312
1000582c:	0009883a 	mov	r4,zero
10005830:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
10005834:	000b883a 	mov	r5,zero
10005838:	0009883a 	mov	r4,zero
1000583c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005840:	000b883a 	mov	r5,zero
10005844:	0009883a 	mov	r4,zero
10005848:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
1000584c:	01408404 	movi	r5,528
10005850:	0009883a 	mov	r4,zero
10005854:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10005858:	01401044 	movi	r5,65
1000585c:	0009883a 	mov	r4,zero
10005860:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005864:	014004c4 	movi	r5,19
10005868:	0009883a 	mov	r4,zero
1000586c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10005870:	000b883a 	mov	r5,zero
10005874:	0009883a 	mov	r4,zero
10005878:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000587c:	01414004 	movi	r5,1280
10005880:	01006c04 	movi	r4,432
10005884:	0004bec0 	call	10004bec <UsbWrite>

}
10005888:	0001883a 	nop
1000588c:	e037883a 	mov	sp,fp
10005890:	dfc00117 	ldw	ra,4(sp)
10005894:	df000017 	ldw	fp,0(sp)
10005898:	dec00204 	addi	sp,sp,8
1000589c:	f800283a 	ret

100058a0 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
100058a0:	defffe04 	addi	sp,sp,-8
100058a4:	dfc00115 	stw	ra,4(sp)
100058a8:	df000015 	stw	fp,0(sp)
100058ac:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100058b0:	01414004 	movi	r5,1280
100058b4:	01000084 	movi	r4,2
100058b8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x050C);
100058bc:	01414304 	movi	r5,1292
100058c0:	0009883a 	mov	r4,zero
100058c4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100058c8:	01400204 	movi	r5,8
100058cc:	0009883a 	mov	r4,zero
100058d0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100058d4:	0140b404 	movi	r5,720
100058d8:	0009883a 	mov	r4,zero
100058dc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);
100058e0:	01400044 	movi	r5,1
100058e4:	0009883a 	mov	r4,zero
100058e8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);
100058ec:	014004c4 	movi	r5,19
100058f0:	0009883a 	mov	r4,zero
100058f4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0514);
100058f8:	01414504 	movi	r5,1300
100058fc:	0009883a 	mov	r4,zero
10005900:	00012400 	call	10001240 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
10005904:	0141a044 	movi	r5,1665
10005908:	0009883a 	mov	r4,zero
1000590c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
10005910:	01488004 	movi	r5,8704
10005914:	0009883a 	mov	r4,zero
10005918:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000591c:	000b883a 	mov	r5,zero
10005920:	0009883a 	mov	r4,zero
10005924:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10005928:	01401ec4 	movi	r5,123
1000592c:	0009883a 	mov	r4,zero
10005930:	00012400 	call	10001240 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
10005934:	01416004 	movi	r5,1408
10005938:	0009883a 	mov	r4,zero
1000593c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005940:	01400204 	movi	r5,8
10005944:	0009883a 	mov	r4,zero
10005948:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000594c:	0140a404 	movi	r5,656
10005950:	0009883a 	mov	r4,zero
10005954:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005958:	01401044 	movi	r5,65
1000595c:	0009883a 	mov	r4,zero
10005960:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005964:	014004c4 	movi	r5,19
10005968:	0009883a 	mov	r4,zero
1000596c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10005970:	01414804 	movi	r5,1312
10005974:	0009883a 	mov	r4,zero
10005978:	00012400 	call	10001240 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
1000597c:	01416204 	movi	r5,1416
10005980:	0009883a 	mov	r4,zero
10005984:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10005988:	01400204 	movi	r5,8
1000598c:	0009883a 	mov	r4,zero
10005990:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10005994:	0140a404 	movi	r5,656
10005998:	0009883a 	mov	r4,zero
1000599c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
100059a0:	01400044 	movi	r5,1
100059a4:	0009883a 	mov	r4,zero
100059a8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100059ac:	014004c4 	movi	r5,19
100059b0:	0009883a 	mov	r4,zero
100059b4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100059b8:	01414b04 	movi	r5,1324
100059bc:	0009883a 	mov	r4,zero
100059c0:	00012400 	call	10001240 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
100059c4:	01416404 	movi	r5,1424
100059c8:	0009883a 	mov	r4,zero
100059cc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
100059d0:	01400204 	movi	r5,8
100059d4:	0009883a 	mov	r4,zero
100059d8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100059dc:	0140a404 	movi	r5,656
100059e0:	0009883a 	mov	r4,zero
100059e4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100059e8:	01401044 	movi	r5,65
100059ec:	0009883a 	mov	r4,zero
100059f0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100059f4:	014004c4 	movi	r5,19
100059f8:	0009883a 	mov	r4,zero
100059fc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10005a00:	01414e04 	movi	r5,1336
10005a04:	0009883a 	mov	r4,zero
10005a08:	00012400 	call	10001240 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
10005a0c:	01416604 	movi	r5,1432
10005a10:	0009883a 	mov	r4,zero
10005a14:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10005a18:	01400204 	movi	r5,8
10005a1c:	0009883a 	mov	r4,zero
10005a20:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10005a24:	0140a404 	movi	r5,656
10005a28:	0009883a 	mov	r4,zero
10005a2c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005a30:	01400044 	movi	r5,1
10005a34:	0009883a 	mov	r4,zero
10005a38:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10005a3c:	014004c4 	movi	r5,19
10005a40:	0009883a 	mov	r4,zero
10005a44:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10005a48:	01415104 	movi	r5,1348
10005a4c:	0009883a 	mov	r4,zero
10005a50:	00012400 	call	10001240 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
10005a54:	01416804 	movi	r5,1440
10005a58:	0009883a 	mov	r4,zero
10005a5c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10005a60:	01400204 	movi	r5,8
10005a64:	0009883a 	mov	r4,zero
10005a68:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10005a6c:	0140a404 	movi	r5,656
10005a70:	0009883a 	mov	r4,zero
10005a74:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
10005a78:	01401044 	movi	r5,65
10005a7c:	0009883a 	mov	r4,zero
10005a80:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005a84:	014004c4 	movi	r5,19
10005a88:	0009883a 	mov	r4,zero
10005a8c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10005a90:	01415404 	movi	r5,1360
10005a94:	0009883a 	mov	r4,zero
10005a98:	00012400 	call	10001240 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
10005a9c:	01416a04 	movi	r5,1448
10005aa0:	0009883a 	mov	r4,zero
10005aa4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10005aa8:	01400204 	movi	r5,8
10005aac:	0009883a 	mov	r4,zero
10005ab0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10005ab4:	0140a404 	movi	r5,656
10005ab8:	0009883a 	mov	r4,zero
10005abc:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10005ac0:	01400044 	movi	r5,1
10005ac4:	0009883a 	mov	r4,zero
10005ac8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10005acc:	014004c4 	movi	r5,19
10005ad0:	0009883a 	mov	r4,zero
10005ad4:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
10005ad8:	01415704 	movi	r5,1372
10005adc:	0009883a 	mov	r4,zero
10005ae0:	00012400 	call	10001240 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
10005ae4:	01416c04 	movi	r5,1456
10005ae8:	0009883a 	mov	r4,zero
10005aec:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10005af0:	01400204 	movi	r5,8
10005af4:	0009883a 	mov	r4,zero
10005af8:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
10005afc:	0140a404 	movi	r5,656
10005b00:	0009883a 	mov	r4,zero
10005b04:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
10005b08:	01401044 	movi	r5,65
10005b0c:	0009883a 	mov	r4,zero
10005b10:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10005b14:	014004c4 	movi	r5,19
10005b18:	0009883a 	mov	r4,zero
10005b1c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
10005b20:	01415a04 	movi	r5,1384
10005b24:	0009883a 	mov	r4,zero
10005b28:	00012400 	call	10001240 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
10005b2c:	01416e04 	movi	r5,1464
10005b30:	0009883a 	mov	r4,zero
10005b34:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
10005b38:	014000c4 	movi	r5,3
10005b3c:	0009883a 	mov	r4,zero
10005b40:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10005b44:	0140a404 	movi	r5,656
10005b48:	0009883a 	mov	r4,zero
10005b4c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10005b50:	01400044 	movi	r5,1
10005b54:	0009883a 	mov	r4,zero
10005b58:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
10005b5c:	014004c4 	movi	r5,19
10005b60:	0009883a 	mov	r4,zero
10005b64:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
10005b68:	01415d04 	movi	r5,1396
10005b6c:	0009883a 	mov	r4,zero
10005b70:	00012400 	call	10001240 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
10005b74:	000b883a 	mov	r5,zero
10005b78:	0009883a 	mov	r4,zero
10005b7c:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10005b80:	000b883a 	mov	r5,zero
10005b84:	0009883a 	mov	r4,zero
10005b88:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
10005b8c:	01408404 	movi	r5,528
10005b90:	0009883a 	mov	r4,zero
10005b94:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10005b98:	01401044 	movi	r5,65
10005b9c:	0009883a 	mov	r4,zero
10005ba0:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10005ba4:	014004c4 	movi	r5,19
10005ba8:	0009883a 	mov	r4,zero
10005bac:	00012400 	call	10001240 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10005bb0:	000b883a 	mov	r5,zero
10005bb4:	0009883a 	mov	r4,zero
10005bb8:	00012400 	call	10001240 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10005bbc:	01414004 	movi	r5,1280
10005bc0:	01006c04 	movi	r4,432
10005bc4:	0004bec0 	call	10004bec <UsbWrite>

}
10005bc8:	0001883a 	nop
10005bcc:	e037883a 	mov	sp,fp
10005bd0:	dfc00117 	ldw	ra,4(sp)
10005bd4:	df000017 	ldw	fp,0(sp)
10005bd8:	dec00204 	addi	sp,sp,8
10005bdc:	f800283a 	ret

10005be0 <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
10005be0:	defffd04 	addi	sp,sp,-12
10005be4:	dfc00215 	stw	ra,8(sp)
10005be8:	df000115 	stw	fp,4(sp)
10005bec:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
10005bf0:	01005104 	movi	r4,324
10005bf4:	0004c480 	call	10004c48 <UsbRead>
10005bf8:	e0bfff8d 	sth	r2,-2(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005bfc:	000b883a 	mov	r5,zero
10005c00:	01005104 	movi	r4,324
10005c04:	0004bec0 	call	10004bec <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10005c08:	00000d06 	br	10005c40 <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
10005c0c:	e0bfff8b 	ldhu	r2,-2(fp)
10005c10:	10000526 	beq	r2,zero,10005c28 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
10005c14:	e0bfff8b 	ldhu	r2,-2(fp)
10005c18:	100b883a 	mov	r5,r2
10005c1c:	010400b4 	movhi	r4,4098
10005c20:	2114cd04 	addi	r4,r4,21300
10005c24:	0015ba80 	call	10015ba8 <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
10005c28:	01005104 	movi	r4,324
10005c2c:	0004c480 	call	10004c48 <UsbRead>
10005c30:	e0bfff8d 	sth	r2,-2(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005c34:	000b883a 	mov	r5,zero
10005c38:	01005104 	movi	r4,324
10005c3c:	0004bec0 	call	10004bec <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10005c40:	e0bfff8b 	ldhu	r2,-2(fp)
10005c44:	10840018 	cmpnei	r2,r2,4096
10005c48:	103ff01e 	bne	r2,zero,10005c0c <UsbWaitTDListDone+0x2c>
	}

	return usb_ctl_val;
10005c4c:	e0bfff8b 	ldhu	r2,-2(fp)
}
10005c50:	e037883a 	mov	sp,fp
10005c54:	dfc00117 	ldw	ra,4(sp)
10005c58:	df000017 	ldw	fp,0(sp)
10005c5c:	dec00204 	addi	sp,sp,8
10005c60:	f800283a 	ret

10005c64 <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
10005c64:	defffd04 	addi	sp,sp,-12
10005c68:	dfc00215 	stw	ra,8(sp)
10005c6c:	df000115 	stw	fp,4(sp)
10005c70:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
10005c74:	010000c4 	movi	r4,3
10005c78:	00012b40 	call	100012b4 <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
10005c7c:	01005104 	movi	r4,324
10005c80:	0004c480 	call	10004c48 <UsbRead>
10005c84:	10bfffcc 	andi	r2,r2,65535
10005c88:	10840018 	cmpnei	r2,r2,4096
10005c8c:	1000091e 	bne	r2,zero,10005cb4 <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10005c90:	000b883a 	mov	r5,zero
10005c94:	01005104 	movi	r4,324
10005c98:	0004bec0 	call	10004bec <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10005c9c:	0001883a 	nop
10005ca0:	010000c4 	movi	r4,3
10005ca4:	00012b40 	call	100012b4 <IO_read>
10005ca8:	10bfffcc 	andi	r2,r2,65535
10005cac:	1080040c 	andi	r2,r2,16
10005cb0:	103ffb26 	beq	r2,zero,10005ca0 <UsbGetRetryCnt+0x3c>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
10005cb4:	01414204 	movi	r5,1288
10005cb8:	01000084 	movi	r4,2
10005cbc:	00012400 	call	10001240 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10005cc0:	0009883a 	mov	r4,zero
10005cc4:	00012b40 	call	100012b4 <IO_read>
10005cc8:	e0bfff8d 	sth	r2,-2(fp)

	return usb_ctl_val;
10005ccc:	e0bfff8b 	ldhu	r2,-2(fp)
}
10005cd0:	e037883a 	mov	sp,fp
10005cd4:	dfc00117 	ldw	ra,4(sp)
10005cd8:	df000017 	ldw	fp,0(sp)
10005cdc:	dec00204 	addi	sp,sp,8
10005ce0:	f800283a 	ret

10005ce4 <UsbPrintMem>:


void UsbPrintMem()
{
10005ce4:	defffc04 	addi	sp,sp,-16
10005ce8:	dfc00315 	stw	ra,12(sp)
10005cec:	df000215 	stw	fp,8(sp)
10005cf0:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
10005cf4:	01414004 	movi	r5,1280
10005cf8:	01000084 	movi	r4,2
10005cfc:	00012400 	call	10001240 <IO_write>
	for (i = 0; i <= 200; i += 2)
10005d00:	e03fff15 	stw	zero,-4(fp)
10005d04:	00000e06 	br	10005d40 <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
10005d08:	0009883a 	mov	r4,zero
10005d0c:	00012b40 	call	100012b4 <IO_read>
10005d10:	10bfffcc 	andi	r2,r2,65535
10005d14:	e0bffe15 	stw	r2,-8(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
10005d18:	e0bfff17 	ldw	r2,-4(fp)
10005d1c:	10814004 	addi	r2,r2,1280
10005d20:	e1bffe17 	ldw	r6,-8(fp)
10005d24:	100b883a 	mov	r5,r2
10005d28:	010400b4 	movhi	r4,4098
10005d2c:	2114d504 	addi	r4,r4,21332
10005d30:	0015ba80 	call	10015ba8 <printf>
	for (i = 0; i <= 200; i += 2)
10005d34:	e0bfff17 	ldw	r2,-4(fp)
10005d38:	10800084 	addi	r2,r2,2
10005d3c:	e0bfff15 	stw	r2,-4(fp)
10005d40:	e0bfff17 	ldw	r2,-4(fp)
10005d44:	10803250 	cmplti	r2,r2,201
10005d48:	103fef1e 	bne	r2,zero,10005d08 <UsbPrintMem+0x24>
	}
}
10005d4c:	0001883a 	nop
10005d50:	e037883a 	mov	sp,fp
10005d54:	dfc00117 	ldw	ra,4(sp)
10005d58:	df000017 	ldw	fp,0(sp)
10005d5c:	dec00204 	addi	sp,sp,8
10005d60:	f800283a 	ret

10005d64 <addToSet>:
	}
};

std::set<TileGroup> workset;

void addToSet(TileCollection k) {
10005d64:	defffc04 	addi	sp,sp,-16
10005d68:	dfc00315 	stw	ra,12(sp)
10005d6c:	df000215 	stw	fp,8(sp)
10005d70:	df000204 	addi	fp,sp,8
10005d74:	e13ffe0d 	sth	r4,-8(fp)
	TileGroup toInsert(k);
10005d78:	e0bfff84 	addi	r2,fp,-2
10005d7c:	e17ffe17 	ldw	r5,-8(fp)
10005d80:	1009883a 	mov	r4,r2
10005d84:	00061400 	call	10006140 <_ZN9TileGroupC1E10__tile_col>
	workset.insert(toInsert);
10005d88:	e0bfff84 	addi	r2,fp,-2
10005d8c:	100b883a 	mov	r5,r2
10005d90:	010400f4 	movhi	r4,4099
10005d94:	212ab604 	addi	r4,r4,-21800
10005d98:	00064040 	call	10006404 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
10005d9c:	1009883a 	mov	r4,r2
10005da0:	180b883a 	mov	r5,r3
}
10005da4:	0001883a 	nop
10005da8:	e037883a 	mov	sp,fp
10005dac:	dfc00117 	ldw	ra,4(sp)
10005db0:	df000017 	ldw	fp,0(sp)
10005db4:	dec00204 	addi	sp,sp,8
10005db8:	f800283a 	ret

10005dbc <addPendingPos>:

void addPendingPos(int16_t x, int16_t y) {
10005dbc:	defffb04 	addi	sp,sp,-20
10005dc0:	dfc00415 	stw	ra,16(sp)
10005dc4:	df000315 	stw	fp,12(sp)
10005dc8:	df000304 	addi	fp,sp,12
10005dcc:	2005883a 	mov	r2,r4
10005dd0:	2807883a 	mov	r3,r5
10005dd4:	e0bffe0d 	sth	r2,-8(fp)
10005dd8:	1805883a 	mov	r2,r3
10005ddc:	e0bffd0d 	sth	r2,-12(fp)
	TileGroup toInsert(x,y);
10005de0:	e0fffe0f 	ldh	r3,-8(fp)
10005de4:	e13ffd0f 	ldh	r4,-12(fp)
10005de8:	e0bfff84 	addi	r2,fp,-2
10005dec:	200d883a 	mov	r6,r4
10005df0:	180b883a 	mov	r5,r3
10005df4:	1009883a 	mov	r4,r2
10005df8:	000617c0 	call	1000617c <_ZN9TileGroupC1Ess>
	workset.insert(toInsert);
10005dfc:	e0bfff84 	addi	r2,fp,-2
10005e00:	100b883a 	mov	r5,r2
10005e04:	010400f4 	movhi	r4,4099
10005e08:	212ab604 	addi	r4,r4,-21800
10005e0c:	00064040 	call	10006404 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>
10005e10:	1009883a 	mov	r4,r2
10005e14:	180b883a 	mov	r5,r3
}
10005e18:	0001883a 	nop
10005e1c:	e037883a 	mov	sp,fp
10005e20:	dfc00117 	ldw	ra,4(sp)
10005e24:	df000017 	ldw	fp,0(sp)
10005e28:	dec00204 	addi	sp,sp,8
10005e2c:	f800283a 	ret

10005e30 <getOne>:

TileCollection getOne() {
10005e30:	defffa04 	addi	sp,sp,-24
10005e34:	dfc00515 	stw	ra,20(sp)
10005e38:	df000415 	stw	fp,16(sp)
10005e3c:	df000404 	addi	fp,sp,16
	std::set<TileGroup>::iterator tempit = workset.begin();
10005e40:	010400f4 	movhi	r4,4099
10005e44:	212ab604 	addi	r4,r4,-21800
10005e48:	00064880 	call	10006488 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10005e4c:	e0bffd15 	stw	r2,-12(fp)
	if(tempit != workset.end()) {
10005e50:	010400f4 	movhi	r4,4099
10005e54:	212ab604 	addi	r4,r4,-21800
10005e58:	00064bc0 	call	100064bc <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10005e5c:	e0bffe15 	stw	r2,-8(fp)
10005e60:	e0fffe04 	addi	r3,fp,-8
10005e64:	e0bffd04 	addi	r2,fp,-12
10005e68:	180b883a 	mov	r5,r3
10005e6c:	1009883a 	mov	r4,r2
10005e70:	00064f00 	call	100064f0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10005e74:	10803fcc 	andi	r2,r2,255
10005e78:	10001126 	beq	r2,zero,10005ec0 <getOne+0x90>
		TileCollection first = (*tempit).k;
10005e7c:	e0bffd04 	addi	r2,fp,-12
10005e80:	1009883a 	mov	r4,r2
10005e84:	00065280 	call	10006528 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
10005e88:	10c00003 	ldbu	r3,0(r2)
10005e8c:	e0fffc85 	stb	r3,-14(fp)
10005e90:	10800043 	ldbu	r2,1(r2)
10005e94:	e0bffcc5 	stb	r2,-13(fp)
		workset.erase(*tempit);
10005e98:	e0bffd04 	addi	r2,fp,-12
10005e9c:	1009883a 	mov	r4,r2
10005ea0:	00065280 	call	10006528 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>
10005ea4:	100b883a 	mov	r5,r2
10005ea8:	010400f4 	movhi	r4,4099
10005eac:	212ab604 	addi	r4,r4,-21800
10005eb0:	00065600 	call	10006560 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>
		return first;
10005eb4:	e0bffc8b 	ldhu	r2,-14(fp)
10005eb8:	e0bfff8d 	sth	r2,-2(fp)
10005ebc:	00000606 	br	10005ed8 <getOne+0xa8>
	} else {
		TileCollection wrong;
		wrong.tile_x = -1;
10005ec0:	00bfffc4 	movi	r2,-1
10005ec4:	e0bffc05 	stb	r2,-16(fp)
		wrong.tile_y = -1;
10005ec8:	00bfffc4 	movi	r2,-1
10005ecc:	e0bffc45 	stb	r2,-15(fp)
		return wrong;
10005ed0:	e0bffc0b 	ldhu	r2,-16(fp)
10005ed4:	e0bfff8d 	sth	r2,-2(fp)
10005ed8:	0007883a 	mov	r3,zero
10005edc:	e0bfff83 	ldbu	r2,-2(fp)
10005ee0:	10803fcc 	andi	r2,r2,255
10005ee4:	013fc004 	movi	r4,-256
10005ee8:	1906703a 	and	r3,r3,r4
10005eec:	1884b03a 	or	r2,r3,r2
10005ef0:	1007883a 	mov	r3,r2
10005ef4:	e0bfffc3 	ldbu	r2,-1(fp)
10005ef8:	10803fcc 	andi	r2,r2,255
10005efc:	1008923a 	slli	r4,r2,8
10005f00:	00bffff4 	movhi	r2,65535
10005f04:	10803fc4 	addi	r2,r2,255
10005f08:	1884703a 	and	r2,r3,r2
10005f0c:	1104b03a 	or	r2,r2,r4
10005f10:	1007883a 	mov	r3,r2
10005f14:	1805883a 	mov	r2,r3
	}
}
10005f18:	e037883a 	mov	sp,fp
10005f1c:	dfc00117 	ldw	ra,4(sp)
10005f20:	df000017 	ldw	fp,0(sp)
10005f24:	dec00204 	addi	sp,sp,8
10005f28:	f800283a 	ret

10005f2c <hasRemain>:

bool hasRemain() {
10005f2c:	defffc04 	addi	sp,sp,-16
10005f30:	dfc00315 	stw	ra,12(sp)
10005f34:	df000215 	stw	fp,8(sp)
10005f38:	df000204 	addi	fp,sp,8
	std::set<TileGroup>::iterator tempit = workset.begin();
10005f3c:	010400f4 	movhi	r4,4099
10005f40:	212ab604 	addi	r4,r4,-21800
10005f44:	00064880 	call	10006488 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>
10005f48:	e0bffe15 	stw	r2,-8(fp)
	return tempit != workset.end();
10005f4c:	010400f4 	movhi	r4,4099
10005f50:	212ab604 	addi	r4,r4,-21800
10005f54:	00064bc0 	call	100064bc <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>
10005f58:	e0bfff15 	stw	r2,-4(fp)
10005f5c:	e0ffff04 	addi	r3,fp,-4
10005f60:	e0bffe04 	addi	r2,fp,-8
10005f64:	180b883a 	mov	r5,r3
10005f68:	1009883a 	mov	r4,r2
10005f6c:	00064f00 	call	100064f0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10005f70:	0001883a 	nop
}
10005f74:	e037883a 	mov	sp,fp
10005f78:	dfc00117 	ldw	ra,4(sp)
10005f7c:	df000017 	ldw	fp,0(sp)
10005f80:	dec00204 	addi	sp,sp,8
10005f84:	f800283a 	ret

10005f88 <clearQueue>:

void clearQueue() {
10005f88:	defffe04 	addi	sp,sp,-8
10005f8c:	dfc00115 	stw	ra,4(sp)
10005f90:	df000015 	stw	fp,0(sp)
10005f94:	d839883a 	mov	fp,sp
	workset.clear();
10005f98:	010400f4 	movhi	r4,4099
10005f9c:	212ab604 	addi	r4,r4,-21800
10005fa0:	000659c0 	call	1000659c <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>
}
10005fa4:	0001883a 	nop
10005fa8:	e037883a 	mov	sp,fp
10005fac:	dfc00117 	ldw	ra,4(sp)
10005fb0:	df000017 	ldw	fp,0(sp)
10005fb4:	dec00204 	addi	sp,sp,8
10005fb8:	f800283a 	ret

10005fbc <_Z41__static_initialization_and_destruction_0ii>:
10005fbc:	defffc04 	addi	sp,sp,-16
10005fc0:	dfc00315 	stw	ra,12(sp)
10005fc4:	df000215 	stw	fp,8(sp)
10005fc8:	df000204 	addi	fp,sp,8
10005fcc:	e13fff15 	stw	r4,-4(fp)
10005fd0:	e17ffe15 	stw	r5,-8(fp)
10005fd4:	e0bfff17 	ldw	r2,-4(fp)
10005fd8:	10800058 	cmpnei	r2,r2,1
10005fdc:	1000061e 	bne	r2,zero,10005ff8 <_Z41__static_initialization_and_destruction_0ii+0x3c>
10005fe0:	e0fffe17 	ldw	r3,-8(fp)
10005fe4:	00bfffd4 	movui	r2,65535
10005fe8:	1880031e 	bne	r3,r2,10005ff8 <_Z41__static_initialization_and_destruction_0ii+0x3c>
std::set<TileGroup> workset;
10005fec:	010400f4 	movhi	r4,4099
10005ff0:	212ab604 	addi	r4,r4,-21800
10005ff4:	00062c80 	call	100062c8 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>
10005ff8:	e0bfff17 	ldw	r2,-4(fp)
10005ffc:	1000061e 	bne	r2,zero,10006018 <_Z41__static_initialization_and_destruction_0ii+0x5c>
10006000:	e0fffe17 	ldw	r3,-8(fp)
10006004:	00bfffd4 	movui	r2,65535
10006008:	1880031e 	bne	r3,r2,10006018 <_Z41__static_initialization_and_destruction_0ii+0x5c>
1000600c:	010400f4 	movhi	r4,4099
10006010:	212ab604 	addi	r4,r4,-21800
10006014:	0007f780 	call	10007f78 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>
}
10006018:	0001883a 	nop
1000601c:	e037883a 	mov	sp,fp
10006020:	dfc00117 	ldw	ra,4(sp)
10006024:	df000017 	ldw	fp,0(sp)
10006028:	dec00204 	addi	sp,sp,8
1000602c:	f800283a 	ret

10006030 <_GLOBAL__sub_I_workset>:
10006030:	defffe04 	addi	sp,sp,-8
10006034:	dfc00115 	stw	ra,4(sp)
10006038:	df000015 	stw	fp,0(sp)
1000603c:	d839883a 	mov	fp,sp
10006040:	017fffd4 	movui	r5,65535
10006044:	01000044 	movi	r4,1
10006048:	0005fbc0 	call	10005fbc <_Z41__static_initialization_and_destruction_0ii>
1000604c:	e037883a 	mov	sp,fp
10006050:	dfc00117 	ldw	ra,4(sp)
10006054:	df000017 	ldw	fp,0(sp)
10006058:	dec00204 	addi	sp,sp,8
1000605c:	f800283a 	ret

10006060 <_GLOBAL__sub_D_workset>:
10006060:	defffe04 	addi	sp,sp,-8
10006064:	dfc00115 	stw	ra,4(sp)
10006068:	df000015 	stw	fp,0(sp)
1000606c:	d839883a 	mov	fp,sp
10006070:	017fffd4 	movui	r5,65535
10006074:	0009883a 	mov	r4,zero
10006078:	0005fbc0 	call	10005fbc <_Z41__static_initialization_and_destruction_0ii>
1000607c:	e037883a 	mov	sp,fp
10006080:	dfc00117 	ldw	ra,4(sp)
10006084:	df000017 	ldw	fp,0(sp)
10006088:	dec00204 	addi	sp,sp,8
1000608c:	f800283a 	ret

10006090 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
10006090:	defffd04 	addi	sp,sp,-12
10006094:	df000215 	stw	fp,8(sp)
10006098:	df000204 	addi	fp,sp,8
1000609c:	e13fff15 	stw	r4,-4(fp)
100060a0:	e17ffe15 	stw	r5,-8(fp)
100060a4:	e0bffe17 	ldw	r2,-8(fp)
100060a8:	e037883a 	mov	sp,fp
100060ac:	df000017 	ldw	fp,0(sp)
100060b0:	dec00104 	addi	sp,sp,4
100060b4:	f800283a 	ret

100060b8 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
100060b8:	defffd04 	addi	sp,sp,-12
100060bc:	dfc00215 	stw	ra,8(sp)
100060c0:	df000115 	stw	fp,4(sp)
100060c4:	df000104 	addi	fp,sp,4
100060c8:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_color = _S_red;
100060cc:	e0bfff17 	ldw	r2,-4(fp)
100060d0:	10000015 	stw	zero,0(r2)
      _M_reset();
100060d4:	e13fff17 	ldw	r4,-4(fp)
100060d8:	00060f40 	call	100060f4 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
100060dc:	0001883a 	nop
100060e0:	e037883a 	mov	sp,fp
100060e4:	dfc00117 	ldw	ra,4(sp)
100060e8:	df000017 	ldw	fp,0(sp)
100060ec:	dec00204 	addi	sp,sp,8
100060f0:	f800283a 	ret

100060f4 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
100060f4:	defffe04 	addi	sp,sp,-8
100060f8:	df000115 	stw	fp,4(sp)
100060fc:	df000104 	addi	fp,sp,4
10006100:	e13fff15 	stw	r4,-4(fp)
    {
      _M_header._M_parent = 0;
10006104:	e0bfff17 	ldw	r2,-4(fp)
10006108:	10000115 	stw	zero,4(r2)
      _M_header._M_left = &_M_header;
1000610c:	e0ffff17 	ldw	r3,-4(fp)
10006110:	e0bfff17 	ldw	r2,-4(fp)
10006114:	10c00215 	stw	r3,8(r2)
      _M_header._M_right = &_M_header;
10006118:	e0ffff17 	ldw	r3,-4(fp)
1000611c:	e0bfff17 	ldw	r2,-4(fp)
10006120:	10c00315 	stw	r3,12(r2)
      _M_node_count = 0;
10006124:	e0bfff17 	ldw	r2,-4(fp)
10006128:	10000415 	stw	zero,16(r2)
    }
1000612c:	0001883a 	nop
10006130:	e037883a 	mov	sp,fp
10006134:	df000017 	ldw	fp,0(sp)
10006138:	dec00104 	addi	sp,sp,4
1000613c:	f800283a 	ret

10006140 <_ZN9TileGroupC1E10__tile_col>:
	TileGroup(TileCollection i) {
10006140:	defffd04 	addi	sp,sp,-12
10006144:	df000215 	stw	fp,8(sp)
10006148:	df000204 	addi	fp,sp,8
1000614c:	e13fff15 	stw	r4,-4(fp)
10006150:	e17ffe0d 	sth	r5,-8(fp)
		k = i;
10006154:	e0bfff17 	ldw	r2,-4(fp)
10006158:	e0fffe03 	ldbu	r3,-8(fp)
1000615c:	10c00005 	stb	r3,0(r2)
10006160:	e0fffe43 	ldbu	r3,-7(fp)
10006164:	10c00045 	stb	r3,1(r2)
	}
10006168:	0001883a 	nop
1000616c:	e037883a 	mov	sp,fp
10006170:	df000017 	ldw	fp,0(sp)
10006174:	dec00104 	addi	sp,sp,4
10006178:	f800283a 	ret

1000617c <_ZN9TileGroupC1Ess>:
	TileGroup(int16_t x, int16_t y) {
1000617c:	defffc04 	addi	sp,sp,-16
10006180:	df000315 	stw	fp,12(sp)
10006184:	df000304 	addi	fp,sp,12
10006188:	e13fff15 	stw	r4,-4(fp)
1000618c:	2805883a 	mov	r2,r5
10006190:	3007883a 	mov	r3,r6
10006194:	e0bffe0d 	sth	r2,-8(fp)
10006198:	1805883a 	mov	r2,r3
1000619c:	e0bffd0d 	sth	r2,-12(fp)
		k.tile_x = x;
100061a0:	e0bffe0b 	ldhu	r2,-8(fp)
100061a4:	1007883a 	mov	r3,r2
100061a8:	e0bfff17 	ldw	r2,-4(fp)
100061ac:	10c00005 	stb	r3,0(r2)
		k.tile_y = y;
100061b0:	e0bffd0b 	ldhu	r2,-12(fp)
100061b4:	1007883a 	mov	r3,r2
100061b8:	e0bfff17 	ldw	r2,-4(fp)
100061bc:	10c00045 	stb	r3,1(r2)
	}
100061c0:	0001883a 	nop
100061c4:	e037883a 	mov	sp,fp
100061c8:	df000017 	ldw	fp,0(sp)
100061cc:	dec00104 	addi	sp,sp,4
100061d0:	f800283a 	ret

100061d4 <_ZNK9TileGroupltERKS_>:
	bool operator<(const TileGroup& t) const {
100061d4:	defffd04 	addi	sp,sp,-12
100061d8:	df000215 	stw	fp,8(sp)
100061dc:	df000204 	addi	fp,sp,8
100061e0:	e13fff15 	stw	r4,-4(fp)
100061e4:	e17ffe15 	stw	r5,-8(fp)
		return t.k.tile_x < this->k.tile_x || t.k.tile_y < k.tile_y;
100061e8:	e0bffe17 	ldw	r2,-8(fp)
100061ec:	10c00003 	ldbu	r3,0(r2)
100061f0:	e0bfff17 	ldw	r2,-4(fp)
100061f4:	10800003 	ldbu	r2,0(r2)
100061f8:	18c03fcc 	andi	r3,r3,255
100061fc:	18c0201c 	xori	r3,r3,128
10006200:	18ffe004 	addi	r3,r3,-128
10006204:	10803fcc 	andi	r2,r2,255
10006208:	1080201c 	xori	r2,r2,128
1000620c:	10bfe004 	addi	r2,r2,-128
10006210:	18800b16 	blt	r3,r2,10006240 <_ZNK9TileGroupltERKS_+0x6c>
10006214:	e0bffe17 	ldw	r2,-8(fp)
10006218:	10c00043 	ldbu	r3,1(r2)
1000621c:	e0bfff17 	ldw	r2,-4(fp)
10006220:	10800043 	ldbu	r2,1(r2)
10006224:	18c03fcc 	andi	r3,r3,255
10006228:	18c0201c 	xori	r3,r3,128
1000622c:	18ffe004 	addi	r3,r3,-128
10006230:	10803fcc 	andi	r2,r2,255
10006234:	1080201c 	xori	r2,r2,128
10006238:	10bfe004 	addi	r2,r2,-128
1000623c:	1880020e 	bge	r3,r2,10006248 <_ZNK9TileGroupltERKS_+0x74>
10006240:	00800044 	movi	r2,1
10006244:	00000106 	br	1000624c <_ZNK9TileGroupltERKS_+0x78>
10006248:	0005883a 	mov	r2,zero
	}
1000624c:	e037883a 	mov	sp,fp
10006250:	df000017 	ldw	fp,0(sp)
10006254:	dec00104 	addi	sp,sp,4
10006258:	f800283a 	ret

1000625c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
1000625c:	defffd04 	addi	sp,sp,-12
10006260:	dfc00215 	stw	ra,8(sp)
10006264:	df000115 	stw	fp,4(sp)
10006268:	df000104 	addi	fp,sp,4
1000626c:	e13fff15 	stw	r4,-4(fp)
10006270:	e13fff17 	ldw	r4,-4(fp)
10006274:	00063500 	call	10006350 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>
10006278:	0001883a 	nop
1000627c:	e037883a 	mov	sp,fp
10006280:	dfc00117 	ldw	ra,4(sp)
10006284:	df000017 	ldw	fp,0(sp)
10006288:	dec00204 	addi	sp,sp,8
1000628c:	f800283a 	ret

10006290 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
10006290:	defffd04 	addi	sp,sp,-12
10006294:	dfc00215 	stw	ra,8(sp)
10006298:	df000115 	stw	fp,4(sp)
1000629c:	df000104 	addi	fp,sp,4
100062a0:	e13fff15 	stw	r4,-4(fp)
100062a4:	e0bfff17 	ldw	r2,-4(fp)
100062a8:	1009883a 	mov	r4,r2
100062ac:	00063000 	call	10006300 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>
100062b0:	0001883a 	nop
100062b4:	e037883a 	mov	sp,fp
100062b8:	dfc00117 	ldw	ra,4(sp)
100062bc:	df000017 	ldw	fp,0(sp)
100062c0:	dec00204 	addi	sp,sp,8
100062c4:	f800283a 	ret

100062c8 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      set() : _M_t() { }
#else
      set() = default;
100062c8:	defffd04 	addi	sp,sp,-12
100062cc:	dfc00215 	stw	ra,8(sp)
100062d0:	df000115 	stw	fp,4(sp)
100062d4:	df000104 	addi	fp,sp,4
100062d8:	e13fff15 	stw	r4,-4(fp)
100062dc:	e0bfff17 	ldw	r2,-4(fp)
100062e0:	1009883a 	mov	r4,r2
100062e4:	00062900 	call	10006290 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev>
100062e8:	0001883a 	nop
100062ec:	e037883a 	mov	sp,fp
100062f0:	dfc00117 	ldw	ra,4(sp)
100062f4:	df000017 	ldw	fp,0(sp)
100062f8:	dec00204 	addi	sp,sp,8
100062fc:	f800283a 	ret

10006300 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EEC1Ev>:
	  _Rb_tree_impl()
10006300:	defffd04 	addi	sp,sp,-12
10006304:	dfc00215 	stw	ra,8(sp)
10006308:	df000115 	stw	fp,4(sp)
1000630c:	df000104 	addi	fp,sp,4
10006310:	e13fff15 	stw	r4,-4(fp)
	  : _Node_allocator()
10006314:	e13fff17 	ldw	r4,-4(fp)
10006318:	00065d40 	call	100065d4 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
1000631c:	e0bfff17 	ldw	r2,-4(fp)
10006320:	1009883a 	mov	r4,r2
10006324:	00066080 	call	10006608 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>
10006328:	e0bfff17 	ldw	r2,-4(fp)
1000632c:	10800104 	addi	r2,r2,4
10006330:	1009883a 	mov	r4,r2
10006334:	00060b80 	call	100060b8 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
10006338:	0001883a 	nop
1000633c:	e037883a 	mov	sp,fp
10006340:	dfc00117 	ldw	ra,4(sp)
10006344:	df000017 	ldw	fp,0(sp)
10006348:	dec00204 	addi	sp,sp,8
1000634c:	f800283a 	ret

10006350 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
	allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
10006350:	defffd04 	addi	sp,sp,-12
10006354:	dfc00215 	stw	ra,8(sp)
10006358:	df000115 	stw	fp,4(sp)
1000635c:	df000104 	addi	fp,sp,4
10006360:	e13fff15 	stw	r4,-4(fp)
10006364:	e13fff17 	ldw	r4,-4(fp)
10006368:	000662c0 	call	1000662c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>
1000636c:	0001883a 	nop
10006370:	e037883a 	mov	sp,fp
10006374:	dfc00117 	ldw	ra,4(sp)
10006378:	df000017 	ldw	fp,0(sp)
1000637c:	dec00204 	addi	sp,sp,8
10006380:	f800283a 	ret

10006384 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>:
      { }

      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
10006384:	defff004 	addi	sp,sp,-64
10006388:	dfc00f15 	stw	ra,60(sp)
1000638c:	df000e15 	stw	fp,56(sp)
10006390:	df000e04 	addi	fp,sp,56
10006394:	e13fff15 	stw	r4,-4(fp)
10006398:	00840074 	movhi	r2,4097
1000639c:	10a2a704 	addi	r2,r2,-30052
100063a0:	e0bff815 	stw	r2,-32(fp)
100063a4:	008400b4 	movhi	r2,4098
100063a8:	10914804 	addi	r2,r2,17696
100063ac:	e0bff915 	stw	r2,-28(fp)
100063b0:	e0bff204 	addi	r2,fp,-56
100063b4:	1009883a 	mov	r4,r2
100063b8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
      { _M_erase(_M_begin()); }
100063bc:	e13fff17 	ldw	r4,-4(fp)
100063c0:	00066c00 	call	100066c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
100063c4:	e03ff315 	stw	zero,-52(fp)
100063c8:	100b883a 	mov	r5,r2
100063cc:	e13fff17 	ldw	r4,-4(fp)
100063d0:	00066500 	call	10006650 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
100063d4:	e0bfff17 	ldw	r2,-4(fp)
100063d8:	1009883a 	mov	r4,r2
100063dc:	000625c0 	call	1000625c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb1EED1Ev>
100063e0:	0001883a 	nop
100063e4:	e0bff204 	addi	r2,fp,-56
100063e8:	1009883a 	mov	r4,r2
100063ec:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
100063f0:	e037883a 	mov	sp,fp
100063f4:	dfc00117 	ldw	ra,4(sp)
100063f8:	df000017 	ldw	fp,0(sp)
100063fc:	dec00204 	addi	sp,sp,8
10006400:	f800283a 	ret

10006404 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE6insertERKS0_>:
       *  not already present in the %set.
       *
       *  Insertion requires logarithmic time.
       */
      std::pair<iterator, bool>
      insert(const value_type& __x)
10006404:	defff804 	addi	sp,sp,-32
10006408:	dfc00715 	stw	ra,28(sp)
1000640c:	df000615 	stw	fp,24(sp)
10006410:	df000604 	addi	fp,sp,24
10006414:	e13ffb15 	stw	r4,-20(fp)
10006418:	e17ffa15 	stw	r5,-24(fp)
      {
	std::pair<typename _Rep_type::iterator, bool> __p =
1000641c:	e0bffb17 	ldw	r2,-20(fp)
10006420:	e17ffa17 	ldw	r5,-24(fp)
10006424:	1009883a 	mov	r4,r2
10006428:	000670c0 	call	1000670c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>
1000642c:	1009883a 	mov	r4,r2
10006430:	180b883a 	mov	r5,r3
10006434:	e13ffc15 	stw	r4,-16(fp)
10006438:	e17ffd15 	stw	r5,-12(fp)
	  _M_t._M_insert_unique(__x);
	return std::pair<iterator, bool>(__p.first, __p.second);
1000643c:	e0bffc04 	addi	r2,fp,-16
10006440:	11000104 	addi	r4,r2,4
10006444:	e0fffc04 	addi	r3,fp,-16
10006448:	e0bffe04 	addi	r2,fp,-8
1000644c:	200d883a 	mov	r6,r4
10006450:	180b883a 	mov	r5,r3
10006454:	1009883a 	mov	r4,r2
10006458:	00068600 	call	10006860 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>
1000645c:	e0bffe17 	ldw	r2,-8(fp)
10006460:	e0ffff17 	ldw	r3,-4(fp)
10006464:	1009883a 	mov	r4,r2
10006468:	180b883a 	mov	r5,r3
      }
1000646c:	2005883a 	mov	r2,r4
10006470:	2807883a 	mov	r3,r5
10006474:	e037883a 	mov	sp,fp
10006478:	dfc00117 	ldw	ra,4(sp)
1000647c:	df000017 	ldw	fp,0(sp)
10006480:	dec00204 	addi	sp,sp,8
10006484:	f800283a 	ret

10006488 <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
10006488:	defffd04 	addi	sp,sp,-12
1000648c:	dfc00215 	stw	ra,8(sp)
10006490:	df000115 	stw	fp,4(sp)
10006494:	df000104 	addi	fp,sp,4
10006498:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.begin(); }
1000649c:	e0bfff17 	ldw	r2,-4(fp)
100064a0:	1009883a 	mov	r4,r2
100064a4:	00068c80 	call	100068c8 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
100064a8:	e037883a 	mov	sp,fp
100064ac:	dfc00117 	ldw	ra,4(sp)
100064b0:	df000017 	ldw	fp,0(sp)
100064b4:	dec00204 	addi	sp,sp,8
100064b8:	f800283a 	ret

100064bc <_ZNKSt3setI9TileGroupSt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
100064bc:	defffd04 	addi	sp,sp,-12
100064c0:	dfc00215 	stw	ra,8(sp)
100064c4:	df000115 	stw	fp,4(sp)
100064c8:	df000104 	addi	fp,sp,4
100064cc:	e13fff15 	stw	r4,-4(fp)
      { return _M_t.end(); }
100064d0:	e0bfff17 	ldw	r2,-4(fp)
100064d4:	1009883a 	mov	r4,r2
100064d8:	000690c0 	call	1000690c <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
100064dc:	e037883a 	mov	sp,fp
100064e0:	dfc00117 	ldw	ra,4(sp)
100064e4:	df000017 	ldw	fp,0(sp)
100064e8:	dec00204 	addi	sp,sp,8
100064ec:	f800283a 	ret

100064f0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>:
      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
100064f0:	defffd04 	addi	sp,sp,-12
100064f4:	df000215 	stw	fp,8(sp)
100064f8:	df000204 	addi	fp,sp,8
100064fc:	e13fff15 	stw	r4,-4(fp)
10006500:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node != __x._M_node; }
10006504:	e0bfff17 	ldw	r2,-4(fp)
10006508:	10c00017 	ldw	r3,0(r2)
1000650c:	e0bffe17 	ldw	r2,-8(fp)
10006510:	10800017 	ldw	r2,0(r2)
10006514:	1884c03a 	cmpne	r2,r3,r2
10006518:	e037883a 	mov	sp,fp
1000651c:	df000017 	ldw	fp,0(sp)
10006520:	dec00104 	addi	sp,sp,4
10006524:	f800283a 	ret

10006528 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
10006528:	defffd04 	addi	sp,sp,-12
1000652c:	dfc00215 	stw	ra,8(sp)
10006530:	df000115 	stw	fp,4(sp)
10006534:	df000104 	addi	fp,sp,4
10006538:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
1000653c:	e0bfff17 	ldw	r2,-4(fp)
10006540:	10800017 	ldw	r2,0(r2)
10006544:	1009883a 	mov	r4,r2
10006548:	00069500 	call	10006950 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
1000654c:	e037883a 	mov	sp,fp
10006550:	dfc00117 	ldw	ra,4(sp)
10006554:	df000017 	ldw	fp,0(sp)
10006558:	dec00204 	addi	sp,sp,8
1000655c:	f800283a 	ret

10006560 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5eraseERKS0_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
10006560:	defffc04 	addi	sp,sp,-16
10006564:	dfc00315 	stw	ra,12(sp)
10006568:	df000215 	stw	fp,8(sp)
1000656c:	df000204 	addi	fp,sp,8
10006570:	e13fff15 	stw	r4,-4(fp)
10006574:	e17ffe15 	stw	r5,-8(fp)
      { return _M_t.erase(__x); }
10006578:	e0bfff17 	ldw	r2,-4(fp)
1000657c:	e17ffe17 	ldw	r5,-8(fp)
10006580:	1009883a 	mov	r4,r2
10006584:	00069880 	call	10006988 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>
10006588:	e037883a 	mov	sp,fp
1000658c:	dfc00117 	ldw	ra,4(sp)
10006590:	df000017 	ldw	fp,0(sp)
10006594:	dec00204 	addi	sp,sp,8
10006598:	f800283a 	ret

1000659c <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EE5clearEv>:
       *  the elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
1000659c:	defffd04 	addi	sp,sp,-12
100065a0:	dfc00215 	stw	ra,8(sp)
100065a4:	df000115 	stw	fp,4(sp)
100065a8:	df000104 	addi	fp,sp,4
100065ac:	e13fff15 	stw	r4,-4(fp)
      { _M_t.clear(); }
100065b0:	e0bfff17 	ldw	r2,-4(fp)
100065b4:	1009883a 	mov	r4,r2
100065b8:	0006a2c0 	call	10006a2c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
100065bc:	0001883a 	nop
100065c0:	e037883a 	mov	sp,fp
100065c4:	dfc00117 	ldw	ra,4(sp)
100065c8:	df000017 	ldw	fp,0(sp)
100065cc:	dec00204 	addi	sp,sp,8
100065d0:	f800283a 	ret

100065d4 <_ZNSaISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      allocator() throw() { }
100065d4:	defffd04 	addi	sp,sp,-12
100065d8:	dfc00215 	stw	ra,8(sp)
100065dc:	df000115 	stw	fp,4(sp)
100065e0:	df000104 	addi	fp,sp,4
100065e4:	e13fff15 	stw	r4,-4(fp)
100065e8:	e13fff17 	ldw	r4,-4(fp)
100065ec:	0006ab00 	call	10006ab0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>
100065f0:	0001883a 	nop
100065f4:	e037883a 	mov	sp,fp
100065f8:	dfc00117 	ldw	ra,4(sp)
100065fc:	df000017 	ldw	fp,0(sp)
10006600:	dec00204 	addi	sp,sp,8
10006604:	f800283a 	ret

10006608 <_ZNSt20_Rb_tree_key_compareISt4lessI9TileGroupEEC1Ev>:
      _Rb_tree_key_compare()
10006608:	defffe04 	addi	sp,sp,-8
1000660c:	df000115 	stw	fp,4(sp)
10006610:	df000104 	addi	fp,sp,4
10006614:	e13fff15 	stw	r4,-4(fp)
      { }
10006618:	0001883a 	nop
1000661c:	e037883a 	mov	sp,fp
10006620:	df000017 	ldw	fp,0(sp)
10006624:	dec00104 	addi	sp,sp,4
10006628:	f800283a 	ret

1000662c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEED1Ev>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }

      template<typename _Tp1>
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
1000662c:	defffe04 	addi	sp,sp,-8
10006630:	df000115 	stw	fp,4(sp)
10006634:	df000104 	addi	fp,sp,4
10006638:	e13fff15 	stw	r4,-4(fp)
1000663c:	0001883a 	nop
10006640:	e037883a 	mov	sp,fp
10006644:	df000017 	ldw	fp,0(sp)
10006648:	dec00104 	addi	sp,sp,4
1000664c:	f800283a 	ret

10006650 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006650:	defffb04 	addi	sp,sp,-20
10006654:	dfc00415 	stw	ra,16(sp)
10006658:	df000315 	stw	fp,12(sp)
1000665c:	df000304 	addi	fp,sp,12
10006660:	e13ffe15 	stw	r4,-8(fp)
10006664:	e17ffd15 	stw	r5,-12(fp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
10006668:	e0bffd17 	ldw	r2,-12(fp)
1000666c:	10000e26 	beq	r2,zero,100066a8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x58>
	{
	  _M_erase(_S_right(__x));
10006670:	e13ffd17 	ldw	r4,-12(fp)
10006674:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10006678:	100b883a 	mov	r5,r2
1000667c:	e13ffe17 	ldw	r4,-8(fp)
10006680:	00066500 	call	10006650 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	  _Link_type __y = _S_left(__x);
10006684:	e13ffd17 	ldw	r4,-12(fp)
10006688:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
1000668c:	e0bfff15 	stw	r2,-4(fp)
	  _M_drop_node(__x);
10006690:	e17ffd17 	ldw	r5,-12(fp)
10006694:	e13ffe17 	ldw	r4,-8(fp)
10006698:	0006b240 	call	10006b24 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
	  __x = __y;
1000669c:	e0bfff17 	ldw	r2,-4(fp)
100066a0:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
100066a4:	003ff006 	br	10006668 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x18>
	}
    }
100066a8:	0001883a 	nop
100066ac:	e037883a 	mov	sp,fp
100066b0:	dfc00117 	ldw	ra,4(sp)
100066b4:	df000017 	ldw	fp,0(sp)
100066b8:	dec00204 	addi	sp,sp,8
100066bc:	f800283a 	ret

100066c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
100066c0:	defffe04 	addi	sp,sp,-8
100066c4:	df000115 	stw	fp,4(sp)
100066c8:	df000104 	addi	fp,sp,4
100066cc:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
100066d0:	e0bfff17 	ldw	r2,-4(fp)
100066d4:	10800217 	ldw	r2,8(r2)
100066d8:	e037883a 	mov	sp,fp
100066dc:	df000017 	ldw	fp,0(sp)
100066e0:	dec00104 	addi	sp,sp,4
100066e4:	f800283a 	ret

100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
100066e8:	defffe04 	addi	sp,sp,-8
100066ec:	df000115 	stw	fp,4(sp)
100066f0:	df000104 	addi	fp,sp,4
100066f4:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
100066f8:	e0bfff17 	ldw	r2,-4(fp)
100066fc:	e037883a 	mov	sp,fp
10006700:	df000017 	ldw	fp,0(sp)
10006704:	dec00104 	addi	sp,sp,4
10006708:	f800283a 	ret

1000670c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_>:
#if __cplusplus >= 201103L
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1000670c:	deffed04 	addi	sp,sp,-76
10006710:	dfc01215 	stw	ra,72(sp)
10006714:	df001115 	stw	fp,68(sp)
10006718:	dc401015 	stw	r17,64(sp)
1000671c:	dc000f15 	stw	r16,60(sp)
10006720:	df001104 	addi	fp,sp,68
10006724:	e13ff115 	stw	r4,-60(fp)
10006728:	e17ff015 	stw	r5,-64(fp)
    _M_insert_unique(const _Val& __v)
#endif
    {
      typedef pair<iterator, bool> _Res;
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
1000672c:	e0bff5c4 	addi	r2,fp,-41
10006730:	e17ff017 	ldw	r5,-64(fp)
10006734:	1009883a 	mov	r4,r2
10006738:	0006e1c0 	call	10006e1c <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
      pair<_Base_ptr, _Base_ptr> __res
1000673c:	100b883a 	mov	r5,r2
10006740:	e13ff117 	ldw	r4,-60(fp)
10006744:	0006c680 	call	10006c68 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>
10006748:	1009883a 	mov	r4,r2
1000674c:	180b883a 	mov	r5,r3
10006750:	e13ff315 	stw	r4,-52(fp)
10006754:	e17ff415 	stw	r5,-48(fp)

      if (__res.second)
10006758:	e0bff417 	ldw	r2,-48(fp)
1000675c:	10001d26 	beq	r2,zero,100067d4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0xc8>
	{
	  _Alloc_node __an(*this);
10006760:	e0bff204 	addi	r2,fp,-56
10006764:	e17ff117 	ldw	r5,-60(fp)
10006768:	1009883a 	mov	r4,r2
1000676c:	0006e440 	call	10006e44 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>
	  return _Res(_M_insert_(__res.first, __res.second,
10006770:	e43ff317 	ldw	r16,-52(fp)
10006774:	e47ff417 	ldw	r17,-48(fp)
10006778:	e13ff017 	ldw	r4,-64(fp)
1000677c:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10006780:	1007883a 	mov	r3,r2
10006784:	e0bff204 	addi	r2,fp,-56
10006788:	d8800015 	stw	r2,0(sp)
1000678c:	180f883a 	mov	r7,r3
10006790:	880d883a 	mov	r6,r17
10006794:	800b883a 	mov	r5,r16
10006798:	e13ff117 	ldw	r4,-60(fp)
1000679c:	0006e780 	call	10006e78 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>
100067a0:	e0bff815 	stw	r2,-32(fp)
				 _GLIBCXX_FORWARD(_Arg, __v), __an),
		      true);
100067a4:	00800044 	movi	r2,1
100067a8:	e0bff9c5 	stb	r2,-25(fp)
100067ac:	e13ff9c4 	addi	r4,fp,-25
100067b0:	e0fff804 	addi	r3,fp,-32
100067b4:	e0bff604 	addi	r2,fp,-40
100067b8:	200d883a 	mov	r6,r4
100067bc:	180b883a 	mov	r5,r3
100067c0:	1009883a 	mov	r4,r2
100067c4:	0006fa40 	call	10006fa4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
100067c8:	e0bff617 	ldw	r2,-40(fp)
100067cc:	e0fff717 	ldw	r3,-36(fp)
100067d0:	00000f06 	br	10006810 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueIRKS0_EESt4pairISt17_Rb_tree_iteratorIS0_EbEOT_+0x104>
	}

      return _Res(iterator(__res.first), false);
100067d4:	e0fff317 	ldw	r3,-52(fp)
100067d8:	e0bffc04 	addi	r2,fp,-16
100067dc:	180b883a 	mov	r5,r3
100067e0:	1009883a 	mov	r4,r2
100067e4:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100067e8:	e03ffdc5 	stb	zero,-9(fp)
100067ec:	e13ffdc4 	addi	r4,fp,-9
100067f0:	e0fffc04 	addi	r3,fp,-16
100067f4:	e0bffa04 	addi	r2,fp,-24
100067f8:	200d883a 	mov	r6,r4
100067fc:	180b883a 	mov	r5,r3
10006800:	1009883a 	mov	r4,r2
10006804:	0006fa40 	call	10006fa4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>
10006808:	e0bffa17 	ldw	r2,-24(fp)
1000680c:	e0fffb17 	ldw	r3,-20(fp)
10006810:	1009883a 	mov	r4,r2
10006814:	180b883a 	mov	r5,r3
    }
10006818:	2005883a 	mov	r2,r4
1000681c:	2807883a 	mov	r3,r5
10006820:	e6fffe04 	addi	sp,fp,-8
10006824:	dfc00317 	ldw	ra,12(sp)
10006828:	df000217 	ldw	fp,8(sp)
1000682c:	dc400117 	ldw	r17,4(sp)
10006830:	dc000017 	ldw	r16,0(sp)
10006834:	dec00404 	addi	sp,sp,16
10006838:	f800283a 	ret

1000683c <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
1000683c:	defffe04 	addi	sp,sp,-8
10006840:	df000115 	stw	fp,4(sp)
10006844:	df000104 	addi	fp,sp,4
10006848:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
1000684c:	e0bfff17 	ldw	r2,-4(fp)
10006850:	e037883a 	mov	sp,fp
10006854:	df000017 	ldw	fp,0(sp)
10006858:	dec00104 	addi	sp,sp,4
1000685c:	f800283a 	ret

10006860 <_ZNSt4pairISt23_Rb_tree_const_iteratorI9TileGroupEbEC1IRSt17_Rb_tree_iteratorIS1_ERbLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
10006860:	defffa04 	addi	sp,sp,-24
10006864:	dfc00515 	stw	ra,20(sp)
10006868:	df000415 	stw	fp,16(sp)
1000686c:	dc000315 	stw	r16,12(sp)
10006870:	df000404 	addi	fp,sp,16
10006874:	e13ffe15 	stw	r4,-8(fp)
10006878:	e17ffd15 	stw	r5,-12(fp)
1000687c:	e1bffc15 	stw	r6,-16(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006880:	e43ffe17 	ldw	r16,-8(fp)
10006884:	e13ffd17 	ldw	r4,-12(fp)
10006888:	000683c0 	call	1000683c <_ZSt7forwardIRSt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS4_E4typeE>
1000688c:	100b883a 	mov	r5,r2
10006890:	8009883a 	mov	r4,r16
10006894:	000705c0 	call	1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10006898:	e13ffc17 	ldw	r4,-16(fp)
1000689c:	00070380 	call	10007038 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
100068a0:	10c00003 	ldbu	r3,0(r2)
100068a4:	e0bffe17 	ldw	r2,-8(fp)
100068a8:	10c00105 	stb	r3,4(r2)
100068ac:	0001883a 	nop
100068b0:	e6ffff04 	addi	sp,fp,-4
100068b4:	dfc00217 	ldw	ra,8(sp)
100068b8:	df000117 	ldw	fp,4(sp)
100068bc:	dc000017 	ldw	r16,0(sp)
100068c0:	dec00304 	addi	sp,sp,12
100068c4:	f800283a 	ret

100068c8 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
100068c8:	defffc04 	addi	sp,sp,-16
100068cc:	dfc00315 	stw	ra,12(sp)
100068d0:	df000215 	stw	fp,8(sp)
100068d4:	df000204 	addi	fp,sp,8
100068d8:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
100068dc:	e0bffe17 	ldw	r2,-8(fp)
100068e0:	10c00317 	ldw	r3,12(r2)
100068e4:	e0bfff04 	addi	r2,fp,-4
100068e8:	180b883a 	mov	r5,r3
100068ec:	1009883a 	mov	r4,r2
100068f0:	00070940 	call	10007094 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
100068f4:	e0bfff17 	ldw	r2,-4(fp)
100068f8:	e037883a 	mov	sp,fp
100068fc:	dfc00117 	ldw	ra,4(sp)
10006900:	df000017 	ldw	fp,0(sp)
10006904:	dec00204 	addi	sp,sp,8
10006908:	f800283a 	ret

1000690c <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
1000690c:	defffc04 	addi	sp,sp,-16
10006910:	dfc00315 	stw	ra,12(sp)
10006914:	df000215 	stw	fp,8(sp)
10006918:	df000204 	addi	fp,sp,8
1000691c:	e13ffe15 	stw	r4,-8(fp)
      { return const_iterator(&this->_M_impl._M_header); }
10006920:	e0bffe17 	ldw	r2,-8(fp)
10006924:	10c00104 	addi	r3,r2,4
10006928:	e0bfff04 	addi	r2,fp,-4
1000692c:	180b883a 	mov	r5,r3
10006930:	1009883a 	mov	r4,r2
10006934:	00070940 	call	10007094 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>
10006938:	e0bfff17 	ldw	r2,-4(fp)
1000693c:	e037883a 	mov	sp,fp
10006940:	dfc00117 	ldw	ra,4(sp)
10006944:	df000017 	ldw	fp,0(sp)
10006948:	dec00204 	addi	sp,sp,8
1000694c:	f800283a 	ret

10006950 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr() const
10006950:	defffd04 	addi	sp,sp,-12
10006954:	dfc00215 	stw	ra,8(sp)
10006958:	df000115 	stw	fp,4(sp)
1000695c:	df000104 	addi	fp,sp,4
10006960:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
10006964:	e0bfff17 	ldw	r2,-4(fp)
10006968:	10800404 	addi	r2,r2,16
1000696c:	1009883a 	mov	r4,r2
10006970:	00070c80 	call	100070c8 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
10006974:	e037883a 	mov	sp,fp
10006978:	dfc00117 	ldw	ra,4(sp)
1000697c:	df000017 	ldw	fp,0(sp)
10006980:	dec00204 	addi	sp,sp,8
10006984:	f800283a 	ret

10006988 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006988:	defff704 	addi	sp,sp,-36
1000698c:	dfc00815 	stw	ra,32(sp)
10006990:	df000715 	stw	fp,28(sp)
10006994:	df000704 	addi	fp,sp,28
10006998:	e13ffa15 	stw	r4,-24(fp)
1000699c:	e17ff915 	stw	r5,-28(fp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
100069a0:	e17ff917 	ldw	r5,-28(fp)
100069a4:	e13ffa17 	ldw	r4,-24(fp)
100069a8:	00070f80 	call	100070f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>
100069ac:	1009883a 	mov	r4,r2
100069b0:	180b883a 	mov	r5,r3
100069b4:	e13ffb15 	stw	r4,-20(fp)
100069b8:	e17ffc15 	stw	r5,-16(fp)
      const size_type __old_size = size();
100069bc:	e13ffa17 	ldw	r4,-24(fp)
100069c0:	00072980 	call	10007298 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
100069c4:	e0bfff15 	stw	r2,-4(fp)
      _M_erase_aux(__p.first, __p.second);
100069c8:	e0fffb04 	addi	r3,fp,-20
100069cc:	e0bffd04 	addi	r2,fp,-12
100069d0:	180b883a 	mov	r5,r3
100069d4:	1009883a 	mov	r4,r2
100069d8:	000705c0 	call	1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100069dc:	e0bffb04 	addi	r2,fp,-20
100069e0:	10c00104 	addi	r3,r2,4
100069e4:	e0bffe04 	addi	r2,fp,-8
100069e8:	180b883a 	mov	r5,r3
100069ec:	1009883a 	mov	r4,r2
100069f0:	000705c0 	call	1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100069f4:	e1bffe17 	ldw	r6,-8(fp)
100069f8:	e17ffd17 	ldw	r5,-12(fp)
100069fc:	e13ffa17 	ldw	r4,-24(fp)
10006a00:	00072c00 	call	100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>
      return __old_size - size();
10006a04:	e13ffa17 	ldw	r4,-24(fp)
10006a08:	00072980 	call	10007298 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>
10006a0c:	1007883a 	mov	r3,r2
10006a10:	e0bfff17 	ldw	r2,-4(fp)
10006a14:	10c5c83a 	sub	r2,r2,r3
    }
10006a18:	e037883a 	mov	sp,fp
10006a1c:	dfc00117 	ldw	ra,4(sp)
10006a20:	df000017 	ldw	fp,0(sp)
10006a24:	dec00204 	addi	sp,sp,8
10006a28:	f800283a 	ret

10006a2c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
10006a2c:	defff004 	addi	sp,sp,-64
10006a30:	dfc00f15 	stw	ra,60(sp)
10006a34:	df000e15 	stw	fp,56(sp)
10006a38:	df000e04 	addi	fp,sp,56
10006a3c:	e13fff15 	stw	r4,-4(fp)
10006a40:	00840074 	movhi	r2,4097
10006a44:	10a2a704 	addi	r2,r2,-30052
10006a48:	e0bff815 	stw	r2,-32(fp)
10006a4c:	008400b4 	movhi	r2,4098
10006a50:	10914904 	addi	r2,r2,17700
10006a54:	e0bff915 	stw	r2,-28(fp)
10006a58:	e0bff204 	addi	r2,fp,-56
10006a5c:	1009883a 	mov	r4,r2
10006a60:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
	_M_erase(_M_begin());
10006a64:	e13fff17 	ldw	r4,-4(fp)
10006a68:	00066c00 	call	100066c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10006a6c:	e03ff315 	stw	zero,-52(fp)
10006a70:	100b883a 	mov	r5,r2
10006a74:	e13fff17 	ldw	r4,-4(fp)
10006a78:	00066500 	call	10006650 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E>
	_M_impl._M_reset();
10006a7c:	e0bfff17 	ldw	r2,-4(fp)
10006a80:	10800104 	addi	r2,r2,4
10006a84:	1009883a 	mov	r4,r2
10006a88:	00060f40 	call	100060f4 <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
10006a8c:	0001883a 	nop
10006a90:	e0bff204 	addi	r2,fp,-56
10006a94:	1009883a 	mov	r4,r2
10006a98:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
10006a9c:	e037883a 	mov	sp,fp
10006aa0:	dfc00117 	ldw	ra,4(sp)
10006aa4:	df000017 	ldw	fp,0(sp)
10006aa8:	dec00204 	addi	sp,sp,8
10006aac:	f800283a 	ret

10006ab0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
10006ab0:	defffe04 	addi	sp,sp,-8
10006ab4:	df000115 	stw	fp,4(sp)
10006ab8:	df000104 	addi	fp,sp,4
10006abc:	e13fff15 	stw	r4,-4(fp)
10006ac0:	0001883a 	nop
10006ac4:	e037883a 	mov	sp,fp
10006ac8:	df000017 	ldw	fp,0(sp)
10006acc:	dec00104 	addi	sp,sp,4
10006ad0:	f800283a 	ret

10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10006ad4:	defffe04 	addi	sp,sp,-8
10006ad8:	df000115 	stw	fp,4(sp)
10006adc:	df000104 	addi	fp,sp,4
10006ae0:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_right); }
10006ae4:	e0bfff17 	ldw	r2,-4(fp)
10006ae8:	10800317 	ldw	r2,12(r2)
10006aec:	e037883a 	mov	sp,fp
10006af0:	df000017 	ldw	fp,0(sp)
10006af4:	dec00104 	addi	sp,sp,4
10006af8:	f800283a 	ret

10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10006afc:	defffe04 	addi	sp,sp,-8
10006b00:	df000115 	stw	fp,4(sp)
10006b04:	df000104 	addi	fp,sp,4
10006b08:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Link_type>(__x->_M_left); }
10006b0c:	e0bfff17 	ldw	r2,-4(fp)
10006b10:	10800217 	ldw	r2,8(r2)
10006b14:	e037883a 	mov	sp,fp
10006b18:	df000017 	ldw	fp,0(sp)
10006b1c:	dec00104 	addi	sp,sp,4
10006b20:	f800283a 	ret

10006b24 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
10006b24:	defffc04 	addi	sp,sp,-16
10006b28:	dfc00315 	stw	ra,12(sp)
10006b2c:	df000215 	stw	fp,8(sp)
10006b30:	df000204 	addi	fp,sp,8
10006b34:	e13fff15 	stw	r4,-4(fp)
10006b38:	e17ffe15 	stw	r5,-8(fp)
	_M_destroy_node(__p);
10006b3c:	e17ffe17 	ldw	r5,-8(fp)
10006b40:	e13fff17 	ldw	r4,-4(fp)
10006b44:	00073c80 	call	100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>
	_M_put_node(__p);
10006b48:	e17ffe17 	ldw	r5,-8(fp)
10006b4c:	e13fff17 	ldw	r4,-4(fp)
10006b50:	00074540 	call	10007454 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
      }
10006b54:	0001883a 	nop
10006b58:	e037883a 	mov	sp,fp
10006b5c:	dfc00117 	ldw	ra,4(sp)
10006b60:	df000017 	ldw	fp,0(sp)
10006b64:	dec00204 	addi	sp,sp,8
10006b68:	f800283a 	ret

10006b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
10006b6c:	defffb04 	addi	sp,sp,-20
10006b70:	dfc00415 	stw	ra,16(sp)
10006b74:	df000315 	stw	fp,12(sp)
10006b78:	df000304 	addi	fp,sp,12
10006b7c:	e13fff15 	stw	r4,-4(fp)
10006b80:	e17ffe15 	stw	r5,-8(fp)
10006b84:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006b88:	e13ffe17 	ldw	r4,-8(fp)
10006b8c:	0006bc80 	call	10006bc8 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>
10006b90:	10c00017 	ldw	r3,0(r2)
10006b94:	e0bfff17 	ldw	r2,-4(fp)
10006b98:	10c00015 	stw	r3,0(r2)
10006b9c:	e13ffd17 	ldw	r4,-12(fp)
10006ba0:	0006c440 	call	10006c44 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
10006ba4:	10c00017 	ldw	r3,0(r2)
10006ba8:	e0bfff17 	ldw	r2,-4(fp)
10006bac:	10c00115 	stw	r3,4(r2)
10006bb0:	0001883a 	nop
10006bb4:	e037883a 	mov	sp,fp
10006bb8:	dfc00117 	ldw	ra,4(sp)
10006bbc:	df000017 	ldw	fp,0(sp)
10006bc0:	dec00204 	addi	sp,sp,8
10006bc4:	f800283a 	ret

10006bc8 <_ZSt7forwardIRPSt13_Rb_tree_nodeI9TileGroupEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006bc8:	defffe04 	addi	sp,sp,-8
10006bcc:	df000115 	stw	fp,4(sp)
10006bd0:	df000104 	addi	fp,sp,4
10006bd4:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006bd8:	e0bfff17 	ldw	r2,-4(fp)
10006bdc:	e037883a 	mov	sp,fp
10006be0:	df000017 	ldw	fp,0(sp)
10006be4:	dec00104 	addi	sp,sp,4
10006be8:	f800283a 	ret

10006bec <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
10006bec:	defffb04 	addi	sp,sp,-20
10006bf0:	dfc00415 	stw	ra,16(sp)
10006bf4:	df000315 	stw	fp,12(sp)
10006bf8:	df000304 	addi	fp,sp,12
10006bfc:	e13fff15 	stw	r4,-4(fp)
10006c00:	e17ffe15 	stw	r5,-8(fp)
10006c04:	e1bffd15 	stw	r6,-12(fp)
       : first(std::forward<_U1>(__x)), second(__y) { }
10006c08:	e13ffe17 	ldw	r4,-8(fp)
10006c0c:	0006c440 	call	10006c44 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
10006c10:	10c00017 	ldw	r3,0(r2)
10006c14:	e0bfff17 	ldw	r2,-4(fp)
10006c18:	10c00015 	stw	r3,0(r2)
10006c1c:	e0bffd17 	ldw	r2,-12(fp)
10006c20:	10c00017 	ldw	r3,0(r2)
10006c24:	e0bfff17 	ldw	r2,-4(fp)
10006c28:	10c00115 	stw	r3,4(r2)
10006c2c:	0001883a 	nop
10006c30:	e037883a 	mov	sp,fp
10006c34:	dfc00117 	ldw	ra,4(sp)
10006c38:	df000017 	ldw	fp,0(sp)
10006c3c:	dec00204 	addi	sp,sp,8
10006c40:	f800283a 	ret

10006c44 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006c44:	defffe04 	addi	sp,sp,-8
10006c48:	df000115 	stw	fp,4(sp)
10006c4c:	df000104 	addi	fp,sp,4
10006c50:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006c54:	e0bfff17 	ldw	r2,-4(fp)
10006c58:	e037883a 	mov	sp,fp
10006c5c:	df000017 	ldw	fp,0(sp)
10006c60:	dec00104 	addi	sp,sp,4
10006c64:	f800283a 	ret

10006c68 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006c68:	deffef04 	addi	sp,sp,-68
10006c6c:	dfc01015 	stw	ra,64(sp)
10006c70:	df000f15 	stw	fp,60(sp)
10006c74:	dc000e15 	stw	r16,56(sp)
10006c78:	df000f04 	addi	fp,sp,60
10006c7c:	e13ff215 	stw	r4,-56(fp)
10006c80:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
10006c84:	e13ff217 	ldw	r4,-56(fp)
10006c88:	00066c00 	call	100066c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
10006c8c:	e0bff515 	stw	r2,-44(fp)
      _Base_ptr __y = _M_end();
10006c90:	e13ff217 	ldw	r4,-56(fp)
10006c94:	00074d00 	call	100074d0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10006c98:	e0bff415 	stw	r2,-48(fp)
      bool __comp = true;
10006c9c:	00800044 	movi	r2,1
10006ca0:	e0bffec5 	stb	r2,-5(fp)
      while (__x != 0)
10006ca4:	e0bff517 	ldw	r2,-44(fp)
10006ca8:	10001626 	beq	r2,zero,10006d04 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x9c>
	  __y = __x;
10006cac:	e0bff517 	ldw	r2,-44(fp)
10006cb0:	e0bff415 	stw	r2,-48(fp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
10006cb4:	e43ff217 	ldw	r16,-56(fp)
10006cb8:	e0bff517 	ldw	r2,-44(fp)
10006cbc:	1009883a 	mov	r4,r2
10006cc0:	00074f80 	call	100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10006cc4:	100d883a 	mov	r6,r2
10006cc8:	e17ff117 	ldw	r5,-60(fp)
10006ccc:	8009883a 	mov	r4,r16
10006cd0:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006cd4:	e0bffec5 	stb	r2,-5(fp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
10006cd8:	e0bffec3 	ldbu	r2,-5(fp)
10006cdc:	10000426 	beq	r2,zero,10006cf0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x88>
10006ce0:	e0bff517 	ldw	r2,-44(fp)
10006ce4:	1009883a 	mov	r4,r2
10006ce8:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10006cec:	00000306 	br	10006cfc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x94>
10006cf0:	e0bff517 	ldw	r2,-44(fp)
10006cf4:	1009883a 	mov	r4,r2
10006cf8:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10006cfc:	e0bff515 	stw	r2,-44(fp)
      while (__x != 0)
10006d00:	003fe806 	br	10006ca4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x3c>
      iterator __j = iterator(__y);
10006d04:	e0fff417 	ldw	r3,-48(fp)
10006d08:	e0bff304 	addi	r2,fp,-52
10006d0c:	180b883a 	mov	r5,r3
10006d10:	1009883a 	mov	r4,r2
10006d14:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
      if (__comp)
10006d18:	e0bffec3 	ldbu	r2,-5(fp)
10006d1c:	10001726 	beq	r2,zero,10006d7c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x114>
	  if (__j == begin())
10006d20:	e13ff217 	ldw	r4,-56(fp)
10006d24:	000757c0 	call	1000757c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
10006d28:	e0bff615 	stw	r2,-40(fp)
10006d2c:	e0fff604 	addi	r3,fp,-40
10006d30:	e0bff304 	addi	r2,fp,-52
10006d34:	180b883a 	mov	r5,r3
10006d38:	1009883a 	mov	r4,r2
10006d3c:	00075c00 	call	100075c0 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>
10006d40:	10803fcc 	andi	r2,r2,255
10006d44:	10000a26 	beq	r2,zero,10006d70 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x108>
	    return _Res(__x, __y);
10006d48:	e13ff404 	addi	r4,fp,-48
10006d4c:	e0fff504 	addi	r3,fp,-44
10006d50:	e0bff704 	addi	r2,fp,-36
10006d54:	200d883a 	mov	r6,r4
10006d58:	180b883a 	mov	r5,r3
10006d5c:	1009883a 	mov	r4,r2
10006d60:	0006b6c0 	call	10006b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
10006d64:	e0bff717 	ldw	r2,-36(fp)
10006d68:	e0fff817 	ldw	r3,-32(fp)
10006d6c:	00002106 	br	10006df4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
	    --__j;
10006d70:	e0bff304 	addi	r2,fp,-52
10006d74:	1009883a 	mov	r4,r2
10006d78:	00075f80 	call	100075f8 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
10006d7c:	e43ff217 	ldw	r16,-56(fp)
10006d80:	e0bff317 	ldw	r2,-52(fp)
10006d84:	1009883a 	mov	r4,r2
10006d88:	00076400 	call	10007640 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
10006d8c:	e1bff117 	ldw	r6,-60(fp)
10006d90:	100b883a 	mov	r5,r2
10006d94:	8009883a 	mov	r4,r16
10006d98:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006d9c:	10803fcc 	andi	r2,r2,255
10006da0:	10000a26 	beq	r2,zero,10006dcc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x164>
	return _Res(__x, __y);
10006da4:	e13ff404 	addi	r4,fp,-48
10006da8:	e0fff504 	addi	r3,fp,-44
10006dac:	e0bff904 	addi	r2,fp,-28
10006db0:	200d883a 	mov	r6,r4
10006db4:	180b883a 	mov	r5,r3
10006db8:	1009883a 	mov	r4,r2
10006dbc:	0006b6c0 	call	10006b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeI9TileGroupERS1_Lb1EEEOT_OT0_>
10006dc0:	e0bff917 	ldw	r2,-28(fp)
10006dc4:	e0fffa17 	ldw	r3,-24(fp)
10006dc8:	00000a06 	br	10006df4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE24_M_get_insert_unique_posERKS0_+0x18c>
      return _Res(__j._M_node, 0);
10006dcc:	e03ffd15 	stw	zero,-12(fp)
10006dd0:	e13ffd04 	addi	r4,fp,-12
10006dd4:	e0fff304 	addi	r3,fp,-52
10006dd8:	e0bffb04 	addi	r2,fp,-20
10006ddc:	200d883a 	mov	r6,r4
10006de0:	180b883a 	mov	r5,r3
10006de4:	1009883a 	mov	r4,r2
10006de8:	0006bec0 	call	10006bec <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
10006dec:	e0bffb17 	ldw	r2,-20(fp)
10006df0:	e0fffc17 	ldw	r3,-16(fp)
10006df4:	1009883a 	mov	r4,r2
10006df8:	180b883a 	mov	r5,r3
    }
10006dfc:	2005883a 	mov	r2,r4
10006e00:	2807883a 	mov	r3,r5
10006e04:	e6ffff04 	addi	sp,fp,-4
10006e08:	dfc00217 	ldw	ra,8(sp)
10006e0c:	df000117 	ldw	fp,4(sp)
10006e10:	dc000017 	ldw	r16,0(sp)
10006e14:	dec00304 	addi	sp,sp,12
10006e18:	f800283a 	ret

10006e1c <_ZNKSt9_IdentityI9TileGroupEclERKS0_>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
10006e1c:	defffd04 	addi	sp,sp,-12
10006e20:	df000215 	stw	fp,8(sp)
10006e24:	df000204 	addi	fp,sp,8
10006e28:	e13fff15 	stw	r4,-4(fp)
10006e2c:	e17ffe15 	stw	r5,-8(fp)
      { return __x; }
10006e30:	e0bffe17 	ldw	r2,-8(fp)
10006e34:	e037883a 	mov	sp,fp
10006e38:	df000017 	ldw	fp,0(sp)
10006e3c:	dec00104 	addi	sp,sp,4
10006e40:	f800283a 	ret

10006e44 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeC1ERS6_>:
	_Alloc_node(_Rb_tree& __t)
10006e44:	defffd04 	addi	sp,sp,-12
10006e48:	df000215 	stw	fp,8(sp)
10006e4c:	df000204 	addi	fp,sp,8
10006e50:	e13fff15 	stw	r4,-4(fp)
10006e54:	e17ffe15 	stw	r5,-8(fp)
	  : _M_t(__t) { }
10006e58:	e0bfff17 	ldw	r2,-4(fp)
10006e5c:	e0fffe17 	ldw	r3,-8(fp)
10006e60:	10c00015 	stw	r3,0(r2)
10006e64:	0001883a 	nop
10006e68:	e037883a 	mov	sp,fp
10006e6c:	df000017 	ldw	fp,0(sp)
10006e70:	dec00104 	addi	sp,sp,4
10006e74:	f800283a 	ret

10006e78 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10006e78:	defff404 	addi	sp,sp,-48
10006e7c:	dfc00b15 	stw	ra,44(sp)
10006e80:	df000a15 	stw	fp,40(sp)
10006e84:	dc400915 	stw	r17,36(sp)
10006e88:	dc000815 	stw	r16,32(sp)
10006e8c:	df000a04 	addi	fp,sp,40
10006e90:	e13ff915 	stw	r4,-28(fp)
10006e94:	e17ff815 	stw	r5,-32(fp)
10006e98:	e1bff715 	stw	r6,-36(fp)
10006e9c:	e1fff615 	stw	r7,-40(fp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
10006ea0:	e0bff817 	ldw	r2,-32(fp)
10006ea4:	1000131e 	bne	r2,zero,10006ef4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
	bool __insert_left = (__x != 0 || __p == _M_end()
10006ea8:	e13ff917 	ldw	r4,-28(fp)
10006eac:	00074d00 	call	100074d0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10006eb0:	1007883a 	mov	r3,r2
10006eb4:	e0bff717 	ldw	r2,-36(fp)
10006eb8:	10c00e26 	beq	r2,r3,10006ef4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
10006ebc:	e43ff917 	ldw	r16,-28(fp)
10006ec0:	e0bffac4 	addi	r2,fp,-21
10006ec4:	e17ff617 	ldw	r5,-40(fp)
10006ec8:	1009883a 	mov	r4,r2
10006ecc:	0006e1c0 	call	10006e1c <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10006ed0:	1023883a 	mov	r17,r2
10006ed4:	e13ff717 	ldw	r4,-36(fp)
10006ed8:	00076400 	call	10007640 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>
10006edc:	100d883a 	mov	r6,r2
10006ee0:	880b883a 	mov	r5,r17
10006ee4:	8009883a 	mov	r4,r16
10006ee8:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10006eec:	10803fcc 	andi	r2,r2,255
10006ef0:	10000226 	beq	r2,zero,10006efc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x84>
10006ef4:	00800044 	movi	r2,1
10006ef8:	00000106 	br	10006f00 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_IRKS0_NS6_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS0_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x88>
10006efc:	0005883a 	mov	r2,zero
	bool __insert_left = (__x != 0 || __p == _M_end()
10006f00:	e0bffdc5 	stb	r2,-9(fp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
10006f04:	e13ff617 	ldw	r4,-40(fp)
10006f08:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10006f0c:	100b883a 	mov	r5,r2
10006f10:	e1000217 	ldw	r4,8(fp)
10006f14:	00076880 	call	10007688 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>
10006f18:	e0bffc15 	stw	r2,-16(fp)
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10006f1c:	e0fffdc3 	ldbu	r3,-9(fp)
				      this->_M_impl._M_header);
10006f20:	e0bff917 	ldw	r2,-28(fp)
10006f24:	10800104 	addi	r2,r2,4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
10006f28:	100f883a 	mov	r7,r2
10006f2c:	e1bff717 	ldw	r6,-36(fp)
10006f30:	e17ffc17 	ldw	r5,-16(fp)
10006f34:	1809883a 	mov	r4,r3
10006f38:	00096e40 	call	100096e4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
10006f3c:	e0bff917 	ldw	r2,-28(fp)
10006f40:	10800517 	ldw	r2,20(r2)
10006f44:	10c00044 	addi	r3,r2,1
10006f48:	e0bff917 	ldw	r2,-28(fp)
10006f4c:	10c00515 	stw	r3,20(r2)
	return iterator(__z);
10006f50:	e0bffb04 	addi	r2,fp,-20
10006f54:	e17ffc17 	ldw	r5,-16(fp)
10006f58:	1009883a 	mov	r4,r2
10006f5c:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10006f60:	e0bffb17 	ldw	r2,-20(fp)
      }
10006f64:	e6fffe04 	addi	sp,fp,-8
10006f68:	dfc00317 	ldw	ra,12(sp)
10006f6c:	df000217 	ldw	fp,8(sp)
10006f70:	dc400117 	ldw	r17,4(sp)
10006f74:	dc000017 	ldw	r16,0(sp)
10006f78:	dec00404 	addi	sp,sp,16
10006f7c:	f800283a 	ret

10006f80 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10006f80:	defffe04 	addi	sp,sp,-8
10006f84:	df000115 	stw	fp,4(sp)
10006f88:	df000104 	addi	fp,sp,4
10006f8c:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10006f90:	e0bfff17 	ldw	r2,-4(fp)
10006f94:	e037883a 	mov	sp,fp
10006f98:	df000017 	ldw	fp,0(sp)
10006f9c:	dec00104 	addi	sp,sp,4
10006fa0:	f800283a 	ret

10006fa4 <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupEbEC1IS2_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
10006fa4:	defffb04 	addi	sp,sp,-20
10006fa8:	dfc00415 	stw	ra,16(sp)
10006fac:	df000315 	stw	fp,12(sp)
10006fb0:	df000304 	addi	fp,sp,12
10006fb4:	e13fff15 	stw	r4,-4(fp)
10006fb8:	e17ffe15 	stw	r5,-8(fp)
10006fbc:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10006fc0:	e13ffe17 	ldw	r4,-8(fp)
10006fc4:	0006f800 	call	10006f80 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
10006fc8:	1007883a 	mov	r3,r2
10006fcc:	e0bfff17 	ldw	r2,-4(fp)
10006fd0:	18c00017 	ldw	r3,0(r3)
10006fd4:	10c00015 	stw	r3,0(r2)
10006fd8:	e13ffd17 	ldw	r4,-12(fp)
10006fdc:	00076d80 	call	100076d8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
10006fe0:	10c00003 	ldbu	r3,0(r2)
10006fe4:	e0bfff17 	ldw	r2,-4(fp)
10006fe8:	10c00105 	stb	r3,4(r2)
10006fec:	0001883a 	nop
10006ff0:	e037883a 	mov	sp,fp
10006ff4:	dfc00117 	ldw	ra,4(sp)
10006ff8:	df000017 	ldw	fp,0(sp)
10006ffc:	dec00204 	addi	sp,sp,8
10007000:	f800283a 	ret

10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10007004:	defffd04 	addi	sp,sp,-12
10007008:	df000215 	stw	fp,8(sp)
1000700c:	df000204 	addi	fp,sp,8
10007010:	e13fff15 	stw	r4,-4(fp)
10007014:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
10007018:	e0bfff17 	ldw	r2,-4(fp)
1000701c:	e0fffe17 	ldw	r3,-8(fp)
10007020:	10c00015 	stw	r3,0(r2)
10007024:	0001883a 	nop
10007028:	e037883a 	mov	sp,fp
1000702c:	df000017 	ldw	fp,0(sp)
10007030:	dec00104 	addi	sp,sp,4
10007034:	f800283a 	ret

10007038 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
10007038:	defffe04 	addi	sp,sp,-8
1000703c:	df000115 	stw	fp,4(sp)
10007040:	df000104 	addi	fp,sp,4
10007044:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
10007048:	e0bfff17 	ldw	r2,-4(fp)
1000704c:	e037883a 	mov	sp,fp
10007050:	df000017 	ldw	fp,0(sp)
10007054:	dec00104 	addi	sp,sp,4
10007058:	f800283a 	ret

1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
1000705c:	defffd04 	addi	sp,sp,-12
10007060:	df000215 	stw	fp,8(sp)
10007064:	df000204 	addi	fp,sp,8
10007068:	e13fff15 	stw	r4,-4(fp)
1000706c:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__it._M_node) { }
10007070:	e0bffe17 	ldw	r2,-8(fp)
10007074:	10c00017 	ldw	r3,0(r2)
10007078:	e0bfff17 	ldw	r2,-4(fp)
1000707c:	10c00015 	stw	r3,0(r2)
10007080:	0001883a 	nop
10007084:	e037883a 	mov	sp,fp
10007088:	df000017 	ldw	fp,0(sp)
1000708c:	dec00104 	addi	sp,sp,4
10007090:	f800283a 	ret

10007094 <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
10007094:	defffd04 	addi	sp,sp,-12
10007098:	df000215 	stw	fp,8(sp)
1000709c:	df000204 	addi	fp,sp,8
100070a0:	e13fff15 	stw	r4,-4(fp)
100070a4:	e17ffe15 	stw	r5,-8(fp)
      : _M_node(__x) { }
100070a8:	e0bfff17 	ldw	r2,-4(fp)
100070ac:	e0fffe17 	ldw	r3,-8(fp)
100070b0:	10c00015 	stw	r3,0(r2)
100070b4:	0001883a 	nop
100070b8:	e037883a 	mov	sp,fp
100070bc:	df000017 	ldw	fp,0(sp)
100070c0:	dec00104 	addi	sp,sp,4
100070c4:	f800283a 	ret

100070c8 <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
100070c8:	defffd04 	addi	sp,sp,-12
100070cc:	dfc00215 	stw	ra,8(sp)
100070d0:	df000115 	stw	fp,4(sp)
100070d4:	df000104 	addi	fp,sp,4
100070d8:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const _Tp*>(_M_addr()); }
100070dc:	e13fff17 	ldw	r4,-4(fp)
100070e0:	00076fc0 	call	100076fc <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
100070e4:	e037883a 	mov	sp,fp
100070e8:	dfc00117 	ldw	ra,4(sp)
100070ec:	df000017 	ldw	fp,0(sp)
100070f0:	dec00204 	addi	sp,sp,8
100070f4:	f800283a 	ret

100070f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100070f8:	deffef04 	addi	sp,sp,-68
100070fc:	dfc01015 	stw	ra,64(sp)
10007100:	df000f15 	stw	fp,60(sp)
10007104:	dc000e15 	stw	r16,56(sp)
10007108:	df000f04 	addi	fp,sp,60
1000710c:	e13ff215 	stw	r4,-56(fp)
10007110:	e17ff115 	stw	r5,-60(fp)
      _Link_type __x = _M_begin();
10007114:	e13ff217 	ldw	r4,-56(fp)
10007118:	00066c00 	call	100066c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv>
1000711c:	e0bffe15 	stw	r2,-8(fp)
      _Base_ptr __y = _M_end();
10007120:	e13ff217 	ldw	r4,-56(fp)
10007124:	00074d00 	call	100074d0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>
10007128:	e0bffd15 	stw	r2,-12(fp)
      while (__x != 0)
1000712c:	e0bffe17 	ldw	r2,-8(fp)
10007130:	10003e26 	beq	r2,zero,1000722c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x134>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
10007134:	e43ff217 	ldw	r16,-56(fp)
10007138:	e13ffe17 	ldw	r4,-8(fp)
1000713c:	00074f80 	call	100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007140:	e1bff117 	ldw	r6,-60(fp)
10007144:	100b883a 	mov	r5,r2
10007148:	8009883a 	mov	r4,r16
1000714c:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007150:	10803fcc 	andi	r2,r2,255
10007154:	10000426 	beq	r2,zero,10007168 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x70>
	    __x = _S_right(__x);
10007158:	e13ffe17 	ldw	r4,-8(fp)
1000715c:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007160:	e0bffe15 	stw	r2,-8(fp)
10007164:	003ff106 	br	1000712c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
10007168:	e43ff217 	ldw	r16,-56(fp)
1000716c:	e13ffe17 	ldw	r4,-8(fp)
10007170:	00074f80 	call	100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007174:	100d883a 	mov	r6,r2
10007178:	e17ff117 	ldw	r5,-60(fp)
1000717c:	8009883a 	mov	r4,r16
10007180:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007184:	10803fcc 	andi	r2,r2,255
10007188:	10000626 	beq	r2,zero,100071a4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0xac>
	    __y = __x, __x = _S_left(__x);
1000718c:	e0bffe17 	ldw	r2,-8(fp)
10007190:	e0bffd15 	stw	r2,-12(fp)
10007194:	e13ffe17 	ldw	r4,-8(fp)
10007198:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
1000719c:	e0bffe15 	stw	r2,-8(fp)
100071a0:	003fe206 	br	1000712c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x34>
	      _Link_type __xu(__x);
100071a4:	e0bffe17 	ldw	r2,-8(fp)
100071a8:	e0bffc15 	stw	r2,-16(fp)
	      _Base_ptr __yu(__y);
100071ac:	e0bffd17 	ldw	r2,-12(fp)
100071b0:	e0bffb15 	stw	r2,-20(fp)
	      __y = __x, __x = _S_left(__x);
100071b4:	e0bffe17 	ldw	r2,-8(fp)
100071b8:	e0bffd15 	stw	r2,-12(fp)
100071bc:	e13ffe17 	ldw	r4,-8(fp)
100071c0:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
100071c4:	e0bffe15 	stw	r2,-8(fp)
	      __xu = _S_right(__xu);
100071c8:	e13ffc17 	ldw	r4,-16(fp)
100071cc:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
100071d0:	e0bffc15 	stw	r2,-16(fp)
	      return pair<iterator,
100071d4:	e1fff117 	ldw	r7,-60(fp)
100071d8:	e1bffd17 	ldw	r6,-12(fp)
100071dc:	e17ffe17 	ldw	r5,-8(fp)
100071e0:	e13ff217 	ldw	r4,-56(fp)
100071e4:	00077200 	call	10007720 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
100071e8:	e0bff515 	stw	r2,-44(fp)
100071ec:	e1fff117 	ldw	r7,-60(fp)
100071f0:	e1bffb17 	ldw	r6,-20(fp)
100071f4:	e17ffc17 	ldw	r5,-16(fp)
100071f8:	e13ff217 	ldw	r4,-56(fp)
100071fc:	00077c80 	call	100077c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>
10007200:	e0bff615 	stw	r2,-40(fp)
				    _M_upper_bound(__xu, __yu, __k));
10007204:	e13ff604 	addi	r4,fp,-40
10007208:	e0fff504 	addi	r3,fp,-44
1000720c:	e0bff304 	addi	r2,fp,-52
10007210:	200d883a 	mov	r6,r4
10007214:	180b883a 	mov	r5,r3
10007218:	1009883a 	mov	r4,r2
1000721c:	000786c0 	call	1000786c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007220:	e0bff317 	ldw	r2,-52(fp)
10007224:	e0fff417 	ldw	r3,-48(fp)
10007228:	00001106 	br	10007270 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_+0x178>
				      iterator(__y));
1000722c:	e0bff904 	addi	r2,fp,-28
10007230:	e17ffd17 	ldw	r5,-12(fp)
10007234:	1009883a 	mov	r4,r2
10007238:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
1000723c:	e0bffa04 	addi	r2,fp,-24
10007240:	e17ffd17 	ldw	r5,-12(fp)
10007244:	1009883a 	mov	r4,r2
10007248:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
1000724c:	e13ffa04 	addi	r4,fp,-24
10007250:	e0fff904 	addi	r3,fp,-28
10007254:	e0bff704 	addi	r2,fp,-36
10007258:	200d883a 	mov	r6,r4
1000725c:	180b883a 	mov	r5,r3
10007260:	1009883a 	mov	r4,r2
10007264:	000786c0 	call	1000786c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>
10007268:	e0bff717 	ldw	r2,-36(fp)
1000726c:	e0fff817 	ldw	r3,-32(fp)
10007270:	1009883a 	mov	r4,r2
10007274:	180b883a 	mov	r5,r3
    }
10007278:	2005883a 	mov	r2,r4
1000727c:	2807883a 	mov	r3,r5
10007280:	e6ffff04 	addi	sp,fp,-4
10007284:	dfc00217 	ldw	ra,8(sp)
10007288:	df000117 	ldw	fp,4(sp)
1000728c:	dc000017 	ldw	r16,0(sp)
10007290:	dec00304 	addi	sp,sp,12
10007294:	f800283a 	ret

10007298 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
10007298:	defffe04 	addi	sp,sp,-8
1000729c:	df000115 	stw	fp,4(sp)
100072a0:	df000104 	addi	fp,sp,4
100072a4:	e13fff15 	stw	r4,-4(fp)
      { return _M_impl._M_node_count; }
100072a8:	e0bfff17 	ldw	r2,-4(fp)
100072ac:	10800517 	ldw	r2,20(r2)
100072b0:	e037883a 	mov	sp,fp
100072b4:	df000017 	ldw	fp,0(sp)
100072b8:	dec00104 	addi	sp,sp,4
100072bc:	f800283a 	ret

100072c0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100072c0:	defff704 	addi	sp,sp,-36
100072c4:	dfc00815 	stw	ra,32(sp)
100072c8:	df000715 	stw	fp,28(sp)
100072cc:	df000704 	addi	fp,sp,28
100072d0:	e13ffb15 	stw	r4,-20(fp)
100072d4:	e17ffa15 	stw	r5,-24(fp)
100072d8:	e1bff915 	stw	r6,-28(fp)
      if (__first == begin() && __last == end())
100072dc:	e13ffb17 	ldw	r4,-20(fp)
100072e0:	000757c0 	call	1000757c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>
100072e4:	e0bffd15 	stw	r2,-12(fp)
100072e8:	e0fffd04 	addi	r3,fp,-12
100072ec:	e0bffc04 	addi	r2,fp,-16
100072f0:	180b883a 	mov	r5,r3
100072f4:	1009883a 	mov	r4,r2
100072f8:	000705c0 	call	1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
100072fc:	e0fffc04 	addi	r3,fp,-16
10007300:	e0bffa04 	addi	r2,fp,-24
10007304:	180b883a 	mov	r5,r3
10007308:	1009883a 	mov	r4,r2
1000730c:	00078d00 	call	100078d0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
10007310:	10803fcc 	andi	r2,r2,255
10007314:	10001126 	beq	r2,zero,1000735c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
10007318:	e13ffb17 	ldw	r4,-20(fp)
1000731c:	00079080 	call	10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>
10007320:	e0bfff15 	stw	r2,-4(fp)
10007324:	e0ffff04 	addi	r3,fp,-4
10007328:	e0bffe04 	addi	r2,fp,-8
1000732c:	180b883a 	mov	r5,r3
10007330:	1009883a 	mov	r4,r2
10007334:	000705c0 	call	1000705c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEC1ERKSt17_Rb_tree_iteratorIS0_E>
10007338:	e0fffe04 	addi	r3,fp,-8
1000733c:	e0bff904 	addi	r2,fp,-28
10007340:	180b883a 	mov	r5,r3
10007344:	1009883a 	mov	r4,r2
10007348:	00078d00 	call	100078d0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>
1000734c:	10803fcc 	andi	r2,r2,255
10007350:	10000226 	beq	r2,zero,1000735c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0x9c>
10007354:	00800044 	movi	r2,1
10007358:	00000106 	br	10007360 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xa0>
1000735c:	0005883a 	mov	r2,zero
10007360:	10803fcc 	andi	r2,r2,255
10007364:	10000326 	beq	r2,zero,10007374 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
	clear();
10007368:	e13ffb17 	ldw	r4,-20(fp)
1000736c:	0006a2c0 	call	10006a2c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5clearEv>
    }
10007370:	00000f06 	br	100073b0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	while (__first != __last)
10007374:	e0fff904 	addi	r3,fp,-28
10007378:	e0bffa04 	addi	r2,fp,-24
1000737c:	180b883a 	mov	r5,r3
10007380:	1009883a 	mov	r4,r2
10007384:	00064f00 	call	100064f0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEneERKS1_>
10007388:	10803fcc 	andi	r2,r2,255
1000738c:	10000826 	beq	r2,zero,100073b0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xf0>
	  _M_erase_aux(__first++);
10007390:	e0bffa04 	addi	r2,fp,-24
10007394:	000b883a 	mov	r5,zero
10007398:	1009883a 	mov	r4,r2
1000739c:	000794c0 	call	1000794c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>
100073a0:	100b883a 	mov	r5,r2
100073a4:	e13ffb17 	ldw	r4,-20(fp)
100073a8:	00079a40 	call	100079a4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>
	while (__first != __last)
100073ac:	003ff106 	br	10007374 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_ES8_+0xb4>
    }
100073b0:	0001883a 	nop
100073b4:	e037883a 	mov	sp,fp
100073b8:	dfc00117 	ldw	ra,4(sp)
100073bc:	df000017 	ldw	fp,0(sp)
100073c0:	dec00204 	addi	sp,sp,8
100073c4:	f800283a 	ret

100073c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_destroy_node(_Link_type __p) noexcept
100073c8:	deffee04 	addi	sp,sp,-72
100073cc:	dfc01115 	stw	ra,68(sp)
100073d0:	df001015 	stw	fp,64(sp)
100073d4:	dc000f15 	stw	r16,60(sp)
100073d8:	df001004 	addi	fp,sp,64
100073dc:	e13ffe15 	stw	r4,-8(fp)
100073e0:	e17ffd15 	stw	r5,-12(fp)
100073e4:	00840074 	movhi	r2,4097
100073e8:	10a2a704 	addi	r2,r2,-30052
100073ec:	e0bff615 	stw	r2,-40(fp)
100073f0:	008400b4 	movhi	r2,4098
100073f4:	10914a04 	addi	r2,r2,17704
100073f8:	e0bff715 	stw	r2,-36(fp)
100073fc:	e0bff004 	addi	r2,fp,-64
10007400:	1009883a 	mov	r4,r2
10007404:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
10007408:	e13ffe17 	ldw	r4,-8(fp)
1000740c:	0007a100 	call	10007a10 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007410:	1021883a 	mov	r16,r2
10007414:	e13ffd17 	ldw	r4,-12(fp)
10007418:	0007a340 	call	10007a34 <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
1000741c:	e03ff115 	stw	zero,-60(fp)
10007420:	100b883a 	mov	r5,r2
10007424:	8009883a 	mov	r4,r16
10007428:	0007a6c0 	call	10007a6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>
      }
1000742c:	0001883a 	nop
10007430:	e0bff004 	addi	r2,fp,-64
10007434:	1009883a 	mov	r4,r2
10007438:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000743c:	e6ffff04 	addi	sp,fp,-4
10007440:	dfc00217 	ldw	ra,8(sp)
10007444:	df000117 	ldw	fp,4(sp)
10007448:	dc000017 	ldw	r16,0(sp)
1000744c:	dec00304 	addi	sp,sp,12
10007450:	f800283a 	ret

10007454 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
10007454:	deffef04 	addi	sp,sp,-68
10007458:	dfc01015 	stw	ra,64(sp)
1000745c:	df000f15 	stw	fp,60(sp)
10007460:	df000f04 	addi	fp,sp,60
10007464:	e13fff15 	stw	r4,-4(fp)
10007468:	e17ffe15 	stw	r5,-8(fp)
1000746c:	00840074 	movhi	r2,4097
10007470:	10a2a704 	addi	r2,r2,-30052
10007474:	e0bff715 	stw	r2,-36(fp)
10007478:	008400b4 	movhi	r2,4098
1000747c:	10914b04 	addi	r2,r2,17708
10007480:	e0bff815 	stw	r2,-32(fp)
10007484:	e0bff104 	addi	r2,fp,-60
10007488:	1009883a 	mov	r4,r2
1000748c:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
10007490:	e13fff17 	ldw	r4,-4(fp)
10007494:	0007a100 	call	10007a10 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007498:	e03ff215 	stw	zero,-56(fp)
1000749c:	01800044 	movi	r6,1
100074a0:	e17ffe17 	ldw	r5,-8(fp)
100074a4:	1009883a 	mov	r4,r2
100074a8:	0007aa80 	call	10007aa8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>
100074ac:	0001883a 	nop
100074b0:	e0bff104 	addi	r2,fp,-60
100074b4:	1009883a 	mov	r4,r2
100074b8:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
100074bc:	e037883a 	mov	sp,fp
100074c0:	dfc00117 	ldw	ra,4(sp)
100074c4:	df000017 	ldw	fp,0(sp)
100074c8:	dec00204 	addi	sp,sp,8
100074cc:	f800283a 	ret

100074d0 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
100074d0:	defffe04 	addi	sp,sp,-8
100074d4:	df000115 	stw	fp,4(sp)
100074d8:	df000104 	addi	fp,sp,4
100074dc:	e13fff15 	stw	r4,-4(fp)
      { return &this->_M_impl._M_header; }
100074e0:	e0bfff17 	ldw	r2,-4(fp)
100074e4:	10800104 	addi	r2,r2,4
100074e8:	e037883a 	mov	sp,fp
100074ec:	df000017 	ldw	fp,0(sp)
100074f0:	dec00104 	addi	sp,sp,4
100074f4:	f800283a 	ret

100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>:
      _S_key(_Const_Link_type __x)
100074f8:	defffc04 	addi	sp,sp,-16
100074fc:	dfc00315 	stw	ra,12(sp)
10007500:	df000215 	stw	fp,8(sp)
10007504:	df000204 	addi	fp,sp,8
10007508:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
1000750c:	e13ffe17 	ldw	r4,-8(fp)
10007510:	0007aec0 	call	10007aec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>
10007514:	1007883a 	mov	r3,r2
10007518:	e0bfffc4 	addi	r2,fp,-1
1000751c:	180b883a 	mov	r5,r3
10007520:	1009883a 	mov	r4,r2
10007524:	0006e1c0 	call	10006e1c <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007528:	0001883a 	nop
1000752c:	e037883a 	mov	sp,fp
10007530:	dfc00117 	ldw	ra,4(sp)
10007534:	df000017 	ldw	fp,0(sp)
10007538:	dec00204 	addi	sp,sp,8
1000753c:	f800283a 	ret

10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>:
      operator()(const _Tp& __x, const _Tp& __y) const
10007540:	defffb04 	addi	sp,sp,-20
10007544:	dfc00415 	stw	ra,16(sp)
10007548:	df000315 	stw	fp,12(sp)
1000754c:	df000304 	addi	fp,sp,12
10007550:	e13fff15 	stw	r4,-4(fp)
10007554:	e17ffe15 	stw	r5,-8(fp)
10007558:	e1bffd15 	stw	r6,-12(fp)
      { return __x < __y; }
1000755c:	e17ffd17 	ldw	r5,-12(fp)
10007560:	e13ffe17 	ldw	r4,-8(fp)
10007564:	00061d40 	call	100061d4 <_ZNK9TileGroupltERKS_>
10007568:	e037883a 	mov	sp,fp
1000756c:	dfc00117 	ldw	ra,4(sp)
10007570:	df000017 	ldw	fp,0(sp)
10007574:	dec00204 	addi	sp,sp,8
10007578:	f800283a 	ret

1000757c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
1000757c:	defffc04 	addi	sp,sp,-16
10007580:	dfc00315 	stw	ra,12(sp)
10007584:	df000215 	stw	fp,8(sp)
10007588:	df000204 	addi	fp,sp,8
1000758c:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(this->_M_impl._M_header._M_left); }
10007590:	e0bffe17 	ldw	r2,-8(fp)
10007594:	10c00317 	ldw	r3,12(r2)
10007598:	e0bfff04 	addi	r2,fp,-4
1000759c:	180b883a 	mov	r5,r3
100075a0:	1009883a 	mov	r4,r2
100075a4:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100075a8:	e0bfff17 	ldw	r2,-4(fp)
100075ac:	e037883a 	mov	sp,fp
100075b0:	dfc00117 	ldw	ra,4(sp)
100075b4:	df000017 	ldw	fp,0(sp)
100075b8:	dec00204 	addi	sp,sp,8
100075bc:	f800283a 	ret

100075c0 <_ZNKSt17_Rb_tree_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
100075c0:	defffd04 	addi	sp,sp,-12
100075c4:	df000215 	stw	fp,8(sp)
100075c8:	df000204 	addi	fp,sp,8
100075cc:	e13fff15 	stw	r4,-4(fp)
100075d0:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
100075d4:	e0bfff17 	ldw	r2,-4(fp)
100075d8:	10c00017 	ldw	r3,0(r2)
100075dc:	e0bffe17 	ldw	r2,-8(fp)
100075e0:	10800017 	ldw	r2,0(r2)
100075e4:	1885003a 	cmpeq	r2,r3,r2
100075e8:	e037883a 	mov	sp,fp
100075ec:	df000017 	ldw	fp,0(sp)
100075f0:	dec00104 	addi	sp,sp,4
100075f4:	f800283a 	ret

100075f8 <_ZNSt17_Rb_tree_iteratorI9TileGroupEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
100075f8:	defffd04 	addi	sp,sp,-12
100075fc:	dfc00215 	stw	ra,8(sp)
10007600:	df000115 	stw	fp,4(sp)
10007604:	df000104 	addi	fp,sp,4
10007608:	e13fff15 	stw	r4,-4(fp)
	_M_node = _Rb_tree_decrement(_M_node);
1000760c:	e0bfff17 	ldw	r2,-4(fp)
10007610:	10800017 	ldw	r2,0(r2)
10007614:	1009883a 	mov	r4,r2
10007618:	00096240 	call	10009624 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
1000761c:	1007883a 	mov	r3,r2
10007620:	e0bfff17 	ldw	r2,-4(fp)
10007624:	10c00015 	stw	r3,0(r2)
	return *this;
10007628:	e0bfff17 	ldw	r2,-4(fp)
      }
1000762c:	e037883a 	mov	sp,fp
10007630:	dfc00117 	ldw	ra,4(sp)
10007634:	df000017 	ldw	fp,0(sp)
10007638:	dec00204 	addi	sp,sp,8
1000763c:	f800283a 	ret

10007640 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
10007640:	defffc04 	addi	sp,sp,-16
10007644:	dfc00315 	stw	ra,12(sp)
10007648:	df000215 	stw	fp,8(sp)
1000764c:	df000204 	addi	fp,sp,8
10007650:	e13ffe15 	stw	r4,-8(fp)
      { return _KeyOfValue()(_S_value(__x)); }
10007654:	e13ffe17 	ldw	r4,-8(fp)
10007658:	0007b1c0 	call	10007b1c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>
1000765c:	1007883a 	mov	r3,r2
10007660:	e0bfffc4 	addi	r2,fp,-1
10007664:	180b883a 	mov	r5,r3
10007668:	1009883a 	mov	r4,r2
1000766c:	0006e1c0 	call	10006e1c <_ZNKSt9_IdentityI9TileGroupEclERKS0_>
10007670:	0001883a 	nop
10007674:	e037883a 	mov	sp,fp
10007678:	dfc00117 	ldw	ra,4(sp)
1000767c:	df000017 	ldw	fp,0(sp)
10007680:	dec00204 	addi	sp,sp,8
10007684:	f800283a 	ret

10007688 <_ZNKSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_Alloc_nodeclIRKS0_EEPSt13_Rb_tree_nodeIS0_EOT_>:
	  operator()(_Arg&& __arg) const
10007688:	defffb04 	addi	sp,sp,-20
1000768c:	dfc00415 	stw	ra,16(sp)
10007690:	df000315 	stw	fp,12(sp)
10007694:	dc000215 	stw	r16,8(sp)
10007698:	df000304 	addi	fp,sp,12
1000769c:	e13ffe15 	stw	r4,-8(fp)
100076a0:	e17ffd15 	stw	r5,-12(fp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
100076a4:	e0bffe17 	ldw	r2,-8(fp)
100076a8:	14000017 	ldw	r16,0(r2)
100076ac:	e13ffd17 	ldw	r4,-12(fp)
100076b0:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
100076b4:	100b883a 	mov	r5,r2
100076b8:	8009883a 	mov	r4,r16
100076bc:	0007b4c0 	call	10007b4c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>
100076c0:	e6ffff04 	addi	sp,fp,-4
100076c4:	dfc00217 	ldw	ra,8(sp)
100076c8:	df000117 	ldw	fp,4(sp)
100076cc:	dc000017 	ldw	r16,0(sp)
100076d0:	dec00304 	addi	sp,sp,12
100076d4:	f800283a 	ret

100076d8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
100076d8:	defffe04 	addi	sp,sp,-8
100076dc:	df000115 	stw	fp,4(sp)
100076e0:	df000104 	addi	fp,sp,4
100076e4:	e13fff15 	stw	r4,-4(fp)
    { return static_cast<_Tp&&>(__t); }
100076e8:	e0bfff17 	ldw	r2,-4(fp)
100076ec:	e037883a 	mov	sp,fp
100076f0:	df000017 	ldw	fp,0(sp)
100076f4:	dec00104 	addi	sp,sp,4
100076f8:	f800283a 	ret

100076fc <_ZNK9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() const noexcept
100076fc:	defffe04 	addi	sp,sp,-8
10007700:	df000115 	stw	fp,4(sp)
10007704:	df000104 	addi	fp,sp,4
10007708:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<const void*>(&_M_storage); }
1000770c:	e0bfff17 	ldw	r2,-4(fp)
10007710:	e037883a 	mov	sp,fp
10007714:	df000017 	ldw	fp,0(sp)
10007718:	dec00104 	addi	sp,sp,4
1000771c:	f800283a 	ret

10007720 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
10007720:	defff804 	addi	sp,sp,-32
10007724:	dfc00715 	stw	ra,28(sp)
10007728:	df000615 	stw	fp,24(sp)
1000772c:	dc000515 	stw	r16,20(sp)
10007730:	df000604 	addi	fp,sp,24
10007734:	e13ffd15 	stw	r4,-12(fp)
10007738:	e17ffc15 	stw	r5,-16(fp)
1000773c:	e1bffb15 	stw	r6,-20(fp)
10007740:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
10007744:	e0bffc17 	ldw	r2,-16(fp)
10007748:	10001426 	beq	r2,zero,1000779c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x7c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1000774c:	e43ffd17 	ldw	r16,-12(fp)
10007750:	e13ffc17 	ldw	r4,-16(fp)
10007754:	00074f80 	call	100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007758:	e1bffa17 	ldw	r6,-24(fp)
1000775c:	100b883a 	mov	r5,r2
10007760:	8009883a 	mov	r4,r16
10007764:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007768:	1080005c 	xori	r2,r2,1
1000776c:	10803fcc 	andi	r2,r2,255
10007770:	10000626 	beq	r2,zero,1000778c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x6c>
	  __y = __x, __x = _S_left(__x);
10007774:	e0bffc17 	ldw	r2,-16(fp)
10007778:	e0bffb15 	stw	r2,-20(fp)
1000777c:	e13ffc17 	ldw	r4,-16(fp)
10007780:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007784:	e0bffc15 	stw	r2,-16(fp)
10007788:	003fee06 	br	10007744 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
1000778c:	e13ffc17 	ldw	r4,-16(fp)
10007790:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007794:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
10007798:	003fea06 	br	10007744 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
1000779c:	e0bffe04 	addi	r2,fp,-8
100077a0:	e17ffb17 	ldw	r5,-20(fp)
100077a4:	1009883a 	mov	r4,r2
100077a8:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
100077ac:	e0bffe17 	ldw	r2,-8(fp)
    }
100077b0:	e6ffff04 	addi	sp,fp,-4
100077b4:	dfc00217 	ldw	ra,8(sp)
100077b8:	df000117 	ldw	fp,4(sp)
100077bc:	dc000017 	ldw	r16,0(sp)
100077c0:	dec00304 	addi	sp,sp,12
100077c4:	f800283a 	ret

100077c8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100077c8:	defff804 	addi	sp,sp,-32
100077cc:	dfc00715 	stw	ra,28(sp)
100077d0:	df000615 	stw	fp,24(sp)
100077d4:	dc000515 	stw	r16,20(sp)
100077d8:	df000604 	addi	fp,sp,24
100077dc:	e13ffd15 	stw	r4,-12(fp)
100077e0:	e17ffc15 	stw	r5,-16(fp)
100077e4:	e1bffb15 	stw	r6,-20(fp)
100077e8:	e1fffa15 	stw	r7,-24(fp)
      while (__x != 0)
100077ec:	e0bffc17 	ldw	r2,-16(fp)
100077f0:	10001326 	beq	r2,zero,10007840 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x78>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
100077f4:	e43ffd17 	ldw	r16,-12(fp)
100077f8:	e13ffc17 	ldw	r4,-16(fp)
100077fc:	00074f80 	call	100074f8 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E>
10007800:	100d883a 	mov	r6,r2
10007804:	e17ffa17 	ldw	r5,-24(fp)
10007808:	8009883a 	mov	r4,r16
1000780c:	00075400 	call	10007540 <_ZNKSt4lessI9TileGroupEclERKS0_S3_>
10007810:	10803fcc 	andi	r2,r2,255
10007814:	10000626 	beq	r2,zero,10007830 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x68>
	  __y = __x, __x = _S_left(__x);
10007818:	e0bffc17 	ldw	r2,-16(fp)
1000781c:	e0bffb15 	stw	r2,-20(fp)
10007820:	e13ffc17 	ldw	r4,-16(fp)
10007824:	0006afc0 	call	10006afc <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base>
10007828:	e0bffc15 	stw	r2,-16(fp)
1000782c:	003fef06 	br	100077ec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
	  __x = _S_right(__x);
10007830:	e13ffc17 	ldw	r4,-16(fp)
10007834:	0006ad40 	call	10006ad4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base>
10007838:	e0bffc15 	stw	r2,-16(fp)
      while (__x != 0)
1000783c:	003feb06 	br	100077ec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS0_EPSt18_Rb_tree_node_baseRKS0_+0x24>
      return iterator(__y);
10007840:	e0bffe04 	addi	r2,fp,-8
10007844:	e17ffb17 	ldw	r5,-20(fp)
10007848:	1009883a 	mov	r4,r2
1000784c:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007850:	e0bffe17 	ldw	r2,-8(fp)
    }
10007854:	e6ffff04 	addi	sp,fp,-4
10007858:	dfc00217 	ldw	ra,8(sp)
1000785c:	df000117 	ldw	fp,4(sp)
10007860:	dc000017 	ldw	r16,0(sp)
10007864:	dec00304 	addi	sp,sp,12
10007868:	f800283a 	ret

1000786c <_ZNSt4pairISt17_Rb_tree_iteratorI9TileGroupES2_EC1IS2_S2_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
1000786c:	defffb04 	addi	sp,sp,-20
10007870:	dfc00415 	stw	ra,16(sp)
10007874:	df000315 	stw	fp,12(sp)
10007878:	df000304 	addi	fp,sp,12
1000787c:	e13fff15 	stw	r4,-4(fp)
10007880:	e17ffe15 	stw	r5,-8(fp)
10007884:	e1bffd15 	stw	r6,-12(fp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
10007888:	e13ffe17 	ldw	r4,-8(fp)
1000788c:	0006f800 	call	10006f80 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
10007890:	1007883a 	mov	r3,r2
10007894:	e0bfff17 	ldw	r2,-4(fp)
10007898:	18c00017 	ldw	r3,0(r3)
1000789c:	10c00015 	stw	r3,0(r2)
100078a0:	e13ffd17 	ldw	r4,-12(fp)
100078a4:	0006f800 	call	10006f80 <_ZSt7forwardISt17_Rb_tree_iteratorI9TileGroupEEOT_RNSt16remove_referenceIS3_E4typeE>
100078a8:	1007883a 	mov	r3,r2
100078ac:	e0bfff17 	ldw	r2,-4(fp)
100078b0:	18c00017 	ldw	r3,0(r3)
100078b4:	10c00115 	stw	r3,4(r2)
100078b8:	0001883a 	nop
100078bc:	e037883a 	mov	sp,fp
100078c0:	dfc00117 	ldw	ra,4(sp)
100078c4:	df000017 	ldw	fp,0(sp)
100078c8:	dec00204 	addi	sp,sp,8
100078cc:	f800283a 	ret

100078d0 <_ZNKSt23_Rb_tree_const_iteratorI9TileGroupEeqERKS1_>:
      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
100078d0:	defffd04 	addi	sp,sp,-12
100078d4:	df000215 	stw	fp,8(sp)
100078d8:	df000204 	addi	fp,sp,8
100078dc:	e13fff15 	stw	r4,-4(fp)
100078e0:	e17ffe15 	stw	r5,-8(fp)
      { return _M_node == __x._M_node; }
100078e4:	e0bfff17 	ldw	r2,-4(fp)
100078e8:	10c00017 	ldw	r3,0(r2)
100078ec:	e0bffe17 	ldw	r2,-8(fp)
100078f0:	10800017 	ldw	r2,0(r2)
100078f4:	1885003a 	cmpeq	r2,r3,r2
100078f8:	e037883a 	mov	sp,fp
100078fc:	df000017 	ldw	fp,0(sp)
10007900:	dec00104 	addi	sp,sp,4
10007904:	f800283a 	ret

10007908 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
10007908:	defffc04 	addi	sp,sp,-16
1000790c:	dfc00315 	stw	ra,12(sp)
10007910:	df000215 	stw	fp,8(sp)
10007914:	df000204 	addi	fp,sp,8
10007918:	e13ffe15 	stw	r4,-8(fp)
      { return iterator(&this->_M_impl._M_header); }
1000791c:	e0bffe17 	ldw	r2,-8(fp)
10007920:	10c00104 	addi	r3,r2,4
10007924:	e0bfff04 	addi	r2,fp,-4
10007928:	180b883a 	mov	r5,r3
1000792c:	1009883a 	mov	r4,r2
10007930:	00070040 	call	10007004 <_ZNSt17_Rb_tree_iteratorI9TileGroupEC1EPSt18_Rb_tree_node_base>
10007934:	e0bfff17 	ldw	r2,-4(fp)
10007938:	e037883a 	mov	sp,fp
1000793c:	dfc00117 	ldw	ra,4(sp)
10007940:	df000017 	ldw	fp,0(sp)
10007944:	dec00204 	addi	sp,sp,8
10007948:	f800283a 	ret

1000794c <_ZNSt23_Rb_tree_const_iteratorI9TileGroupEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
1000794c:	defffb04 	addi	sp,sp,-20
10007950:	dfc00415 	stw	ra,16(sp)
10007954:	df000315 	stw	fp,12(sp)
10007958:	df000304 	addi	fp,sp,12
1000795c:	e13ffe15 	stw	r4,-8(fp)
10007960:	e17ffd15 	stw	r5,-12(fp)
	_Self __tmp = *this;
10007964:	e0bffe17 	ldw	r2,-8(fp)
10007968:	10800017 	ldw	r2,0(r2)
1000796c:	e0bfff15 	stw	r2,-4(fp)
	_M_node = _Rb_tree_increment(_M_node);
10007970:	e0bffe17 	ldw	r2,-8(fp)
10007974:	10800017 	ldw	r2,0(r2)
10007978:	1009883a 	mov	r4,r2
1000797c:	00096200 	call	10009620 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
10007980:	1007883a 	mov	r3,r2
10007984:	e0bffe17 	ldw	r2,-8(fp)
10007988:	10c00015 	stw	r3,0(r2)
	return __tmp;
1000798c:	e0bfff17 	ldw	r2,-4(fp)
      }
10007990:	e037883a 	mov	sp,fp
10007994:	dfc00117 	ldw	ra,4(sp)
10007998:	df000017 	ldw	fp,0(sp)
1000799c:	dec00204 	addi	sp,sp,8
100079a0:	f800283a 	ret

100079a4 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS0_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
100079a4:	defffb04 	addi	sp,sp,-20
100079a8:	dfc00415 	stw	ra,16(sp)
100079ac:	df000315 	stw	fp,12(sp)
100079b0:	df000304 	addi	fp,sp,12
100079b4:	e13ffe15 	stw	r4,-8(fp)
100079b8:	e17ffd15 	stw	r5,-12(fp)
				(const_cast<_Base_ptr>(__position._M_node),
100079bc:	e0fffd17 	ldw	r3,-12(fp)
				 this->_M_impl._M_header));
100079c0:	e0bffe17 	ldw	r2,-8(fp)
100079c4:	10800104 	addi	r2,r2,4
				(const_cast<_Base_ptr>(__position._M_node),
100079c8:	100b883a 	mov	r5,r2
100079cc:	1809883a 	mov	r4,r3
100079d0:	00099380 	call	10009938 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
100079d4:	e0bfff15 	stw	r2,-4(fp)
      _M_drop_node(__y);
100079d8:	e17fff17 	ldw	r5,-4(fp)
100079dc:	e13ffe17 	ldw	r4,-8(fp)
100079e0:	0006b240 	call	10006b24 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS0_E>
      --_M_impl._M_node_count;
100079e4:	e0bffe17 	ldw	r2,-8(fp)
100079e8:	10800517 	ldw	r2,20(r2)
100079ec:	10ffffc4 	addi	r3,r2,-1
100079f0:	e0bffe17 	ldw	r2,-8(fp)
100079f4:	10c00515 	stw	r3,20(r2)
    }
100079f8:	0001883a 	nop
100079fc:	e037883a 	mov	sp,fp
10007a00:	dfc00117 	ldw	ra,4(sp)
10007a04:	df000017 	ldw	fp,0(sp)
10007a08:	dec00204 	addi	sp,sp,8
10007a0c:	f800283a 	ret

10007a10 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
10007a10:	defffe04 	addi	sp,sp,-8
10007a14:	df000115 	stw	fp,4(sp)
10007a18:	df000104 	addi	fp,sp,4
10007a1c:	e13fff15 	stw	r4,-4(fp)
      { return this->_M_impl; }
10007a20:	e0bfff17 	ldw	r2,-4(fp)
10007a24:	e037883a 	mov	sp,fp
10007a28:	df000017 	ldw	fp,0(sp)
10007a2c:	dec00104 	addi	sp,sp,4
10007a30:	f800283a 	ret

10007a34 <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>:
      _M_valptr()
10007a34:	defffd04 	addi	sp,sp,-12
10007a38:	dfc00215 	stw	ra,8(sp)
10007a3c:	df000115 	stw	fp,4(sp)
10007a40:	df000104 	addi	fp,sp,4
10007a44:	e13fff15 	stw	r4,-4(fp)
      { return _M_storage._M_ptr(); }
10007a48:	e0bfff17 	ldw	r2,-4(fp)
10007a4c:	10800404 	addi	r2,r2,16
10007a50:	1009883a 	mov	r4,r2
10007a54:	0007ba00 	call	10007ba0 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>
10007a58:	e037883a 	mov	sp,fp
10007a5c:	dfc00117 	ldw	ra,4(sp)
10007a60:	df000017 	ldw	fp,0(sp)
10007a64:	dec00204 	addi	sp,sp,8
10007a68:	f800283a 	ret

10007a6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE7destroyIS1_EEvRS3_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
10007a6c:	defffc04 	addi	sp,sp,-16
10007a70:	dfc00315 	stw	ra,12(sp)
10007a74:	df000215 	stw	fp,8(sp)
10007a78:	df000204 	addi	fp,sp,8
10007a7c:	e13fff15 	stw	r4,-4(fp)
10007a80:	e17ffe15 	stw	r5,-8(fp)
	{ __a.destroy(__p); }
10007a84:	e17ffe17 	ldw	r5,-8(fp)
10007a88:	e13fff17 	ldw	r4,-4(fp)
10007a8c:	0007bd00 	call	10007bd0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>
10007a90:	0001883a 	nop
10007a94:	e037883a 	mov	sp,fp
10007a98:	dfc00117 	ldw	ra,4(sp)
10007a9c:	df000017 	ldw	fp,0(sp)
10007aa0:	dec00204 	addi	sp,sp,8
10007aa4:	f800283a 	ret

10007aa8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE10deallocateERS3_PS2_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
10007aa8:	defffb04 	addi	sp,sp,-20
10007aac:	dfc00415 	stw	ra,16(sp)
10007ab0:	df000315 	stw	fp,12(sp)
10007ab4:	df000304 	addi	fp,sp,12
10007ab8:	e13fff15 	stw	r4,-4(fp)
10007abc:	e17ffe15 	stw	r5,-8(fp)
10007ac0:	e1bffd15 	stw	r6,-12(fp)
      { __a.deallocate(__p, __n); }
10007ac4:	e1bffd17 	ldw	r6,-12(fp)
10007ac8:	e17ffe17 	ldw	r5,-8(fp)
10007acc:	e13fff17 	ldw	r4,-4(fp)
10007ad0:	0007bf80 	call	10007bf8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>
10007ad4:	0001883a 	nop
10007ad8:	e037883a 	mov	sp,fp
10007adc:	dfc00117 	ldw	ra,4(sp)
10007ae0:	df000017 	ldw	fp,0(sp)
10007ae4:	dec00204 	addi	sp,sp,8
10007ae8:	f800283a 	ret

10007aec <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E>:
      _S_value(_Const_Link_type __x)
10007aec:	defffd04 	addi	sp,sp,-12
10007af0:	dfc00215 	stw	ra,8(sp)
10007af4:	df000115 	stw	fp,4(sp)
10007af8:	df000104 	addi	fp,sp,4
10007afc:	e13fff15 	stw	r4,-4(fp)
      { return *__x->_M_valptr(); }
10007b00:	e13fff17 	ldw	r4,-4(fp)
10007b04:	00069500 	call	10006950 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007b08:	e037883a 	mov	sp,fp
10007b0c:	dfc00117 	ldw	ra,4(sp)
10007b10:	df000017 	ldw	fp,0(sp)
10007b14:	dec00204 	addi	sp,sp,8
10007b18:	f800283a 	ret

10007b1c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base>:
      _S_value(_Const_Base_ptr __x)
10007b1c:	defffd04 	addi	sp,sp,-12
10007b20:	dfc00215 	stw	ra,8(sp)
10007b24:	df000115 	stw	fp,4(sp)
10007b28:	df000104 	addi	fp,sp,4
10007b2c:	e13fff15 	stw	r4,-4(fp)
      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
10007b30:	e13fff17 	ldw	r4,-4(fp)
10007b34:	00069500 	call	10006950 <_ZNKSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007b38:	e037883a 	mov	sp,fp
10007b3c:	dfc00117 	ldw	ra,4(sp)
10007b40:	df000017 	ldw	fp,0(sp)
10007b44:	dec00204 	addi	sp,sp,8
10007b48:	f800283a 	ret

10007b4c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeIJRKS0_EEEPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_create_node(_Args&&... __args)
10007b4c:	defffb04 	addi	sp,sp,-20
10007b50:	dfc00415 	stw	ra,16(sp)
10007b54:	df000315 	stw	fp,12(sp)
10007b58:	df000304 	addi	fp,sp,12
10007b5c:	e13ffe15 	stw	r4,-8(fp)
10007b60:	e17ffd15 	stw	r5,-12(fp)
	  _Link_type __tmp = _M_get_node();
10007b64:	e13ffe17 	ldw	r4,-8(fp)
10007b68:	0007c340 	call	10007c34 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>
10007b6c:	e0bfff15 	stw	r2,-4(fp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
10007b70:	e13ffd17 	ldw	r4,-12(fp)
10007b74:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007b78:	100d883a 	mov	r6,r2
10007b7c:	e17fff17 	ldw	r5,-4(fp)
10007b80:	e13ffe17 	ldw	r4,-8(fp)
10007b84:	0007c700 	call	10007c70 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>
	  return __tmp;
10007b88:	e0bfff17 	ldw	r2,-4(fp)
	}
10007b8c:	e037883a 	mov	sp,fp
10007b90:	dfc00117 	ldw	ra,4(sp)
10007b94:	df000017 	ldw	fp,0(sp)
10007b98:	dec00204 	addi	sp,sp,8
10007b9c:	f800283a 	ret

10007ba0 <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE6_M_ptrEv>:
      _M_ptr() noexcept
10007ba0:	defffd04 	addi	sp,sp,-12
10007ba4:	dfc00215 	stw	ra,8(sp)
10007ba8:	df000115 	stw	fp,4(sp)
10007bac:	df000104 	addi	fp,sp,4
10007bb0:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<_Tp*>(_M_addr()); }
10007bb4:	e13fff17 	ldw	r4,-4(fp)
10007bb8:	0007ddc0 	call	10007ddc <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>
10007bbc:	e037883a 	mov	sp,fp
10007bc0:	dfc00117 	ldw	ra,4(sp)
10007bc4:	df000017 	ldw	fp,0(sp)
10007bc8:	dec00204 	addi	sp,sp,8
10007bcc:	f800283a 	ret

10007bd0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE7destroyIS2_EEvPT_>:
	construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p) { __p->~_Up(); }
10007bd0:	defffd04 	addi	sp,sp,-12
10007bd4:	df000215 	stw	fp,8(sp)
10007bd8:	df000204 	addi	fp,sp,8
10007bdc:	e13fff15 	stw	r4,-4(fp)
10007be0:	e17ffe15 	stw	r5,-8(fp)
10007be4:	0001883a 	nop
10007be8:	e037883a 	mov	sp,fp
10007bec:	df000017 	ldw	fp,0(sp)
10007bf0:	dec00104 	addi	sp,sp,4
10007bf4:	f800283a 	ret

10007bf8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE10deallocateEPS3_j>:
      deallocate(pointer __p, size_type)
10007bf8:	defffb04 	addi	sp,sp,-20
10007bfc:	dfc00415 	stw	ra,16(sp)
10007c00:	df000315 	stw	fp,12(sp)
10007c04:	df000304 	addi	fp,sp,12
10007c08:	e13fff15 	stw	r4,-4(fp)
10007c0c:	e17ffe15 	stw	r5,-8(fp)
10007c10:	e1bffd15 	stw	r6,-12(fp)
	::operator delete(__p);
10007c14:	e13ffe17 	ldw	r4,-8(fp)
10007c18:	00085040 	call	10008504 <_ZdlPv>
      }
10007c1c:	0001883a 	nop
10007c20:	e037883a 	mov	sp,fp
10007c24:	dfc00117 	ldw	ra,4(sp)
10007c28:	df000017 	ldw	fp,0(sp)
10007c2c:	dec00204 	addi	sp,sp,8
10007c30:	f800283a 	ret

10007c34 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv>:
      _M_get_node()
10007c34:	defffd04 	addi	sp,sp,-12
10007c38:	dfc00215 	stw	ra,8(sp)
10007c3c:	df000115 	stw	fp,4(sp)
10007c40:	df000104 	addi	fp,sp,4
10007c44:	e13fff15 	stw	r4,-4(fp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
10007c48:	e13fff17 	ldw	r4,-4(fp)
10007c4c:	0007a100 	call	10007a10 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007c50:	01400044 	movi	r5,1
10007c54:	1009883a 	mov	r4,r2
10007c58:	0007e000 	call	10007e00 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>
10007c5c:	e037883a 	mov	sp,fp
10007c60:	dfc00117 	ldw	ra,4(sp)
10007c64:	df000017 	ldw	fp,0(sp)
10007c68:	dec00204 	addi	sp,sp,8
10007c6c:	f800283a 	ret

10007c70 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
10007c70:	deffe404 	addi	sp,sp,-112
10007c74:	dfc01b15 	stw	ra,108(sp)
10007c78:	df001a15 	stw	fp,104(sp)
10007c7c:	ddc01915 	stw	r23,100(sp)
10007c80:	dd801815 	stw	r22,96(sp)
10007c84:	dd401715 	stw	r21,92(sp)
10007c88:	dd001615 	stw	r20,88(sp)
10007c8c:	dcc01515 	stw	r19,84(sp)
10007c90:	dc801415 	stw	r18,80(sp)
10007c94:	dc401315 	stw	r17,76(sp)
10007c98:	dc001215 	stw	r16,72(sp)
10007c9c:	df001a04 	addi	fp,sp,104
10007ca0:	e13ff715 	stw	r4,-36(fp)
10007ca4:	e17ff615 	stw	r5,-40(fp)
10007ca8:	e1bff515 	stw	r6,-44(fp)
10007cac:	00840074 	movhi	r2,4097
10007cb0:	10a2a704 	addi	r2,r2,-30052
10007cb4:	e0bfee15 	stw	r2,-72(fp)
10007cb8:	008400b4 	movhi	r2,4098
10007cbc:	10914c04 	addi	r2,r2,17712
10007cc0:	e0bfef15 	stw	r2,-68(fp)
10007cc4:	e0bff004 	addi	r2,fp,-64
10007cc8:	e0fff804 	addi	r3,fp,-32
10007ccc:	10c00015 	stw	r3,0(r2)
10007cd0:	00c40034 	movhi	r3,4096
10007cd4:	18df4f04 	addi	r3,r3,32060
10007cd8:	10c00115 	stw	r3,4(r2)
10007cdc:	16c00215 	stw	sp,8(r2)
10007ce0:	e0bfe804 	addi	r2,fp,-96
10007ce4:	1009883a 	mov	r4,r2
10007ce8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
	      ::new(__node) _Rb_tree_node<_Val>;
10007cec:	e0bff617 	ldw	r2,-40(fp)
10007cf0:	100b883a 	mov	r5,r2
10007cf4:	01000504 	movi	r4,20
10007cf8:	00060900 	call	10006090 <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
10007cfc:	e13ff717 	ldw	r4,-36(fp)
10007d00:	0007a100 	call	10007a10 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv>
10007d04:	e0bfe715 	stw	r2,-100(fp)
10007d08:	e13ff617 	ldw	r4,-40(fp)
10007d0c:	0007a340 	call	10007a34 <_ZNSt13_Rb_tree_nodeI9TileGroupE9_M_valptrEv>
10007d10:	e0bfe615 	stw	r2,-104(fp)
10007d14:	e13ff517 	ldw	r4,-44(fp)
10007d18:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007d1c:	1007883a 	mov	r3,r2
10007d20:	00800044 	movi	r2,1
10007d24:	e0bfe915 	stw	r2,-92(fp)
10007d28:	180d883a 	mov	r6,r3
10007d2c:	e17fe617 	ldw	r5,-104(fp)
10007d30:	e13fe717 	ldw	r4,-100(fp)
10007d34:	0007e3c0 	call	10007e3c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>
	}
10007d38:	00001806 	br	10007d9c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x12c>
10007d3c:	e7000804 	addi	fp,fp,32
10007d40:	e0ffea17 	ldw	r3,-88(fp)
10007d44:	e0bfe917 	ldw	r2,-92(fp)
10007d48:	10000326 	beq	r2,zero,10007d58 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0xe8>
10007d4c:	10bfffc4 	addi	r2,r2,-1
10007d50:	10000a26 	beq	r2,zero,10007d7c <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE17_M_construct_nodeIJRKS0_EEEvPSt13_Rb_tree_nodeIS0_EDpOT_+0x10c>
10007d54:	003b68fa 	trap	3
10007d58:	1805883a 	mov	r2,r3
	  __catch(...)
10007d5c:	1009883a 	mov	r4,r2
10007d60:	00080480 	call	10008048 <__cxa_begin_catch>
	      _M_put_node(__node);
10007d64:	e17ff617 	ldw	r5,-40(fp)
10007d68:	e13ff717 	ldw	r4,-36(fp)
10007d6c:	00074540 	call	10007454 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E>
	      __throw_exception_again;
10007d70:	00800084 	movi	r2,2
10007d74:	e0bfe915 	stw	r2,-92(fp)
10007d78:	00084800 	call	10008480 <__cxa_rethrow>
10007d7c:	e0ffe715 	stw	r3,-100(fp)
	  __catch(...)
10007d80:	e03fe915 	stw	zero,-92(fp)
10007d84:	00080f40 	call	100080f4 <__cxa_end_catch>
10007d88:	e0ffe717 	ldw	r3,-100(fp)
10007d8c:	00bfffc4 	movi	r2,-1
10007d90:	e0bfe915 	stw	r2,-92(fp)
10007d94:	1809883a 	mov	r4,r3
10007d98:	00145640 	call	10014564 <_Unwind_SjLj_Resume>
10007d9c:	e0bfe804 	addi	r2,fp,-96
10007da0:	1009883a 	mov	r4,r2
10007da4:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
	}
10007da8:	e6fff804 	addi	sp,fp,-32
10007dac:	dfc00917 	ldw	ra,36(sp)
10007db0:	df000817 	ldw	fp,32(sp)
10007db4:	ddc00717 	ldw	r23,28(sp)
10007db8:	dd800617 	ldw	r22,24(sp)
10007dbc:	dd400517 	ldw	r21,20(sp)
10007dc0:	dd000417 	ldw	r20,16(sp)
10007dc4:	dcc00317 	ldw	r19,12(sp)
10007dc8:	dc800217 	ldw	r18,8(sp)
10007dcc:	dc400117 	ldw	r17,4(sp)
10007dd0:	dc000017 	ldw	r16,0(sp)
10007dd4:	dec00a04 	addi	sp,sp,40
10007dd8:	f800283a 	ret

10007ddc <_ZN9__gnu_cxx16__aligned_membufI9TileGroupE7_M_addrEv>:
      _M_addr() noexcept
10007ddc:	defffe04 	addi	sp,sp,-8
10007de0:	df000115 	stw	fp,4(sp)
10007de4:	df000104 	addi	fp,sp,4
10007de8:	e13fff15 	stw	r4,-4(fp)
      { return static_cast<void*>(&_M_storage); }
10007dec:	e0bfff17 	ldw	r2,-4(fp)
10007df0:	e037883a 	mov	sp,fp
10007df4:	df000017 	ldw	fp,0(sp)
10007df8:	dec00104 	addi	sp,sp,4
10007dfc:	f800283a 	ret

10007e00 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE8allocateERS3_j>:
      allocate(allocator_type& __a, size_type __n)
10007e00:	defffc04 	addi	sp,sp,-16
10007e04:	dfc00315 	stw	ra,12(sp)
10007e08:	df000215 	stw	fp,8(sp)
10007e0c:	df000204 	addi	fp,sp,8
10007e10:	e13fff15 	stw	r4,-4(fp)
10007e14:	e17ffe15 	stw	r5,-8(fp)
      { return __a.allocate(__n); }
10007e18:	000d883a 	mov	r6,zero
10007e1c:	e17ffe17 	ldw	r5,-8(fp)
10007e20:	e13fff17 	ldw	r4,-4(fp)
10007e24:	0007e880 	call	10007e88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>
10007e28:	e037883a 	mov	sp,fp
10007e2c:	dfc00117 	ldw	ra,4(sp)
10007e30:	df000017 	ldw	fp,0(sp)
10007e34:	dec00204 	addi	sp,sp,8
10007e38:	f800283a 	ret

10007e3c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeI9TileGroupEEE9constructIS1_JRKS1_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
10007e3c:	defffb04 	addi	sp,sp,-20
10007e40:	dfc00415 	stw	ra,16(sp)
10007e44:	df000315 	stw	fp,12(sp)
10007e48:	df000304 	addi	fp,sp,12
10007e4c:	e13fff15 	stw	r4,-4(fp)
10007e50:	e17ffe15 	stw	r5,-8(fp)
10007e54:	e1bffd15 	stw	r6,-12(fp)
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
10007e58:	e13ffd17 	ldw	r4,-12(fp)
10007e5c:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007e60:	100d883a 	mov	r6,r2
10007e64:	e17ffe17 	ldw	r5,-8(fp)
10007e68:	e13fff17 	ldw	r4,-4(fp)
10007e6c:	0007ee80 	call	10007ee8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
10007e70:	0001883a 	nop
10007e74:	e037883a 	mov	sp,fp
10007e78:	dfc00117 	ldw	ra,4(sp)
10007e7c:	df000017 	ldw	fp,0(sp)
10007e80:	dec00204 	addi	sp,sp,8
10007e84:	f800283a 	ret

10007e88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
10007e88:	defffb04 	addi	sp,sp,-20
10007e8c:	dfc00415 	stw	ra,16(sp)
10007e90:	df000315 	stw	fp,12(sp)
10007e94:	df000304 	addi	fp,sp,12
10007e98:	e13fff15 	stw	r4,-4(fp)
10007e9c:	e17ffe15 	stw	r5,-8(fp)
10007ea0:	e1bffd15 	stw	r6,-12(fp)
	if (__n > this->max_size())
10007ea4:	e13fff17 	ldw	r4,-4(fp)
10007ea8:	0007f500 	call	10007f50 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>
10007eac:	1007883a 	mov	r3,r2
10007eb0:	e0bffe17 	ldw	r2,-8(fp)
10007eb4:	1885803a 	cmpltu	r2,r3,r2
10007eb8:	10803fcc 	andi	r2,r2,255
10007ebc:	10000126 	beq	r2,zero,10007ec4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8allocateEjPKv+0x3c>
	  std::__throw_bad_alloc();
10007ec0:	0009e540 	call	10009e54 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
10007ec4:	e0bffe17 	ldw	r2,-8(fp)
10007ec8:	10800524 	muli	r2,r2,20
10007ecc:	1009883a 	mov	r4,r2
10007ed0:	0007fb00 	call	10007fb0 <_Znwj>
      }
10007ed4:	e037883a 	mov	sp,fp
10007ed8:	dfc00117 	ldw	ra,4(sp)
10007edc:	df000017 	ldw	fp,0(sp)
10007ee0:	dec00204 	addi	sp,sp,8
10007ee4:	f800283a 	ret

10007ee8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
10007ee8:	defffa04 	addi	sp,sp,-24
10007eec:	dfc00515 	stw	ra,20(sp)
10007ef0:	df000415 	stw	fp,16(sp)
10007ef4:	dc000315 	stw	r16,12(sp)
10007ef8:	df000404 	addi	fp,sp,16
10007efc:	e13ffe15 	stw	r4,-8(fp)
10007f00:	e17ffd15 	stw	r5,-12(fp)
10007f04:	e1bffc15 	stw	r6,-16(fp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
10007f08:	e13ffc17 	ldw	r4,-16(fp)
10007f0c:	00066e80 	call	100066e8 <_ZSt7forwardIRK9TileGroupEOT_RNSt16remove_referenceIS3_E4typeE>
10007f10:	1021883a 	mov	r16,r2
10007f14:	e0bffd17 	ldw	r2,-12(fp)
10007f18:	100b883a 	mov	r5,r2
10007f1c:	01000084 	movi	r4,2
10007f20:	00060900 	call	10006090 <_ZnwjPv>
10007f24:	80c00003 	ldbu	r3,0(r16)
10007f28:	10c00005 	stb	r3,0(r2)
10007f2c:	80c00043 	ldbu	r3,1(r16)
10007f30:	10c00045 	stb	r3,1(r2)
10007f34:	0001883a 	nop
10007f38:	e6ffff04 	addi	sp,fp,-4
10007f3c:	dfc00217 	ldw	ra,8(sp)
10007f40:	df000117 	ldw	fp,4(sp)
10007f44:	dc000017 	ldw	r16,0(sp)
10007f48:	dec00304 	addi	sp,sp,12
10007f4c:	f800283a 	ret

10007f50 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI9TileGroupEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
10007f50:	defffe04 	addi	sp,sp,-8
10007f54:	df000115 	stw	fp,4(sp)
10007f58:	df000104 	addi	fp,sp,4
10007f5c:	e13fff15 	stw	r4,-4(fp)
      { return size_t(-1) / sizeof(_Tp); }
10007f60:	00833374 	movhi	r2,3277
10007f64:	10b33304 	addi	r2,r2,-13108
10007f68:	e037883a 	mov	sp,fp
10007f6c:	df000017 	ldw	fp,0(sp)
10007f70:	dec00104 	addi	sp,sp,4
10007f74:	f800283a 	ret

10007f78 <_ZNSt3setI9TileGroupSt4lessIS0_ESaIS0_EED1Ev>:
      ~set() = default;
10007f78:	defffd04 	addi	sp,sp,-12
10007f7c:	dfc00215 	stw	ra,8(sp)
10007f80:	df000115 	stw	fp,4(sp)
10007f84:	df000104 	addi	fp,sp,4
10007f88:	e13fff15 	stw	r4,-4(fp)
10007f8c:	e0bfff17 	ldw	r2,-4(fp)
10007f90:	1009883a 	mov	r4,r2
10007f94:	00063840 	call	10006384 <_ZNSt8_Rb_treeI9TileGroupS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev>
10007f98:	0001883a 	nop
10007f9c:	e037883a 	mov	sp,fp
10007fa0:	dfc00117 	ldw	ra,4(sp)
10007fa4:	df000017 	ldw	fp,0(sp)
10007fa8:	dec00204 	addi	sp,sp,8
10007fac:	f800283a 	ret

10007fb0 <_Znwj>:
10007fb0:	defffe04 	addi	sp,sp,-8
10007fb4:	dc000015 	stw	r16,0(sp)
10007fb8:	dfc00115 	stw	ra,4(sp)
10007fbc:	2021883a 	mov	r16,r4
10007fc0:	2000011e 	bne	r4,zero,10007fc8 <_Znwj+0x18>
10007fc4:	04000044 	movi	r16,1
10007fc8:	8009883a 	mov	r4,r16
10007fcc:	0014e700 	call	10014e70 <malloc>
10007fd0:	10000426 	beq	r2,zero,10007fe4 <_Znwj+0x34>
10007fd4:	dfc00117 	ldw	ra,4(sp)
10007fd8:	dc000017 	ldw	r16,0(sp)
10007fdc:	dec00204 	addi	sp,sp,8
10007fe0:	f800283a 	ret
10007fe4:	00080340 	call	10008034 <_ZSt15get_new_handlerv>
10007fe8:	10000226 	beq	r2,zero,10007ff4 <_Znwj+0x44>
10007fec:	103ee83a 	callr	r2
10007ff0:	003ff506 	br	10007fc8 <_Znwj+0x18>
10007ff4:	01000104 	movi	r4,4
10007ff8:	00094040 	call	10009404 <__cxa_allocate_exception>
10007ffc:	00c400b4 	movhi	r3,4098
10008000:	01840074 	movhi	r6,4097
10008004:	014400b4 	movhi	r5,4098
10008008:	18d4e704 	addi	r3,r3,21404
1000800c:	31a14504 	addi	r6,r6,-31468
10008010:	2954e204 	addi	r5,r5,21384
10008014:	1009883a 	mov	r4,r2
10008018:	10c00015 	stw	r3,0(r2)
1000801c:	00083ec0 	call	100083ec <__cxa_throw>

10008020 <_ZSt15set_new_handlerPFvvE>:
10008020:	00c400f4 	movhi	r3,4099
10008024:	008400f4 	movhi	r2,4099
10008028:	10aaa617 	ldw	r2,-21864(r2)
1000802c:	192aa615 	stw	r4,-21864(r3)
10008030:	f800283a 	ret

10008034 <_ZSt15get_new_handlerv>:
10008034:	008400f4 	movhi	r2,4099
10008038:	10aaa617 	ldw	r2,-21864(r2)
1000803c:	f800283a 	ret

10008040 <__cxa_get_exception_ptr>:
10008040:	20bfff17 	ldw	r2,-4(r4)
10008044:	f800283a 	ret

10008048 <__cxa_begin_catch>:
10008048:	defffe04 	addi	sp,sp,-8
1000804c:	dc000015 	stw	r16,0(sp)
10008050:	dfc00115 	stw	ra,4(sp)
10008054:	2021883a 	mov	r16,r4
10008058:	000c6d00 	call	1000c6d0 <__cxa_get_globals>
1000805c:	80c00017 	ldw	r3,0(r16)
10008060:	81000117 	ldw	r4,4(r16)
10008064:	016f3574 	movhi	r5,48341
10008068:	29754004 	addi	r5,r5,-11008
1000806c:	01ae2cb4 	movhi	r6,47282
10008070:	31aaaf04 	addi	r6,r6,-21828
10008074:	194b883a 	add	r5,r3,r5
10008078:	2189883a 	add	r4,r4,r6
1000807c:	28c7803a 	cmpltu	r3,r5,r3
10008080:	1907883a 	add	r3,r3,r4
10008084:	81bff504 	addi	r6,r16,-44
10008088:	11000017 	ldw	r4,0(r2)
1000808c:	18000726 	beq	r3,zero,100080ac <__cxa_begin_catch+0x64>
10008090:	2000171e 	bne	r4,zero,100080f0 <__cxa_begin_catch+0xa8>
10008094:	11800015 	stw	r6,0(r2)
10008098:	2005883a 	mov	r2,r4
1000809c:	dfc00117 	ldw	ra,4(sp)
100080a0:	dc000017 	ldw	r16,0(sp)
100080a4:	dec00204 	addi	sp,sp,8
100080a8:	f800283a 	ret
100080ac:	294000a8 	cmpgeui	r5,r5,2
100080b0:	283ff71e 	bne	r5,zero,10008090 <__cxa_begin_catch+0x48>
100080b4:	80fffa17 	ldw	r3,-24(r16)
100080b8:	18000a16 	blt	r3,zero,100080e4 <__cxa_begin_catch+0x9c>
100080bc:	18c00044 	addi	r3,r3,1
100080c0:	11400117 	ldw	r5,4(r2)
100080c4:	80fffa15 	stw	r3,-24(r16)
100080c8:	28ffffc4 	addi	r3,r5,-1
100080cc:	10c00115 	stw	r3,4(r2)
100080d0:	21800226 	beq	r4,r6,100080dc <__cxa_begin_catch+0x94>
100080d4:	813ff915 	stw	r4,-28(r16)
100080d8:	11800015 	stw	r6,0(r2)
100080dc:	813fff17 	ldw	r4,-4(r16)
100080e0:	003fed06 	br	10008098 <__cxa_begin_catch+0x50>
100080e4:	01400044 	movi	r5,1
100080e8:	28c7c83a 	sub	r3,r5,r3
100080ec:	003ff406 	br	100080c0 <__cxa_begin_catch+0x78>
100080f0:	00082a80 	call	100082a8 <_ZSt9terminatev>

100080f4 <__cxa_end_catch>:
100080f4:	deffff04 	addi	sp,sp,-4
100080f8:	dfc00015 	stw	ra,0(sp)
100080fc:	000c6c40 	call	1000c6c4 <__cxa_get_globals_fast>
10008100:	11000017 	ldw	r4,0(r2)
10008104:	20001326 	beq	r4,zero,10008154 <__cxa_end_catch+0x60>
10008108:	20c00b17 	ldw	r3,44(r4)
1000810c:	21800c17 	ldw	r6,48(r4)
10008110:	016f3574 	movhi	r5,48341
10008114:	29754004 	addi	r5,r5,-11008
10008118:	01ee2cb4 	movhi	r7,47282
1000811c:	39eaaf04 	addi	r7,r7,-21828
10008120:	194b883a 	add	r5,r3,r5
10008124:	28c7803a 	cmpltu	r3,r5,r3
10008128:	31cd883a 	add	r6,r6,r7
1000812c:	1987883a 	add	r3,r3,r6
10008130:	1800101e 	bne	r3,zero,10008174 <__cxa_end_catch+0x80>
10008134:	294000a8 	cmpgeui	r5,r5,2
10008138:	28000e1e 	bne	r5,zero,10008174 <__cxa_end_catch+0x80>
1000813c:	20c00517 	ldw	r3,20(r4)
10008140:	18000716 	blt	r3,zero,10008160 <__cxa_end_catch+0x6c>
10008144:	18ffffc4 	addi	r3,r3,-1
10008148:	18000f26 	beq	r3,zero,10008188 <__cxa_end_catch+0x94>
1000814c:	18001416 	blt	r3,zero,100081a0 <__cxa_end_catch+0xac>
10008150:	20c00515 	stw	r3,20(r4)
10008154:	dfc00017 	ldw	ra,0(sp)
10008158:	dec00104 	addi	sp,sp,4
1000815c:	f800283a 	ret
10008160:	18c00044 	addi	r3,r3,1
10008164:	183ffa1e 	bne	r3,zero,10008150 <__cxa_end_catch+0x5c>
10008168:	21400417 	ldw	r5,16(r4)
1000816c:	11400015 	stw	r5,0(r2)
10008170:	003ff706 	br	10008150 <__cxa_end_catch+0x5c>
10008174:	21000b04 	addi	r4,r4,44
10008178:	10000015 	stw	zero,0(r2)
1000817c:	dfc00017 	ldw	ra,0(sp)
10008180:	dec00104 	addi	sp,sp,4
10008184:	00145f41 	jmpi	100145f4 <_Unwind_DeleteException>
10008188:	20c00417 	ldw	r3,16(r4)
1000818c:	21000b04 	addi	r4,r4,44
10008190:	10c00015 	stw	r3,0(r2)
10008194:	dfc00017 	ldw	ra,0(sp)
10008198:	dec00104 	addi	sp,sp,4
1000819c:	00145f41 	jmpi	100145f4 <_Unwind_DeleteException>
100081a0:	00082a80 	call	100082a8 <_ZSt9terminatev>

100081a4 <_ZSt18uncaught_exceptionv>:
100081a4:	deffff04 	addi	sp,sp,-4
100081a8:	dfc00015 	stw	ra,0(sp)
100081ac:	000c6d00 	call	1000c6d0 <__cxa_get_globals>
100081b0:	10800117 	ldw	r2,4(r2)
100081b4:	1004c03a 	cmpne	r2,r2,zero
100081b8:	dfc00017 	ldw	ra,0(sp)
100081bc:	dec00104 	addi	sp,sp,4
100081c0:	f800283a 	ret

100081c4 <_ZSt19uncaught_exceptionsv>:
100081c4:	deffff04 	addi	sp,sp,-4
100081c8:	dfc00015 	stw	ra,0(sp)
100081cc:	000c6d00 	call	1000c6d0 <__cxa_get_globals>
100081d0:	10800117 	ldw	r2,4(r2)
100081d4:	dfc00017 	ldw	ra,0(sp)
100081d8:	dec00104 	addi	sp,sp,4
100081dc:	f800283a 	ret

100081e0 <_ZN10__cxxabiv111__terminateEPFvvE>:
100081e0:	00c400b4 	movhi	r3,4098
100081e4:	deffef04 	addi	sp,sp,-68
100081e8:	18d15004 	addi	r3,r3,17728
100081ec:	01440074 	movhi	r5,4097
100081f0:	00840074 	movhi	r2,4097
100081f4:	10a08f04 	addi	r2,r2,-32196
100081f8:	2962a704 	addi	r5,r5,-30052
100081fc:	d9000015 	stw	r4,0(sp)
10008200:	d8c00915 	stw	r3,36(sp)
10008204:	d9000204 	addi	r4,sp,8
10008208:	d8c00f04 	addi	r3,sp,60
1000820c:	d8800b15 	stw	r2,44(sp)
10008210:	dfc01015 	stw	ra,64(sp)
10008214:	df000f15 	stw	fp,60(sp)
10008218:	d9400815 	stw	r5,32(sp)
1000821c:	d8c00a15 	stw	r3,40(sp)
10008220:	dec00c15 	stw	sp,48(sp)
10008224:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10008228:	00800044 	movi	r2,1
1000822c:	d8800315 	stw	r2,12(sp)
10008230:	d8800017 	ldw	r2,0(sp)
10008234:	103ee83a 	callr	r2
10008238:	00146940 	call	10014694 <abort>
1000823c:	d8c00417 	ldw	r3,16(sp)
10008240:	d8800317 	ldw	r2,12(sp)
10008244:	d8c00015 	stw	r3,0(sp)
10008248:	d8c00517 	ldw	r3,20(sp)
1000824c:	d8c00115 	stw	r3,4(sp)
10008250:	1000051e 	bne	r2,zero,10008268 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
10008254:	d9000417 	ldw	r4,16(sp)
10008258:	00080480 	call	10008048 <__cxa_begin_catch>
1000825c:	00800084 	movi	r2,2
10008260:	d8800315 	stw	r2,12(sp)
10008264:	00146940 	call	10014694 <abort>
10008268:	10bfffc4 	addi	r2,r2,-1
1000826c:	10000126 	beq	r2,zero,10008274 <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
10008270:	003b68fa 	trap	3
10008274:	d8000315 	stw	zero,12(sp)
10008278:	00080f40 	call	100080f4 <__cxa_end_catch>
1000827c:	d8c00117 	ldw	r3,4(sp)
10008280:	18bfffe0 	cmpeqi	r2,r3,-1
10008284:	1000041e 	bne	r2,zero,10008298 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
10008288:	d9000017 	ldw	r4,0(sp)
1000828c:	00bfffc4 	movi	r2,-1
10008290:	d8800315 	stw	r2,12(sp)
10008294:	00145640 	call	10014564 <_Unwind_SjLj_Resume>
10008298:	d8800117 	ldw	r2,4(sp)
1000829c:	d9000017 	ldw	r4,0(sp)
100082a0:	d8800315 	stw	r2,12(sp)
100082a4:	00090c00 	call	100090c0 <__cxa_call_unexpected>

100082a8 <_ZSt9terminatev>:
100082a8:	008400f4 	movhi	r2,4099
100082ac:	11215117 	ldw	r4,-31420(r2)
100082b0:	deffff04 	addi	sp,sp,-4
100082b4:	dfc00015 	stw	ra,0(sp)
100082b8:	00081e00 	call	100081e0 <_ZN10__cxxabiv111__terminateEPFvvE>

100082bc <_ZN10__cxxabiv112__unexpectedEPFvvE>:
100082bc:	deffff04 	addi	sp,sp,-4
100082c0:	dfc00015 	stw	ra,0(sp)
100082c4:	203ee83a 	callr	r4
100082c8:	00082a80 	call	100082a8 <_ZSt9terminatev>

100082cc <_ZSt10unexpectedv>:
100082cc:	008400f4 	movhi	r2,4099
100082d0:	11214a17 	ldw	r4,-31448(r2)
100082d4:	deffff04 	addi	sp,sp,-4
100082d8:	dfc00015 	stw	ra,0(sp)
100082dc:	00082bc0 	call	100082bc <_ZN10__cxxabiv112__unexpectedEPFvvE>

100082e0 <_ZSt13set_terminatePFvvE>:
100082e0:	00c400f4 	movhi	r3,4099
100082e4:	008400f4 	movhi	r2,4099
100082e8:	10a15117 	ldw	r2,-31420(r2)
100082ec:	19215115 	stw	r4,-31420(r3)
100082f0:	f800283a 	ret

100082f4 <_ZSt13get_terminatev>:
100082f4:	008400f4 	movhi	r2,4099
100082f8:	10a15117 	ldw	r2,-31420(r2)
100082fc:	f800283a 	ret

10008300 <_ZSt14set_unexpectedPFvvE>:
10008300:	00c400f4 	movhi	r3,4099
10008304:	008400f4 	movhi	r2,4099
10008308:	10a14a17 	ldw	r2,-31448(r2)
1000830c:	19214a15 	stw	r4,-31448(r3)
10008310:	f800283a 	ret

10008314 <_ZSt14get_unexpectedv>:
10008314:	008400f4 	movhi	r2,4099
10008318:	10a14a17 	ldw	r2,-31448(r2)
1000831c:	f800283a 	ret

10008320 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
10008320:	defffe04 	addi	sp,sp,-8
10008324:	dfc00115 	stw	ra,4(sp)
10008328:	dc000015 	stw	r16,0(sp)
1000832c:	210000b0 	cmpltui	r4,r4,2
10008330:	20001326 	beq	r4,zero,10008380 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
10008334:	28bff417 	ldw	r2,-48(r5)
10008338:	10ffffc4 	addi	r3,r2,-1
1000833c:	28fff415 	stw	r3,-48(r5)
10008340:	10800058 	cmpnei	r2,r2,1
10008344:	10000426 	beq	r2,zero,10008358 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
10008348:	dfc00117 	ldw	ra,4(sp)
1000834c:	dc000017 	ldw	r16,0(sp)
10008350:	dec00204 	addi	sp,sp,8
10008354:	f800283a 	ret
10008358:	28bff617 	ldw	r2,-40(r5)
1000835c:	2c000504 	addi	r16,r5,20
10008360:	10000226 	beq	r2,zero,1000836c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
10008364:	8009883a 	mov	r4,r16
10008368:	103ee83a 	callr	r2
1000836c:	8009883a 	mov	r4,r16
10008370:	dfc00117 	ldw	ra,4(sp)
10008374:	dc000017 	ldw	r16,0(sp)
10008378:	dec00204 	addi	sp,sp,8
1000837c:	000945c1 	jmpi	1000945c <__cxa_free_exception>
10008380:	293ff817 	ldw	r4,-32(r5)
10008384:	00081e00 	call	100081e0 <_ZN10__cxxabiv111__terminateEPFvvE>

10008388 <__cxa_init_primary_exception>:
10008388:	defffe04 	addi	sp,sp,-8
1000838c:	dfc00115 	stw	ra,4(sp)
10008390:	dc000015 	stw	r16,0(sp)
10008394:	217ff015 	stw	r5,-64(r4)
10008398:	21bff115 	stw	r6,-60(r4)
1000839c:	203fef15 	stw	zero,-68(r4)
100083a0:	2021883a 	mov	r16,r4
100083a4:	00083140 	call	10008314 <_ZSt14get_unexpectedv>
100083a8:	80bff215 	stw	r2,-56(r16)
100083ac:	00082f40 	call	100082f4 <_ZSt13get_terminatev>
100083b0:	0150caf4 	movhi	r5,17195
100083b4:	0111d3b4 	movhi	r4,18254
100083b8:	00c40074 	movhi	r3,4097
100083bc:	294ac004 	addi	r5,r5,11008
100083c0:	211550c4 	addi	r4,r4,21827
100083c4:	18e0c804 	addi	r3,r3,-31968
100083c8:	80bff315 	stw	r2,-52(r16)
100083cc:	80bfef04 	addi	r2,r16,-68
100083d0:	817ffb15 	stw	r5,-20(r16)
100083d4:	813ffc15 	stw	r4,-16(r16)
100083d8:	80fffd15 	stw	r3,-12(r16)
100083dc:	dfc00117 	ldw	ra,4(sp)
100083e0:	dc000017 	ldw	r16,0(sp)
100083e4:	dec00204 	addi	sp,sp,8
100083e8:	f800283a 	ret

100083ec <__cxa_throw>:
100083ec:	defffb04 	addi	sp,sp,-20
100083f0:	dfc00415 	stw	ra,16(sp)
100083f4:	dcc00315 	stw	r19,12(sp)
100083f8:	dc800215 	stw	r18,8(sp)
100083fc:	2827883a 	mov	r19,r5
10008400:	3025883a 	mov	r18,r6
10008404:	dc400115 	stw	r17,4(sp)
10008408:	dc000015 	stw	r16,0(sp)
1000840c:	2021883a 	mov	r16,r4
10008410:	000c6d00 	call	1000c6d0 <__cxa_get_globals>
10008414:	10c00117 	ldw	r3,4(r2)
10008418:	847ffb04 	addi	r17,r16,-20
1000841c:	18c00044 	addi	r3,r3,1
10008420:	10c00115 	stw	r3,4(r2)
10008424:	803fef15 	stw	zero,-68(r16)
10008428:	84fff015 	stw	r19,-64(r16)
1000842c:	84bff115 	stw	r18,-60(r16)
10008430:	00083140 	call	10008314 <_ZSt14get_unexpectedv>
10008434:	80bff215 	stw	r2,-56(r16)
10008438:	00082f40 	call	100082f4 <_ZSt13get_terminatev>
1000843c:	0150caf4 	movhi	r5,17195
10008440:	0111d3b4 	movhi	r4,18254
10008444:	00c40074 	movhi	r3,4097
10008448:	294ac004 	addi	r5,r5,11008
1000844c:	18e0c804 	addi	r3,r3,-31968
10008450:	211550c4 	addi	r4,r4,21827
10008454:	80bff315 	stw	r2,-52(r16)
10008458:	00800044 	movi	r2,1
1000845c:	817ffb15 	stw	r5,-20(r16)
10008460:	813ffc15 	stw	r4,-16(r16)
10008464:	80fffd15 	stw	r3,-12(r16)
10008468:	8809883a 	mov	r4,r17
1000846c:	80bfef15 	stw	r2,-68(r16)
10008470:	00144580 	call	10014458 <_Unwind_SjLj_RaiseException>
10008474:	8809883a 	mov	r4,r17
10008478:	00080480 	call	10008048 <__cxa_begin_catch>
1000847c:	00082a80 	call	100082a8 <_ZSt9terminatev>

10008480 <__cxa_rethrow>:
10008480:	defffe04 	addi	sp,sp,-8
10008484:	dfc00115 	stw	ra,4(sp)
10008488:	dc000015 	stw	r16,0(sp)
1000848c:	000c6d00 	call	1000c6d0 <__cxa_get_globals>
10008490:	10c00117 	ldw	r3,4(r2)
10008494:	11000017 	ldw	r4,0(r2)
10008498:	18c00044 	addi	r3,r3,1
1000849c:	10c00115 	stw	r3,4(r2)
100084a0:	20001126 	beq	r4,zero,100084e8 <__cxa_rethrow+0x68>
100084a4:	20c00b17 	ldw	r3,44(r4)
100084a8:	21800c17 	ldw	r6,48(r4)
100084ac:	016f3574 	movhi	r5,48341
100084b0:	29754004 	addi	r5,r5,-11008
100084b4:	01ee2cb4 	movhi	r7,47282
100084b8:	39eaaf04 	addi	r7,r7,-21828
100084bc:	194b883a 	add	r5,r3,r5
100084c0:	28c7803a 	cmpltu	r3,r5,r3
100084c4:	31cd883a 	add	r6,r6,r7
100084c8:	1987883a 	add	r3,r3,r6
100084cc:	18000726 	beq	r3,zero,100084ec <__cxa_rethrow+0x6c>
100084d0:	10000015 	stw	zero,0(r2)
100084d4:	24000b04 	addi	r16,r4,44
100084d8:	8009883a 	mov	r4,r16
100084dc:	00145a80 	call	100145a8 <_Unwind_SjLj_Resume_or_Rethrow>
100084e0:	8009883a 	mov	r4,r16
100084e4:	00080480 	call	10008048 <__cxa_begin_catch>
100084e8:	00082a80 	call	100082a8 <_ZSt9terminatev>
100084ec:	294000a8 	cmpgeui	r5,r5,2
100084f0:	283ff71e 	bne	r5,zero,100084d0 <__cxa_rethrow+0x50>
100084f4:	20800517 	ldw	r2,20(r4)
100084f8:	0085c83a 	sub	r2,zero,r2
100084fc:	20800515 	stw	r2,20(r4)
10008500:	003ff406 	br	100084d4 <__cxa_rethrow+0x54>

10008504 <_ZdlPv>:
10008504:	0014e801 	jmpi	10014e80 <free>

10008508 <_ZNKSt9bad_alloc4whatEv>:
10008508:	008400b4 	movhi	r2,4098
1000850c:	1094da04 	addi	r2,r2,21352
10008510:	f800283a 	ret

10008514 <_ZNSt9bad_allocD1Ev>:
10008514:	008400b4 	movhi	r2,4098
10008518:	1094e704 	addi	r2,r2,21404
1000851c:	20800015 	stw	r2,0(r4)
10008520:	000c6dc1 	jmpi	1000c6dc <_ZNSt9exceptionD1Ev>

10008524 <_ZNSt9bad_allocD0Ev>:
10008524:	defffe04 	addi	sp,sp,-8
10008528:	008400b4 	movhi	r2,4098
1000852c:	dc000015 	stw	r16,0(sp)
10008530:	dfc00115 	stw	ra,4(sp)
10008534:	1094e704 	addi	r2,r2,21404
10008538:	20800015 	stw	r2,0(r4)
1000853c:	2021883a 	mov	r16,r4
10008540:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
10008544:	01400104 	movi	r5,4
10008548:	8009883a 	mov	r4,r16
1000854c:	dfc00117 	ldw	ra,4(sp)
10008550:	dc000017 	ldw	r16,0(sp)
10008554:	dec00204 	addi	sp,sp,8
10008558:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000855c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
1000855c:	28800017 	ldw	r2,0(r5)
10008560:	30c00017 	ldw	r3,0(r6)
10008564:	defffb04 	addi	sp,sp,-20
10008568:	10800217 	ldw	r2,8(r2)
1000856c:	dc400315 	stw	r17,12(sp)
10008570:	dc000215 	stw	r16,8(sp)
10008574:	d9400015 	stw	r5,0(sp)
10008578:	dfc00415 	stw	ra,16(sp)
1000857c:	2021883a 	mov	r16,r4
10008580:	d8c00115 	stw	r3,4(sp)
10008584:	2809883a 	mov	r4,r5
10008588:	3023883a 	mov	r17,r6
1000858c:	103ee83a 	callr	r2
10008590:	10803fcc 	andi	r2,r2,255
10008594:	d9400017 	ldw	r5,0(sp)
10008598:	10000326 	beq	r2,zero,100085a8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
1000859c:	d8800117 	ldw	r2,4(sp)
100085a0:	10800017 	ldw	r2,0(r2)
100085a4:	d8800115 	stw	r2,4(sp)
100085a8:	80800017 	ldw	r2,0(r16)
100085ac:	01c00044 	movi	r7,1
100085b0:	d9800104 	addi	r6,sp,4
100085b4:	10800417 	ldw	r2,16(r2)
100085b8:	8009883a 	mov	r4,r16
100085bc:	103ee83a 	callr	r2
100085c0:	10c03fcc 	andi	r3,r2,255
100085c4:	18000226 	beq	r3,zero,100085d0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
100085c8:	d8c00117 	ldw	r3,4(sp)
100085cc:	88c00015 	stw	r3,0(r17)
100085d0:	dfc00417 	ldw	ra,16(sp)
100085d4:	dc400317 	ldw	r17,12(sp)
100085d8:	dc000217 	ldw	r16,8(sp)
100085dc:	dec00504 	addi	sp,sp,20
100085e0:	f800283a 	ret

100085e4 <_ZL28read_encoded_value_with_basehjPKhPj>:
100085e4:	20c03fcc 	andi	r3,r4,255
100085e8:	18c01418 	cmpnei	r3,r3,80
100085ec:	18002c26 	beq	r3,zero,100086a0 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
100085f0:	208003cc 	andi	r2,r4,15
100085f4:	10c00368 	cmpgeui	r3,r2,13
100085f8:	1800711e 	bne	r3,zero,100087c0 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
100085fc:	100490ba 	slli	r2,r2,2
10008600:	00c40074 	movhi	r3,4097
10008604:	10c7883a 	add	r3,r2,r3
10008608:	18a18417 	ldw	r2,-31216(r3)
1000860c:	1000683a 	jmp	r2
10008610:	10008644 	addi	zero,r2,537
10008614:	10008788 	cmpgei	zero,r2,542
10008618:	100086f8 	rdprs	zero,r2,539
1000861c:	10008644 	addi	zero,r2,537
10008620:	100086bc 	xorhi	zero,r2,538
10008624:	100087c0 	call	1100087c <_gp+0xfd035c>
10008628:	100087c0 	call	1100087c <_gp+0xfd035c>
1000862c:	100087c0 	call	1100087c <_gp+0xfd035c>
10008630:	100087c0 	call	1100087c <_gp+0xfd035c>
10008634:	10008734 	orhi	zero,r2,540
10008638:	10008710 	cmplti	zero,r2,540
1000863c:	10008644 	addi	zero,r2,537
10008640:	100086bc 	xorhi	zero,r2,538
10008644:	32000043 	ldbu	r8,1(r6)
10008648:	30800083 	ldbu	r2,2(r6)
1000864c:	30c000c3 	ldbu	r3,3(r6)
10008650:	32400003 	ldbu	r9,0(r6)
10008654:	4010923a 	slli	r8,r8,8
10008658:	1004943a 	slli	r2,r2,16
1000865c:	1806963a 	slli	r3,r3,24
10008660:	4250b03a 	or	r8,r8,r9
10008664:	1204b03a 	or	r2,r2,r8
10008668:	1886b03a 	or	r3,r3,r2
1000866c:	30800104 	addi	r2,r6,4
10008670:	18000926 	beq	r3,zero,10008698 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
10008674:	22001c0c 	andi	r8,r4,112
10008678:	42000418 	cmpnei	r8,r8,16
1000867c:	4000011e 	bne	r8,zero,10008684 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
10008680:	300b883a 	mov	r5,r6
10008684:	21003fcc 	andi	r4,r4,255
10008688:	2100201c 	xori	r4,r4,128
1000868c:	213fe004 	addi	r4,r4,-128
10008690:	1947883a 	add	r3,r3,r5
10008694:	20001516 	blt	r4,zero,100086ec <_ZL28read_encoded_value_with_basehjPKhPj+0x108>
10008698:	38c00015 	stw	r3,0(r7)
1000869c:	f800283a 	ret
100086a0:	308000c4 	addi	r2,r6,3
100086a4:	01bfff04 	movi	r6,-4
100086a8:	1184703a 	and	r2,r2,r6
100086ac:	10c00017 	ldw	r3,0(r2)
100086b0:	10800104 	addi	r2,r2,4
100086b4:	38c00015 	stw	r3,0(r7)
100086b8:	f800283a 	ret
100086bc:	32000043 	ldbu	r8,1(r6)
100086c0:	30800083 	ldbu	r2,2(r6)
100086c4:	30c000c3 	ldbu	r3,3(r6)
100086c8:	32400003 	ldbu	r9,0(r6)
100086cc:	4010923a 	slli	r8,r8,8
100086d0:	1004943a 	slli	r2,r2,16
100086d4:	1806963a 	slli	r3,r3,24
100086d8:	4250b03a 	or	r8,r8,r9
100086dc:	1204b03a 	or	r2,r2,r8
100086e0:	1886b03a 	or	r3,r3,r2
100086e4:	30800204 	addi	r2,r6,8
100086e8:	003fe106 	br	10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100086ec:	18c00017 	ldw	r3,0(r3)
100086f0:	38c00015 	stw	r3,0(r7)
100086f4:	f800283a 	ret
100086f8:	30c00043 	ldbu	r3,1(r6)
100086fc:	32000003 	ldbu	r8,0(r6)
10008700:	30800084 	addi	r2,r6,2
10008704:	1806923a 	slli	r3,r3,8
10008708:	1a06b03a 	or	r3,r3,r8
1000870c:	003fd806 	br	10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008710:	30c00043 	ldbu	r3,1(r6)
10008714:	32000003 	ldbu	r8,0(r6)
10008718:	30800084 	addi	r2,r6,2
1000871c:	1806923a 	slli	r3,r3,8
10008720:	1a06b03a 	or	r3,r3,r8
10008724:	18ffffcc 	andi	r3,r3,65535
10008728:	18e0001c 	xori	r3,r3,32768
1000872c:	18e00004 	addi	r3,r3,-32768
10008730:	003fcf06 	br	10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008734:	3005883a 	mov	r2,r6
10008738:	0007883a 	mov	r3,zero
1000873c:	0013883a 	mov	r9,zero
10008740:	10800044 	addi	r2,r2,1
10008744:	12bfffc3 	ldbu	r10,-1(r2)
10008748:	52001fcc 	andi	r8,r10,127
1000874c:	4250983a 	sll	r8,r8,r9
10008750:	52c03fcc 	andi	r11,r10,255
10008754:	5ac0201c 	xori	r11,r11,128
10008758:	5affe004 	addi	r11,r11,-128
1000875c:	1a06b03a 	or	r3,r3,r8
10008760:	4a4001c4 	addi	r9,r9,7
10008764:	583ff616 	blt	r11,zero,10008740 <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
10008768:	4a000828 	cmpgeui	r8,r9,32
1000876c:	403fc01e 	bne	r8,zero,10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008770:	5280100c 	andi	r10,r10,64
10008774:	503fbe26 	beq	r10,zero,10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
10008778:	023fffc4 	movi	r8,-1
1000877c:	4252983a 	sll	r9,r8,r9
10008780:	1a46b03a 	or	r3,r3,r9
10008784:	003fbb06 	br	10008674 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
10008788:	3005883a 	mov	r2,r6
1000878c:	0007883a 	mov	r3,zero
10008790:	0015883a 	mov	r10,zero
10008794:	10800044 	addi	r2,r2,1
10008798:	123fffc3 	ldbu	r8,-1(r2)
1000879c:	42401fcc 	andi	r9,r8,127
100087a0:	4a92983a 	sll	r9,r9,r10
100087a4:	42003fcc 	andi	r8,r8,255
100087a8:	4200201c 	xori	r8,r8,128
100087ac:	423fe004 	addi	r8,r8,-128
100087b0:	1a46b03a 	or	r3,r3,r9
100087b4:	528001c4 	addi	r10,r10,7
100087b8:	403ff616 	blt	r8,zero,10008794 <_ZL28read_encoded_value_with_basehjPKhPj+0x1b0>
100087bc:	003fac06 	br	10008670 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
100087c0:	deffff04 	addi	sp,sp,-4
100087c4:	dfc00015 	stw	ra,0(sp)
100087c8:	00146940 	call	10014694 <abort>

100087cc <_ZL15get_ttype_entryP16lsda_header_infom>:
100087cc:	defffe04 	addi	sp,sp,-8
100087d0:	dfc00115 	stw	ra,4(sp)
100087d4:	20800503 	ldbu	r2,20(r4)
100087d8:	10c03fcc 	andi	r3,r2,255
100087dc:	19803fe0 	cmpeqi	r6,r3,255
100087e0:	30001c1e 	bne	r6,zero,10008854 <_ZL15get_ttype_entryP16lsda_header_infom+0x88>
100087e4:	108001cc 	andi	r2,r2,7
100087e8:	118000a0 	cmpeqi	r6,r2,2
100087ec:	3000161e 	bne	r6,zero,10008848 <_ZL15get_ttype_entryP16lsda_header_infom+0x7c>
100087f0:	118000e8 	cmpgeui	r6,r2,3
100087f4:	30001026 	beq	r6,zero,10008838 <_ZL15get_ttype_entryP16lsda_header_infom+0x6c>
100087f8:	118000e0 	cmpeqi	r6,r2,3
100087fc:	30000f1e 	bne	r6,zero,1000883c <_ZL15get_ttype_entryP16lsda_header_infom+0x70>
10008800:	10800120 	cmpeqi	r2,r2,4
10008804:	10001526 	beq	r2,zero,1000885c <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
10008808:	280a90fa 	slli	r5,r5,3
1000880c:	014dc83a 	sub	r6,zero,r5
10008810:	20800317 	ldw	r2,12(r4)
10008814:	21400217 	ldw	r5,8(r4)
10008818:	d80f883a 	mov	r7,sp
1000881c:	118d883a 	add	r6,r2,r6
10008820:	1809883a 	mov	r4,r3
10008824:	00085e40 	call	100085e4 <_ZL28read_encoded_value_with_basehjPKhPj>
10008828:	d8800017 	ldw	r2,0(sp)
1000882c:	dfc00117 	ldw	ra,4(sp)
10008830:	dec00204 	addi	sp,sp,8
10008834:	f800283a 	ret
10008838:	1000081e 	bne	r2,zero,1000885c <_ZL15get_ttype_entryP16lsda_header_infom+0x90>
1000883c:	280a90ba 	slli	r5,r5,2
10008840:	014dc83a 	sub	r6,zero,r5
10008844:	003ff206 	br	10008810 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10008848:	294b883a 	add	r5,r5,r5
1000884c:	014dc83a 	sub	r6,zero,r5
10008850:	003fef06 	br	10008810 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
10008854:	000d883a 	mov	r6,zero
10008858:	003fed06 	br	10008810 <_ZL15get_ttype_entryP16lsda_header_infom+0x44>
1000885c:	00146940 	call	10014694 <abort>

10008860 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
10008860:	defffb04 	addi	sp,sp,-20
10008864:	dc000115 	stw	r16,4(sp)
10008868:	24000317 	ldw	r16,12(r4)
1000886c:	01ce303a 	nor	r7,zero,r7
10008870:	dc800315 	stw	r18,12(sp)
10008874:	dc400215 	stw	r17,8(sp)
10008878:	dfc00415 	stw	ra,16(sp)
1000887c:	2023883a 	mov	r17,r4
10008880:	2825883a 	mov	r18,r5
10008884:	d9800015 	stw	r6,0(sp)
10008888:	81e1883a 	add	r16,r16,r7
1000888c:	000b883a 	mov	r5,zero
10008890:	0009883a 	mov	r4,zero
10008894:	84000044 	addi	r16,r16,1
10008898:	80bfffc3 	ldbu	r2,-1(r16)
1000889c:	10c01fcc 	andi	r3,r2,127
100088a0:	1906983a 	sll	r3,r3,r4
100088a4:	10803fcc 	andi	r2,r2,255
100088a8:	1080201c 	xori	r2,r2,128
100088ac:	10bfe004 	addi	r2,r2,-128
100088b0:	28cab03a 	or	r5,r5,r3
100088b4:	210001c4 	addi	r4,r4,7
100088b8:	103ff616 	blt	r2,zero,10008894 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
100088bc:	28000e26 	beq	r5,zero,100088f8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x98>
100088c0:	8809883a 	mov	r4,r17
100088c4:	00087cc0 	call	100087cc <_ZL15get_ttype_entryP16lsda_header_infom>
100088c8:	d80d883a 	mov	r6,sp
100088cc:	900b883a 	mov	r5,r18
100088d0:	1009883a 	mov	r4,r2
100088d4:	000855c0 	call	1000855c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
100088d8:	10c03fcc 	andi	r3,r2,255
100088dc:	183feb26 	beq	r3,zero,1000888c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
100088e0:	dfc00417 	ldw	ra,16(sp)
100088e4:	dc800317 	ldw	r18,12(sp)
100088e8:	dc400217 	ldw	r17,8(sp)
100088ec:	dc000117 	ldw	r16,4(sp)
100088f0:	dec00504 	addi	sp,sp,20
100088f4:	f800283a 	ret
100088f8:	0005883a 	mov	r2,zero
100088fc:	003ff806 	br	100088e0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x80>

10008900 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
10008900:	20803fcc 	andi	r2,r4,255
10008904:	10803fe0 	cmpeqi	r2,r2,255
10008908:	1000101e 	bne	r2,zero,1000894c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
1000890c:	20801c0c 	andi	r2,r4,112
10008910:	10c00820 	cmpeqi	r3,r2,32
10008914:	1800111e 	bne	r3,zero,1000895c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
10008918:	10c00868 	cmpgeui	r3,r2,33
1000891c:	18000826 	beq	r3,zero,10008940 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
10008920:	10c01020 	cmpeqi	r3,r2,64
10008924:	18000b1e 	bne	r3,zero,10008954 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x54>
10008928:	10c01420 	cmpeqi	r3,r2,80
1000892c:	1800071e 	bne	r3,zero,1000894c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10008930:	10800c20 	cmpeqi	r2,r2,48
10008934:	10000b26 	beq	r2,zero,10008964 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
10008938:	2809883a 	mov	r4,r5
1000893c:	00144481 	jmpi	10014448 <_Unwind_GetDataRelBase>
10008940:	10000226 	beq	r2,zero,1000894c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
10008944:	10800420 	cmpeqi	r2,r2,16
10008948:	10000626 	beq	r2,zero,10008964 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
1000894c:	0005883a 	mov	r2,zero
10008950:	f800283a 	ret
10008954:	2809883a 	mov	r4,r5
10008958:	00144381 	jmpi	10014438 <_Unwind_GetRegionStart>
1000895c:	2809883a 	mov	r4,r5
10008960:	00144501 	jmpi	10014450 <_Unwind_GetTextRelBase>
10008964:	deffff04 	addi	sp,sp,-4
10008968:	dfc00015 	stw	ra,0(sp)
1000896c:	00146940 	call	10014694 <abort>

10008970 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
10008970:	defffb04 	addi	sp,sp,-20
10008974:	dcc00315 	stw	r19,12(sp)
10008978:	dc400115 	stw	r17,4(sp)
1000897c:	dc000015 	stw	r16,0(sp)
10008980:	dfc00415 	stw	ra,16(sp)
10008984:	dc800215 	stw	r18,8(sp)
10008988:	2027883a 	mov	r19,r4
1000898c:	2821883a 	mov	r16,r5
10008990:	3023883a 	mov	r17,r6
10008994:	20003d26 	beq	r4,zero,10008a8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
10008998:	00144380 	call	10014438 <_Unwind_GetRegionStart>
1000899c:	88800015 	stw	r2,0(r17)
100089a0:	84800003 	ldbu	r18,0(r16)
100089a4:	84000044 	addi	r16,r16,1
100089a8:	90c03fe0 	cmpeqi	r3,r18,255
100089ac:	18002d26 	beq	r3,zero,10008a64 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
100089b0:	88800115 	stw	r2,4(r17)
100089b4:	81000003 	ldbu	r4,0(r16)
100089b8:	80800044 	addi	r2,r16,1
100089bc:	20c03fcc 	andi	r3,r4,255
100089c0:	89000505 	stb	r4,20(r17)
100089c4:	18c03fe0 	cmpeqi	r3,r3,255
100089c8:	1800321e 	bne	r3,zero,10008a94 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
100089cc:	000d883a 	mov	r6,zero
100089d0:	000b883a 	mov	r5,zero
100089d4:	10800044 	addi	r2,r2,1
100089d8:	10ffffc3 	ldbu	r3,-1(r2)
100089dc:	19001fcc 	andi	r4,r3,127
100089e0:	2148983a 	sll	r4,r4,r5
100089e4:	18c03fcc 	andi	r3,r3,255
100089e8:	18c0201c 	xori	r3,r3,128
100089ec:	18ffe004 	addi	r3,r3,-128
100089f0:	310cb03a 	or	r6,r6,r4
100089f4:	294001c4 	addi	r5,r5,7
100089f8:	183ff616 	blt	r3,zero,100089d4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
100089fc:	118d883a 	add	r6,r2,r6
10008a00:	89800315 	stw	r6,12(r17)
10008a04:	10c00003 	ldbu	r3,0(r2)
10008a08:	000d883a 	mov	r6,zero
10008a0c:	10800044 	addi	r2,r2,1
10008a10:	88c00545 	stb	r3,21(r17)
10008a14:	000b883a 	mov	r5,zero
10008a18:	10800044 	addi	r2,r2,1
10008a1c:	10ffffc3 	ldbu	r3,-1(r2)
10008a20:	19001fcc 	andi	r4,r3,127
10008a24:	2148983a 	sll	r4,r4,r5
10008a28:	18c03fcc 	andi	r3,r3,255
10008a2c:	18c0201c 	xori	r3,r3,128
10008a30:	18ffe004 	addi	r3,r3,-128
10008a34:	310cb03a 	or	r6,r6,r4
10008a38:	294001c4 	addi	r5,r5,7
10008a3c:	183ff616 	blt	r3,zero,10008a18 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
10008a40:	118d883a 	add	r6,r2,r6
10008a44:	89800415 	stw	r6,16(r17)
10008a48:	dfc00417 	ldw	ra,16(sp)
10008a4c:	dcc00317 	ldw	r19,12(sp)
10008a50:	dc800217 	ldw	r18,8(sp)
10008a54:	dc400117 	ldw	r17,4(sp)
10008a58:	dc000017 	ldw	r16,0(sp)
10008a5c:	dec00504 	addi	sp,sp,20
10008a60:	f800283a 	ret
10008a64:	980b883a 	mov	r5,r19
10008a68:	9009883a 	mov	r4,r18
10008a6c:	00089000 	call	10008900 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008a70:	800d883a 	mov	r6,r16
10008a74:	89c00104 	addi	r7,r17,4
10008a78:	100b883a 	mov	r5,r2
10008a7c:	9009883a 	mov	r4,r18
10008a80:	00085e40 	call	100085e4 <_ZL28read_encoded_value_with_basehjPKhPj>
10008a84:	1021883a 	mov	r16,r2
10008a88:	003fca06 	br	100089b4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
10008a8c:	0005883a 	mov	r2,zero
10008a90:	003fc206 	br	1000899c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
10008a94:	88000315 	stw	zero,12(r17)
10008a98:	003fda06 	br	10008a04 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

10008a9c <__gxx_personality_sj0>:
10008a9c:	00c400b4 	movhi	r3,4098
10008aa0:	deffdc04 	addi	sp,sp,-144
10008aa4:	18d15604 	addi	r3,r3,17752
10008aa8:	02040074 	movhi	r8,4097
10008aac:	00840074 	movhi	r2,4097
10008ab0:	10a42504 	addi	r2,r2,-28524
10008ab4:	4222a704 	addi	r8,r8,-30052
10008ab8:	d9000015 	stw	r4,0(sp)
10008abc:	d8c01415 	stw	r3,80(sp)
10008ac0:	d9000d04 	addi	r4,sp,52
10008ac4:	d8c02204 	addi	r3,sp,136
10008ac8:	d8801615 	stw	r2,88(sp)
10008acc:	dfc02315 	stw	ra,140(sp)
10008ad0:	df002215 	stw	fp,136(sp)
10008ad4:	da001315 	stw	r8,76(sp)
10008ad8:	d8c01515 	stw	r3,84(sp)
10008adc:	dec01715 	stw	sp,92(sp)
10008ae0:	d9400315 	stw	r5,12(sp)
10008ae4:	d9800115 	stw	r6,4(sp)
10008ae8:	d9c00215 	stw	r7,8(sp)
10008aec:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10008af0:	d8800017 	ldw	r2,0(sp)
10008af4:	d8001a15 	stw	zero,104(sp)
10008af8:	d8001b15 	stw	zero,108(sp)
10008afc:	10800058 	cmpnei	r2,r2,1
10008b00:	1000481e 	bne	r2,zero,10008c24 <__gxx_personality_sj0+0x188>
10008b04:	d9800117 	ldw	r6,4(sp)
10008b08:	00af3574 	movhi	r2,48341
10008b0c:	10b54004 	addi	r2,r2,-11008
10008b10:	3085883a 	add	r2,r6,r2
10008b14:	d8800715 	stw	r2,28(sp)
10008b18:	1185803a 	cmpltu	r2,r2,r6
10008b1c:	d9800217 	ldw	r6,8(sp)
10008b20:	00ee2cb4 	movhi	r3,47282
10008b24:	18eaaf04 	addi	r3,r3,-21828
10008b28:	d9000317 	ldw	r4,12(sp)
10008b2c:	30c7883a 	add	r3,r6,r3
10008b30:	10c7883a 	add	r3,r2,r3
10008b34:	21000198 	cmpnei	r4,r4,6
10008b38:	d8c00615 	stw	r3,24(sp)
10008b3c:	2000011e 	bne	r4,zero,10008b44 <__gxx_personality_sj0+0xa8>
10008b40:	1800d026 	beq	r3,zero,10008e84 <__gxx_personality_sj0+0x3e8>
10008b44:	d9002517 	ldw	r4,148(sp)
10008b48:	00bfffc4 	movi	r2,-1
10008b4c:	d8800e15 	stw	r2,56(sp)
10008b50:	001442c0 	call	1001442c <_Unwind_GetLanguageSpecificData>
10008b54:	d8800515 	stw	r2,20(sp)
10008b58:	10006126 	beq	r2,zero,10008ce0 <__gxx_personality_sj0+0x244>
10008b5c:	d9002517 	ldw	r4,148(sp)
10008b60:	d9400517 	ldw	r5,20(sp)
10008b64:	d9801c04 	addi	r6,sp,112
10008b68:	00bfffc4 	movi	r2,-1
10008b6c:	d8800e15 	stw	r2,56(sp)
10008b70:	00089700 	call	10008970 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10008b74:	d9402517 	ldw	r5,148(sp)
10008b78:	d9002103 	ldbu	r4,132(sp)
10008b7c:	d8800015 	stw	r2,0(sp)
10008b80:	00089000 	call	10008900 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008b84:	d9002517 	ldw	r4,148(sp)
10008b88:	d9401b04 	addi	r5,sp,108
10008b8c:	d8801e15 	stw	r2,120(sp)
10008b90:	00143fc0 	call	100143fc <_Unwind_GetIPInfo>
10008b94:	1007883a 	mov	r3,r2
10008b98:	d8800115 	stw	r2,4(sp)
10008b9c:	d8801b17 	ldw	r2,108(sp)
10008ba0:	10005226 	beq	r2,zero,10008cec <__gxx_personality_sj0+0x250>
10008ba4:	d8800117 	ldw	r2,4(sp)
10008ba8:	10004d16 	blt	r2,zero,10008ce0 <__gxx_personality_sj0+0x244>
10008bac:	1000381e 	bne	r2,zero,10008c90 <__gxx_personality_sj0+0x1f4>
10008bb0:	d8000415 	stw	zero,16(sp)
10008bb4:	d8000215 	stw	zero,8(sp)
10008bb8:	00800044 	movi	r2,1
10008bbc:	d8c00317 	ldw	r3,12(sp)
10008bc0:	18c0004c 	andi	r3,r3,1
10008bc4:	1800f51e 	bne	r3,zero,10008f9c <__gxx_personality_sj0+0x500>
10008bc8:	d8c00317 	ldw	r3,12(sp)
10008bcc:	18c0020c 	andi	r3,r3,8
10008bd0:	1800b526 	beq	r3,zero,10008ea8 <__gxx_personality_sj0+0x40c>
10008bd4:	10800058 	cmpnei	r2,r2,1
10008bd8:	10013026 	beq	r2,zero,1000909c <__gxx_personality_sj0+0x600>
10008bdc:	d8800417 	ldw	r2,16(sp)
10008be0:	10012916 	blt	r2,zero,10009088 <__gxx_personality_sj0+0x5ec>
10008be4:	d9002517 	ldw	r4,148(sp)
10008be8:	d9802417 	ldw	r6,144(sp)
10008bec:	00bfffc4 	movi	r2,-1
10008bf0:	000b883a 	mov	r5,zero
10008bf4:	d8800e15 	stw	r2,56(sp)
10008bf8:	00143d40 	call	100143d4 <_Unwind_SetGR>
10008bfc:	d9800417 	ldw	r6,16(sp)
10008c00:	d9002517 	ldw	r4,148(sp)
10008c04:	01400044 	movi	r5,1
10008c08:	00143d40 	call	100143d4 <_Unwind_SetGR>
10008c0c:	d9400117 	ldw	r5,4(sp)
10008c10:	d9002517 	ldw	r4,148(sp)
10008c14:	001441c0 	call	1001441c <_Unwind_SetIP>
10008c18:	008001c4 	movi	r2,7
10008c1c:	d8800015 	stw	r2,0(sp)
10008c20:	00000206 	br	10008c2c <__gxx_personality_sj0+0x190>
10008c24:	008000c4 	movi	r2,3
10008c28:	d8800015 	stw	r2,0(sp)
10008c2c:	d9000d04 	addi	r4,sp,52
10008c30:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
10008c34:	d8800017 	ldw	r2,0(sp)
10008c38:	dfc02317 	ldw	ra,140(sp)
10008c3c:	df002217 	ldw	fp,136(sp)
10008c40:	dec02404 	addi	sp,sp,144
10008c44:	f800283a 	ret
10008c48:	000b883a 	mov	r5,zero
10008c4c:	0009883a 	mov	r4,zero
10008c50:	d8800017 	ldw	r2,0(sp)
10008c54:	10800044 	addi	r2,r2,1
10008c58:	d8800015 	stw	r2,0(sp)
10008c5c:	10bfffc3 	ldbu	r2,-1(r2)
10008c60:	10c01fcc 	andi	r3,r2,127
10008c64:	1906983a 	sll	r3,r3,r4
10008c68:	10803fcc 	andi	r2,r2,255
10008c6c:	1080201c 	xori	r2,r2,128
10008c70:	10bfe004 	addi	r2,r2,-128
10008c74:	28cab03a 	or	r5,r5,r3
10008c78:	210001c4 	addi	r4,r4,7
10008c7c:	103ff416 	blt	r2,zero,10008c50 <__gxx_personality_sj0+0x1b4>
10008c80:	d8800117 	ldw	r2,4(sp)
10008c84:	10bfffc4 	addi	r2,r2,-1
10008c88:	d8800115 	stw	r2,4(sp)
10008c8c:	10001a26 	beq	r2,zero,10008cf8 <__gxx_personality_sj0+0x25c>
10008c90:	000d883a 	mov	r6,zero
10008c94:	0009883a 	mov	r4,zero
10008c98:	d8800017 	ldw	r2,0(sp)
10008c9c:	10800044 	addi	r2,r2,1
10008ca0:	d8800015 	stw	r2,0(sp)
10008ca4:	10bfffc3 	ldbu	r2,-1(r2)
10008ca8:	10c01fcc 	andi	r3,r2,127
10008cac:	1906983a 	sll	r3,r3,r4
10008cb0:	10803fcc 	andi	r2,r2,255
10008cb4:	1080201c 	xori	r2,r2,128
10008cb8:	10bfe004 	addi	r2,r2,-128
10008cbc:	30ccb03a 	or	r6,r6,r3
10008cc0:	210001c4 	addi	r4,r4,7
10008cc4:	103ff416 	blt	r2,zero,10008c98 <__gxx_personality_sj0+0x1fc>
10008cc8:	003fdf06 	br	10008c48 <__gxx_personality_sj0+0x1ac>
10008ccc:	d88008c3 	ldbu	r2,35(sp)
10008cd0:	10000326 	beq	r2,zero,10008ce0 <__gxx_personality_sj0+0x244>
10008cd4:	d8800317 	ldw	r2,12(sp)
10008cd8:	1080004c 	andi	r2,r2,1
10008cdc:	1000e226 	beq	r2,zero,10009068 <__gxx_personality_sj0+0x5cc>
10008ce0:	00800204 	movi	r2,8
10008ce4:	d8800015 	stw	r2,0(sp)
10008ce8:	003fd006 	br	10008c2c <__gxx_personality_sj0+0x190>
10008cec:	18bfffc4 	addi	r2,r3,-1
10008cf0:	d8800115 	stw	r2,4(sp)
10008cf4:	003fab06 	br	10008ba4 <__gxx_personality_sj0+0x108>
10008cf8:	30800044 	addi	r2,r6,1
10008cfc:	d8800b15 	stw	r2,44(sp)
10008d00:	283ff326 	beq	r5,zero,10008cd0 <__gxx_personality_sj0+0x234>
10008d04:	d8800b17 	ldw	r2,44(sp)
10008d08:	103ff526 	beq	r2,zero,10008ce0 <__gxx_personality_sj0+0x244>
10008d0c:	d8802017 	ldw	r2,128(sp)
10008d10:	297fffc4 	addi	r5,r5,-1
10008d14:	1145883a 	add	r2,r2,r5
10008d18:	d8800215 	stw	r2,8(sp)
10008d1c:	103fed26 	beq	r2,zero,10008cd4 <__gxx_personality_sj0+0x238>
10008d20:	d8800317 	ldw	r2,12(sp)
10008d24:	1080020c 	andi	r2,r2,8
10008d28:	d8800a15 	stw	r2,40(sp)
10008d2c:	1000a71e 	bne	r2,zero,10008fcc <__gxx_personality_sj0+0x530>
10008d30:	d8800617 	ldw	r2,24(sp)
10008d34:	1000bc26 	beq	r2,zero,10009028 <__gxx_personality_sj0+0x58c>
10008d38:	008400f4 	movhi	r2,4099
10008d3c:	10a14f04 	addi	r2,r2,-31428
10008d40:	d8800915 	stw	r2,36(sp)
10008d44:	d8800717 	ldw	r2,28(sp)
10008d48:	d80008c5 	stb	zero,35(sp)
10008d4c:	108000a8 	cmpgeui	r2,r2,2
10008d50:	d8800c15 	stw	r2,48(sp)
10008d54:	d8800217 	ldw	r2,8(sp)
10008d58:	000b883a 	mov	r5,zero
10008d5c:	0007883a 	mov	r3,zero
10008d60:	d8800015 	stw	r2,0(sp)
10008d64:	d8800017 	ldw	r2,0(sp)
10008d68:	10800044 	addi	r2,r2,1
10008d6c:	113fffc3 	ldbu	r4,-1(r2)
10008d70:	d8800015 	stw	r2,0(sp)
10008d74:	20801fcc 	andi	r2,r4,127
10008d78:	10c4983a 	sll	r2,r2,r3
10008d7c:	21803fcc 	andi	r6,r4,255
10008d80:	3180201c 	xori	r6,r6,128
10008d84:	31bfe004 	addi	r6,r6,-128
10008d88:	288ab03a 	or	r5,r5,r2
10008d8c:	18c001c4 	addi	r3,r3,7
10008d90:	303ff416 	blt	r6,zero,10008d64 <__gxx_personality_sj0+0x2c8>
10008d94:	18800828 	cmpgeui	r2,r3,32
10008d98:	1000061e 	bne	r2,zero,10008db4 <__gxx_personality_sj0+0x318>
10008d9c:	2100100c 	andi	r4,r4,64
10008da0:	20000426 	beq	r4,zero,10008db4 <__gxx_personality_sj0+0x318>
10008da4:	00800044 	movi	r2,1
10008da8:	10c6983a 	sll	r3,r2,r3
10008dac:	00c7c83a 	sub	r3,zero,r3
10008db0:	28cab03a 	or	r5,r5,r3
10008db4:	d9800017 	ldw	r6,0(sp)
10008db8:	d9400415 	stw	r5,16(sp)
10008dbc:	d8000115 	stw	zero,4(sp)
10008dc0:	0007883a 	mov	r3,zero
10008dc4:	31000003 	ldbu	r4,0(r6)
10008dc8:	da000117 	ldw	r8,4(sp)
10008dcc:	31800044 	addi	r6,r6,1
10008dd0:	20801fcc 	andi	r2,r4,127
10008dd4:	10c4983a 	sll	r2,r2,r3
10008dd8:	21c03fcc 	andi	r7,r4,255
10008ddc:	39c0201c 	xori	r7,r7,128
10008de0:	4084b03a 	or	r2,r8,r2
10008de4:	39ffe004 	addi	r7,r7,-128
10008de8:	d8800115 	stw	r2,4(sp)
10008dec:	18c001c4 	addi	r3,r3,7
10008df0:	383ff416 	blt	r7,zero,10008dc4 <__gxx_personality_sj0+0x328>
10008df4:	18800828 	cmpgeui	r2,r3,32
10008df8:	1000081e 	bne	r2,zero,10008e1c <__gxx_personality_sj0+0x380>
10008dfc:	2100100c 	andi	r4,r4,64
10008e00:	20000626 	beq	r4,zero,10008e1c <__gxx_personality_sj0+0x380>
10008e04:	00800044 	movi	r2,1
10008e08:	10c6983a 	sll	r3,r2,r3
10008e0c:	d8800117 	ldw	r2,4(sp)
10008e10:	00c7c83a 	sub	r3,zero,r3
10008e14:	10c4b03a 	or	r2,r2,r3
10008e18:	d8800115 	stw	r2,4(sp)
10008e1c:	28003b26 	beq	r5,zero,10008f0c <__gxx_personality_sj0+0x470>
10008e20:	01403d16 	blt	zero,r5,10008f18 <__gxx_personality_sj0+0x47c>
10008e24:	d8c00917 	ldw	r3,36(sp)
10008e28:	18004b26 	beq	r3,zero,10008f58 <__gxx_personality_sj0+0x4bc>
10008e2c:	d8800a17 	ldw	r2,40(sp)
10008e30:	1000491e 	bne	r2,zero,10008f58 <__gxx_personality_sj0+0x4bc>
10008e34:	d8800617 	ldw	r2,24(sp)
10008e38:	1000471e 	bne	r2,zero,10008f58 <__gxx_personality_sj0+0x4bc>
10008e3c:	d8800c17 	ldw	r2,48(sp)
10008e40:	1000451e 	bne	r2,zero,10008f58 <__gxx_personality_sj0+0x4bc>
10008e44:	d9801a17 	ldw	r6,104(sp)
10008e48:	00bfffc4 	movi	r2,-1
10008e4c:	280f883a 	mov	r7,r5
10008e50:	d9001c04 	addi	r4,sp,112
10008e54:	180b883a 	mov	r5,r3
10008e58:	d8800e15 	stw	r2,56(sp)
10008e5c:	00088600 	call	10008860 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
10008e60:	1080005c 	xori	r2,r2,1
10008e64:	10803fcc 	andi	r2,r2,255
10008e68:	1000371e 	bne	r2,zero,10008f48 <__gxx_personality_sj0+0x4ac>
10008e6c:	d8800117 	ldw	r2,4(sp)
10008e70:	103f9626 	beq	r2,zero,10008ccc <__gxx_personality_sj0+0x230>
10008e74:	d8c00017 	ldw	r3,0(sp)
10008e78:	1885883a 	add	r2,r3,r2
10008e7c:	d8800215 	stw	r2,8(sp)
10008e80:	003fb406 	br	10008d54 <__gxx_personality_sj0+0x2b8>
10008e84:	d8800717 	ldw	r2,28(sp)
10008e88:	108000a8 	cmpgeui	r2,r2,2
10008e8c:	103f2d1e 	bne	r2,zero,10008b44 <__gxx_personality_sj0+0xa8>
10008e90:	d8802417 	ldw	r2,144(sp)
10008e94:	10bffe17 	ldw	r2,-8(r2)
10008e98:	d8800115 	stw	r2,4(sp)
10008e9c:	1000441e 	bne	r2,zero,10008fb0 <__gxx_personality_sj0+0x514>
10008ea0:	d9002417 	ldw	r4,144(sp)
10008ea4:	000c3a80 	call	1000c3a8 <__cxa_call_terminate>
10008ea8:	d8c00617 	ldw	r3,24(sp)
10008eac:	183f491e 	bne	r3,zero,10008bd4 <__gxx_personality_sj0+0x138>
10008eb0:	d8c00717 	ldw	r3,28(sp)
10008eb4:	18c000a8 	cmpgeui	r3,r3,2
10008eb8:	183f461e 	bne	r3,zero,10008bd4 <__gxx_personality_sj0+0x138>
10008ebc:	10800060 	cmpeqi	r2,r2,1
10008ec0:	103ff71e 	bne	r2,zero,10008ea0 <__gxx_personality_sj0+0x404>
10008ec4:	d8800417 	ldw	r2,16(sp)
10008ec8:	103f460e 	bge	r2,zero,10008be4 <__gxx_personality_sj0+0x148>
10008ecc:	d9002517 	ldw	r4,148(sp)
10008ed0:	d9400517 	ldw	r5,20(sp)
10008ed4:	d9801c04 	addi	r6,sp,112
10008ed8:	00bfffc4 	movi	r2,-1
10008edc:	d8800e15 	stw	r2,56(sp)
10008ee0:	00089700 	call	10008970 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10008ee4:	d9402517 	ldw	r5,148(sp)
10008ee8:	d9002103 	ldbu	r4,132(sp)
10008eec:	00089000 	call	10008900 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008ef0:	d9002103 	ldbu	r4,132(sp)
10008ef4:	d9402517 	ldw	r5,148(sp)
10008ef8:	d8801e15 	stw	r2,120(sp)
10008efc:	00089000 	call	10008900 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
10008f00:	d8c02417 	ldw	r3,144(sp)
10008f04:	18bffe15 	stw	r2,-8(r3)
10008f08:	003f3606 	br	10008be4 <__gxx_personality_sj0+0x148>
10008f0c:	00800044 	movi	r2,1
10008f10:	d88008c5 	stb	r2,35(sp)
10008f14:	003fd506 	br	10008e6c <__gxx_personality_sj0+0x3d0>
10008f18:	00bfffc4 	movi	r2,-1
10008f1c:	d9001c04 	addi	r4,sp,112
10008f20:	d8800e15 	stw	r2,56(sp)
10008f24:	00087cc0 	call	100087cc <_ZL15get_ttype_entryP16lsda_header_infom>
10008f28:	10000726 	beq	r2,zero,10008f48 <__gxx_personality_sj0+0x4ac>
10008f2c:	d9400917 	ldw	r5,36(sp)
10008f30:	283fce26 	beq	r5,zero,10008e6c <__gxx_personality_sj0+0x3d0>
10008f34:	d9801a04 	addi	r6,sp,104
10008f38:	1009883a 	mov	r4,r2
10008f3c:	000855c0 	call	1000855c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
10008f40:	10803fcc 	andi	r2,r2,255
10008f44:	103fc926 	beq	r2,zero,10008e6c <__gxx_personality_sj0+0x3d0>
10008f48:	d8800b17 	ldw	r2,44(sp)
10008f4c:	d8800115 	stw	r2,4(sp)
10008f50:	008000c4 	movi	r2,3
10008f54:	003f1906 	br	10008bbc <__gxx_personality_sj0+0x120>
10008f58:	d8801f17 	ldw	r2,124(sp)
10008f5c:	014a303a 	nor	r5,zero,r5
10008f60:	000d883a 	mov	r6,zero
10008f64:	114b883a 	add	r5,r2,r5
10008f68:	0009883a 	mov	r4,zero
10008f6c:	29400044 	addi	r5,r5,1
10008f70:	28bfffc3 	ldbu	r2,-1(r5)
10008f74:	10c01fcc 	andi	r3,r2,127
10008f78:	1906983a 	sll	r3,r3,r4
10008f7c:	10803fcc 	andi	r2,r2,255
10008f80:	1080201c 	xori	r2,r2,128
10008f84:	10bfe004 	addi	r2,r2,-128
10008f88:	30ccb03a 	or	r6,r6,r3
10008f8c:	210001c4 	addi	r4,r4,7
10008f90:	103ff616 	blt	r2,zero,10008f6c <__gxx_personality_sj0+0x4d0>
10008f94:	3005003a 	cmpeq	r2,r6,zero
10008f98:	003fb206 	br	10008e64 <__gxx_personality_sj0+0x3c8>
10008f9c:	d8800617 	ldw	r2,24(sp)
10008fa0:	10000e26 	beq	r2,zero,10008fdc <__gxx_personality_sj0+0x540>
10008fa4:	00800184 	movi	r2,6
10008fa8:	d8800015 	stw	r2,0(sp)
10008fac:	003f1f06 	br	10008c2c <__gxx_personality_sj0+0x190>
10008fb0:	d8802417 	ldw	r2,144(sp)
10008fb4:	10bffb17 	ldw	r2,-20(r2)
10008fb8:	d8800415 	stw	r2,16(sp)
10008fbc:	d8802417 	ldw	r2,144(sp)
10008fc0:	10bffd17 	ldw	r2,-12(r2)
10008fc4:	d8800515 	stw	r2,20(sp)
10008fc8:	003fbe06 	br	10008ec4 <__gxx_personality_sj0+0x428>
10008fcc:	008400f4 	movhi	r2,4099
10008fd0:	10a14d04 	addi	r2,r2,-31436
10008fd4:	d8800915 	stw	r2,36(sp)
10008fd8:	003f5a06 	br	10008d44 <__gxx_personality_sj0+0x2a8>
10008fdc:	d8800717 	ldw	r2,28(sp)
10008fe0:	108000a8 	cmpgeui	r2,r2,2
10008fe4:	103fef1e 	bne	r2,zero,10008fa4 <__gxx_personality_sj0+0x508>
10008fe8:	d8802417 	ldw	r2,144(sp)
10008fec:	d8c00417 	ldw	r3,16(sp)
10008ff0:	10fffb15 	stw	r3,-20(r2)
10008ff4:	d8c00217 	ldw	r3,8(sp)
10008ff8:	10fffc15 	stw	r3,-16(r2)
10008ffc:	d8c00517 	ldw	r3,20(sp)
10009000:	10fffd15 	stw	r3,-12(r2)
10009004:	d8c02417 	ldw	r3,144(sp)
10009008:	d8801a17 	ldw	r2,104(sp)
1000900c:	18bfff15 	stw	r2,-4(r3)
10009010:	1805883a 	mov	r2,r3
10009014:	d8c00117 	ldw	r3,4(sp)
10009018:	10fffe15 	stw	r3,-8(r2)
1000901c:	00800184 	movi	r2,6
10009020:	d8800015 	stw	r2,0(sp)
10009024:	003f0106 	br	10008c2c <__gxx_personality_sj0+0x190>
10009028:	d8800717 	ldw	r2,28(sp)
1000902c:	108000a8 	cmpgeui	r2,r2,2
10009030:	103f411e 	bne	r2,zero,10008d38 <__gxx_personality_sj0+0x29c>
10009034:	d8802417 	ldw	r2,144(sp)
10009038:	10800017 	ldw	r2,0(r2)
1000903c:	1080004c 	andi	r2,r2,1
10009040:	10000626 	beq	r2,zero,1000905c <__gxx_personality_sj0+0x5c0>
10009044:	d8802417 	ldw	r2,144(sp)
10009048:	10bff517 	ldw	r2,-44(r2)
1000904c:	d8801a15 	stw	r2,104(sp)
10009050:	10bff017 	ldw	r2,-64(r2)
10009054:	d8800915 	stw	r2,36(sp)
10009058:	003f3a06 	br	10008d44 <__gxx_personality_sj0+0x2a8>
1000905c:	d8802417 	ldw	r2,144(sp)
10009060:	10800504 	addi	r2,r2,20
10009064:	003ff906 	br	1000904c <__gxx_personality_sj0+0x5b0>
10009068:	d8800317 	ldw	r2,12(sp)
1000906c:	1080020c 	andi	r2,r2,8
10009070:	d8800415 	stw	r2,16(sp)
10009074:	10000a26 	beq	r2,zero,100090a0 <__gxx_personality_sj0+0x604>
10009078:	d8800b17 	ldw	r2,44(sp)
1000907c:	d8000415 	stw	zero,16(sp)
10009080:	d8800115 	stw	r2,4(sp)
10009084:	003ed706 	br	10008be4 <__gxx_personality_sj0+0x148>
10009088:	00800044 	movi	r2,1
1000908c:	d8800e15 	stw	r2,56(sp)
10009090:	00082cc0 	call	100082cc <_ZSt10unexpectedv>
10009094:	d9000f17 	ldw	r4,60(sp)
10009098:	00080480 	call	10008048 <__cxa_begin_catch>
1000909c:	00082a80 	call	100082a8 <_ZSt9terminatev>
100090a0:	d8800617 	ldw	r2,24(sp)
100090a4:	103ff41e 	bne	r2,zero,10009078 <__gxx_personality_sj0+0x5dc>
100090a8:	d8800717 	ldw	r2,28(sp)
100090ac:	108000a8 	cmpgeui	r2,r2,2
100090b0:	103ff11e 	bne	r2,zero,10009078 <__gxx_personality_sj0+0x5dc>
100090b4:	d8800b17 	ldw	r2,44(sp)
100090b8:	d8800115 	stw	r2,4(sp)
100090bc:	003ec906 	br	10008be4 <__gxx_personality_sj0+0x148>

100090c0 <__cxa_call_unexpected>:
100090c0:	00c400b4 	movhi	r3,4098
100090c4:	deffe704 	addi	sp,sp,-100
100090c8:	18d15a04 	addi	r3,r3,17768
100090cc:	01440074 	movhi	r5,4097
100090d0:	00840074 	movhi	r2,4097
100090d4:	2962a704 	addi	r5,r5,-30052
100090d8:	10a45104 	addi	r2,r2,-28348
100090dc:	d9000015 	stw	r4,0(sp)
100090e0:	d8c00b15 	stw	r3,44(sp)
100090e4:	d9000404 	addi	r4,sp,16
100090e8:	d8c01704 	addi	r3,sp,92
100090ec:	d8c00c15 	stw	r3,48(sp)
100090f0:	dfc01815 	stw	ra,96(sp)
100090f4:	d9400a15 	stw	r5,40(sp)
100090f8:	d8800d15 	stw	r2,52(sp)
100090fc:	df001715 	stw	fp,92(sp)
10009100:	dec00e15 	stw	sp,56(sp)
10009104:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10009108:	d9000017 	ldw	r4,0(sp)
1000910c:	00080480 	call	10008048 <__cxa_begin_catch>
10009110:	d9000017 	ldw	r4,0(sp)
10009114:	20fffd17 	ldw	r3,-12(r4)
10009118:	20bffe17 	ldw	r2,-8(r4)
1000911c:	d8c00115 	stw	r3,4(sp)
10009120:	20fffb17 	ldw	r3,-20(r4)
10009124:	d8801315 	stw	r2,76(sp)
10009128:	d8c00015 	stw	r3,0(sp)
1000912c:	20fff817 	ldw	r3,-32(r4)
10009130:	d8c00215 	stw	r3,8(sp)
10009134:	00c00044 	movi	r3,1
10009138:	d8c00515 	stw	r3,20(sp)
1000913c:	213ff717 	ldw	r4,-36(r4)
10009140:	00082bc0 	call	100082bc <_ZN10__cxxabiv112__unexpectedEPFvvE>
10009144:	d8c00617 	ldw	r3,24(sp)
10009148:	d8800517 	ldw	r2,20(sp)
1000914c:	d8c00315 	stw	r3,12(sp)
10009150:	1000221e 	bne	r2,zero,100091dc <__cxa_call_unexpected+0x11c>
10009154:	d9000617 	ldw	r4,24(sp)
10009158:	00080480 	call	10008048 <__cxa_begin_catch>
1000915c:	000c6c40 	call	1000c6c4 <__cxa_get_globals_fast>
10009160:	10800017 	ldw	r2,0(r2)
10009164:	10c00b17 	ldw	r3,44(r2)
10009168:	18c0004c 	andi	r3,r3,1
1000916c:	1800251e 	bne	r3,zero,10009204 <__cxa_call_unexpected+0x144>
10009170:	10801004 	addi	r2,r2,64
10009174:	d8800315 	stw	r2,12(sp)
10009178:	d9400117 	ldw	r5,4(sp)
1000917c:	00800084 	movi	r2,2
10009180:	d9801104 	addi	r6,sp,68
10009184:	0009883a 	mov	r4,zero
10009188:	d8800515 	stw	r2,20(sp)
1000918c:	00089700 	call	10008970 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
10009190:	d9800317 	ldw	r6,12(sp)
10009194:	d9c00017 	ldw	r7,0(sp)
10009198:	d9001104 	addi	r4,sp,68
1000919c:	317ff017 	ldw	r5,-64(r6)
100091a0:	00088600 	call	10008860 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
100091a4:	10803fcc 	andi	r2,r2,255
100091a8:	1000191e 	bne	r2,zero,10009210 <__cxa_call_unexpected+0x150>
100091ac:	d9c00017 	ldw	r7,0(sp)
100091b0:	014400b4 	movhi	r5,4098
100091b4:	00800084 	movi	r2,2
100091b8:	000d883a 	mov	r6,zero
100091bc:	29553204 	addi	r5,r5,21704
100091c0:	d9001104 	addi	r4,sp,68
100091c4:	d8800515 	stw	r2,20(sp)
100091c8:	00088600 	call	10008860 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
100091cc:	10803fcc 	andi	r2,r2,255
100091d0:	1000101e 	bne	r2,zero,10009214 <__cxa_call_unexpected+0x154>
100091d4:	d9000217 	ldw	r4,8(sp)
100091d8:	00081e00 	call	100081e0 <_ZN10__cxxabiv111__terminateEPFvvE>
100091dc:	10bfffc4 	addi	r2,r2,-1
100091e0:	10000126 	beq	r2,zero,100091e8 <__cxa_call_unexpected+0x128>
100091e4:	003b68fa 	trap	3
100091e8:	d8000515 	stw	zero,20(sp)
100091ec:	00080f40 	call	100080f4 <__cxa_end_catch>
100091f0:	00080f40 	call	100080f4 <__cxa_end_catch>
100091f4:	d9000317 	ldw	r4,12(sp)
100091f8:	00bfffc4 	movi	r2,-1
100091fc:	d8800515 	stw	r2,20(sp)
10009200:	00145640 	call	10014564 <_Unwind_SjLj_Resume>
10009204:	10800017 	ldw	r2,0(r2)
10009208:	d8800315 	stw	r2,12(sp)
1000920c:	003fda06 	br	10009178 <__cxa_call_unexpected+0xb8>
10009210:	00084800 	call	10008480 <__cxa_rethrow>
10009214:	01000104 	movi	r4,4
10009218:	00094040 	call	10009404 <__cxa_allocate_exception>
1000921c:	00c400b4 	movhi	r3,4098
10009220:	01840074 	movhi	r6,4097
10009224:	014400b4 	movhi	r5,4098
10009228:	18d54d04 	addi	r3,r3,21812
1000922c:	31b1b804 	addi	r6,r6,-14624
10009230:	29553204 	addi	r5,r5,21704
10009234:	1009883a 	mov	r4,r2
10009238:	10c00015 	stw	r3,0(r2)
1000923c:	00083ec0 	call	100083ec <__cxa_throw>

10009240 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
10009240:	00c400f4 	movhi	r3,4099
10009244:	18eabc04 	addi	r3,r3,-21776
10009248:	18800117 	ldw	r2,4(r3)
1000924c:	21ffff04 	addi	r7,r4,-4
10009250:	10001926 	beq	r2,zero,100092b8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
10009254:	227fff17 	ldw	r9,-4(r4)
10009258:	3a4d883a 	add	r6,r7,r9
1000925c:	30801636 	bltu	r6,r2,100092b8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>
10009260:	11400117 	ldw	r5,4(r2)
10009264:	11801f26 	beq	r2,r6,100092e4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa4>
10009268:	28002426 	beq	r5,zero,100092fc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xbc>
1000926c:	31400336 	bltu	r6,r5,1000927c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x3c>
10009270:	00002806 	br	10009314 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xd4>
10009274:	30c0052e 	bgeu	r6,r3,1000928c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4c>
10009278:	180b883a 	mov	r5,r3
1000927c:	28c00117 	ldw	r3,4(r5)
10009280:	12000104 	addi	r8,r2,4
10009284:	2805883a 	mov	r2,r5
10009288:	183ffa1e 	bne	r3,zero,10009274 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
1000928c:	30c01026 	beq	r6,r3,100092d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
10009290:	40800017 	ldw	r2,0(r8)
10009294:	10c00017 	ldw	r3,0(r2)
10009298:	10cb883a 	add	r5,r2,r3
1000929c:	39400926 	beq	r7,r5,100092c4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x84>
100092a0:	10800117 	ldw	r2,4(r2)
100092a4:	227fff15 	stw	r9,-4(r4)
100092a8:	20800015 	stw	r2,0(r4)
100092ac:	40800017 	ldw	r2,0(r8)
100092b0:	11c00115 	stw	r7,4(r2)
100092b4:	f800283a 	ret
100092b8:	20800015 	stw	r2,0(r4)
100092bc:	19c00115 	stw	r7,4(r3)
100092c0:	f800283a 	ret
100092c4:	1a53883a 	add	r9,r3,r9
100092c8:	12400015 	stw	r9,0(r2)
100092cc:	f800283a 	ret
100092d0:	30c00017 	ldw	r3,0(r6)
100092d4:	30800117 	ldw	r2,4(r6)
100092d8:	48d3883a 	add	r9,r9,r3
100092dc:	28800115 	stw	r2,4(r5)
100092e0:	003feb06 	br	10009290 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
100092e4:	10800017 	ldw	r2,0(r2)
100092e8:	21400015 	stw	r5,0(r4)
100092ec:	1253883a 	add	r9,r2,r9
100092f0:	227fff15 	stw	r9,-4(r4)
100092f4:	19c00115 	stw	r7,4(r3)
100092f8:	f800283a 	ret
100092fc:	020400f4 	movhi	r8,4099
10009300:	0007883a 	mov	r3,zero
10009304:	100b883a 	mov	r5,r2
10009308:	422abd04 	addi	r8,r8,-21772
1000930c:	30ffe01e 	bne	r6,r3,10009290 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009310:	003fef06 	br	100092d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>
10009314:	020400f4 	movhi	r8,4099
10009318:	2807883a 	mov	r3,r5
1000931c:	422abd04 	addi	r8,r8,-21772
10009320:	100b883a 	mov	r5,r2
10009324:	30ffda1e 	bne	r6,r3,10009290 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x50>
10009328:	003fe906 	br	100092d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x90>

1000932c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
1000932c:	21000104 	addi	r4,r4,4
10009330:	20800228 	cmpgeui	r2,r4,8
10009334:	1000011e 	bne	r2,zero,1000933c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x10>
10009338:	01000204 	movi	r4,8
1000933c:	008400f4 	movhi	r2,4099
10009340:	10eabd17 	ldw	r3,-21772(r2)
10009344:	210000c4 	addi	r4,r4,3
10009348:	017fff04 	movi	r5,-4
1000934c:	214a703a 	and	r5,r4,r5
10009350:	18001a26 	beq	r3,zero,100093bc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x90>
10009354:	19000017 	ldw	r4,0(r3)
10009358:	21400436 	bltu	r4,r5,1000936c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
1000935c:	00001906 	br	100093c4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x98>
10009360:	11000017 	ldw	r4,0(r2)
10009364:	2140042e 	bgeu	r4,r5,10009378 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4c>
10009368:	1007883a 	mov	r3,r2
1000936c:	18800117 	ldw	r2,4(r3)
10009370:	103ffb1e 	bne	r2,zero,10009360 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
10009374:	f800283a 	ret
10009378:	19800104 	addi	r6,r3,4
1000937c:	2147c83a 	sub	r3,r4,r5
10009380:	1a000228 	cmpgeui	r8,r3,8
10009384:	11c00117 	ldw	r7,4(r2)
10009388:	40000826 	beq	r8,zero,100093ac <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x80>
1000938c:	1149883a 	add	r4,r2,r5
10009390:	21c00115 	stw	r7,4(r4)
10009394:	30800017 	ldw	r2,0(r6)
10009398:	20c00015 	stw	r3,0(r4)
1000939c:	11400015 	stw	r5,0(r2)
100093a0:	31000015 	stw	r4,0(r6)
100093a4:	10800104 	addi	r2,r2,4
100093a8:	f800283a 	ret
100093ac:	11000015 	stw	r4,0(r2)
100093b0:	31c00015 	stw	r7,0(r6)
100093b4:	10800104 	addi	r2,r2,4
100093b8:	f800283a 	ret
100093bc:	0005883a 	mov	r2,zero
100093c0:	f800283a 	ret
100093c4:	018400f4 	movhi	r6,4099
100093c8:	1805883a 	mov	r2,r3
100093cc:	31aabd04 	addi	r6,r6,-21772
100093d0:	003fea06 	br	1000937c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>

100093d4 <_ZN9__gnu_cxx9__freeresEv>:
100093d4:	008400f4 	movhi	r2,4099
100093d8:	112abe17 	ldw	r4,-21768(r2)
100093dc:	20000826 	beq	r4,zero,10009400 <_ZN9__gnu_cxx9__freeresEv+0x2c>
100093e0:	deffff04 	addi	sp,sp,-4
100093e4:	dfc00015 	stw	ra,0(sp)
100093e8:	0014e800 	call	10014e80 <free>
100093ec:	008400f4 	movhi	r2,4099
100093f0:	102abe15 	stw	zero,-21768(r2)
100093f4:	dfc00017 	ldw	ra,0(sp)
100093f8:	dec00104 	addi	sp,sp,4
100093fc:	f800283a 	ret
10009400:	f800283a 	ret

10009404 <__cxa_allocate_exception>:
10009404:	defffe04 	addi	sp,sp,-8
10009408:	dc000015 	stw	r16,0(sp)
1000940c:	24001104 	addi	r16,r4,68
10009410:	8009883a 	mov	r4,r16
10009414:	dfc00115 	stw	ra,4(sp)
10009418:	0014e700 	call	10014e70 <malloc>
1000941c:	10000a26 	beq	r2,zero,10009448 <__cxa_allocate_exception+0x44>
10009420:	1007883a 	mov	r3,r2
10009424:	01801104 	movi	r6,68
10009428:	000b883a 	mov	r5,zero
1000942c:	1809883a 	mov	r4,r3
10009430:	0015a240 	call	10015a24 <memset>
10009434:	10801104 	addi	r2,r2,68
10009438:	dfc00117 	ldw	ra,4(sp)
1000943c:	dc000017 	ldw	r16,0(sp)
10009440:	dec00204 	addi	sp,sp,8
10009444:	f800283a 	ret
10009448:	8009883a 	mov	r4,r16
1000944c:	000932c0 	call	1000932c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
10009450:	1007883a 	mov	r3,r2
10009454:	103ff31e 	bne	r2,zero,10009424 <__cxa_allocate_exception+0x20>
10009458:	00082a80 	call	100082a8 <_ZSt9terminatev>

1000945c <__cxa_free_exception>:
1000945c:	008400f4 	movhi	r2,4099
10009460:	10aabc04 	addi	r2,r2,-21776
10009464:	10c00217 	ldw	r3,8(r2)
10009468:	213fef04 	addi	r4,r4,-68
1000946c:	1900042e 	bgeu	r3,r4,10009480 <__cxa_free_exception+0x24>
10009470:	10800317 	ldw	r2,12(r2)
10009474:	1887883a 	add	r3,r3,r2
10009478:	20c0012e 	bgeu	r4,r3,10009480 <__cxa_free_exception+0x24>
1000947c:	00092401 	jmpi	10009240 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
10009480:	0014e801 	jmpi	10014e80 <free>

10009484 <__cxa_allocate_dependent_exception>:
10009484:	deffff04 	addi	sp,sp,-4
10009488:	01001004 	movi	r4,64
1000948c:	dfc00015 	stw	ra,0(sp)
10009490:	0014e700 	call	10014e70 <malloc>
10009494:	10000826 	beq	r2,zero,100094b8 <__cxa_allocate_dependent_exception+0x34>
10009498:	1007883a 	mov	r3,r2
1000949c:	01801004 	movi	r6,64
100094a0:	000b883a 	mov	r5,zero
100094a4:	1809883a 	mov	r4,r3
100094a8:	0015a240 	call	10015a24 <memset>
100094ac:	dfc00017 	ldw	ra,0(sp)
100094b0:	dec00104 	addi	sp,sp,4
100094b4:	f800283a 	ret
100094b8:	01001004 	movi	r4,64
100094bc:	000932c0 	call	1000932c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
100094c0:	1007883a 	mov	r3,r2
100094c4:	103ff51e 	bne	r2,zero,1000949c <__cxa_allocate_dependent_exception+0x18>
100094c8:	00082a80 	call	100082a8 <_ZSt9terminatev>

100094cc <__cxa_free_dependent_exception>:
100094cc:	008400f4 	movhi	r2,4099
100094d0:	10aabc04 	addi	r2,r2,-21776
100094d4:	10c00217 	ldw	r3,8(r2)
100094d8:	200b883a 	mov	r5,r4
100094dc:	1900042e 	bgeu	r3,r4,100094f0 <__cxa_free_dependent_exception+0x24>
100094e0:	10800317 	ldw	r2,12(r2)
100094e4:	1887883a 	add	r3,r3,r2
100094e8:	20c0012e 	bgeu	r4,r3,100094f0 <__cxa_free_dependent_exception+0x24>
100094ec:	00092401 	jmpi	10009240 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
100094f0:	2809883a 	mov	r4,r5
100094f4:	0014e801 	jmpi	10014e80 <free>

100094f8 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
100094f8:	defffd04 	addi	sp,sp,-12
100094fc:	dc000015 	stw	r16,0(sp)
10009500:	040400f4 	movhi	r16,4099
10009504:	dc400115 	stw	r17,4(sp)
10009508:	842abc04 	addi	r16,r16,-21776
1000950c:	04424004 	movi	r17,2304
10009510:	01024004 	movi	r4,2304
10009514:	dfc00215 	stw	ra,8(sp)
10009518:	84400315 	stw	r17,12(r16)
1000951c:	0014e700 	call	10014e70 <malloc>
10009520:	80800215 	stw	r2,8(r16)
10009524:	10000826 	beq	r2,zero,10009548 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
10009528:	80800115 	stw	r2,4(r16)
1000952c:	14400015 	stw	r17,0(r2)
10009530:	10000115 	stw	zero,4(r2)
10009534:	dfc00217 	ldw	ra,8(sp)
10009538:	dc400117 	ldw	r17,4(sp)
1000953c:	dc000017 	ldw	r16,0(sp)
10009540:	dec00304 	addi	sp,sp,12
10009544:	f800283a 	ret
10009548:	008400f4 	movhi	r2,4099
1000954c:	102abf15 	stw	zero,-21764(r2)
10009550:	008400f4 	movhi	r2,4099
10009554:	102abd15 	stw	zero,-21772(r2)
10009558:	003ff606 	br	10009534 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

1000955c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
1000955c:	20800017 	ldw	r2,0(r4)
10009560:	1000031e 	bne	r2,zero,10009570 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x14>
10009564:	20800117 	ldw	r2,4(r4)
10009568:	10800117 	ldw	r2,4(r2)
1000956c:	11001026 	beq	r2,r4,100095b0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x54>
10009570:	20800217 	ldw	r2,8(r4)
10009574:	1000021e 	bne	r2,zero,10009580 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x24>
10009578:	00000406 	br	1000958c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x30>
1000957c:	1805883a 	mov	r2,r3
10009580:	10c00317 	ldw	r3,12(r2)
10009584:	183ffd1e 	bne	r3,zero,1000957c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
10009588:	f800283a 	ret
1000958c:	20c00117 	ldw	r3,4(r4)
10009590:	18800217 	ldw	r2,8(r3)
10009594:	20800226 	beq	r4,r2,100095a0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x44>
10009598:	00000706 	br	100095b8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x5c>
1000959c:	1007883a 	mov	r3,r2
100095a0:	18800117 	ldw	r2,4(r3)
100095a4:	11000217 	ldw	r4,8(r2)
100095a8:	193ffc26 	beq	r3,r4,1000959c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x40>
100095ac:	f800283a 	ret
100095b0:	10800317 	ldw	r2,12(r2)
100095b4:	f800283a 	ret
100095b8:	1805883a 	mov	r2,r3
100095bc:	003ff206 	br	10009588 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x2c>

100095c0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
100095c0:	20800317 	ldw	r2,12(r4)
100095c4:	1000021e 	bne	r2,zero,100095d0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
100095c8:	00000406 	br	100095dc <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
100095cc:	1805883a 	mov	r2,r3
100095d0:	10c00217 	ldw	r3,8(r2)
100095d4:	183ffd1e 	bne	r3,zero,100095cc <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xc>
100095d8:	f800283a 	ret
100095dc:	20c00117 	ldw	r3,4(r4)
100095e0:	18800317 	ldw	r2,12(r3)
100095e4:	20800226 	beq	r4,r2,100095f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x30>
100095e8:	00000806 	br	1000960c <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4c>
100095ec:	1007883a 	mov	r3,r2
100095f0:	18800117 	ldw	r2,4(r3)
100095f4:	11000317 	ldw	r4,12(r2)
100095f8:	20fffc26 	beq	r4,r3,100095ec <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x2c>
100095fc:	19400317 	ldw	r5,12(r3)
10009600:	117ff51e 	bne	r2,r5,100095d8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
10009604:	1805883a 	mov	r2,r3
10009608:	003ff306 	br	100095d8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
1000960c:	1805883a 	mov	r2,r3
10009610:	000b883a 	mov	r5,zero
10009614:	2007883a 	mov	r3,r4
10009618:	117fef1e 	bne	r2,r5,100095d8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x18>
1000961c:	003ff906 	br	10009604 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x44>

10009620 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>:
10009620:	00095c01 	jmpi	100095c0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>

10009624 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
10009624:	000955c1 	jmpi	1000955c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

10009628 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>:
10009628:	000955c1 	jmpi	1000955c <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

1000962c <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
1000962c:	20800317 	ldw	r2,12(r4)
10009630:	10c00217 	ldw	r3,8(r2)
10009634:	20c00315 	stw	r3,12(r4)
10009638:	18000126 	beq	r3,zero,10009640 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x14>
1000963c:	19000115 	stw	r4,4(r3)
10009640:	20c00117 	ldw	r3,4(r4)
10009644:	10c00115 	stw	r3,4(r2)
10009648:	29800017 	ldw	r6,0(r5)
1000964c:	21800a26 	beq	r4,r6,10009678 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x4c>
10009650:	19400217 	ldw	r5,8(r3)
10009654:	21400426 	beq	r4,r5,10009668 <_ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x3c>
10009658:	18800315 	stw	r2,12(r3)
1000965c:	11000215 	stw	r4,8(r2)
10009660:	20800115 	stw	r2,4(r4)
10009664:	f800283a 	ret
10009668:	18800215 	stw	r2,8(r3)
1000966c:	11000215 	stw	r4,8(r2)
10009670:	20800115 	stw	r2,4(r4)
10009674:	f800283a 	ret
10009678:	28800015 	stw	r2,0(r5)
1000967c:	11000215 	stw	r4,8(r2)
10009680:	20800115 	stw	r2,4(r4)
10009684:	f800283a 	ret

10009688 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
10009688:	20800217 	ldw	r2,8(r4)
1000968c:	10c00317 	ldw	r3,12(r2)
10009690:	20c00215 	stw	r3,8(r4)
10009694:	18000126 	beq	r3,zero,1000969c <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x14>
10009698:	19000115 	stw	r4,4(r3)
1000969c:	20c00117 	ldw	r3,4(r4)
100096a0:	10c00115 	stw	r3,4(r2)
100096a4:	29800017 	ldw	r6,0(r5)
100096a8:	21800a26 	beq	r4,r6,100096d4 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x4c>
100096ac:	19400317 	ldw	r5,12(r3)
100096b0:	21400426 	beq	r4,r5,100096c4 <_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x3c>
100096b4:	18800215 	stw	r2,8(r3)
100096b8:	11000315 	stw	r4,12(r2)
100096bc:	20800115 	stw	r2,4(r4)
100096c0:	f800283a 	ret
100096c4:	18800315 	stw	r2,12(r3)
100096c8:	11000315 	stw	r4,12(r2)
100096cc:	20800115 	stw	r2,4(r4)
100096d0:	f800283a 	ret
100096d4:	28800015 	stw	r2,0(r5)
100096d8:	11000315 	stw	r4,12(r2)
100096dc:	20800115 	stw	r2,4(r4)
100096e0:	f800283a 	ret

100096e4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
100096e4:	29800115 	stw	r6,4(r5)
100096e8:	28000215 	stw	zero,8(r5)
100096ec:	28000315 	stw	zero,12(r5)
100096f0:	28000015 	stw	zero,0(r5)
100096f4:	21003fcc 	andi	r4,r4,255
100096f8:	20001826 	beq	r4,zero,1000975c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x78>
100096fc:	31400215 	stw	r5,8(r6)
10009700:	39807d26 	beq	r7,r6,100098f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x214>
10009704:	38800217 	ldw	r2,8(r7)
10009708:	11808126 	beq	r2,r6,10009910 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22c>
1000970c:	39800117 	ldw	r6,4(r7)
10009710:	02000044 	movi	r8,1
10009714:	29800e26 	beq	r5,r6,10009750 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
10009718:	28c00117 	ldw	r3,4(r5)
1000971c:	18800017 	ldw	r2,0(r3)
10009720:	10000b1e 	bne	r2,zero,10009750 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
10009724:	18800117 	ldw	r2,4(r3)
10009728:	11000217 	ldw	r4,8(r2)
1000972c:	19002526 	beq	r3,r4,100097c4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xe0>
10009730:	20001026 	beq	r4,zero,10009774 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
10009734:	22400017 	ldw	r9,0(r4)
10009738:	48000e1e 	bne	r9,zero,10009774 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x90>
1000973c:	1a000015 	stw	r8,0(r3)
10009740:	22000015 	stw	r8,0(r4)
10009744:	10000015 	stw	zero,0(r2)
10009748:	100b883a 	mov	r5,r2
1000974c:	29bff21e 	bne	r5,r6,10009718 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x34>
10009750:	00800044 	movi	r2,1
10009754:	30800015 	stw	r2,0(r6)
10009758:	f800283a 	ret
1000975c:	31400315 	stw	r5,12(r6)
10009760:	38800317 	ldw	r2,12(r7)
10009764:	11bfe91e 	bne	r2,r6,1000970c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
10009768:	39400315 	stw	r5,12(r7)
1000976c:	39800117 	ldw	r6,4(r7)
10009770:	003fe706 	br	10009710 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x2c>
10009774:	19000217 	ldw	r4,8(r3)
10009778:	21402e26 	beq	r4,r5,10009834 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x150>
1000977c:	11000317 	ldw	r4,12(r2)
10009780:	1a000015 	stw	r8,0(r3)
10009784:	10000015 	stw	zero,0(r2)
10009788:	20c00217 	ldw	r3,8(r4)
1000978c:	10c00315 	stw	r3,12(r2)
10009790:	18000126 	beq	r3,zero,10009798 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb4>
10009794:	18800115 	stw	r2,4(r3)
10009798:	10c00117 	ldw	r3,4(r2)
1000979c:	20c00115 	stw	r3,4(r4)
100097a0:	39800117 	ldw	r6,4(r7)
100097a4:	11803426 	beq	r2,r6,10009878 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x194>
100097a8:	19800217 	ldw	r6,8(r3)
100097ac:	11803426 	beq	r2,r6,10009880 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x19c>
100097b0:	19000315 	stw	r4,12(r3)
100097b4:	20800215 	stw	r2,8(r4)
100097b8:	11000115 	stw	r4,4(r2)
100097bc:	39800117 	ldw	r6,4(r7)
100097c0:	003fd406 	br	10009714 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
100097c4:	12400317 	ldw	r9,12(r2)
100097c8:	48000726 	beq	r9,zero,100097e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
100097cc:	4a800017 	ldw	r10,0(r9)
100097d0:	5000051e 	bne	r10,zero,100097e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x104>
100097d4:	1a000015 	stw	r8,0(r3)
100097d8:	4a000015 	stw	r8,0(r9)
100097dc:	10000015 	stw	zero,0(r2)
100097e0:	100b883a 	mov	r5,r2
100097e4:	003fcb06 	br	10009714 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
100097e8:	19800317 	ldw	r6,12(r3)
100097ec:	31402626 	beq	r6,r5,10009888 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1a4>
100097f0:	21800317 	ldw	r6,12(r4)
100097f4:	1a000015 	stw	r8,0(r3)
100097f8:	10000015 	stw	zero,0(r2)
100097fc:	11800215 	stw	r6,8(r2)
10009800:	30000126 	beq	r6,zero,10009808 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x124>
10009804:	30800115 	stw	r2,4(r6)
10009808:	10c00117 	ldw	r3,4(r2)
1000980c:	20c00115 	stw	r3,4(r4)
10009810:	39800117 	ldw	r6,4(r7)
10009814:	11802e26 	beq	r2,r6,100098d0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1ec>
10009818:	19800317 	ldw	r6,12(r3)
1000981c:	11802e26 	beq	r2,r6,100098d8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1f4>
10009820:	19000215 	stw	r4,8(r3)
10009824:	20800315 	stw	r2,12(r4)
10009828:	11000115 	stw	r4,4(r2)
1000982c:	39800117 	ldw	r6,4(r7)
10009830:	003fb806 	br	10009714 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x30>
10009834:	29000317 	ldw	r4,12(r5)
10009838:	19000215 	stw	r4,8(r3)
1000983c:	20002a26 	beq	r4,zero,100098e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x204>
10009840:	20c00115 	stw	r3,4(r4)
10009844:	19000117 	ldw	r4,4(r3)
10009848:	29000115 	stw	r4,4(r5)
1000984c:	39800117 	ldw	r6,4(r7)
10009850:	19802326 	beq	r3,r6,100098e0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1fc>
10009854:	21800317 	ldw	r6,12(r4)
10009858:	19802526 	beq	r3,r6,100098f0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20c>
1000985c:	21400215 	stw	r5,8(r4)
10009860:	28c00315 	stw	r3,12(r5)
10009864:	2809883a 	mov	r4,r5
10009868:	19400115 	stw	r5,4(r3)
1000986c:	180b883a 	mov	r5,r3
10009870:	2007883a 	mov	r3,r4
10009874:	003fc106 	br	1000977c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x98>
10009878:	39000115 	stw	r4,4(r7)
1000987c:	003fcd06 	br	100097b4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
10009880:	19000215 	stw	r4,8(r3)
10009884:	003fcb06 	br	100097b4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xd0>
10009888:	29000217 	ldw	r4,8(r5)
1000988c:	19000315 	stw	r4,12(r3)
10009890:	20002126 	beq	r4,zero,10009918 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x234>
10009894:	20c00115 	stw	r3,4(r4)
10009898:	19000117 	ldw	r4,4(r3)
1000989c:	29000115 	stw	r4,4(r5)
100098a0:	39800117 	ldw	r6,4(r7)
100098a4:	19802226 	beq	r3,r6,10009930 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
100098a8:	21800217 	ldw	r6,8(r4)
100098ac:	19801e26 	beq	r3,r6,10009928 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x244>
100098b0:	21400315 	stw	r5,12(r4)
100098b4:	28c00215 	stw	r3,8(r5)
100098b8:	280d883a 	mov	r6,r5
100098bc:	11000217 	ldw	r4,8(r2)
100098c0:	19400115 	stw	r5,4(r3)
100098c4:	180b883a 	mov	r5,r3
100098c8:	3007883a 	mov	r3,r6
100098cc:	003fc806 	br	100097f0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x10c>
100098d0:	39000115 	stw	r4,4(r7)
100098d4:	003fd306 	br	10009824 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
100098d8:	19000315 	stw	r4,12(r3)
100098dc:	003fd106 	br	10009824 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x140>
100098e0:	39400115 	stw	r5,4(r7)
100098e4:	003fde06 	br	10009860 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
100098e8:	1009883a 	mov	r4,r2
100098ec:	003fd606 	br	10009848 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x164>
100098f0:	21400315 	stw	r5,12(r4)
100098f4:	003fda06 	br	10009860 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x17c>
100098f8:	39400115 	stw	r5,4(r7)
100098fc:	39400315 	stw	r5,12(r7)
10009900:	280d883a 	mov	r6,r5
10009904:	00800044 	movi	r2,1
10009908:	30800015 	stw	r2,0(r6)
1000990c:	f800283a 	ret
10009910:	39400215 	stw	r5,8(r7)
10009914:	003f7d06 	br	1000970c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
10009918:	28800115 	stw	r2,4(r5)
1000991c:	39000117 	ldw	r4,4(r7)
10009920:	19000326 	beq	r3,r4,10009930 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x24c>
10009924:	1009883a 	mov	r4,r2
10009928:	21400215 	stw	r5,8(r4)
1000992c:	003fe106 	br	100098b4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>
10009930:	39400115 	stw	r5,4(r7)
10009934:	003fdf06 	br	100098b4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1d0>

10009938 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>:
10009938:	2005883a 	mov	r2,r4
1000993c:	21000217 	ldw	r4,8(r4)
10009940:	12000317 	ldw	r8,12(r2)
10009944:	2000b326 	beq	r4,zero,10009c14 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2dc>
10009948:	40004e26 	beq	r8,zero,10009a84 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x14c>
1000994c:	400d883a 	mov	r6,r8
10009950:	00000106 	br	10009958 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x20>
10009954:	180d883a 	mov	r6,r3
10009958:	30c00217 	ldw	r3,8(r6)
1000995c:	183ffd1e 	bne	r3,zero,10009954 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1c>
10009960:	31c00317 	ldw	r7,12(r6)
10009964:	3080aa26 	beq	r6,r2,10009c10 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d8>
10009968:	21800115 	stw	r6,4(r4)
1000996c:	31000215 	stw	r4,8(r6)
10009970:	32009f26 	beq	r6,r8,10009bf0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2b8>
10009974:	30c00117 	ldw	r3,4(r6)
10009978:	3800a326 	beq	r7,zero,10009c08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2d0>
1000997c:	38c00115 	stw	r3,4(r7)
10009980:	31000117 	ldw	r4,4(r6)
10009984:	21c00215 	stw	r7,8(r4)
10009988:	32000315 	stw	r8,12(r6)
1000998c:	11000317 	ldw	r4,12(r2)
10009990:	21800115 	stw	r6,4(r4)
10009994:	29000117 	ldw	r4,4(r5)
10009998:	20809226 	beq	r4,r2,10009be4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2ac>
1000999c:	12000117 	ldw	r8,4(r2)
100099a0:	41000217 	ldw	r4,8(r8)
100099a4:	20809626 	beq	r4,r2,10009c00 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c8>
100099a8:	41800315 	stw	r6,12(r8)
100099ac:	12400017 	ldw	r9,0(r2)
100099b0:	31000017 	ldw	r4,0(r6)
100099b4:	32000115 	stw	r8,4(r6)
100099b8:	32400015 	stw	r9,0(r6)
100099bc:	11000015 	stw	r4,0(r2)
100099c0:	20004726 	beq	r4,zero,10009ae0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1a8>
100099c4:	29800117 	ldw	r6,4(r5)
100099c8:	02800044 	movi	r10,1
100099cc:	31c02926 	beq	r6,r7,10009a74 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
100099d0:	38000326 	beq	r7,zero,100099e0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xa8>
100099d4:	39800017 	ldw	r6,0(r7)
100099d8:	31800060 	cmpeqi	r6,r6,1
100099dc:	30002626 	beq	r6,zero,10009a78 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
100099e0:	19800217 	ldw	r6,8(r3)
100099e4:	31c03f26 	beq	r6,r7,10009ae4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1ac>
100099e8:	32400017 	ldw	r9,0(r6)
100099ec:	32000317 	ldw	r8,12(r6)
100099f0:	4800111e 	bne	r9,zero,10009a38 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x100>
100099f4:	32800015 	stw	r10,0(r6)
100099f8:	18000015 	stw	zero,0(r3)
100099fc:	1a000215 	stw	r8,8(r3)
10009a00:	40000126 	beq	r8,zero,10009a08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xd0>
10009a04:	40c00115 	stw	r3,4(r8)
10009a08:	19000117 	ldw	r4,4(r3)
10009a0c:	31000115 	stw	r4,4(r6)
10009a10:	2a400117 	ldw	r9,4(r5)
10009a14:	1a406726 	beq	r3,r9,10009bb4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x27c>
10009a18:	22400317 	ldw	r9,12(r4)
10009a1c:	1a406826 	beq	r3,r9,10009bc0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x288>
10009a20:	21800215 	stw	r6,8(r4)
10009a24:	19000217 	ldw	r4,8(r3)
10009a28:	30c00315 	stw	r3,12(r6)
10009a2c:	22000317 	ldw	r8,12(r4)
10009a30:	19800115 	stw	r6,4(r3)
10009a34:	200d883a 	mov	r6,r4
10009a38:	40000326 	beq	r8,zero,10009a48 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x110>
10009a3c:	42400017 	ldw	r9,0(r8)
10009a40:	4a400058 	cmpnei	r9,r9,1
10009a44:	4800831e 	bne	r9,zero,10009c54 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x31c>
10009a48:	32400217 	ldw	r9,8(r6)
10009a4c:	48000326 	beq	r9,zero,10009a5c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009a50:	4a000017 	ldw	r8,0(r9)
10009a54:	42000058 	cmpnei	r8,r8,1
10009a58:	40009b1e 	bne	r8,zero,10009cc8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x390>
10009a5c:	30000015 	stw	zero,0(r6)
10009a60:	19800117 	ldw	r6,4(r3)
10009a64:	180f883a 	mov	r7,r3
10009a68:	3007883a 	mov	r3,r6
10009a6c:	29800117 	ldw	r6,4(r5)
10009a70:	31ffd71e 	bne	r6,r7,100099d0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x98>
10009a74:	38004e26 	beq	r7,zero,10009bb0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x278>
10009a78:	00c00044 	movi	r3,1
10009a7c:	38c00015 	stw	r3,0(r7)
10009a80:	f800283a 	ret
10009a84:	10c00117 	ldw	r3,4(r2)
10009a88:	20c00115 	stw	r3,4(r4)
10009a8c:	200f883a 	mov	r7,r4
10009a90:	29000117 	ldw	r4,4(r5)
10009a94:	20806426 	beq	r4,r2,10009c28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f0>
10009a98:	11000117 	ldw	r4,4(r2)
10009a9c:	21800217 	ldw	r6,8(r4)
10009aa0:	30805526 	beq	r6,r2,10009bf8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2c0>
10009aa4:	21c00315 	stw	r7,12(r4)
10009aa8:	29000217 	ldw	r4,8(r5)
10009aac:	20806026 	beq	r4,r2,10009c30 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2f8>
10009ab0:	29800317 	ldw	r6,12(r5)
10009ab4:	11000017 	ldw	r4,0(r2)
10009ab8:	30bfc11e 	bne	r6,r2,100099c0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
10009abc:	11800217 	ldw	r6,8(r2)
10009ac0:	3000b626 	beq	r6,zero,10009d9c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x464>
10009ac4:	3811883a 	mov	r8,r7
10009ac8:	00000106 	br	10009ad0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x198>
10009acc:	3011883a 	mov	r8,r6
10009ad0:	41800317 	ldw	r6,12(r8)
10009ad4:	303ffd1e 	bne	r6,zero,10009acc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x194>
10009ad8:	2a000315 	stw	r8,12(r5)
10009adc:	203fb91e 	bne	r4,zero,100099c4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x8c>
10009ae0:	f800283a 	ret
10009ae4:	19800317 	ldw	r6,12(r3)
10009ae8:	31000017 	ldw	r4,0(r6)
10009aec:	32000217 	ldw	r8,8(r6)
10009af0:	2000111e 	bne	r4,zero,10009b38 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x200>
10009af4:	32800015 	stw	r10,0(r6)
10009af8:	18000015 	stw	zero,0(r3)
10009afc:	1a000315 	stw	r8,12(r3)
10009b00:	40000126 	beq	r8,zero,10009b08 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1d0>
10009b04:	40c00115 	stw	r3,4(r8)
10009b08:	19000117 	ldw	r4,4(r3)
10009b0c:	31000115 	stw	r4,4(r6)
10009b10:	2a400117 	ldw	r9,4(r5)
10009b14:	1a402d26 	beq	r3,r9,10009bcc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x294>
10009b18:	22400217 	ldw	r9,8(r4)
10009b1c:	1a402e26 	beq	r3,r9,10009bd8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x2a0>
10009b20:	21800315 	stw	r6,12(r4)
10009b24:	19000317 	ldw	r4,12(r3)
10009b28:	30c00215 	stw	r3,8(r6)
10009b2c:	22000217 	ldw	r8,8(r4)
10009b30:	19800115 	stw	r6,4(r3)
10009b34:	200d883a 	mov	r6,r4
10009b38:	40000326 	beq	r8,zero,10009b48 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x210>
10009b3c:	41000017 	ldw	r4,0(r8)
10009b40:	21000058 	cmpnei	r4,r4,1
10009b44:	2000791e 	bne	r4,zero,10009d2c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3f4>
10009b48:	32400317 	ldw	r9,12(r6)
10009b4c:	483fc326 	beq	r9,zero,10009a5c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009b50:	49000017 	ldw	r4,0(r9)
10009b54:	21000058 	cmpnei	r4,r4,1
10009b58:	203fc026 	beq	r4,zero,10009a5c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x124>
10009b5c:	1a000017 	ldw	r8,0(r3)
10009b60:	19000317 	ldw	r4,12(r3)
10009b64:	32000015 	stw	r8,0(r6)
10009b68:	01800044 	movi	r6,1
10009b6c:	19800015 	stw	r6,0(r3)
10009b70:	01800044 	movi	r6,1
10009b74:	49800015 	stw	r6,0(r9)
10009b78:	21800217 	ldw	r6,8(r4)
10009b7c:	19800315 	stw	r6,12(r3)
10009b80:	30000126 	beq	r6,zero,10009b88 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x250>
10009b84:	30c00115 	stw	r3,4(r6)
10009b88:	19800117 	ldw	r6,4(r3)
10009b8c:	21800115 	stw	r6,4(r4)
10009b90:	2a000117 	ldw	r8,4(r5)
10009b94:	1a008926 	beq	r3,r8,10009dbc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x484>
10009b98:	31400217 	ldw	r5,8(r6)
10009b9c:	19408d26 	beq	r3,r5,10009dd4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x49c>
10009ba0:	31000315 	stw	r4,12(r6)
10009ba4:	20c00215 	stw	r3,8(r4)
10009ba8:	19000115 	stw	r4,4(r3)
10009bac:	383fb21e 	bne	r7,zero,10009a78 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x140>
10009bb0:	f800283a 	ret
10009bb4:	29800115 	stw	r6,4(r5)
10009bb8:	19000217 	ldw	r4,8(r3)
10009bbc:	003f9a06 	br	10009a28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
10009bc0:	21800315 	stw	r6,12(r4)
10009bc4:	4009883a 	mov	r4,r8
10009bc8:	003f9706 	br	10009a28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0xf0>
10009bcc:	29800115 	stw	r6,4(r5)
10009bd0:	19000317 	ldw	r4,12(r3)
10009bd4:	003fd406 	br	10009b28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
10009bd8:	21800215 	stw	r6,8(r4)
10009bdc:	4009883a 	mov	r4,r8
10009be0:	003fd106 	br	10009b28 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x1f0>
10009be4:	29800115 	stw	r6,4(r5)
10009be8:	12000117 	ldw	r8,4(r2)
10009bec:	003f6f06 	br	100099ac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
10009bf0:	3007883a 	mov	r3,r6
10009bf4:	003f6706 	br	10009994 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x5c>
10009bf8:	21c00215 	stw	r7,8(r4)
10009bfc:	003faa06 	br	10009aa8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
10009c00:	41800215 	stw	r6,8(r8)
10009c04:	003f6906 	br	100099ac <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x74>
10009c08:	1809883a 	mov	r4,r3
10009c0c:	003f5d06 	br	10009984 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4c>
10009c10:	3811883a 	mov	r8,r7
10009c14:	10c00117 	ldw	r3,4(r2)
10009c18:	000f883a 	mov	r7,zero
10009c1c:	403f9c26 	beq	r8,zero,10009a90 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x158>
10009c20:	4009883a 	mov	r4,r8
10009c24:	003f9806 	br	10009a88 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x150>
10009c28:	29c00115 	stw	r7,4(r5)
10009c2c:	003f9e06 	br	10009aa8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x170>
10009c30:	11000317 	ldw	r4,12(r2)
10009c34:	20005c26 	beq	r4,zero,10009da8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x470>
10009c38:	380d883a 	mov	r6,r7
10009c3c:	00000106 	br	10009c44 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x30c>
10009c40:	200d883a 	mov	r6,r4
10009c44:	31000217 	ldw	r4,8(r6)
10009c48:	203ffd1e 	bne	r4,zero,10009c40 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x308>
10009c4c:	29800215 	stw	r6,8(r5)
10009c50:	003f9706 	br	10009ab0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
10009c54:	32400217 	ldw	r9,8(r6)
10009c58:	4800181e 	bne	r9,zero,10009cbc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x384>
10009c5c:	41000217 	ldw	r4,8(r8)
10009c60:	02400044 	movi	r9,1
10009c64:	42400015 	stw	r9,0(r8)
10009c68:	30000015 	stw	zero,0(r6)
10009c6c:	31000315 	stw	r4,12(r6)
10009c70:	20000126 	beq	r4,zero,10009c78 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x340>
10009c74:	21800115 	stw	r6,4(r4)
10009c78:	31000117 	ldw	r4,4(r6)
10009c7c:	41000115 	stw	r4,4(r8)
10009c80:	2a400117 	ldw	r9,4(r5)
10009c84:	32404b26 	beq	r6,r9,10009db4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x47c>
10009c88:	22400217 	ldw	r9,8(r4)
10009c8c:	32402326 	beq	r6,r9,10009d1c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3e4>
10009c90:	22000315 	stw	r8,12(r4)
10009c94:	41800215 	stw	r6,8(r8)
10009c98:	19000217 	ldw	r4,8(r3)
10009c9c:	1a800017 	ldw	r10,0(r3)
10009ca0:	32000115 	stw	r8,4(r6)
10009ca4:	22400217 	ldw	r9,8(r4)
10009ca8:	22800015 	stw	r10,0(r4)
10009cac:	01800044 	movi	r6,1
10009cb0:	19800015 	stw	r6,0(r3)
10009cb4:	48000b26 	beq	r9,zero,10009ce4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ac>
10009cb8:	00000806 	br	10009cdc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3a4>
10009cbc:	49000017 	ldw	r4,0(r9)
10009cc0:	21000060 	cmpeqi	r4,r4,1
10009cc4:	203fe51e 	bne	r4,zero,10009c5c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x324>
10009cc8:	1a000017 	ldw	r8,0(r3)
10009ccc:	19000217 	ldw	r4,8(r3)
10009cd0:	32000015 	stw	r8,0(r6)
10009cd4:	01800044 	movi	r6,1
10009cd8:	19800015 	stw	r6,0(r3)
10009cdc:	01800044 	movi	r6,1
10009ce0:	49800015 	stw	r6,0(r9)
10009ce4:	21800317 	ldw	r6,12(r4)
10009ce8:	19800215 	stw	r6,8(r3)
10009cec:	30000126 	beq	r6,zero,10009cf4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3bc>
10009cf0:	30c00115 	stw	r3,4(r6)
10009cf4:	19800117 	ldw	r6,4(r3)
10009cf8:	21800115 	stw	r6,4(r4)
10009cfc:	2a000117 	ldw	r8,4(r5)
10009d00:	1a000826 	beq	r3,r8,10009d24 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3ec>
10009d04:	31400317 	ldw	r5,12(r6)
10009d08:	19402226 	beq	r3,r5,10009d94 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x45c>
10009d0c:	31000215 	stw	r4,8(r6)
10009d10:	20c00315 	stw	r3,12(r4)
10009d14:	19000115 	stw	r4,4(r3)
10009d18:	003f5606 	br	10009a74 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x13c>
10009d1c:	22000215 	stw	r8,8(r4)
10009d20:	003fdc06 	br	10009c94 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
10009d24:	29000115 	stw	r4,4(r5)
10009d28:	003ff906 	br	10009d10 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
10009d2c:	32400317 	ldw	r9,12(r6)
10009d30:	4800241e 	bne	r9,zero,10009dc4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x48c>
10009d34:	41000317 	ldw	r4,12(r8)
10009d38:	02400044 	movi	r9,1
10009d3c:	42400015 	stw	r9,0(r8)
10009d40:	30000015 	stw	zero,0(r6)
10009d44:	31000215 	stw	r4,8(r6)
10009d48:	20000126 	beq	r4,zero,10009d50 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x418>
10009d4c:	21800115 	stw	r6,4(r4)
10009d50:	31000117 	ldw	r4,4(r6)
10009d54:	41000115 	stw	r4,4(r8)
10009d58:	2a400117 	ldw	r9,4(r5)
10009d5c:	32401f26 	beq	r6,r9,10009ddc <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4a4>
10009d60:	22400317 	ldw	r9,12(r4)
10009d64:	32401f26 	beq	r6,r9,10009de4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x4ac>
10009d68:	22000215 	stw	r8,8(r4)
10009d6c:	41800315 	stw	r6,12(r8)
10009d70:	19000317 	ldw	r4,12(r3)
10009d74:	1a800017 	ldw	r10,0(r3)
10009d78:	32000115 	stw	r8,4(r6)
10009d7c:	22400317 	ldw	r9,12(r4)
10009d80:	22800015 	stw	r10,0(r4)
10009d84:	01800044 	movi	r6,1
10009d88:	19800015 	stw	r6,0(r3)
10009d8c:	483f7a26 	beq	r9,zero,10009b78 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x240>
10009d90:	003f7706 	br	10009b70 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x238>
10009d94:	31000315 	stw	r4,12(r6)
10009d98:	003fdd06 	br	10009d10 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3d8>
10009d9c:	11800117 	ldw	r6,4(r2)
10009da0:	29800315 	stw	r6,12(r5)
10009da4:	003f0606 	br	100099c0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x88>
10009da8:	11000117 	ldw	r4,4(r2)
10009dac:	29000215 	stw	r4,8(r5)
10009db0:	003f3f06 	br	10009ab0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x178>
10009db4:	2a000115 	stw	r8,4(r5)
10009db8:	003fb606 	br	10009c94 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x35c>
10009dbc:	29000115 	stw	r4,4(r5)
10009dc0:	003f7806 	br	10009ba4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
10009dc4:	49000017 	ldw	r4,0(r9)
10009dc8:	21000060 	cmpeqi	r4,r4,1
10009dcc:	203fd91e 	bne	r4,zero,10009d34 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x3fc>
10009dd0:	003f6206 	br	10009b5c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x224>
10009dd4:	31000215 	stw	r4,8(r6)
10009dd8:	003f7206 	br	10009ba4 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x26c>
10009ddc:	2a000115 	stw	r8,4(r5)
10009de0:	003fe206 	br	10009d6c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>
10009de4:	22000315 	stw	r8,12(r4)
10009de8:	003fe006 	br	10009d6c <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_+0x434>

10009dec <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_>:
10009dec:	0005883a 	mov	r2,zero
10009df0:	20000a26 	beq	r4,zero,10009e1c <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
10009df4:	20c00017 	ldw	r3,0(r4)
10009df8:	18c00058 	cmpnei	r3,r3,1
10009dfc:	18000526 	beq	r3,zero,10009e14 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x28>
10009e00:	21400626 	beq	r4,r5,10009e1c <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x30>
10009e04:	21000117 	ldw	r4,4(r4)
10009e08:	20c00017 	ldw	r3,0(r4)
10009e0c:	18c00058 	cmpnei	r3,r3,1
10009e10:	183ffb1e 	bne	r3,zero,10009e00 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x14>
10009e14:	10800044 	addi	r2,r2,1
10009e18:	217ffa1e 	bne	r4,r5,10009e04 <_ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_+0x18>
10009e1c:	f800283a 	ret

10009e20 <_ZSt21__throw_bad_exceptionv>:
10009e20:	deffff04 	addi	sp,sp,-4
10009e24:	01000104 	movi	r4,4
10009e28:	dfc00015 	stw	ra,0(sp)
10009e2c:	00094040 	call	10009404 <__cxa_allocate_exception>
10009e30:	00c400b4 	movhi	r3,4098
10009e34:	01840074 	movhi	r6,4097
10009e38:	014400b4 	movhi	r5,4098
10009e3c:	18d54d04 	addi	r3,r3,21812
10009e40:	31b1b804 	addi	r6,r6,-14624
10009e44:	29553204 	addi	r5,r5,21704
10009e48:	1009883a 	mov	r4,r2
10009e4c:	10c00015 	stw	r3,0(r2)
10009e50:	00083ec0 	call	100083ec <__cxa_throw>

10009e54 <_ZSt17__throw_bad_allocv>:
10009e54:	deffff04 	addi	sp,sp,-4
10009e58:	01000104 	movi	r4,4
10009e5c:	dfc00015 	stw	ra,0(sp)
10009e60:	00094040 	call	10009404 <__cxa_allocate_exception>
10009e64:	00c400b4 	movhi	r3,4098
10009e68:	01840074 	movhi	r6,4097
10009e6c:	014400b4 	movhi	r5,4098
10009e70:	18d4e704 	addi	r3,r3,21404
10009e74:	31a14504 	addi	r6,r6,-31468
10009e78:	2954e204 	addi	r5,r5,21384
10009e7c:	1009883a 	mov	r4,r2
10009e80:	10c00015 	stw	r3,0(r2)
10009e84:	00083ec0 	call	100083ec <__cxa_throw>

10009e88 <_ZSt16__throw_bad_castv>:
10009e88:	deffff04 	addi	sp,sp,-4
10009e8c:	01000104 	movi	r4,4
10009e90:	dfc00015 	stw	ra,0(sp)
10009e94:	00094040 	call	10009404 <__cxa_allocate_exception>
10009e98:	00c400b4 	movhi	r3,4098
10009e9c:	01840074 	movhi	r6,4097
10009ea0:	014400b4 	movhi	r5,4098
10009ea4:	18d57504 	addi	r3,r3,21972
10009ea8:	31b1df04 	addi	r6,r6,-14468
10009eac:	29557004 	addi	r5,r5,21952
10009eb0:	1009883a 	mov	r4,r2
10009eb4:	10c00015 	stw	r3,0(r2)
10009eb8:	00083ec0 	call	100083ec <__cxa_throw>

10009ebc <_ZSt18__throw_bad_typeidv>:
10009ebc:	deffff04 	addi	sp,sp,-4
10009ec0:	01000104 	movi	r4,4
10009ec4:	dfc00015 	stw	ra,0(sp)
10009ec8:	00094040 	call	10009404 <__cxa_allocate_exception>
10009ecc:	00c400b4 	movhi	r3,4098
10009ed0:	01840074 	movhi	r6,4097
10009ed4:	014400b4 	movhi	r5,4098
10009ed8:	18d58504 	addi	r3,r3,22036
10009edc:	31b1f404 	addi	r6,r6,-14384
10009ee0:	29558004 	addi	r5,r5,22016
10009ee4:	1009883a 	mov	r4,r2
10009ee8:	10c00015 	stw	r3,0(r2)
10009eec:	00083ec0 	call	100083ec <__cxa_throw>

10009ef0 <_ZSt19__throw_logic_errorPKc>:
10009ef0:	00c400b4 	movhi	r3,4098
10009ef4:	deffef04 	addi	sp,sp,-68
10009ef8:	18d15e04 	addi	r3,r3,17784
10009efc:	01440074 	movhi	r5,4097
10009f00:	00840074 	movhi	r2,4097
10009f04:	2962a704 	addi	r5,r5,-30052
10009f08:	10a7df04 	addi	r2,r2,-24708
10009f0c:	d9000015 	stw	r4,0(sp)
10009f10:	d8c00915 	stw	r3,36(sp)
10009f14:	d9000204 	addi	r4,sp,8
10009f18:	d8c00f04 	addi	r3,sp,60
10009f1c:	d9400815 	stw	r5,32(sp)
10009f20:	d8c00a15 	stw	r3,40(sp)
10009f24:	dfc01015 	stw	ra,64(sp)
10009f28:	d8800b15 	stw	r2,44(sp)
10009f2c:	df000f15 	stw	fp,60(sp)
10009f30:	dec00c15 	stw	sp,48(sp)
10009f34:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10009f38:	01000204 	movi	r4,8
10009f3c:	00094040 	call	10009404 <__cxa_allocate_exception>
10009f40:	d9400017 	ldw	r5,0(sp)
10009f44:	1007883a 	mov	r3,r2
10009f48:	d8800115 	stw	r2,4(sp)
10009f4c:	1809883a 	mov	r4,r3
10009f50:	00800044 	movi	r2,1
10009f54:	d8800315 	stw	r2,12(sp)
10009f58:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
10009f5c:	d9000117 	ldw	r4,4(sp)
10009f60:	01840074 	movhi	r6,4097
10009f64:	014400b4 	movhi	r5,4098
10009f68:	00bfffc4 	movi	r2,-1
10009f6c:	31b2d404 	addi	r6,r6,-13488
10009f70:	2955af04 	addi	r5,r5,22204
10009f74:	d8800315 	stw	r2,12(sp)
10009f78:	00083ec0 	call	100083ec <__cxa_throw>
10009f7c:	d8800417 	ldw	r2,16(sp)
10009f80:	d9000117 	ldw	r4,4(sp)
10009f84:	d8800015 	stw	r2,0(sp)
10009f88:	000945c0 	call	1000945c <__cxa_free_exception>
10009f8c:	d9000017 	ldw	r4,0(sp)
10009f90:	00bfffc4 	movi	r2,-1
10009f94:	d8800315 	stw	r2,12(sp)
10009f98:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

10009f9c <_ZSt20__throw_domain_errorPKc>:
10009f9c:	00c400b4 	movhi	r3,4098
10009fa0:	deffef04 	addi	sp,sp,-68
10009fa4:	18d15f84 	addi	r3,r3,17790
10009fa8:	01440074 	movhi	r5,4097
10009fac:	00840074 	movhi	r2,4097
10009fb0:	2962a704 	addi	r5,r5,-30052
10009fb4:	10a80a04 	addi	r2,r2,-24536
10009fb8:	d9000015 	stw	r4,0(sp)
10009fbc:	d8c00915 	stw	r3,36(sp)
10009fc0:	d9000204 	addi	r4,sp,8
10009fc4:	d8c00f04 	addi	r3,sp,60
10009fc8:	d9400815 	stw	r5,32(sp)
10009fcc:	d8c00a15 	stw	r3,40(sp)
10009fd0:	dfc01015 	stw	ra,64(sp)
10009fd4:	d8800b15 	stw	r2,44(sp)
10009fd8:	df000f15 	stw	fp,60(sp)
10009fdc:	dec00c15 	stw	sp,48(sp)
10009fe0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10009fe4:	01000204 	movi	r4,8
10009fe8:	00094040 	call	10009404 <__cxa_allocate_exception>
10009fec:	d9400017 	ldw	r5,0(sp)
10009ff0:	1007883a 	mov	r3,r2
10009ff4:	d8800115 	stw	r2,4(sp)
10009ff8:	1809883a 	mov	r4,r3
10009ffc:	00800044 	movi	r2,1
1000a000:	d8800315 	stw	r2,12(sp)
1000a004:	000ab380 	call	1000ab38 <_ZNSt12domain_errorC1EPKc>
1000a008:	d9000117 	ldw	r4,4(sp)
1000a00c:	01840074 	movhi	r6,4097
1000a010:	014400b4 	movhi	r5,4098
1000a014:	00bfffc4 	movi	r2,-1
1000a018:	31b2f704 	addi	r6,r6,-13348
1000a01c:	2955b704 	addi	r5,r5,22236
1000a020:	d8800315 	stw	r2,12(sp)
1000a024:	00083ec0 	call	100083ec <__cxa_throw>
1000a028:	d8800417 	ldw	r2,16(sp)
1000a02c:	d9000117 	ldw	r4,4(sp)
1000a030:	d8800015 	stw	r2,0(sp)
1000a034:	000945c0 	call	1000945c <__cxa_free_exception>
1000a038:	d9000017 	ldw	r4,0(sp)
1000a03c:	00bfffc4 	movi	r2,-1
1000a040:	d8800315 	stw	r2,12(sp)
1000a044:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a048 <_ZSt24__throw_invalid_argumentPKc>:
1000a048:	00c400b4 	movhi	r3,4098
1000a04c:	deffef04 	addi	sp,sp,-68
1000a050:	18d16104 	addi	r3,r3,17796
1000a054:	01440074 	movhi	r5,4097
1000a058:	00840074 	movhi	r2,4097
1000a05c:	2962a704 	addi	r5,r5,-30052
1000a060:	10a83504 	addi	r2,r2,-24364
1000a064:	d9000015 	stw	r4,0(sp)
1000a068:	d8c00915 	stw	r3,36(sp)
1000a06c:	d9000204 	addi	r4,sp,8
1000a070:	d8c00f04 	addi	r3,sp,60
1000a074:	d9400815 	stw	r5,32(sp)
1000a078:	d8c00a15 	stw	r3,40(sp)
1000a07c:	dfc01015 	stw	ra,64(sp)
1000a080:	d8800b15 	stw	r2,44(sp)
1000a084:	df000f15 	stw	fp,60(sp)
1000a088:	dec00c15 	stw	sp,48(sp)
1000a08c:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a090:	01000204 	movi	r4,8
1000a094:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a098:	d9400017 	ldw	r5,0(sp)
1000a09c:	1007883a 	mov	r3,r2
1000a0a0:	d8800115 	stw	r2,4(sp)
1000a0a4:	1809883a 	mov	r4,r3
1000a0a8:	00800044 	movi	r2,1
1000a0ac:	d8800315 	stw	r2,12(sp)
1000a0b0:	000ab680 	call	1000ab68 <_ZNSt16invalid_argumentC1EPKc>
1000a0b4:	d9000117 	ldw	r4,4(sp)
1000a0b8:	01840074 	movhi	r6,4097
1000a0bc:	014400b4 	movhi	r5,4098
1000a0c0:	00bfffc4 	movi	r2,-1
1000a0c4:	31b30804 	addi	r6,r6,-13280
1000a0c8:	2955c004 	addi	r5,r5,22272
1000a0cc:	d8800315 	stw	r2,12(sp)
1000a0d0:	00083ec0 	call	100083ec <__cxa_throw>
1000a0d4:	d8800417 	ldw	r2,16(sp)
1000a0d8:	d9000117 	ldw	r4,4(sp)
1000a0dc:	d8800015 	stw	r2,0(sp)
1000a0e0:	000945c0 	call	1000945c <__cxa_free_exception>
1000a0e4:	d9000017 	ldw	r4,0(sp)
1000a0e8:	00bfffc4 	movi	r2,-1
1000a0ec:	d8800315 	stw	r2,12(sp)
1000a0f0:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a0f4 <_ZSt20__throw_length_errorPKc>:
1000a0f4:	00c400b4 	movhi	r3,4098
1000a0f8:	deffef04 	addi	sp,sp,-68
1000a0fc:	18d16284 	addi	r3,r3,17802
1000a100:	01440074 	movhi	r5,4097
1000a104:	00840074 	movhi	r2,4097
1000a108:	2962a704 	addi	r5,r5,-30052
1000a10c:	10a86004 	addi	r2,r2,-24192
1000a110:	d9000015 	stw	r4,0(sp)
1000a114:	d8c00915 	stw	r3,36(sp)
1000a118:	d9000204 	addi	r4,sp,8
1000a11c:	d8c00f04 	addi	r3,sp,60
1000a120:	d9400815 	stw	r5,32(sp)
1000a124:	d8c00a15 	stw	r3,40(sp)
1000a128:	dfc01015 	stw	ra,64(sp)
1000a12c:	d8800b15 	stw	r2,44(sp)
1000a130:	df000f15 	stw	fp,60(sp)
1000a134:	dec00c15 	stw	sp,48(sp)
1000a138:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a13c:	01000204 	movi	r4,8
1000a140:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a144:	d9400017 	ldw	r5,0(sp)
1000a148:	1007883a 	mov	r3,r2
1000a14c:	d8800115 	stw	r2,4(sp)
1000a150:	1809883a 	mov	r4,r3
1000a154:	00800044 	movi	r2,1
1000a158:	d8800315 	stw	r2,12(sp)
1000a15c:	000ab980 	call	1000ab98 <_ZNSt12length_errorC1EPKc>
1000a160:	d9000117 	ldw	r4,4(sp)
1000a164:	01840074 	movhi	r6,4097
1000a168:	014400b4 	movhi	r5,4098
1000a16c:	00bfffc4 	movi	r2,-1
1000a170:	31b31904 	addi	r6,r6,-13212
1000a174:	2955c804 	addi	r5,r5,22304
1000a178:	d8800315 	stw	r2,12(sp)
1000a17c:	00083ec0 	call	100083ec <__cxa_throw>
1000a180:	d8800417 	ldw	r2,16(sp)
1000a184:	d9000117 	ldw	r4,4(sp)
1000a188:	d8800015 	stw	r2,0(sp)
1000a18c:	000945c0 	call	1000945c <__cxa_free_exception>
1000a190:	d9000017 	ldw	r4,0(sp)
1000a194:	00bfffc4 	movi	r2,-1
1000a198:	d8800315 	stw	r2,12(sp)
1000a19c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a1a0 <_ZSt20__throw_out_of_rangePKc>:
1000a1a0:	00c400b4 	movhi	r3,4098
1000a1a4:	deffef04 	addi	sp,sp,-68
1000a1a8:	18d16404 	addi	r3,r3,17808
1000a1ac:	01440074 	movhi	r5,4097
1000a1b0:	00840074 	movhi	r2,4097
1000a1b4:	2962a704 	addi	r5,r5,-30052
1000a1b8:	10a88b04 	addi	r2,r2,-24020
1000a1bc:	d9000015 	stw	r4,0(sp)
1000a1c0:	d8c00915 	stw	r3,36(sp)
1000a1c4:	d9000204 	addi	r4,sp,8
1000a1c8:	d8c00f04 	addi	r3,sp,60
1000a1cc:	d9400815 	stw	r5,32(sp)
1000a1d0:	d8c00a15 	stw	r3,40(sp)
1000a1d4:	dfc01015 	stw	ra,64(sp)
1000a1d8:	d8800b15 	stw	r2,44(sp)
1000a1dc:	df000f15 	stw	fp,60(sp)
1000a1e0:	dec00c15 	stw	sp,48(sp)
1000a1e4:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a1e8:	01000204 	movi	r4,8
1000a1ec:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a1f0:	d9400017 	ldw	r5,0(sp)
1000a1f4:	1007883a 	mov	r3,r2
1000a1f8:	d8800115 	stw	r2,4(sp)
1000a1fc:	1809883a 	mov	r4,r3
1000a200:	00800044 	movi	r2,1
1000a204:	d8800315 	stw	r2,12(sp)
1000a208:	000abc80 	call	1000abc8 <_ZNSt12out_of_rangeC1EPKc>
1000a20c:	d9000117 	ldw	r4,4(sp)
1000a210:	01840074 	movhi	r6,4097
1000a214:	014400b4 	movhi	r5,4098
1000a218:	00bfffc4 	movi	r2,-1
1000a21c:	31b32a04 	addi	r6,r6,-13144
1000a220:	2955d004 	addi	r5,r5,22336
1000a224:	d8800315 	stw	r2,12(sp)
1000a228:	00083ec0 	call	100083ec <__cxa_throw>
1000a22c:	d8800417 	ldw	r2,16(sp)
1000a230:	d9000117 	ldw	r4,4(sp)
1000a234:	d8800015 	stw	r2,0(sp)
1000a238:	000945c0 	call	1000945c <__cxa_free_exception>
1000a23c:	d9000017 	ldw	r4,0(sp)
1000a240:	00bfffc4 	movi	r2,-1
1000a244:	d8800315 	stw	r2,12(sp)
1000a248:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>:
1000a24c:	deffec04 	addi	sp,sp,-80
1000a250:	df000f15 	stw	fp,60(sp)
1000a254:	dfc01015 	stw	ra,64(sp)
1000a258:	df000f04 	addi	fp,sp,60
1000a25c:	e13ff215 	stw	r4,-56(fp)
1000a260:	e1400215 	stw	r5,8(fp)
1000a264:	e1800315 	stw	r6,12(fp)
1000a268:	e1c00415 	stw	r7,16(fp)
1000a26c:	01040074 	movhi	r4,4097
1000a270:	00c400b4 	movhi	r3,4098
1000a274:	00840074 	movhi	r2,4097
1000a278:	18d16584 	addi	r3,r3,17814
1000a27c:	10a8c804 	addi	r2,r2,-23776
1000a280:	2122a704 	addi	r4,r4,-30052
1000a284:	e0fffa15 	stw	r3,-24(fp)
1000a288:	e6fffd15 	stw	sp,-12(fp)
1000a28c:	e13ff915 	stw	r4,-28(fp)
1000a290:	e0bffc15 	stw	r2,-16(fp)
1000a294:	e13ff304 	addi	r4,fp,-52
1000a298:	e73ffb15 	stw	fp,-20(fp)
1000a29c:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a2a0:	e13ff217 	ldw	r4,-56(fp)
1000a2a4:	00164b40 	call	100164b4 <strlen>
1000a2a8:	10c080c4 	addi	r3,r2,515
1000a2ac:	1806d0ba 	srli	r3,r3,2
1000a2b0:	11408004 	addi	r5,r2,512
1000a2b4:	e1bff217 	ldw	r6,-56(fp)
1000a2b8:	180490ba 	slli	r2,r3,2
1000a2bc:	e1c00204 	addi	r7,fp,8
1000a2c0:	d8b7c83a 	sub	sp,sp,r2
1000a2c4:	d805883a 	mov	r2,sp
1000a2c8:	1009883a 	mov	r4,r2
1000a2cc:	e0bff215 	stw	r2,-56(fp)
1000a2d0:	00bfffc4 	movi	r2,-1
1000a2d4:	e6fffd15 	stw	sp,-12(fp)
1000a2d8:	e0bff415 	stw	r2,-48(fp)
1000a2dc:	000a7500 	call	1000a750 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>
1000a2e0:	01000204 	movi	r4,8
1000a2e4:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a2e8:	e17ff217 	ldw	r5,-56(fp)
1000a2ec:	1009883a 	mov	r4,r2
1000a2f0:	e0bff115 	stw	r2,-60(fp)
1000a2f4:	00800044 	movi	r2,1
1000a2f8:	e0bff415 	stw	r2,-48(fp)
1000a2fc:	000abc80 	call	1000abc8 <_ZNSt12out_of_rangeC1EPKc>
1000a300:	e13ff117 	ldw	r4,-60(fp)
1000a304:	01840074 	movhi	r6,4097
1000a308:	014400b4 	movhi	r5,4098
1000a30c:	00bfffc4 	movi	r2,-1
1000a310:	e0bff415 	stw	r2,-48(fp)
1000a314:	31b32a04 	addi	r6,r6,-13144
1000a318:	2955d004 	addi	r5,r5,22336
1000a31c:	00083ec0 	call	100083ec <__cxa_throw>
1000a320:	e0bff517 	ldw	r2,-44(fp)
1000a324:	e13ff117 	ldw	r4,-60(fp)
1000a328:	e0bff215 	stw	r2,-56(fp)
1000a32c:	000945c0 	call	1000945c <__cxa_free_exception>
1000a330:	e13ff217 	ldw	r4,-56(fp)
1000a334:	00bfffc4 	movi	r2,-1
1000a338:	e0bff415 	stw	r2,-48(fp)
1000a33c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a340 <_ZSt21__throw_runtime_errorPKc>:
1000a340:	00c400b4 	movhi	r3,4098
1000a344:	deffef04 	addi	sp,sp,-68
1000a348:	18d16704 	addi	r3,r3,17820
1000a34c:	01440074 	movhi	r5,4097
1000a350:	00840074 	movhi	r2,4097
1000a354:	2962a704 	addi	r5,r5,-30052
1000a358:	10a8f304 	addi	r2,r2,-23604
1000a35c:	d9000015 	stw	r4,0(sp)
1000a360:	d8c00915 	stw	r3,36(sp)
1000a364:	d9000204 	addi	r4,sp,8
1000a368:	d8c00f04 	addi	r3,sp,60
1000a36c:	d9400815 	stw	r5,32(sp)
1000a370:	d8c00a15 	stw	r3,40(sp)
1000a374:	dfc01015 	stw	ra,64(sp)
1000a378:	d8800b15 	stw	r2,44(sp)
1000a37c:	df000f15 	stw	fp,60(sp)
1000a380:	dec00c15 	stw	sp,48(sp)
1000a384:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a388:	01000204 	movi	r4,8
1000a38c:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a390:	d9400017 	ldw	r5,0(sp)
1000a394:	1007883a 	mov	r3,r2
1000a398:	d8800115 	stw	r2,4(sp)
1000a39c:	1809883a 	mov	r4,r3
1000a3a0:	00800044 	movi	r2,1
1000a3a4:	d8800315 	stw	r2,12(sp)
1000a3a8:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000a3ac:	d9000117 	ldw	r4,4(sp)
1000a3b0:	01840074 	movhi	r6,4097
1000a3b4:	014400b4 	movhi	r5,4098
1000a3b8:	00bfffc4 	movi	r2,-1
1000a3bc:	31b33b04 	addi	r6,r6,-13076
1000a3c0:	2955d804 	addi	r5,r5,22368
1000a3c4:	d8800315 	stw	r2,12(sp)
1000a3c8:	00083ec0 	call	100083ec <__cxa_throw>
1000a3cc:	d8800417 	ldw	r2,16(sp)
1000a3d0:	d9000117 	ldw	r4,4(sp)
1000a3d4:	d8800015 	stw	r2,0(sp)
1000a3d8:	000945c0 	call	1000945c <__cxa_free_exception>
1000a3dc:	d9000017 	ldw	r4,0(sp)
1000a3e0:	00bfffc4 	movi	r2,-1
1000a3e4:	d8800315 	stw	r2,12(sp)
1000a3e8:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a3ec <_ZSt19__throw_range_errorPKc>:
1000a3ec:	00c400b4 	movhi	r3,4098
1000a3f0:	deffef04 	addi	sp,sp,-68
1000a3f4:	18d16884 	addi	r3,r3,17826
1000a3f8:	01440074 	movhi	r5,4097
1000a3fc:	00840074 	movhi	r2,4097
1000a400:	2962a704 	addi	r5,r5,-30052
1000a404:	10a91e04 	addi	r2,r2,-23432
1000a408:	d9000015 	stw	r4,0(sp)
1000a40c:	d8c00915 	stw	r3,36(sp)
1000a410:	d9000204 	addi	r4,sp,8
1000a414:	d8c00f04 	addi	r3,sp,60
1000a418:	d9400815 	stw	r5,32(sp)
1000a41c:	d8c00a15 	stw	r3,40(sp)
1000a420:	dfc01015 	stw	ra,64(sp)
1000a424:	d8800b15 	stw	r2,44(sp)
1000a428:	df000f15 	stw	fp,60(sp)
1000a42c:	dec00c15 	stw	sp,48(sp)
1000a430:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a434:	01000204 	movi	r4,8
1000a438:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a43c:	d9400017 	ldw	r5,0(sp)
1000a440:	1007883a 	mov	r3,r2
1000a444:	d8800115 	stw	r2,4(sp)
1000a448:	1809883a 	mov	r4,r3
1000a44c:	00800044 	movi	r2,1
1000a450:	d8800315 	stw	r2,12(sp)
1000a454:	000aca40 	call	1000aca4 <_ZNSt11range_errorC1EPKc>
1000a458:	d9000117 	ldw	r4,4(sp)
1000a45c:	01840074 	movhi	r6,4097
1000a460:	014400b4 	movhi	r5,4098
1000a464:	00bfffc4 	movi	r2,-1
1000a468:	31b35e04 	addi	r6,r6,-12936
1000a46c:	2955df04 	addi	r5,r5,22396
1000a470:	d8800315 	stw	r2,12(sp)
1000a474:	00083ec0 	call	100083ec <__cxa_throw>
1000a478:	d8800417 	ldw	r2,16(sp)
1000a47c:	d9000117 	ldw	r4,4(sp)
1000a480:	d8800015 	stw	r2,0(sp)
1000a484:	000945c0 	call	1000945c <__cxa_free_exception>
1000a488:	d9000017 	ldw	r4,0(sp)
1000a48c:	00bfffc4 	movi	r2,-1
1000a490:	d8800315 	stw	r2,12(sp)
1000a494:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a498 <_ZSt22__throw_overflow_errorPKc>:
1000a498:	00c400b4 	movhi	r3,4098
1000a49c:	deffef04 	addi	sp,sp,-68
1000a4a0:	18d16a04 	addi	r3,r3,17832
1000a4a4:	01440074 	movhi	r5,4097
1000a4a8:	00840074 	movhi	r2,4097
1000a4ac:	2962a704 	addi	r5,r5,-30052
1000a4b0:	10a94904 	addi	r2,r2,-23260
1000a4b4:	d9000015 	stw	r4,0(sp)
1000a4b8:	d8c00915 	stw	r3,36(sp)
1000a4bc:	d9000204 	addi	r4,sp,8
1000a4c0:	d8c00f04 	addi	r3,sp,60
1000a4c4:	d9400815 	stw	r5,32(sp)
1000a4c8:	d8c00a15 	stw	r3,40(sp)
1000a4cc:	dfc01015 	stw	ra,64(sp)
1000a4d0:	d8800b15 	stw	r2,44(sp)
1000a4d4:	df000f15 	stw	fp,60(sp)
1000a4d8:	dec00c15 	stw	sp,48(sp)
1000a4dc:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a4e0:	01000204 	movi	r4,8
1000a4e4:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a4e8:	d9400017 	ldw	r5,0(sp)
1000a4ec:	1007883a 	mov	r3,r2
1000a4f0:	d8800115 	stw	r2,4(sp)
1000a4f4:	1809883a 	mov	r4,r3
1000a4f8:	00800044 	movi	r2,1
1000a4fc:	d8800315 	stw	r2,12(sp)
1000a500:	000acd40 	call	1000acd4 <_ZNSt14overflow_errorC1EPKc>
1000a504:	d9000117 	ldw	r4,4(sp)
1000a508:	01840074 	movhi	r6,4097
1000a50c:	014400b4 	movhi	r5,4098
1000a510:	00bfffc4 	movi	r2,-1
1000a514:	31b36f04 	addi	r6,r6,-12868
1000a518:	2955e704 	addi	r5,r5,22428
1000a51c:	d8800315 	stw	r2,12(sp)
1000a520:	00083ec0 	call	100083ec <__cxa_throw>
1000a524:	d8800417 	ldw	r2,16(sp)
1000a528:	d9000117 	ldw	r4,4(sp)
1000a52c:	d8800015 	stw	r2,0(sp)
1000a530:	000945c0 	call	1000945c <__cxa_free_exception>
1000a534:	d9000017 	ldw	r4,0(sp)
1000a538:	00bfffc4 	movi	r2,-1
1000a53c:	d8800315 	stw	r2,12(sp)
1000a540:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a544 <_ZSt23__throw_underflow_errorPKc>:
1000a544:	00c400b4 	movhi	r3,4098
1000a548:	deffef04 	addi	sp,sp,-68
1000a54c:	18d16b84 	addi	r3,r3,17838
1000a550:	01440074 	movhi	r5,4097
1000a554:	00840074 	movhi	r2,4097
1000a558:	2962a704 	addi	r5,r5,-30052
1000a55c:	10a97404 	addi	r2,r2,-23088
1000a560:	d9000015 	stw	r4,0(sp)
1000a564:	d8c00915 	stw	r3,36(sp)
1000a568:	d9000204 	addi	r4,sp,8
1000a56c:	d8c00f04 	addi	r3,sp,60
1000a570:	d9400815 	stw	r5,32(sp)
1000a574:	d8c00a15 	stw	r3,40(sp)
1000a578:	dfc01015 	stw	ra,64(sp)
1000a57c:	d8800b15 	stw	r2,44(sp)
1000a580:	df000f15 	stw	fp,60(sp)
1000a584:	dec00c15 	stw	sp,48(sp)
1000a588:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a58c:	01000204 	movi	r4,8
1000a590:	00094040 	call	10009404 <__cxa_allocate_exception>
1000a594:	d9400017 	ldw	r5,0(sp)
1000a598:	1007883a 	mov	r3,r2
1000a59c:	d8800115 	stw	r2,4(sp)
1000a5a0:	1809883a 	mov	r4,r3
1000a5a4:	00800044 	movi	r2,1
1000a5a8:	d8800315 	stw	r2,12(sp)
1000a5ac:	000ad040 	call	1000ad04 <_ZNSt15underflow_errorC1EPKc>
1000a5b0:	d9000117 	ldw	r4,4(sp)
1000a5b4:	01840074 	movhi	r6,4097
1000a5b8:	014400b4 	movhi	r5,4098
1000a5bc:	00bfffc4 	movi	r2,-1
1000a5c0:	31b38004 	addi	r6,r6,-12800
1000a5c4:	2955ef04 	addi	r5,r5,22460
1000a5c8:	d8800315 	stw	r2,12(sp)
1000a5cc:	00083ec0 	call	100083ec <__cxa_throw>
1000a5d0:	d8800417 	ldw	r2,16(sp)
1000a5d4:	d9000117 	ldw	r4,4(sp)
1000a5d8:	d8800015 	stw	r2,0(sp)
1000a5dc:	000945c0 	call	1000945c <__cxa_free_exception>
1000a5e0:	d9000017 	ldw	r4,0(sp)
1000a5e4:	00bfffc4 	movi	r2,-1
1000a5e8:	d8800315 	stw	r2,12(sp)
1000a5ec:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000a5f0 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
1000a5f0:	deffe004 	addi	sp,sp,-128
1000a5f4:	df001e15 	stw	fp,120(sp)
1000a5f8:	dc401c15 	stw	r17,112(sp)
1000a5fc:	df001e04 	addi	fp,sp,120
1000a600:	2823883a 	mov	r17,r5
1000a604:	014400b4 	movhi	r5,4098
1000a608:	8923c83a 	sub	r17,r17,r4
1000a60c:	dc801d15 	stw	r18,116(sp)
1000a610:	01801a44 	movi	r6,105
1000a614:	2025883a 	mov	r18,r4
1000a618:	2954ea04 	addi	r5,r5,21416
1000a61c:	e13fe2c4 	addi	r4,fp,-117
1000a620:	dfc01f15 	stw	ra,124(sp)
1000a624:	dc001b15 	stw	r16,108(sp)
1000a628:	00157f80 	call	100157f8 <memcpy>
1000a62c:	88801b04 	addi	r2,r17,108
1000a630:	1004d0ba 	srli	r2,r2,2
1000a634:	01801a04 	movi	r6,104
1000a638:	e17fe2c4 	addi	r5,fp,-117
1000a63c:	100490ba 	slli	r2,r2,2
1000a640:	d8b7c83a 	sub	sp,sp,r2
1000a644:	d821883a 	mov	r16,sp
1000a648:	8009883a 	mov	r4,r16
1000a64c:	00157f80 	call	100157f8 <memcpy>
1000a650:	81001a04 	addi	r4,r16,104
1000a654:	880d883a 	mov	r6,r17
1000a658:	900b883a 	mov	r5,r18
1000a65c:	00157f80 	call	100157f8 <memcpy>
1000a660:	8009883a 	mov	r4,r16
1000a664:	8461883a 	add	r16,r16,r17
1000a668:	80001a05 	stb	zero,104(r16)
1000a66c:	0009ef00 	call	10009ef0 <_ZSt19__throw_logic_errorPKc>

1000a670 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
1000a670:	defff704 	addi	sp,sp,-36
1000a674:	df000715 	stw	fp,28(sp)
1000a678:	dd800615 	stw	r22,24(sp)
1000a67c:	dd400515 	stw	r21,20(sp)
1000a680:	dd000415 	stw	r20,16(sp)
1000a684:	dcc00315 	stw	r19,12(sp)
1000a688:	dc800215 	stw	r18,8(sp)
1000a68c:	dc400115 	stw	r17,4(sp)
1000a690:	dc000015 	stw	r16,0(sp)
1000a694:	dfc00815 	stw	ra,32(sp)
1000a698:	df000704 	addi	fp,sp,28
1000a69c:	defffd04 	addi	sp,sp,-12
1000a6a0:	d829883a 	mov	r20,sp
1000a6a4:	a4c00304 	addi	r19,r20,12
1000a6a8:	048400b4 	movhi	r18,4098
1000a6ac:	202d883a 	mov	r22,r4
1000a6b0:	282b883a 	mov	r21,r5
1000a6b4:	3021883a 	mov	r16,r6
1000a6b8:	9823883a 	mov	r17,r19
1000a6bc:	94950504 	addi	r18,r18,21524
1000a6c0:	00000106 	br	1000a6c8 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x58>
1000a6c4:	1021883a 	mov	r16,r2
1000a6c8:	8009883a 	mov	r4,r16
1000a6cc:	01400284 	movi	r5,10
1000a6d0:	00141100 	call	10014110 <__umodsi3>
1000a6d4:	9085883a 	add	r2,r18,r2
1000a6d8:	10800003 	ldbu	r2,0(r2)
1000a6dc:	8c7fffc4 	addi	r17,r17,-1
1000a6e0:	8009883a 	mov	r4,r16
1000a6e4:	01400284 	movi	r5,10
1000a6e8:	88800005 	stb	r2,0(r17)
1000a6ec:	840002a8 	cmpgeui	r16,r16,10
1000a6f0:	00140ac0 	call	100140ac <__udivsi3>
1000a6f4:	803ff31e 	bne	r16,zero,1000a6c4 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
1000a6f8:	9c63c83a 	sub	r17,r19,r17
1000a6fc:	ac401236 	bltu	r21,r17,1000a748 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xd8>
1000a700:	a44bc83a 	sub	r5,r20,r17
1000a704:	880d883a 	mov	r6,r17
1000a708:	29400304 	addi	r5,r5,12
1000a70c:	b009883a 	mov	r4,r22
1000a710:	00157f80 	call	100157f8 <memcpy>
1000a714:	8805883a 	mov	r2,r17
1000a718:	e6fff904 	addi	sp,fp,-28
1000a71c:	dfc00817 	ldw	ra,32(sp)
1000a720:	df000717 	ldw	fp,28(sp)
1000a724:	dd800617 	ldw	r22,24(sp)
1000a728:	dd400517 	ldw	r21,20(sp)
1000a72c:	dd000417 	ldw	r20,16(sp)
1000a730:	dcc00317 	ldw	r19,12(sp)
1000a734:	dc800217 	ldw	r18,8(sp)
1000a738:	dc400117 	ldw	r17,4(sp)
1000a73c:	dc000017 	ldw	r16,0(sp)
1000a740:	dec00904 	addi	sp,sp,36
1000a744:	f800283a 	ret
1000a748:	047fffc4 	movi	r17,-1
1000a74c:	003ff106 	br	1000a714 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0xa4>

1000a750 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv>:
1000a750:	defffa04 	addi	sp,sp,-24
1000a754:	297fffc4 	addi	r5,r5,-1
1000a758:	dcc00315 	stw	r19,12(sp)
1000a75c:	dc800215 	stw	r18,8(sp)
1000a760:	dc400115 	stw	r17,4(sp)
1000a764:	dc000015 	stw	r16,0(sp)
1000a768:	dfc00515 	stw	ra,20(sp)
1000a76c:	dd000415 	stw	r20,16(sp)
1000a770:	2027883a 	mov	r19,r4
1000a774:	3023883a 	mov	r17,r6
1000a778:	2165883a 	add	r18,r4,r5
1000a77c:	2021883a 	mov	r16,r4
1000a780:	00000306 	br	1000a790 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a784:	80c00005 	stb	r3,0(r16)
1000a788:	8c400044 	addi	r17,r17,1
1000a78c:	84000044 	addi	r16,r16,1
1000a790:	88c00003 	ldbu	r3,0(r17)
1000a794:	18803fcc 	andi	r2,r3,255
1000a798:	1080201c 	xori	r2,r2,128
1000a79c:	10bfe004 	addi	r2,r2,-128
1000a7a0:	10003226 	beq	r2,zero,1000a86c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x11c>
1000a7a4:	84803b2e 	bgeu	r16,r18,1000a894 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a7a8:	10800958 	cmpnei	r2,r2,37
1000a7ac:	103ff51e 	bne	r2,zero,1000a784 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a7b0:	89000043 	ldbu	r4,1(r17)
1000a7b4:	20803fcc 	andi	r2,r4,255
1000a7b8:	1080201c 	xori	r2,r2,128
1000a7bc:	10bfe004 	addi	r2,r2,-128
1000a7c0:	11401ce0 	cmpeqi	r5,r2,115
1000a7c4:	2800141e 	bne	r5,zero,1000a818 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xc8>
1000a7c8:	11401ea0 	cmpeqi	r5,r2,122
1000a7cc:	2800051e 	bne	r5,zero,1000a7e4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x94>
1000a7d0:	10800958 	cmpnei	r2,r2,37
1000a7d4:	103feb1e 	bne	r2,zero,1000a784 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a7d8:	8c400044 	addi	r17,r17,1
1000a7dc:	2007883a 	mov	r3,r4
1000a7e0:	003fe806 	br	1000a784 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a7e4:	88800087 	ldb	r2,2(r17)
1000a7e8:	10801d58 	cmpnei	r2,r2,117
1000a7ec:	103fe51e 	bne	r2,zero,1000a784 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x34>
1000a7f0:	39800017 	ldw	r6,0(r7)
1000a7f4:	940bc83a 	sub	r5,r18,r16
1000a7f8:	8009883a 	mov	r4,r16
1000a7fc:	3d000104 	addi	r20,r7,4
1000a800:	000a6700 	call	1000a670 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
1000a804:	0080230e 	bge	zero,r2,1000a894 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a808:	80a1883a 	add	r16,r16,r2
1000a80c:	8c4000c4 	addi	r17,r17,3
1000a810:	a00f883a 	mov	r7,r20
1000a814:	003fde06 	br	1000a790 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a818:	38800017 	ldw	r2,0(r7)
1000a81c:	39c00104 	addi	r7,r7,4
1000a820:	10c00003 	ldbu	r3,0(r2)
1000a824:	19003fcc 	andi	r4,r3,255
1000a828:	2100201c 	xori	r4,r4,128
1000a82c:	213fe004 	addi	r4,r4,-128
1000a830:	20000c26 	beq	r4,zero,1000a864 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x114>
1000a834:	940bc83a 	sub	r5,r18,r16
1000a838:	114b883a 	add	r5,r2,r5
1000a83c:	00000106 	br	1000a844 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf4>
1000a840:	28801426 	beq	r5,r2,1000a894 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x144>
1000a844:	84000044 	addi	r16,r16,1
1000a848:	10800044 	addi	r2,r2,1
1000a84c:	80ffffc5 	stb	r3,-1(r16)
1000a850:	10c00003 	ldbu	r3,0(r2)
1000a854:	19003fcc 	andi	r4,r3,255
1000a858:	2100201c 	xori	r4,r4,128
1000a85c:	213fe004 	addi	r4,r4,-128
1000a860:	203ff71e 	bne	r4,zero,1000a840 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0xf0>
1000a864:	8c400084 	addi	r17,r17,2
1000a868:	003fc906 	br	1000a790 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcPv+0x40>
1000a86c:	84c5c83a 	sub	r2,r16,r19
1000a870:	80000005 	stb	zero,0(r16)
1000a874:	dfc00517 	ldw	ra,20(sp)
1000a878:	dd000417 	ldw	r20,16(sp)
1000a87c:	dcc00317 	ldw	r19,12(sp)
1000a880:	dc800217 	ldw	r18,8(sp)
1000a884:	dc400117 	ldw	r17,4(sp)
1000a888:	dc000017 	ldw	r16,0(sp)
1000a88c:	dec00604 	addi	sp,sp,24
1000a890:	f800283a 	ret
1000a894:	800b883a 	mov	r5,r16
1000a898:	9809883a 	mov	r4,r19
1000a89c:	000a5f00 	call	1000a5f0 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>

1000a8a0 <_Z27_txnal_cow_string_D1_commitPv>:
1000a8a0:	008400f4 	movhi	r2,4099
1000a8a4:	10aac004 	addi	r2,r2,-21760
1000a8a8:	2080011e 	bne	r4,r2,1000a8b0 <_Z27_txnal_cow_string_D1_commitPv+0x10>
1000a8ac:	f800283a 	ret
1000a8b0:	20800217 	ldw	r2,8(r4)
1000a8b4:	117fffc4 	addi	r5,r2,-1
1000a8b8:	21400215 	stw	r5,8(r4)
1000a8bc:	00bffb16 	blt	zero,r2,1000a8ac <_Z27_txnal_cow_string_D1_commitPv+0xc>
1000a8c0:	defffe04 	addi	sp,sp,-8
1000a8c4:	d94000c4 	addi	r5,sp,3
1000a8c8:	dfc00115 	stw	ra,4(sp)
1000a8cc:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000a8d0:	dfc00117 	ldw	ra,4(sp)
1000a8d4:	dec00204 	addi	sp,sp,8
1000a8d8:	f800283a 	ret

1000a8dc <_ZNSt11logic_errorC1ERKS_>:
1000a8dc:	defff004 	addi	sp,sp,-64
1000a8e0:	00c40074 	movhi	r3,4097
1000a8e4:	008400b4 	movhi	r2,4098
1000a8e8:	dc000d15 	stw	r16,52(sp)
1000a8ec:	18e2a704 	addi	r3,r3,-30052
1000a8f0:	2021883a 	mov	r16,r4
1000a8f4:	10916d04 	addi	r2,r2,17844
1000a8f8:	d809883a 	mov	r4,sp
1000a8fc:	dfc00f15 	stw	ra,60(sp)
1000a900:	dc400e15 	stw	r17,56(sp)
1000a904:	d8c00615 	stw	r3,24(sp)
1000a908:	2823883a 	mov	r17,r5
1000a90c:	d8800715 	stw	r2,28(sp)
1000a910:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a914:	008400b4 	movhi	r2,4098
1000a918:	1095f404 	addi	r2,r2,22480
1000a91c:	80800015 	stw	r2,0(r16)
1000a920:	89400104 	addi	r5,r17,4
1000a924:	81000104 	addi	r4,r16,4
1000a928:	d8000115 	stw	zero,4(sp)
1000a92c:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000a930:	d809883a 	mov	r4,sp
1000a934:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000a938:	dfc00f17 	ldw	ra,60(sp)
1000a93c:	dc400e17 	ldw	r17,56(sp)
1000a940:	dc000d17 	ldw	r16,52(sp)
1000a944:	dec01004 	addi	sp,sp,64
1000a948:	f800283a 	ret

1000a94c <_ZNSt11logic_erroraSERKS_>:
1000a94c:	defff004 	addi	sp,sp,-64
1000a950:	00c40074 	movhi	r3,4097
1000a954:	008400b4 	movhi	r2,4098
1000a958:	dc000d15 	stw	r16,52(sp)
1000a95c:	18e2a704 	addi	r3,r3,-30052
1000a960:	2021883a 	mov	r16,r4
1000a964:	10916e04 	addi	r2,r2,17848
1000a968:	d809883a 	mov	r4,sp
1000a96c:	dfc00f15 	stw	ra,60(sp)
1000a970:	dc400e15 	stw	r17,56(sp)
1000a974:	d8c00615 	stw	r3,24(sp)
1000a978:	2823883a 	mov	r17,r5
1000a97c:	d8800715 	stw	r2,28(sp)
1000a980:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a984:	89400104 	addi	r5,r17,4
1000a988:	81000104 	addi	r4,r16,4
1000a98c:	d8000115 	stw	zero,4(sp)
1000a990:	000fb580 	call	1000fb58 <_ZNSs6assignERKSs>
1000a994:	d809883a 	mov	r4,sp
1000a998:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000a99c:	8005883a 	mov	r2,r16
1000a9a0:	dfc00f17 	ldw	ra,60(sp)
1000a9a4:	dc400e17 	ldw	r17,56(sp)
1000a9a8:	dc000d17 	ldw	r16,52(sp)
1000a9ac:	dec01004 	addi	sp,sp,64
1000a9b0:	f800283a 	ret

1000a9b4 <_ZNSt13runtime_errorC1ERKS_>:
1000a9b4:	defff004 	addi	sp,sp,-64
1000a9b8:	00c40074 	movhi	r3,4097
1000a9bc:	008400b4 	movhi	r2,4098
1000a9c0:	dc000d15 	stw	r16,52(sp)
1000a9c4:	18e2a704 	addi	r3,r3,-30052
1000a9c8:	2021883a 	mov	r16,r4
1000a9cc:	10916f04 	addi	r2,r2,17852
1000a9d0:	d809883a 	mov	r4,sp
1000a9d4:	dfc00f15 	stw	ra,60(sp)
1000a9d8:	dc400e15 	stw	r17,56(sp)
1000a9dc:	d8c00615 	stw	r3,24(sp)
1000a9e0:	2823883a 	mov	r17,r5
1000a9e4:	d8800715 	stw	r2,28(sp)
1000a9e8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000a9ec:	008400b4 	movhi	r2,4098
1000a9f0:	10960d04 	addi	r2,r2,22580
1000a9f4:	80800015 	stw	r2,0(r16)
1000a9f8:	89400104 	addi	r5,r17,4
1000a9fc:	81000104 	addi	r4,r16,4
1000aa00:	d8000115 	stw	zero,4(sp)
1000aa04:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000aa08:	d809883a 	mov	r4,sp
1000aa0c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000aa10:	dfc00f17 	ldw	ra,60(sp)
1000aa14:	dc400e17 	ldw	r17,56(sp)
1000aa18:	dc000d17 	ldw	r16,52(sp)
1000aa1c:	dec01004 	addi	sp,sp,64
1000aa20:	f800283a 	ret

1000aa24 <_ZNSt13runtime_erroraSERKS_>:
1000aa24:	defff004 	addi	sp,sp,-64
1000aa28:	00c40074 	movhi	r3,4097
1000aa2c:	008400b4 	movhi	r2,4098
1000aa30:	dc000d15 	stw	r16,52(sp)
1000aa34:	18e2a704 	addi	r3,r3,-30052
1000aa38:	2021883a 	mov	r16,r4
1000aa3c:	10917004 	addi	r2,r2,17856
1000aa40:	d809883a 	mov	r4,sp
1000aa44:	dfc00f15 	stw	ra,60(sp)
1000aa48:	dc400e15 	stw	r17,56(sp)
1000aa4c:	d8c00615 	stw	r3,24(sp)
1000aa50:	2823883a 	mov	r17,r5
1000aa54:	d8800715 	stw	r2,28(sp)
1000aa58:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000aa5c:	89400104 	addi	r5,r17,4
1000aa60:	81000104 	addi	r4,r16,4
1000aa64:	d8000115 	stw	zero,4(sp)
1000aa68:	000fb580 	call	1000fb58 <_ZNSs6assignERKSs>
1000aa6c:	d809883a 	mov	r4,sp
1000aa70:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000aa74:	8005883a 	mov	r2,r16
1000aa78:	dfc00f17 	ldw	ra,60(sp)
1000aa7c:	dc400e17 	ldw	r17,56(sp)
1000aa80:	dc000d17 	ldw	r16,52(sp)
1000aa84:	dec01004 	addi	sp,sp,64
1000aa88:	f800283a 	ret

1000aa8c <_ZNSt11logic_errorC1EPKc>:
1000aa8c:	01840074 	movhi	r6,4097
1000aa90:	deffee04 	addi	sp,sp,-72
1000aa94:	31a2a704 	addi	r6,r6,-30052
1000aa98:	00c400b4 	movhi	r3,4098
1000aa9c:	00840074 	movhi	r2,4097
1000aaa0:	18d17104 	addi	r3,r3,17860
1000aaa4:	10aac604 	addi	r2,r2,-21736
1000aaa8:	d9000015 	stw	r4,0(sp)
1000aaac:	d9800815 	stw	r6,32(sp)
1000aab0:	d9000204 	addi	r4,sp,8
1000aab4:	d9801004 	addi	r6,sp,64
1000aab8:	d8c00915 	stw	r3,36(sp)
1000aabc:	d9800a15 	stw	r6,40(sp)
1000aac0:	d8800b15 	stw	r2,44(sp)
1000aac4:	d9400115 	stw	r5,4(sp)
1000aac8:	dfc01115 	stw	ra,68(sp)
1000aacc:	df001015 	stw	fp,64(sp)
1000aad0:	dec00c15 	stw	sp,48(sp)
1000aad4:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000aad8:	d8c00017 	ldw	r3,0(sp)
1000aadc:	008400b4 	movhi	r2,4098
1000aae0:	d9400117 	ldw	r5,4(sp)
1000aae4:	1095f404 	addi	r2,r2,22480
1000aae8:	18800015 	stw	r2,0(r3)
1000aaec:	d9800fc4 	addi	r6,sp,63
1000aaf0:	00800044 	movi	r2,1
1000aaf4:	19000104 	addi	r4,r3,4
1000aaf8:	d8800315 	stw	r2,12(sp)
1000aafc:	00106b40 	call	100106b4 <_ZNSsC1EPKcRKSaIcE>
1000ab00:	d9000204 	addi	r4,sp,8
1000ab04:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000ab08:	dfc01117 	ldw	ra,68(sp)
1000ab0c:	df001017 	ldw	fp,64(sp)
1000ab10:	dec01204 	addi	sp,sp,72
1000ab14:	f800283a 	ret
1000ab18:	d8800417 	ldw	r2,16(sp)
1000ab1c:	d9000017 	ldw	r4,0(sp)
1000ab20:	d8800115 	stw	r2,4(sp)
1000ab24:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000ab28:	d9000117 	ldw	r4,4(sp)
1000ab2c:	00bfffc4 	movi	r2,-1
1000ab30:	d8800315 	stw	r2,12(sp)
1000ab34:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000ab38 <_ZNSt12domain_errorC1EPKc>:
1000ab38:	defffe04 	addi	sp,sp,-8
1000ab3c:	dc000015 	stw	r16,0(sp)
1000ab40:	dfc00115 	stw	ra,4(sp)
1000ab44:	2021883a 	mov	r16,r4
1000ab48:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000ab4c:	008400b4 	movhi	r2,4098
1000ab50:	1095f904 	addi	r2,r2,22500
1000ab54:	80800015 	stw	r2,0(r16)
1000ab58:	dfc00117 	ldw	ra,4(sp)
1000ab5c:	dc000017 	ldw	r16,0(sp)
1000ab60:	dec00204 	addi	sp,sp,8
1000ab64:	f800283a 	ret

1000ab68 <_ZNSt16invalid_argumentC1EPKc>:
1000ab68:	defffe04 	addi	sp,sp,-8
1000ab6c:	dc000015 	stw	r16,0(sp)
1000ab70:	dfc00115 	stw	ra,4(sp)
1000ab74:	2021883a 	mov	r16,r4
1000ab78:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000ab7c:	008400b4 	movhi	r2,4098
1000ab80:	1095fe04 	addi	r2,r2,22520
1000ab84:	80800015 	stw	r2,0(r16)
1000ab88:	dfc00117 	ldw	ra,4(sp)
1000ab8c:	dc000017 	ldw	r16,0(sp)
1000ab90:	dec00204 	addi	sp,sp,8
1000ab94:	f800283a 	ret

1000ab98 <_ZNSt12length_errorC1EPKc>:
1000ab98:	defffe04 	addi	sp,sp,-8
1000ab9c:	dc000015 	stw	r16,0(sp)
1000aba0:	dfc00115 	stw	ra,4(sp)
1000aba4:	2021883a 	mov	r16,r4
1000aba8:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000abac:	008400b4 	movhi	r2,4098
1000abb0:	10960304 	addi	r2,r2,22540
1000abb4:	80800015 	stw	r2,0(r16)
1000abb8:	dfc00117 	ldw	ra,4(sp)
1000abbc:	dc000017 	ldw	r16,0(sp)
1000abc0:	dec00204 	addi	sp,sp,8
1000abc4:	f800283a 	ret

1000abc8 <_ZNSt12out_of_rangeC1EPKc>:
1000abc8:	defffe04 	addi	sp,sp,-8
1000abcc:	dc000015 	stw	r16,0(sp)
1000abd0:	dfc00115 	stw	ra,4(sp)
1000abd4:	2021883a 	mov	r16,r4
1000abd8:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000abdc:	008400b4 	movhi	r2,4098
1000abe0:	10960804 	addi	r2,r2,22560
1000abe4:	80800015 	stw	r2,0(r16)
1000abe8:	dfc00117 	ldw	ra,4(sp)
1000abec:	dc000017 	ldw	r16,0(sp)
1000abf0:	dec00204 	addi	sp,sp,8
1000abf4:	f800283a 	ret

1000abf8 <_ZNSt13runtime_errorC1EPKc>:
1000abf8:	01840074 	movhi	r6,4097
1000abfc:	deffee04 	addi	sp,sp,-72
1000ac00:	31a2a704 	addi	r6,r6,-30052
1000ac04:	00c400b4 	movhi	r3,4098
1000ac08:	00840074 	movhi	r2,4097
1000ac0c:	18d17284 	addi	r3,r3,17866
1000ac10:	10ab2104 	addi	r2,r2,-21372
1000ac14:	d9000015 	stw	r4,0(sp)
1000ac18:	d9800815 	stw	r6,32(sp)
1000ac1c:	d9000204 	addi	r4,sp,8
1000ac20:	d9801004 	addi	r6,sp,64
1000ac24:	d8c00915 	stw	r3,36(sp)
1000ac28:	d9800a15 	stw	r6,40(sp)
1000ac2c:	d8800b15 	stw	r2,44(sp)
1000ac30:	d9400115 	stw	r5,4(sp)
1000ac34:	dfc01115 	stw	ra,68(sp)
1000ac38:	df001015 	stw	fp,64(sp)
1000ac3c:	dec00c15 	stw	sp,48(sp)
1000ac40:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000ac44:	d8c00017 	ldw	r3,0(sp)
1000ac48:	008400b4 	movhi	r2,4098
1000ac4c:	d9400117 	ldw	r5,4(sp)
1000ac50:	10960d04 	addi	r2,r2,22580
1000ac54:	18800015 	stw	r2,0(r3)
1000ac58:	d9800fc4 	addi	r6,sp,63
1000ac5c:	00800044 	movi	r2,1
1000ac60:	19000104 	addi	r4,r3,4
1000ac64:	d8800315 	stw	r2,12(sp)
1000ac68:	00106b40 	call	100106b4 <_ZNSsC1EPKcRKSaIcE>
1000ac6c:	d9000204 	addi	r4,sp,8
1000ac70:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000ac74:	dfc01117 	ldw	ra,68(sp)
1000ac78:	df001017 	ldw	fp,64(sp)
1000ac7c:	dec01204 	addi	sp,sp,72
1000ac80:	f800283a 	ret
1000ac84:	d8800417 	ldw	r2,16(sp)
1000ac88:	d9000017 	ldw	r4,0(sp)
1000ac8c:	d8800115 	stw	r2,4(sp)
1000ac90:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000ac94:	d9000117 	ldw	r4,4(sp)
1000ac98:	00bfffc4 	movi	r2,-1
1000ac9c:	d8800315 	stw	r2,12(sp)
1000aca0:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000aca4 <_ZNSt11range_errorC1EPKc>:
1000aca4:	defffe04 	addi	sp,sp,-8
1000aca8:	dc000015 	stw	r16,0(sp)
1000acac:	dfc00115 	stw	ra,4(sp)
1000acb0:	2021883a 	mov	r16,r4
1000acb4:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000acb8:	008400b4 	movhi	r2,4098
1000acbc:	10961204 	addi	r2,r2,22600
1000acc0:	80800015 	stw	r2,0(r16)
1000acc4:	dfc00117 	ldw	ra,4(sp)
1000acc8:	dc000017 	ldw	r16,0(sp)
1000accc:	dec00204 	addi	sp,sp,8
1000acd0:	f800283a 	ret

1000acd4 <_ZNSt14overflow_errorC1EPKc>:
1000acd4:	defffe04 	addi	sp,sp,-8
1000acd8:	dc000015 	stw	r16,0(sp)
1000acdc:	dfc00115 	stw	ra,4(sp)
1000ace0:	2021883a 	mov	r16,r4
1000ace4:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000ace8:	008400b4 	movhi	r2,4098
1000acec:	10961704 	addi	r2,r2,22620
1000acf0:	80800015 	stw	r2,0(r16)
1000acf4:	dfc00117 	ldw	ra,4(sp)
1000acf8:	dc000017 	ldw	r16,0(sp)
1000acfc:	dec00204 	addi	sp,sp,8
1000ad00:	f800283a 	ret

1000ad04 <_ZNSt15underflow_errorC1EPKc>:
1000ad04:	defffe04 	addi	sp,sp,-8
1000ad08:	dc000015 	stw	r16,0(sp)
1000ad0c:	dfc00115 	stw	ra,4(sp)
1000ad10:	2021883a 	mov	r16,r4
1000ad14:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000ad18:	008400b4 	movhi	r2,4098
1000ad1c:	10961c04 	addi	r2,r2,22640
1000ad20:	80800015 	stw	r2,0(r16)
1000ad24:	dfc00117 	ldw	ra,4(sp)
1000ad28:	dc000017 	ldw	r16,0(sp)
1000ad2c:	dec00204 	addi	sp,sp,8
1000ad30:	f800283a 	ret

1000ad34 <_ZNSt12__sso_stringC1ERKSs>:
1000ad34:	29400017 	ldw	r5,0(r5)
1000ad38:	29bffd17 	ldw	r6,-12(r5)
1000ad3c:	000d1181 	jmpi	1000d118 <_ZNSt12__sso_stringC1EPKcj>

1000ad40 <_ZNSt12__cow_stringC1Ev>:
1000ad40:	008400f4 	movhi	r2,4099
1000ad44:	10aac304 	addi	r2,r2,-21748
1000ad48:	20800015 	stw	r2,0(r4)
1000ad4c:	f800283a 	ret

1000ad50 <_ZNSt12__cow_stringC1ERKSs>:
1000ad50:	000fafc1 	jmpi	1000fafc <_ZNSsC1ERKSs>

1000ad54 <_ZNSt12__cow_stringC1EPKcj>:
1000ad54:	defffe04 	addi	sp,sp,-8
1000ad58:	d9c000c4 	addi	r7,sp,3
1000ad5c:	dfc00115 	stw	ra,4(sp)
1000ad60:	00101c80 	call	100101c8 <_ZNSsC1EPKcjRKSaIcE>
1000ad64:	dfc00117 	ldw	ra,4(sp)
1000ad68:	dec00204 	addi	sp,sp,8
1000ad6c:	f800283a 	ret

1000ad70 <_ZNSt12__cow_stringC1ERKS_>:
1000ad70:	defff004 	addi	sp,sp,-64
1000ad74:	00c40074 	movhi	r3,4097
1000ad78:	008400b4 	movhi	r2,4098
1000ad7c:	dc000e15 	stw	r16,56(sp)
1000ad80:	18e2a704 	addi	r3,r3,-30052
1000ad84:	10917404 	addi	r2,r2,17872
1000ad88:	2021883a 	mov	r16,r4
1000ad8c:	d9000104 	addi	r4,sp,4
1000ad90:	dfc00f15 	stw	ra,60(sp)
1000ad94:	d8c00715 	stw	r3,28(sp)
1000ad98:	d8800815 	stw	r2,32(sp)
1000ad9c:	d9400015 	stw	r5,0(sp)
1000ada0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000ada4:	d9400017 	ldw	r5,0(sp)
1000ada8:	8009883a 	mov	r4,r16
1000adac:	d8000215 	stw	zero,8(sp)
1000adb0:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000adb4:	d9000104 	addi	r4,sp,4
1000adb8:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000adbc:	dfc00f17 	ldw	ra,60(sp)
1000adc0:	dc000e17 	ldw	r16,56(sp)
1000adc4:	dec01004 	addi	sp,sp,64
1000adc8:	f800283a 	ret

1000adcc <_ZNSt12__cow_stringaSERKS_>:
1000adcc:	defff004 	addi	sp,sp,-64
1000add0:	00c40074 	movhi	r3,4097
1000add4:	008400b4 	movhi	r2,4098
1000add8:	dc000e15 	stw	r16,56(sp)
1000addc:	18e2a704 	addi	r3,r3,-30052
1000ade0:	2021883a 	mov	r16,r4
1000ade4:	10917504 	addi	r2,r2,17876
1000ade8:	d9000104 	addi	r4,sp,4
1000adec:	dfc00f15 	stw	ra,60(sp)
1000adf0:	d8c00715 	stw	r3,28(sp)
1000adf4:	d9400015 	stw	r5,0(sp)
1000adf8:	d8800815 	stw	r2,32(sp)
1000adfc:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000ae00:	d9400017 	ldw	r5,0(sp)
1000ae04:	8009883a 	mov	r4,r16
1000ae08:	d8000215 	stw	zero,8(sp)
1000ae0c:	000fb580 	call	1000fb58 <_ZNSs6assignERKSs>
1000ae10:	d9000104 	addi	r4,sp,4
1000ae14:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000ae18:	8005883a 	mov	r2,r16
1000ae1c:	dfc00f17 	ldw	ra,60(sp)
1000ae20:	dc000e17 	ldw	r16,56(sp)
1000ae24:	dec01004 	addi	sp,sp,64
1000ae28:	f800283a 	ret

1000ae2c <_ZNSt12__cow_stringD1Ev>:
1000ae2c:	20c00017 	ldw	r3,0(r4)
1000ae30:	008400f4 	movhi	r2,4099
1000ae34:	10aac004 	addi	r2,r2,-21760
1000ae38:	193ffd04 	addi	r4,r3,-12
1000ae3c:	2080011e 	bne	r4,r2,1000ae44 <_ZNSt12__cow_stringD1Ev+0x18>
1000ae40:	f800283a 	ret
1000ae44:	18bfff17 	ldw	r2,-4(r3)
1000ae48:	117fffc4 	addi	r5,r2,-1
1000ae4c:	197fff15 	stw	r5,-4(r3)
1000ae50:	00bffb16 	blt	zero,r2,1000ae40 <_ZNSt12__cow_stringD1Ev+0x14>
1000ae54:	defffe04 	addi	sp,sp,-8
1000ae58:	d94000c4 	addi	r5,sp,3
1000ae5c:	dfc00115 	stw	ra,4(sp)
1000ae60:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000ae64:	dfc00117 	ldw	ra,4(sp)
1000ae68:	dec00204 	addi	sp,sp,8
1000ae6c:	f800283a 	ret

1000ae70 <_ZNSt12__cow_stringC1EOS_>:
1000ae70:	28c00017 	ldw	r3,0(r5)
1000ae74:	008400f4 	movhi	r2,4099
1000ae78:	10aac304 	addi	r2,r2,-21748
1000ae7c:	20c00015 	stw	r3,0(r4)
1000ae80:	28800015 	stw	r2,0(r5)
1000ae84:	f800283a 	ret

1000ae88 <_ZNSt12__cow_stringaSEOS_>:
1000ae88:	defff004 	addi	sp,sp,-64
1000ae8c:	01840074 	movhi	r6,4097
1000ae90:	00c400b4 	movhi	r3,4098
1000ae94:	dc000e15 	stw	r16,56(sp)
1000ae98:	31a2a704 	addi	r6,r6,-30052
1000ae9c:	18d17604 	addi	r3,r3,17880
1000aea0:	2021883a 	mov	r16,r4
1000aea4:	d9000104 	addi	r4,sp,4
1000aea8:	dfc00f15 	stw	ra,60(sp)
1000aeac:	d9800715 	stw	r6,28(sp)
1000aeb0:	d8c00815 	stw	r3,32(sp)
1000aeb4:	d9400015 	stw	r5,0(sp)
1000aeb8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000aebc:	d9400017 	ldw	r5,0(sp)
1000aec0:	8009883a 	mov	r4,r16
1000aec4:	d8000215 	stw	zero,8(sp)
1000aec8:	000d7140 	call	1000d714 <_ZNSs4swapERSs>
1000aecc:	d9000104 	addi	r4,sp,4
1000aed0:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000aed4:	8005883a 	mov	r2,r16
1000aed8:	dfc00f17 	ldw	ra,60(sp)
1000aedc:	dc000e17 	ldw	r16,56(sp)
1000aee0:	dec01004 	addi	sp,sp,64
1000aee4:	f800283a 	ret

1000aee8 <_ZNKSt3_V214error_category10_M_messageEi>:
1000aee8:	00c400b4 	movhi	r3,4098
1000aeec:	deffec04 	addi	sp,sp,-80
1000aef0:	18d17704 	addi	r3,r3,17884
1000aef4:	01c40074 	movhi	r7,4097
1000aef8:	00840074 	movhi	r2,4097
1000aefc:	39e2a704 	addi	r7,r7,-30052
1000af00:	10abef04 	addi	r2,r2,-20548
1000af04:	d9000015 	stw	r4,0(sp)
1000af08:	d8c00a15 	stw	r3,40(sp)
1000af0c:	d9000304 	addi	r4,sp,12
1000af10:	d8c01204 	addi	r3,sp,72
1000af14:	dfc01315 	stw	ra,76(sp)
1000af18:	d9400115 	stw	r5,4(sp)
1000af1c:	d9c00915 	stw	r7,36(sp)
1000af20:	d8c00b15 	stw	r3,44(sp)
1000af24:	d8800c15 	stw	r2,48(sp)
1000af28:	d9800215 	stw	r6,8(sp)
1000af2c:	df001215 	stw	fp,72(sp)
1000af30:	dec00d15 	stw	sp,52(sp)
1000af34:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000af38:	d9400117 	ldw	r5,4(sp)
1000af3c:	d9800217 	ldw	r6,8(sp)
1000af40:	00ffffc4 	movi	r3,-1
1000af44:	28800017 	ldw	r2,0(r5)
1000af48:	d9001104 	addi	r4,sp,68
1000af4c:	10800317 	ldw	r2,12(r2)
1000af50:	d8c00415 	stw	r3,16(sp)
1000af54:	103ee83a 	callr	r2
1000af58:	d9401117 	ldw	r5,68(sp)
1000af5c:	00800044 	movi	r2,1
1000af60:	d8800415 	stw	r2,16(sp)
1000af64:	29bffd17 	ldw	r6,-12(r5)
1000af68:	d9000017 	ldw	r4,0(sp)
1000af6c:	000d1180 	call	1000d118 <_ZNSt12__sso_stringC1EPKcj>
1000af70:	d8c01117 	ldw	r3,68(sp)
1000af74:	008400f4 	movhi	r2,4099
1000af78:	10aac004 	addi	r2,r2,-21760
1000af7c:	193ffd04 	addi	r4,r3,-12
1000af80:	2080071e 	bne	r4,r2,1000afa0 <_ZNKSt3_V214error_category10_M_messageEi+0xb8>
1000af84:	d9000304 	addi	r4,sp,12
1000af88:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000af8c:	d8800017 	ldw	r2,0(sp)
1000af90:	dfc01317 	ldw	ra,76(sp)
1000af94:	df001217 	ldw	fp,72(sp)
1000af98:	dec01404 	addi	sp,sp,80
1000af9c:	f800283a 	ret
1000afa0:	18bfff17 	ldw	r2,-4(r3)
1000afa4:	117fffc4 	addi	r5,r2,-1
1000afa8:	197fff15 	stw	r5,-4(r3)
1000afac:	00bff516 	blt	zero,r2,1000af84 <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000afb0:	d94010c4 	addi	r5,sp,67
1000afb4:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000afb8:	003ff206 	br	1000af84 <_ZNKSt3_V214error_category10_M_messageEi+0x9c>
1000afbc:	d8801117 	ldw	r2,68(sp)
1000afc0:	d9400517 	ldw	r5,20(sp)
1000afc4:	00c400f4 	movhi	r3,4099
1000afc8:	18eac004 	addi	r3,r3,-21760
1000afcc:	113ffd04 	addi	r4,r2,-12
1000afd0:	d9400015 	stw	r5,0(sp)
1000afd4:	20c00626 	beq	r4,r3,1000aff0 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000afd8:	10ffff17 	ldw	r3,-4(r2)
1000afdc:	197fffc4 	addi	r5,r3,-1
1000afe0:	117fff15 	stw	r5,-4(r2)
1000afe4:	00c00216 	blt	zero,r3,1000aff0 <_ZNKSt3_V214error_category10_M_messageEi+0x108>
1000afe8:	d94010c4 	addi	r5,sp,67
1000afec:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000aff0:	d9000017 	ldw	r4,0(sp)
1000aff4:	00bfffc4 	movi	r2,-1
1000aff8:	d8800415 	stw	r2,16(sp)
1000affc:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>:
1000b000:	00c400b4 	movhi	r3,4098
1000b004:	deffed04 	addi	sp,sp,-76
1000b008:	18d17904 	addi	r3,r3,17892
1000b00c:	01840074 	movhi	r6,4097
1000b010:	00840074 	movhi	r2,4097
1000b014:	10ac3d04 	addi	r2,r2,-20236
1000b018:	31a2a704 	addi	r6,r6,-30052
1000b01c:	d9000315 	stw	r4,12(sp)
1000b020:	d8c00b15 	stw	r3,44(sp)
1000b024:	d9000404 	addi	r4,sp,16
1000b028:	d8c01104 	addi	r3,sp,68
1000b02c:	d8c00c15 	stw	r3,48(sp)
1000b030:	d8800d15 	stw	r2,52(sp)
1000b034:	dfc01215 	stw	ra,72(sp)
1000b038:	df001115 	stw	fp,68(sp)
1000b03c:	d9400215 	stw	r5,8(sp)
1000b040:	d9800a15 	stw	r6,40(sp)
1000b044:	dec00e15 	stw	sp,56(sp)
1000b048:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b04c:	d8800217 	ldw	r2,8(sp)
1000b050:	00c00044 	movi	r3,1
1000b054:	d8c00015 	stw	r3,0(sp)
1000b058:	10bfffc4 	addi	r2,r2,-1
1000b05c:	d8800115 	stw	r2,4(sp)
1000b060:	00000306 	br	1000b070 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x70>
1000b064:	d8800017 	ldw	r2,0(sp)
1000b068:	10800044 	addi	r2,r2,1
1000b06c:	d8800015 	stw	r2,0(sp)
1000b070:	00bfffc4 	movi	r2,-1
1000b074:	d8800515 	stw	r2,20(sp)
1000b078:	d8c00117 	ldw	r3,4(sp)
1000b07c:	d8800017 	ldw	r2,0(sp)
1000b080:	1889883a 	add	r4,r3,r2
1000b084:	00000000 	call	10000000 <__alt_mem_sdram>
1000b088:	10803fcc 	andi	r2,r2,255
1000b08c:	103ff51e 	bne	r2,zero,1000b064 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x64>
1000b090:	d9800017 	ldw	r6,0(sp)
1000b094:	00800044 	movi	r2,1
1000b098:	d8800515 	stw	r2,20(sp)
1000b09c:	31000304 	addi	r4,r6,12
1000b0a0:	00000000 	call	10000000 <__alt_mem_sdram>
1000b0a4:	d9800017 	ldw	r6,0(sp)
1000b0a8:	d9400217 	ldw	r5,8(sp)
1000b0ac:	11000304 	addi	r4,r2,12
1000b0b0:	30ffffc4 	addi	r3,r6,-1
1000b0b4:	10c00115 	stw	r3,4(r2)
1000b0b8:	10c00015 	stw	r3,0(r2)
1000b0bc:	10000215 	stw	zero,8(r2)
1000b0c0:	00bfffc4 	movi	r2,-1
1000b0c4:	d8800515 	stw	r2,20(sp)
1000b0c8:	d9000015 	stw	r4,0(sp)
1000b0cc:	00000000 	call	10000000 <__alt_mem_sdram>
1000b0d0:	d9000017 	ldw	r4,0(sp)
1000b0d4:	d8800317 	ldw	r2,12(sp)
1000b0d8:	11000015 	stw	r4,0(r2)
1000b0dc:	d9000404 	addi	r4,sp,16
1000b0e0:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b0e4:	dfc01217 	ldw	ra,72(sp)
1000b0e8:	df001117 	ldw	fp,68(sp)
1000b0ec:	dec01304 	addi	sp,sp,76
1000b0f0:	f800283a 	ret
1000b0f4:	d8c00617 	ldw	r3,24(sp)
1000b0f8:	d8800517 	ldw	r2,20(sp)
1000b0fc:	d8c00015 	stw	r3,0(sp)
1000b100:	1000051e 	bne	r2,zero,1000b118 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x118>
1000b104:	d9000617 	ldw	r4,24(sp)
1000b108:	00080480 	call	10008048 <__cxa_begin_catch>
1000b10c:	00800084 	movi	r2,2
1000b110:	d8800515 	stw	r2,20(sp)
1000b114:	00084800 	call	10008480 <__cxa_rethrow>
1000b118:	10bfffc4 	addi	r2,r2,-1
1000b11c:	10000126 	beq	r2,zero,1000b124 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_+0x124>
1000b120:	003b68fa 	trap	3
1000b124:	d8000515 	stw	zero,20(sp)
1000b128:	00080f40 	call	100080f4 <__cxa_end_catch>
1000b12c:	d9000017 	ldw	r4,0(sp)
1000b130:	00bfffc4 	movi	r2,-1
1000b134:	d8800515 	stw	r2,20(sp)
1000b138:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b13c <_Z23_txnal_cow_string_c_strPKv>:
1000b13c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b140 <_Z23_txnal_sso_string_c_strPKv>:
1000b140:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b144 <_Z20_txnal_cow_string_D1Pv>:
1000b144:	deffff04 	addi	sp,sp,-4
1000b148:	dfc00015 	stw	ra,0(sp)
1000b14c:	00000000 	call	10000000 <__alt_mem_sdram>
1000b150:	01040074 	movhi	r4,4097
1000b154:	11fffd04 	addi	r7,r2,-12
1000b158:	01400044 	movi	r5,1
1000b15c:	000d883a 	mov	r6,zero
1000b160:	212a2804 	addi	r4,r4,-22368
1000b164:	dfc00017 	ldw	ra,0(sp)
1000b168:	dec00104 	addi	sp,sp,4
1000b16c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b170 <_Z26_txnal_logic_error_get_msgPv>:
1000b170:	20800104 	addi	r2,r4,4
1000b174:	f800283a 	ret

1000b178 <_Z28_txnal_runtime_error_get_msgPv>:
1000b178:	20800104 	addi	r2,r4,4
1000b17c:	f800283a 	ret

1000b180 <_ZGTtNSt11logic_errorC1EPKc>:
1000b180:	00c400b4 	movhi	r3,4098
1000b184:	deffed04 	addi	sp,sp,-76
1000b188:	18d17d04 	addi	r3,r3,17908
1000b18c:	01840074 	movhi	r6,4097
1000b190:	00840074 	movhi	r2,4097
1000b194:	31a2a704 	addi	r6,r6,-30052
1000b198:	10ac8d04 	addi	r2,r2,-19916
1000b19c:	d9000015 	stw	r4,0(sp)
1000b1a0:	d8c00915 	stw	r3,36(sp)
1000b1a4:	d9000204 	addi	r4,sp,8
1000b1a8:	d8c01104 	addi	r3,sp,68
1000b1ac:	d9800815 	stw	r6,32(sp)
1000b1b0:	dfc01215 	stw	ra,72(sp)
1000b1b4:	d8c00a15 	stw	r3,40(sp)
1000b1b8:	d8800b15 	stw	r2,44(sp)
1000b1bc:	d9400115 	stw	r5,4(sp)
1000b1c0:	df001115 	stw	fp,68(sp)
1000b1c4:	dec00c15 	stw	sp,48(sp)
1000b1c8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b1cc:	d8800f04 	addi	r2,sp,60
1000b1d0:	014400b4 	movhi	r5,4098
1000b1d4:	1009883a 	mov	r4,r2
1000b1d8:	29550404 	addi	r5,r5,21520
1000b1dc:	00bfffc4 	movi	r2,-1
1000b1e0:	d8800315 	stw	r2,12(sp)
1000b1e4:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b1e8:	00800044 	movi	r2,1
1000b1ec:	d9000017 	ldw	r4,0(sp)
1000b1f0:	d8800315 	stw	r2,12(sp)
1000b1f4:	d8800f04 	addi	r2,sp,60
1000b1f8:	01800204 	movi	r6,8
1000b1fc:	100b883a 	mov	r5,r2
1000b200:	00000000 	call	10000000 <__alt_mem_sdram>
1000b204:	d9800017 	ldw	r6,0(sp)
1000b208:	d9400117 	ldw	r5,4(sp)
1000b20c:	31000104 	addi	r4,r6,4
1000b210:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b214:	d9000f04 	addi	r4,sp,60
1000b218:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000b21c:	d9000204 	addi	r4,sp,8
1000b220:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b224:	dfc01217 	ldw	ra,72(sp)
1000b228:	df001117 	ldw	fp,68(sp)
1000b22c:	dec01304 	addi	sp,sp,76
1000b230:	f800283a 	ret
1000b234:	d8800417 	ldw	r2,16(sp)
1000b238:	d9000f04 	addi	r4,sp,60
1000b23c:	d8800015 	stw	r2,0(sp)
1000b240:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000b244:	d9000017 	ldw	r4,0(sp)
1000b248:	00bfffc4 	movi	r2,-1
1000b24c:	d8800315 	stw	r2,12(sp)
1000b250:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b254 <_ZGTtNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b254:	00c400b4 	movhi	r3,4098
1000b258:	deffed04 	addi	sp,sp,-76
1000b25c:	18d17e84 	addi	r3,r3,17914
1000b260:	01840074 	movhi	r6,4097
1000b264:	00840074 	movhi	r2,4097
1000b268:	31a2a704 	addi	r6,r6,-30052
1000b26c:	10acc704 	addi	r2,r2,-19684
1000b270:	d9000015 	stw	r4,0(sp)
1000b274:	d8c00915 	stw	r3,36(sp)
1000b278:	d9000204 	addi	r4,sp,8
1000b27c:	d8c01104 	addi	r3,sp,68
1000b280:	d9800815 	stw	r6,32(sp)
1000b284:	dfc01215 	stw	ra,72(sp)
1000b288:	d8c00a15 	stw	r3,40(sp)
1000b28c:	d8800b15 	stw	r2,44(sp)
1000b290:	d9400115 	stw	r5,4(sp)
1000b294:	df001115 	stw	fp,68(sp)
1000b298:	dec00c15 	stw	sp,48(sp)
1000b29c:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b2a0:	d8c00f04 	addi	r3,sp,60
1000b2a4:	014400b4 	movhi	r5,4098
1000b2a8:	1809883a 	mov	r4,r3
1000b2ac:	00bfffc4 	movi	r2,-1
1000b2b0:	29550404 	addi	r5,r5,21520
1000b2b4:	d8800315 	stw	r2,12(sp)
1000b2b8:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b2bc:	d9000017 	ldw	r4,0(sp)
1000b2c0:	d8c00f04 	addi	r3,sp,60
1000b2c4:	00800044 	movi	r2,1
1000b2c8:	01800204 	movi	r6,8
1000b2cc:	180b883a 	mov	r5,r3
1000b2d0:	d8800315 	stw	r2,12(sp)
1000b2d4:	00000000 	call	10000000 <__alt_mem_sdram>
1000b2d8:	d8800017 	ldw	r2,0(sp)
1000b2dc:	d9000117 	ldw	r4,4(sp)
1000b2e0:	10c00104 	addi	r3,r2,4
1000b2e4:	d8c00115 	stw	r3,4(sp)
1000b2e8:	00000000 	call	10000000 <__alt_mem_sdram>
1000b2ec:	d9800017 	ldw	r6,0(sp)
1000b2f0:	d9000117 	ldw	r4,4(sp)
1000b2f4:	100b883a 	mov	r5,r2
1000b2f8:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b2fc:	d9000f04 	addi	r4,sp,60
1000b300:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000b304:	d9000204 	addi	r4,sp,8
1000b308:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b30c:	dfc01217 	ldw	ra,72(sp)
1000b310:	df001117 	ldw	fp,68(sp)
1000b314:	dec01304 	addi	sp,sp,76
1000b318:	f800283a 	ret
1000b31c:	d8800417 	ldw	r2,16(sp)
1000b320:	d9000f04 	addi	r4,sp,60
1000b324:	d8800015 	stw	r2,0(sp)
1000b328:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000b32c:	d9000017 	ldw	r4,0(sp)
1000b330:	00bfffc4 	movi	r2,-1
1000b334:	d8800315 	stw	r2,12(sp)
1000b338:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b33c <_ZGTtNSt11logic_errorD1Ev>:
1000b33c:	21000104 	addi	r4,r4,4
1000b340:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000b344 <_ZGTtNSt11logic_errorD0Ev>:
1000b344:	defffe04 	addi	sp,sp,-8
1000b348:	dc000015 	stw	r16,0(sp)
1000b34c:	2021883a 	mov	r16,r4
1000b350:	21000104 	addi	r4,r4,4
1000b354:	dfc00115 	stw	ra,4(sp)
1000b358:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000b35c:	8009883a 	mov	r4,r16
1000b360:	dfc00117 	ldw	ra,4(sp)
1000b364:	dc000017 	ldw	r16,0(sp)
1000b368:	dec00204 	addi	sp,sp,8
1000b36c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b370 <_ZGTtNKSt11logic_error4whatEv>:
1000b370:	21000104 	addi	r4,r4,4
1000b374:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b378 <_ZGTtNSt12domain_errorC1EPKc>:
1000b378:	00c400b4 	movhi	r3,4098
1000b37c:	deffed04 	addi	sp,sp,-76
1000b380:	18d18004 	addi	r3,r3,17920
1000b384:	01840074 	movhi	r6,4097
1000b388:	00840074 	movhi	r2,4097
1000b38c:	31a2a704 	addi	r6,r6,-30052
1000b390:	10ad0e04 	addi	r2,r2,-19400
1000b394:	d9000015 	stw	r4,0(sp)
1000b398:	d8c00915 	stw	r3,36(sp)
1000b39c:	d9000204 	addi	r4,sp,8
1000b3a0:	d8c01104 	addi	r3,sp,68
1000b3a4:	d9800815 	stw	r6,32(sp)
1000b3a8:	d8c00a15 	stw	r3,40(sp)
1000b3ac:	dfc01215 	stw	ra,72(sp)
1000b3b0:	d8800b15 	stw	r2,44(sp)
1000b3b4:	d9400115 	stw	r5,4(sp)
1000b3b8:	df001115 	stw	fp,68(sp)
1000b3bc:	dec00c15 	stw	sp,48(sp)
1000b3c0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b3c4:	d8800f04 	addi	r2,sp,60
1000b3c8:	014400b4 	movhi	r5,4098
1000b3cc:	1009883a 	mov	r4,r2
1000b3d0:	29550404 	addi	r5,r5,21520
1000b3d4:	00bfffc4 	movi	r2,-1
1000b3d8:	d8800315 	stw	r2,12(sp)
1000b3dc:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b3e0:	00c00044 	movi	r3,1
1000b3e4:	d9000017 	ldw	r4,0(sp)
1000b3e8:	008400b4 	movhi	r2,4098
1000b3ec:	d8c00315 	stw	r3,12(sp)
1000b3f0:	d8c00f04 	addi	r3,sp,60
1000b3f4:	1095f904 	addi	r2,r2,22500
1000b3f8:	01800204 	movi	r6,8
1000b3fc:	180b883a 	mov	r5,r3
1000b400:	d8800f15 	stw	r2,60(sp)
1000b404:	00000000 	call	10000000 <__alt_mem_sdram>
1000b408:	d9800017 	ldw	r6,0(sp)
1000b40c:	d9400117 	ldw	r5,4(sp)
1000b410:	31000104 	addi	r4,r6,4
1000b414:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b418:	d9000f04 	addi	r4,sp,60
1000b41c:	000cbdc0 	call	1000cbdc <_ZNSt12domain_errorD1Ev>
1000b420:	d9000204 	addi	r4,sp,8
1000b424:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b428:	dfc01217 	ldw	ra,72(sp)
1000b42c:	df001117 	ldw	fp,68(sp)
1000b430:	dec01304 	addi	sp,sp,76
1000b434:	f800283a 	ret
1000b438:	d8800417 	ldw	r2,16(sp)
1000b43c:	d9000f04 	addi	r4,sp,60
1000b440:	d8800015 	stw	r2,0(sp)
1000b444:	000cbdc0 	call	1000cbdc <_ZNSt12domain_errorD1Ev>
1000b448:	d9000017 	ldw	r4,0(sp)
1000b44c:	00bfffc4 	movi	r2,-1
1000b450:	d8800315 	stw	r2,12(sp)
1000b454:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b458 <_ZGTtNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b458:	00c400b4 	movhi	r3,4098
1000b45c:	deffed04 	addi	sp,sp,-76
1000b460:	18d18184 	addi	r3,r3,17926
1000b464:	01840074 	movhi	r6,4097
1000b468:	00840074 	movhi	r2,4097
1000b46c:	31a2a704 	addi	r6,r6,-30052
1000b470:	10ad4b04 	addi	r2,r2,-19156
1000b474:	d9000015 	stw	r4,0(sp)
1000b478:	d8c00915 	stw	r3,36(sp)
1000b47c:	d9000204 	addi	r4,sp,8
1000b480:	d8c01104 	addi	r3,sp,68
1000b484:	d9800815 	stw	r6,32(sp)
1000b488:	dfc01215 	stw	ra,72(sp)
1000b48c:	d8c00a15 	stw	r3,40(sp)
1000b490:	d8800b15 	stw	r2,44(sp)
1000b494:	d9400115 	stw	r5,4(sp)
1000b498:	df001115 	stw	fp,68(sp)
1000b49c:	dec00c15 	stw	sp,48(sp)
1000b4a0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b4a4:	d8c00f04 	addi	r3,sp,60
1000b4a8:	014400b4 	movhi	r5,4098
1000b4ac:	1809883a 	mov	r4,r3
1000b4b0:	00bfffc4 	movi	r2,-1
1000b4b4:	29550404 	addi	r5,r5,21520
1000b4b8:	d8800315 	stw	r2,12(sp)
1000b4bc:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b4c0:	00c00044 	movi	r3,1
1000b4c4:	d9000017 	ldw	r4,0(sp)
1000b4c8:	008400b4 	movhi	r2,4098
1000b4cc:	d8c00315 	stw	r3,12(sp)
1000b4d0:	d8c00f04 	addi	r3,sp,60
1000b4d4:	1095f904 	addi	r2,r2,22500
1000b4d8:	01800204 	movi	r6,8
1000b4dc:	180b883a 	mov	r5,r3
1000b4e0:	d8800f15 	stw	r2,60(sp)
1000b4e4:	00000000 	call	10000000 <__alt_mem_sdram>
1000b4e8:	d8800017 	ldw	r2,0(sp)
1000b4ec:	d9000117 	ldw	r4,4(sp)
1000b4f0:	10c00104 	addi	r3,r2,4
1000b4f4:	d8c00115 	stw	r3,4(sp)
1000b4f8:	00000000 	call	10000000 <__alt_mem_sdram>
1000b4fc:	d9800017 	ldw	r6,0(sp)
1000b500:	d9000117 	ldw	r4,4(sp)
1000b504:	100b883a 	mov	r5,r2
1000b508:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b50c:	d9000f04 	addi	r4,sp,60
1000b510:	000cbdc0 	call	1000cbdc <_ZNSt12domain_errorD1Ev>
1000b514:	d9000204 	addi	r4,sp,8
1000b518:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b51c:	dfc01217 	ldw	ra,72(sp)
1000b520:	df001117 	ldw	fp,68(sp)
1000b524:	dec01304 	addi	sp,sp,76
1000b528:	f800283a 	ret
1000b52c:	d8800417 	ldw	r2,16(sp)
1000b530:	d9000f04 	addi	r4,sp,60
1000b534:	d8800015 	stw	r2,0(sp)
1000b538:	000cbdc0 	call	1000cbdc <_ZNSt12domain_errorD1Ev>
1000b53c:	d9000017 	ldw	r4,0(sp)
1000b540:	00bfffc4 	movi	r2,-1
1000b544:	d8800315 	stw	r2,12(sp)
1000b548:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b54c <_ZGTtNSt12domain_errorD1Ev>:
1000b54c:	21000104 	addi	r4,r4,4
1000b550:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000b554 <_ZGTtNSt12domain_errorD0Ev>:
1000b554:	defffe04 	addi	sp,sp,-8
1000b558:	dc000015 	stw	r16,0(sp)
1000b55c:	2021883a 	mov	r16,r4
1000b560:	21000104 	addi	r4,r4,4
1000b564:	dfc00115 	stw	ra,4(sp)
1000b568:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000b56c:	8009883a 	mov	r4,r16
1000b570:	dfc00117 	ldw	ra,4(sp)
1000b574:	dc000017 	ldw	r16,0(sp)
1000b578:	dec00204 	addi	sp,sp,8
1000b57c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b580 <_ZGTtNSt16invalid_argumentC1EPKc>:
1000b580:	00c400b4 	movhi	r3,4098
1000b584:	deffed04 	addi	sp,sp,-76
1000b588:	18d18304 	addi	r3,r3,17932
1000b58c:	01840074 	movhi	r6,4097
1000b590:	00840074 	movhi	r2,4097
1000b594:	31a2a704 	addi	r6,r6,-30052
1000b598:	10ad9004 	addi	r2,r2,-18880
1000b59c:	d9000015 	stw	r4,0(sp)
1000b5a0:	d8c00915 	stw	r3,36(sp)
1000b5a4:	d9000204 	addi	r4,sp,8
1000b5a8:	d8c01104 	addi	r3,sp,68
1000b5ac:	d9800815 	stw	r6,32(sp)
1000b5b0:	d8c00a15 	stw	r3,40(sp)
1000b5b4:	dfc01215 	stw	ra,72(sp)
1000b5b8:	d8800b15 	stw	r2,44(sp)
1000b5bc:	d9400115 	stw	r5,4(sp)
1000b5c0:	df001115 	stw	fp,68(sp)
1000b5c4:	dec00c15 	stw	sp,48(sp)
1000b5c8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b5cc:	d8800f04 	addi	r2,sp,60
1000b5d0:	014400b4 	movhi	r5,4098
1000b5d4:	1009883a 	mov	r4,r2
1000b5d8:	29550404 	addi	r5,r5,21520
1000b5dc:	00bfffc4 	movi	r2,-1
1000b5e0:	d8800315 	stw	r2,12(sp)
1000b5e4:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b5e8:	00c00044 	movi	r3,1
1000b5ec:	d9000017 	ldw	r4,0(sp)
1000b5f0:	008400b4 	movhi	r2,4098
1000b5f4:	d8c00315 	stw	r3,12(sp)
1000b5f8:	d8c00f04 	addi	r3,sp,60
1000b5fc:	1095fe04 	addi	r2,r2,22520
1000b600:	01800204 	movi	r6,8
1000b604:	180b883a 	mov	r5,r3
1000b608:	d8800f15 	stw	r2,60(sp)
1000b60c:	00000000 	call	10000000 <__alt_mem_sdram>
1000b610:	d9800017 	ldw	r6,0(sp)
1000b614:	d9400117 	ldw	r5,4(sp)
1000b618:	31000104 	addi	r4,r6,4
1000b61c:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b620:	d9000f04 	addi	r4,sp,60
1000b624:	000cc200 	call	1000cc20 <_ZNSt16invalid_argumentD1Ev>
1000b628:	d9000204 	addi	r4,sp,8
1000b62c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b630:	dfc01217 	ldw	ra,72(sp)
1000b634:	df001117 	ldw	fp,68(sp)
1000b638:	dec01304 	addi	sp,sp,76
1000b63c:	f800283a 	ret
1000b640:	d8800417 	ldw	r2,16(sp)
1000b644:	d9000f04 	addi	r4,sp,60
1000b648:	d8800015 	stw	r2,0(sp)
1000b64c:	000cc200 	call	1000cc20 <_ZNSt16invalid_argumentD1Ev>
1000b650:	d9000017 	ldw	r4,0(sp)
1000b654:	00bfffc4 	movi	r2,-1
1000b658:	d8800315 	stw	r2,12(sp)
1000b65c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b660 <_ZGTtNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b660:	00c400b4 	movhi	r3,4098
1000b664:	deffed04 	addi	sp,sp,-76
1000b668:	18d18484 	addi	r3,r3,17938
1000b66c:	01840074 	movhi	r6,4097
1000b670:	00840074 	movhi	r2,4097
1000b674:	31a2a704 	addi	r6,r6,-30052
1000b678:	10adcd04 	addi	r2,r2,-18636
1000b67c:	d9000015 	stw	r4,0(sp)
1000b680:	d8c00915 	stw	r3,36(sp)
1000b684:	d9000204 	addi	r4,sp,8
1000b688:	d8c01104 	addi	r3,sp,68
1000b68c:	d9800815 	stw	r6,32(sp)
1000b690:	dfc01215 	stw	ra,72(sp)
1000b694:	d8c00a15 	stw	r3,40(sp)
1000b698:	d8800b15 	stw	r2,44(sp)
1000b69c:	d9400115 	stw	r5,4(sp)
1000b6a0:	df001115 	stw	fp,68(sp)
1000b6a4:	dec00c15 	stw	sp,48(sp)
1000b6a8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b6ac:	d8c00f04 	addi	r3,sp,60
1000b6b0:	014400b4 	movhi	r5,4098
1000b6b4:	1809883a 	mov	r4,r3
1000b6b8:	00bfffc4 	movi	r2,-1
1000b6bc:	29550404 	addi	r5,r5,21520
1000b6c0:	d8800315 	stw	r2,12(sp)
1000b6c4:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b6c8:	00c00044 	movi	r3,1
1000b6cc:	d9000017 	ldw	r4,0(sp)
1000b6d0:	008400b4 	movhi	r2,4098
1000b6d4:	d8c00315 	stw	r3,12(sp)
1000b6d8:	d8c00f04 	addi	r3,sp,60
1000b6dc:	1095fe04 	addi	r2,r2,22520
1000b6e0:	01800204 	movi	r6,8
1000b6e4:	180b883a 	mov	r5,r3
1000b6e8:	d8800f15 	stw	r2,60(sp)
1000b6ec:	00000000 	call	10000000 <__alt_mem_sdram>
1000b6f0:	d8800017 	ldw	r2,0(sp)
1000b6f4:	d9000117 	ldw	r4,4(sp)
1000b6f8:	10c00104 	addi	r3,r2,4
1000b6fc:	d8c00115 	stw	r3,4(sp)
1000b700:	00000000 	call	10000000 <__alt_mem_sdram>
1000b704:	d9800017 	ldw	r6,0(sp)
1000b708:	d9000117 	ldw	r4,4(sp)
1000b70c:	100b883a 	mov	r5,r2
1000b710:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b714:	d9000f04 	addi	r4,sp,60
1000b718:	000cc200 	call	1000cc20 <_ZNSt16invalid_argumentD1Ev>
1000b71c:	d9000204 	addi	r4,sp,8
1000b720:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b724:	dfc01217 	ldw	ra,72(sp)
1000b728:	df001117 	ldw	fp,68(sp)
1000b72c:	dec01304 	addi	sp,sp,76
1000b730:	f800283a 	ret
1000b734:	d8800417 	ldw	r2,16(sp)
1000b738:	d9000f04 	addi	r4,sp,60
1000b73c:	d8800015 	stw	r2,0(sp)
1000b740:	000cc200 	call	1000cc20 <_ZNSt16invalid_argumentD1Ev>
1000b744:	d9000017 	ldw	r4,0(sp)
1000b748:	00bfffc4 	movi	r2,-1
1000b74c:	d8800315 	stw	r2,12(sp)
1000b750:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b754 <_ZGTtNSt16invalid_argumentD1Ev>:
1000b754:	21000104 	addi	r4,r4,4
1000b758:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000b75c <_ZGTtNSt16invalid_argumentD0Ev>:
1000b75c:	defffe04 	addi	sp,sp,-8
1000b760:	dc000015 	stw	r16,0(sp)
1000b764:	2021883a 	mov	r16,r4
1000b768:	21000104 	addi	r4,r4,4
1000b76c:	dfc00115 	stw	ra,4(sp)
1000b770:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000b774:	8009883a 	mov	r4,r16
1000b778:	dfc00117 	ldw	ra,4(sp)
1000b77c:	dc000017 	ldw	r16,0(sp)
1000b780:	dec00204 	addi	sp,sp,8
1000b784:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b788 <_ZGTtNSt12length_errorC1EPKc>:
1000b788:	00c400b4 	movhi	r3,4098
1000b78c:	deffed04 	addi	sp,sp,-76
1000b790:	18d18604 	addi	r3,r3,17944
1000b794:	01840074 	movhi	r6,4097
1000b798:	00840074 	movhi	r2,4097
1000b79c:	31a2a704 	addi	r6,r6,-30052
1000b7a0:	10ae1204 	addi	r2,r2,-18360
1000b7a4:	d9000015 	stw	r4,0(sp)
1000b7a8:	d8c00915 	stw	r3,36(sp)
1000b7ac:	d9000204 	addi	r4,sp,8
1000b7b0:	d8c01104 	addi	r3,sp,68
1000b7b4:	d9800815 	stw	r6,32(sp)
1000b7b8:	d8c00a15 	stw	r3,40(sp)
1000b7bc:	dfc01215 	stw	ra,72(sp)
1000b7c0:	d8800b15 	stw	r2,44(sp)
1000b7c4:	d9400115 	stw	r5,4(sp)
1000b7c8:	df001115 	stw	fp,68(sp)
1000b7cc:	dec00c15 	stw	sp,48(sp)
1000b7d0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b7d4:	d8800f04 	addi	r2,sp,60
1000b7d8:	014400b4 	movhi	r5,4098
1000b7dc:	1009883a 	mov	r4,r2
1000b7e0:	29550404 	addi	r5,r5,21520
1000b7e4:	00bfffc4 	movi	r2,-1
1000b7e8:	d8800315 	stw	r2,12(sp)
1000b7ec:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b7f0:	00c00044 	movi	r3,1
1000b7f4:	d9000017 	ldw	r4,0(sp)
1000b7f8:	008400b4 	movhi	r2,4098
1000b7fc:	d8c00315 	stw	r3,12(sp)
1000b800:	d8c00f04 	addi	r3,sp,60
1000b804:	10960304 	addi	r2,r2,22540
1000b808:	01800204 	movi	r6,8
1000b80c:	180b883a 	mov	r5,r3
1000b810:	d8800f15 	stw	r2,60(sp)
1000b814:	00000000 	call	10000000 <__alt_mem_sdram>
1000b818:	d9800017 	ldw	r6,0(sp)
1000b81c:	d9400117 	ldw	r5,4(sp)
1000b820:	31000104 	addi	r4,r6,4
1000b824:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b828:	d9000f04 	addi	r4,sp,60
1000b82c:	000cc640 	call	1000cc64 <_ZNSt12length_errorD1Ev>
1000b830:	d9000204 	addi	r4,sp,8
1000b834:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b838:	dfc01217 	ldw	ra,72(sp)
1000b83c:	df001117 	ldw	fp,68(sp)
1000b840:	dec01304 	addi	sp,sp,76
1000b844:	f800283a 	ret
1000b848:	d8800417 	ldw	r2,16(sp)
1000b84c:	d9000f04 	addi	r4,sp,60
1000b850:	d8800015 	stw	r2,0(sp)
1000b854:	000cc640 	call	1000cc64 <_ZNSt12length_errorD1Ev>
1000b858:	d9000017 	ldw	r4,0(sp)
1000b85c:	00bfffc4 	movi	r2,-1
1000b860:	d8800315 	stw	r2,12(sp)
1000b864:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b868 <_ZGTtNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000b868:	00c400b4 	movhi	r3,4098
1000b86c:	deffed04 	addi	sp,sp,-76
1000b870:	18d18784 	addi	r3,r3,17950
1000b874:	01840074 	movhi	r6,4097
1000b878:	00840074 	movhi	r2,4097
1000b87c:	31a2a704 	addi	r6,r6,-30052
1000b880:	10ae4f04 	addi	r2,r2,-18116
1000b884:	d9000015 	stw	r4,0(sp)
1000b888:	d8c00915 	stw	r3,36(sp)
1000b88c:	d9000204 	addi	r4,sp,8
1000b890:	d8c01104 	addi	r3,sp,68
1000b894:	d9800815 	stw	r6,32(sp)
1000b898:	dfc01215 	stw	ra,72(sp)
1000b89c:	d8c00a15 	stw	r3,40(sp)
1000b8a0:	d8800b15 	stw	r2,44(sp)
1000b8a4:	d9400115 	stw	r5,4(sp)
1000b8a8:	df001115 	stw	fp,68(sp)
1000b8ac:	dec00c15 	stw	sp,48(sp)
1000b8b0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b8b4:	d8c00f04 	addi	r3,sp,60
1000b8b8:	014400b4 	movhi	r5,4098
1000b8bc:	1809883a 	mov	r4,r3
1000b8c0:	00bfffc4 	movi	r2,-1
1000b8c4:	29550404 	addi	r5,r5,21520
1000b8c8:	d8800315 	stw	r2,12(sp)
1000b8cc:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b8d0:	00c00044 	movi	r3,1
1000b8d4:	d9000017 	ldw	r4,0(sp)
1000b8d8:	008400b4 	movhi	r2,4098
1000b8dc:	d8c00315 	stw	r3,12(sp)
1000b8e0:	d8c00f04 	addi	r3,sp,60
1000b8e4:	10960304 	addi	r2,r2,22540
1000b8e8:	01800204 	movi	r6,8
1000b8ec:	180b883a 	mov	r5,r3
1000b8f0:	d8800f15 	stw	r2,60(sp)
1000b8f4:	00000000 	call	10000000 <__alt_mem_sdram>
1000b8f8:	d8800017 	ldw	r2,0(sp)
1000b8fc:	d9000117 	ldw	r4,4(sp)
1000b900:	10c00104 	addi	r3,r2,4
1000b904:	d8c00115 	stw	r3,4(sp)
1000b908:	00000000 	call	10000000 <__alt_mem_sdram>
1000b90c:	d9800017 	ldw	r6,0(sp)
1000b910:	d9000117 	ldw	r4,4(sp)
1000b914:	100b883a 	mov	r5,r2
1000b918:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000b91c:	d9000f04 	addi	r4,sp,60
1000b920:	000cc640 	call	1000cc64 <_ZNSt12length_errorD1Ev>
1000b924:	d9000204 	addi	r4,sp,8
1000b928:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000b92c:	dfc01217 	ldw	ra,72(sp)
1000b930:	df001117 	ldw	fp,68(sp)
1000b934:	dec01304 	addi	sp,sp,76
1000b938:	f800283a 	ret
1000b93c:	d8800417 	ldw	r2,16(sp)
1000b940:	d9000f04 	addi	r4,sp,60
1000b944:	d8800015 	stw	r2,0(sp)
1000b948:	000cc640 	call	1000cc64 <_ZNSt12length_errorD1Ev>
1000b94c:	d9000017 	ldw	r4,0(sp)
1000b950:	00bfffc4 	movi	r2,-1
1000b954:	d8800315 	stw	r2,12(sp)
1000b958:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000b95c <_ZGTtNSt12length_errorD1Ev>:
1000b95c:	21000104 	addi	r4,r4,4
1000b960:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000b964 <_ZGTtNSt12length_errorD0Ev>:
1000b964:	defffe04 	addi	sp,sp,-8
1000b968:	dc000015 	stw	r16,0(sp)
1000b96c:	2021883a 	mov	r16,r4
1000b970:	21000104 	addi	r4,r4,4
1000b974:	dfc00115 	stw	ra,4(sp)
1000b978:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000b97c:	8009883a 	mov	r4,r16
1000b980:	dfc00117 	ldw	ra,4(sp)
1000b984:	dc000017 	ldw	r16,0(sp)
1000b988:	dec00204 	addi	sp,sp,8
1000b98c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000b990 <_ZGTtNSt12out_of_rangeC1EPKc>:
1000b990:	00c400b4 	movhi	r3,4098
1000b994:	deffed04 	addi	sp,sp,-76
1000b998:	18d18904 	addi	r3,r3,17956
1000b99c:	01840074 	movhi	r6,4097
1000b9a0:	00840074 	movhi	r2,4097
1000b9a4:	31a2a704 	addi	r6,r6,-30052
1000b9a8:	10ae9404 	addi	r2,r2,-17840
1000b9ac:	d9000015 	stw	r4,0(sp)
1000b9b0:	d8c00915 	stw	r3,36(sp)
1000b9b4:	d9000204 	addi	r4,sp,8
1000b9b8:	d8c01104 	addi	r3,sp,68
1000b9bc:	d9800815 	stw	r6,32(sp)
1000b9c0:	d8c00a15 	stw	r3,40(sp)
1000b9c4:	dfc01215 	stw	ra,72(sp)
1000b9c8:	d8800b15 	stw	r2,44(sp)
1000b9cc:	d9400115 	stw	r5,4(sp)
1000b9d0:	df001115 	stw	fp,68(sp)
1000b9d4:	dec00c15 	stw	sp,48(sp)
1000b9d8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000b9dc:	d8800f04 	addi	r2,sp,60
1000b9e0:	014400b4 	movhi	r5,4098
1000b9e4:	1009883a 	mov	r4,r2
1000b9e8:	29550404 	addi	r5,r5,21520
1000b9ec:	00bfffc4 	movi	r2,-1
1000b9f0:	d8800315 	stw	r2,12(sp)
1000b9f4:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000b9f8:	00c00044 	movi	r3,1
1000b9fc:	d9000017 	ldw	r4,0(sp)
1000ba00:	008400b4 	movhi	r2,4098
1000ba04:	d8c00315 	stw	r3,12(sp)
1000ba08:	d8c00f04 	addi	r3,sp,60
1000ba0c:	10960804 	addi	r2,r2,22560
1000ba10:	01800204 	movi	r6,8
1000ba14:	180b883a 	mov	r5,r3
1000ba18:	d8800f15 	stw	r2,60(sp)
1000ba1c:	00000000 	call	10000000 <__alt_mem_sdram>
1000ba20:	d9800017 	ldw	r6,0(sp)
1000ba24:	d9400117 	ldw	r5,4(sp)
1000ba28:	31000104 	addi	r4,r6,4
1000ba2c:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000ba30:	d9000f04 	addi	r4,sp,60
1000ba34:	000cca80 	call	1000cca8 <_ZNSt12out_of_rangeD1Ev>
1000ba38:	d9000204 	addi	r4,sp,8
1000ba3c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000ba40:	dfc01217 	ldw	ra,72(sp)
1000ba44:	df001117 	ldw	fp,68(sp)
1000ba48:	dec01304 	addi	sp,sp,76
1000ba4c:	f800283a 	ret
1000ba50:	d8800417 	ldw	r2,16(sp)
1000ba54:	d9000f04 	addi	r4,sp,60
1000ba58:	d8800015 	stw	r2,0(sp)
1000ba5c:	000cca80 	call	1000cca8 <_ZNSt12out_of_rangeD1Ev>
1000ba60:	d9000017 	ldw	r4,0(sp)
1000ba64:	00bfffc4 	movi	r2,-1
1000ba68:	d8800315 	stw	r2,12(sp)
1000ba6c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000ba70 <_ZGTtNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000ba70:	00c400b4 	movhi	r3,4098
1000ba74:	deffed04 	addi	sp,sp,-76
1000ba78:	18d18a84 	addi	r3,r3,17962
1000ba7c:	01840074 	movhi	r6,4097
1000ba80:	00840074 	movhi	r2,4097
1000ba84:	31a2a704 	addi	r6,r6,-30052
1000ba88:	10aed104 	addi	r2,r2,-17596
1000ba8c:	d9000015 	stw	r4,0(sp)
1000ba90:	d8c00915 	stw	r3,36(sp)
1000ba94:	d9000204 	addi	r4,sp,8
1000ba98:	d8c01104 	addi	r3,sp,68
1000ba9c:	d9800815 	stw	r6,32(sp)
1000baa0:	dfc01215 	stw	ra,72(sp)
1000baa4:	d8c00a15 	stw	r3,40(sp)
1000baa8:	d8800b15 	stw	r2,44(sp)
1000baac:	d9400115 	stw	r5,4(sp)
1000bab0:	df001115 	stw	fp,68(sp)
1000bab4:	dec00c15 	stw	sp,48(sp)
1000bab8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000babc:	d8c00f04 	addi	r3,sp,60
1000bac0:	014400b4 	movhi	r5,4098
1000bac4:	1809883a 	mov	r4,r3
1000bac8:	00bfffc4 	movi	r2,-1
1000bacc:	29550404 	addi	r5,r5,21520
1000bad0:	d8800315 	stw	r2,12(sp)
1000bad4:	000aa8c0 	call	1000aa8c <_ZNSt11logic_errorC1EPKc>
1000bad8:	00c00044 	movi	r3,1
1000badc:	d9000017 	ldw	r4,0(sp)
1000bae0:	008400b4 	movhi	r2,4098
1000bae4:	d8c00315 	stw	r3,12(sp)
1000bae8:	d8c00f04 	addi	r3,sp,60
1000baec:	10960804 	addi	r2,r2,22560
1000baf0:	01800204 	movi	r6,8
1000baf4:	180b883a 	mov	r5,r3
1000baf8:	d8800f15 	stw	r2,60(sp)
1000bafc:	00000000 	call	10000000 <__alt_mem_sdram>
1000bb00:	d8800017 	ldw	r2,0(sp)
1000bb04:	d9000117 	ldw	r4,4(sp)
1000bb08:	10c00104 	addi	r3,r2,4
1000bb0c:	d8c00115 	stw	r3,4(sp)
1000bb10:	00000000 	call	10000000 <__alt_mem_sdram>
1000bb14:	d9800017 	ldw	r6,0(sp)
1000bb18:	d9000117 	ldw	r4,4(sp)
1000bb1c:	100b883a 	mov	r5,r2
1000bb20:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bb24:	d9000f04 	addi	r4,sp,60
1000bb28:	000cca80 	call	1000cca8 <_ZNSt12out_of_rangeD1Ev>
1000bb2c:	d9000204 	addi	r4,sp,8
1000bb30:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000bb34:	dfc01217 	ldw	ra,72(sp)
1000bb38:	df001117 	ldw	fp,68(sp)
1000bb3c:	dec01304 	addi	sp,sp,76
1000bb40:	f800283a 	ret
1000bb44:	d8800417 	ldw	r2,16(sp)
1000bb48:	d9000f04 	addi	r4,sp,60
1000bb4c:	d8800015 	stw	r2,0(sp)
1000bb50:	000cca80 	call	1000cca8 <_ZNSt12out_of_rangeD1Ev>
1000bb54:	d9000017 	ldw	r4,0(sp)
1000bb58:	00bfffc4 	movi	r2,-1
1000bb5c:	d8800315 	stw	r2,12(sp)
1000bb60:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000bb64 <_ZGTtNSt12out_of_rangeD1Ev>:
1000bb64:	21000104 	addi	r4,r4,4
1000bb68:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000bb6c <_ZGTtNSt12out_of_rangeD0Ev>:
1000bb6c:	defffe04 	addi	sp,sp,-8
1000bb70:	dc000015 	stw	r16,0(sp)
1000bb74:	2021883a 	mov	r16,r4
1000bb78:	21000104 	addi	r4,r4,4
1000bb7c:	dfc00115 	stw	ra,4(sp)
1000bb80:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000bb84:	8009883a 	mov	r4,r16
1000bb88:	dfc00117 	ldw	ra,4(sp)
1000bb8c:	dc000017 	ldw	r16,0(sp)
1000bb90:	dec00204 	addi	sp,sp,8
1000bb94:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bb98 <_ZGTtNSt13runtime_errorC1EPKc>:
1000bb98:	00c400b4 	movhi	r3,4098
1000bb9c:	deffed04 	addi	sp,sp,-76
1000bba0:	18d18c04 	addi	r3,r3,17968
1000bba4:	01840074 	movhi	r6,4097
1000bba8:	00840074 	movhi	r2,4097
1000bbac:	31a2a704 	addi	r6,r6,-30052
1000bbb0:	10af1304 	addi	r2,r2,-17332
1000bbb4:	d9000015 	stw	r4,0(sp)
1000bbb8:	d8c00915 	stw	r3,36(sp)
1000bbbc:	d9000204 	addi	r4,sp,8
1000bbc0:	d8c01104 	addi	r3,sp,68
1000bbc4:	d9800815 	stw	r6,32(sp)
1000bbc8:	dfc01215 	stw	ra,72(sp)
1000bbcc:	d8c00a15 	stw	r3,40(sp)
1000bbd0:	d8800b15 	stw	r2,44(sp)
1000bbd4:	d9400115 	stw	r5,4(sp)
1000bbd8:	df001115 	stw	fp,68(sp)
1000bbdc:	dec00c15 	stw	sp,48(sp)
1000bbe0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000bbe4:	d8800f04 	addi	r2,sp,60
1000bbe8:	014400b4 	movhi	r5,4098
1000bbec:	1009883a 	mov	r4,r2
1000bbf0:	29550404 	addi	r5,r5,21520
1000bbf4:	00bfffc4 	movi	r2,-1
1000bbf8:	d8800315 	stw	r2,12(sp)
1000bbfc:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000bc00:	00800044 	movi	r2,1
1000bc04:	d9000017 	ldw	r4,0(sp)
1000bc08:	d8800315 	stw	r2,12(sp)
1000bc0c:	d8800f04 	addi	r2,sp,60
1000bc10:	01800204 	movi	r6,8
1000bc14:	100b883a 	mov	r5,r2
1000bc18:	00000000 	call	10000000 <__alt_mem_sdram>
1000bc1c:	d9800017 	ldw	r6,0(sp)
1000bc20:	d9400117 	ldw	r5,4(sp)
1000bc24:	31000104 	addi	r4,r6,4
1000bc28:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bc2c:	d9000f04 	addi	r4,sp,60
1000bc30:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000bc34:	d9000204 	addi	r4,sp,8
1000bc38:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000bc3c:	dfc01217 	ldw	ra,72(sp)
1000bc40:	df001117 	ldw	fp,68(sp)
1000bc44:	dec01304 	addi	sp,sp,76
1000bc48:	f800283a 	ret
1000bc4c:	d8800417 	ldw	r2,16(sp)
1000bc50:	d9000f04 	addi	r4,sp,60
1000bc54:	d8800015 	stw	r2,0(sp)
1000bc58:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000bc5c:	d9000017 	ldw	r4,0(sp)
1000bc60:	00bfffc4 	movi	r2,-1
1000bc64:	d8800315 	stw	r2,12(sp)
1000bc68:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000bc6c <_ZGTtNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000bc6c:	00c400b4 	movhi	r3,4098
1000bc70:	deffed04 	addi	sp,sp,-76
1000bc74:	18d18d84 	addi	r3,r3,17974
1000bc78:	01840074 	movhi	r6,4097
1000bc7c:	00840074 	movhi	r2,4097
1000bc80:	31a2a704 	addi	r6,r6,-30052
1000bc84:	10af4d04 	addi	r2,r2,-17100
1000bc88:	d9000015 	stw	r4,0(sp)
1000bc8c:	d8c00915 	stw	r3,36(sp)
1000bc90:	d9000204 	addi	r4,sp,8
1000bc94:	d8c01104 	addi	r3,sp,68
1000bc98:	d9800815 	stw	r6,32(sp)
1000bc9c:	dfc01215 	stw	ra,72(sp)
1000bca0:	d8c00a15 	stw	r3,40(sp)
1000bca4:	d8800b15 	stw	r2,44(sp)
1000bca8:	d9400115 	stw	r5,4(sp)
1000bcac:	df001115 	stw	fp,68(sp)
1000bcb0:	dec00c15 	stw	sp,48(sp)
1000bcb4:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000bcb8:	d8c00f04 	addi	r3,sp,60
1000bcbc:	014400b4 	movhi	r5,4098
1000bcc0:	1809883a 	mov	r4,r3
1000bcc4:	00bfffc4 	movi	r2,-1
1000bcc8:	29550404 	addi	r5,r5,21520
1000bccc:	d8800315 	stw	r2,12(sp)
1000bcd0:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000bcd4:	d9000017 	ldw	r4,0(sp)
1000bcd8:	d8c00f04 	addi	r3,sp,60
1000bcdc:	00800044 	movi	r2,1
1000bce0:	01800204 	movi	r6,8
1000bce4:	180b883a 	mov	r5,r3
1000bce8:	d8800315 	stw	r2,12(sp)
1000bcec:	00000000 	call	10000000 <__alt_mem_sdram>
1000bcf0:	d8800017 	ldw	r2,0(sp)
1000bcf4:	d9000117 	ldw	r4,4(sp)
1000bcf8:	10c00104 	addi	r3,r2,4
1000bcfc:	d8c00115 	stw	r3,4(sp)
1000bd00:	00000000 	call	10000000 <__alt_mem_sdram>
1000bd04:	d9800017 	ldw	r6,0(sp)
1000bd08:	d9000117 	ldw	r4,4(sp)
1000bd0c:	100b883a 	mov	r5,r2
1000bd10:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bd14:	d9000f04 	addi	r4,sp,60
1000bd18:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000bd1c:	d9000204 	addi	r4,sp,8
1000bd20:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000bd24:	dfc01217 	ldw	ra,72(sp)
1000bd28:	df001117 	ldw	fp,68(sp)
1000bd2c:	dec01304 	addi	sp,sp,76
1000bd30:	f800283a 	ret
1000bd34:	d8800417 	ldw	r2,16(sp)
1000bd38:	d9000f04 	addi	r4,sp,60
1000bd3c:	d8800015 	stw	r2,0(sp)
1000bd40:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000bd44:	d9000017 	ldw	r4,0(sp)
1000bd48:	00bfffc4 	movi	r2,-1
1000bd4c:	d8800315 	stw	r2,12(sp)
1000bd50:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000bd54 <_ZGTtNSt13runtime_errorD1Ev>:
1000bd54:	21000104 	addi	r4,r4,4
1000bd58:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000bd5c <_ZGTtNSt13runtime_errorD0Ev>:
1000bd5c:	defffe04 	addi	sp,sp,-8
1000bd60:	dc000015 	stw	r16,0(sp)
1000bd64:	2021883a 	mov	r16,r4
1000bd68:	21000104 	addi	r4,r4,4
1000bd6c:	dfc00115 	stw	ra,4(sp)
1000bd70:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000bd74:	8009883a 	mov	r4,r16
1000bd78:	dfc00117 	ldw	ra,4(sp)
1000bd7c:	dc000017 	ldw	r16,0(sp)
1000bd80:	dec00204 	addi	sp,sp,8
1000bd84:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bd88 <_ZGTtNKSt13runtime_error4whatEv>:
1000bd88:	21000104 	addi	r4,r4,4
1000bd8c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bd90 <_ZGTtNSt11range_errorC1EPKc>:
1000bd90:	00c400b4 	movhi	r3,4098
1000bd94:	deffed04 	addi	sp,sp,-76
1000bd98:	18d18f04 	addi	r3,r3,17980
1000bd9c:	01840074 	movhi	r6,4097
1000bda0:	00840074 	movhi	r2,4097
1000bda4:	31a2a704 	addi	r6,r6,-30052
1000bda8:	10af9404 	addi	r2,r2,-16816
1000bdac:	d9000015 	stw	r4,0(sp)
1000bdb0:	d8c00915 	stw	r3,36(sp)
1000bdb4:	d9000204 	addi	r4,sp,8
1000bdb8:	d8c01104 	addi	r3,sp,68
1000bdbc:	d9800815 	stw	r6,32(sp)
1000bdc0:	d8c00a15 	stw	r3,40(sp)
1000bdc4:	dfc01215 	stw	ra,72(sp)
1000bdc8:	d8800b15 	stw	r2,44(sp)
1000bdcc:	d9400115 	stw	r5,4(sp)
1000bdd0:	df001115 	stw	fp,68(sp)
1000bdd4:	dec00c15 	stw	sp,48(sp)
1000bdd8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000bddc:	d8800f04 	addi	r2,sp,60
1000bde0:	014400b4 	movhi	r5,4098
1000bde4:	1009883a 	mov	r4,r2
1000bde8:	29550404 	addi	r5,r5,21520
1000bdec:	00bfffc4 	movi	r2,-1
1000bdf0:	d8800315 	stw	r2,12(sp)
1000bdf4:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000bdf8:	00c00044 	movi	r3,1
1000bdfc:	d9000017 	ldw	r4,0(sp)
1000be00:	008400b4 	movhi	r2,4098
1000be04:	d8c00315 	stw	r3,12(sp)
1000be08:	d8c00f04 	addi	r3,sp,60
1000be0c:	10961204 	addi	r2,r2,22600
1000be10:	01800204 	movi	r6,8
1000be14:	180b883a 	mov	r5,r3
1000be18:	d8800f15 	stw	r2,60(sp)
1000be1c:	00000000 	call	10000000 <__alt_mem_sdram>
1000be20:	d9800017 	ldw	r6,0(sp)
1000be24:	d9400117 	ldw	r5,4(sp)
1000be28:	31000104 	addi	r4,r6,4
1000be2c:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000be30:	d9000f04 	addi	r4,sp,60
1000be34:	000cd780 	call	1000cd78 <_ZNSt11range_errorD1Ev>
1000be38:	d9000204 	addi	r4,sp,8
1000be3c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000be40:	dfc01217 	ldw	ra,72(sp)
1000be44:	df001117 	ldw	fp,68(sp)
1000be48:	dec01304 	addi	sp,sp,76
1000be4c:	f800283a 	ret
1000be50:	d8800417 	ldw	r2,16(sp)
1000be54:	d9000f04 	addi	r4,sp,60
1000be58:	d8800015 	stw	r2,0(sp)
1000be5c:	000cd780 	call	1000cd78 <_ZNSt11range_errorD1Ev>
1000be60:	d9000017 	ldw	r4,0(sp)
1000be64:	00bfffc4 	movi	r2,-1
1000be68:	d8800315 	stw	r2,12(sp)
1000be6c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000be70 <_ZGTtNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000be70:	00c400b4 	movhi	r3,4098
1000be74:	deffed04 	addi	sp,sp,-76
1000be78:	18d19084 	addi	r3,r3,17986
1000be7c:	01840074 	movhi	r6,4097
1000be80:	00840074 	movhi	r2,4097
1000be84:	31a2a704 	addi	r6,r6,-30052
1000be88:	10afd104 	addi	r2,r2,-16572
1000be8c:	d9000015 	stw	r4,0(sp)
1000be90:	d8c00915 	stw	r3,36(sp)
1000be94:	d9000204 	addi	r4,sp,8
1000be98:	d8c01104 	addi	r3,sp,68
1000be9c:	d9800815 	stw	r6,32(sp)
1000bea0:	dfc01215 	stw	ra,72(sp)
1000bea4:	d8c00a15 	stw	r3,40(sp)
1000bea8:	d8800b15 	stw	r2,44(sp)
1000beac:	d9400115 	stw	r5,4(sp)
1000beb0:	df001115 	stw	fp,68(sp)
1000beb4:	dec00c15 	stw	sp,48(sp)
1000beb8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000bebc:	d8c00f04 	addi	r3,sp,60
1000bec0:	014400b4 	movhi	r5,4098
1000bec4:	1809883a 	mov	r4,r3
1000bec8:	00bfffc4 	movi	r2,-1
1000becc:	29550404 	addi	r5,r5,21520
1000bed0:	d8800315 	stw	r2,12(sp)
1000bed4:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000bed8:	00c00044 	movi	r3,1
1000bedc:	d9000017 	ldw	r4,0(sp)
1000bee0:	008400b4 	movhi	r2,4098
1000bee4:	d8c00315 	stw	r3,12(sp)
1000bee8:	d8c00f04 	addi	r3,sp,60
1000beec:	10961204 	addi	r2,r2,22600
1000bef0:	01800204 	movi	r6,8
1000bef4:	180b883a 	mov	r5,r3
1000bef8:	d8800f15 	stw	r2,60(sp)
1000befc:	00000000 	call	10000000 <__alt_mem_sdram>
1000bf00:	d8800017 	ldw	r2,0(sp)
1000bf04:	d9000117 	ldw	r4,4(sp)
1000bf08:	10c00104 	addi	r3,r2,4
1000bf0c:	d8c00115 	stw	r3,4(sp)
1000bf10:	00000000 	call	10000000 <__alt_mem_sdram>
1000bf14:	d9800017 	ldw	r6,0(sp)
1000bf18:	d9000117 	ldw	r4,4(sp)
1000bf1c:	100b883a 	mov	r5,r2
1000bf20:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000bf24:	d9000f04 	addi	r4,sp,60
1000bf28:	000cd780 	call	1000cd78 <_ZNSt11range_errorD1Ev>
1000bf2c:	d9000204 	addi	r4,sp,8
1000bf30:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000bf34:	dfc01217 	ldw	ra,72(sp)
1000bf38:	df001117 	ldw	fp,68(sp)
1000bf3c:	dec01304 	addi	sp,sp,76
1000bf40:	f800283a 	ret
1000bf44:	d8800417 	ldw	r2,16(sp)
1000bf48:	d9000f04 	addi	r4,sp,60
1000bf4c:	d8800015 	stw	r2,0(sp)
1000bf50:	000cd780 	call	1000cd78 <_ZNSt11range_errorD1Ev>
1000bf54:	d9000017 	ldw	r4,0(sp)
1000bf58:	00bfffc4 	movi	r2,-1
1000bf5c:	d8800315 	stw	r2,12(sp)
1000bf60:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000bf64 <_ZGTtNSt11range_errorD1Ev>:
1000bf64:	21000104 	addi	r4,r4,4
1000bf68:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000bf6c <_ZGTtNSt11range_errorD0Ev>:
1000bf6c:	defffe04 	addi	sp,sp,-8
1000bf70:	dc000015 	stw	r16,0(sp)
1000bf74:	2021883a 	mov	r16,r4
1000bf78:	21000104 	addi	r4,r4,4
1000bf7c:	dfc00115 	stw	ra,4(sp)
1000bf80:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000bf84:	8009883a 	mov	r4,r16
1000bf88:	dfc00117 	ldw	ra,4(sp)
1000bf8c:	dc000017 	ldw	r16,0(sp)
1000bf90:	dec00204 	addi	sp,sp,8
1000bf94:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000bf98 <_ZGTtNSt14overflow_errorC1EPKc>:
1000bf98:	00c400b4 	movhi	r3,4098
1000bf9c:	deffed04 	addi	sp,sp,-76
1000bfa0:	18d19204 	addi	r3,r3,17992
1000bfa4:	01840074 	movhi	r6,4097
1000bfa8:	00840074 	movhi	r2,4097
1000bfac:	31a2a704 	addi	r6,r6,-30052
1000bfb0:	10b01604 	addi	r2,r2,-16296
1000bfb4:	d9000015 	stw	r4,0(sp)
1000bfb8:	d8c00915 	stw	r3,36(sp)
1000bfbc:	d9000204 	addi	r4,sp,8
1000bfc0:	d8c01104 	addi	r3,sp,68
1000bfc4:	d9800815 	stw	r6,32(sp)
1000bfc8:	d8c00a15 	stw	r3,40(sp)
1000bfcc:	dfc01215 	stw	ra,72(sp)
1000bfd0:	d8800b15 	stw	r2,44(sp)
1000bfd4:	d9400115 	stw	r5,4(sp)
1000bfd8:	df001115 	stw	fp,68(sp)
1000bfdc:	dec00c15 	stw	sp,48(sp)
1000bfe0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000bfe4:	d8800f04 	addi	r2,sp,60
1000bfe8:	014400b4 	movhi	r5,4098
1000bfec:	1009883a 	mov	r4,r2
1000bff0:	29550404 	addi	r5,r5,21520
1000bff4:	00bfffc4 	movi	r2,-1
1000bff8:	d8800315 	stw	r2,12(sp)
1000bffc:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000c000:	00c00044 	movi	r3,1
1000c004:	d9000017 	ldw	r4,0(sp)
1000c008:	008400b4 	movhi	r2,4098
1000c00c:	d8c00315 	stw	r3,12(sp)
1000c010:	d8c00f04 	addi	r3,sp,60
1000c014:	10961704 	addi	r2,r2,22620
1000c018:	01800204 	movi	r6,8
1000c01c:	180b883a 	mov	r5,r3
1000c020:	d8800f15 	stw	r2,60(sp)
1000c024:	00000000 	call	10000000 <__alt_mem_sdram>
1000c028:	d9800017 	ldw	r6,0(sp)
1000c02c:	d9400117 	ldw	r5,4(sp)
1000c030:	31000104 	addi	r4,r6,4
1000c034:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c038:	d9000f04 	addi	r4,sp,60
1000c03c:	000cdbc0 	call	1000cdbc <_ZNSt14overflow_errorD1Ev>
1000c040:	d9000204 	addi	r4,sp,8
1000c044:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000c048:	dfc01217 	ldw	ra,72(sp)
1000c04c:	df001117 	ldw	fp,68(sp)
1000c050:	dec01304 	addi	sp,sp,76
1000c054:	f800283a 	ret
1000c058:	d8800417 	ldw	r2,16(sp)
1000c05c:	d9000f04 	addi	r4,sp,60
1000c060:	d8800015 	stw	r2,0(sp)
1000c064:	000cdbc0 	call	1000cdbc <_ZNSt14overflow_errorD1Ev>
1000c068:	d9000017 	ldw	r4,0(sp)
1000c06c:	00bfffc4 	movi	r2,-1
1000c070:	d8800315 	stw	r2,12(sp)
1000c074:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000c078 <_ZGTtNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c078:	00c400b4 	movhi	r3,4098
1000c07c:	deffed04 	addi	sp,sp,-76
1000c080:	18d19384 	addi	r3,r3,17998
1000c084:	01840074 	movhi	r6,4097
1000c088:	00840074 	movhi	r2,4097
1000c08c:	31a2a704 	addi	r6,r6,-30052
1000c090:	10b05304 	addi	r2,r2,-16052
1000c094:	d9000015 	stw	r4,0(sp)
1000c098:	d8c00915 	stw	r3,36(sp)
1000c09c:	d9000204 	addi	r4,sp,8
1000c0a0:	d8c01104 	addi	r3,sp,68
1000c0a4:	d9800815 	stw	r6,32(sp)
1000c0a8:	dfc01215 	stw	ra,72(sp)
1000c0ac:	d8c00a15 	stw	r3,40(sp)
1000c0b0:	d8800b15 	stw	r2,44(sp)
1000c0b4:	d9400115 	stw	r5,4(sp)
1000c0b8:	df001115 	stw	fp,68(sp)
1000c0bc:	dec00c15 	stw	sp,48(sp)
1000c0c0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000c0c4:	d8c00f04 	addi	r3,sp,60
1000c0c8:	014400b4 	movhi	r5,4098
1000c0cc:	1809883a 	mov	r4,r3
1000c0d0:	00bfffc4 	movi	r2,-1
1000c0d4:	29550404 	addi	r5,r5,21520
1000c0d8:	d8800315 	stw	r2,12(sp)
1000c0dc:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000c0e0:	00c00044 	movi	r3,1
1000c0e4:	d9000017 	ldw	r4,0(sp)
1000c0e8:	008400b4 	movhi	r2,4098
1000c0ec:	d8c00315 	stw	r3,12(sp)
1000c0f0:	d8c00f04 	addi	r3,sp,60
1000c0f4:	10961704 	addi	r2,r2,22620
1000c0f8:	01800204 	movi	r6,8
1000c0fc:	180b883a 	mov	r5,r3
1000c100:	d8800f15 	stw	r2,60(sp)
1000c104:	00000000 	call	10000000 <__alt_mem_sdram>
1000c108:	d8800017 	ldw	r2,0(sp)
1000c10c:	d9000117 	ldw	r4,4(sp)
1000c110:	10c00104 	addi	r3,r2,4
1000c114:	d8c00115 	stw	r3,4(sp)
1000c118:	00000000 	call	10000000 <__alt_mem_sdram>
1000c11c:	d9800017 	ldw	r6,0(sp)
1000c120:	d9000117 	ldw	r4,4(sp)
1000c124:	100b883a 	mov	r5,r2
1000c128:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c12c:	d9000f04 	addi	r4,sp,60
1000c130:	000cdbc0 	call	1000cdbc <_ZNSt14overflow_errorD1Ev>
1000c134:	d9000204 	addi	r4,sp,8
1000c138:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000c13c:	dfc01217 	ldw	ra,72(sp)
1000c140:	df001117 	ldw	fp,68(sp)
1000c144:	dec01304 	addi	sp,sp,76
1000c148:	f800283a 	ret
1000c14c:	d8800417 	ldw	r2,16(sp)
1000c150:	d9000f04 	addi	r4,sp,60
1000c154:	d8800015 	stw	r2,0(sp)
1000c158:	000cdbc0 	call	1000cdbc <_ZNSt14overflow_errorD1Ev>
1000c15c:	d9000017 	ldw	r4,0(sp)
1000c160:	00bfffc4 	movi	r2,-1
1000c164:	d8800315 	stw	r2,12(sp)
1000c168:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000c16c <_ZGTtNSt14overflow_errorD1Ev>:
1000c16c:	21000104 	addi	r4,r4,4
1000c170:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000c174 <_ZGTtNSt14overflow_errorD0Ev>:
1000c174:	defffe04 	addi	sp,sp,-8
1000c178:	dc000015 	stw	r16,0(sp)
1000c17c:	2021883a 	mov	r16,r4
1000c180:	21000104 	addi	r4,r4,4
1000c184:	dfc00115 	stw	ra,4(sp)
1000c188:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000c18c:	8009883a 	mov	r4,r16
1000c190:	dfc00117 	ldw	ra,4(sp)
1000c194:	dc000017 	ldw	r16,0(sp)
1000c198:	dec00204 	addi	sp,sp,8
1000c19c:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c1a0 <_ZGTtNSt15underflow_errorC1EPKc>:
1000c1a0:	00c400b4 	movhi	r3,4098
1000c1a4:	deffed04 	addi	sp,sp,-76
1000c1a8:	18d19504 	addi	r3,r3,18004
1000c1ac:	01840074 	movhi	r6,4097
1000c1b0:	00840074 	movhi	r2,4097
1000c1b4:	31a2a704 	addi	r6,r6,-30052
1000c1b8:	10b09804 	addi	r2,r2,-15776
1000c1bc:	d9000015 	stw	r4,0(sp)
1000c1c0:	d8c00915 	stw	r3,36(sp)
1000c1c4:	d9000204 	addi	r4,sp,8
1000c1c8:	d8c01104 	addi	r3,sp,68
1000c1cc:	d9800815 	stw	r6,32(sp)
1000c1d0:	d8c00a15 	stw	r3,40(sp)
1000c1d4:	dfc01215 	stw	ra,72(sp)
1000c1d8:	d8800b15 	stw	r2,44(sp)
1000c1dc:	d9400115 	stw	r5,4(sp)
1000c1e0:	df001115 	stw	fp,68(sp)
1000c1e4:	dec00c15 	stw	sp,48(sp)
1000c1e8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000c1ec:	d8800f04 	addi	r2,sp,60
1000c1f0:	014400b4 	movhi	r5,4098
1000c1f4:	1009883a 	mov	r4,r2
1000c1f8:	29550404 	addi	r5,r5,21520
1000c1fc:	00bfffc4 	movi	r2,-1
1000c200:	d8800315 	stw	r2,12(sp)
1000c204:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000c208:	00c00044 	movi	r3,1
1000c20c:	d9000017 	ldw	r4,0(sp)
1000c210:	008400b4 	movhi	r2,4098
1000c214:	d8c00315 	stw	r3,12(sp)
1000c218:	d8c00f04 	addi	r3,sp,60
1000c21c:	10961c04 	addi	r2,r2,22640
1000c220:	01800204 	movi	r6,8
1000c224:	180b883a 	mov	r5,r3
1000c228:	d8800f15 	stw	r2,60(sp)
1000c22c:	00000000 	call	10000000 <__alt_mem_sdram>
1000c230:	d9800017 	ldw	r6,0(sp)
1000c234:	d9400117 	ldw	r5,4(sp)
1000c238:	31000104 	addi	r4,r6,4
1000c23c:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c240:	d9000f04 	addi	r4,sp,60
1000c244:	000ce000 	call	1000ce00 <_ZNSt15underflow_errorD1Ev>
1000c248:	d9000204 	addi	r4,sp,8
1000c24c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000c250:	dfc01217 	ldw	ra,72(sp)
1000c254:	df001117 	ldw	fp,68(sp)
1000c258:	dec01304 	addi	sp,sp,76
1000c25c:	f800283a 	ret
1000c260:	d8800417 	ldw	r2,16(sp)
1000c264:	d9000f04 	addi	r4,sp,60
1000c268:	d8800015 	stw	r2,0(sp)
1000c26c:	000ce000 	call	1000ce00 <_ZNSt15underflow_errorD1Ev>
1000c270:	d9000017 	ldw	r4,0(sp)
1000c274:	00bfffc4 	movi	r2,-1
1000c278:	d8800315 	stw	r2,12(sp)
1000c27c:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000c280 <_ZGTtNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000c280:	00c400b4 	movhi	r3,4098
1000c284:	deffed04 	addi	sp,sp,-76
1000c288:	18d19684 	addi	r3,r3,18010
1000c28c:	01840074 	movhi	r6,4097
1000c290:	00840074 	movhi	r2,4097
1000c294:	31a2a704 	addi	r6,r6,-30052
1000c298:	10b0d504 	addi	r2,r2,-15532
1000c29c:	d9000015 	stw	r4,0(sp)
1000c2a0:	d8c00915 	stw	r3,36(sp)
1000c2a4:	d9000204 	addi	r4,sp,8
1000c2a8:	d8c01104 	addi	r3,sp,68
1000c2ac:	d9800815 	stw	r6,32(sp)
1000c2b0:	dfc01215 	stw	ra,72(sp)
1000c2b4:	d8c00a15 	stw	r3,40(sp)
1000c2b8:	d8800b15 	stw	r2,44(sp)
1000c2bc:	d9400115 	stw	r5,4(sp)
1000c2c0:	df001115 	stw	fp,68(sp)
1000c2c4:	dec00c15 	stw	sp,48(sp)
1000c2c8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000c2cc:	d8c00f04 	addi	r3,sp,60
1000c2d0:	014400b4 	movhi	r5,4098
1000c2d4:	1809883a 	mov	r4,r3
1000c2d8:	00bfffc4 	movi	r2,-1
1000c2dc:	29550404 	addi	r5,r5,21520
1000c2e0:	d8800315 	stw	r2,12(sp)
1000c2e4:	000abf80 	call	1000abf8 <_ZNSt13runtime_errorC1EPKc>
1000c2e8:	00c00044 	movi	r3,1
1000c2ec:	d9000017 	ldw	r4,0(sp)
1000c2f0:	008400b4 	movhi	r2,4098
1000c2f4:	d8c00315 	stw	r3,12(sp)
1000c2f8:	d8c00f04 	addi	r3,sp,60
1000c2fc:	10961c04 	addi	r2,r2,22640
1000c300:	01800204 	movi	r6,8
1000c304:	180b883a 	mov	r5,r3
1000c308:	d8800f15 	stw	r2,60(sp)
1000c30c:	00000000 	call	10000000 <__alt_mem_sdram>
1000c310:	d8800017 	ldw	r2,0(sp)
1000c314:	d9000117 	ldw	r4,4(sp)
1000c318:	10c00104 	addi	r3,r2,4
1000c31c:	d8c00115 	stw	r3,4(sp)
1000c320:	00000000 	call	10000000 <__alt_mem_sdram>
1000c324:	d9800017 	ldw	r6,0(sp)
1000c328:	d9000117 	ldw	r4,4(sp)
1000c32c:	100b883a 	mov	r5,r2
1000c330:	000b0000 	call	1000b000 <_Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_>
1000c334:	d9000f04 	addi	r4,sp,60
1000c338:	000ce000 	call	1000ce00 <_ZNSt15underflow_errorD1Ev>
1000c33c:	d9000204 	addi	r4,sp,8
1000c340:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000c344:	dfc01217 	ldw	ra,72(sp)
1000c348:	df001117 	ldw	fp,68(sp)
1000c34c:	dec01304 	addi	sp,sp,76
1000c350:	f800283a 	ret
1000c354:	d8800417 	ldw	r2,16(sp)
1000c358:	d9000f04 	addi	r4,sp,60
1000c35c:	d8800015 	stw	r2,0(sp)
1000c360:	000ce000 	call	1000ce00 <_ZNSt15underflow_errorD1Ev>
1000c364:	d9000017 	ldw	r4,0(sp)
1000c368:	00bfffc4 	movi	r2,-1
1000c36c:	d8800315 	stw	r2,12(sp)
1000c370:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000c374 <_ZGTtNSt15underflow_errorD1Ev>:
1000c374:	21000104 	addi	r4,r4,4
1000c378:	000b1441 	jmpi	1000b144 <_Z20_txnal_cow_string_D1Pv>

1000c37c <_ZGTtNSt15underflow_errorD0Ev>:
1000c37c:	defffe04 	addi	sp,sp,-8
1000c380:	dc000015 	stw	r16,0(sp)
1000c384:	2021883a 	mov	r16,r4
1000c388:	21000104 	addi	r4,r4,4
1000c38c:	dfc00115 	stw	ra,4(sp)
1000c390:	000b1440 	call	1000b144 <_Z20_txnal_cow_string_D1Pv>
1000c394:	8009883a 	mov	r4,r16
1000c398:	dfc00117 	ldw	ra,4(sp)
1000c39c:	dc000017 	ldw	r16,0(sp)
1000c3a0:	dec00204 	addi	sp,sp,8
1000c3a4:	00000001 	jmpi	10000000 <__alt_mem_sdram>

1000c3a8 <__cxa_call_terminate>:
1000c3a8:	defffe04 	addi	sp,sp,-8
1000c3ac:	dfc00115 	stw	ra,4(sp)
1000c3b0:	dc000015 	stw	r16,0(sp)
1000c3b4:	20000d26 	beq	r4,zero,1000c3ec <__cxa_call_terminate+0x44>
1000c3b8:	2021883a 	mov	r16,r4
1000c3bc:	00080480 	call	10008048 <__cxa_begin_catch>
1000c3c0:	80800017 	ldw	r2,0(r16)
1000c3c4:	81000117 	ldw	r4,4(r16)
1000c3c8:	00ef3574 	movhi	r3,48341
1000c3cc:	18f54004 	addi	r3,r3,-11008
1000c3d0:	016e2cb4 	movhi	r5,47282
1000c3d4:	296aaf04 	addi	r5,r5,-21828
1000c3d8:	10c7883a 	add	r3,r2,r3
1000c3dc:	1885803a 	cmpltu	r2,r3,r2
1000c3e0:	2149883a 	add	r4,r4,r5
1000c3e4:	1105883a 	add	r2,r2,r4
1000c3e8:	10000126 	beq	r2,zero,1000c3f0 <__cxa_call_terminate+0x48>
1000c3ec:	00082a80 	call	100082a8 <_ZSt9terminatev>
1000c3f0:	18c000a8 	cmpgeui	r3,r3,2
1000c3f4:	183ffd1e 	bne	r3,zero,1000c3ec <__cxa_call_terminate+0x44>
1000c3f8:	813ff817 	ldw	r4,-32(r16)
1000c3fc:	00081e00 	call	100081e0 <_ZN10__cxxabiv111__terminateEPFvvE>

1000c400 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
1000c400:	008400b4 	movhi	r2,4098
1000c404:	10951704 	addi	r2,r2,21596
1000c408:	20800015 	stw	r2,0(r4)
1000c40c:	000c8a81 	jmpi	1000c8a8 <_ZN10__cxxabiv117__class_type_infoD1Ev>

1000c410 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
1000c410:	defffe04 	addi	sp,sp,-8
1000c414:	008400b4 	movhi	r2,4098
1000c418:	dc000015 	stw	r16,0(sp)
1000c41c:	dfc00115 	stw	ra,4(sp)
1000c420:	10951704 	addi	r2,r2,21596
1000c424:	20800015 	stw	r2,0(r4)
1000c428:	2021883a 	mov	r16,r4
1000c42c:	000c8a80 	call	1000c8a8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
1000c430:	01400304 	movi	r5,12
1000c434:	8009883a 	mov	r4,r16
1000c438:	dfc00117 	ldw	ra,4(sp)
1000c43c:	dc000017 	ldw	r16,0(sp)
1000c440:	dec00204 	addi	sp,sp,8
1000c444:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c448 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
1000c448:	defffa04 	addi	sp,sp,-24
1000c44c:	dc000215 	stw	r16,8(sp)
1000c450:	dc000617 	ldw	r16,24(sp)
1000c454:	dc800415 	stw	r18,16(sp)
1000c458:	dc400315 	stw	r17,12(sp)
1000c45c:	dfc00515 	stw	ra,20(sp)
1000c460:	2023883a 	mov	r17,r4
1000c464:	2825883a 	mov	r18,r5
1000c468:	81800b26 	beq	r16,r6,1000c498 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
1000c46c:	89000217 	ldw	r4,8(r17)
1000c470:	900b883a 	mov	r5,r18
1000c474:	20800017 	ldw	r2,0(r4)
1000c478:	dc000615 	stw	r16,24(sp)
1000c47c:	10800817 	ldw	r2,32(r2)
1000c480:	dfc00517 	ldw	ra,20(sp)
1000c484:	dc800417 	ldw	r18,16(sp)
1000c488:	dc400317 	ldw	r17,12(sp)
1000c48c:	dc000217 	ldw	r16,8(sp)
1000c490:	dec00604 	addi	sp,sp,24
1000c494:	1000683a 	jmp	r2
1000c498:	21000117 	ldw	r4,4(r4)
1000c49c:	39400117 	ldw	r5,4(r7)
1000c4a0:	21400926 	beq	r4,r5,1000c4c8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
1000c4a4:	20800007 	ldb	r2,0(r4)
1000c4a8:	10800aa0 	cmpeqi	r2,r2,42
1000c4ac:	103fef1e 	bne	r2,zero,1000c46c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000c4b0:	d9c00115 	stw	r7,4(sp)
1000c4b4:	d9800015 	stw	r6,0(sp)
1000c4b8:	00163dc0 	call	100163dc <strcmp>
1000c4bc:	d9800017 	ldw	r6,0(sp)
1000c4c0:	d9c00117 	ldw	r7,4(sp)
1000c4c4:	103fe91e 	bne	r2,zero,1000c46c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
1000c4c8:	00800184 	movi	r2,6
1000c4cc:	dfc00517 	ldw	ra,20(sp)
1000c4d0:	dc800417 	ldw	r18,16(sp)
1000c4d4:	dc400317 	ldw	r17,12(sp)
1000c4d8:	dc000217 	ldw	r16,8(sp)
1000c4dc:	dec00604 	addi	sp,sp,24
1000c4e0:	f800283a 	ret

1000c4e4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
1000c4e4:	defff504 	addi	sp,sp,-44
1000c4e8:	dc000215 	stw	r16,8(sp)
1000c4ec:	38800117 	ldw	r2,4(r7)
1000c4f0:	24000117 	ldw	r16,4(r4)
1000c4f4:	ddc00915 	stw	r23,36(sp)
1000c4f8:	dd400715 	stw	r21,28(sp)
1000c4fc:	dcc00515 	stw	r19,20(sp)
1000c500:	dc800415 	stw	r18,16(sp)
1000c504:	dc400315 	stw	r17,12(sp)
1000c508:	dfc00a15 	stw	ra,40(sp)
1000c50c:	dd800815 	stw	r22,32(sp)
1000c510:	dd000615 	stw	r20,24(sp)
1000c514:	2827883a 	mov	r19,r5
1000c518:	dc400b17 	ldw	r17,44(sp)
1000c51c:	ddc00c17 	ldw	r23,48(sp)
1000c520:	dd400d17 	ldw	r21,52(sp)
1000c524:	dc800e17 	ldw	r18,56(sp)
1000c528:	80802026 	beq	r16,r2,1000c5ac <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000c52c:	85800007 	ldb	r22,0(r16)
1000c530:	2029883a 	mov	r20,r4
1000c534:	b0c00aa0 	cmpeqi	r3,r22,42
1000c538:	1800081e 	bne	r3,zero,1000c55c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
1000c53c:	100b883a 	mov	r5,r2
1000c540:	8009883a 	mov	r4,r16
1000c544:	d9c00115 	stw	r7,4(sp)
1000c548:	d9800015 	stw	r6,0(sp)
1000c54c:	00163dc0 	call	100163dc <strcmp>
1000c550:	d9800017 	ldw	r6,0(sp)
1000c554:	d9c00117 	ldw	r7,4(sp)
1000c558:	10001426 	beq	r2,zero,1000c5ac <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
1000c55c:	8d402926 	beq	r17,r21,1000c604 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
1000c560:	a1000217 	ldw	r4,8(r20)
1000c564:	980b883a 	mov	r5,r19
1000c568:	20800017 	ldw	r2,0(r4)
1000c56c:	dc800e15 	stw	r18,56(sp)
1000c570:	dd400d15 	stw	r21,52(sp)
1000c574:	ddc00c15 	stw	r23,48(sp)
1000c578:	dc400b15 	stw	r17,44(sp)
1000c57c:	10800717 	ldw	r2,28(r2)
1000c580:	dfc00a17 	ldw	ra,40(sp)
1000c584:	ddc00917 	ldw	r23,36(sp)
1000c588:	dd800817 	ldw	r22,32(sp)
1000c58c:	dd400717 	ldw	r21,28(sp)
1000c590:	dd000617 	ldw	r20,24(sp)
1000c594:	dcc00517 	ldw	r19,20(sp)
1000c598:	dc800417 	ldw	r18,16(sp)
1000c59c:	dc400317 	ldw	r17,12(sp)
1000c5a0:	dc000217 	ldw	r16,8(sp)
1000c5a4:	dec00b04 	addi	sp,sp,44
1000c5a8:	1000683a 	jmp	r2
1000c5ac:	94400015 	stw	r17,0(r18)
1000c5b0:	91800115 	stw	r6,4(r18)
1000c5b4:	98001016 	blt	r19,zero,1000c5f8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x114>
1000c5b8:	8ce3883a 	add	r17,r17,r19
1000c5bc:	ac401e26 	beq	r21,r17,1000c638 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
1000c5c0:	00800044 	movi	r2,1
1000c5c4:	90800315 	stw	r2,12(r18)
1000c5c8:	0005883a 	mov	r2,zero
1000c5cc:	dfc00a17 	ldw	ra,40(sp)
1000c5d0:	ddc00917 	ldw	r23,36(sp)
1000c5d4:	dd800817 	ldw	r22,32(sp)
1000c5d8:	dd400717 	ldw	r21,28(sp)
1000c5dc:	dd000617 	ldw	r20,24(sp)
1000c5e0:	dcc00517 	ldw	r19,20(sp)
1000c5e4:	dc800417 	ldw	r18,16(sp)
1000c5e8:	dc400317 	ldw	r17,12(sp)
1000c5ec:	dc000217 	ldw	r16,8(sp)
1000c5f0:	dec00b04 	addi	sp,sp,44
1000c5f4:	f800283a 	ret
1000c5f8:	9c7fff98 	cmpnei	r17,r19,-2
1000c5fc:	883ff21e 	bne	r17,zero,1000c5c8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000c600:	003fef06 	br	1000c5c0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
1000c604:	b9400117 	ldw	r5,4(r23)
1000c608:	81400926 	beq	r16,r5,1000c630 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
1000c60c:	b5800aa0 	cmpeqi	r22,r22,42
1000c610:	b03fd31e 	bne	r22,zero,1000c560 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000c614:	8009883a 	mov	r4,r16
1000c618:	d9c00115 	stw	r7,4(sp)
1000c61c:	d9800015 	stw	r6,0(sp)
1000c620:	00163dc0 	call	100163dc <strcmp>
1000c624:	d9800017 	ldw	r6,0(sp)
1000c628:	d9c00117 	ldw	r7,4(sp)
1000c62c:	103fcc1e 	bne	r2,zero,1000c560 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
1000c630:	91800215 	stw	r6,8(r18)
1000c634:	003fe406 	br	1000c5c8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe4>
1000c638:	00800184 	movi	r2,6
1000c63c:	003fe106 	br	1000c5c4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xe0>

1000c640 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
1000c640:	defffb04 	addi	sp,sp,-20
1000c644:	dcc00315 	stw	r19,12(sp)
1000c648:	dc800215 	stw	r18,8(sp)
1000c64c:	dc400115 	stw	r17,4(sp)
1000c650:	dc000015 	stw	r16,0(sp)
1000c654:	dfc00415 	stw	ra,16(sp)
1000c658:	2027883a 	mov	r19,r4
1000c65c:	2821883a 	mov	r16,r5
1000c660:	3023883a 	mov	r17,r6
1000c664:	3825883a 	mov	r18,r7
1000c668:	000c9bc0 	call	1000c9bc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
1000c66c:	10c03fcc 	andi	r3,r2,255
1000c670:	18000d1e 	bne	r3,zero,1000c6a8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
1000c674:	99000217 	ldw	r4,8(r19)
1000c678:	900f883a 	mov	r7,r18
1000c67c:	880d883a 	mov	r6,r17
1000c680:	20800017 	ldw	r2,0(r4)
1000c684:	800b883a 	mov	r5,r16
1000c688:	10800617 	ldw	r2,24(r2)
1000c68c:	dfc00417 	ldw	ra,16(sp)
1000c690:	dcc00317 	ldw	r19,12(sp)
1000c694:	dc800217 	ldw	r18,8(sp)
1000c698:	dc400117 	ldw	r17,4(sp)
1000c69c:	dc000017 	ldw	r16,0(sp)
1000c6a0:	dec00504 	addi	sp,sp,20
1000c6a4:	1000683a 	jmp	r2
1000c6a8:	dfc00417 	ldw	ra,16(sp)
1000c6ac:	dcc00317 	ldw	r19,12(sp)
1000c6b0:	dc800217 	ldw	r18,8(sp)
1000c6b4:	dc400117 	ldw	r17,4(sp)
1000c6b8:	dc000017 	ldw	r16,0(sp)
1000c6bc:	dec00504 	addi	sp,sp,20
1000c6c0:	f800283a 	ret

1000c6c4 <__cxa_get_globals_fast>:
1000c6c4:	008400f4 	movhi	r2,4099
1000c6c8:	10aaa704 	addi	r2,r2,-21860
1000c6cc:	f800283a 	ret

1000c6d0 <__cxa_get_globals>:
1000c6d0:	008400f4 	movhi	r2,4099
1000c6d4:	10aaa704 	addi	r2,r2,-21860
1000c6d8:	f800283a 	ret

1000c6dc <_ZNSt9exceptionD1Ev>:
1000c6dc:	f800283a 	ret

1000c6e0 <_ZNSt13bad_exceptionD1Ev>:
1000c6e0:	f800283a 	ret

1000c6e4 <_ZGTtNKSt9exception4whatEv>:
1000c6e4:	008400b4 	movhi	r2,4098
1000c6e8:	10952004 	addi	r2,r2,21632
1000c6ec:	f800283a 	ret

1000c6f0 <_ZGTtNKSt13bad_exception4whatEv>:
1000c6f0:	008400b4 	movhi	r2,4098
1000c6f4:	10952404 	addi	r2,r2,21648
1000c6f8:	f800283a 	ret

1000c6fc <_ZNSt9exceptionD0Ev>:
1000c6fc:	01400104 	movi	r5,4
1000c700:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c704 <_ZNSt13bad_exceptionD0Ev>:
1000c704:	01400104 	movi	r5,4
1000c708:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c70c <_ZN10__cxxabiv115__forced_unwindD1Ev>:
1000c70c:	f800283a 	ret

1000c710 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
1000c710:	01400104 	movi	r5,4
1000c714:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c718 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
1000c718:	f800283a 	ret

1000c71c <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
1000c71c:	01400104 	movi	r5,4
1000c720:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c724 <_ZGTtNKSt9exceptionD1Ev>:
1000c724:	f800283a 	ret

1000c728 <_ZGTtNKSt13bad_exceptionD1Ev>:
1000c728:	f800283a 	ret

1000c72c <__cxa_pure_virtual>:
1000c72c:	014400b4 	movhi	r5,4098
1000c730:	deffff04 	addi	sp,sp,-4
1000c734:	018006c4 	movi	r6,27
1000c738:	29555a04 	addi	r5,r5,21864
1000c73c:	01000084 	movi	r4,2
1000c740:	dfc00015 	stw	ra,0(sp)
1000c744:	00228bc0 	call	100228bc <write>
1000c748:	00082a80 	call	100082a8 <_ZSt9terminatev>

1000c74c <__cxa_deleted_virtual>:
1000c74c:	014400b4 	movhi	r5,4098
1000c750:	deffff04 	addi	sp,sp,-4
1000c754:	01800784 	movi	r6,30
1000c758:	29556104 	addi	r5,r5,21892
1000c75c:	01000084 	movi	r4,2
1000c760:	dfc00015 	stw	ra,0(sp)
1000c764:	00228bc0 	call	100228bc <write>
1000c768:	00082a80 	call	100082a8 <_ZSt9terminatev>

1000c76c <_ZdlPvj>:
1000c76c:	00085041 	jmpi	10008504 <_ZdlPv>

1000c770 <_ZNKSt8bad_cast4whatEv>:
1000c770:	008400b4 	movhi	r2,4098
1000c774:	10956904 	addi	r2,r2,21924
1000c778:	f800283a 	ret

1000c77c <_ZNSt8bad_castD1Ev>:
1000c77c:	008400b4 	movhi	r2,4098
1000c780:	10957504 	addi	r2,r2,21972
1000c784:	20800015 	stw	r2,0(r4)
1000c788:	000c6dc1 	jmpi	1000c6dc <_ZNSt9exceptionD1Ev>

1000c78c <_ZNSt8bad_castD0Ev>:
1000c78c:	defffe04 	addi	sp,sp,-8
1000c790:	008400b4 	movhi	r2,4098
1000c794:	dc000015 	stw	r16,0(sp)
1000c798:	dfc00115 	stw	ra,4(sp)
1000c79c:	10957504 	addi	r2,r2,21972
1000c7a0:	20800015 	stw	r2,0(r4)
1000c7a4:	2021883a 	mov	r16,r4
1000c7a8:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000c7ac:	01400104 	movi	r5,4
1000c7b0:	8009883a 	mov	r4,r16
1000c7b4:	dfc00117 	ldw	ra,4(sp)
1000c7b8:	dc000017 	ldw	r16,0(sp)
1000c7bc:	dec00204 	addi	sp,sp,8
1000c7c0:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c7c4 <_ZNKSt10bad_typeid4whatEv>:
1000c7c4:	008400b4 	movhi	r2,4098
1000c7c8:	10957804 	addi	r2,r2,21984
1000c7cc:	f800283a 	ret

1000c7d0 <_ZNSt10bad_typeidD1Ev>:
1000c7d0:	008400b4 	movhi	r2,4098
1000c7d4:	10958504 	addi	r2,r2,22036
1000c7d8:	20800015 	stw	r2,0(r4)
1000c7dc:	000c6dc1 	jmpi	1000c6dc <_ZNSt9exceptionD1Ev>

1000c7e0 <_ZNSt10bad_typeidD0Ev>:
1000c7e0:	defffe04 	addi	sp,sp,-8
1000c7e4:	008400b4 	movhi	r2,4098
1000c7e8:	dc000015 	stw	r16,0(sp)
1000c7ec:	dfc00115 	stw	ra,4(sp)
1000c7f0:	10958504 	addi	r2,r2,22036
1000c7f4:	20800015 	stw	r2,0(r4)
1000c7f8:	2021883a 	mov	r16,r4
1000c7fc:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000c800:	01400104 	movi	r5,4
1000c804:	8009883a 	mov	r4,r16
1000c808:	dfc00117 	ldw	ra,4(sp)
1000c80c:	dc000017 	ldw	r16,0(sp)
1000c810:	dec00204 	addi	sp,sp,8
1000c814:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c818 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
1000c818:	20800017 	ldw	r2,0(r4)
1000c81c:	defffa04 	addi	sp,sp,-24
1000c820:	dc000415 	stw	r16,16(sp)
1000c824:	10800617 	ldw	r2,24(r2)
1000c828:	3021883a 	mov	r16,r6
1000c82c:	31800017 	ldw	r6,0(r6)
1000c830:	00c00404 	movi	r3,16
1000c834:	dfc00515 	stw	ra,20(sp)
1000c838:	d8000015 	stw	zero,0(sp)
1000c83c:	d8000115 	stw	zero,4(sp)
1000c840:	d8c00215 	stw	r3,8(sp)
1000c844:	d8000315 	stw	zero,12(sp)
1000c848:	d80f883a 	mov	r7,sp
1000c84c:	103ee83a 	callr	r2
1000c850:	d8800117 	ldw	r2,4(sp)
1000c854:	1080018c 	andi	r2,r2,6
1000c858:	10800198 	cmpnei	r2,r2,6
1000c85c:	1000071e 	bne	r2,zero,1000c87c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
1000c860:	d8c00017 	ldw	r3,0(sp)
1000c864:	00800044 	movi	r2,1
1000c868:	80c00015 	stw	r3,0(r16)
1000c86c:	dfc00517 	ldw	ra,20(sp)
1000c870:	dc000417 	ldw	r16,16(sp)
1000c874:	dec00604 	addi	sp,sp,24
1000c878:	f800283a 	ret
1000c87c:	0005883a 	mov	r2,zero
1000c880:	dfc00517 	ldw	ra,20(sp)
1000c884:	dc000417 	ldw	r16,16(sp)
1000c888:	dec00604 	addi	sp,sp,24
1000c88c:	f800283a 	ret

1000c890 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
1000c890:	d8c00017 	ldw	r3,0(sp)
1000c894:	00800044 	movi	r2,1
1000c898:	19800126 	beq	r3,r6,1000c8a0 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
1000c89c:	f800283a 	ret
1000c8a0:	00800184 	movi	r2,6
1000c8a4:	f800283a 	ret

1000c8a8 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
1000c8a8:	008400b4 	movhi	r2,4098
1000c8ac:	10959604 	addi	r2,r2,22104
1000c8b0:	20800015 	stw	r2,0(r4)
1000c8b4:	000cae01 	jmpi	1000cae0 <_ZNSt9type_infoD1Ev>

1000c8b8 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
1000c8b8:	defffe04 	addi	sp,sp,-8
1000c8bc:	008400b4 	movhi	r2,4098
1000c8c0:	dc000015 	stw	r16,0(sp)
1000c8c4:	dfc00115 	stw	ra,4(sp)
1000c8c8:	10959604 	addi	r2,r2,22104
1000c8cc:	20800015 	stw	r2,0(r4)
1000c8d0:	2021883a 	mov	r16,r4
1000c8d4:	000cae00 	call	1000cae0 <_ZNSt9type_infoD1Ev>
1000c8d8:	01400204 	movi	r5,8
1000c8dc:	8009883a 	mov	r4,r16
1000c8e0:	dfc00117 	ldw	ra,4(sp)
1000c8e4:	dc000017 	ldw	r16,0(sp)
1000c8e8:	dec00204 	addi	sp,sp,8
1000c8ec:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000c8f0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
1000c8f0:	defffa04 	addi	sp,sp,-24
1000c8f4:	dc800315 	stw	r18,12(sp)
1000c8f8:	d8800817 	ldw	r2,32(sp)
1000c8fc:	dc800617 	ldw	r18,24(sp)
1000c900:	dcc00415 	stw	r19,16(sp)
1000c904:	dc400215 	stw	r17,8(sp)
1000c908:	dc000115 	stw	r16,4(sp)
1000c90c:	dfc00515 	stw	ra,20(sp)
1000c910:	3027883a 	mov	r19,r6
1000c914:	dc400917 	ldw	r17,36(sp)
1000c918:	24000117 	ldw	r16,4(r4)
1000c91c:	90801426 	beq	r18,r2,1000c970 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x80>
1000c920:	39400117 	ldw	r5,4(r7)
1000c924:	2c000626 	beq	r5,r16,1000c940 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c928:	80800007 	ldb	r2,0(r16)
1000c92c:	10800aa0 	cmpeqi	r2,r2,42
1000c930:	1000071e 	bne	r2,zero,1000c950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c934:	8009883a 	mov	r4,r16
1000c938:	00163dc0 	call	100163dc <strcmp>
1000c93c:	1000041e 	bne	r2,zero,1000c950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c940:	00800044 	movi	r2,1
1000c944:	8c800015 	stw	r18,0(r17)
1000c948:	8cc00115 	stw	r19,4(r17)
1000c94c:	88800315 	stw	r2,12(r17)
1000c950:	0005883a 	mov	r2,zero
1000c954:	dfc00517 	ldw	ra,20(sp)
1000c958:	dcc00417 	ldw	r19,16(sp)
1000c95c:	dc800317 	ldw	r18,12(sp)
1000c960:	dc400217 	ldw	r17,8(sp)
1000c964:	dc000117 	ldw	r16,4(sp)
1000c968:	dec00604 	addi	sp,sp,24
1000c96c:	f800283a 	ret
1000c970:	d8800717 	ldw	r2,28(sp)
1000c974:	11400117 	ldw	r5,4(r2)
1000c978:	2c000e26 	beq	r5,r16,1000c9b4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000c97c:	80800007 	ldb	r2,0(r16)
1000c980:	10800aa0 	cmpeqi	r2,r2,42
1000c984:	1000081e 	bne	r2,zero,1000c9a8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
1000c988:	8009883a 	mov	r4,r16
1000c98c:	d9c00015 	stw	r7,0(sp)
1000c990:	00163dc0 	call	100163dc <strcmp>
1000c994:	10000726 	beq	r2,zero,1000c9b4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
1000c998:	d9c00017 	ldw	r7,0(sp)
1000c99c:	39400117 	ldw	r5,4(r7)
1000c9a0:	817fe41e 	bne	r16,r5,1000c934 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x44>
1000c9a4:	003fe606 	br	1000c940 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c9a8:	38800117 	ldw	r2,4(r7)
1000c9ac:	143fe81e 	bne	r2,r16,1000c950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
1000c9b0:	003fe306 	br	1000c940 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
1000c9b4:	8cc00215 	stw	r19,8(r17)
1000c9b8:	003fe506 	br	1000c950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>

1000c9bc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
1000c9bc:	21000117 	ldw	r4,4(r4)
1000c9c0:	29400117 	ldw	r5,4(r5)
1000c9c4:	defffd04 	addi	sp,sp,-12
1000c9c8:	dfc00215 	stw	ra,8(sp)
1000c9cc:	21400d26 	beq	r4,r5,1000ca04 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000c9d0:	20800007 	ldb	r2,0(r4)
1000c9d4:	d9c00115 	stw	r7,4(sp)
1000c9d8:	d9800015 	stw	r6,0(sp)
1000c9dc:	10800aa0 	cmpeqi	r2,r2,42
1000c9e0:	1000041e 	bne	r2,zero,1000c9f4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
1000c9e4:	00163dc0 	call	100163dc <strcmp>
1000c9e8:	d9800017 	ldw	r6,0(sp)
1000c9ec:	d9c00117 	ldw	r7,4(sp)
1000c9f0:	10000426 	beq	r2,zero,1000ca04 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x48>
1000c9f4:	0005883a 	mov	r2,zero
1000c9f8:	dfc00217 	ldw	ra,8(sp)
1000c9fc:	dec00304 	addi	sp,sp,12
1000ca00:	f800283a 	ret
1000ca04:	00800204 	movi	r2,8
1000ca08:	38800315 	stw	r2,12(r7)
1000ca0c:	00800184 	movi	r2,6
1000ca10:	38800115 	stw	r2,4(r7)
1000ca14:	00800044 	movi	r2,1
1000ca18:	39800015 	stw	r6,0(r7)
1000ca1c:	dfc00217 	ldw	ra,8(sp)
1000ca20:	dec00304 	addi	sp,sp,12
1000ca24:	f800283a 	ret

1000ca28 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
1000ca28:	20800117 	ldw	r2,4(r4)
1000ca2c:	2a000117 	ldw	r8,4(r5)
1000ca30:	12002726 	beq	r2,r8,1000cad0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xa8>
1000ca34:	defffb04 	addi	sp,sp,-20
1000ca38:	dcc00315 	stw	r19,12(sp)
1000ca3c:	dc800215 	stw	r18,8(sp)
1000ca40:	dc400115 	stw	r17,4(sp)
1000ca44:	dc000015 	stw	r16,0(sp)
1000ca48:	dfc00415 	stw	ra,16(sp)
1000ca4c:	10c00007 	ldb	r3,0(r2)
1000ca50:	3823883a 	mov	r17,r7
1000ca54:	3027883a 	mov	r19,r6
1000ca58:	18c00aa0 	cmpeqi	r3,r3,42
1000ca5c:	2821883a 	mov	r16,r5
1000ca60:	2025883a 	mov	r18,r4
1000ca64:	18000c1e 	bne	r3,zero,1000ca98 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000ca68:	400b883a 	mov	r5,r8
1000ca6c:	1009883a 	mov	r4,r2
1000ca70:	00163dc0 	call	100163dc <strcmp>
1000ca74:	1000081e 	bne	r2,zero,1000ca98 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x70>
1000ca78:	00800044 	movi	r2,1
1000ca7c:	dfc00417 	ldw	ra,16(sp)
1000ca80:	dcc00317 	ldw	r19,12(sp)
1000ca84:	dc800217 	ldw	r18,8(sp)
1000ca88:	dc400117 	ldw	r17,4(sp)
1000ca8c:	dc000017 	ldw	r16,0(sp)
1000ca90:	dec00504 	addi	sp,sp,20
1000ca94:	f800283a 	ret
1000ca98:	89c00128 	cmpgeui	r7,r17,4
1000ca9c:	38000e1e 	bne	r7,zero,1000cad8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
1000caa0:	80800017 	ldw	r2,0(r16)
1000caa4:	980d883a 	mov	r6,r19
1000caa8:	900b883a 	mov	r5,r18
1000caac:	10800517 	ldw	r2,20(r2)
1000cab0:	8009883a 	mov	r4,r16
1000cab4:	dfc00417 	ldw	ra,16(sp)
1000cab8:	dcc00317 	ldw	r19,12(sp)
1000cabc:	dc800217 	ldw	r18,8(sp)
1000cac0:	dc400117 	ldw	r17,4(sp)
1000cac4:	dc000017 	ldw	r16,0(sp)
1000cac8:	dec00504 	addi	sp,sp,20
1000cacc:	1000683a 	jmp	r2
1000cad0:	00800044 	movi	r2,1
1000cad4:	f800283a 	ret
1000cad8:	0005883a 	mov	r2,zero
1000cadc:	003fe706 	br	1000ca7c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x54>

1000cae0 <_ZNSt9type_infoD1Ev>:
1000cae0:	f800283a 	ret

1000cae4 <_ZNKSt9type_info14__is_pointer_pEv>:
1000cae4:	0005883a 	mov	r2,zero
1000cae8:	f800283a 	ret

1000caec <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
1000caec:	0005883a 	mov	r2,zero
1000caf0:	f800283a 	ret

1000caf4 <_ZNSt9type_infoD0Ev>:
1000caf4:	01400204 	movi	r5,8
1000caf8:	000c76c1 	jmpi	1000c76c <_ZdlPvj>

1000cafc <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
1000cafc:	21000117 	ldw	r4,4(r4)
1000cb00:	29400117 	ldw	r5,4(r5)
1000cb04:	21400c26 	beq	r4,r5,1000cb38 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
1000cb08:	20800007 	ldb	r2,0(r4)
1000cb0c:	10800aa0 	cmpeqi	r2,r2,42
1000cb10:	1000071e 	bne	r2,zero,1000cb30 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
1000cb14:	deffff04 	addi	sp,sp,-4
1000cb18:	dfc00015 	stw	ra,0(sp)
1000cb1c:	00163dc0 	call	100163dc <strcmp>
1000cb20:	1005003a 	cmpeq	r2,r2,zero
1000cb24:	dfc00017 	ldw	ra,0(sp)
1000cb28:	dec00104 	addi	sp,sp,4
1000cb2c:	f800283a 	ret
1000cb30:	0005883a 	mov	r2,zero
1000cb34:	f800283a 	ret
1000cb38:	00800044 	movi	r2,1
1000cb3c:	f800283a 	ret

1000cb40 <_ZNKSt11logic_error4whatEv>:
1000cb40:	20800117 	ldw	r2,4(r4)
1000cb44:	f800283a 	ret

1000cb48 <_ZNKSt13runtime_error4whatEv>:
1000cb48:	20800117 	ldw	r2,4(r4)
1000cb4c:	f800283a 	ret

1000cb50 <_ZNSt11logic_errorD1Ev>:
1000cb50:	21400117 	ldw	r5,4(r4)
1000cb54:	defffd04 	addi	sp,sp,-12
1000cb58:	00c400b4 	movhi	r3,4098
1000cb5c:	dc000115 	stw	r16,4(sp)
1000cb60:	dfc00215 	stw	ra,8(sp)
1000cb64:	18d5f404 	addi	r3,r3,22480
1000cb68:	008400f4 	movhi	r2,4099
1000cb6c:	2021883a 	mov	r16,r4
1000cb70:	20c00015 	stw	r3,0(r4)
1000cb74:	10aac004 	addi	r2,r2,-21760
1000cb78:	293ffd04 	addi	r4,r5,-12
1000cb7c:	2080061e 	bne	r4,r2,1000cb98 <_ZNSt11logic_errorD1Ev+0x48>
1000cb80:	8009883a 	mov	r4,r16
1000cb84:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000cb88:	dfc00217 	ldw	ra,8(sp)
1000cb8c:	dc000117 	ldw	r16,4(sp)
1000cb90:	dec00304 	addi	sp,sp,12
1000cb94:	f800283a 	ret
1000cb98:	28bfff17 	ldw	r2,-4(r5)
1000cb9c:	10ffffc4 	addi	r3,r2,-1
1000cba0:	28ffff15 	stw	r3,-4(r5)
1000cba4:	00bff616 	blt	zero,r2,1000cb80 <_ZNSt11logic_errorD1Ev+0x30>
1000cba8:	d94000c4 	addi	r5,sp,3
1000cbac:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000cbb0:	003ff306 	br	1000cb80 <_ZNSt11logic_errorD1Ev+0x30>

1000cbb4 <_ZNSt11logic_errorD0Ev>:
1000cbb4:	defffe04 	addi	sp,sp,-8
1000cbb8:	dc000015 	stw	r16,0(sp)
1000cbbc:	dfc00115 	stw	ra,4(sp)
1000cbc0:	2021883a 	mov	r16,r4
1000cbc4:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000cbc8:	8009883a 	mov	r4,r16
1000cbcc:	dfc00117 	ldw	ra,4(sp)
1000cbd0:	dc000017 	ldw	r16,0(sp)
1000cbd4:	dec00204 	addi	sp,sp,8
1000cbd8:	00085041 	jmpi	10008504 <_ZdlPv>

1000cbdc <_ZNSt12domain_errorD1Ev>:
1000cbdc:	008400b4 	movhi	r2,4098
1000cbe0:	1095f904 	addi	r2,r2,22500
1000cbe4:	20800015 	stw	r2,0(r4)
1000cbe8:	000cb501 	jmpi	1000cb50 <_ZNSt11logic_errorD1Ev>

1000cbec <_ZNSt12domain_errorD0Ev>:
1000cbec:	defffe04 	addi	sp,sp,-8
1000cbf0:	008400b4 	movhi	r2,4098
1000cbf4:	dc000015 	stw	r16,0(sp)
1000cbf8:	dfc00115 	stw	ra,4(sp)
1000cbfc:	1095f904 	addi	r2,r2,22500
1000cc00:	20800015 	stw	r2,0(r4)
1000cc04:	2021883a 	mov	r16,r4
1000cc08:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000cc0c:	8009883a 	mov	r4,r16
1000cc10:	dfc00117 	ldw	ra,4(sp)
1000cc14:	dc000017 	ldw	r16,0(sp)
1000cc18:	dec00204 	addi	sp,sp,8
1000cc1c:	00085041 	jmpi	10008504 <_ZdlPv>

1000cc20 <_ZNSt16invalid_argumentD1Ev>:
1000cc20:	008400b4 	movhi	r2,4098
1000cc24:	1095fe04 	addi	r2,r2,22520
1000cc28:	20800015 	stw	r2,0(r4)
1000cc2c:	000cb501 	jmpi	1000cb50 <_ZNSt11logic_errorD1Ev>

1000cc30 <_ZNSt16invalid_argumentD0Ev>:
1000cc30:	defffe04 	addi	sp,sp,-8
1000cc34:	008400b4 	movhi	r2,4098
1000cc38:	dc000015 	stw	r16,0(sp)
1000cc3c:	dfc00115 	stw	ra,4(sp)
1000cc40:	1095fe04 	addi	r2,r2,22520
1000cc44:	20800015 	stw	r2,0(r4)
1000cc48:	2021883a 	mov	r16,r4
1000cc4c:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000cc50:	8009883a 	mov	r4,r16
1000cc54:	dfc00117 	ldw	ra,4(sp)
1000cc58:	dc000017 	ldw	r16,0(sp)
1000cc5c:	dec00204 	addi	sp,sp,8
1000cc60:	00085041 	jmpi	10008504 <_ZdlPv>

1000cc64 <_ZNSt12length_errorD1Ev>:
1000cc64:	008400b4 	movhi	r2,4098
1000cc68:	10960304 	addi	r2,r2,22540
1000cc6c:	20800015 	stw	r2,0(r4)
1000cc70:	000cb501 	jmpi	1000cb50 <_ZNSt11logic_errorD1Ev>

1000cc74 <_ZNSt12length_errorD0Ev>:
1000cc74:	defffe04 	addi	sp,sp,-8
1000cc78:	008400b4 	movhi	r2,4098
1000cc7c:	dc000015 	stw	r16,0(sp)
1000cc80:	dfc00115 	stw	ra,4(sp)
1000cc84:	10960304 	addi	r2,r2,22540
1000cc88:	20800015 	stw	r2,0(r4)
1000cc8c:	2021883a 	mov	r16,r4
1000cc90:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000cc94:	8009883a 	mov	r4,r16
1000cc98:	dfc00117 	ldw	ra,4(sp)
1000cc9c:	dc000017 	ldw	r16,0(sp)
1000cca0:	dec00204 	addi	sp,sp,8
1000cca4:	00085041 	jmpi	10008504 <_ZdlPv>

1000cca8 <_ZNSt12out_of_rangeD1Ev>:
1000cca8:	008400b4 	movhi	r2,4098
1000ccac:	10960804 	addi	r2,r2,22560
1000ccb0:	20800015 	stw	r2,0(r4)
1000ccb4:	000cb501 	jmpi	1000cb50 <_ZNSt11logic_errorD1Ev>

1000ccb8 <_ZNSt12out_of_rangeD0Ev>:
1000ccb8:	defffe04 	addi	sp,sp,-8
1000ccbc:	008400b4 	movhi	r2,4098
1000ccc0:	dc000015 	stw	r16,0(sp)
1000ccc4:	dfc00115 	stw	ra,4(sp)
1000ccc8:	10960804 	addi	r2,r2,22560
1000cccc:	20800015 	stw	r2,0(r4)
1000ccd0:	2021883a 	mov	r16,r4
1000ccd4:	000cb500 	call	1000cb50 <_ZNSt11logic_errorD1Ev>
1000ccd8:	8009883a 	mov	r4,r16
1000ccdc:	dfc00117 	ldw	ra,4(sp)
1000cce0:	dc000017 	ldw	r16,0(sp)
1000cce4:	dec00204 	addi	sp,sp,8
1000cce8:	00085041 	jmpi	10008504 <_ZdlPv>

1000ccec <_ZNSt13runtime_errorD1Ev>:
1000ccec:	21400117 	ldw	r5,4(r4)
1000ccf0:	defffd04 	addi	sp,sp,-12
1000ccf4:	00c400b4 	movhi	r3,4098
1000ccf8:	dc000115 	stw	r16,4(sp)
1000ccfc:	dfc00215 	stw	ra,8(sp)
1000cd00:	18d60d04 	addi	r3,r3,22580
1000cd04:	008400f4 	movhi	r2,4099
1000cd08:	2021883a 	mov	r16,r4
1000cd0c:	20c00015 	stw	r3,0(r4)
1000cd10:	10aac004 	addi	r2,r2,-21760
1000cd14:	293ffd04 	addi	r4,r5,-12
1000cd18:	2080061e 	bne	r4,r2,1000cd34 <_ZNSt13runtime_errorD1Ev+0x48>
1000cd1c:	8009883a 	mov	r4,r16
1000cd20:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000cd24:	dfc00217 	ldw	ra,8(sp)
1000cd28:	dc000117 	ldw	r16,4(sp)
1000cd2c:	dec00304 	addi	sp,sp,12
1000cd30:	f800283a 	ret
1000cd34:	28bfff17 	ldw	r2,-4(r5)
1000cd38:	10ffffc4 	addi	r3,r2,-1
1000cd3c:	28ffff15 	stw	r3,-4(r5)
1000cd40:	00bff616 	blt	zero,r2,1000cd1c <_ZNSt13runtime_errorD1Ev+0x30>
1000cd44:	d94000c4 	addi	r5,sp,3
1000cd48:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000cd4c:	003ff306 	br	1000cd1c <_ZNSt13runtime_errorD1Ev+0x30>

1000cd50 <_ZNSt13runtime_errorD0Ev>:
1000cd50:	defffe04 	addi	sp,sp,-8
1000cd54:	dc000015 	stw	r16,0(sp)
1000cd58:	dfc00115 	stw	ra,4(sp)
1000cd5c:	2021883a 	mov	r16,r4
1000cd60:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000cd64:	8009883a 	mov	r4,r16
1000cd68:	dfc00117 	ldw	ra,4(sp)
1000cd6c:	dc000017 	ldw	r16,0(sp)
1000cd70:	dec00204 	addi	sp,sp,8
1000cd74:	00085041 	jmpi	10008504 <_ZdlPv>

1000cd78 <_ZNSt11range_errorD1Ev>:
1000cd78:	008400b4 	movhi	r2,4098
1000cd7c:	10961204 	addi	r2,r2,22600
1000cd80:	20800015 	stw	r2,0(r4)
1000cd84:	000ccec1 	jmpi	1000ccec <_ZNSt13runtime_errorD1Ev>

1000cd88 <_ZNSt11range_errorD0Ev>:
1000cd88:	defffe04 	addi	sp,sp,-8
1000cd8c:	008400b4 	movhi	r2,4098
1000cd90:	dc000015 	stw	r16,0(sp)
1000cd94:	dfc00115 	stw	ra,4(sp)
1000cd98:	10961204 	addi	r2,r2,22600
1000cd9c:	20800015 	stw	r2,0(r4)
1000cda0:	2021883a 	mov	r16,r4
1000cda4:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000cda8:	8009883a 	mov	r4,r16
1000cdac:	dfc00117 	ldw	ra,4(sp)
1000cdb0:	dc000017 	ldw	r16,0(sp)
1000cdb4:	dec00204 	addi	sp,sp,8
1000cdb8:	00085041 	jmpi	10008504 <_ZdlPv>

1000cdbc <_ZNSt14overflow_errorD1Ev>:
1000cdbc:	008400b4 	movhi	r2,4098
1000cdc0:	10961704 	addi	r2,r2,22620
1000cdc4:	20800015 	stw	r2,0(r4)
1000cdc8:	000ccec1 	jmpi	1000ccec <_ZNSt13runtime_errorD1Ev>

1000cdcc <_ZNSt14overflow_errorD0Ev>:
1000cdcc:	defffe04 	addi	sp,sp,-8
1000cdd0:	008400b4 	movhi	r2,4098
1000cdd4:	dc000015 	stw	r16,0(sp)
1000cdd8:	dfc00115 	stw	ra,4(sp)
1000cddc:	10961704 	addi	r2,r2,22620
1000cde0:	20800015 	stw	r2,0(r4)
1000cde4:	2021883a 	mov	r16,r4
1000cde8:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000cdec:	8009883a 	mov	r4,r16
1000cdf0:	dfc00117 	ldw	ra,4(sp)
1000cdf4:	dc000017 	ldw	r16,0(sp)
1000cdf8:	dec00204 	addi	sp,sp,8
1000cdfc:	00085041 	jmpi	10008504 <_ZdlPv>

1000ce00 <_ZNSt15underflow_errorD1Ev>:
1000ce00:	008400b4 	movhi	r2,4098
1000ce04:	10961c04 	addi	r2,r2,22640
1000ce08:	20800015 	stw	r2,0(r4)
1000ce0c:	000ccec1 	jmpi	1000ccec <_ZNSt13runtime_errorD1Ev>

1000ce10 <_ZNSt15underflow_errorD0Ev>:
1000ce10:	defffe04 	addi	sp,sp,-8
1000ce14:	008400b4 	movhi	r2,4098
1000ce18:	dc000015 	stw	r16,0(sp)
1000ce1c:	dfc00115 	stw	ra,4(sp)
1000ce20:	10961c04 	addi	r2,r2,22640
1000ce24:	20800015 	stw	r2,0(r4)
1000ce28:	2021883a 	mov	r16,r4
1000ce2c:	000ccec0 	call	1000ccec <_ZNSt13runtime_errorD1Ev>
1000ce30:	8009883a 	mov	r4,r16
1000ce34:	dfc00117 	ldw	ra,4(sp)
1000ce38:	dc000017 	ldw	r16,0(sp)
1000ce3c:	dec00204 	addi	sp,sp,8
1000ce40:	00085041 	jmpi	10008504 <_ZdlPv>

1000ce44 <_ZNSt11logic_errorC1ERKSs>:
1000ce44:	01840074 	movhi	r6,4097
1000ce48:	deffef04 	addi	sp,sp,-68
1000ce4c:	31a2a704 	addi	r6,r6,-30052
1000ce50:	00c400b4 	movhi	r3,4098
1000ce54:	00840074 	movhi	r2,4097
1000ce58:	18d19804 	addi	r3,r3,18016
1000ce5c:	10b3b304 	addi	r2,r2,-12596
1000ce60:	d9000015 	stw	r4,0(sp)
1000ce64:	d9800815 	stw	r6,32(sp)
1000ce68:	d9000204 	addi	r4,sp,8
1000ce6c:	d9800f04 	addi	r6,sp,60
1000ce70:	d8c00915 	stw	r3,36(sp)
1000ce74:	d8800b15 	stw	r2,44(sp)
1000ce78:	d9400115 	stw	r5,4(sp)
1000ce7c:	dfc01015 	stw	ra,64(sp)
1000ce80:	df000f15 	stw	fp,60(sp)
1000ce84:	d9800a15 	stw	r6,40(sp)
1000ce88:	dec00c15 	stw	sp,48(sp)
1000ce8c:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000ce90:	d8c00017 	ldw	r3,0(sp)
1000ce94:	008400b4 	movhi	r2,4098
1000ce98:	d9400117 	ldw	r5,4(sp)
1000ce9c:	1095f404 	addi	r2,r2,22480
1000cea0:	18800015 	stw	r2,0(r3)
1000cea4:	19000104 	addi	r4,r3,4
1000cea8:	00800044 	movi	r2,1
1000ceac:	d8800315 	stw	r2,12(sp)
1000ceb0:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000ceb4:	d9000204 	addi	r4,sp,8
1000ceb8:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000cebc:	dfc01017 	ldw	ra,64(sp)
1000cec0:	df000f17 	ldw	fp,60(sp)
1000cec4:	dec01104 	addi	sp,sp,68
1000cec8:	f800283a 	ret
1000cecc:	d8800417 	ldw	r2,16(sp)
1000ced0:	d9000017 	ldw	r4,0(sp)
1000ced4:	d8800115 	stw	r2,4(sp)
1000ced8:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000cedc:	d9000117 	ldw	r4,4(sp)
1000cee0:	00bfffc4 	movi	r2,-1
1000cee4:	d8800315 	stw	r2,12(sp)
1000cee8:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000ceec <_ZNSt12domain_errorC1ERKSs>:
1000ceec:	defffe04 	addi	sp,sp,-8
1000cef0:	dc000015 	stw	r16,0(sp)
1000cef4:	dfc00115 	stw	ra,4(sp)
1000cef8:	2021883a 	mov	r16,r4
1000cefc:	000ce440 	call	1000ce44 <_ZNSt11logic_errorC1ERKSs>
1000cf00:	008400b4 	movhi	r2,4098
1000cf04:	1095f904 	addi	r2,r2,22500
1000cf08:	80800015 	stw	r2,0(r16)
1000cf0c:	dfc00117 	ldw	ra,4(sp)
1000cf10:	dc000017 	ldw	r16,0(sp)
1000cf14:	dec00204 	addi	sp,sp,8
1000cf18:	f800283a 	ret

1000cf1c <_ZNSt16invalid_argumentC1ERKSs>:
1000cf1c:	defffe04 	addi	sp,sp,-8
1000cf20:	dc000015 	stw	r16,0(sp)
1000cf24:	dfc00115 	stw	ra,4(sp)
1000cf28:	2021883a 	mov	r16,r4
1000cf2c:	000ce440 	call	1000ce44 <_ZNSt11logic_errorC1ERKSs>
1000cf30:	008400b4 	movhi	r2,4098
1000cf34:	1095fe04 	addi	r2,r2,22520
1000cf38:	80800015 	stw	r2,0(r16)
1000cf3c:	dfc00117 	ldw	ra,4(sp)
1000cf40:	dc000017 	ldw	r16,0(sp)
1000cf44:	dec00204 	addi	sp,sp,8
1000cf48:	f800283a 	ret

1000cf4c <_ZNSt12length_errorC1ERKSs>:
1000cf4c:	defffe04 	addi	sp,sp,-8
1000cf50:	dc000015 	stw	r16,0(sp)
1000cf54:	dfc00115 	stw	ra,4(sp)
1000cf58:	2021883a 	mov	r16,r4
1000cf5c:	000ce440 	call	1000ce44 <_ZNSt11logic_errorC1ERKSs>
1000cf60:	008400b4 	movhi	r2,4098
1000cf64:	10960304 	addi	r2,r2,22540
1000cf68:	80800015 	stw	r2,0(r16)
1000cf6c:	dfc00117 	ldw	ra,4(sp)
1000cf70:	dc000017 	ldw	r16,0(sp)
1000cf74:	dec00204 	addi	sp,sp,8
1000cf78:	f800283a 	ret

1000cf7c <_ZNSt12out_of_rangeC1ERKSs>:
1000cf7c:	defffe04 	addi	sp,sp,-8
1000cf80:	dc000015 	stw	r16,0(sp)
1000cf84:	dfc00115 	stw	ra,4(sp)
1000cf88:	2021883a 	mov	r16,r4
1000cf8c:	000ce440 	call	1000ce44 <_ZNSt11logic_errorC1ERKSs>
1000cf90:	008400b4 	movhi	r2,4098
1000cf94:	10960804 	addi	r2,r2,22560
1000cf98:	80800015 	stw	r2,0(r16)
1000cf9c:	dfc00117 	ldw	ra,4(sp)
1000cfa0:	dc000017 	ldw	r16,0(sp)
1000cfa4:	dec00204 	addi	sp,sp,8
1000cfa8:	f800283a 	ret

1000cfac <_ZNSt13runtime_errorC1ERKSs>:
1000cfac:	01840074 	movhi	r6,4097
1000cfb0:	deffef04 	addi	sp,sp,-68
1000cfb4:	31a2a704 	addi	r6,r6,-30052
1000cfb8:	00c400b4 	movhi	r3,4098
1000cfbc:	00840074 	movhi	r2,4097
1000cfc0:	18d19984 	addi	r3,r3,18022
1000cfc4:	10b40d04 	addi	r2,r2,-12236
1000cfc8:	d9000015 	stw	r4,0(sp)
1000cfcc:	d9800815 	stw	r6,32(sp)
1000cfd0:	d9000204 	addi	r4,sp,8
1000cfd4:	d9800f04 	addi	r6,sp,60
1000cfd8:	d8c00915 	stw	r3,36(sp)
1000cfdc:	d8800b15 	stw	r2,44(sp)
1000cfe0:	d9400115 	stw	r5,4(sp)
1000cfe4:	dfc01015 	stw	ra,64(sp)
1000cfe8:	df000f15 	stw	fp,60(sp)
1000cfec:	d9800a15 	stw	r6,40(sp)
1000cff0:	dec00c15 	stw	sp,48(sp)
1000cff4:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000cff8:	d8c00017 	ldw	r3,0(sp)
1000cffc:	008400b4 	movhi	r2,4098
1000d000:	d9400117 	ldw	r5,4(sp)
1000d004:	10960d04 	addi	r2,r2,22580
1000d008:	18800015 	stw	r2,0(r3)
1000d00c:	19000104 	addi	r4,r3,4
1000d010:	00800044 	movi	r2,1
1000d014:	d8800315 	stw	r2,12(sp)
1000d018:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000d01c:	d9000204 	addi	r4,sp,8
1000d020:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000d024:	dfc01017 	ldw	ra,64(sp)
1000d028:	df000f17 	ldw	fp,60(sp)
1000d02c:	dec01104 	addi	sp,sp,68
1000d030:	f800283a 	ret
1000d034:	d8800417 	ldw	r2,16(sp)
1000d038:	d9000017 	ldw	r4,0(sp)
1000d03c:	d8800115 	stw	r2,4(sp)
1000d040:	000c6dc0 	call	1000c6dc <_ZNSt9exceptionD1Ev>
1000d044:	d9000117 	ldw	r4,4(sp)
1000d048:	00bfffc4 	movi	r2,-1
1000d04c:	d8800315 	stw	r2,12(sp)
1000d050:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000d054 <_ZNSt11range_errorC1ERKSs>:
1000d054:	defffe04 	addi	sp,sp,-8
1000d058:	dc000015 	stw	r16,0(sp)
1000d05c:	dfc00115 	stw	ra,4(sp)
1000d060:	2021883a 	mov	r16,r4
1000d064:	000cfac0 	call	1000cfac <_ZNSt13runtime_errorC1ERKSs>
1000d068:	008400b4 	movhi	r2,4098
1000d06c:	10961204 	addi	r2,r2,22600
1000d070:	80800015 	stw	r2,0(r16)
1000d074:	dfc00117 	ldw	ra,4(sp)
1000d078:	dc000017 	ldw	r16,0(sp)
1000d07c:	dec00204 	addi	sp,sp,8
1000d080:	f800283a 	ret

1000d084 <_ZNSt14overflow_errorC1ERKSs>:
1000d084:	defffe04 	addi	sp,sp,-8
1000d088:	dc000015 	stw	r16,0(sp)
1000d08c:	dfc00115 	stw	ra,4(sp)
1000d090:	2021883a 	mov	r16,r4
1000d094:	000cfac0 	call	1000cfac <_ZNSt13runtime_errorC1ERKSs>
1000d098:	008400b4 	movhi	r2,4098
1000d09c:	10961704 	addi	r2,r2,22620
1000d0a0:	80800015 	stw	r2,0(r16)
1000d0a4:	dfc00117 	ldw	ra,4(sp)
1000d0a8:	dc000017 	ldw	r16,0(sp)
1000d0ac:	dec00204 	addi	sp,sp,8
1000d0b0:	f800283a 	ret

1000d0b4 <_ZNSt15underflow_errorC1ERKSs>:
1000d0b4:	defffe04 	addi	sp,sp,-8
1000d0b8:	dc000015 	stw	r16,0(sp)
1000d0bc:	dfc00115 	stw	ra,4(sp)
1000d0c0:	2021883a 	mov	r16,r4
1000d0c4:	000cfac0 	call	1000cfac <_ZNSt13runtime_errorC1ERKSs>
1000d0c8:	008400b4 	movhi	r2,4098
1000d0cc:	10961c04 	addi	r2,r2,22640
1000d0d0:	80800015 	stw	r2,0(r16)
1000d0d4:	dfc00117 	ldw	ra,4(sp)
1000d0d8:	dc000017 	ldw	r16,0(sp)
1000d0dc:	dec00204 	addi	sp,sp,8
1000d0e0:	f800283a 	ret

1000d0e4 <_ZNSt12__sso_stringC1Ev>:
1000d0e4:	20800204 	addi	r2,r4,8
1000d0e8:	20800015 	stw	r2,0(r4)
1000d0ec:	20000115 	stw	zero,4(r4)
1000d0f0:	20000205 	stb	zero,8(r4)
1000d0f4:	f800283a 	ret

1000d0f8 <_ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
1000d0f8:	20c00204 	addi	r3,r4,8
1000d0fc:	20c00015 	stw	r3,0(r4)
1000d100:	28800017 	ldw	r2,0(r5)
1000d104:	29800117 	ldw	r6,4(r5)
1000d108:	000f883a 	mov	r7,zero
1000d10c:	100b883a 	mov	r5,r2
1000d110:	118d883a 	add	r6,r2,r6
1000d114:	0013a541 	jmpi	10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

1000d118 <_ZNSt12__sso_stringC1EPKcj>:
1000d118:	20c00204 	addi	r3,r4,8
1000d11c:	000f883a 	mov	r7,zero
1000d120:	298d883a 	add	r6,r5,r6
1000d124:	20c00015 	stw	r3,0(r4)
1000d128:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

1000d12c <_ZNSt12__sso_stringC1ERKS_>:
1000d12c:	defff004 	addi	sp,sp,-64
1000d130:	00c40074 	movhi	r3,4097
1000d134:	008400b4 	movhi	r2,4098
1000d138:	dc000d15 	stw	r16,52(sp)
1000d13c:	18e2a704 	addi	r3,r3,-30052
1000d140:	2021883a 	mov	r16,r4
1000d144:	10919b04 	addi	r2,r2,18028
1000d148:	d809883a 	mov	r4,sp
1000d14c:	dfc00f15 	stw	ra,60(sp)
1000d150:	dc400e15 	stw	r17,56(sp)
1000d154:	d8c00615 	stw	r3,24(sp)
1000d158:	2823883a 	mov	r17,r5
1000d15c:	d8800715 	stw	r2,28(sp)
1000d160:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000d164:	80800204 	addi	r2,r16,8
1000d168:	80800015 	stw	r2,0(r16)
1000d16c:	88800017 	ldw	r2,0(r17)
1000d170:	89800117 	ldw	r6,4(r17)
1000d174:	000f883a 	mov	r7,zero
1000d178:	100b883a 	mov	r5,r2
1000d17c:	118d883a 	add	r6,r2,r6
1000d180:	8009883a 	mov	r4,r16
1000d184:	d8000115 	stw	zero,4(sp)
1000d188:	0013a540 	call	10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
1000d18c:	d809883a 	mov	r4,sp
1000d190:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000d194:	dfc00f17 	ldw	ra,60(sp)
1000d198:	dc400e17 	ldw	r17,56(sp)
1000d19c:	dc000d17 	ldw	r16,52(sp)
1000d1a0:	dec01004 	addi	sp,sp,64
1000d1a4:	f800283a 	ret

1000d1a8 <_ZNSt12__sso_stringaSERKS_>:
1000d1a8:	defff004 	addi	sp,sp,-64
1000d1ac:	01840074 	movhi	r6,4097
1000d1b0:	00c400b4 	movhi	r3,4098
1000d1b4:	dc000e15 	stw	r16,56(sp)
1000d1b8:	31a2a704 	addi	r6,r6,-30052
1000d1bc:	18d19c04 	addi	r3,r3,18032
1000d1c0:	2021883a 	mov	r16,r4
1000d1c4:	d9000104 	addi	r4,sp,4
1000d1c8:	dfc00f15 	stw	ra,60(sp)
1000d1cc:	d9800715 	stw	r6,28(sp)
1000d1d0:	d8c00815 	stw	r3,32(sp)
1000d1d4:	d9400015 	stw	r5,0(sp)
1000d1d8:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000d1dc:	d9400017 	ldw	r5,0(sp)
1000d1e0:	8009883a 	mov	r4,r16
1000d1e4:	d8000215 	stw	zero,8(sp)
1000d1e8:	0010c2c0 	call	10010c2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
1000d1ec:	d9000104 	addi	r4,sp,4
1000d1f0:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000d1f4:	8005883a 	mov	r2,r16
1000d1f8:	dfc00f17 	ldw	ra,60(sp)
1000d1fc:	dc000e17 	ldw	r16,56(sp)
1000d200:	dec01004 	addi	sp,sp,64
1000d204:	f800283a 	ret

1000d208 <_ZNSt12__sso_stringD1Ev>:
1000d208:	20c00017 	ldw	r3,0(r4)
1000d20c:	20800204 	addi	r2,r4,8
1000d210:	18800226 	beq	r3,r2,1000d21c <_ZNSt12__sso_stringD1Ev+0x14>
1000d214:	1809883a 	mov	r4,r3
1000d218:	00085041 	jmpi	10008504 <_ZdlPv>
1000d21c:	f800283a 	ret

1000d220 <_ZNSt12__sso_stringC1EOS_>:
1000d220:	defffc04 	addi	sp,sp,-16
1000d224:	dc800215 	stw	r18,8(sp)
1000d228:	dc400115 	stw	r17,4(sp)
1000d22c:	dc000015 	stw	r16,0(sp)
1000d230:	dfc00315 	stw	ra,12(sp)
1000d234:	2023883a 	mov	r17,r4
1000d238:	21000204 	addi	r4,r4,8
1000d23c:	89000015 	stw	r4,0(r17)
1000d240:	28800017 	ldw	r2,0(r5)
1000d244:	2c800204 	addi	r18,r5,8
1000d248:	2821883a 	mov	r16,r5
1000d24c:	14800e26 	beq	r2,r18,1000d288 <_ZNSt12__sso_stringC1EOS_+0x68>
1000d250:	88800015 	stw	r2,0(r17)
1000d254:	28800217 	ldw	r2,8(r5)
1000d258:	88800215 	stw	r2,8(r17)
1000d25c:	80800117 	ldw	r2,4(r16)
1000d260:	88800115 	stw	r2,4(r17)
1000d264:	84800015 	stw	r18,0(r16)
1000d268:	80000115 	stw	zero,4(r16)
1000d26c:	80000205 	stb	zero,8(r16)
1000d270:	dfc00317 	ldw	ra,12(sp)
1000d274:	dc800217 	ldw	r18,8(sp)
1000d278:	dc400117 	ldw	r17,4(sp)
1000d27c:	dc000017 	ldw	r16,0(sp)
1000d280:	dec00404 	addi	sp,sp,16
1000d284:	f800283a 	ret
1000d288:	01800404 	movi	r6,16
1000d28c:	900b883a 	mov	r5,r18
1000d290:	00157f80 	call	100157f8 <memcpy>
1000d294:	003ff106 	br	1000d25c <_ZNSt12__sso_stringC1EOS_+0x3c>

1000d298 <_ZNSt12__sso_stringaSEOS_>:
1000d298:	defffd04 	addi	sp,sp,-12
1000d29c:	dc400115 	stw	r17,4(sp)
1000d2a0:	dc000015 	stw	r16,0(sp)
1000d2a4:	dfc00215 	stw	ra,8(sp)
1000d2a8:	2821883a 	mov	r16,r5
1000d2ac:	29400017 	ldw	r5,0(r5)
1000d2b0:	80800204 	addi	r2,r16,8
1000d2b4:	2023883a 	mov	r17,r4
1000d2b8:	21000017 	ldw	r4,0(r4)
1000d2bc:	28801a26 	beq	r5,r2,1000d328 <_ZNSt12__sso_stringaSEOS_+0x90>
1000d2c0:	88c00204 	addi	r3,r17,8
1000d2c4:	89400015 	stw	r5,0(r17)
1000d2c8:	20c01026 	beq	r4,r3,1000d30c <_ZNSt12__sso_stringaSEOS_+0x74>
1000d2cc:	81400117 	ldw	r5,4(r16)
1000d2d0:	88c00217 	ldw	r3,8(r17)
1000d2d4:	89400115 	stw	r5,4(r17)
1000d2d8:	81400217 	ldw	r5,8(r16)
1000d2dc:	89400215 	stw	r5,8(r17)
1000d2e0:	20000e26 	beq	r4,zero,1000d31c <_ZNSt12__sso_stringaSEOS_+0x84>
1000d2e4:	81000015 	stw	r4,0(r16)
1000d2e8:	80c00215 	stw	r3,8(r16)
1000d2ec:	80000115 	stw	zero,4(r16)
1000d2f0:	8805883a 	mov	r2,r17
1000d2f4:	20000005 	stb	zero,0(r4)
1000d2f8:	dfc00217 	ldw	ra,8(sp)
1000d2fc:	dc400117 	ldw	r17,4(sp)
1000d300:	dc000017 	ldw	r16,0(sp)
1000d304:	dec00304 	addi	sp,sp,12
1000d308:	f800283a 	ret
1000d30c:	80c00117 	ldw	r3,4(r16)
1000d310:	88c00115 	stw	r3,4(r17)
1000d314:	80c00217 	ldw	r3,8(r16)
1000d318:	88c00215 	stw	r3,8(r17)
1000d31c:	80800015 	stw	r2,0(r16)
1000d320:	1009883a 	mov	r4,r2
1000d324:	003ff106 	br	1000d2ec <_ZNSt12__sso_stringaSEOS_+0x54>
1000d328:	81800117 	ldw	r6,4(r16)
1000d32c:	30000526 	beq	r6,zero,1000d344 <_ZNSt12__sso_stringaSEOS_+0xac>
1000d330:	30800058 	cmpnei	r2,r6,1
1000d334:	10000826 	beq	r2,zero,1000d358 <_ZNSt12__sso_stringaSEOS_+0xc0>
1000d338:	00157f80 	call	100157f8 <memcpy>
1000d33c:	81800117 	ldw	r6,4(r16)
1000d340:	89000017 	ldw	r4,0(r17)
1000d344:	89800115 	stw	r6,4(r17)
1000d348:	2189883a 	add	r4,r4,r6
1000d34c:	20000005 	stb	zero,0(r4)
1000d350:	81000017 	ldw	r4,0(r16)
1000d354:	003fe506 	br	1000d2ec <_ZNSt12__sso_stringaSEOS_+0x54>
1000d358:	80800203 	ldbu	r2,8(r16)
1000d35c:	20800005 	stb	r2,0(r4)
1000d360:	81800117 	ldw	r6,4(r16)
1000d364:	89000017 	ldw	r4,0(r17)
1000d368:	003ff606 	br	1000d344 <_ZNSt12__sso_stringaSEOS_+0xac>

1000d36c <_ZNKSs7_M_dataEv>:
1000d36c:	20800017 	ldw	r2,0(r4)
1000d370:	f800283a 	ret

1000d374 <_ZNSs7_M_dataEPc>:
1000d374:	2805883a 	mov	r2,r5
1000d378:	21400015 	stw	r5,0(r4)
1000d37c:	f800283a 	ret

1000d380 <_ZNKSs6_M_repEv>:
1000d380:	20800017 	ldw	r2,0(r4)
1000d384:	10bffd04 	addi	r2,r2,-12
1000d388:	f800283a 	ret

1000d38c <_ZNKSs9_M_ibeginEv>:
1000d38c:	20800017 	ldw	r2,0(r4)
1000d390:	f800283a 	ret

1000d394 <_ZNKSs7_M_iendEv>:
1000d394:	20800017 	ldw	r2,0(r4)
1000d398:	10fffd17 	ldw	r3,-12(r2)
1000d39c:	10c5883a 	add	r2,r2,r3
1000d3a0:	f800283a 	ret

1000d3a4 <_ZNKSs8_M_checkEjPKc>:
1000d3a4:	20c00017 	ldw	r3,0(r4)
1000d3a8:	2805883a 	mov	r2,r5
1000d3ac:	19fffd17 	ldw	r7,-12(r3)
1000d3b0:	39400136 	bltu	r7,r5,1000d3b8 <_ZNKSs8_M_checkEjPKc+0x14>
1000d3b4:	f800283a 	ret
1000d3b8:	010400b4 	movhi	r4,4098
1000d3bc:	deffff04 	addi	sp,sp,-4
1000d3c0:	300b883a 	mov	r5,r6
1000d3c4:	21161f04 	addi	r4,r4,22652
1000d3c8:	100d883a 	mov	r6,r2
1000d3cc:	dfc00015 	stw	ra,0(sp)
1000d3d0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000d3d4 <_ZNKSs15_M_check_lengthEjjPKc>:
1000d3d4:	20c00017 	ldw	r3,0(r4)
1000d3d8:	00900034 	movhi	r2,16384
1000d3dc:	10bfff04 	addi	r2,r2,-4
1000d3e0:	18fffd17 	ldw	r3,-12(r3)
1000d3e4:	288b883a 	add	r5,r5,r2
1000d3e8:	28cbc83a 	sub	r5,r5,r3
1000d3ec:	29800136 	bltu	r5,r6,1000d3f4 <_ZNKSs15_M_check_lengthEjjPKc+0x20>
1000d3f0:	f800283a 	ret
1000d3f4:	deffff04 	addi	sp,sp,-4
1000d3f8:	3809883a 	mov	r4,r7
1000d3fc:	dfc00015 	stw	ra,0(sp)
1000d400:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000d404 <_ZNKSs8_M_limitEjj>:
1000d404:	20800017 	ldw	r2,0(r4)
1000d408:	10bffd17 	ldw	r2,-12(r2)
1000d40c:	1145c83a 	sub	r2,r2,r5
1000d410:	3080012e 	bgeu	r6,r2,1000d418 <_ZNKSs8_M_limitEjj+0x14>
1000d414:	3005883a 	mov	r2,r6
1000d418:	f800283a 	ret

1000d41c <_ZNKSs11_M_disjunctEPKc>:
1000d41c:	20800017 	ldw	r2,0(r4)
1000d420:	28800436 	bltu	r5,r2,1000d434 <_ZNKSs11_M_disjunctEPKc+0x18>
1000d424:	10fffd17 	ldw	r3,-12(r2)
1000d428:	10c5883a 	add	r2,r2,r3
1000d42c:	1145803a 	cmpltu	r2,r2,r5
1000d430:	f800283a 	ret
1000d434:	00800044 	movi	r2,1
1000d438:	f800283a 	ret

1000d43c <_ZNSs7_M_copyEPcPKcj>:
1000d43c:	30c00058 	cmpnei	r3,r6,1
1000d440:	18000326 	beq	r3,zero,1000d450 <_ZNSs7_M_copyEPcPKcj+0x14>
1000d444:	3000011e 	bne	r6,zero,1000d44c <_ZNSs7_M_copyEPcPKcj+0x10>
1000d448:	f800283a 	ret
1000d44c:	00157f81 	jmpi	100157f8 <memcpy>
1000d450:	28800003 	ldbu	r2,0(r5)
1000d454:	20800005 	stb	r2,0(r4)
1000d458:	f800283a 	ret

1000d45c <_ZNSs7_M_moveEPcPKcj>:
1000d45c:	30c00058 	cmpnei	r3,r6,1
1000d460:	18000326 	beq	r3,zero,1000d470 <_ZNSs7_M_moveEPcPKcj+0x14>
1000d464:	3000011e 	bne	r6,zero,1000d46c <_ZNSs7_M_moveEPcPKcj+0x10>
1000d468:	f800283a 	ret
1000d46c:	00158f81 	jmpi	100158f8 <memmove>
1000d470:	28800003 	ldbu	r2,0(r5)
1000d474:	20800005 	stb	r2,0(r4)
1000d478:	f800283a 	ret

1000d47c <_ZNSs9_M_assignEPcjc>:
1000d47c:	28800058 	cmpnei	r2,r5,1
1000d480:	200f883a 	mov	r7,r4
1000d484:	3007883a 	mov	r3,r6
1000d488:	10000726 	beq	r2,zero,1000d4a8 <_ZNSs9_M_assignEPcjc+0x2c>
1000d48c:	2800011e 	bne	r5,zero,1000d494 <_ZNSs9_M_assignEPcjc+0x18>
1000d490:	f800283a 	ret
1000d494:	280d883a 	mov	r6,r5
1000d498:	19403fcc 	andi	r5,r3,255
1000d49c:	2940201c 	xori	r5,r5,128
1000d4a0:	297fe004 	addi	r5,r5,-128
1000d4a4:	0015a241 	jmpi	10015a24 <memset>
1000d4a8:	39800005 	stb	r6,0(r7)
1000d4ac:	f800283a 	ret

1000d4b0 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_>:
1000d4b0:	314dc83a 	sub	r6,r6,r5
1000d4b4:	30c00058 	cmpnei	r3,r6,1
1000d4b8:	18000326 	beq	r3,zero,1000d4c8 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x18>
1000d4bc:	3000011e 	bne	r6,zero,1000d4c4 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_+0x14>
1000d4c0:	f800283a 	ret
1000d4c4:	00157f81 	jmpi	100157f8 <memcpy>
1000d4c8:	28800003 	ldbu	r2,0(r5)
1000d4cc:	20800005 	stb	r2,0(r4)
1000d4d0:	f800283a 	ret

1000d4d4 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_>:
1000d4d4:	314dc83a 	sub	r6,r6,r5
1000d4d8:	30c00058 	cmpnei	r3,r6,1
1000d4dc:	18000326 	beq	r3,zero,1000d4ec <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x18>
1000d4e0:	3000011e 	bne	r6,zero,1000d4e8 <_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_+0x14>
1000d4e4:	f800283a 	ret
1000d4e8:	00157f81 	jmpi	100157f8 <memcpy>
1000d4ec:	28800003 	ldbu	r2,0(r5)
1000d4f0:	20800005 	stb	r2,0(r4)
1000d4f4:	f800283a 	ret

1000d4f8 <_ZNSs13_S_copy_charsEPcS_S_>:
1000d4f8:	314dc83a 	sub	r6,r6,r5
1000d4fc:	30c00058 	cmpnei	r3,r6,1
1000d500:	18000326 	beq	r3,zero,1000d510 <_ZNSs13_S_copy_charsEPcS_S_+0x18>
1000d504:	3000011e 	bne	r6,zero,1000d50c <_ZNSs13_S_copy_charsEPcS_S_+0x14>
1000d508:	f800283a 	ret
1000d50c:	00157f81 	jmpi	100157f8 <memcpy>
1000d510:	28800003 	ldbu	r2,0(r5)
1000d514:	20800005 	stb	r2,0(r4)
1000d518:	f800283a 	ret

1000d51c <_ZNSs13_S_copy_charsEPcPKcS1_>:
1000d51c:	314dc83a 	sub	r6,r6,r5
1000d520:	30c00058 	cmpnei	r3,r6,1
1000d524:	18000326 	beq	r3,zero,1000d534 <_ZNSs13_S_copy_charsEPcPKcS1_+0x18>
1000d528:	3000011e 	bne	r6,zero,1000d530 <_ZNSs13_S_copy_charsEPcPKcS1_+0x14>
1000d52c:	f800283a 	ret
1000d530:	00157f81 	jmpi	100157f8 <memcpy>
1000d534:	28800003 	ldbu	r2,0(r5)
1000d538:	20800005 	stb	r2,0(r4)
1000d53c:	f800283a 	ret

1000d540 <_ZNSs10_S_compareEjj>:
1000d540:	2145c83a 	sub	r2,r4,r5
1000d544:	f800283a 	ret

1000d548 <_ZNSs12_S_empty_repEv>:
1000d548:	008400f4 	movhi	r2,4099
1000d54c:	10aac004 	addi	r2,r2,-21760
1000d550:	f800283a 	ret

1000d554 <_ZNSsC1Ev>:
1000d554:	008400f4 	movhi	r2,4099
1000d558:	10aac304 	addi	r2,r2,-21748
1000d55c:	20800015 	stw	r2,0(r4)
1000d560:	f800283a 	ret

1000d564 <_ZNSsC1EOSs>:
1000d564:	28c00017 	ldw	r3,0(r5)
1000d568:	008400f4 	movhi	r2,4099
1000d56c:	10aac304 	addi	r2,r2,-21748
1000d570:	20c00015 	stw	r3,0(r4)
1000d574:	28800015 	stw	r2,0(r5)
1000d578:	f800283a 	ret

1000d57c <_ZNKSs5beginEv>:
1000d57c:	20800017 	ldw	r2,0(r4)
1000d580:	f800283a 	ret

1000d584 <_ZNKSs3endEv>:
1000d584:	20800017 	ldw	r2,0(r4)
1000d588:	10fffd17 	ldw	r3,-12(r2)
1000d58c:	10c5883a 	add	r2,r2,r3
1000d590:	f800283a 	ret

1000d594 <_ZNKSs6rbeginEv>:
1000d594:	28c00017 	ldw	r3,0(r5)
1000d598:	2005883a 	mov	r2,r4
1000d59c:	197ffd17 	ldw	r5,-12(r3)
1000d5a0:	1947883a 	add	r3,r3,r5
1000d5a4:	20c00015 	stw	r3,0(r4)
1000d5a8:	f800283a 	ret

1000d5ac <_ZNKSs4rendEv>:
1000d5ac:	28c00017 	ldw	r3,0(r5)
1000d5b0:	2005883a 	mov	r2,r4
1000d5b4:	20c00015 	stw	r3,0(r4)
1000d5b8:	f800283a 	ret

1000d5bc <_ZNKSs6cbeginEv>:
1000d5bc:	20800017 	ldw	r2,0(r4)
1000d5c0:	f800283a 	ret

1000d5c4 <_ZNKSs4cendEv>:
1000d5c4:	20800017 	ldw	r2,0(r4)
1000d5c8:	10fffd17 	ldw	r3,-12(r2)
1000d5cc:	10c5883a 	add	r2,r2,r3
1000d5d0:	f800283a 	ret

1000d5d4 <_ZNKSs7crbeginEv>:
1000d5d4:	28c00017 	ldw	r3,0(r5)
1000d5d8:	2005883a 	mov	r2,r4
1000d5dc:	197ffd17 	ldw	r5,-12(r3)
1000d5e0:	1947883a 	add	r3,r3,r5
1000d5e4:	20c00015 	stw	r3,0(r4)
1000d5e8:	f800283a 	ret

1000d5ec <_ZNKSs5crendEv>:
1000d5ec:	28c00017 	ldw	r3,0(r5)
1000d5f0:	2005883a 	mov	r2,r4
1000d5f4:	20c00015 	stw	r3,0(r4)
1000d5f8:	f800283a 	ret

1000d5fc <_ZNKSs4sizeEv>:
1000d5fc:	20800017 	ldw	r2,0(r4)
1000d600:	10bffd17 	ldw	r2,-12(r2)
1000d604:	f800283a 	ret

1000d608 <_ZNKSs6lengthEv>:
1000d608:	20800017 	ldw	r2,0(r4)
1000d60c:	10bffd17 	ldw	r2,-12(r2)
1000d610:	f800283a 	ret

1000d614 <_ZNKSs8max_sizeEv>:
1000d614:	00900034 	movhi	r2,16384
1000d618:	10bfff04 	addi	r2,r2,-4
1000d61c:	f800283a 	ret

1000d620 <_ZNKSs8capacityEv>:
1000d620:	20800017 	ldw	r2,0(r4)
1000d624:	10bffe17 	ldw	r2,-8(r2)
1000d628:	f800283a 	ret

1000d62c <_ZNKSs5emptyEv>:
1000d62c:	20800017 	ldw	r2,0(r4)
1000d630:	10bffd17 	ldw	r2,-12(r2)
1000d634:	1005003a 	cmpeq	r2,r2,zero
1000d638:	f800283a 	ret

1000d63c <_ZNKSsixEj>:
1000d63c:	20800017 	ldw	r2,0(r4)
1000d640:	1145883a 	add	r2,r2,r5
1000d644:	f800283a 	ret

1000d648 <_ZNKSs2atEj>:
1000d648:	20c00017 	ldw	r3,0(r4)
1000d64c:	19bffd17 	ldw	r6,-12(r3)
1000d650:	2980022e 	bgeu	r5,r6,1000d65c <_ZNKSs2atEj+0x14>
1000d654:	1945883a 	add	r2,r3,r5
1000d658:	f800283a 	ret
1000d65c:	010400b4 	movhi	r4,4098
1000d660:	deffff04 	addi	sp,sp,-4
1000d664:	21162d04 	addi	r4,r4,22708
1000d668:	dfc00015 	stw	ra,0(sp)
1000d66c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000d670 <_ZNKSs5frontEv>:
1000d670:	20800017 	ldw	r2,0(r4)
1000d674:	f800283a 	ret

1000d678 <_ZNKSs4backEv>:
1000d678:	20c00017 	ldw	r3,0(r4)
1000d67c:	18bffd17 	ldw	r2,-12(r3)
1000d680:	10bfffc4 	addi	r2,r2,-1
1000d684:	1885883a 	add	r2,r3,r2
1000d688:	f800283a 	ret

1000d68c <_ZNKSs4copyEPcjj>:
1000d68c:	20c00017 	ldw	r3,0(r4)
1000d690:	defffe04 	addi	sp,sp,-8
1000d694:	dc000015 	stw	r16,0(sp)
1000d698:	1c3ffd17 	ldw	r16,-12(r3)
1000d69c:	dfc00115 	stw	ra,4(sp)
1000d6a0:	3805883a 	mov	r2,r7
1000d6a4:	81c01436 	bltu	r16,r7,1000d6f8 <_ZNKSs4copyEPcjj+0x6c>
1000d6a8:	81e1c83a 	sub	r16,r16,r7
1000d6ac:	2809883a 	mov	r4,r5
1000d6b0:	34000b36 	bltu	r6,r16,1000d6e0 <_ZNKSs4copyEPcjj+0x54>
1000d6b4:	80000526 	beq	r16,zero,1000d6cc <_ZNKSs4copyEPcjj+0x40>
1000d6b8:	81800058 	cmpnei	r6,r16,1
1000d6bc:	188b883a 	add	r5,r3,r2
1000d6c0:	30000a26 	beq	r6,zero,1000d6ec <_ZNKSs4copyEPcjj+0x60>
1000d6c4:	800d883a 	mov	r6,r16
1000d6c8:	00157f80 	call	100157f8 <memcpy>
1000d6cc:	8005883a 	mov	r2,r16
1000d6d0:	dfc00117 	ldw	ra,4(sp)
1000d6d4:	dc000017 	ldw	r16,0(sp)
1000d6d8:	dec00204 	addi	sp,sp,8
1000d6dc:	f800283a 	ret
1000d6e0:	3021883a 	mov	r16,r6
1000d6e4:	803ff926 	beq	r16,zero,1000d6cc <_ZNKSs4copyEPcjj+0x40>
1000d6e8:	003ff306 	br	1000d6b8 <_ZNKSs4copyEPcjj+0x2c>
1000d6ec:	28800003 	ldbu	r2,0(r5)
1000d6f0:	20800005 	stb	r2,0(r4)
1000d6f4:	003ff506 	br	1000d6cc <_ZNKSs4copyEPcjj+0x40>
1000d6f8:	014400b4 	movhi	r5,4098
1000d6fc:	010400b4 	movhi	r4,4098
1000d700:	800f883a 	mov	r7,r16
1000d704:	100d883a 	mov	r6,r2
1000d708:	29563e04 	addi	r5,r5,22776
1000d70c:	21161f04 	addi	r4,r4,22652
1000d710:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000d714 <_ZNSs4swapERSs>:
1000d714:	20800017 	ldw	r2,0(r4)
1000d718:	10ffff17 	ldw	r3,-4(r2)
1000d71c:	1800010e 	bge	r3,zero,1000d724 <_ZNSs4swapERSs+0x10>
1000d720:	103fff15 	stw	zero,-4(r2)
1000d724:	28c00017 	ldw	r3,0(r5)
1000d728:	19bfff17 	ldw	r6,-4(r3)
1000d72c:	3000010e 	bge	r6,zero,1000d734 <_ZNSs4swapERSs+0x20>
1000d730:	183fff15 	stw	zero,-4(r3)
1000d734:	20c00015 	stw	r3,0(r4)
1000d738:	28800015 	stw	r2,0(r5)
1000d73c:	f800283a 	ret

1000d740 <_ZNSsaSEOSs>:
1000d740:	defffe04 	addi	sp,sp,-8
1000d744:	dc000015 	stw	r16,0(sp)
1000d748:	dfc00115 	stw	ra,4(sp)
1000d74c:	2021883a 	mov	r16,r4
1000d750:	000d7140 	call	1000d714 <_ZNSs4swapERSs>
1000d754:	8005883a 	mov	r2,r16
1000d758:	dfc00117 	ldw	ra,4(sp)
1000d75c:	dc000017 	ldw	r16,0(sp)
1000d760:	dec00204 	addi	sp,sp,8
1000d764:	f800283a 	ret

1000d768 <_ZNSs6assignEOSs>:
1000d768:	defffe04 	addi	sp,sp,-8
1000d76c:	dc000015 	stw	r16,0(sp)
1000d770:	dfc00115 	stw	ra,4(sp)
1000d774:	2021883a 	mov	r16,r4
1000d778:	000d7140 	call	1000d714 <_ZNSs4swapERSs>
1000d77c:	8005883a 	mov	r2,r16
1000d780:	dfc00117 	ldw	ra,4(sp)
1000d784:	dc000017 	ldw	r16,0(sp)
1000d788:	dec00204 	addi	sp,sp,8
1000d78c:	f800283a 	ret

1000d790 <_ZNKSs5c_strEv>:
1000d790:	20800017 	ldw	r2,0(r4)
1000d794:	f800283a 	ret

1000d798 <_ZNKSs4dataEv>:
1000d798:	20800017 	ldw	r2,0(r4)
1000d79c:	f800283a 	ret

1000d7a0 <_ZNKSs13get_allocatorEv>:
1000d7a0:	2005883a 	mov	r2,r4
1000d7a4:	f800283a 	ret

1000d7a8 <_ZNKSs4findEPKcjj>:
1000d7a8:	defff804 	addi	sp,sp,-32
1000d7ac:	dd000415 	stw	r20,16(sp)
1000d7b0:	25000017 	ldw	r20,0(r4)
1000d7b4:	dc800215 	stw	r18,8(sp)
1000d7b8:	dfc00715 	stw	ra,28(sp)
1000d7bc:	dd800615 	stw	r22,24(sp)
1000d7c0:	dd400515 	stw	r21,20(sp)
1000d7c4:	dcc00315 	stw	r19,12(sp)
1000d7c8:	dc400115 	stw	r17,4(sp)
1000d7cc:	dc000015 	stw	r16,0(sp)
1000d7d0:	a4bffd17 	ldw	r18,-12(r20)
1000d7d4:	38002526 	beq	r7,zero,1000d86c <_ZNKSs4findEPKcjj+0xc4>
1000d7d8:	3480192e 	bgeu	r6,r18,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d7dc:	9185c83a 	sub	r2,r18,r6
1000d7e0:	a189883a 	add	r4,r20,r6
1000d7e4:	a4a5883a 	add	r18,r20,r18
1000d7e8:	11c01536 	bltu	r2,r7,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d7ec:	05400044 	movi	r21,1
1000d7f0:	a9ebc83a 	sub	r21,r21,r7
1000d7f4:	a88d883a 	add	r6,r21,r2
1000d7f8:	30001126 	beq	r6,zero,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d7fc:	2d800007 	ldb	r22,0(r5)
1000d800:	2827883a 	mov	r19,r5
1000d804:	3821883a 	mov	r16,r7
1000d808:	b00b883a 	mov	r5,r22
1000d80c:	00156840 	call	10015684 <memchr>
1000d810:	1023883a 	mov	r17,r2
1000d814:	800d883a 	mov	r6,r16
1000d818:	980b883a 	mov	r5,r19
1000d81c:	1009883a 	mov	r4,r2
1000d820:	10000726 	beq	r2,zero,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d824:	001576c0 	call	1001576c <memcmp>
1000d828:	89000044 	addi	r4,r17,1
1000d82c:	9107c83a 	sub	r3,r18,r4
1000d830:	a8cd883a 	add	r6,r21,r3
1000d834:	10001026 	beq	r2,zero,1000d878 <_ZNKSs4findEPKcjj+0xd0>
1000d838:	1c000136 	bltu	r3,r16,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d83c:	303ff21e 	bne	r6,zero,1000d808 <_ZNKSs4findEPKcjj+0x60>
1000d840:	00bfffc4 	movi	r2,-1
1000d844:	dfc00717 	ldw	ra,28(sp)
1000d848:	dd800617 	ldw	r22,24(sp)
1000d84c:	dd400517 	ldw	r21,20(sp)
1000d850:	dd000417 	ldw	r20,16(sp)
1000d854:	dcc00317 	ldw	r19,12(sp)
1000d858:	dc800217 	ldw	r18,8(sp)
1000d85c:	dc400117 	ldw	r17,4(sp)
1000d860:	dc000017 	ldw	r16,0(sp)
1000d864:	dec00804 	addi	sp,sp,32
1000d868:	f800283a 	ret
1000d86c:	91bff436 	bltu	r18,r6,1000d840 <_ZNKSs4findEPKcjj+0x98>
1000d870:	3005883a 	mov	r2,r6
1000d874:	003ff306 	br	1000d844 <_ZNKSs4findEPKcjj+0x9c>
1000d878:	8d05c83a 	sub	r2,r17,r20
1000d87c:	003ff106 	br	1000d844 <_ZNKSs4findEPKcjj+0x9c>

1000d880 <_ZNKSs4findERKSsj>:
1000d880:	29400017 	ldw	r5,0(r5)
1000d884:	29fffd17 	ldw	r7,-12(r5)
1000d888:	000d7a81 	jmpi	1000d7a8 <_ZNKSs4findEPKcjj>

1000d88c <_ZNKSs4findEPKcj>:
1000d88c:	defffc04 	addi	sp,sp,-16
1000d890:	dc000215 	stw	r16,8(sp)
1000d894:	2021883a 	mov	r16,r4
1000d898:	2809883a 	mov	r4,r5
1000d89c:	dfc00315 	stw	ra,12(sp)
1000d8a0:	d9800115 	stw	r6,4(sp)
1000d8a4:	d9400015 	stw	r5,0(sp)
1000d8a8:	00164b40 	call	100164b4 <strlen>
1000d8ac:	d9800117 	ldw	r6,4(sp)
1000d8b0:	d9400017 	ldw	r5,0(sp)
1000d8b4:	100f883a 	mov	r7,r2
1000d8b8:	8009883a 	mov	r4,r16
1000d8bc:	dfc00317 	ldw	ra,12(sp)
1000d8c0:	dc000217 	ldw	r16,8(sp)
1000d8c4:	dec00404 	addi	sp,sp,16
1000d8c8:	000d7a81 	jmpi	1000d7a8 <_ZNKSs4findEPKcjj>

1000d8cc <_ZNKSs4findEcj>:
1000d8cc:	defffe04 	addi	sp,sp,-8
1000d8d0:	dc000015 	stw	r16,0(sp)
1000d8d4:	24000017 	ldw	r16,0(r4)
1000d8d8:	dfc00115 	stw	ra,4(sp)
1000d8dc:	80bffd17 	ldw	r2,-12(r16)
1000d8e0:	30800d2e 	bgeu	r6,r2,1000d918 <_ZNKSs4findEcj+0x4c>
1000d8e4:	29403fcc 	andi	r5,r5,255
1000d8e8:	3009883a 	mov	r4,r6
1000d8ec:	2940201c 	xori	r5,r5,128
1000d8f0:	118dc83a 	sub	r6,r2,r6
1000d8f4:	297fe004 	addi	r5,r5,-128
1000d8f8:	8109883a 	add	r4,r16,r4
1000d8fc:	00156840 	call	10015684 <memchr>
1000d900:	10000526 	beq	r2,zero,1000d918 <_ZNKSs4findEcj+0x4c>
1000d904:	1405c83a 	sub	r2,r2,r16
1000d908:	dfc00117 	ldw	ra,4(sp)
1000d90c:	dc000017 	ldw	r16,0(sp)
1000d910:	dec00204 	addi	sp,sp,8
1000d914:	f800283a 	ret
1000d918:	00bfffc4 	movi	r2,-1
1000d91c:	dfc00117 	ldw	ra,4(sp)
1000d920:	dc000017 	ldw	r16,0(sp)
1000d924:	dec00204 	addi	sp,sp,8
1000d928:	f800283a 	ret

1000d92c <_ZNKSs5rfindEPKcjj>:
1000d92c:	defffb04 	addi	sp,sp,-20
1000d930:	dcc00315 	stw	r19,12(sp)
1000d934:	24c00017 	ldw	r19,0(r4)
1000d938:	dc000015 	stw	r16,0(sp)
1000d93c:	dfc00415 	stw	ra,16(sp)
1000d940:	9c3ffd17 	ldw	r16,-12(r19)
1000d944:	dc800215 	stw	r18,8(sp)
1000d948:	dc400115 	stw	r17,4(sp)
1000d94c:	81c01b36 	bltu	r16,r7,1000d9bc <_ZNKSs5rfindEPKcjj+0x90>
1000d950:	81e1c83a 	sub	r16,r16,r7
1000d954:	2825883a 	mov	r18,r5
1000d958:	3823883a 	mov	r17,r7
1000d95c:	34001536 	bltu	r6,r16,1000d9b4 <_ZNKSs5rfindEPKcjj+0x88>
1000d960:	9c09883a 	add	r4,r19,r16
1000d964:	880d883a 	mov	r6,r17
1000d968:	900b883a 	mov	r5,r18
1000d96c:	88000926 	beq	r17,zero,1000d994 <_ZNKSs5rfindEPKcjj+0x68>
1000d970:	001576c0 	call	1001576c <memcmp>
1000d974:	10000726 	beq	r2,zero,1000d994 <_ZNKSs5rfindEPKcjj+0x68>
1000d978:	80bfffc4 	addi	r2,r16,-1
1000d97c:	80000f26 	beq	r16,zero,1000d9bc <_ZNKSs5rfindEPKcjj+0x90>
1000d980:	1021883a 	mov	r16,r2
1000d984:	9c09883a 	add	r4,r19,r16
1000d988:	880d883a 	mov	r6,r17
1000d98c:	900b883a 	mov	r5,r18
1000d990:	883ff71e 	bne	r17,zero,1000d970 <_ZNKSs5rfindEPKcjj+0x44>
1000d994:	8005883a 	mov	r2,r16
1000d998:	dfc00417 	ldw	ra,16(sp)
1000d99c:	dcc00317 	ldw	r19,12(sp)
1000d9a0:	dc800217 	ldw	r18,8(sp)
1000d9a4:	dc400117 	ldw	r17,4(sp)
1000d9a8:	dc000017 	ldw	r16,0(sp)
1000d9ac:	dec00504 	addi	sp,sp,20
1000d9b0:	f800283a 	ret
1000d9b4:	3021883a 	mov	r16,r6
1000d9b8:	003fe906 	br	1000d960 <_ZNKSs5rfindEPKcjj+0x34>
1000d9bc:	043fffc4 	movi	r16,-1
1000d9c0:	003ff406 	br	1000d994 <_ZNKSs5rfindEPKcjj+0x68>

1000d9c4 <_ZNKSs5rfindERKSsj>:
1000d9c4:	29400017 	ldw	r5,0(r5)
1000d9c8:	29fffd17 	ldw	r7,-12(r5)
1000d9cc:	000d92c1 	jmpi	1000d92c <_ZNKSs5rfindEPKcjj>

1000d9d0 <_ZNKSs5rfindEPKcj>:
1000d9d0:	defffc04 	addi	sp,sp,-16
1000d9d4:	dc000215 	stw	r16,8(sp)
1000d9d8:	2021883a 	mov	r16,r4
1000d9dc:	2809883a 	mov	r4,r5
1000d9e0:	dfc00315 	stw	ra,12(sp)
1000d9e4:	d9800115 	stw	r6,4(sp)
1000d9e8:	d9400015 	stw	r5,0(sp)
1000d9ec:	00164b40 	call	100164b4 <strlen>
1000d9f0:	d9800117 	ldw	r6,4(sp)
1000d9f4:	d9400017 	ldw	r5,0(sp)
1000d9f8:	100f883a 	mov	r7,r2
1000d9fc:	8009883a 	mov	r4,r16
1000da00:	dfc00317 	ldw	ra,12(sp)
1000da04:	dc000217 	ldw	r16,8(sp)
1000da08:	dec00404 	addi	sp,sp,16
1000da0c:	000d92c1 	jmpi	1000d92c <_ZNKSs5rfindEPKcjj>

1000da10 <_ZNKSs5rfindEcj>:
1000da10:	21000017 	ldw	r4,0(r4)
1000da14:	20bffd17 	ldw	r2,-12(r4)
1000da18:	10000e26 	beq	r2,zero,1000da54 <_ZNKSs5rfindEcj+0x44>
1000da1c:	10bfffc4 	addi	r2,r2,-1
1000da20:	30800a36 	bltu	r6,r2,1000da4c <_ZNKSs5rfindEcj+0x3c>
1000da24:	29403fcc 	andi	r5,r5,255
1000da28:	2940201c 	xori	r5,r5,128
1000da2c:	297fe004 	addi	r5,r5,-128
1000da30:	2087883a 	add	r3,r4,r2
1000da34:	18c00007 	ldb	r3,0(r3)
1000da38:	19400826 	beq	r3,r5,1000da5c <_ZNKSs5rfindEcj+0x4c>
1000da3c:	10bfffc4 	addi	r2,r2,-1
1000da40:	10ffffe0 	cmpeqi	r3,r2,-1
1000da44:	183ffa26 	beq	r3,zero,1000da30 <_ZNKSs5rfindEcj+0x20>
1000da48:	f800283a 	ret
1000da4c:	3005883a 	mov	r2,r6
1000da50:	003ff406 	br	1000da24 <_ZNKSs5rfindEcj+0x14>
1000da54:	00bfffc4 	movi	r2,-1
1000da58:	f800283a 	ret
1000da5c:	f800283a 	ret

1000da60 <_ZNKSs13find_first_ofEPKcjj>:
1000da60:	38002126 	beq	r7,zero,1000dae8 <_ZNKSs13find_first_ofEPKcjj+0x88>
1000da64:	defffa04 	addi	sp,sp,-24
1000da68:	dc800215 	stw	r18,8(sp)
1000da6c:	24800017 	ldw	r18,0(r4)
1000da70:	dcc00315 	stw	r19,12(sp)
1000da74:	dd000415 	stw	r20,16(sp)
1000da78:	94fffd17 	ldw	r19,-12(r18)
1000da7c:	dc400115 	stw	r17,4(sp)
1000da80:	dc000015 	stw	r16,0(sp)
1000da84:	dfc00515 	stw	ra,20(sp)
1000da88:	3823883a 	mov	r17,r7
1000da8c:	2829883a 	mov	r20,r5
1000da90:	3021883a 	mov	r16,r6
1000da94:	34c00336 	bltu	r6,r19,1000daa4 <_ZNKSs13find_first_ofEPKcjj+0x44>
1000da98:	00001106 	br	1000dae0 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000da9c:	84000044 	addi	r16,r16,1
1000daa0:	84c00f26 	beq	r16,r19,1000dae0 <_ZNKSs13find_first_ofEPKcjj+0x80>
1000daa4:	9405883a 	add	r2,r18,r16
1000daa8:	11400007 	ldb	r5,0(r2)
1000daac:	880d883a 	mov	r6,r17
1000dab0:	a009883a 	mov	r4,r20
1000dab4:	00156840 	call	10015684 <memchr>
1000dab8:	103ff826 	beq	r2,zero,1000da9c <_ZNKSs13find_first_ofEPKcjj+0x3c>
1000dabc:	8005883a 	mov	r2,r16
1000dac0:	dfc00517 	ldw	ra,20(sp)
1000dac4:	dd000417 	ldw	r20,16(sp)
1000dac8:	dcc00317 	ldw	r19,12(sp)
1000dacc:	dc800217 	ldw	r18,8(sp)
1000dad0:	dc400117 	ldw	r17,4(sp)
1000dad4:	dc000017 	ldw	r16,0(sp)
1000dad8:	dec00604 	addi	sp,sp,24
1000dadc:	f800283a 	ret
1000dae0:	00bfffc4 	movi	r2,-1
1000dae4:	003ff606 	br	1000dac0 <_ZNKSs13find_first_ofEPKcjj+0x60>
1000dae8:	00bfffc4 	movi	r2,-1
1000daec:	f800283a 	ret

1000daf0 <_ZNKSs13find_first_ofERKSsj>:
1000daf0:	29400017 	ldw	r5,0(r5)
1000daf4:	29fffd17 	ldw	r7,-12(r5)
1000daf8:	000da601 	jmpi	1000da60 <_ZNKSs13find_first_ofEPKcjj>

1000dafc <_ZNKSs13find_first_ofEPKcj>:
1000dafc:	defffc04 	addi	sp,sp,-16
1000db00:	dc000215 	stw	r16,8(sp)
1000db04:	2021883a 	mov	r16,r4
1000db08:	2809883a 	mov	r4,r5
1000db0c:	dfc00315 	stw	ra,12(sp)
1000db10:	d9800115 	stw	r6,4(sp)
1000db14:	d9400015 	stw	r5,0(sp)
1000db18:	00164b40 	call	100164b4 <strlen>
1000db1c:	d9800117 	ldw	r6,4(sp)
1000db20:	d9400017 	ldw	r5,0(sp)
1000db24:	100f883a 	mov	r7,r2
1000db28:	8009883a 	mov	r4,r16
1000db2c:	dfc00317 	ldw	ra,12(sp)
1000db30:	dc000217 	ldw	r16,8(sp)
1000db34:	dec00404 	addi	sp,sp,16
1000db38:	000da601 	jmpi	1000da60 <_ZNKSs13find_first_ofEPKcjj>

1000db3c <_ZNKSs13find_first_ofEcj>:
1000db3c:	29403fcc 	andi	r5,r5,255
1000db40:	2940201c 	xori	r5,r5,128
1000db44:	297fe004 	addi	r5,r5,-128
1000db48:	000d8cc1 	jmpi	1000d8cc <_ZNKSs4findEcj>

1000db4c <_ZNKSs12find_last_ofEPKcjj>:
1000db4c:	defffb04 	addi	sp,sp,-20
1000db50:	dc800215 	stw	r18,8(sp)
1000db54:	24800017 	ldw	r18,0(r4)
1000db58:	dc000015 	stw	r16,0(sp)
1000db5c:	dfc00415 	stw	ra,16(sp)
1000db60:	943ffd17 	ldw	r16,-12(r18)
1000db64:	dcc00315 	stw	r19,12(sp)
1000db68:	dc400115 	stw	r17,4(sp)
1000db6c:	80001126 	beq	r16,zero,1000dbb4 <_ZNKSs12find_last_ofEPKcjj+0x68>
1000db70:	38001026 	beq	r7,zero,1000dbb4 <_ZNKSs12find_last_ofEPKcjj+0x68>
1000db74:	843fffc4 	addi	r16,r16,-1
1000db78:	3823883a 	mov	r17,r7
1000db7c:	2827883a 	mov	r19,r5
1000db80:	3400052e 	bgeu	r6,r16,1000db98 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000db84:	3021883a 	mov	r16,r6
1000db88:	00000306 	br	1000db98 <_ZNKSs12find_last_ofEPKcjj+0x4c>
1000db8c:	843fffc4 	addi	r16,r16,-1
1000db90:	80bfffd8 	cmpnei	r2,r16,-1
1000db94:	10000826 	beq	r2,zero,1000dbb8 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000db98:	9405883a 	add	r2,r18,r16
1000db9c:	11400007 	ldb	r5,0(r2)
1000dba0:	880d883a 	mov	r6,r17
1000dba4:	9809883a 	mov	r4,r19
1000dba8:	00156840 	call	10015684 <memchr>
1000dbac:	103ff726 	beq	r2,zero,1000db8c <_ZNKSs12find_last_ofEPKcjj+0x40>
1000dbb0:	00000106 	br	1000dbb8 <_ZNKSs12find_last_ofEPKcjj+0x6c>
1000dbb4:	043fffc4 	movi	r16,-1
1000dbb8:	8005883a 	mov	r2,r16
1000dbbc:	dfc00417 	ldw	ra,16(sp)
1000dbc0:	dcc00317 	ldw	r19,12(sp)
1000dbc4:	dc800217 	ldw	r18,8(sp)
1000dbc8:	dc400117 	ldw	r17,4(sp)
1000dbcc:	dc000017 	ldw	r16,0(sp)
1000dbd0:	dec00504 	addi	sp,sp,20
1000dbd4:	f800283a 	ret

1000dbd8 <_ZNKSs12find_last_ofERKSsj>:
1000dbd8:	29400017 	ldw	r5,0(r5)
1000dbdc:	29fffd17 	ldw	r7,-12(r5)
1000dbe0:	000db4c1 	jmpi	1000db4c <_ZNKSs12find_last_ofEPKcjj>

1000dbe4 <_ZNKSs12find_last_ofEPKcj>:
1000dbe4:	defffc04 	addi	sp,sp,-16
1000dbe8:	dc000215 	stw	r16,8(sp)
1000dbec:	2021883a 	mov	r16,r4
1000dbf0:	2809883a 	mov	r4,r5
1000dbf4:	dfc00315 	stw	ra,12(sp)
1000dbf8:	d9800115 	stw	r6,4(sp)
1000dbfc:	d9400015 	stw	r5,0(sp)
1000dc00:	00164b40 	call	100164b4 <strlen>
1000dc04:	d9800117 	ldw	r6,4(sp)
1000dc08:	d9400017 	ldw	r5,0(sp)
1000dc0c:	100f883a 	mov	r7,r2
1000dc10:	8009883a 	mov	r4,r16
1000dc14:	dfc00317 	ldw	ra,12(sp)
1000dc18:	dc000217 	ldw	r16,8(sp)
1000dc1c:	dec00404 	addi	sp,sp,16
1000dc20:	000db4c1 	jmpi	1000db4c <_ZNKSs12find_last_ofEPKcjj>

1000dc24 <_ZNKSs12find_last_ofEcj>:
1000dc24:	29403fcc 	andi	r5,r5,255
1000dc28:	2940201c 	xori	r5,r5,128
1000dc2c:	297fe004 	addi	r5,r5,-128
1000dc30:	000da101 	jmpi	1000da10 <_ZNKSs5rfindEcj>

1000dc34 <_ZNKSs17find_first_not_ofEPKcjj>:
1000dc34:	defffa04 	addi	sp,sp,-24
1000dc38:	dc400115 	stw	r17,4(sp)
1000dc3c:	24400017 	ldw	r17,0(r4)
1000dc40:	dcc00315 	stw	r19,12(sp)
1000dc44:	dfc00515 	stw	ra,20(sp)
1000dc48:	8cfffd17 	ldw	r19,-12(r17)
1000dc4c:	dd000415 	stw	r20,16(sp)
1000dc50:	dc800215 	stw	r18,8(sp)
1000dc54:	dc000015 	stw	r16,0(sp)
1000dc58:	34c0162e 	bgeu	r6,r19,1000dcb4 <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000dc5c:	3021883a 	mov	r16,r6
1000dc60:	2829883a 	mov	r20,r5
1000dc64:	3825883a 	mov	r18,r7
1000dc68:	3800031e 	bne	r7,zero,1000dc78 <_ZNKSs17find_first_not_ofEPKcjj+0x44>
1000dc6c:	00000806 	br	1000dc90 <_ZNKSs17find_first_not_ofEPKcjj+0x5c>
1000dc70:	84000044 	addi	r16,r16,1
1000dc74:	84c00f26 	beq	r16,r19,1000dcb4 <_ZNKSs17find_first_not_ofEPKcjj+0x80>
1000dc78:	8c05883a 	add	r2,r17,r16
1000dc7c:	11400007 	ldb	r5,0(r2)
1000dc80:	900d883a 	mov	r6,r18
1000dc84:	a009883a 	mov	r4,r20
1000dc88:	00156840 	call	10015684 <memchr>
1000dc8c:	103ff81e 	bne	r2,zero,1000dc70 <_ZNKSs17find_first_not_ofEPKcjj+0x3c>
1000dc90:	8005883a 	mov	r2,r16
1000dc94:	dfc00517 	ldw	ra,20(sp)
1000dc98:	dd000417 	ldw	r20,16(sp)
1000dc9c:	dcc00317 	ldw	r19,12(sp)
1000dca0:	dc800217 	ldw	r18,8(sp)
1000dca4:	dc400117 	ldw	r17,4(sp)
1000dca8:	dc000017 	ldw	r16,0(sp)
1000dcac:	dec00604 	addi	sp,sp,24
1000dcb0:	f800283a 	ret
1000dcb4:	00bfffc4 	movi	r2,-1
1000dcb8:	003ff606 	br	1000dc94 <_ZNKSs17find_first_not_ofEPKcjj+0x60>

1000dcbc <_ZNKSs17find_first_not_ofERKSsj>:
1000dcbc:	29400017 	ldw	r5,0(r5)
1000dcc0:	29fffd17 	ldw	r7,-12(r5)
1000dcc4:	000dc341 	jmpi	1000dc34 <_ZNKSs17find_first_not_ofEPKcjj>

1000dcc8 <_ZNKSs17find_first_not_ofEPKcj>:
1000dcc8:	defffc04 	addi	sp,sp,-16
1000dccc:	dc000215 	stw	r16,8(sp)
1000dcd0:	2021883a 	mov	r16,r4
1000dcd4:	2809883a 	mov	r4,r5
1000dcd8:	dfc00315 	stw	ra,12(sp)
1000dcdc:	d9800115 	stw	r6,4(sp)
1000dce0:	d9400015 	stw	r5,0(sp)
1000dce4:	00164b40 	call	100164b4 <strlen>
1000dce8:	d9800117 	ldw	r6,4(sp)
1000dcec:	d9400017 	ldw	r5,0(sp)
1000dcf0:	100f883a 	mov	r7,r2
1000dcf4:	8009883a 	mov	r4,r16
1000dcf8:	dfc00317 	ldw	ra,12(sp)
1000dcfc:	dc000217 	ldw	r16,8(sp)
1000dd00:	dec00404 	addi	sp,sp,16
1000dd04:	000dc341 	jmpi	1000dc34 <_ZNKSs17find_first_not_ofEPKcjj>

1000dd08 <_ZNKSs17find_first_not_ofEcj>:
1000dd08:	20c00017 	ldw	r3,0(r4)
1000dd0c:	19fffd17 	ldw	r7,-12(r3)
1000dd10:	31c00d2e 	bgeu	r6,r7,1000dd48 <_ZNKSs17find_first_not_ofEcj+0x40>
1000dd14:	1985883a 	add	r2,r3,r6
1000dd18:	29403fcc 	andi	r5,r5,255
1000dd1c:	10800007 	ldb	r2,0(r2)
1000dd20:	2940201c 	xori	r5,r5,128
1000dd24:	297fe004 	addi	r5,r5,-128
1000dd28:	2880091e 	bne	r5,r2,1000dd50 <_ZNKSs17find_first_not_ofEcj+0x48>
1000dd2c:	2809883a 	mov	r4,r5
1000dd30:	00000206 	br	1000dd3c <_ZNKSs17find_first_not_ofEcj+0x34>
1000dd34:	10800007 	ldb	r2,0(r2)
1000dd38:	1100051e 	bne	r2,r4,1000dd50 <_ZNKSs17find_first_not_ofEcj+0x48>
1000dd3c:	31800044 	addi	r6,r6,1
1000dd40:	1985883a 	add	r2,r3,r6
1000dd44:	31fffb1e 	bne	r6,r7,1000dd34 <_ZNKSs17find_first_not_ofEcj+0x2c>
1000dd48:	00bfffc4 	movi	r2,-1
1000dd4c:	f800283a 	ret
1000dd50:	3005883a 	mov	r2,r6
1000dd54:	f800283a 	ret

1000dd58 <_ZNKSs16find_last_not_ofEPKcjj>:
1000dd58:	defffb04 	addi	sp,sp,-20
1000dd5c:	dcc00315 	stw	r19,12(sp)
1000dd60:	24c00017 	ldw	r19,0(r4)
1000dd64:	dc000015 	stw	r16,0(sp)
1000dd68:	dfc00415 	stw	ra,16(sp)
1000dd6c:	9c3ffd17 	ldw	r16,-12(r19)
1000dd70:	dc800215 	stw	r18,8(sp)
1000dd74:	dc400115 	stw	r17,4(sp)
1000dd78:	80001826 	beq	r16,zero,1000dddc <_ZNKSs16find_last_not_ofEPKcjj+0x84>
1000dd7c:	843fffc4 	addi	r16,r16,-1
1000dd80:	3823883a 	mov	r17,r7
1000dd84:	2825883a 	mov	r18,r5
1000dd88:	34001236 	bltu	r6,r16,1000ddd4 <_ZNKSs16find_last_not_ofEPKcjj+0x7c>
1000dd8c:	9c05883a 	add	r2,r19,r16
1000dd90:	880d883a 	mov	r6,r17
1000dd94:	9009883a 	mov	r4,r18
1000dd98:	88000626 	beq	r17,zero,1000ddb4 <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000dd9c:	11400007 	ldb	r5,0(r2)
1000dda0:	00156840 	call	10015684 <memchr>
1000dda4:	10000326 	beq	r2,zero,1000ddb4 <_ZNKSs16find_last_not_ofEPKcjj+0x5c>
1000dda8:	843fffc4 	addi	r16,r16,-1
1000ddac:	80bfffd8 	cmpnei	r2,r16,-1
1000ddb0:	103ff61e 	bne	r2,zero,1000dd8c <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000ddb4:	8005883a 	mov	r2,r16
1000ddb8:	dfc00417 	ldw	ra,16(sp)
1000ddbc:	dcc00317 	ldw	r19,12(sp)
1000ddc0:	dc800217 	ldw	r18,8(sp)
1000ddc4:	dc400117 	ldw	r17,4(sp)
1000ddc8:	dc000017 	ldw	r16,0(sp)
1000ddcc:	dec00504 	addi	sp,sp,20
1000ddd0:	f800283a 	ret
1000ddd4:	3021883a 	mov	r16,r6
1000ddd8:	003fec06 	br	1000dd8c <_ZNKSs16find_last_not_ofEPKcjj+0x34>
1000dddc:	043fffc4 	movi	r16,-1
1000dde0:	003ff406 	br	1000ddb4 <_ZNKSs16find_last_not_ofEPKcjj+0x5c>

1000dde4 <_ZNKSs16find_last_not_ofERKSsj>:
1000dde4:	29400017 	ldw	r5,0(r5)
1000dde8:	29fffd17 	ldw	r7,-12(r5)
1000ddec:	000dd581 	jmpi	1000dd58 <_ZNKSs16find_last_not_ofEPKcjj>

1000ddf0 <_ZNKSs16find_last_not_ofEPKcj>:
1000ddf0:	defffc04 	addi	sp,sp,-16
1000ddf4:	dc000215 	stw	r16,8(sp)
1000ddf8:	2021883a 	mov	r16,r4
1000ddfc:	2809883a 	mov	r4,r5
1000de00:	dfc00315 	stw	ra,12(sp)
1000de04:	d9800115 	stw	r6,4(sp)
1000de08:	d9400015 	stw	r5,0(sp)
1000de0c:	00164b40 	call	100164b4 <strlen>
1000de10:	d9800117 	ldw	r6,4(sp)
1000de14:	d9400017 	ldw	r5,0(sp)
1000de18:	100f883a 	mov	r7,r2
1000de1c:	8009883a 	mov	r4,r16
1000de20:	dfc00317 	ldw	ra,12(sp)
1000de24:	dc000217 	ldw	r16,8(sp)
1000de28:	dec00404 	addi	sp,sp,16
1000de2c:	000dd581 	jmpi	1000dd58 <_ZNKSs16find_last_not_ofEPKcjj>

1000de30 <_ZNKSs16find_last_not_ofEcj>:
1000de30:	21000017 	ldw	r4,0(r4)
1000de34:	20bffd17 	ldw	r2,-12(r4)
1000de38:	10000f26 	beq	r2,zero,1000de78 <_ZNKSs16find_last_not_ofEcj+0x48>
1000de3c:	10bfffc4 	addi	r2,r2,-1
1000de40:	30800b36 	bltu	r6,r2,1000de70 <_ZNKSs16find_last_not_ofEcj+0x40>
1000de44:	29403fcc 	andi	r5,r5,255
1000de48:	2940201c 	xori	r5,r5,128
1000de4c:	297fe004 	addi	r5,r5,-128
1000de50:	00000306 	br	1000de60 <_ZNKSs16find_last_not_ofEcj+0x30>
1000de54:	10bfffc4 	addi	r2,r2,-1
1000de58:	10ffffd8 	cmpnei	r3,r2,-1
1000de5c:	18000826 	beq	r3,zero,1000de80 <_ZNKSs16find_last_not_ofEcj+0x50>
1000de60:	2087883a 	add	r3,r4,r2
1000de64:	18c00007 	ldb	r3,0(r3)
1000de68:	197ffa26 	beq	r3,r5,1000de54 <_ZNKSs16find_last_not_ofEcj+0x24>
1000de6c:	f800283a 	ret
1000de70:	3005883a 	mov	r2,r6
1000de74:	003ff306 	br	1000de44 <_ZNKSs16find_last_not_ofEcj+0x14>
1000de78:	00bfffc4 	movi	r2,-1
1000de7c:	f800283a 	ret
1000de80:	f800283a 	ret

1000de84 <_ZNKSs7compareERKSs>:
1000de84:	21000017 	ldw	r4,0(r4)
1000de88:	29400017 	ldw	r5,0(r5)
1000de8c:	defffd04 	addi	sp,sp,-12
1000de90:	dc400115 	stw	r17,4(sp)
1000de94:	dc000015 	stw	r16,0(sp)
1000de98:	247ffd17 	ldw	r17,-12(r4)
1000de9c:	2c3ffd17 	ldw	r16,-12(r5)
1000dea0:	dfc00215 	stw	ra,8(sp)
1000dea4:	8c000a2e 	bgeu	r17,r16,1000ded0 <_ZNKSs7compareERKSs+0x4c>
1000dea8:	880d883a 	mov	r6,r17
1000deac:	30000226 	beq	r6,zero,1000deb8 <_ZNKSs7compareERKSs+0x34>
1000deb0:	001576c0 	call	1001576c <memcmp>
1000deb4:	1000011e 	bne	r2,zero,1000debc <_ZNKSs7compareERKSs+0x38>
1000deb8:	8c05c83a 	sub	r2,r17,r16
1000debc:	dfc00217 	ldw	ra,8(sp)
1000dec0:	dc400117 	ldw	r17,4(sp)
1000dec4:	dc000017 	ldw	r16,0(sp)
1000dec8:	dec00304 	addi	sp,sp,12
1000decc:	f800283a 	ret
1000ded0:	800d883a 	mov	r6,r16
1000ded4:	003ff506 	br	1000deac <_ZNKSs7compareERKSs+0x28>

1000ded8 <_ZNKSs7compareEjjRKSs>:
1000ded8:	21000017 	ldw	r4,0(r4)
1000dedc:	defffd04 	addi	sp,sp,-12
1000dee0:	dc000015 	stw	r16,0(sp)
1000dee4:	243ffd17 	ldw	r16,-12(r4)
1000dee8:	dfc00215 	stw	ra,8(sp)
1000deec:	dc400115 	stw	r17,4(sp)
1000def0:	2805883a 	mov	r2,r5
1000def4:	81401836 	bltu	r16,r5,1000df58 <_ZNKSs7compareEjjRKSs+0x80>
1000def8:	8161c83a 	sub	r16,r16,r5
1000defc:	34001036 	bltu	r6,r16,1000df40 <_ZNKSs7compareEjjRKSs+0x68>
1000df00:	39400017 	ldw	r5,0(r7)
1000df04:	2c7ffd17 	ldw	r17,-12(r5)
1000df08:	880d883a 	mov	r6,r17
1000df0c:	84400a36 	bltu	r16,r17,1000df38 <_ZNKSs7compareEjjRKSs+0x60>
1000df10:	30000326 	beq	r6,zero,1000df20 <_ZNKSs7compareEjjRKSs+0x48>
1000df14:	2089883a 	add	r4,r4,r2
1000df18:	001576c0 	call	1001576c <memcmp>
1000df1c:	1000011e 	bne	r2,zero,1000df24 <_ZNKSs7compareEjjRKSs+0x4c>
1000df20:	8445c83a 	sub	r2,r16,r17
1000df24:	dfc00217 	ldw	ra,8(sp)
1000df28:	dc400117 	ldw	r17,4(sp)
1000df2c:	dc000017 	ldw	r16,0(sp)
1000df30:	dec00304 	addi	sp,sp,12
1000df34:	f800283a 	ret
1000df38:	800d883a 	mov	r6,r16
1000df3c:	003ff406 	br	1000df10 <_ZNKSs7compareEjjRKSs+0x38>
1000df40:	39400017 	ldw	r5,0(r7)
1000df44:	3021883a 	mov	r16,r6
1000df48:	2c7ffd17 	ldw	r17,-12(r5)
1000df4c:	880d883a 	mov	r6,r17
1000df50:	847fef2e 	bgeu	r16,r17,1000df10 <_ZNKSs7compareEjjRKSs+0x38>
1000df54:	003ff806 	br	1000df38 <_ZNKSs7compareEjjRKSs+0x60>
1000df58:	014400b4 	movhi	r5,4098
1000df5c:	010400b4 	movhi	r4,4098
1000df60:	800f883a 	mov	r7,r16
1000df64:	100d883a 	mov	r6,r2
1000df68:	29564304 	addi	r5,r5,22796
1000df6c:	21161f04 	addi	r4,r4,22652
1000df70:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000df74 <_ZNKSs7compareEjjRKSsjj>:
1000df74:	21000017 	ldw	r4,0(r4)
1000df78:	defffd04 	addi	sp,sp,-12
1000df7c:	dc400115 	stw	r17,4(sp)
1000df80:	247ffd17 	ldw	r17,-12(r4)
1000df84:	dfc00215 	stw	ra,8(sp)
1000df88:	dc000015 	stw	r16,0(sp)
1000df8c:	2805883a 	mov	r2,r5
1000df90:	d8c00317 	ldw	r3,12(sp)
1000df94:	da000417 	ldw	r8,16(sp)
1000df98:	89402536 	bltu	r17,r5,1000e030 <_ZNKSs7compareEjjRKSsjj+0xbc>
1000df9c:	39400017 	ldw	r5,0(r7)
1000dfa0:	2c3ffd17 	ldw	r16,-12(r5)
1000dfa4:	80c01b36 	bltu	r16,r3,1000e014 <_ZNKSs7compareEjjRKSsjj+0xa0>
1000dfa8:	88a3c83a 	sub	r17,r17,r2
1000dfac:	34401536 	bltu	r6,r17,1000e004 <_ZNKSs7compareEjjRKSsjj+0x90>
1000dfb0:	80e1c83a 	sub	r16,r16,r3
1000dfb4:	44000f36 	bltu	r8,r16,1000dff4 <_ZNKSs7compareEjjRKSsjj+0x80>
1000dfb8:	800d883a 	mov	r6,r16
1000dfbc:	8c000b36 	bltu	r17,r16,1000dfec <_ZNKSs7compareEjjRKSsjj+0x78>
1000dfc0:	30000426 	beq	r6,zero,1000dfd4 <_ZNKSs7compareEjjRKSsjj+0x60>
1000dfc4:	28cb883a 	add	r5,r5,r3
1000dfc8:	2089883a 	add	r4,r4,r2
1000dfcc:	001576c0 	call	1001576c <memcmp>
1000dfd0:	1000011e 	bne	r2,zero,1000dfd8 <_ZNKSs7compareEjjRKSsjj+0x64>
1000dfd4:	8c05c83a 	sub	r2,r17,r16
1000dfd8:	dfc00217 	ldw	ra,8(sp)
1000dfdc:	dc400117 	ldw	r17,4(sp)
1000dfe0:	dc000017 	ldw	r16,0(sp)
1000dfe4:	dec00304 	addi	sp,sp,12
1000dfe8:	f800283a 	ret
1000dfec:	880d883a 	mov	r6,r17
1000dff0:	003ff306 	br	1000dfc0 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000dff4:	4021883a 	mov	r16,r8
1000dff8:	800d883a 	mov	r6,r16
1000dffc:	8c3ff02e 	bgeu	r17,r16,1000dfc0 <_ZNKSs7compareEjjRKSsjj+0x4c>
1000e000:	003ffa06 	br	1000dfec <_ZNKSs7compareEjjRKSsjj+0x78>
1000e004:	80e1c83a 	sub	r16,r16,r3
1000e008:	3023883a 	mov	r17,r6
1000e00c:	443fea2e 	bgeu	r8,r16,1000dfb8 <_ZNKSs7compareEjjRKSsjj+0x44>
1000e010:	003ff806 	br	1000dff4 <_ZNKSs7compareEjjRKSsjj+0x80>
1000e014:	014400b4 	movhi	r5,4098
1000e018:	010400b4 	movhi	r4,4098
1000e01c:	800f883a 	mov	r7,r16
1000e020:	180d883a 	mov	r6,r3
1000e024:	29564304 	addi	r5,r5,22796
1000e028:	21161f04 	addi	r4,r4,22652
1000e02c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
1000e030:	014400b4 	movhi	r5,4098
1000e034:	010400b4 	movhi	r4,4098
1000e038:	880f883a 	mov	r7,r17
1000e03c:	100d883a 	mov	r6,r2
1000e040:	29564304 	addi	r5,r5,22796
1000e044:	21161f04 	addi	r4,r4,22652
1000e048:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000e04c <_ZNKSs7compareEPKc>:
1000e04c:	defffb04 	addi	sp,sp,-20
1000e050:	dc800215 	stw	r18,8(sp)
1000e054:	24800017 	ldw	r18,0(r4)
1000e058:	dc400115 	stw	r17,4(sp)
1000e05c:	2809883a 	mov	r4,r5
1000e060:	947ffd17 	ldw	r17,-12(r18)
1000e064:	dcc00315 	stw	r19,12(sp)
1000e068:	dc000015 	stw	r16,0(sp)
1000e06c:	dfc00415 	stw	ra,16(sp)
1000e070:	2827883a 	mov	r19,r5
1000e074:	00164b40 	call	100164b4 <strlen>
1000e078:	1021883a 	mov	r16,r2
1000e07c:	88800e2e 	bgeu	r17,r2,1000e0b8 <_ZNKSs7compareEPKc+0x6c>
1000e080:	880d883a 	mov	r6,r17
1000e084:	30000426 	beq	r6,zero,1000e098 <_ZNKSs7compareEPKc+0x4c>
1000e088:	980b883a 	mov	r5,r19
1000e08c:	9009883a 	mov	r4,r18
1000e090:	001576c0 	call	1001576c <memcmp>
1000e094:	1000011e 	bne	r2,zero,1000e09c <_ZNKSs7compareEPKc+0x50>
1000e098:	8c05c83a 	sub	r2,r17,r16
1000e09c:	dfc00417 	ldw	ra,16(sp)
1000e0a0:	dcc00317 	ldw	r19,12(sp)
1000e0a4:	dc800217 	ldw	r18,8(sp)
1000e0a8:	dc400117 	ldw	r17,4(sp)
1000e0ac:	dc000017 	ldw	r16,0(sp)
1000e0b0:	dec00504 	addi	sp,sp,20
1000e0b4:	f800283a 	ret
1000e0b8:	100d883a 	mov	r6,r2
1000e0bc:	003ff106 	br	1000e084 <_ZNKSs7compareEPKc+0x38>

1000e0c0 <_ZNKSs7compareEjjPKc>:
1000e0c0:	defffa04 	addi	sp,sp,-24
1000e0c4:	dcc00315 	stw	r19,12(sp)
1000e0c8:	24c00017 	ldw	r19,0(r4)
1000e0cc:	dc000015 	stw	r16,0(sp)
1000e0d0:	dc800215 	stw	r18,8(sp)
1000e0d4:	9c3ffd17 	ldw	r16,-12(r19)
1000e0d8:	dfc00515 	stw	ra,20(sp)
1000e0dc:	dd000415 	stw	r20,16(sp)
1000e0e0:	dc400115 	stw	r17,4(sp)
1000e0e4:	2825883a 	mov	r18,r5
1000e0e8:	81401a36 	bltu	r16,r5,1000e154 <_ZNKSs7compareEjjPKc+0x94>
1000e0ec:	8161c83a 	sub	r16,r16,r5
1000e0f0:	3829883a 	mov	r20,r7
1000e0f4:	34001536 	bltu	r6,r16,1000e14c <_ZNKSs7compareEjjPKc+0x8c>
1000e0f8:	a009883a 	mov	r4,r20
1000e0fc:	00164b40 	call	100164b4 <strlen>
1000e100:	1023883a 	mov	r17,r2
1000e104:	100d883a 	mov	r6,r2
1000e108:	80800e36 	bltu	r16,r2,1000e144 <_ZNKSs7compareEjjPKc+0x84>
1000e10c:	30000426 	beq	r6,zero,1000e120 <_ZNKSs7compareEjjPKc+0x60>
1000e110:	a00b883a 	mov	r5,r20
1000e114:	9c89883a 	add	r4,r19,r18
1000e118:	001576c0 	call	1001576c <memcmp>
1000e11c:	1000011e 	bne	r2,zero,1000e124 <_ZNKSs7compareEjjPKc+0x64>
1000e120:	8445c83a 	sub	r2,r16,r17
1000e124:	dfc00517 	ldw	ra,20(sp)
1000e128:	dd000417 	ldw	r20,16(sp)
1000e12c:	dcc00317 	ldw	r19,12(sp)
1000e130:	dc800217 	ldw	r18,8(sp)
1000e134:	dc400117 	ldw	r17,4(sp)
1000e138:	dc000017 	ldw	r16,0(sp)
1000e13c:	dec00604 	addi	sp,sp,24
1000e140:	f800283a 	ret
1000e144:	800d883a 	mov	r6,r16
1000e148:	003ff006 	br	1000e10c <_ZNKSs7compareEjjPKc+0x4c>
1000e14c:	3021883a 	mov	r16,r6
1000e150:	003fe906 	br	1000e0f8 <_ZNKSs7compareEjjPKc+0x38>
1000e154:	014400b4 	movhi	r5,4098
1000e158:	010400b4 	movhi	r4,4098
1000e15c:	800f883a 	mov	r7,r16
1000e160:	900d883a 	mov	r6,r18
1000e164:	29564304 	addi	r5,r5,22796
1000e168:	21161f04 	addi	r4,r4,22652
1000e16c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000e170 <_ZNKSs7compareEjjPKcj>:
1000e170:	21000017 	ldw	r4,0(r4)
1000e174:	defffd04 	addi	sp,sp,-12
1000e178:	dc000015 	stw	r16,0(sp)
1000e17c:	243ffd17 	ldw	r16,-12(r4)
1000e180:	dc400115 	stw	r17,4(sp)
1000e184:	dfc00215 	stw	ra,8(sp)
1000e188:	2805883a 	mov	r2,r5
1000e18c:	dc400317 	ldw	r17,12(sp)
1000e190:	81401536 	bltu	r16,r5,1000e1e8 <_ZNKSs7compareEjjPKcj+0x78>
1000e194:	8161c83a 	sub	r16,r16,r5
1000e198:	34000f36 	bltu	r6,r16,1000e1d8 <_ZNKSs7compareEjjPKcj+0x68>
1000e19c:	800d883a 	mov	r6,r16
1000e1a0:	8c000b36 	bltu	r17,r16,1000e1d0 <_ZNKSs7compareEjjPKcj+0x60>
1000e1a4:	30000426 	beq	r6,zero,1000e1b8 <_ZNKSs7compareEjjPKcj+0x48>
1000e1a8:	380b883a 	mov	r5,r7
1000e1ac:	2089883a 	add	r4,r4,r2
1000e1b0:	001576c0 	call	1001576c <memcmp>
1000e1b4:	1000011e 	bne	r2,zero,1000e1bc <_ZNKSs7compareEjjPKcj+0x4c>
1000e1b8:	8445c83a 	sub	r2,r16,r17
1000e1bc:	dfc00217 	ldw	ra,8(sp)
1000e1c0:	dc400117 	ldw	r17,4(sp)
1000e1c4:	dc000017 	ldw	r16,0(sp)
1000e1c8:	dec00304 	addi	sp,sp,12
1000e1cc:	f800283a 	ret
1000e1d0:	880d883a 	mov	r6,r17
1000e1d4:	003ff306 	br	1000e1a4 <_ZNKSs7compareEjjPKcj+0x34>
1000e1d8:	3021883a 	mov	r16,r6
1000e1dc:	800d883a 	mov	r6,r16
1000e1e0:	8c3ff02e 	bgeu	r17,r16,1000e1a4 <_ZNKSs7compareEjjPKcj+0x34>
1000e1e4:	003ffa06 	br	1000e1d0 <_ZNKSs7compareEjjPKcj+0x60>
1000e1e8:	014400b4 	movhi	r5,4098
1000e1ec:	010400b4 	movhi	r4,4098
1000e1f0:	800f883a 	mov	r7,r16
1000e1f4:	100d883a 	mov	r6,r2
1000e1f8:	29564304 	addi	r5,r5,22796
1000e1fc:	21161f04 	addi	r4,r4,22652
1000e200:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000e204 <_ZNSs12_Alloc_hiderC1EPcRKSaIcE>:
1000e204:	21400015 	stw	r5,0(r4)
1000e208:	f800283a 	ret

1000e20c <_ZNSs4_Rep12_S_empty_repEv>:
1000e20c:	008400f4 	movhi	r2,4099
1000e210:	10aac004 	addi	r2,r2,-21760
1000e214:	f800283a 	ret

1000e218 <_ZNKSs4_Rep12_M_is_leakedEv>:
1000e218:	20800217 	ldw	r2,8(r4)
1000e21c:	1004d7fa 	srli	r2,r2,31
1000e220:	f800283a 	ret

1000e224 <_ZNKSs4_Rep12_M_is_sharedEv>:
1000e224:	20800217 	ldw	r2,8(r4)
1000e228:	0084803a 	cmplt	r2,zero,r2
1000e22c:	f800283a 	ret

1000e230 <_ZNSs4_Rep13_M_set_leakedEv>:
1000e230:	00bfffc4 	movi	r2,-1
1000e234:	20800215 	stw	r2,8(r4)
1000e238:	f800283a 	ret

1000e23c <_ZNSs4_Rep15_M_set_sharableEv>:
1000e23c:	20000215 	stw	zero,8(r4)
1000e240:	f800283a 	ret

1000e244 <_ZNSs4_Rep26_M_set_length_and_sharableEj>:
1000e244:	008400f4 	movhi	r2,4099
1000e248:	10aac004 	addi	r2,r2,-21760
1000e24c:	2080011e 	bne	r4,r2,1000e254 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x10>
1000e250:	f800283a 	ret
1000e254:	20000215 	stw	zero,8(r4)
1000e258:	21400015 	stw	r5,0(r4)
1000e25c:	2149883a 	add	r4,r4,r5
1000e260:	20000305 	stb	zero,12(r4)
1000e264:	003ffa06 	br	1000e250 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0xc>

1000e268 <_ZNSs4_Rep10_M_refdataEv>:
1000e268:	20800304 	addi	r2,r4,12
1000e26c:	f800283a 	ret

1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
1000e270:	defffe04 	addi	sp,sp,-8
1000e274:	00900034 	movhi	r2,16384
1000e278:	dfc00115 	stw	ra,4(sp)
1000e27c:	dc000015 	stw	r16,0(sp)
1000e280:	10bfff04 	addi	r2,r2,-4
1000e284:	11001a36 	bltu	r2,r4,1000e2f0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x80>
1000e288:	2021883a 	mov	r16,r4
1000e28c:	29000e2e 	bgeu	r5,r4,1000e2c8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000e290:	2945883a 	add	r2,r5,r5
1000e294:	2080012e 	bgeu	r4,r2,1000e29c <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x2c>
1000e298:	1021883a 	mov	r16,r2
1000e29c:	80800744 	addi	r2,r16,29
1000e2a0:	10c40070 	cmpltui	r3,r2,4097
1000e2a4:	81000344 	addi	r4,r16,13
1000e2a8:	1800081e 	bne	r3,zero,1000e2cc <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000e2ac:	2c00072e 	bgeu	r5,r16,1000e2cc <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>
1000e2b0:	84040004 	addi	r16,r16,4096
1000e2b4:	1083ffcc 	andi	r2,r2,4095
1000e2b8:	00d00034 	movhi	r3,16384
1000e2bc:	80a1c83a 	sub	r16,r16,r2
1000e2c0:	18ffff04 	addi	r3,r3,-4
1000e2c4:	1c000836 	bltu	r3,r16,1000e2e8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x78>
1000e2c8:	81000344 	addi	r4,r16,13
1000e2cc:	0007fb00 	call	10007fb0 <_Znwj>
1000e2d0:	14000115 	stw	r16,4(r2)
1000e2d4:	10000215 	stw	zero,8(r2)
1000e2d8:	dfc00117 	ldw	ra,4(sp)
1000e2dc:	dc000017 	ldw	r16,0(sp)
1000e2e0:	dec00204 	addi	sp,sp,8
1000e2e4:	f800283a 	ret
1000e2e8:	1821883a 	mov	r16,r3
1000e2ec:	003ff606 	br	1000e2c8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>
1000e2f0:	010400b4 	movhi	r4,4098
1000e2f4:	21164904 	addi	r4,r4,22820
1000e2f8:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000e2fc <_ZNSs12_S_constructEjcRKSaIcE>:
1000e2fc:	2000041e 	bne	r4,zero,1000e310 <_ZNSs12_S_constructEjcRKSaIcE+0x14>
1000e300:	00c400f4 	movhi	r3,4099
1000e304:	18eac304 	addi	r3,r3,-21748
1000e308:	1805883a 	mov	r2,r3
1000e30c:	f800283a 	ret
1000e310:	defffc04 	addi	sp,sp,-16
1000e314:	dc400115 	stw	r17,4(sp)
1000e318:	2823883a 	mov	r17,r5
1000e31c:	000b883a 	mov	r5,zero
1000e320:	dc800215 	stw	r18,8(sp)
1000e324:	dc000015 	stw	r16,0(sp)
1000e328:	dfc00315 	stw	ra,12(sp)
1000e32c:	2021883a 	mov	r16,r4
1000e330:	000e2700 	call	1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e334:	1025883a 	mov	r18,r2
1000e338:	80800058 	cmpnei	r2,r16,1
1000e33c:	90c00304 	addi	r3,r18,12
1000e340:	10001126 	beq	r2,zero,1000e388 <_ZNSs12_S_constructEjcRKSaIcE+0x8c>
1000e344:	89403fcc 	andi	r5,r17,255
1000e348:	2940201c 	xori	r5,r5,128
1000e34c:	1809883a 	mov	r4,r3
1000e350:	800d883a 	mov	r6,r16
1000e354:	297fe004 	addi	r5,r5,-128
1000e358:	0015a240 	call	10015a24 <memset>
1000e35c:	1007883a 	mov	r3,r2
1000e360:	008400f4 	movhi	r2,4099
1000e364:	10aac004 	addi	r2,r2,-21760
1000e368:	9080091e 	bne	r18,r2,1000e390 <_ZNSs12_S_constructEjcRKSaIcE+0x94>
1000e36c:	1805883a 	mov	r2,r3
1000e370:	dfc00317 	ldw	ra,12(sp)
1000e374:	dc800217 	ldw	r18,8(sp)
1000e378:	dc400117 	ldw	r17,4(sp)
1000e37c:	dc000017 	ldw	r16,0(sp)
1000e380:	dec00404 	addi	sp,sp,16
1000e384:	f800283a 	ret
1000e388:	94400305 	stb	r17,12(r18)
1000e38c:	003ff406 	br	1000e360 <_ZNSs12_S_constructEjcRKSaIcE+0x64>
1000e390:	90000215 	stw	zero,8(r18)
1000e394:	94000015 	stw	r16,0(r18)
1000e398:	9405883a 	add	r2,r18,r16
1000e39c:	10000305 	stb	zero,12(r2)
1000e3a0:	003ff206 	br	1000e36c <_ZNSs12_S_constructEjcRKSaIcE+0x70>

1000e3a4 <_ZNSsC1ERKSaIcE>:
1000e3a4:	defffe04 	addi	sp,sp,-8
1000e3a8:	dc000015 	stw	r16,0(sp)
1000e3ac:	280d883a 	mov	r6,r5
1000e3b0:	2021883a 	mov	r16,r4
1000e3b4:	000b883a 	mov	r5,zero
1000e3b8:	0009883a 	mov	r4,zero
1000e3bc:	dfc00115 	stw	ra,4(sp)
1000e3c0:	000e2fc0 	call	1000e2fc <_ZNSs12_S_constructEjcRKSaIcE>
1000e3c4:	80800015 	stw	r2,0(r16)
1000e3c8:	dfc00117 	ldw	ra,4(sp)
1000e3cc:	dc000017 	ldw	r16,0(sp)
1000e3d0:	dec00204 	addi	sp,sp,8
1000e3d4:	f800283a 	ret

1000e3d8 <_ZNSsC1EjcRKSaIcE>:
1000e3d8:	2805883a 	mov	r2,r5
1000e3dc:	31403fcc 	andi	r5,r6,255
1000e3e0:	defffe04 	addi	sp,sp,-8
1000e3e4:	2940201c 	xori	r5,r5,128
1000e3e8:	dc000015 	stw	r16,0(sp)
1000e3ec:	297fe004 	addi	r5,r5,-128
1000e3f0:	2021883a 	mov	r16,r4
1000e3f4:	380d883a 	mov	r6,r7
1000e3f8:	1009883a 	mov	r4,r2
1000e3fc:	dfc00115 	stw	ra,4(sp)
1000e400:	000e2fc0 	call	1000e2fc <_ZNSs12_S_constructEjcRKSaIcE>
1000e404:	80800015 	stw	r2,0(r16)
1000e408:	dfc00117 	ldw	ra,4(sp)
1000e40c:	dc000017 	ldw	r16,0(sp)
1000e410:	dec00204 	addi	sp,sp,8
1000e414:	f800283a 	ret

1000e418 <_ZNSs18_S_construct_aux_2EjcRKSaIcE>:
1000e418:	29403fcc 	andi	r5,r5,255
1000e41c:	2940201c 	xori	r5,r5,128
1000e420:	297fe004 	addi	r5,r5,-128
1000e424:	000e2fc1 	jmpi	1000e2fc <_ZNSs12_S_constructEjcRKSaIcE>

1000e428 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>:
1000e428:	defffc04 	addi	sp,sp,-16
1000e42c:	dc000015 	stw	r16,0(sp)
1000e430:	2921c83a 	sub	r16,r5,r4
1000e434:	dc800215 	stw	r18,8(sp)
1000e438:	000b883a 	mov	r5,zero
1000e43c:	2025883a 	mov	r18,r4
1000e440:	8009883a 	mov	r4,r16
1000e444:	dc400115 	stw	r17,4(sp)
1000e448:	dfc00315 	stw	ra,12(sp)
1000e44c:	000e2700 	call	1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e450:	1023883a 	mov	r17,r2
1000e454:	80800058 	cmpnei	r2,r16,1
1000e458:	88c00304 	addi	r3,r17,12
1000e45c:	10000f26 	beq	r2,zero,1000e49c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x74>
1000e460:	1809883a 	mov	r4,r3
1000e464:	800d883a 	mov	r6,r16
1000e468:	900b883a 	mov	r5,r18
1000e46c:	00157f80 	call	100157f8 <memcpy>
1000e470:	1007883a 	mov	r3,r2
1000e474:	008400f4 	movhi	r2,4099
1000e478:	10aac004 	addi	r2,r2,-21760
1000e47c:	88800c1e 	bne	r17,r2,1000e4b0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x88>
1000e480:	1805883a 	mov	r2,r3
1000e484:	dfc00317 	ldw	ra,12(sp)
1000e488:	dc800217 	ldw	r18,8(sp)
1000e48c:	dc400117 	ldw	r17,4(sp)
1000e490:	dc000017 	ldw	r16,0(sp)
1000e494:	dec00404 	addi	sp,sp,16
1000e498:	f800283a 	ret
1000e49c:	90800003 	ldbu	r2,0(r18)
1000e4a0:	88800305 	stb	r2,12(r17)
1000e4a4:	008400f4 	movhi	r2,4099
1000e4a8:	10aac004 	addi	r2,r2,-21760
1000e4ac:	88bff426 	beq	r17,r2,1000e480 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>
1000e4b0:	8c000015 	stw	r16,0(r17)
1000e4b4:	88000215 	stw	zero,8(r17)
1000e4b8:	8c21883a 	add	r16,r17,r16
1000e4bc:	80000305 	stb	zero,12(r16)
1000e4c0:	003fef06 	br	1000e480 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25+0x58>

1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>:
1000e4c4:	00085041 	jmpi	10008504 <_ZdlPv>

1000e4c8 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>:
1000e4c8:	20800217 	ldw	r2,8(r4)
1000e4cc:	11bfffc4 	addi	r6,r2,-1
1000e4d0:	21800215 	stw	r6,8(r4)
1000e4d4:	0080010e 	bge	zero,r2,1000e4dc <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12+0x14>
1000e4d8:	f800283a 	ret
1000e4dc:	000e4c41 	jmpi	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000e4e0 <_ZNSs4_Rep10_M_disposeERKSaIcE>:
1000e4e0:	008400f4 	movhi	r2,4099
1000e4e4:	10aac004 	addi	r2,r2,-21760
1000e4e8:	2080011e 	bne	r4,r2,1000e4f0 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x10>
1000e4ec:	f800283a 	ret
1000e4f0:	20800217 	ldw	r2,8(r4)
1000e4f4:	11bfffc4 	addi	r6,r2,-1
1000e4f8:	21800215 	stw	r6,8(r4)
1000e4fc:	00bffb16 	blt	zero,r2,1000e4ec <_ZNSs4_Rep10_M_disposeERKSaIcE+0xc>
1000e500:	000e4c41 	jmpi	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>

1000e504 <_ZNSsD1Ev>:
1000e504:	20c00017 	ldw	r3,0(r4)
1000e508:	008400f4 	movhi	r2,4099
1000e50c:	10aac004 	addi	r2,r2,-21760
1000e510:	193ffd04 	addi	r4,r3,-12
1000e514:	2080011e 	bne	r4,r2,1000e51c <_ZNSsD1Ev+0x18>
1000e518:	f800283a 	ret
1000e51c:	18bfff17 	ldw	r2,-4(r3)
1000e520:	117fffc4 	addi	r5,r2,-1
1000e524:	197fff15 	stw	r5,-4(r3)
1000e528:	00bffb16 	blt	zero,r2,1000e518 <_ZNSsD1Ev+0x14>
1000e52c:	defffe04 	addi	sp,sp,-8
1000e530:	d94000c4 	addi	r5,sp,3
1000e534:	dfc00115 	stw	ra,4(sp)
1000e538:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000e53c:	dfc00117 	ldw	ra,4(sp)
1000e540:	dec00204 	addi	sp,sp,8
1000e544:	f800283a 	ret

1000e548 <_ZNSs5clearEv>:
1000e548:	20800017 	ldw	r2,0(r4)
1000e54c:	00c400f4 	movhi	r3,4099
1000e550:	18eac004 	addi	r3,r3,-21760
1000e554:	117fff17 	ldw	r5,-4(r2)
1000e558:	11bffd04 	addi	r6,r2,-12
1000e55c:	0140050e 	bge	zero,r5,1000e574 <_ZNSs5clearEv+0x2c>
1000e560:	30c0061e 	bne	r6,r3,1000e57c <_ZNSs5clearEv+0x34>
1000e564:	008400f4 	movhi	r2,4099
1000e568:	10aac304 	addi	r2,r2,-21748
1000e56c:	20800015 	stw	r2,0(r4)
1000e570:	f800283a 	ret
1000e574:	30c0041e 	bne	r6,r3,1000e588 <_ZNSs5clearEv+0x40>
1000e578:	f800283a 	ret
1000e57c:	297fffc4 	addi	r5,r5,-1
1000e580:	117fff15 	stw	r5,-4(r2)
1000e584:	003ff706 	br	1000e564 <_ZNSs5clearEv+0x1c>
1000e588:	103fff15 	stw	zero,-4(r2)
1000e58c:	103ffd15 	stw	zero,-12(r2)
1000e590:	10000005 	stb	zero,0(r2)
1000e594:	003ff806 	br	1000e578 <_ZNSs5clearEv+0x30>

1000e598 <_ZNSs9_M_mutateEjjj>:
1000e598:	defff604 	addi	sp,sp,-40
1000e59c:	dc000115 	stw	r16,4(sp)
1000e5a0:	24000017 	ldw	r16,0(r4)
1000e5a4:	dd000515 	stw	r20,20(sp)
1000e5a8:	39a9c83a 	sub	r20,r7,r6
1000e5ac:	80bffd17 	ldw	r2,-12(r16)
1000e5b0:	80fffe17 	ldw	r3,-8(r16)
1000e5b4:	ddc00815 	stw	r23,32(sp)
1000e5b8:	dd800715 	stw	r22,28(sp)
1000e5bc:	dd400615 	stw	r21,24(sp)
1000e5c0:	dcc00415 	stw	r19,16(sp)
1000e5c4:	dc400215 	stw	r17,8(sp)
1000e5c8:	316f883a 	add	r23,r6,r5
1000e5cc:	dfc00915 	stw	ra,36(sp)
1000e5d0:	dc800315 	stw	r18,12(sp)
1000e5d4:	a0a9883a 	add	r20,r20,r2
1000e5d8:	202b883a 	mov	r21,r4
1000e5dc:	382d883a 	mov	r22,r7
1000e5e0:	2823883a 	mov	r17,r5
1000e5e4:	15e7c83a 	sub	r19,r2,r23
1000e5e8:	1d000236 	bltu	r3,r20,1000e5f4 <_ZNSs9_M_mutateEjjj+0x5c>
1000e5ec:	80bfff17 	ldw	r2,-4(r16)
1000e5f0:	00802b0e 	bge	zero,r2,1000e6a0 <_ZNSs9_M_mutateEjjj+0x108>
1000e5f4:	d98000c4 	addi	r6,sp,3
1000e5f8:	180b883a 	mov	r5,r3
1000e5fc:	a009883a 	mov	r4,r20
1000e600:	000e2700 	call	1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000e604:	1025883a 	mov	r18,r2
1000e608:	88001d1e 	bne	r17,zero,1000e680 <_ZNSs9_M_mutateEjjj+0xe8>
1000e60c:	14000304 	addi	r16,r2,12
1000e610:	a9400017 	ldw	r5,0(r21)
1000e614:	98000926 	beq	r19,zero,1000e63c <_ZNSs9_M_mutateEjjj+0xa4>
1000e618:	8c400304 	addi	r17,r17,12
1000e61c:	8da3883a 	add	r17,r17,r22
1000e620:	98800058 	cmpnei	r2,r19,1
1000e624:	9449883a 	add	r4,r18,r17
1000e628:	2dcb883a 	add	r5,r5,r23
1000e62c:	10003626 	beq	r2,zero,1000e708 <_ZNSs9_M_mutateEjjj+0x170>
1000e630:	980d883a 	mov	r6,r19
1000e634:	00157f80 	call	100157f8 <memcpy>
1000e638:	a9400017 	ldw	r5,0(r21)
1000e63c:	044400f4 	movhi	r17,4099
1000e640:	293ffd04 	addi	r4,r5,-12
1000e644:	8c6ac004 	addi	r17,r17,-21760
1000e648:	2440331e 	bne	r4,r17,1000e718 <_ZNSs9_M_mutateEjjj+0x180>
1000e64c:	ac000015 	stw	r16,0(r21)
1000e650:	9440211e 	bne	r18,r17,1000e6d8 <_ZNSs9_M_mutateEjjj+0x140>
1000e654:	dfc00917 	ldw	ra,36(sp)
1000e658:	ddc00817 	ldw	r23,32(sp)
1000e65c:	dd800717 	ldw	r22,28(sp)
1000e660:	dd400617 	ldw	r21,24(sp)
1000e664:	dd000517 	ldw	r20,20(sp)
1000e668:	dcc00417 	ldw	r19,16(sp)
1000e66c:	dc800317 	ldw	r18,12(sp)
1000e670:	dc400217 	ldw	r17,8(sp)
1000e674:	dc000117 	ldw	r16,4(sp)
1000e678:	dec00a04 	addi	sp,sp,40
1000e67c:	f800283a 	ret
1000e680:	88800058 	cmpnei	r2,r17,1
1000e684:	94000304 	addi	r16,r18,12
1000e688:	a9400017 	ldw	r5,0(r21)
1000e68c:	10001b26 	beq	r2,zero,1000e6fc <_ZNSs9_M_mutateEjjj+0x164>
1000e690:	880d883a 	mov	r6,r17
1000e694:	8009883a 	mov	r4,r16
1000e698:	00157f80 	call	100157f8 <memcpy>
1000e69c:	003fdc06 	br	1000e610 <_ZNSs9_M_mutateEjjj+0x78>
1000e6a0:	98001226 	beq	r19,zero,1000e6ec <_ZNSs9_M_mutateEjjj+0x154>
1000e6a4:	39801126 	beq	r7,r6,1000e6ec <_ZNSs9_M_mutateEjjj+0x154>
1000e6a8:	3963883a 	add	r17,r7,r5
1000e6ac:	98800058 	cmpnei	r2,r19,1
1000e6b0:	8449883a 	add	r4,r16,r17
1000e6b4:	85cb883a 	add	r5,r16,r23
1000e6b8:	10001e26 	beq	r2,zero,1000e734 <_ZNSs9_M_mutateEjjj+0x19c>
1000e6bc:	980d883a 	mov	r6,r19
1000e6c0:	00158f80 	call	100158f8 <memmove>
1000e6c4:	ac000017 	ldw	r16,0(r21)
1000e6c8:	044400f4 	movhi	r17,4099
1000e6cc:	8c6ac004 	addi	r17,r17,-21760
1000e6d0:	84bffd04 	addi	r18,r16,-12
1000e6d4:	947fdf26 	beq	r18,r17,1000e654 <_ZNSs9_M_mutateEjjj+0xbc>
1000e6d8:	803fff15 	stw	zero,-4(r16)
1000e6dc:	853ffd15 	stw	r20,-12(r16)
1000e6e0:	8521883a 	add	r16,r16,r20
1000e6e4:	80000005 	stb	zero,0(r16)
1000e6e8:	003fda06 	br	1000e654 <_ZNSs9_M_mutateEjjj+0xbc>
1000e6ec:	044400f4 	movhi	r17,4099
1000e6f0:	84bffd04 	addi	r18,r16,-12
1000e6f4:	8c6ac004 	addi	r17,r17,-21760
1000e6f8:	003fd506 	br	1000e650 <_ZNSs9_M_mutateEjjj+0xb8>
1000e6fc:	28800003 	ldbu	r2,0(r5)
1000e700:	90800305 	stb	r2,12(r18)
1000e704:	003fc206 	br	1000e610 <_ZNSs9_M_mutateEjjj+0x78>
1000e708:	28800003 	ldbu	r2,0(r5)
1000e70c:	20800005 	stb	r2,0(r4)
1000e710:	a9400017 	ldw	r5,0(r21)
1000e714:	003fc906 	br	1000e63c <_ZNSs9_M_mutateEjjj+0xa4>
1000e718:	28bfff17 	ldw	r2,-4(r5)
1000e71c:	10ffffc4 	addi	r3,r2,-1
1000e720:	28ffff15 	stw	r3,-4(r5)
1000e724:	00bfc916 	blt	zero,r2,1000e64c <_ZNSs9_M_mutateEjjj+0xb4>
1000e728:	d94000c4 	addi	r5,sp,3
1000e72c:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000e730:	003fc606 	br	1000e64c <_ZNSs9_M_mutateEjjj+0xb4>
1000e734:	28800003 	ldbu	r2,0(r5)
1000e738:	044400f4 	movhi	r17,4099
1000e73c:	8c6ac004 	addi	r17,r17,-21760
1000e740:	20800005 	stb	r2,0(r4)
1000e744:	ac000017 	ldw	r16,0(r21)
1000e748:	84bffd04 	addi	r18,r16,-12
1000e74c:	003fc006 	br	1000e650 <_ZNSs9_M_mutateEjjj+0xb8>

1000e750 <_ZNSs12_M_leak_hardEv>:
1000e750:	20c00017 	ldw	r3,0(r4)
1000e754:	008400f4 	movhi	r2,4099
1000e758:	10aac004 	addi	r2,r2,-21760
1000e75c:	19bffd04 	addi	r6,r3,-12
1000e760:	30800526 	beq	r6,r2,1000e778 <_ZNSs12_M_leak_hardEv+0x28>
1000e764:	18bfff17 	ldw	r2,-4(r3)
1000e768:	00800416 	blt	zero,r2,1000e77c <_ZNSs12_M_leak_hardEv+0x2c>
1000e76c:	00bfffc4 	movi	r2,-1
1000e770:	18bfff15 	stw	r2,-4(r3)
1000e774:	f800283a 	ret
1000e778:	f800283a 	ret
1000e77c:	defffe04 	addi	sp,sp,-8
1000e780:	000f883a 	mov	r7,zero
1000e784:	000d883a 	mov	r6,zero
1000e788:	000b883a 	mov	r5,zero
1000e78c:	dc000015 	stw	r16,0(sp)
1000e790:	dfc00115 	stw	ra,4(sp)
1000e794:	2021883a 	mov	r16,r4
1000e798:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000e79c:	80c00017 	ldw	r3,0(r16)
1000e7a0:	00bfffc4 	movi	r2,-1
1000e7a4:	18bfff15 	stw	r2,-4(r3)
1000e7a8:	dfc00117 	ldw	ra,4(sp)
1000e7ac:	dc000017 	ldw	r16,0(sp)
1000e7b0:	dec00204 	addi	sp,sp,8
1000e7b4:	f800283a 	ret

1000e7b8 <_ZNSs7_M_leakEv>:
1000e7b8:	20800017 	ldw	r2,0(r4)
1000e7bc:	10bfff17 	ldw	r2,-4(r2)
1000e7c0:	1000010e 	bge	r2,zero,1000e7c8 <_ZNSs7_M_leakEv+0x10>
1000e7c4:	f800283a 	ret
1000e7c8:	000e7501 	jmpi	1000e750 <_ZNSs12_M_leak_hardEv>

1000e7cc <_ZNSs5beginEv>:
1000e7cc:	20800017 	ldw	r2,0(r4)
1000e7d0:	117fff17 	ldw	r5,-4(r2)
1000e7d4:	2800010e 	bge	r5,zero,1000e7dc <_ZNSs5beginEv+0x10>
1000e7d8:	f800283a 	ret
1000e7dc:	defffe04 	addi	sp,sp,-8
1000e7e0:	dc000015 	stw	r16,0(sp)
1000e7e4:	dfc00115 	stw	ra,4(sp)
1000e7e8:	2021883a 	mov	r16,r4
1000e7ec:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e7f0:	80800017 	ldw	r2,0(r16)
1000e7f4:	dfc00117 	ldw	ra,4(sp)
1000e7f8:	dc000017 	ldw	r16,0(sp)
1000e7fc:	dec00204 	addi	sp,sp,8
1000e800:	f800283a 	ret

1000e804 <_ZNSs4rendEv>:
1000e804:	28c00017 	ldw	r3,0(r5)
1000e808:	2005883a 	mov	r2,r4
1000e80c:	193fff17 	ldw	r4,-4(r3)
1000e810:	2000020e 	bge	r4,zero,1000e81c <_ZNSs4rendEv+0x18>
1000e814:	10c00015 	stw	r3,0(r2)
1000e818:	f800283a 	ret
1000e81c:	defffd04 	addi	sp,sp,-12
1000e820:	2809883a 	mov	r4,r5
1000e824:	dfc00215 	stw	ra,8(sp)
1000e828:	d8800115 	stw	r2,4(sp)
1000e82c:	d9400015 	stw	r5,0(sp)
1000e830:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e834:	d9400017 	ldw	r5,0(sp)
1000e838:	d8800117 	ldw	r2,4(sp)
1000e83c:	28c00017 	ldw	r3,0(r5)
1000e840:	10c00015 	stw	r3,0(r2)
1000e844:	dfc00217 	ldw	ra,8(sp)
1000e848:	dec00304 	addi	sp,sp,12
1000e84c:	f800283a 	ret

1000e850 <_ZNSs3endEv>:
1000e850:	20800017 	ldw	r2,0(r4)
1000e854:	117fff17 	ldw	r5,-4(r2)
1000e858:	2800030e 	bge	r5,zero,1000e868 <_ZNSs3endEv+0x18>
1000e85c:	10fffd17 	ldw	r3,-12(r2)
1000e860:	10c5883a 	add	r2,r2,r3
1000e864:	f800283a 	ret
1000e868:	defffe04 	addi	sp,sp,-8
1000e86c:	dc000015 	stw	r16,0(sp)
1000e870:	dfc00115 	stw	ra,4(sp)
1000e874:	2021883a 	mov	r16,r4
1000e878:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e87c:	80800017 	ldw	r2,0(r16)
1000e880:	10fffd17 	ldw	r3,-12(r2)
1000e884:	10c5883a 	add	r2,r2,r3
1000e888:	dfc00117 	ldw	ra,4(sp)
1000e88c:	dc000017 	ldw	r16,0(sp)
1000e890:	dec00204 	addi	sp,sp,8
1000e894:	f800283a 	ret

1000e898 <_ZNSs6rbeginEv>:
1000e898:	28c00017 	ldw	r3,0(r5)
1000e89c:	defffd04 	addi	sp,sp,-12
1000e8a0:	dc000115 	stw	r16,4(sp)
1000e8a4:	18bfff17 	ldw	r2,-4(r3)
1000e8a8:	dfc00215 	stw	ra,8(sp)
1000e8ac:	2021883a 	mov	r16,r4
1000e8b0:	10000516 	blt	r2,zero,1000e8c8 <_ZNSs6rbeginEv+0x30>
1000e8b4:	2809883a 	mov	r4,r5
1000e8b8:	d9400015 	stw	r5,0(sp)
1000e8bc:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e8c0:	d9400017 	ldw	r5,0(sp)
1000e8c4:	28c00017 	ldw	r3,0(r5)
1000e8c8:	193ffd17 	ldw	r4,-12(r3)
1000e8cc:	8005883a 	mov	r2,r16
1000e8d0:	1907883a 	add	r3,r3,r4
1000e8d4:	80c00015 	stw	r3,0(r16)
1000e8d8:	dfc00217 	ldw	ra,8(sp)
1000e8dc:	dc000117 	ldw	r16,4(sp)
1000e8e0:	dec00304 	addi	sp,sp,12
1000e8e4:	f800283a 	ret

1000e8e8 <_ZNSsixEj>:
1000e8e8:	20800017 	ldw	r2,0(r4)
1000e8ec:	10ffff17 	ldw	r3,-4(r2)
1000e8f0:	1800020e 	bge	r3,zero,1000e8fc <_ZNSsixEj+0x14>
1000e8f4:	1145883a 	add	r2,r2,r5
1000e8f8:	f800283a 	ret
1000e8fc:	defffd04 	addi	sp,sp,-12
1000e900:	dc000115 	stw	r16,4(sp)
1000e904:	dfc00215 	stw	ra,8(sp)
1000e908:	2021883a 	mov	r16,r4
1000e90c:	d9400015 	stw	r5,0(sp)
1000e910:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e914:	80800017 	ldw	r2,0(r16)
1000e918:	d9400017 	ldw	r5,0(sp)
1000e91c:	1145883a 	add	r2,r2,r5
1000e920:	dfc00217 	ldw	ra,8(sp)
1000e924:	dc000117 	ldw	r16,4(sp)
1000e928:	dec00304 	addi	sp,sp,12
1000e92c:	f800283a 	ret

1000e930 <_ZNSs5frontEv>:
1000e930:	20800017 	ldw	r2,0(r4)
1000e934:	117fff17 	ldw	r5,-4(r2)
1000e938:	2800010e 	bge	r5,zero,1000e940 <_ZNSs5frontEv+0x10>
1000e93c:	f800283a 	ret
1000e940:	defffe04 	addi	sp,sp,-8
1000e944:	dc000015 	stw	r16,0(sp)
1000e948:	dfc00115 	stw	ra,4(sp)
1000e94c:	2021883a 	mov	r16,r4
1000e950:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e954:	80800017 	ldw	r2,0(r16)
1000e958:	dfc00117 	ldw	ra,4(sp)
1000e95c:	dc000017 	ldw	r16,0(sp)
1000e960:	dec00204 	addi	sp,sp,8
1000e964:	f800283a 	ret

1000e968 <_ZNSs4backEv>:
1000e968:	20c00017 	ldw	r3,0(r4)
1000e96c:	defffd04 	addi	sp,sp,-12
1000e970:	dc000015 	stw	r16,0(sp)
1000e974:	197fff17 	ldw	r5,-4(r3)
1000e978:	1c3ffd17 	ldw	r16,-12(r3)
1000e97c:	dfc00215 	stw	ra,8(sp)
1000e980:	dc400115 	stw	r17,4(sp)
1000e984:	843fffc4 	addi	r16,r16,-1
1000e988:	28000316 	blt	r5,zero,1000e998 <_ZNSs4backEv+0x30>
1000e98c:	2023883a 	mov	r17,r4
1000e990:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e994:	88c00017 	ldw	r3,0(r17)
1000e998:	1c05883a 	add	r2,r3,r16
1000e99c:	dfc00217 	ldw	ra,8(sp)
1000e9a0:	dc400117 	ldw	r17,4(sp)
1000e9a4:	dc000017 	ldw	r16,0(sp)
1000e9a8:	dec00304 	addi	sp,sp,12
1000e9ac:	f800283a 	ret

1000e9b0 <_ZNSs2atEj>:
1000e9b0:	20800017 	ldw	r2,0(r4)
1000e9b4:	defffd04 	addi	sp,sp,-12
1000e9b8:	dfc00215 	stw	ra,8(sp)
1000e9bc:	11bffd17 	ldw	r6,-12(r2)
1000e9c0:	dc400115 	stw	r17,4(sp)
1000e9c4:	dc000015 	stw	r16,0(sp)
1000e9c8:	29800c2e 	bgeu	r5,r6,1000e9fc <_ZNSs2atEj+0x4c>
1000e9cc:	10ffff17 	ldw	r3,-4(r2)
1000e9d0:	2821883a 	mov	r16,r5
1000e9d4:	18000316 	blt	r3,zero,1000e9e4 <_ZNSs2atEj+0x34>
1000e9d8:	2023883a 	mov	r17,r4
1000e9dc:	000e7500 	call	1000e750 <_ZNSs12_M_leak_hardEv>
1000e9e0:	88800017 	ldw	r2,0(r17)
1000e9e4:	1405883a 	add	r2,r2,r16
1000e9e8:	dfc00217 	ldw	ra,8(sp)
1000e9ec:	dc400117 	ldw	r17,4(sp)
1000e9f0:	dc000017 	ldw	r16,0(sp)
1000e9f4:	dec00304 	addi	sp,sp,12
1000e9f8:	f800283a 	ret
1000e9fc:	010400b4 	movhi	r4,4098
1000ea00:	21162d04 	addi	r4,r4,22708
1000ea04:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000ea08 <_ZNSs5eraseEjj>:
1000ea08:	20800017 	ldw	r2,0(r4)
1000ea0c:	defffe04 	addi	sp,sp,-8
1000ea10:	dfc00115 	stw	ra,4(sp)
1000ea14:	10fffd17 	ldw	r3,-12(r2)
1000ea18:	dc000015 	stw	r16,0(sp)
1000ea1c:	2811883a 	mov	r8,r5
1000ea20:	19400f36 	bltu	r3,r5,1000ea60 <_ZNSs5eraseEjj+0x58>
1000ea24:	1947c83a 	sub	r3,r3,r5
1000ea28:	2021883a 	mov	r16,r4
1000ea2c:	30c00a36 	bltu	r6,r3,1000ea58 <_ZNSs5eraseEjj+0x50>
1000ea30:	000f883a 	mov	r7,zero
1000ea34:	180d883a 	mov	r6,r3
1000ea38:	400b883a 	mov	r5,r8
1000ea3c:	8009883a 	mov	r4,r16
1000ea40:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000ea44:	8005883a 	mov	r2,r16
1000ea48:	dfc00117 	ldw	ra,4(sp)
1000ea4c:	dc000017 	ldw	r16,0(sp)
1000ea50:	dec00204 	addi	sp,sp,8
1000ea54:	f800283a 	ret
1000ea58:	3007883a 	mov	r3,r6
1000ea5c:	003ff406 	br	1000ea30 <_ZNSs5eraseEjj+0x28>
1000ea60:	014400b4 	movhi	r5,4098
1000ea64:	010400b4 	movhi	r4,4098
1000ea68:	180f883a 	mov	r7,r3
1000ea6c:	400d883a 	mov	r6,r8
1000ea70:	29564f04 	addi	r5,r5,22844
1000ea74:	21161f04 	addi	r4,r4,22652
1000ea78:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000ea7c <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE>:
1000ea7c:	defffd04 	addi	sp,sp,-12
1000ea80:	dc000015 	stw	r16,0(sp)
1000ea84:	24000017 	ldw	r16,0(r4)
1000ea88:	000f883a 	mov	r7,zero
1000ea8c:	01800044 	movi	r6,1
1000ea90:	2c21c83a 	sub	r16,r5,r16
1000ea94:	800b883a 	mov	r5,r16
1000ea98:	dc400115 	stw	r17,4(sp)
1000ea9c:	dfc00215 	stw	ra,8(sp)
1000eaa0:	2023883a 	mov	r17,r4
1000eaa4:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000eaa8:	88800017 	ldw	r2,0(r17)
1000eaac:	00ffffc4 	movi	r3,-1
1000eab0:	10ffff15 	stw	r3,-4(r2)
1000eab4:	1405883a 	add	r2,r2,r16
1000eab8:	dfc00217 	ldw	ra,8(sp)
1000eabc:	dc400117 	ldw	r17,4(sp)
1000eac0:	dc000017 	ldw	r16,0(sp)
1000eac4:	dec00304 	addi	sp,sp,12
1000eac8:	f800283a 	ret

1000eacc <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_>:
1000eacc:	314dc83a 	sub	r6,r6,r5
1000ead0:	3000021e 	bne	r6,zero,1000eadc <_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_+0x10>
1000ead4:	2805883a 	mov	r2,r5
1000ead8:	f800283a 	ret
1000eadc:	20800017 	ldw	r2,0(r4)
1000eae0:	defffd04 	addi	sp,sp,-12
1000eae4:	dc000015 	stw	r16,0(sp)
1000eae8:	28a1c83a 	sub	r16,r5,r2
1000eaec:	800b883a 	mov	r5,r16
1000eaf0:	000f883a 	mov	r7,zero
1000eaf4:	dc400115 	stw	r17,4(sp)
1000eaf8:	dfc00215 	stw	ra,8(sp)
1000eafc:	2023883a 	mov	r17,r4
1000eb00:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000eb04:	89400017 	ldw	r5,0(r17)
1000eb08:	00bfffc4 	movi	r2,-1
1000eb0c:	28bfff15 	stw	r2,-4(r5)
1000eb10:	2c05883a 	add	r2,r5,r16
1000eb14:	dfc00217 	ldw	ra,8(sp)
1000eb18:	dc400117 	ldw	r17,4(sp)
1000eb1c:	dc000017 	ldw	r16,0(sp)
1000eb20:	dec00304 	addi	sp,sp,12
1000eb24:	f800283a 	ret

1000eb28 <_ZNSs14_M_replace_auxEjjjc>:
1000eb28:	20c00017 	ldw	r3,0(r4)
1000eb2c:	00900034 	movhi	r2,16384
1000eb30:	10bfff04 	addi	r2,r2,-4
1000eb34:	18fffd17 	ldw	r3,-12(r3)
1000eb38:	defffb04 	addi	sp,sp,-20
1000eb3c:	3085883a 	add	r2,r6,r2
1000eb40:	dcc00315 	stw	r19,12(sp)
1000eb44:	dfc00415 	stw	ra,16(sp)
1000eb48:	dc800215 	stw	r18,8(sp)
1000eb4c:	dc400115 	stw	r17,4(sp)
1000eb50:	dc000015 	stw	r16,0(sp)
1000eb54:	10c5c83a 	sub	r2,r2,r3
1000eb58:	dcc00517 	ldw	r19,20(sp)
1000eb5c:	11c01836 	bltu	r2,r7,1000ebc0 <_ZNSs14_M_replace_auxEjjjc+0x98>
1000eb60:	3821883a 	mov	r16,r7
1000eb64:	2023883a 	mov	r17,r4
1000eb68:	2825883a 	mov	r18,r5
1000eb6c:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000eb70:	80000926 	beq	r16,zero,1000eb98 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000eb74:	89000017 	ldw	r4,0(r17)
1000eb78:	80800058 	cmpnei	r2,r16,1
1000eb7c:	2489883a 	add	r4,r4,r18
1000eb80:	10000d26 	beq	r2,zero,1000ebb8 <_ZNSs14_M_replace_auxEjjjc+0x90>
1000eb84:	99403fcc 	andi	r5,r19,255
1000eb88:	2940201c 	xori	r5,r5,128
1000eb8c:	800d883a 	mov	r6,r16
1000eb90:	297fe004 	addi	r5,r5,-128
1000eb94:	0015a240 	call	10015a24 <memset>
1000eb98:	8805883a 	mov	r2,r17
1000eb9c:	dfc00417 	ldw	ra,16(sp)
1000eba0:	dcc00317 	ldw	r19,12(sp)
1000eba4:	dc800217 	ldw	r18,8(sp)
1000eba8:	dc400117 	ldw	r17,4(sp)
1000ebac:	dc000017 	ldw	r16,0(sp)
1000ebb0:	dec00504 	addi	sp,sp,20
1000ebb4:	f800283a 	ret
1000ebb8:	24c00005 	stb	r19,0(r4)
1000ebbc:	003ff606 	br	1000eb98 <_ZNSs14_M_replace_auxEjjjc+0x70>
1000ebc0:	010400b4 	movhi	r4,4098
1000ebc4:	21165404 	addi	r4,r4,22864
1000ebc8:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000ebcc <_ZNSs6assignEjc>:
1000ebcc:	31803fcc 	andi	r6,r6,255
1000ebd0:	20800017 	ldw	r2,0(r4)
1000ebd4:	3180201c 	xori	r6,r6,128
1000ebd8:	defffe04 	addi	sp,sp,-8
1000ebdc:	31bfe004 	addi	r6,r6,-128
1000ebe0:	d9800015 	stw	r6,0(sp)
1000ebe4:	11bffd17 	ldw	r6,-12(r2)
1000ebe8:	280f883a 	mov	r7,r5
1000ebec:	000b883a 	mov	r5,zero
1000ebf0:	dfc00115 	stw	ra,4(sp)
1000ebf4:	000eb280 	call	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000ebf8:	dfc00117 	ldw	ra,4(sp)
1000ebfc:	dec00204 	addi	sp,sp,8
1000ec00:	f800283a 	ret

1000ec04 <_ZNSsaSEc>:
1000ec04:	29403fcc 	andi	r5,r5,255
1000ec08:	20800017 	ldw	r2,0(r4)
1000ec0c:	2940201c 	xori	r5,r5,128
1000ec10:	defffd04 	addi	sp,sp,-12
1000ec14:	297fe004 	addi	r5,r5,-128
1000ec18:	d9400015 	stw	r5,0(sp)
1000ec1c:	11bffd17 	ldw	r6,-12(r2)
1000ec20:	01c00044 	movi	r7,1
1000ec24:	000b883a 	mov	r5,zero
1000ec28:	dc000115 	stw	r16,4(sp)
1000ec2c:	dfc00215 	stw	ra,8(sp)
1000ec30:	2021883a 	mov	r16,r4
1000ec34:	000eb280 	call	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000ec38:	8005883a 	mov	r2,r16
1000ec3c:	dfc00217 	ldw	ra,8(sp)
1000ec40:	dc000117 	ldw	r16,4(sp)
1000ec44:	dec00304 	addi	sp,sp,12
1000ec48:	f800283a 	ret

1000ec4c <_ZNSs6insertEjjc>:
1000ec4c:	20c00017 	ldw	r3,0(r4)
1000ec50:	defffe04 	addi	sp,sp,-8
1000ec54:	dfc00115 	stw	ra,4(sp)
1000ec58:	18fffd17 	ldw	r3,-12(r3)
1000ec5c:	19400a36 	bltu	r3,r5,1000ec88 <_ZNSs6insertEjjc+0x3c>
1000ec60:	39c03fcc 	andi	r7,r7,255
1000ec64:	39c0201c 	xori	r7,r7,128
1000ec68:	39ffe004 	addi	r7,r7,-128
1000ec6c:	d9c00015 	stw	r7,0(sp)
1000ec70:	300f883a 	mov	r7,r6
1000ec74:	000d883a 	mov	r6,zero
1000ec78:	000eb280 	call	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000ec7c:	dfc00117 	ldw	ra,4(sp)
1000ec80:	dec00204 	addi	sp,sp,8
1000ec84:	f800283a 	ret
1000ec88:	2805883a 	mov	r2,r5
1000ec8c:	010400b4 	movhi	r4,4098
1000ec90:	014400b4 	movhi	r5,4098
1000ec94:	180f883a 	mov	r7,r3
1000ec98:	100d883a 	mov	r6,r2
1000ec9c:	29565c04 	addi	r5,r5,22896
1000eca0:	21161f04 	addi	r4,r4,22652
1000eca4:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000eca8 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>:
1000eca8:	defffc04 	addi	sp,sp,-16
1000ecac:	dc000115 	stw	r16,4(sp)
1000ecb0:	24000017 	ldw	r16,0(r4)
1000ecb4:	31803fcc 	andi	r6,r6,255
1000ecb8:	3180201c 	xori	r6,r6,128
1000ecbc:	2c21c83a 	sub	r16,r5,r16
1000ecc0:	31bfe004 	addi	r6,r6,-128
1000ecc4:	d9800015 	stw	r6,0(sp)
1000ecc8:	01c00044 	movi	r7,1
1000eccc:	000d883a 	mov	r6,zero
1000ecd0:	800b883a 	mov	r5,r16
1000ecd4:	dc400215 	stw	r17,8(sp)
1000ecd8:	dfc00315 	stw	ra,12(sp)
1000ecdc:	2023883a 	mov	r17,r4
1000ece0:	000eb280 	call	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000ece4:	88800017 	ldw	r2,0(r17)
1000ece8:	00ffffc4 	movi	r3,-1
1000ecec:	10ffff15 	stw	r3,-4(r2)
1000ecf0:	1405883a 	add	r2,r2,r16
1000ecf4:	dfc00317 	ldw	ra,12(sp)
1000ecf8:	dc400217 	ldw	r17,8(sp)
1000ecfc:	dc000117 	ldw	r16,4(sp)
1000ed00:	dec00404 	addi	sp,sp,16
1000ed04:	f800283a 	ret

1000ed08 <_ZNSs7replaceEjjjc>:
1000ed08:	20800017 	ldw	r2,0(r4)
1000ed0c:	deffff04 	addi	sp,sp,-4
1000ed10:	dfc00015 	stw	ra,0(sp)
1000ed14:	10bffd17 	ldw	r2,-12(r2)
1000ed18:	d8c00117 	ldw	r3,4(sp)
1000ed1c:	11400c36 	bltu	r2,r5,1000ed50 <_ZNSs7replaceEjjjc+0x48>
1000ed20:	1145c83a 	sub	r2,r2,r5
1000ed24:	30800836 	bltu	r6,r2,1000ed48 <_ZNSs7replaceEjjjc+0x40>
1000ed28:	18c03fcc 	andi	r3,r3,255
1000ed2c:	18c0201c 	xori	r3,r3,128
1000ed30:	18ffe004 	addi	r3,r3,-128
1000ed34:	100d883a 	mov	r6,r2
1000ed38:	d8c00115 	stw	r3,4(sp)
1000ed3c:	dfc00017 	ldw	ra,0(sp)
1000ed40:	dec00104 	addi	sp,sp,4
1000ed44:	000eb281 	jmpi	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000ed48:	3005883a 	mov	r2,r6
1000ed4c:	003ff606 	br	1000ed28 <_ZNSs7replaceEjjjc+0x20>
1000ed50:	280d883a 	mov	r6,r5
1000ed54:	010400b4 	movhi	r4,4098
1000ed58:	014400b4 	movhi	r5,4098
1000ed5c:	100f883a 	mov	r7,r2
1000ed60:	29566204 	addi	r5,r5,22920
1000ed64:	21161f04 	addi	r4,r4,22652
1000ed68:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000ed6c <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc>:
1000ed6c:	20800017 	ldw	r2,0(r4)
1000ed70:	d8c00007 	ldb	r3,0(sp)
1000ed74:	314dc83a 	sub	r6,r6,r5
1000ed78:	288bc83a 	sub	r5,r5,r2
1000ed7c:	d8c00015 	stw	r3,0(sp)
1000ed80:	000eb281 	jmpi	1000eb28 <_ZNSs14_M_replace_auxEjjjc>

1000ed84 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc>:
1000ed84:	20800017 	ldw	r2,0(r4)
1000ed88:	39c03fcc 	andi	r7,r7,255
1000ed8c:	39c0201c 	xori	r7,r7,128
1000ed90:	defffe04 	addi	sp,sp,-8
1000ed94:	39ffe004 	addi	r7,r7,-128
1000ed98:	d9c00015 	stw	r7,0(sp)
1000ed9c:	288bc83a 	sub	r5,r5,r2
1000eda0:	300f883a 	mov	r7,r6
1000eda4:	000d883a 	mov	r6,zero
1000eda8:	dfc00115 	stw	ra,4(sp)
1000edac:	000eb280 	call	1000eb28 <_ZNSs14_M_replace_auxEjjjc>
1000edb0:	dfc00117 	ldw	ra,4(sp)
1000edb4:	dec00204 	addi	sp,sp,8
1000edb8:	f800283a 	ret

1000edbc <_ZNSs15_M_replace_safeEjjPKcj>:
1000edbc:	defffb04 	addi	sp,sp,-20
1000edc0:	dc000015 	stw	r16,0(sp)
1000edc4:	dc000517 	ldw	r16,20(sp)
1000edc8:	dc800215 	stw	r18,8(sp)
1000edcc:	3825883a 	mov	r18,r7
1000edd0:	800f883a 	mov	r7,r16
1000edd4:	dcc00315 	stw	r19,12(sp)
1000edd8:	dc400115 	stw	r17,4(sp)
1000eddc:	dfc00415 	stw	ra,16(sp)
1000ede0:	2023883a 	mov	r17,r4
1000ede4:	2827883a 	mov	r19,r5
1000ede8:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000edec:	80000726 	beq	r16,zero,1000ee0c <_ZNSs15_M_replace_safeEjjPKcj+0x50>
1000edf0:	89000017 	ldw	r4,0(r17)
1000edf4:	80800058 	cmpnei	r2,r16,1
1000edf8:	24c9883a 	add	r4,r4,r19
1000edfc:	10000b26 	beq	r2,zero,1000ee2c <_ZNSs15_M_replace_safeEjjPKcj+0x70>
1000ee00:	800d883a 	mov	r6,r16
1000ee04:	900b883a 	mov	r5,r18
1000ee08:	00157f80 	call	100157f8 <memcpy>
1000ee0c:	8805883a 	mov	r2,r17
1000ee10:	dfc00417 	ldw	ra,16(sp)
1000ee14:	dcc00317 	ldw	r19,12(sp)
1000ee18:	dc800217 	ldw	r18,8(sp)
1000ee1c:	dc400117 	ldw	r17,4(sp)
1000ee20:	dc000017 	ldw	r16,0(sp)
1000ee24:	dec00504 	addi	sp,sp,20
1000ee28:	f800283a 	ret
1000ee2c:	90800003 	ldbu	r2,0(r18)
1000ee30:	20800005 	stb	r2,0(r4)
1000ee34:	003ff506 	br	1000ee0c <_ZNSs15_M_replace_safeEjjPKcj+0x50>

1000ee38 <_ZNSs6assignEPKcj>:
1000ee38:	defffc04 	addi	sp,sp,-16
1000ee3c:	dc000115 	stw	r16,4(sp)
1000ee40:	2021883a 	mov	r16,r4
1000ee44:	21000017 	ldw	r4,0(r4)
1000ee48:	00900034 	movhi	r2,16384
1000ee4c:	dfc00315 	stw	ra,12(sp)
1000ee50:	dc400215 	stw	r17,8(sp)
1000ee54:	10bfff04 	addi	r2,r2,-4
1000ee58:	20fffd17 	ldw	r3,-12(r4)
1000ee5c:	11802c36 	bltu	r2,r6,1000ef10 <_ZNSs6assignEPKcj+0xd8>
1000ee60:	3023883a 	mov	r17,r6
1000ee64:	280f883a 	mov	r7,r5
1000ee68:	29000a2e 	bgeu	r5,r4,1000ee94 <_ZNSs6assignEPKcj+0x5c>
1000ee6c:	dc400015 	stw	r17,0(sp)
1000ee70:	180d883a 	mov	r6,r3
1000ee74:	000b883a 	mov	r5,zero
1000ee78:	8009883a 	mov	r4,r16
1000ee7c:	000edbc0 	call	1000edbc <_ZNSs15_M_replace_safeEjjPKcj>
1000ee80:	dfc00317 	ldw	ra,12(sp)
1000ee84:	dc400217 	ldw	r17,8(sp)
1000ee88:	dc000117 	ldw	r16,4(sp)
1000ee8c:	dec00404 	addi	sp,sp,16
1000ee90:	f800283a 	ret
1000ee94:	20c5883a 	add	r2,r4,r3
1000ee98:	117ff436 	bltu	r2,r5,1000ee6c <_ZNSs6assignEPKcj+0x34>
1000ee9c:	20bfff17 	ldw	r2,-4(r4)
1000eea0:	00bff216 	blt	zero,r2,1000ee6c <_ZNSs6assignEPKcj+0x34>
1000eea4:	2905c83a 	sub	r2,r5,r4
1000eea8:	11800f2e 	bgeu	r2,r6,1000eee8 <_ZNSs6assignEPKcj+0xb0>
1000eeac:	10000426 	beq	r2,zero,1000eec0 <_ZNSs6assignEPKcj+0x88>
1000eeb0:	30800058 	cmpnei	r2,r6,1
1000eeb4:	10001226 	beq	r2,zero,1000ef00 <_ZNSs6assignEPKcj+0xc8>
1000eeb8:	00158f80 	call	100158f8 <memmove>
1000eebc:	81000017 	ldw	r4,0(r16)
1000eec0:	00c400f4 	movhi	r3,4099
1000eec4:	217ffd04 	addi	r5,r4,-12
1000eec8:	18eac004 	addi	r3,r3,-21760
1000eecc:	8005883a 	mov	r2,r16
1000eed0:	28ffeb26 	beq	r5,r3,1000ee80 <_ZNSs6assignEPKcj+0x48>
1000eed4:	203fff15 	stw	zero,-4(r4)
1000eed8:	247ffd15 	stw	r17,-12(r4)
1000eedc:	2449883a 	add	r4,r4,r17
1000eee0:	20000005 	stb	zero,0(r4)
1000eee4:	003fe606 	br	1000ee80 <_ZNSs6assignEPKcj+0x48>
1000eee8:	30800058 	cmpnei	r2,r6,1
1000eeec:	10000426 	beq	r2,zero,1000ef00 <_ZNSs6assignEPKcj+0xc8>
1000eef0:	303ff326 	beq	r6,zero,1000eec0 <_ZNSs6assignEPKcj+0x88>
1000eef4:	00157f80 	call	100157f8 <memcpy>
1000eef8:	81000017 	ldw	r4,0(r16)
1000eefc:	003ff006 	br	1000eec0 <_ZNSs6assignEPKcj+0x88>
1000ef00:	38800003 	ldbu	r2,0(r7)
1000ef04:	20800005 	stb	r2,0(r4)
1000ef08:	81000017 	ldw	r4,0(r16)
1000ef0c:	003fec06 	br	1000eec0 <_ZNSs6assignEPKcj+0x88>
1000ef10:	010400b4 	movhi	r4,4098
1000ef14:	21166804 	addi	r4,r4,22944
1000ef18:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000ef1c <_ZNSsaSESt16initializer_listIcE>:
1000ef1c:	defffe04 	addi	sp,sp,-8
1000ef20:	dc000015 	stw	r16,0(sp)
1000ef24:	dfc00115 	stw	ra,4(sp)
1000ef28:	2021883a 	mov	r16,r4
1000ef2c:	000ee380 	call	1000ee38 <_ZNSs6assignEPKcj>
1000ef30:	8005883a 	mov	r2,r16
1000ef34:	dfc00117 	ldw	ra,4(sp)
1000ef38:	dc000017 	ldw	r16,0(sp)
1000ef3c:	dec00204 	addi	sp,sp,8
1000ef40:	f800283a 	ret

1000ef44 <_ZNSs6assignERKSsjj>:
1000ef44:	29400017 	ldw	r5,0(r5)
1000ef48:	28bffd17 	ldw	r2,-12(r5)
1000ef4c:	11800836 	bltu	r2,r6,1000ef70 <_ZNSs6assignERKSsjj+0x2c>
1000ef50:	3007883a 	mov	r3,r6
1000ef54:	118dc83a 	sub	r6,r2,r6
1000ef58:	39800236 	bltu	r7,r6,1000ef64 <_ZNSs6assignERKSsjj+0x20>
1000ef5c:	28cb883a 	add	r5,r5,r3
1000ef60:	000ee381 	jmpi	1000ee38 <_ZNSs6assignEPKcj>
1000ef64:	380d883a 	mov	r6,r7
1000ef68:	28cb883a 	add	r5,r5,r3
1000ef6c:	000ee381 	jmpi	1000ee38 <_ZNSs6assignEPKcj>
1000ef70:	014400b4 	movhi	r5,4098
1000ef74:	010400b4 	movhi	r4,4098
1000ef78:	deffff04 	addi	sp,sp,-4
1000ef7c:	100f883a 	mov	r7,r2
1000ef80:	29566804 	addi	r5,r5,22944
1000ef84:	21161f04 	addi	r4,r4,22652
1000ef88:	dfc00015 	stw	ra,0(sp)
1000ef8c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000ef90 <_ZNSs6assignEPKc>:
1000ef90:	defffd04 	addi	sp,sp,-12
1000ef94:	dc000115 	stw	r16,4(sp)
1000ef98:	2021883a 	mov	r16,r4
1000ef9c:	2809883a 	mov	r4,r5
1000efa0:	dfc00215 	stw	ra,8(sp)
1000efa4:	d9400015 	stw	r5,0(sp)
1000efa8:	00164b40 	call	100164b4 <strlen>
1000efac:	d9400017 	ldw	r5,0(sp)
1000efb0:	100d883a 	mov	r6,r2
1000efb4:	8009883a 	mov	r4,r16
1000efb8:	dfc00217 	ldw	ra,8(sp)
1000efbc:	dc000117 	ldw	r16,4(sp)
1000efc0:	dec00304 	addi	sp,sp,12
1000efc4:	000ee381 	jmpi	1000ee38 <_ZNSs6assignEPKcj>

1000efc8 <_ZNSsaSEPKc>:
1000efc8:	defffd04 	addi	sp,sp,-12
1000efcc:	dc000115 	stw	r16,4(sp)
1000efd0:	2021883a 	mov	r16,r4
1000efd4:	2809883a 	mov	r4,r5
1000efd8:	dfc00215 	stw	ra,8(sp)
1000efdc:	d9400015 	stw	r5,0(sp)
1000efe0:	00164b40 	call	100164b4 <strlen>
1000efe4:	d9400017 	ldw	r5,0(sp)
1000efe8:	100d883a 	mov	r6,r2
1000efec:	8009883a 	mov	r4,r16
1000eff0:	dfc00217 	ldw	ra,8(sp)
1000eff4:	dc000117 	ldw	r16,4(sp)
1000eff8:	dec00304 	addi	sp,sp,12
1000effc:	000ee381 	jmpi	1000ee38 <_ZNSs6assignEPKcj>

1000f000 <_ZNSs6assignESt16initializer_listIcE>:
1000f000:	000ee381 	jmpi	1000ee38 <_ZNSs6assignEPKcj>

1000f004 <_ZNSs6insertEjPKcj>:
1000f004:	22000017 	ldw	r8,0(r4)
1000f008:	defffa04 	addi	sp,sp,-24
1000f00c:	dcc00415 	stw	r19,16(sp)
1000f010:	40bffd17 	ldw	r2,-12(r8)
1000f014:	dfc00515 	stw	ra,20(sp)
1000f018:	dc800315 	stw	r18,12(sp)
1000f01c:	dc400215 	stw	r17,8(sp)
1000f020:	dc000115 	stw	r16,4(sp)
1000f024:	2827883a 	mov	r19,r5
1000f028:	11405636 	bltu	r2,r5,1000f184 <_ZNSs6insertEjPKcj+0x180>
1000f02c:	00d00034 	movhi	r3,16384
1000f030:	18ffff04 	addi	r3,r3,-4
1000f034:	1887c83a 	sub	r3,r3,r2
1000f038:	3825883a 	mov	r18,r7
1000f03c:	19c04e36 	bltu	r3,r7,1000f178 <_ZNSs6insertEjPKcj+0x174>
1000f040:	2021883a 	mov	r16,r4
1000f044:	3023883a 	mov	r17,r6
1000f048:	32000d2e 	bgeu	r6,r8,1000f080 <_ZNSs6insertEjPKcj+0x7c>
1000f04c:	dc800015 	stw	r18,0(sp)
1000f050:	880f883a 	mov	r7,r17
1000f054:	000d883a 	mov	r6,zero
1000f058:	980b883a 	mov	r5,r19
1000f05c:	8009883a 	mov	r4,r16
1000f060:	000edbc0 	call	1000edbc <_ZNSs15_M_replace_safeEjjPKcj>
1000f064:	dfc00517 	ldw	ra,20(sp)
1000f068:	dcc00417 	ldw	r19,16(sp)
1000f06c:	dc800317 	ldw	r18,12(sp)
1000f070:	dc400217 	ldw	r17,8(sp)
1000f074:	dc000117 	ldw	r16,4(sp)
1000f078:	dec00604 	addi	sp,sp,24
1000f07c:	f800283a 	ret
1000f080:	4085883a 	add	r2,r8,r2
1000f084:	11bff136 	bltu	r2,r6,1000f04c <_ZNSs6insertEjPKcj+0x48>
1000f088:	40bfff17 	ldw	r2,-4(r8)
1000f08c:	00bfef16 	blt	zero,r2,1000f04c <_ZNSs6insertEjPKcj+0x48>
1000f090:	000d883a 	mov	r6,zero
1000f094:	8a23c83a 	sub	r17,r17,r8
1000f098:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
1000f09c:	80c00017 	ldw	r3,0(r16)
1000f0a0:	1c4b883a 	add	r5,r3,r17
1000f0a4:	2c85883a 	add	r2,r5,r18
1000f0a8:	1cc7883a 	add	r3,r3,r19
1000f0ac:	18800836 	bltu	r3,r2,1000f0d0 <_ZNSs6insertEjPKcj+0xcc>
1000f0b0:	90800058 	cmpnei	r2,r18,1
1000f0b4:	10002126 	beq	r2,zero,1000f13c <_ZNSs6insertEjPKcj+0x138>
1000f0b8:	90001e26 	beq	r18,zero,1000f134 <_ZNSs6insertEjPKcj+0x130>
1000f0bc:	900d883a 	mov	r6,r18
1000f0c0:	1809883a 	mov	r4,r3
1000f0c4:	00157f80 	call	100157f8 <memcpy>
1000f0c8:	8005883a 	mov	r2,r16
1000f0cc:	003fe506 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f0d0:	28c00936 	bltu	r5,r3,1000f0f8 <_ZNSs6insertEjPKcj+0xf4>
1000f0d4:	91000058 	cmpnei	r4,r18,1
1000f0d8:	20001f26 	beq	r4,zero,1000f158 <_ZNSs6insertEjPKcj+0x154>
1000f0dc:	90001526 	beq	r18,zero,1000f134 <_ZNSs6insertEjPKcj+0x130>
1000f0e0:	900d883a 	mov	r6,r18
1000f0e4:	100b883a 	mov	r5,r2
1000f0e8:	1809883a 	mov	r4,r3
1000f0ec:	00157f80 	call	100157f8 <memcpy>
1000f0f0:	8005883a 	mov	r2,r16
1000f0f4:	003fdb06 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f0f8:	9c63c83a 	sub	r17,r19,r17
1000f0fc:	88800058 	cmpnei	r2,r17,1
1000f100:	10001226 	beq	r2,zero,1000f14c <_ZNSs6insertEjPKcj+0x148>
1000f104:	88000426 	beq	r17,zero,1000f118 <_ZNSs6insertEjPKcj+0x114>
1000f108:	1809883a 	mov	r4,r3
1000f10c:	880d883a 	mov	r6,r17
1000f110:	00157f80 	call	100157f8 <memcpy>
1000f114:	1007883a 	mov	r3,r2
1000f118:	944dc83a 	sub	r6,r18,r17
1000f11c:	30800058 	cmpnei	r2,r6,1
1000f120:	1c49883a 	add	r4,r3,r17
1000f124:	1c8b883a 	add	r5,r3,r18
1000f128:	10000f26 	beq	r2,zero,1000f168 <_ZNSs6insertEjPKcj+0x164>
1000f12c:	30000126 	beq	r6,zero,1000f134 <_ZNSs6insertEjPKcj+0x130>
1000f130:	00157f80 	call	100157f8 <memcpy>
1000f134:	8005883a 	mov	r2,r16
1000f138:	003fca06 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f13c:	29000003 	ldbu	r4,0(r5)
1000f140:	8005883a 	mov	r2,r16
1000f144:	19000005 	stb	r4,0(r3)
1000f148:	003fc606 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f14c:	28800003 	ldbu	r2,0(r5)
1000f150:	18800005 	stb	r2,0(r3)
1000f154:	003ff006 	br	1000f118 <_ZNSs6insertEjPKcj+0x114>
1000f158:	11000003 	ldbu	r4,0(r2)
1000f15c:	8005883a 	mov	r2,r16
1000f160:	19000005 	stb	r4,0(r3)
1000f164:	003fbf06 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f168:	28c00003 	ldbu	r3,0(r5)
1000f16c:	8005883a 	mov	r2,r16
1000f170:	20c00005 	stb	r3,0(r4)
1000f174:	003fbb06 	br	1000f064 <_ZNSs6insertEjPKcj+0x60>
1000f178:	010400b4 	movhi	r4,4098
1000f17c:	21165c04 	addi	r4,r4,22896
1000f180:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>
1000f184:	014400b4 	movhi	r5,4098
1000f188:	010400b4 	movhi	r4,4098
1000f18c:	100f883a 	mov	r7,r2
1000f190:	980d883a 	mov	r6,r19
1000f194:	29565c04 	addi	r5,r5,22896
1000f198:	21161f04 	addi	r4,r4,22652
1000f19c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000f1a0 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE>:
1000f1a0:	20800017 	ldw	r2,0(r4)
1000f1a4:	288bc83a 	sub	r5,r5,r2
1000f1a8:	000f0041 	jmpi	1000f004 <_ZNSs6insertEjPKcj>

1000f1ac <_ZNSs6insertEjRKSsjj>:
1000f1ac:	31800017 	ldw	r6,0(r6)
1000f1b0:	3805883a 	mov	r2,r7
1000f1b4:	deffff04 	addi	sp,sp,-4
1000f1b8:	31fffd17 	ldw	r7,-12(r6)
1000f1bc:	dfc00015 	stw	ra,0(sp)
1000f1c0:	d8c00117 	ldw	r3,4(sp)
1000f1c4:	38800b36 	bltu	r7,r2,1000f1f4 <_ZNSs6insertEjRKSsjj+0x48>
1000f1c8:	388fc83a 	sub	r7,r7,r2
1000f1cc:	19c00436 	bltu	r3,r7,1000f1e0 <_ZNSs6insertEjRKSsjj+0x34>
1000f1d0:	308d883a 	add	r6,r6,r2
1000f1d4:	dfc00017 	ldw	ra,0(sp)
1000f1d8:	dec00104 	addi	sp,sp,4
1000f1dc:	000f0041 	jmpi	1000f004 <_ZNSs6insertEjPKcj>
1000f1e0:	180f883a 	mov	r7,r3
1000f1e4:	308d883a 	add	r6,r6,r2
1000f1e8:	dfc00017 	ldw	ra,0(sp)
1000f1ec:	dec00104 	addi	sp,sp,4
1000f1f0:	000f0041 	jmpi	1000f004 <_ZNSs6insertEjPKcj>
1000f1f4:	014400b4 	movhi	r5,4098
1000f1f8:	010400b4 	movhi	r4,4098
1000f1fc:	100d883a 	mov	r6,r2
1000f200:	29565c04 	addi	r5,r5,22896
1000f204:	21161f04 	addi	r4,r4,22652
1000f208:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000f20c <_ZNSs6insertEjPKc>:
1000f20c:	defffc04 	addi	sp,sp,-16
1000f210:	dc000215 	stw	r16,8(sp)
1000f214:	2021883a 	mov	r16,r4
1000f218:	3009883a 	mov	r4,r6
1000f21c:	dfc00315 	stw	ra,12(sp)
1000f220:	d9400115 	stw	r5,4(sp)
1000f224:	d9800015 	stw	r6,0(sp)
1000f228:	00164b40 	call	100164b4 <strlen>
1000f22c:	d9800017 	ldw	r6,0(sp)
1000f230:	d9400117 	ldw	r5,4(sp)
1000f234:	100f883a 	mov	r7,r2
1000f238:	8009883a 	mov	r4,r16
1000f23c:	dfc00317 	ldw	ra,12(sp)
1000f240:	dc000217 	ldw	r16,8(sp)
1000f244:	dec00404 	addi	sp,sp,16
1000f248:	000f0041 	jmpi	1000f004 <_ZNSs6insertEjPKcj>

1000f24c <_ZNSs6insertEjRKSs>:
1000f24c:	31800017 	ldw	r6,0(r6)
1000f250:	31fffd17 	ldw	r7,-12(r6)
1000f254:	000f0041 	jmpi	1000f004 <_ZNSs6insertEjPKcj>

1000f258 <_ZNSs8pop_backEv>:
1000f258:	20800017 	ldw	r2,0(r4)
1000f25c:	10bffd17 	ldw	r2,-12(r2)
1000f260:	117fffc4 	addi	r5,r2,-1
1000f264:	11400336 	bltu	r2,r5,1000f274 <_ZNSs8pop_backEv+0x1c>
1000f268:	000f883a 	mov	r7,zero
1000f26c:	01800044 	movi	r6,1
1000f270:	000e5981 	jmpi	1000e598 <_ZNSs9_M_mutateEjjj>
1000f274:	014400b4 	movhi	r5,4098
1000f278:	010400b4 	movhi	r4,4098
1000f27c:	deffff04 	addi	sp,sp,-4
1000f280:	000f883a 	mov	r7,zero
1000f284:	01bfffc4 	movi	r6,-1
1000f288:	29564f04 	addi	r5,r5,22844
1000f28c:	21161f04 	addi	r4,r4,22652
1000f290:	dfc00015 	stw	ra,0(sp)
1000f294:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000f298 <_ZNSs4_Rep10_M_refcopyEv>:
1000f298:	00c400f4 	movhi	r3,4099
1000f29c:	18eac004 	addi	r3,r3,-21760
1000f2a0:	20c0021e 	bne	r4,r3,1000f2ac <_ZNSs4_Rep10_M_refcopyEv+0x14>
1000f2a4:	20800304 	addi	r2,r4,12
1000f2a8:	f800283a 	ret
1000f2ac:	20800217 	ldw	r2,8(r4)
1000f2b0:	10800044 	addi	r2,r2,1
1000f2b4:	20800215 	stw	r2,8(r4)
1000f2b8:	003ffa06 	br	1000f2a4 <_ZNSs4_Rep10_M_refcopyEv+0xc>

1000f2bc <_ZNSs4_Rep8_M_cloneERKSaIcEj>:
1000f2bc:	defffd04 	addi	sp,sp,-12
1000f2c0:	dc000015 	stw	r16,0(sp)
1000f2c4:	2021883a 	mov	r16,r4
1000f2c8:	21000017 	ldw	r4,0(r4)
1000f2cc:	dc400115 	stw	r17,4(sp)
1000f2d0:	dfc00215 	stw	ra,8(sp)
1000f2d4:	3109883a 	add	r4,r6,r4
1000f2d8:	280d883a 	mov	r6,r5
1000f2dc:	81400117 	ldw	r5,4(r16)
1000f2e0:	000e2700 	call	1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000f2e4:	81800017 	ldw	r6,0(r16)
1000f2e8:	1023883a 	mov	r17,r2
1000f2ec:	30000a1e 	bne	r6,zero,1000f318 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x5c>
1000f2f0:	10c00304 	addi	r3,r2,12
1000f2f4:	008400f4 	movhi	r2,4099
1000f2f8:	10aac004 	addi	r2,r2,-21760
1000f2fc:	8880111e 	bne	r17,r2,1000f344 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x88>
1000f300:	1805883a 	mov	r2,r3
1000f304:	dfc00217 	ldw	ra,8(sp)
1000f308:	dc400117 	ldw	r17,4(sp)
1000f30c:	dc000017 	ldw	r16,0(sp)
1000f310:	dec00304 	addi	sp,sp,12
1000f314:	f800283a 	ret
1000f318:	30800058 	cmpnei	r2,r6,1
1000f31c:	88c00304 	addi	r3,r17,12
1000f320:	10000d26 	beq	r2,zero,1000f358 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x9c>
1000f324:	1809883a 	mov	r4,r3
1000f328:	81400304 	addi	r5,r16,12
1000f32c:	00157f80 	call	100157f8 <memcpy>
1000f330:	1007883a 	mov	r3,r2
1000f334:	008400f4 	movhi	r2,4099
1000f338:	10aac004 	addi	r2,r2,-21760
1000f33c:	81800017 	ldw	r6,0(r16)
1000f340:	88bfef26 	beq	r17,r2,1000f300 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000f344:	88000215 	stw	zero,8(r17)
1000f348:	89800015 	stw	r6,0(r17)
1000f34c:	89a3883a 	add	r17,r17,r6
1000f350:	88000305 	stb	zero,12(r17)
1000f354:	003fea06 	br	1000f300 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x44>
1000f358:	80800303 	ldbu	r2,12(r16)
1000f35c:	88800305 	stb	r2,12(r17)
1000f360:	81800017 	ldw	r6,0(r16)
1000f364:	003fe306 	br	1000f2f4 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x38>

1000f368 <_ZNSs7reserveEj>:
1000f368:	20800017 	ldw	r2,0(r4)
1000f36c:	10fffe17 	ldw	r3,-8(r2)
1000f370:	28c01626 	beq	r5,r3,1000f3cc <_ZNSs7reserveEj+0x64>
1000f374:	11bffd17 	ldw	r6,-12(r2)
1000f378:	defffc04 	addi	sp,sp,-16
1000f37c:	dfc00315 	stw	ra,12(sp)
1000f380:	dc000215 	stw	r16,8(sp)
1000f384:	29800f36 	bltu	r5,r6,1000f3c4 <_ZNSs7reserveEj+0x5c>
1000f388:	2021883a 	mov	r16,r4
1000f38c:	298dc83a 	sub	r6,r5,r6
1000f390:	113ffd04 	addi	r4,r2,-12
1000f394:	d94001c4 	addi	r5,sp,7
1000f398:	000f2bc0 	call	1000f2bc <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000f39c:	81400017 	ldw	r5,0(r16)
1000f3a0:	00c400f4 	movhi	r3,4099
1000f3a4:	18eac004 	addi	r3,r3,-21760
1000f3a8:	293ffd04 	addi	r4,r5,-12
1000f3ac:	20c00a1e 	bne	r4,r3,1000f3d8 <_ZNSs7reserveEj+0x70>
1000f3b0:	80800015 	stw	r2,0(r16)
1000f3b4:	dfc00317 	ldw	ra,12(sp)
1000f3b8:	dc000217 	ldw	r16,8(sp)
1000f3bc:	dec00404 	addi	sp,sp,16
1000f3c0:	f800283a 	ret
1000f3c4:	300b883a 	mov	r5,r6
1000f3c8:	003fef06 	br	1000f388 <_ZNSs7reserveEj+0x20>
1000f3cc:	10ffff17 	ldw	r3,-4(r2)
1000f3d0:	00ffe816 	blt	zero,r3,1000f374 <_ZNSs7reserveEj+0xc>
1000f3d4:	f800283a 	ret
1000f3d8:	28ffff17 	ldw	r3,-4(r5)
1000f3dc:	19bfffc4 	addi	r6,r3,-1
1000f3e0:	29bfff15 	stw	r6,-4(r5)
1000f3e4:	00fff216 	blt	zero,r3,1000f3b0 <_ZNSs7reserveEj+0x48>
1000f3e8:	d94001c4 	addi	r5,sp,7
1000f3ec:	d8800015 	stw	r2,0(sp)
1000f3f0:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000f3f4:	d8800017 	ldw	r2,0(sp)
1000f3f8:	003fed06 	br	1000f3b0 <_ZNSs7reserveEj+0x48>

1000f3fc <_ZNSs13shrink_to_fitEv>:
1000f3fc:	deffe704 	addi	sp,sp,-100
1000f400:	00c400b4 	movhi	r3,4098
1000f404:	d9800204 	addi	r6,sp,8
1000f408:	18d19d04 	addi	r3,r3,18036
1000f40c:	01440074 	movhi	r5,4097
1000f410:	00840074 	movhi	r2,4097
1000f414:	10bd3404 	addi	r2,r2,-2864
1000f418:	2962a704 	addi	r5,r5,-30052
1000f41c:	d9000015 	stw	r4,0(sp)
1000f420:	d8c00915 	stw	r3,36(sp)
1000f424:	3009883a 	mov	r4,r6
1000f428:	d8c00f04 	addi	r3,sp,60
1000f42c:	d8c00a15 	stw	r3,40(sp)
1000f430:	d8800b15 	stw	r2,44(sp)
1000f434:	dfc01815 	stw	ra,96(sp)
1000f438:	df001715 	stw	fp,92(sp)
1000f43c:	ddc01615 	stw	r23,88(sp)
1000f440:	dd801515 	stw	r22,84(sp)
1000f444:	dd401415 	stw	r21,80(sp)
1000f448:	dd001315 	stw	r20,76(sp)
1000f44c:	dcc01215 	stw	r19,72(sp)
1000f450:	dc801115 	stw	r18,68(sp)
1000f454:	dc401015 	stw	r17,64(sp)
1000f458:	dc000f15 	stw	r16,60(sp)
1000f45c:	d9800115 	stw	r6,4(sp)
1000f460:	d9400815 	stw	r5,32(sp)
1000f464:	dec00c15 	stw	sp,48(sp)
1000f468:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000f46c:	d8800017 	ldw	r2,0(sp)
1000f470:	10800017 	ldw	r2,0(r2)
1000f474:	10fffd17 	ldw	r3,-12(r2)
1000f478:	10bffe17 	ldw	r2,-8(r2)
1000f47c:	18800e36 	bltu	r3,r2,1000f4b8 <_ZNSs13shrink_to_fitEv+0xbc>
1000f480:	d9000117 	ldw	r4,4(sp)
1000f484:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000f488:	dfc01817 	ldw	ra,96(sp)
1000f48c:	df001717 	ldw	fp,92(sp)
1000f490:	ddc01617 	ldw	r23,88(sp)
1000f494:	dd801517 	ldw	r22,84(sp)
1000f498:	dd401417 	ldw	r21,80(sp)
1000f49c:	dd001317 	ldw	r20,76(sp)
1000f4a0:	dcc01217 	ldw	r19,72(sp)
1000f4a4:	dc801117 	ldw	r18,68(sp)
1000f4a8:	dc401017 	ldw	r17,64(sp)
1000f4ac:	dc000f17 	ldw	r16,60(sp)
1000f4b0:	dec01904 	addi	sp,sp,100
1000f4b4:	f800283a 	ret
1000f4b8:	d9000017 	ldw	r4,0(sp)
1000f4bc:	00800044 	movi	r2,1
1000f4c0:	000b883a 	mov	r5,zero
1000f4c4:	d8800315 	stw	r2,12(sp)
1000f4c8:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f4cc:	003fec06 	br	1000f480 <_ZNSs13shrink_to_fitEv+0x84>
1000f4d0:	d9000417 	ldw	r4,16(sp)
1000f4d4:	d8800204 	addi	r2,sp,8
1000f4d8:	d8800115 	stw	r2,4(sp)
1000f4dc:	00080480 	call	10008048 <__cxa_begin_catch>
1000f4e0:	d8000315 	stw	zero,12(sp)
1000f4e4:	00080f40 	call	100080f4 <__cxa_end_catch>
1000f4e8:	003fe506 	br	1000f480 <_ZNSs13shrink_to_fitEv+0x84>

1000f4ec <_ZNSs6appendERKSs>:
1000f4ec:	defffb04 	addi	sp,sp,-20
1000f4f0:	dc800215 	stw	r18,8(sp)
1000f4f4:	2825883a 	mov	r18,r5
1000f4f8:	29400017 	ldw	r5,0(r5)
1000f4fc:	dc400115 	stw	r17,4(sp)
1000f500:	dc000015 	stw	r16,0(sp)
1000f504:	2c7ffd17 	ldw	r17,-12(r5)
1000f508:	dfc00415 	stw	ra,16(sp)
1000f50c:	dcc00315 	stw	r19,12(sp)
1000f510:	2021883a 	mov	r16,r4
1000f514:	88001726 	beq	r17,zero,1000f574 <_ZNSs6appendERKSs+0x88>
1000f518:	21000017 	ldw	r4,0(r4)
1000f51c:	20fffd17 	ldw	r3,-12(r4)
1000f520:	20bffe17 	ldw	r2,-8(r4)
1000f524:	1c67883a 	add	r19,r3,r17
1000f528:	14c00236 	bltu	r2,r19,1000f534 <_ZNSs6appendERKSs+0x48>
1000f52c:	20bfff17 	ldw	r2,-4(r4)
1000f530:	0080060e 	bge	zero,r2,1000f54c <_ZNSs6appendERKSs+0x60>
1000f534:	980b883a 	mov	r5,r19
1000f538:	8009883a 	mov	r4,r16
1000f53c:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f540:	81000017 	ldw	r4,0(r16)
1000f544:	91400017 	ldw	r5,0(r18)
1000f548:	20fffd17 	ldw	r3,-12(r4)
1000f54c:	88800058 	cmpnei	r2,r17,1
1000f550:	20c9883a 	add	r4,r4,r3
1000f554:	10001426 	beq	r2,zero,1000f5a8 <_ZNSs6appendERKSs+0xbc>
1000f558:	880d883a 	mov	r6,r17
1000f55c:	00157f80 	call	100157f8 <memcpy>
1000f560:	80c00017 	ldw	r3,0(r16)
1000f564:	008400f4 	movhi	r2,4099
1000f568:	10aac004 	addi	r2,r2,-21760
1000f56c:	193ffd04 	addi	r4,r3,-12
1000f570:	2080081e 	bne	r4,r2,1000f594 <_ZNSs6appendERKSs+0xa8>
1000f574:	8005883a 	mov	r2,r16
1000f578:	dfc00417 	ldw	ra,16(sp)
1000f57c:	dcc00317 	ldw	r19,12(sp)
1000f580:	dc800217 	ldw	r18,8(sp)
1000f584:	dc400117 	ldw	r17,4(sp)
1000f588:	dc000017 	ldw	r16,0(sp)
1000f58c:	dec00504 	addi	sp,sp,20
1000f590:	f800283a 	ret
1000f594:	1cfffd15 	stw	r19,-12(r3)
1000f598:	183fff15 	stw	zero,-4(r3)
1000f59c:	1ce7883a 	add	r19,r3,r19
1000f5a0:	98000005 	stb	zero,0(r19)
1000f5a4:	003ff306 	br	1000f574 <_ZNSs6appendERKSs+0x88>
1000f5a8:	28800003 	ldbu	r2,0(r5)
1000f5ac:	20800005 	stb	r2,0(r4)
1000f5b0:	003feb06 	br	1000f560 <_ZNSs6appendERKSs+0x74>

1000f5b4 <_ZNSspLERKSs>:
1000f5b4:	000f4ec1 	jmpi	1000f4ec <_ZNSs6appendERKSs>

1000f5b8 <_ZNSs6appendERKSsjj>:
1000f5b8:	defffa04 	addi	sp,sp,-24
1000f5bc:	dcc00315 	stw	r19,12(sp)
1000f5c0:	2827883a 	mov	r19,r5
1000f5c4:	29400017 	ldw	r5,0(r5)
1000f5c8:	dc000015 	stw	r16,0(sp)
1000f5cc:	dfc00515 	stw	ra,20(sp)
1000f5d0:	2c3ffd17 	ldw	r16,-12(r5)
1000f5d4:	dd000415 	stw	r20,16(sp)
1000f5d8:	dc800215 	stw	r18,8(sp)
1000f5dc:	dc400115 	stw	r17,4(sp)
1000f5e0:	81803136 	bltu	r16,r6,1000f6a8 <_ZNSs6appendERKSsjj+0xf0>
1000f5e4:	81a1c83a 	sub	r16,r16,r6
1000f5e8:	3025883a 	mov	r18,r6
1000f5ec:	2023883a 	mov	r17,r4
1000f5f0:	3c002236 	bltu	r7,r16,1000f67c <_ZNSs6appendERKSsjj+0xc4>
1000f5f4:	80001826 	beq	r16,zero,1000f658 <_ZNSs6appendERKSsjj+0xa0>
1000f5f8:	89000017 	ldw	r4,0(r17)
1000f5fc:	20fffd17 	ldw	r3,-12(r4)
1000f600:	20bffe17 	ldw	r2,-8(r4)
1000f604:	1c29883a 	add	r20,r3,r16
1000f608:	15000236 	bltu	r2,r20,1000f614 <_ZNSs6appendERKSsjj+0x5c>
1000f60c:	20bfff17 	ldw	r2,-4(r4)
1000f610:	0080060e 	bge	zero,r2,1000f62c <_ZNSs6appendERKSsjj+0x74>
1000f614:	a00b883a 	mov	r5,r20
1000f618:	8809883a 	mov	r4,r17
1000f61c:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f620:	89000017 	ldw	r4,0(r17)
1000f624:	99400017 	ldw	r5,0(r19)
1000f628:	20fffd17 	ldw	r3,-12(r4)
1000f62c:	80800058 	cmpnei	r2,r16,1
1000f630:	20c9883a 	add	r4,r4,r3
1000f634:	2c8b883a 	add	r5,r5,r18
1000f638:	10001326 	beq	r2,zero,1000f688 <_ZNSs6appendERKSsjj+0xd0>
1000f63c:	800d883a 	mov	r6,r16
1000f640:	00157f80 	call	100157f8 <memcpy>
1000f644:	88c00017 	ldw	r3,0(r17)
1000f648:	008400f4 	movhi	r2,4099
1000f64c:	10aac004 	addi	r2,r2,-21760
1000f650:	193ffd04 	addi	r4,r3,-12
1000f654:	20800f1e 	bne	r4,r2,1000f694 <_ZNSs6appendERKSsjj+0xdc>
1000f658:	8805883a 	mov	r2,r17
1000f65c:	dfc00517 	ldw	ra,20(sp)
1000f660:	dd000417 	ldw	r20,16(sp)
1000f664:	dcc00317 	ldw	r19,12(sp)
1000f668:	dc800217 	ldw	r18,8(sp)
1000f66c:	dc400117 	ldw	r17,4(sp)
1000f670:	dc000017 	ldw	r16,0(sp)
1000f674:	dec00604 	addi	sp,sp,24
1000f678:	f800283a 	ret
1000f67c:	3821883a 	mov	r16,r7
1000f680:	803ff526 	beq	r16,zero,1000f658 <_ZNSs6appendERKSsjj+0xa0>
1000f684:	003fdc06 	br	1000f5f8 <_ZNSs6appendERKSsjj+0x40>
1000f688:	28800003 	ldbu	r2,0(r5)
1000f68c:	20800005 	stb	r2,0(r4)
1000f690:	003fec06 	br	1000f644 <_ZNSs6appendERKSsjj+0x8c>
1000f694:	1d3ffd15 	stw	r20,-12(r3)
1000f698:	183fff15 	stw	zero,-4(r3)
1000f69c:	1d29883a 	add	r20,r3,r20
1000f6a0:	a0000005 	stb	zero,0(r20)
1000f6a4:	003fec06 	br	1000f658 <_ZNSs6appendERKSsjj+0xa0>
1000f6a8:	014400b4 	movhi	r5,4098
1000f6ac:	010400b4 	movhi	r4,4098
1000f6b0:	800f883a 	mov	r7,r16
1000f6b4:	29566e04 	addi	r5,r5,22968
1000f6b8:	21161f04 	addi	r4,r4,22652
1000f6bc:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1000f6c0 <_ZNSs6appendEPKcj>:
1000f6c0:	defffb04 	addi	sp,sp,-20
1000f6c4:	dc000115 	stw	r16,4(sp)
1000f6c8:	dfc00415 	stw	ra,16(sp)
1000f6cc:	dc800315 	stw	r18,12(sp)
1000f6d0:	dc400215 	stw	r17,8(sp)
1000f6d4:	2021883a 	mov	r16,r4
1000f6d8:	30001e26 	beq	r6,zero,1000f754 <_ZNSs6appendEPKcj+0x94>
1000f6dc:	20800017 	ldw	r2,0(r4)
1000f6e0:	00d00034 	movhi	r3,16384
1000f6e4:	18ffff04 	addi	r3,r3,-4
1000f6e8:	113ffd17 	ldw	r4,-12(r2)
1000f6ec:	1907c83a 	sub	r3,r3,r4
1000f6f0:	19803136 	bltu	r3,r6,1000f7b8 <_ZNSs6appendEPKcj+0xf8>
1000f6f4:	10fffe17 	ldw	r3,-8(r2)
1000f6f8:	3125883a 	add	r18,r6,r4
1000f6fc:	2823883a 	mov	r17,r5
1000f700:	1c800236 	bltu	r3,r18,1000f70c <_ZNSs6appendEPKcj+0x4c>
1000f704:	10ffff17 	ldw	r3,-4(r2)
1000f708:	00c0080e 	bge	zero,r3,1000f72c <_ZNSs6appendEPKcj+0x6c>
1000f70c:	d9800015 	stw	r6,0(sp)
1000f710:	900b883a 	mov	r5,r18
1000f714:	8880162e 	bgeu	r17,r2,1000f770 <_ZNSs6appendEPKcj+0xb0>
1000f718:	8009883a 	mov	r4,r16
1000f71c:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f720:	80800017 	ldw	r2,0(r16)
1000f724:	d9800017 	ldw	r6,0(sp)
1000f728:	113ffd17 	ldw	r4,-12(r2)
1000f72c:	30c00058 	cmpnei	r3,r6,1
1000f730:	1109883a 	add	r4,r2,r4
1000f734:	18001826 	beq	r3,zero,1000f798 <_ZNSs6appendEPKcj+0xd8>
1000f738:	880b883a 	mov	r5,r17
1000f73c:	00157f80 	call	100157f8 <memcpy>
1000f740:	80c00017 	ldw	r3,0(r16)
1000f744:	008400f4 	movhi	r2,4099
1000f748:	10aac004 	addi	r2,r2,-21760
1000f74c:	193ffd04 	addi	r4,r3,-12
1000f750:	2080141e 	bne	r4,r2,1000f7a4 <_ZNSs6appendEPKcj+0xe4>
1000f754:	8005883a 	mov	r2,r16
1000f758:	dfc00417 	ldw	ra,16(sp)
1000f75c:	dc800317 	ldw	r18,12(sp)
1000f760:	dc400217 	ldw	r17,8(sp)
1000f764:	dc000117 	ldw	r16,4(sp)
1000f768:	dec00504 	addi	sp,sp,20
1000f76c:	f800283a 	ret
1000f770:	1109883a 	add	r4,r2,r4
1000f774:	247fe836 	bltu	r4,r17,1000f718 <_ZNSs6appendEPKcj+0x58>
1000f778:	8009883a 	mov	r4,r16
1000f77c:	88a3c83a 	sub	r17,r17,r2
1000f780:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f784:	80800017 	ldw	r2,0(r16)
1000f788:	d9800017 	ldw	r6,0(sp)
1000f78c:	1463883a 	add	r17,r2,r17
1000f790:	113ffd17 	ldw	r4,-12(r2)
1000f794:	003fe506 	br	1000f72c <_ZNSs6appendEPKcj+0x6c>
1000f798:	88800003 	ldbu	r2,0(r17)
1000f79c:	20800005 	stb	r2,0(r4)
1000f7a0:	003fe706 	br	1000f740 <_ZNSs6appendEPKcj+0x80>
1000f7a4:	1cbffd15 	stw	r18,-12(r3)
1000f7a8:	183fff15 	stw	zero,-4(r3)
1000f7ac:	1ca5883a 	add	r18,r3,r18
1000f7b0:	90000005 	stb	zero,0(r18)
1000f7b4:	003fe706 	br	1000f754 <_ZNSs6appendEPKcj+0x94>
1000f7b8:	010400b4 	movhi	r4,4098
1000f7bc:	21166e04 	addi	r4,r4,22968
1000f7c0:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000f7c4 <_ZNSspLESt16initializer_listIcE>:
1000f7c4:	000f6c01 	jmpi	1000f6c0 <_ZNSs6appendEPKcj>

1000f7c8 <_ZNSs6appendEPKc>:
1000f7c8:	defffd04 	addi	sp,sp,-12
1000f7cc:	dc000115 	stw	r16,4(sp)
1000f7d0:	2021883a 	mov	r16,r4
1000f7d4:	2809883a 	mov	r4,r5
1000f7d8:	dfc00215 	stw	ra,8(sp)
1000f7dc:	d9400015 	stw	r5,0(sp)
1000f7e0:	00164b40 	call	100164b4 <strlen>
1000f7e4:	d9400017 	ldw	r5,0(sp)
1000f7e8:	100d883a 	mov	r6,r2
1000f7ec:	8009883a 	mov	r4,r16
1000f7f0:	dfc00217 	ldw	ra,8(sp)
1000f7f4:	dc000117 	ldw	r16,4(sp)
1000f7f8:	dec00304 	addi	sp,sp,12
1000f7fc:	000f6c01 	jmpi	1000f6c0 <_ZNSs6appendEPKcj>

1000f800 <_ZNSspLEPKc>:
1000f800:	defffd04 	addi	sp,sp,-12
1000f804:	dc000115 	stw	r16,4(sp)
1000f808:	2021883a 	mov	r16,r4
1000f80c:	2809883a 	mov	r4,r5
1000f810:	dfc00215 	stw	ra,8(sp)
1000f814:	d9400015 	stw	r5,0(sp)
1000f818:	00164b40 	call	100164b4 <strlen>
1000f81c:	d9400017 	ldw	r5,0(sp)
1000f820:	100d883a 	mov	r6,r2
1000f824:	8009883a 	mov	r4,r16
1000f828:	dfc00217 	ldw	ra,8(sp)
1000f82c:	dc000117 	ldw	r16,4(sp)
1000f830:	dec00304 	addi	sp,sp,12
1000f834:	000f6c01 	jmpi	1000f6c0 <_ZNSs6appendEPKcj>

1000f838 <_ZNSs6appendESt16initializer_listIcE>:
1000f838:	000f6c01 	jmpi	1000f6c0 <_ZNSs6appendEPKcj>

1000f83c <_ZNSs6appendEjc>:
1000f83c:	defffb04 	addi	sp,sp,-20
1000f840:	dc400115 	stw	r17,4(sp)
1000f844:	dfc00415 	stw	ra,16(sp)
1000f848:	dcc00315 	stw	r19,12(sp)
1000f84c:	dc800215 	stw	r18,8(sp)
1000f850:	dc000015 	stw	r16,0(sp)
1000f854:	2023883a 	mov	r17,r4
1000f858:	28001f26 	beq	r5,zero,1000f8d8 <_ZNSs6appendEjc+0x9c>
1000f85c:	21000017 	ldw	r4,0(r4)
1000f860:	00900034 	movhi	r2,16384
1000f864:	10bfff04 	addi	r2,r2,-4
1000f868:	20fffd17 	ldw	r3,-12(r4)
1000f86c:	2821883a 	mov	r16,r5
1000f870:	10c5c83a 	sub	r2,r2,r3
1000f874:	11402736 	bltu	r2,r5,1000f914 <_ZNSs6appendEjc+0xd8>
1000f878:	20bffe17 	ldw	r2,-8(r4)
1000f87c:	28e7883a 	add	r19,r5,r3
1000f880:	3025883a 	mov	r18,r6
1000f884:	14c00236 	bltu	r2,r19,1000f890 <_ZNSs6appendEjc+0x54>
1000f888:	20bfff17 	ldw	r2,-4(r4)
1000f88c:	0080050e 	bge	zero,r2,1000f8a4 <_ZNSs6appendEjc+0x68>
1000f890:	8809883a 	mov	r4,r17
1000f894:	980b883a 	mov	r5,r19
1000f898:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f89c:	89000017 	ldw	r4,0(r17)
1000f8a0:	20fffd17 	ldw	r3,-12(r4)
1000f8a4:	80800058 	cmpnei	r2,r16,1
1000f8a8:	20c9883a 	add	r4,r4,r3
1000f8ac:	10001226 	beq	r2,zero,1000f8f8 <_ZNSs6appendEjc+0xbc>
1000f8b0:	91403fcc 	andi	r5,r18,255
1000f8b4:	2940201c 	xori	r5,r5,128
1000f8b8:	800d883a 	mov	r6,r16
1000f8bc:	297fe004 	addi	r5,r5,-128
1000f8c0:	0015a240 	call	10015a24 <memset>
1000f8c4:	88c00017 	ldw	r3,0(r17)
1000f8c8:	008400f4 	movhi	r2,4099
1000f8cc:	10aac004 	addi	r2,r2,-21760
1000f8d0:	193ffd04 	addi	r4,r3,-12
1000f8d4:	20800a1e 	bne	r4,r2,1000f900 <_ZNSs6appendEjc+0xc4>
1000f8d8:	8805883a 	mov	r2,r17
1000f8dc:	dfc00417 	ldw	ra,16(sp)
1000f8e0:	dcc00317 	ldw	r19,12(sp)
1000f8e4:	dc800217 	ldw	r18,8(sp)
1000f8e8:	dc400117 	ldw	r17,4(sp)
1000f8ec:	dc000017 	ldw	r16,0(sp)
1000f8f0:	dec00504 	addi	sp,sp,20
1000f8f4:	f800283a 	ret
1000f8f8:	24800005 	stb	r18,0(r4)
1000f8fc:	003ff106 	br	1000f8c4 <_ZNSs6appendEjc+0x88>
1000f900:	1cfffd15 	stw	r19,-12(r3)
1000f904:	183fff15 	stw	zero,-4(r3)
1000f908:	1ce7883a 	add	r19,r3,r19
1000f90c:	98000005 	stb	zero,0(r19)
1000f910:	003ff106 	br	1000f8d8 <_ZNSs6appendEjc+0x9c>
1000f914:	010400b4 	movhi	r4,4098
1000f918:	21166e04 	addi	r4,r4,22968
1000f91c:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000f920 <_ZNSs6resizeEjc>:
1000f920:	21c00017 	ldw	r7,0(r4)
1000f924:	00d00034 	movhi	r3,16384
1000f928:	18ffff04 	addi	r3,r3,-4
1000f92c:	3a3ffd17 	ldw	r8,-12(r7)
1000f930:	19400b36 	bltu	r3,r5,1000f960 <_ZNSs6resizeEjc+0x40>
1000f934:	41400536 	bltu	r8,r5,1000f94c <_ZNSs6resizeEjc+0x2c>
1000f938:	2a000136 	bltu	r5,r8,1000f940 <_ZNSs6resizeEjc+0x20>
1000f93c:	f800283a 	ret
1000f940:	000f883a 	mov	r7,zero
1000f944:	414dc83a 	sub	r6,r8,r5
1000f948:	000e5981 	jmpi	1000e598 <_ZNSs9_M_mutateEjjj>
1000f94c:	31803fcc 	andi	r6,r6,255
1000f950:	3180201c 	xori	r6,r6,128
1000f954:	31bfe004 	addi	r6,r6,-128
1000f958:	2a0bc83a 	sub	r5,r5,r8
1000f95c:	000f83c1 	jmpi	1000f83c <_ZNSs6appendEjc>
1000f960:	010400b4 	movhi	r4,4098
1000f964:	deffff04 	addi	sp,sp,-4
1000f968:	21167404 	addi	r4,r4,22992
1000f96c:	dfc00015 	stw	ra,0(sp)
1000f970:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1000f974 <_ZNSs6resizeEj>:
1000f974:	000d883a 	mov	r6,zero
1000f978:	000f9201 	jmpi	1000f920 <_ZNSs6resizeEjc>

1000f97c <_ZNSs9push_backEc>:
1000f97c:	20800017 	ldw	r2,0(r4)
1000f980:	defffb04 	addi	sp,sp,-20
1000f984:	dc800215 	stw	r18,8(sp)
1000f988:	14bffd17 	ldw	r18,-12(r2)
1000f98c:	10fffe17 	ldw	r3,-8(r2)
1000f990:	dcc00315 	stw	r19,12(sp)
1000f994:	dc400115 	stw	r17,4(sp)
1000f998:	dc000015 	stw	r16,0(sp)
1000f99c:	dfc00415 	stw	ra,16(sp)
1000f9a0:	94400044 	addi	r17,r18,1
1000f9a4:	2021883a 	mov	r16,r4
1000f9a8:	2827883a 	mov	r19,r5
1000f9ac:	1c400236 	bltu	r3,r17,1000f9b8 <_ZNSs9push_backEc+0x3c>
1000f9b0:	10ffff17 	ldw	r3,-4(r2)
1000f9b4:	00c0130e 	bge	zero,r3,1000fa04 <_ZNSs9push_backEc+0x88>
1000f9b8:	880b883a 	mov	r5,r17
1000f9bc:	8009883a 	mov	r4,r16
1000f9c0:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000f9c4:	80800017 	ldw	r2,0(r16)
1000f9c8:	10fffd17 	ldw	r3,-12(r2)
1000f9cc:	10c5883a 	add	r2,r2,r3
1000f9d0:	14c00005 	stb	r19,0(r2)
1000f9d4:	81000017 	ldw	r4,0(r16)
1000f9d8:	008400f4 	movhi	r2,4099
1000f9dc:	10aac004 	addi	r2,r2,-21760
1000f9e0:	20fffd04 	addi	r3,r4,-12
1000f9e4:	1880091e 	bne	r3,r2,1000fa0c <_ZNSs9push_backEc+0x90>
1000f9e8:	dfc00417 	ldw	ra,16(sp)
1000f9ec:	dcc00317 	ldw	r19,12(sp)
1000f9f0:	dc800217 	ldw	r18,8(sp)
1000f9f4:	dc400117 	ldw	r17,4(sp)
1000f9f8:	dc000017 	ldw	r16,0(sp)
1000f9fc:	dec00504 	addi	sp,sp,20
1000fa00:	f800283a 	ret
1000fa04:	9007883a 	mov	r3,r18
1000fa08:	003ff006 	br	1000f9cc <_ZNSs9push_backEc+0x50>
1000fa0c:	203fff15 	stw	zero,-4(r4)
1000fa10:	247ffd15 	stw	r17,-12(r4)
1000fa14:	1ca5883a 	add	r18,r3,r18
1000fa18:	90000345 	stb	zero,13(r18)
1000fa1c:	003ff206 	br	1000f9e8 <_ZNSs9push_backEc+0x6c>

1000fa20 <_ZNSspLEc>:
1000fa20:	20c00017 	ldw	r3,0(r4)
1000fa24:	defffb04 	addi	sp,sp,-20
1000fa28:	dc800215 	stw	r18,8(sp)
1000fa2c:	1cbffd17 	ldw	r18,-12(r3)
1000fa30:	18bffe17 	ldw	r2,-8(r3)
1000fa34:	dcc00315 	stw	r19,12(sp)
1000fa38:	dc400115 	stw	r17,4(sp)
1000fa3c:	dc000015 	stw	r16,0(sp)
1000fa40:	dfc00415 	stw	ra,16(sp)
1000fa44:	94400044 	addi	r17,r18,1
1000fa48:	2021883a 	mov	r16,r4
1000fa4c:	2827883a 	mov	r19,r5
1000fa50:	14400236 	bltu	r2,r17,1000fa5c <_ZNSspLEc+0x3c>
1000fa54:	18bfff17 	ldw	r2,-4(r3)
1000fa58:	0080140e 	bge	zero,r2,1000faac <_ZNSspLEc+0x8c>
1000fa5c:	880b883a 	mov	r5,r17
1000fa60:	8009883a 	mov	r4,r16
1000fa64:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000fa68:	80c00017 	ldw	r3,0(r16)
1000fa6c:	18bffd17 	ldw	r2,-12(r3)
1000fa70:	1887883a 	add	r3,r3,r2
1000fa74:	1cc00005 	stb	r19,0(r3)
1000fa78:	81000017 	ldw	r4,0(r16)
1000fa7c:	008400f4 	movhi	r2,4099
1000fa80:	10aac004 	addi	r2,r2,-21760
1000fa84:	20fffd04 	addi	r3,r4,-12
1000fa88:	18800a1e 	bne	r3,r2,1000fab4 <_ZNSspLEc+0x94>
1000fa8c:	8005883a 	mov	r2,r16
1000fa90:	dfc00417 	ldw	ra,16(sp)
1000fa94:	dcc00317 	ldw	r19,12(sp)
1000fa98:	dc800217 	ldw	r18,8(sp)
1000fa9c:	dc400117 	ldw	r17,4(sp)
1000faa0:	dc000017 	ldw	r16,0(sp)
1000faa4:	dec00504 	addi	sp,sp,20
1000faa8:	f800283a 	ret
1000faac:	9005883a 	mov	r2,r18
1000fab0:	003fef06 	br	1000fa70 <_ZNSspLEc+0x50>
1000fab4:	203fff15 	stw	zero,-4(r4)
1000fab8:	247ffd15 	stw	r17,-12(r4)
1000fabc:	1ca5883a 	add	r18,r3,r18
1000fac0:	90000345 	stb	zero,13(r18)
1000fac4:	003ff106 	br	1000fa8c <_ZNSspLEc+0x6c>

1000fac8 <_ZNSs4_Rep7_M_grabERKSaIcES2_>:
1000fac8:	21800217 	ldw	r6,8(r4)
1000facc:	2005883a 	mov	r2,r4
1000fad0:	30000516 	blt	r6,zero,1000fae8 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x20>
1000fad4:	00c400f4 	movhi	r3,4099
1000fad8:	18eac004 	addi	r3,r3,-21760
1000fadc:	20c0041e 	bne	r4,r3,1000faf0 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x28>
1000fae0:	10800304 	addi	r2,r2,12
1000fae4:	f800283a 	ret
1000fae8:	000d883a 	mov	r6,zero
1000faec:	000f2bc1 	jmpi	1000f2bc <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000faf0:	31800044 	addi	r6,r6,1
1000faf4:	21800215 	stw	r6,8(r4)
1000faf8:	003ff906 	br	1000fae0 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0x18>

1000fafc <_ZNSsC1ERKSs>:
1000fafc:	28800017 	ldw	r2,0(r5)
1000fb00:	defffd04 	addi	sp,sp,-12
1000fb04:	dc000115 	stw	r16,4(sp)
1000fb08:	117fff17 	ldw	r5,-4(r2)
1000fb0c:	dfc00215 	stw	ra,8(sp)
1000fb10:	2021883a 	mov	r16,r4
1000fb14:	113ffd04 	addi	r4,r2,-12
1000fb18:	28000816 	blt	r5,zero,1000fb3c <_ZNSsC1ERKSs+0x40>
1000fb1c:	00c400f4 	movhi	r3,4099
1000fb20:	18eac004 	addi	r3,r3,-21760
1000fb24:	20c0091e 	bne	r4,r3,1000fb4c <_ZNSsC1ERKSs+0x50>
1000fb28:	80800015 	stw	r2,0(r16)
1000fb2c:	dfc00217 	ldw	ra,8(sp)
1000fb30:	dc000117 	ldw	r16,4(sp)
1000fb34:	dec00304 	addi	sp,sp,12
1000fb38:	f800283a 	ret
1000fb3c:	000d883a 	mov	r6,zero
1000fb40:	d94000c4 	addi	r5,sp,3
1000fb44:	000f2bc0 	call	1000f2bc <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000fb48:	003ff706 	br	1000fb28 <_ZNSsC1ERKSs+0x2c>
1000fb4c:	29400044 	addi	r5,r5,1
1000fb50:	117fff15 	stw	r5,-4(r2)
1000fb54:	003ff406 	br	1000fb28 <_ZNSsC1ERKSs+0x2c>

1000fb58 <_ZNSs6assignERKSs>:
1000fb58:	21800017 	ldw	r6,0(r4)
1000fb5c:	28800017 	ldw	r2,0(r5)
1000fb60:	defffc04 	addi	sp,sp,-16
1000fb64:	dc000215 	stw	r16,8(sp)
1000fb68:	dfc00315 	stw	ra,12(sp)
1000fb6c:	2021883a 	mov	r16,r4
1000fb70:	30800926 	beq	r6,r2,1000fb98 <_ZNSs6assignERKSs+0x40>
1000fb74:	117fff17 	ldw	r5,-4(r2)
1000fb78:	113ffd04 	addi	r4,r2,-12
1000fb7c:	28000e16 	blt	r5,zero,1000fbb8 <_ZNSs6assignERKSs+0x60>
1000fb80:	00c400f4 	movhi	r3,4099
1000fb84:	18eac004 	addi	r3,r3,-21760
1000fb88:	20c0081e 	bne	r4,r3,1000fbac <_ZNSs6assignERKSs+0x54>
1000fb8c:	313ffd04 	addi	r4,r6,-12
1000fb90:	20c0101e 	bne	r4,r3,1000fbd4 <_ZNSs6assignERKSs+0x7c>
1000fb94:	80800015 	stw	r2,0(r16)
1000fb98:	8005883a 	mov	r2,r16
1000fb9c:	dfc00317 	ldw	ra,12(sp)
1000fba0:	dc000217 	ldw	r16,8(sp)
1000fba4:	dec00404 	addi	sp,sp,16
1000fba8:	f800283a 	ret
1000fbac:	29400044 	addi	r5,r5,1
1000fbb0:	117fff15 	stw	r5,-4(r2)
1000fbb4:	003ff506 	br	1000fb8c <_ZNSs6assignERKSs+0x34>
1000fbb8:	000d883a 	mov	r6,zero
1000fbbc:	d94001c4 	addi	r5,sp,7
1000fbc0:	000f2bc0 	call	1000f2bc <_ZNSs4_Rep8_M_cloneERKSaIcEj>
1000fbc4:	00c400f4 	movhi	r3,4099
1000fbc8:	81800017 	ldw	r6,0(r16)
1000fbcc:	18eac004 	addi	r3,r3,-21760
1000fbd0:	003fee06 	br	1000fb8c <_ZNSs6assignERKSs+0x34>
1000fbd4:	30ffff17 	ldw	r3,-4(r6)
1000fbd8:	197fffc4 	addi	r5,r3,-1
1000fbdc:	317fff15 	stw	r5,-4(r6)
1000fbe0:	00ffec16 	blt	zero,r3,1000fb94 <_ZNSs6assignERKSs+0x3c>
1000fbe4:	d94001c4 	addi	r5,sp,7
1000fbe8:	d8800015 	stw	r2,0(sp)
1000fbec:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
1000fbf0:	d8800017 	ldw	r2,0(sp)
1000fbf4:	003fe706 	br	1000fb94 <_ZNSs6assignERKSs+0x3c>

1000fbf8 <_ZNSsaSERKSs>:
1000fbf8:	000fb581 	jmpi	1000fb58 <_ZNSs6assignERKSs>

1000fbfc <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_>:
1000fbfc:	01c40074 	movhi	r7,4097
1000fc00:	deffec04 	addi	sp,sp,-80
1000fc04:	39e2a704 	addi	r7,r7,-30052
1000fc08:	00c400b4 	movhi	r3,4098
1000fc0c:	00840074 	movhi	r2,4097
1000fc10:	18d1a104 	addi	r3,r3,18052
1000fc14:	10bf3104 	addi	r2,r2,-828
1000fc18:	d9000015 	stw	r4,0(sp)
1000fc1c:	d9c00a15 	stw	r7,40(sp)
1000fc20:	d9000404 	addi	r4,sp,16
1000fc24:	d9c01204 	addi	r7,sp,72
1000fc28:	d9400115 	stw	r5,4(sp)
1000fc2c:	d8c00b15 	stw	r3,44(sp)
1000fc30:	d9c00c15 	stw	r7,48(sp)
1000fc34:	dfc01315 	stw	ra,76(sp)
1000fc38:	d8800d15 	stw	r2,52(sp)
1000fc3c:	d9800215 	stw	r6,8(sp)
1000fc40:	df001215 	stw	fp,72(sp)
1000fc44:	dec00e15 	stw	sp,56(sp)
1000fc48:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000fc4c:	d9000117 	ldw	r4,4(sp)
1000fc50:	00164b40 	call	100164b4 <strlen>
1000fc54:	d8c00017 	ldw	r3,0(sp)
1000fc58:	100f883a 	mov	r7,r2
1000fc5c:	d9000217 	ldw	r4,8(sp)
1000fc60:	008400f4 	movhi	r2,4099
1000fc64:	10aac304 	addi	r2,r2,-21748
1000fc68:	18800015 	stw	r2,0(r3)
1000fc6c:	20800017 	ldw	r2,0(r4)
1000fc70:	1809883a 	mov	r4,r3
1000fc74:	d9c00315 	stw	r7,12(sp)
1000fc78:	117ffd17 	ldw	r5,-12(r2)
1000fc7c:	00800044 	movi	r2,1
1000fc80:	d8800515 	stw	r2,20(sp)
1000fc84:	394b883a 	add	r5,r7,r5
1000fc88:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000fc8c:	d9800317 	ldw	r6,12(sp)
1000fc90:	d9400117 	ldw	r5,4(sp)
1000fc94:	d9000017 	ldw	r4,0(sp)
1000fc98:	000f6c00 	call	1000f6c0 <_ZNSs6appendEPKcj>
1000fc9c:	d9400217 	ldw	r5,8(sp)
1000fca0:	d9000017 	ldw	r4,0(sp)
1000fca4:	000f4ec0 	call	1000f4ec <_ZNSs6appendERKSs>
1000fca8:	d9000404 	addi	r4,sp,16
1000fcac:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000fcb0:	d8800017 	ldw	r2,0(sp)
1000fcb4:	dfc01317 	ldw	ra,76(sp)
1000fcb8:	df001217 	ldw	fp,72(sp)
1000fcbc:	dec01404 	addi	sp,sp,80
1000fcc0:	f800283a 	ret
1000fcc4:	d8800017 	ldw	r2,0(sp)
1000fcc8:	d8c00617 	ldw	r3,24(sp)
1000fccc:	11000017 	ldw	r4,0(r2)
1000fcd0:	008400f4 	movhi	r2,4099
1000fcd4:	10aac004 	addi	r2,r2,-21760
1000fcd8:	213ffd04 	addi	r4,r4,-12
1000fcdc:	d8c00015 	stw	r3,0(sp)
1000fce0:	20800226 	beq	r4,r2,1000fcec <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_+0xf0>
1000fce4:	d94011c4 	addi	r5,sp,71
1000fce8:	000e4c80 	call	1000e4c8 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fcec:	d9000017 	ldw	r4,0(sp)
1000fcf0:	00bfffc4 	movi	r2,-1
1000fcf4:	d8800515 	stw	r2,20(sp)
1000fcf8:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000fcfc <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_>:
1000fcfc:	01c40074 	movhi	r7,4097
1000fd00:	deffed04 	addi	sp,sp,-76
1000fd04:	39e2a704 	addi	r7,r7,-30052
1000fd08:	00c400b4 	movhi	r3,4098
1000fd0c:	00840074 	movhi	r2,4097
1000fd10:	18d1a284 	addi	r3,r3,18058
1000fd14:	10bf6d04 	addi	r2,r2,-588
1000fd18:	d9000015 	stw	r4,0(sp)
1000fd1c:	d9c00915 	stw	r7,36(sp)
1000fd20:	d9000304 	addi	r4,sp,12
1000fd24:	d9c01104 	addi	r7,sp,68
1000fd28:	d8c00a15 	stw	r3,40(sp)
1000fd2c:	d8800c15 	stw	r2,48(sp)
1000fd30:	d9400215 	stw	r5,8(sp)
1000fd34:	dfc01215 	stw	ra,72(sp)
1000fd38:	df001115 	stw	fp,68(sp)
1000fd3c:	d9c00b15 	stw	r7,44(sp)
1000fd40:	dec00d15 	stw	sp,52(sp)
1000fd44:	d9800115 	stw	r6,4(sp)
1000fd48:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000fd4c:	d8c00017 	ldw	r3,0(sp)
1000fd50:	008400f4 	movhi	r2,4099
1000fd54:	10aac304 	addi	r2,r2,-21748
1000fd58:	18800015 	stw	r2,0(r3)
1000fd5c:	d8800117 	ldw	r2,4(sp)
1000fd60:	1809883a 	mov	r4,r3
1000fd64:	10800017 	ldw	r2,0(r2)
1000fd68:	117ffd17 	ldw	r5,-12(r2)
1000fd6c:	00800044 	movi	r2,1
1000fd70:	d8800415 	stw	r2,16(sp)
1000fd74:	29400044 	addi	r5,r5,1
1000fd78:	000f3680 	call	1000f368 <_ZNSs7reserveEj>
1000fd7c:	d9800207 	ldb	r6,8(sp)
1000fd80:	d9000017 	ldw	r4,0(sp)
1000fd84:	01400044 	movi	r5,1
1000fd88:	000f83c0 	call	1000f83c <_ZNSs6appendEjc>
1000fd8c:	d9400117 	ldw	r5,4(sp)
1000fd90:	d9000017 	ldw	r4,0(sp)
1000fd94:	000f4ec0 	call	1000f4ec <_ZNSs6appendERKSs>
1000fd98:	d9000304 	addi	r4,sp,12
1000fd9c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000fda0:	d8800017 	ldw	r2,0(sp)
1000fda4:	dfc01217 	ldw	ra,72(sp)
1000fda8:	df001117 	ldw	fp,68(sp)
1000fdac:	dec01304 	addi	sp,sp,76
1000fdb0:	f800283a 	ret
1000fdb4:	d8800017 	ldw	r2,0(sp)
1000fdb8:	d8c00517 	ldw	r3,20(sp)
1000fdbc:	11000017 	ldw	r4,0(r2)
1000fdc0:	008400f4 	movhi	r2,4099
1000fdc4:	10aac004 	addi	r2,r2,-21760
1000fdc8:	213ffd04 	addi	r4,r4,-12
1000fdcc:	d8c00015 	stw	r3,0(sp)
1000fdd0:	20800226 	beq	r4,r2,1000fddc <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_+0xe0>
1000fdd4:	d94010c4 	addi	r5,sp,67
1000fdd8:	000e4c80 	call	1000e4c8 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fddc:	d9000017 	ldw	r4,0(sp)
1000fde0:	00bfffc4 	movi	r2,-1
1000fde4:	d8800415 	stw	r2,16(sp)
1000fde8:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000fdec <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_>:
1000fdec:	00c400b4 	movhi	r3,4098
1000fdf0:	deffed04 	addi	sp,sp,-76
1000fdf4:	18d1a404 	addi	r3,r3,18064
1000fdf8:	01c40074 	movhi	r7,4097
1000fdfc:	00840074 	movhi	r2,4097
1000fe00:	39e2a704 	addi	r7,r7,-30052
1000fe04:	10bfa004 	addi	r2,r2,-384
1000fe08:	d9000015 	stw	r4,0(sp)
1000fe0c:	d8c00a15 	stw	r3,40(sp)
1000fe10:	d9000304 	addi	r4,sp,12
1000fe14:	d8c01104 	addi	r3,sp,68
1000fe18:	dfc01215 	stw	ra,72(sp)
1000fe1c:	d9c00915 	stw	r7,36(sp)
1000fe20:	d8c00b15 	stw	r3,44(sp)
1000fe24:	d8800c15 	stw	r2,48(sp)
1000fe28:	d9800215 	stw	r6,8(sp)
1000fe2c:	d9400115 	stw	r5,4(sp)
1000fe30:	df001115 	stw	fp,68(sp)
1000fe34:	dec00d15 	stw	sp,52(sp)
1000fe38:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1000fe3c:	d9400117 	ldw	r5,4(sp)
1000fe40:	d9000017 	ldw	r4,0(sp)
1000fe44:	00bfffc4 	movi	r2,-1
1000fe48:	d8800415 	stw	r2,16(sp)
1000fe4c:	000fafc0 	call	1000fafc <_ZNSsC1ERKSs>
1000fe50:	d9400217 	ldw	r5,8(sp)
1000fe54:	d9000017 	ldw	r4,0(sp)
1000fe58:	00800044 	movi	r2,1
1000fe5c:	d8800415 	stw	r2,16(sp)
1000fe60:	000f4ec0 	call	1000f4ec <_ZNSs6appendERKSs>
1000fe64:	d9000304 	addi	r4,sp,12
1000fe68:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1000fe6c:	d8800017 	ldw	r2,0(sp)
1000fe70:	dfc01217 	ldw	ra,72(sp)
1000fe74:	df001117 	ldw	fp,68(sp)
1000fe78:	dec01304 	addi	sp,sp,76
1000fe7c:	f800283a 	ret
1000fe80:	d8800017 	ldw	r2,0(sp)
1000fe84:	d8c00517 	ldw	r3,20(sp)
1000fe88:	11000017 	ldw	r4,0(r2)
1000fe8c:	008400f4 	movhi	r2,4099
1000fe90:	10aac004 	addi	r2,r2,-21760
1000fe94:	213ffd04 	addi	r4,r4,-12
1000fe98:	d8c00015 	stw	r3,0(sp)
1000fe9c:	20800226 	beq	r4,r2,1000fea8 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_+0xbc>
1000fea0:	d94010c4 	addi	r5,sp,67
1000fea4:	000e4c80 	call	1000e4c8 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
1000fea8:	d9000017 	ldw	r4,0(sp)
1000feac:	00bfffc4 	movi	r2,-1
1000feb0:	d8800415 	stw	r2,16(sp)
1000feb4:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

1000feb8 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>:
1000feb8:	29001d26 	beq	r5,r4,1000ff30 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x78>
1000febc:	defffc04 	addi	sp,sp,-16
1000fec0:	dc000015 	stw	r16,0(sp)
1000fec4:	2921c83a 	sub	r16,r5,r4
1000fec8:	dc400115 	stw	r17,4(sp)
1000fecc:	000b883a 	mov	r5,zero
1000fed0:	2023883a 	mov	r17,r4
1000fed4:	8009883a 	mov	r4,r16
1000fed8:	dc800215 	stw	r18,8(sp)
1000fedc:	dfc00315 	stw	ra,12(sp)
1000fee0:	000e2700 	call	1000e270 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
1000fee4:	1025883a 	mov	r18,r2
1000fee8:	80800058 	cmpnei	r2,r16,1
1000feec:	90c00304 	addi	r3,r18,12
1000fef0:	10001326 	beq	r2,zero,1000ff40 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x88>
1000fef4:	1809883a 	mov	r4,r3
1000fef8:	800d883a 	mov	r6,r16
1000fefc:	880b883a 	mov	r5,r17
1000ff00:	00157f80 	call	100157f8 <memcpy>
1000ff04:	1007883a 	mov	r3,r2
1000ff08:	008400f4 	movhi	r2,4099
1000ff0c:	10aac004 	addi	r2,r2,-21760
1000ff10:	90800e1e 	bne	r18,r2,1000ff4c <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x94>
1000ff14:	1805883a 	mov	r2,r3
1000ff18:	dfc00317 	ldw	ra,12(sp)
1000ff1c:	dc800217 	ldw	r18,8(sp)
1000ff20:	dc400117 	ldw	r17,4(sp)
1000ff24:	dc000017 	ldw	r16,0(sp)
1000ff28:	dec00404 	addi	sp,sp,16
1000ff2c:	f800283a 	ret
1000ff30:	00c400f4 	movhi	r3,4099
1000ff34:	18eac304 	addi	r3,r3,-21748
1000ff38:	1805883a 	mov	r2,r3
1000ff3c:	f800283a 	ret
1000ff40:	88800003 	ldbu	r2,0(r17)
1000ff44:	90800305 	stb	r2,12(r18)
1000ff48:	003fef06 	br	1000ff08 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x50>
1000ff4c:	94000015 	stw	r16,0(r18)
1000ff50:	90000215 	stw	zero,8(r18)
1000ff54:	9421883a 	add	r16,r18,r16
1000ff58:	80000305 	stb	zero,12(r16)
1000ff5c:	003fed06 	br	1000ff14 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag+0x5c>

1000ff60 <_ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE>:
1000ff60:	defffe04 	addi	sp,sp,-8
1000ff64:	2805883a 	mov	r2,r5
1000ff68:	dc000015 	stw	r16,0(sp)
1000ff6c:	300b883a 	mov	r5,r6
1000ff70:	2021883a 	mov	r16,r4
1000ff74:	380d883a 	mov	r6,r7
1000ff78:	1009883a 	mov	r4,r2
1000ff7c:	000f883a 	mov	r7,zero
1000ff80:	dfc00115 	stw	ra,4(sp)
1000ff84:	000feb80 	call	1000feb8 <_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag>
1000ff88:	80800015 	stw	r2,0(r16)
1000ff8c:	dfc00117 	ldw	ra,4(sp)
1000ff90:	dc000017 	ldw	r16,0(sp)
1000ff94:	dec00204 	addi	sp,sp,8
1000ff98:	f800283a 	ret

1000ff9c <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>:
1000ff9c:	21400226 	beq	r4,r5,1000ffa8 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0xc>
1000ffa0:	20000426 	beq	r4,zero,1000ffb4 <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag+0x18>
1000ffa4:	000e4281 	jmpi	1000e428 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
1000ffa8:	008400f4 	movhi	r2,4099
1000ffac:	10aac304 	addi	r2,r2,-21748
1000ffb0:	f800283a 	ret
1000ffb4:	010400b4 	movhi	r4,4098
1000ffb8:	deffff04 	addi	sp,sp,-4
1000ffbc:	21167a04 	addi	r4,r4,23016
1000ffc0:	dfc00015 	stw	ra,0(sp)
1000ffc4:	0009ef00 	call	10009ef0 <_ZSt19__throw_logic_errorPKc>

1000ffc8 <_ZNSsC1ERKSsjRKSaIcE>:
1000ffc8:	28800017 	ldw	r2,0(r5)
1000ffcc:	defffe04 	addi	sp,sp,-8
1000ffd0:	dfc00115 	stw	ra,4(sp)
1000ffd4:	10fffd17 	ldw	r3,-12(r2)
1000ffd8:	dc000015 	stw	r16,0(sp)
1000ffdc:	19800d36 	bltu	r3,r6,10010014 <_ZNSsC1ERKSsjRKSaIcE+0x4c>
1000ffe0:	3011883a 	mov	r8,r6
1000ffe4:	2021883a 	mov	r16,r4
1000ffe8:	3809883a 	mov	r4,r7
1000ffec:	200d883a 	mov	r6,r4
1000fff0:	000f883a 	mov	r7,zero
1000fff4:	10cb883a 	add	r5,r2,r3
1000fff8:	1209883a 	add	r4,r2,r8
1000fffc:	000ff9c0 	call	1000ff9c <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010000:	80800015 	stw	r2,0(r16)
10010004:	dfc00117 	ldw	ra,4(sp)
10010008:	dc000017 	ldw	r16,0(sp)
1001000c:	dec00204 	addi	sp,sp,8
10010010:	f800283a 	ret
10010014:	014400b4 	movhi	r5,4098
10010018:	010400b4 	movhi	r4,4098
1001001c:	180f883a 	mov	r7,r3
10010020:	29568504 	addi	r5,r5,23060
10010024:	21161f04 	addi	r4,r4,22652
10010028:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001002c <_ZNSsC1ERKSsjj>:
1001002c:	2a000017 	ldw	r8,0(r5)
10010030:	defffd04 	addi	sp,sp,-12
10010034:	dfc00215 	stw	ra,8(sp)
10010038:	40bffd17 	ldw	r2,-12(r8)
1001003c:	dc000115 	stw	r16,4(sp)
10010040:	11801136 	bltu	r2,r6,10010088 <_ZNSsC1ERKSsjj+0x5c>
10010044:	118bc83a 	sub	r5,r2,r6
10010048:	3007883a 	mov	r3,r6
1001004c:	2021883a 	mov	r16,r4
10010050:	39400b36 	bltu	r7,r5,10010080 <_ZNSsC1ERKSsjj+0x54>
10010054:	28cb883a 	add	r5,r5,r3
10010058:	000f883a 	mov	r7,zero
1001005c:	d98000c4 	addi	r6,sp,3
10010060:	414b883a 	add	r5,r8,r5
10010064:	40c9883a 	add	r4,r8,r3
10010068:	000ff9c0 	call	1000ff9c <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
1001006c:	80800015 	stw	r2,0(r16)
10010070:	dfc00217 	ldw	ra,8(sp)
10010074:	dc000117 	ldw	r16,4(sp)
10010078:	dec00304 	addi	sp,sp,12
1001007c:	f800283a 	ret
10010080:	380b883a 	mov	r5,r7
10010084:	003ff306 	br	10010054 <_ZNSsC1ERKSsjj+0x28>
10010088:	014400b4 	movhi	r5,4098
1001008c:	010400b4 	movhi	r4,4098
10010090:	100f883a 	mov	r7,r2
10010094:	29568504 	addi	r5,r5,23060
10010098:	21161f04 	addi	r4,r4,22652
1001009c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100100a0 <_ZNKSs6substrEjj>:
100100a0:	28c00017 	ldw	r3,0(r5)
100100a4:	defffe04 	addi	sp,sp,-8
100100a8:	dfc00115 	stw	ra,4(sp)
100100ac:	18fffd17 	ldw	r3,-12(r3)
100100b0:	dc000015 	stw	r16,0(sp)
100100b4:	19800736 	bltu	r3,r6,100100d4 <_ZNKSs6substrEjj+0x34>
100100b8:	2021883a 	mov	r16,r4
100100bc:	001002c0 	call	1001002c <_ZNSsC1ERKSsjj>
100100c0:	8005883a 	mov	r2,r16
100100c4:	dfc00117 	ldw	ra,4(sp)
100100c8:	dc000017 	ldw	r16,0(sp)
100100cc:	dec00204 	addi	sp,sp,8
100100d0:	f800283a 	ret
100100d4:	014400b4 	movhi	r5,4098
100100d8:	010400b4 	movhi	r4,4098
100100dc:	180f883a 	mov	r7,r3
100100e0:	29568c04 	addi	r5,r5,23088
100100e4:	21161f04 	addi	r4,r4,22652
100100e8:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100100ec <_ZNSsC1ERKSsjjRKSaIcE>:
100100ec:	2a000017 	ldw	r8,0(r5)
100100f0:	defffe04 	addi	sp,sp,-8
100100f4:	dfc00115 	stw	ra,4(sp)
100100f8:	40bffd17 	ldw	r2,-12(r8)
100100fc:	dc000015 	stw	r16,0(sp)
10010100:	11801136 	bltu	r2,r6,10010148 <_ZNSsC1ERKSsjjRKSaIcE+0x5c>
10010104:	118bc83a 	sub	r5,r2,r6
10010108:	3007883a 	mov	r3,r6
1001010c:	2021883a 	mov	r16,r4
10010110:	39400b36 	bltu	r7,r5,10010140 <_ZNSsC1ERKSsjjRKSaIcE+0x54>
10010114:	d9800217 	ldw	r6,8(sp)
10010118:	28cb883a 	add	r5,r5,r3
1001011c:	000f883a 	mov	r7,zero
10010120:	414b883a 	add	r5,r8,r5
10010124:	40c9883a 	add	r4,r8,r3
10010128:	000ff9c0 	call	1000ff9c <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
1001012c:	80800015 	stw	r2,0(r16)
10010130:	dfc00117 	ldw	ra,4(sp)
10010134:	dc000017 	ldw	r16,0(sp)
10010138:	dec00204 	addi	sp,sp,8
1001013c:	f800283a 	ret
10010140:	380b883a 	mov	r5,r7
10010144:	003ff306 	br	10010114 <_ZNSsC1ERKSsjjRKSaIcE+0x28>
10010148:	014400b4 	movhi	r5,4098
1001014c:	010400b4 	movhi	r4,4098
10010150:	100f883a 	mov	r7,r2
10010154:	29568504 	addi	r5,r5,23060
10010158:	21161f04 	addi	r4,r4,22652
1001015c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10010160 <_ZNSsC1IPcEET_S1_RKSaIcE>:
10010160:	defffe04 	addi	sp,sp,-8
10010164:	2805883a 	mov	r2,r5
10010168:	dc000015 	stw	r16,0(sp)
1001016c:	300b883a 	mov	r5,r6
10010170:	2021883a 	mov	r16,r4
10010174:	380d883a 	mov	r6,r7
10010178:	1009883a 	mov	r4,r2
1001017c:	000f883a 	mov	r7,zero
10010180:	dfc00115 	stw	ra,4(sp)
10010184:	000ff9c0 	call	1000ff9c <_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag>
10010188:	80800015 	stw	r2,0(r16)
1001018c:	dfc00117 	ldw	ra,4(sp)
10010190:	dc000017 	ldw	r16,0(sp)
10010194:	dec00204 	addi	sp,sp,8
10010198:	f800283a 	ret

1001019c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>:
1001019c:	21400226 	beq	r4,r5,100101a8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0xc>
100101a0:	20000426 	beq	r4,zero,100101b4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x18>
100101a4:	000e4281 	jmpi	1000e428 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.25>
100101a8:	008400f4 	movhi	r2,4099
100101ac:	10aac304 	addi	r2,r2,-21748
100101b0:	f800283a 	ret
100101b4:	010400b4 	movhi	r4,4098
100101b8:	deffff04 	addi	sp,sp,-4
100101bc:	21167a04 	addi	r4,r4,23016
100101c0:	dfc00015 	stw	ra,0(sp)
100101c4:	0009ef00 	call	10009ef0 <_ZSt19__throw_logic_errorPKc>

100101c8 <_ZNSsC1EPKcjRKSaIcE>:
100101c8:	defffe04 	addi	sp,sp,-8
100101cc:	2805883a 	mov	r2,r5
100101d0:	dc000015 	stw	r16,0(sp)
100101d4:	298b883a 	add	r5,r5,r6
100101d8:	2021883a 	mov	r16,r4
100101dc:	380d883a 	mov	r6,r7
100101e0:	1009883a 	mov	r4,r2
100101e4:	000f883a 	mov	r7,zero
100101e8:	dfc00115 	stw	ra,4(sp)
100101ec:	001019c0 	call	1001019c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
100101f0:	80800015 	stw	r2,0(r16)
100101f4:	dfc00117 	ldw	ra,4(sp)
100101f8:	dc000017 	ldw	r16,0(sp)
100101fc:	dec00204 	addi	sp,sp,8
10010200:	f800283a 	ret

10010204 <_ZNSs7replaceEjjPKcj>:
10010204:	00c400b4 	movhi	r3,4098
10010208:	deffe904 	addi	sp,sp,-92
1001020c:	18d1a584 	addi	r3,r3,18070
10010210:	d8c00d15 	stw	r3,52(sp)
10010214:	d8c01504 	addi	r3,sp,84
10010218:	d8c00e15 	stw	r3,56(sp)
1001021c:	02040074 	movhi	r8,4097
10010220:	d8c00604 	addi	r3,sp,24
10010224:	00840074 	movhi	r2,4097
10010228:	10811f04 	addi	r2,r2,1148
1001022c:	4222a704 	addi	r8,r8,-30052
10010230:	d9000315 	stw	r4,12(sp)
10010234:	1809883a 	mov	r4,r3
10010238:	d8800f15 	stw	r2,60(sp)
1001023c:	d9c00415 	stw	r7,16(sp)
10010240:	dfc01615 	stw	ra,88(sp)
10010244:	df001515 	stw	fp,84(sp)
10010248:	da000c15 	stw	r8,48(sp)
1001024c:	dec01015 	stw	sp,64(sp)
10010250:	d9400115 	stw	r5,4(sp)
10010254:	d9800515 	stw	r6,20(sp)
10010258:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1001025c:	d8800317 	ldw	r2,12(sp)
10010260:	10c00017 	ldw	r3,0(r2)
10010264:	d8800117 	ldw	r2,4(sp)
10010268:	19fffd17 	ldw	r7,-12(r3)
1001026c:	38807b36 	bltu	r7,r2,1001045c <_ZNSs7replaceEjjPKcj+0x258>
10010270:	d8800117 	ldw	r2,4(sp)
10010274:	d9000517 	ldw	r4,20(sp)
10010278:	3885c83a 	sub	r2,r7,r2
1001027c:	d8800215 	stw	r2,8(sp)
10010280:	20801a36 	bltu	r4,r2,100102ec <_ZNSs7replaceEjjPKcj+0xe8>
10010284:	d9000217 	ldw	r4,8(sp)
10010288:	00900034 	movhi	r2,16384
1001028c:	10bfff04 	addi	r2,r2,-4
10010290:	11c5c83a 	sub	r2,r2,r7
10010294:	1105883a 	add	r2,r2,r4
10010298:	d9001717 	ldw	r4,92(sp)
1001029c:	11006a36 	bltu	r2,r4,10010448 <_ZNSs7replaceEjjPKcj+0x244>
100102a0:	d9000417 	ldw	r4,16(sp)
100102a4:	20c0132e 	bgeu	r4,r3,100102f4 <_ZNSs7replaceEjjPKcj+0xf0>
100102a8:	d8801717 	ldw	r2,92(sp)
100102ac:	d9c00417 	ldw	r7,16(sp)
100102b0:	d9800217 	ldw	r6,8(sp)
100102b4:	d9400117 	ldw	r5,4(sp)
100102b8:	d9000317 	ldw	r4,12(sp)
100102bc:	d8800015 	stw	r2,0(sp)
100102c0:	00bfffc4 	movi	r2,-1
100102c4:	d8800715 	stw	r2,28(sp)
100102c8:	000edbc0 	call	1000edbc <_ZNSs15_M_replace_safeEjjPKcj>
100102cc:	d8800115 	stw	r2,4(sp)
100102d0:	d9000604 	addi	r4,sp,24
100102d4:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
100102d8:	d8800117 	ldw	r2,4(sp)
100102dc:	dfc01617 	ldw	ra,88(sp)
100102e0:	df001517 	ldw	fp,84(sp)
100102e4:	dec01704 	addi	sp,sp,92
100102e8:	f800283a 	ret
100102ec:	d9000215 	stw	r4,8(sp)
100102f0:	003fe406 	br	10010284 <_ZNSs7replaceEjjPKcj+0x80>
100102f4:	19cf883a 	add	r7,r3,r7
100102f8:	393feb36 	bltu	r7,r4,100102a8 <_ZNSs7replaceEjjPKcj+0xa4>
100102fc:	18bfff17 	ldw	r2,-4(r3)
10010300:	00bfe916 	blt	zero,r2,100102a8 <_ZNSs7replaceEjjPKcj+0xa4>
10010304:	d8801717 	ldw	r2,92(sp)
10010308:	2085883a 	add	r2,r4,r2
1001030c:	d9000117 	ldw	r4,4(sp)
10010310:	1909883a 	add	r4,r3,r4
10010314:	2080402e 	bgeu	r4,r2,10010418 <_ZNSs7replaceEjjPKcj+0x214>
10010318:	d8800117 	ldw	r2,4(sp)
1001031c:	d9000217 	ldw	r4,8(sp)
10010320:	d9400417 	ldw	r5,16(sp)
10010324:	1105883a 	add	r2,r2,r4
10010328:	1885883a 	add	r2,r3,r2
1001032c:	28801e36 	bltu	r5,r2,100103a8 <_ZNSs7replaceEjjPKcj+0x1a4>
10010330:	d8800417 	ldw	r2,16(sp)
10010334:	10c7c83a 	sub	r3,r2,r3
10010338:	d8801717 	ldw	r2,92(sp)
1001033c:	1887883a 	add	r3,r3,r2
10010340:	d8800217 	ldw	r2,8(sp)
10010344:	1885c83a 	sub	r2,r3,r2
10010348:	d8800415 	stw	r2,16(sp)
1001034c:	d9400117 	ldw	r5,4(sp)
10010350:	d9000317 	ldw	r4,12(sp)
10010354:	d9c01717 	ldw	r7,92(sp)
10010358:	d9800217 	ldw	r6,8(sp)
1001035c:	00bfffc4 	movi	r2,-1
10010360:	d8800715 	stw	r2,28(sp)
10010364:	000e5980 	call	1000e598 <_ZNSs9_M_mutateEjjj>
10010368:	d8800317 	ldw	r2,12(sp)
1001036c:	d8c00117 	ldw	r3,4(sp)
10010370:	11400017 	ldw	r5,0(r2)
10010374:	d8801717 	ldw	r2,92(sp)
10010378:	28c9883a 	add	r4,r5,r3
1001037c:	d8c00417 	ldw	r3,16(sp)
10010380:	10800058 	cmpnei	r2,r2,1
10010384:	28cb883a 	add	r5,r5,r3
10010388:	10002726 	beq	r2,zero,10010428 <_ZNSs7replaceEjjPKcj+0x224>
1001038c:	d8801717 	ldw	r2,92(sp)
10010390:	10002a26 	beq	r2,zero,1001043c <_ZNSs7replaceEjjPKcj+0x238>
10010394:	100d883a 	mov	r6,r2
10010398:	00157f80 	call	100157f8 <memcpy>
1001039c:	d8800317 	ldw	r2,12(sp)
100103a0:	d8800115 	stw	r2,4(sp)
100103a4:	003fca06 	br	100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
100103a8:	d9801717 	ldw	r6,92(sp)
100103ac:	00bfffc4 	movi	r2,-1
100103b0:	d9c013c4 	addi	r7,sp,79
100103b4:	d9001404 	addi	r4,sp,80
100103b8:	d8800715 	stw	r2,28(sp)
100103bc:	00101c80 	call	100101c8 <_ZNSsC1EPKcjRKSaIcE>
100103c0:	d8c01717 	ldw	r3,92(sp)
100103c4:	d9c01417 	ldw	r7,80(sp)
100103c8:	d9800217 	ldw	r6,8(sp)
100103cc:	d9400117 	ldw	r5,4(sp)
100103d0:	d9000317 	ldw	r4,12(sp)
100103d4:	00800044 	movi	r2,1
100103d8:	d8c00015 	stw	r3,0(sp)
100103dc:	d8800715 	stw	r2,28(sp)
100103e0:	000edbc0 	call	1000edbc <_ZNSs15_M_replace_safeEjjPKcj>
100103e4:	d8c01417 	ldw	r3,80(sp)
100103e8:	d8800115 	stw	r2,4(sp)
100103ec:	008400f4 	movhi	r2,4099
100103f0:	10aac004 	addi	r2,r2,-21760
100103f4:	193ffd04 	addi	r4,r3,-12
100103f8:	20bfb526 	beq	r4,r2,100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
100103fc:	18bfff17 	ldw	r2,-4(r3)
10010400:	117fffc4 	addi	r5,r2,-1
10010404:	197fff15 	stw	r5,-4(r3)
10010408:	00bfb116 	blt	zero,r2,100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
1001040c:	d94013c4 	addi	r5,sp,79
10010410:	000e4c40 	call	1000e4c4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
10010414:	003fae06 	br	100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
10010418:	d8800417 	ldw	r2,16(sp)
1001041c:	10c5c83a 	sub	r2,r2,r3
10010420:	d8800415 	stw	r2,16(sp)
10010424:	003fc906 	br	1001034c <_ZNSs7replaceEjjPKcj+0x148>
10010428:	28800003 	ldbu	r2,0(r5)
1001042c:	d8c00317 	ldw	r3,12(sp)
10010430:	20800005 	stb	r2,0(r4)
10010434:	d8c00115 	stw	r3,4(sp)
10010438:	003fa506 	br	100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
1001043c:	d8800317 	ldw	r2,12(sp)
10010440:	d8800115 	stw	r2,4(sp)
10010444:	003fa206 	br	100102d0 <_ZNSs7replaceEjjPKcj+0xcc>
10010448:	010400b4 	movhi	r4,4098
1001044c:	00bfffc4 	movi	r2,-1
10010450:	21166204 	addi	r4,r4,22920
10010454:	d8800715 	stw	r2,28(sp)
10010458:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>
1001045c:	d9800117 	ldw	r6,4(sp)
10010460:	014400b4 	movhi	r5,4098
10010464:	010400b4 	movhi	r4,4098
10010468:	00bfffc4 	movi	r2,-1
1001046c:	29566204 	addi	r5,r5,22920
10010470:	21161f04 	addi	r4,r4,22652
10010474:	d8800715 	stw	r2,28(sp)
10010478:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
1001047c:	d9001417 	ldw	r4,80(sp)
10010480:	d8c00817 	ldw	r3,32(sp)
10010484:	008400f4 	movhi	r2,4099
10010488:	10aac004 	addi	r2,r2,-21760
1001048c:	213ffd04 	addi	r4,r4,-12
10010490:	d8c00115 	stw	r3,4(sp)
10010494:	20800226 	beq	r4,r2,100104a0 <_ZNSs7replaceEjjPKcj+0x29c>
10010498:	d94013c4 	addi	r5,sp,79
1001049c:	000e4c80 	call	1000e4c8 <_ZNSs4_Rep10_M_disposeERKSaIcE.part.12>
100104a0:	d9000117 	ldw	r4,4(sp)
100104a4:	00bfffc4 	movi	r2,-1
100104a8:	d8800715 	stw	r2,28(sp)
100104ac:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

100104b0 <_ZNSs7replaceEjjRKSs>:
100104b0:	39c00017 	ldw	r7,0(r7)
100104b4:	defffe04 	addi	sp,sp,-8
100104b8:	dfc00115 	stw	ra,4(sp)
100104bc:	38bffd17 	ldw	r2,-12(r7)
100104c0:	d8800015 	stw	r2,0(sp)
100104c4:	00102040 	call	10010204 <_ZNSs7replaceEjjPKcj>
100104c8:	dfc00117 	ldw	ra,4(sp)
100104cc:	dec00204 	addi	sp,sp,8
100104d0:	f800283a 	ret

100104d4 <_ZNSs7replaceEjjRKSsjj>:
100104d4:	39c00017 	ldw	r7,0(r7)
100104d8:	deffff04 	addi	sp,sp,-4
100104dc:	d8c00117 	ldw	r3,4(sp)
100104e0:	38bffd17 	ldw	r2,-12(r7)
100104e4:	dfc00015 	stw	ra,0(sp)
100104e8:	da000217 	ldw	r8,8(sp)
100104ec:	10c00c36 	bltu	r2,r3,10010520 <_ZNSs7replaceEjjRKSsjj+0x4c>
100104f0:	10c5c83a 	sub	r2,r2,r3
100104f4:	38cf883a 	add	r7,r7,r3
100104f8:	40800436 	bltu	r8,r2,1001050c <_ZNSs7replaceEjjRKSsjj+0x38>
100104fc:	d8800115 	stw	r2,4(sp)
10010500:	dfc00017 	ldw	ra,0(sp)
10010504:	dec00104 	addi	sp,sp,4
10010508:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>
1001050c:	4005883a 	mov	r2,r8
10010510:	d8800115 	stw	r2,4(sp)
10010514:	dfc00017 	ldw	ra,0(sp)
10010518:	dec00104 	addi	sp,sp,4
1001051c:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>
10010520:	014400b4 	movhi	r5,4098
10010524:	010400b4 	movhi	r4,4098
10010528:	100f883a 	mov	r7,r2
1001052c:	180d883a 	mov	r6,r3
10010530:	29566204 	addi	r5,r5,22920
10010534:	21161f04 	addi	r4,r4,22652
10010538:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001053c <_ZNSs7replaceEjjPKc>:
1001053c:	defffa04 	addi	sp,sp,-24
10010540:	dc000415 	stw	r16,16(sp)
10010544:	2021883a 	mov	r16,r4
10010548:	3809883a 	mov	r4,r7
1001054c:	dfc00515 	stw	ra,20(sp)
10010550:	d9c00315 	stw	r7,12(sp)
10010554:	d9400215 	stw	r5,8(sp)
10010558:	d9800115 	stw	r6,4(sp)
1001055c:	00164b40 	call	100164b4 <strlen>
10010560:	d9c00317 	ldw	r7,12(sp)
10010564:	d9800117 	ldw	r6,4(sp)
10010568:	d9400217 	ldw	r5,8(sp)
1001056c:	d8800015 	stw	r2,0(sp)
10010570:	8009883a 	mov	r4,r16
10010574:	00102040 	call	10010204 <_ZNSs7replaceEjjPKcj>
10010578:	dfc00517 	ldw	ra,20(sp)
1001057c:	dc000417 	ldw	r16,16(sp)
10010580:	dec00604 	addi	sp,sp,24
10010584:	f800283a 	ret

10010588 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj>:
10010588:	20800017 	ldw	r2,0(r4)
1001058c:	314dc83a 	sub	r6,r6,r5
10010590:	288bc83a 	sub	r5,r5,r2
10010594:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

10010598 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs>:
10010598:	39c00017 	ldw	r7,0(r7)
1001059c:	20800017 	ldw	r2,0(r4)
100105a0:	defffe04 	addi	sp,sp,-8
100105a4:	38fffd17 	ldw	r3,-12(r7)
100105a8:	314dc83a 	sub	r6,r6,r5
100105ac:	288bc83a 	sub	r5,r5,r2
100105b0:	d8c00015 	stw	r3,0(sp)
100105b4:	dfc00115 	stw	ra,4(sp)
100105b8:	00102040 	call	10010204 <_ZNSs7replaceEjjPKcj>
100105bc:	dfc00117 	ldw	ra,4(sp)
100105c0:	dec00204 	addi	sp,sp,8
100105c4:	f800283a 	ret

100105c8 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc>:
100105c8:	defffa04 	addi	sp,sp,-24
100105cc:	dc000215 	stw	r16,8(sp)
100105d0:	2021883a 	mov	r16,r4
100105d4:	3809883a 	mov	r4,r7
100105d8:	dfc00515 	stw	ra,20(sp)
100105dc:	dc800415 	stw	r18,16(sp)
100105e0:	dc400315 	stw	r17,12(sp)
100105e4:	d9c00115 	stw	r7,4(sp)
100105e8:	2823883a 	mov	r17,r5
100105ec:	3025883a 	mov	r18,r6
100105f0:	00164b40 	call	100164b4 <strlen>
100105f4:	81400017 	ldw	r5,0(r16)
100105f8:	d9c00117 	ldw	r7,4(sp)
100105fc:	d8800015 	stw	r2,0(sp)
10010600:	944dc83a 	sub	r6,r18,r17
10010604:	894bc83a 	sub	r5,r17,r5
10010608:	8009883a 	mov	r4,r16
1001060c:	00102040 	call	10010204 <_ZNSs7replaceEjjPKcj>
10010610:	dfc00517 	ldw	ra,20(sp)
10010614:	dc800417 	ldw	r18,16(sp)
10010618:	dc400317 	ldw	r17,12(sp)
1001061c:	dc000217 	ldw	r16,8(sp)
10010620:	dec00604 	addi	sp,sp,24
10010624:	f800283a 	ret

10010628 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_>:
10010628:	d8800017 	ldw	r2,0(sp)
1001062c:	20c00017 	ldw	r3,0(r4)
10010630:	314dc83a 	sub	r6,r6,r5
10010634:	11c5c83a 	sub	r2,r2,r7
10010638:	28cbc83a 	sub	r5,r5,r3
1001063c:	d8800015 	stw	r2,0(sp)
10010640:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

10010644 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_>:
10010644:	d8800017 	ldw	r2,0(sp)
10010648:	20c00017 	ldw	r3,0(r4)
1001064c:	314dc83a 	sub	r6,r6,r5
10010650:	11c5c83a 	sub	r2,r2,r7
10010654:	28cbc83a 	sub	r5,r5,r3
10010658:	d8800015 	stw	r2,0(sp)
1001065c:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

10010660 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE>:
10010660:	20800017 	ldw	r2,0(r4)
10010664:	deffff04 	addi	sp,sp,-4
10010668:	314dc83a 	sub	r6,r6,r5
1001066c:	288bc83a 	sub	r5,r5,r2
10010670:	d9c00015 	stw	r7,0(sp)
10010674:	dec00104 	addi	sp,sp,4
10010678:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

1001067c <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_>:
1001067c:	d8800017 	ldw	r2,0(sp)
10010680:	20c00017 	ldw	r3,0(r4)
10010684:	314dc83a 	sub	r6,r6,r5
10010688:	11c5c83a 	sub	r2,r2,r7
1001068c:	28cbc83a 	sub	r5,r5,r3
10010690:	d8800015 	stw	r2,0(sp)
10010694:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

10010698 <_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_>:
10010698:	d8800017 	ldw	r2,0(sp)
1001069c:	20c00017 	ldw	r3,0(r4)
100106a0:	314dc83a 	sub	r6,r6,r5
100106a4:	11c5c83a 	sub	r2,r2,r7
100106a8:	28cbc83a 	sub	r5,r5,r3
100106ac:	d8800015 	stw	r2,0(sp)
100106b0:	00102041 	jmpi	10010204 <_ZNSs7replaceEjjPKcj>

100106b4 <_ZNSsC1EPKcRKSaIcE>:
100106b4:	defffc04 	addi	sp,sp,-16
100106b8:	dc400215 	stw	r17,8(sp)
100106bc:	dc000115 	stw	r16,4(sp)
100106c0:	dfc00315 	stw	ra,12(sp)
100106c4:	2821883a 	mov	r16,r5
100106c8:	2023883a 	mov	r17,r4
100106cc:	28000e26 	beq	r5,zero,10010708 <_ZNSsC1EPKcRKSaIcE+0x54>
100106d0:	2809883a 	mov	r4,r5
100106d4:	d9800015 	stw	r6,0(sp)
100106d8:	00164b40 	call	100164b4 <strlen>
100106dc:	d9800017 	ldw	r6,0(sp)
100106e0:	808b883a 	add	r5,r16,r2
100106e4:	000f883a 	mov	r7,zero
100106e8:	8009883a 	mov	r4,r16
100106ec:	001019c0 	call	1001019c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
100106f0:	88800015 	stw	r2,0(r17)
100106f4:	dfc00317 	ldw	ra,12(sp)
100106f8:	dc400217 	ldw	r17,8(sp)
100106fc:	dc000117 	ldw	r16,4(sp)
10010700:	dec00404 	addi	sp,sp,16
10010704:	f800283a 	ret
10010708:	017fffc4 	movi	r5,-1
1001070c:	003ff506 	br	100106e4 <_ZNSsC1EPKcRKSaIcE+0x30>

10010710 <_ZNSsC1ESt16initializer_listIcERKSaIcE>:
10010710:	defffe04 	addi	sp,sp,-8
10010714:	2805883a 	mov	r2,r5
10010718:	dc000015 	stw	r16,0(sp)
1001071c:	298b883a 	add	r5,r5,r6
10010720:	2021883a 	mov	r16,r4
10010724:	380d883a 	mov	r6,r7
10010728:	1009883a 	mov	r4,r2
1001072c:	000f883a 	mov	r7,zero
10010730:	dfc00115 	stw	ra,4(sp)
10010734:	001019c0 	call	1001019c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10010738:	80800015 	stw	r2,0(r16)
1001073c:	dfc00117 	ldw	ra,4(sp)
10010740:	dc000017 	ldw	r16,0(sp)
10010744:	dec00204 	addi	sp,sp,8
10010748:	f800283a 	ret

1001074c <_ZNSsC1IPKcEET_S2_RKSaIcE>:
1001074c:	defffe04 	addi	sp,sp,-8
10010750:	2805883a 	mov	r2,r5
10010754:	dc000015 	stw	r16,0(sp)
10010758:	300b883a 	mov	r5,r6
1001075c:	2021883a 	mov	r16,r4
10010760:	380d883a 	mov	r6,r7
10010764:	1009883a 	mov	r4,r2
10010768:	000f883a 	mov	r7,zero
1001076c:	dfc00115 	stw	ra,4(sp)
10010770:	001019c0 	call	1001019c <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
10010774:	80800015 	stw	r2,0(r16)
10010778:	dfc00117 	ldw	ra,4(sp)
1001077c:	dc000017 	ldw	r16,0(sp)
10010780:	dec00204 	addi	sp,sp,8
10010784:	f800283a 	ret

10010788 <_ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_>:
10010788:	20800017 	ldw	r2,0(r4)
1001078c:	28c00017 	ldw	r3,0(r5)
10010790:	10c5003a 	cmpeq	r2,r2,r3
10010794:	f800283a 	ret

10010798 <_ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_>:
10010798:	20800017 	ldw	r2,0(r4)
1001079c:	28c00017 	ldw	r3,0(r5)
100107a0:	10c5003a 	cmpeq	r2,r2,r3
100107a4:	f800283a 	ret

100107a8 <_ZNSt13random_device7_M_initERKSs>:
100107a8:	defffc04 	addi	sp,sp,-16
100107ac:	dc000015 	stw	r16,0(sp)
100107b0:	2821883a 	mov	r16,r5
100107b4:	014400b4 	movhi	r5,4098
100107b8:	dc800215 	stw	r18,8(sp)
100107bc:	29569604 	addi	r5,r5,23128
100107c0:	2025883a 	mov	r18,r4
100107c4:	8009883a 	mov	r4,r16
100107c8:	dc400115 	stw	r17,4(sp)
100107cc:	dfc00315 	stw	ra,12(sp)
100107d0:	84400017 	ldw	r17,0(r16)
100107d4:	000e04c0 	call	1000e04c <_ZNKSs7compareEPKc>
100107d8:	10001126 	beq	r2,zero,10010820 <_ZNSt13random_device7_M_initERKSs+0x78>
100107dc:	014400b4 	movhi	r5,4098
100107e0:	29569204 	addi	r5,r5,23112
100107e4:	8009883a 	mov	r4,r16
100107e8:	000e04c0 	call	1000e04c <_ZNKSs7compareEPKc>
100107ec:	10000f1e 	bne	r2,zero,1001082c <_ZNSt13random_device7_M_initERKSs+0x84>
100107f0:	014400b4 	movhi	r5,4098
100107f4:	2956a804 	addi	r5,r5,23200
100107f8:	8809883a 	mov	r4,r17
100107fc:	001479c0 	call	1001479c <fopen>
10010800:	90800015 	stw	r2,0(r18)
10010804:	10000e26 	beq	r2,zero,10010840 <_ZNSt13random_device7_M_initERKSs+0x98>
10010808:	dfc00317 	ldw	ra,12(sp)
1001080c:	dc800217 	ldw	r18,8(sp)
10010810:	dc400117 	ldw	r17,4(sp)
10010814:	dc000017 	ldw	r16,0(sp)
10010818:	dec00404 	addi	sp,sp,16
1001081c:	f800283a 	ret
10010820:	044400b4 	movhi	r17,4098
10010824:	8c569204 	addi	r17,r17,23112
10010828:	003ff106 	br	100107f0 <_ZNSt13random_device7_M_initERKSs+0x48>
1001082c:	014400b4 	movhi	r5,4098
10010830:	29569804 	addi	r5,r5,23136
10010834:	8009883a 	mov	r4,r16
10010838:	000e04c0 	call	1000e04c <_ZNKSs7compareEPKc>
1001083c:	103fec26 	beq	r2,zero,100107f0 <_ZNSt13random_device7_M_initERKSs+0x48>
10010840:	010400b4 	movhi	r4,4098
10010844:	21169b04 	addi	r4,r4,23148
10010848:	000a3400 	call	1000a340 <_ZSt21__throw_runtime_errorPKc>

1001084c <_ZNSt13random_device14_M_init_pretr1ERKSs>:
1001084c:	defffc04 	addi	sp,sp,-16
10010850:	dc400215 	stw	r17,8(sp)
10010854:	2823883a 	mov	r17,r5
10010858:	014400b4 	movhi	r5,4098
1001085c:	dc000115 	stw	r16,4(sp)
10010860:	2956a904 	addi	r5,r5,23204
10010864:	2021883a 	mov	r16,r4
10010868:	8809883a 	mov	r4,r17
1001086c:	dfc00315 	stw	ra,12(sp)
10010870:	000e04c0 	call	1000e04c <_ZNKSs7compareEPKc>
10010874:	1000161e 	bne	r2,zero,100108d0 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x84>
10010878:	01055c44 	movi	r4,5489
1001087c:	019b0234 	movhi	r6,27656
10010880:	81000015 	stw	r4,0(r16)
10010884:	81400104 	addi	r5,r16,4
10010888:	00c00044 	movi	r3,1
1001088c:	31a25944 	addi	r6,r6,-30363
10010890:	00000106 	br	10010898 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x4c>
10010894:	29400104 	addi	r5,r5,4
10010898:	2004d7ba 	srli	r2,r4,30
1001089c:	1104f03a 	xor	r2,r2,r4
100108a0:	1185383a 	mul	r2,r2,r6
100108a4:	10c9883a 	add	r4,r2,r3
100108a8:	18c00044 	addi	r3,r3,1
100108ac:	29000015 	stw	r4,0(r5)
100108b0:	18809c20 	cmpeqi	r2,r3,624
100108b4:	103ff726 	beq	r2,zero,10010894 <_ZNSt13random_device14_M_init_pretr1ERKSs+0x48>
100108b8:	80c27015 	stw	r3,2496(r16)
100108bc:	dfc00317 	ldw	ra,12(sp)
100108c0:	dc400217 	ldw	r17,8(sp)
100108c4:	dc000117 	ldw	r16,4(sp)
100108c8:	dec00404 	addi	sp,sp,16
100108cc:	f800283a 	ret
100108d0:	8c400017 	ldw	r17,0(r17)
100108d4:	000d883a 	mov	r6,zero
100108d8:	d80b883a 	mov	r5,sp
100108dc:	8809883a 	mov	r4,r17
100108e0:	00167b80 	call	100167b8 <strtoul>
100108e4:	1009883a 	mov	r4,r2
100108e8:	88800007 	ldb	r2,0(r17)
100108ec:	10000326 	beq	r2,zero,100108fc <_ZNSt13random_device14_M_init_pretr1ERKSs+0xb0>
100108f0:	d8800017 	ldw	r2,0(sp)
100108f4:	10800007 	ldb	r2,0(r2)
100108f8:	103fe026 	beq	r2,zero,1001087c <_ZNSt13random_device14_M_init_pretr1ERKSs+0x30>
100108fc:	010400b4 	movhi	r4,4098
10010900:	21169b04 	addi	r4,r4,23148
10010904:	000a3400 	call	1000a340 <_ZSt21__throw_runtime_errorPKc>

10010908 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
10010908:	21400015 	stw	r5,0(r4)
1001090c:	f800283a 	ret

10010910 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj>:
10010910:	21400115 	stw	r5,4(r4)
10010914:	f800283a 	ret

10010918 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
10010918:	20800017 	ldw	r2,0(r4)
1001091c:	f800283a 	ret

10010920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10010920:	20800204 	addi	r2,r4,8
10010924:	f800283a 	ret

10010928 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
10010928:	20800204 	addi	r2,r4,8
1001092c:	f800283a 	ret

10010930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
10010930:	21400215 	stw	r5,8(r4)
10010934:	f800283a 	ret

10010938 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
10010938:	20800017 	ldw	r2,0(r4)
1001093c:	21400115 	stw	r5,4(r4)
10010940:	1145883a 	add	r2,r2,r5
10010944:	10000005 	stb	zero,0(r2)
10010948:	f800283a 	ret

1001094c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
1001094c:	20800017 	ldw	r2,0(r4)
10010950:	21000204 	addi	r4,r4,8
10010954:	1105003a 	cmpeq	r2,r2,r4
10010958:	f800283a 	ret

1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
1001095c:	29000017 	ldw	r4,0(r5)
10010960:	20000e16 	blt	r4,zero,1001099c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>
10010964:	3100062e 	bgeu	r6,r4,10010980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
10010968:	318d883a 	add	r6,r6,r6
1001096c:	2180042e 	bgeu	r4,r6,10010980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x24>
10010970:	30000516 	blt	r6,zero,10010988 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
10010974:	29800015 	stw	r6,0(r5)
10010978:	31000044 	addi	r4,r6,1
1001097c:	0007fb01 	jmpi	10007fb0 <_Znwj>
10010980:	21000044 	addi	r4,r4,1
10010984:	0007fb01 	jmpi	10007fb0 <_Znwj>
10010988:	00a00034 	movhi	r2,32768
1001098c:	10bfffc4 	addi	r2,r2,-1
10010990:	28800015 	stw	r2,0(r5)
10010994:	01200034 	movhi	r4,32768
10010998:	0007fb01 	jmpi	10007fb0 <_Znwj>
1001099c:	010400b4 	movhi	r4,4098
100109a0:	deffff04 	addi	sp,sp,-4
100109a4:	2116ab04 	addi	r4,r4,23212
100109a8:	dfc00015 	stw	ra,0(sp)
100109ac:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

100109b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
100109b0:	20c00017 	ldw	r3,0(r4)
100109b4:	20800204 	addi	r2,r4,8
100109b8:	18800226 	beq	r3,r2,100109c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x14>
100109bc:	1809883a 	mov	r4,r3
100109c0:	00085041 	jmpi	10008504 <_ZdlPv>
100109c4:	f800283a 	ret

100109c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj>:
100109c8:	21000017 	ldw	r4,0(r4)
100109cc:	00085041 	jmpi	10008504 <_ZdlPv>

100109d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>:
100109d0:	defffc04 	addi	sp,sp,-16
100109d4:	dc400215 	stw	r17,8(sp)
100109d8:	dc000115 	stw	r16,4(sp)
100109dc:	dfc00315 	stw	ra,12(sp)
100109e0:	d9400015 	stw	r5,0(sp)
100109e4:	28800428 	cmpgeui	r2,r5,16
100109e8:	2021883a 	mov	r16,r4
100109ec:	3023883a 	mov	r17,r6
100109f0:	1000151e 	bne	r2,zero,10010a48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x78>
100109f4:	20800017 	ldw	r2,0(r4)
100109f8:	2807883a 	mov	r3,r5
100109fc:	18000a26 	beq	r3,zero,10010a28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>
10010a00:	19000058 	cmpnei	r4,r3,1
10010a04:	20001726 	beq	r4,zero,10010a64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x94>
10010a08:	89403fcc 	andi	r5,r17,255
10010a0c:	2940201c 	xori	r5,r5,128
10010a10:	180d883a 	mov	r6,r3
10010a14:	1009883a 	mov	r4,r2
10010a18:	297fe004 	addi	r5,r5,-128
10010a1c:	0015a240 	call	10015a24 <memset>
10010a20:	d8c00017 	ldw	r3,0(sp)
10010a24:	80800017 	ldw	r2,0(r16)
10010a28:	80c00115 	stw	r3,4(r16)
10010a2c:	10c5883a 	add	r2,r2,r3
10010a30:	10000005 	stb	zero,0(r2)
10010a34:	dfc00317 	ldw	ra,12(sp)
10010a38:	dc400217 	ldw	r17,8(sp)
10010a3c:	dc000117 	ldw	r16,4(sp)
10010a40:	dec00404 	addi	sp,sp,16
10010a44:	f800283a 	ret
10010a48:	000d883a 	mov	r6,zero
10010a4c:	d80b883a 	mov	r5,sp
10010a50:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10010a54:	d8c00017 	ldw	r3,0(sp)
10010a58:	80800015 	stw	r2,0(r16)
10010a5c:	80c00215 	stw	r3,8(r16)
10010a60:	003fe606 	br	100109fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x2c>
10010a64:	14400005 	stb	r17,0(r2)
10010a68:	d8c00017 	ldw	r3,0(sp)
10010a6c:	80800017 	ldw	r2,0(r16)
10010a70:	003fed06 	br	10010a28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x58>

10010a74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc>:
10010a74:	31803fcc 	andi	r6,r6,255
10010a78:	3180201c 	xori	r6,r6,128
10010a7c:	31bfe004 	addi	r6,r6,-128
10010a80:	00109d01 	jmpi	100109d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

10010a84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
10010a84:	2005883a 	mov	r2,r4
10010a88:	f800283a 	ret

10010a8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
10010a8c:	2005883a 	mov	r2,r4
10010a90:	f800283a 	ret

10010a94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
10010a94:	21c00117 	ldw	r7,4(r4)
10010a98:	2805883a 	mov	r2,r5
10010a9c:	39400136 	bltu	r7,r5,10010aa4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x10>
10010aa0:	f800283a 	ret
10010aa4:	010400b4 	movhi	r4,4098
10010aa8:	deffff04 	addi	sp,sp,-4
10010aac:	300b883a 	mov	r5,r6
10010ab0:	21161f04 	addi	r4,r4,22652
10010ab4:	100d883a 	mov	r6,r2
10010ab8:	dfc00015 	stw	ra,0(sp)
10010abc:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10010ac0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
10010ac0:	00a00034 	movhi	r2,32768
10010ac4:	20c00117 	ldw	r3,4(r4)
10010ac8:	10bfffc4 	addi	r2,r2,-1
10010acc:	288b883a 	add	r5,r5,r2
10010ad0:	28cbc83a 	sub	r5,r5,r3
10010ad4:	29800136 	bltu	r5,r6,10010adc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x1c>
10010ad8:	f800283a 	ret
10010adc:	deffff04 	addi	sp,sp,-4
10010ae0:	3809883a 	mov	r4,r7
10010ae4:	dfc00015 	stw	ra,0(sp)
10010ae8:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

10010aec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj>:
10010aec:	20800117 	ldw	r2,4(r4)
10010af0:	1145c83a 	sub	r2,r2,r5
10010af4:	3080012e 	bgeu	r6,r2,10010afc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj+0x10>
10010af8:	3005883a 	mov	r2,r6
10010afc:	f800283a 	ret

10010b00 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
10010b00:	20800017 	ldw	r2,0(r4)
10010b04:	28800436 	bltu	r5,r2,10010b18 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x18>
10010b08:	20c00117 	ldw	r3,4(r4)
10010b0c:	10c5883a 	add	r2,r2,r3
10010b10:	1145803a 	cmpltu	r2,r2,r5
10010b14:	f800283a 	ret
10010b18:	00800044 	movi	r2,1
10010b1c:	f800283a 	ret

10010b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
10010b20:	30c00058 	cmpnei	r3,r6,1
10010b24:	18000326 	beq	r3,zero,10010b34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x14>
10010b28:	3000011e 	bne	r6,zero,10010b30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
10010b2c:	f800283a 	ret
10010b30:	00157f81 	jmpi	100157f8 <memcpy>
10010b34:	28800003 	ldbu	r2,0(r5)
10010b38:	20800005 	stb	r2,0(r4)
10010b3c:	f800283a 	ret

10010b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
10010b40:	30c00058 	cmpnei	r3,r6,1
10010b44:	18000326 	beq	r3,zero,10010b54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x14>
10010b48:	3000011e 	bne	r6,zero,10010b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0x10>
10010b4c:	f800283a 	ret
10010b50:	00158f81 	jmpi	100158f8 <memmove>
10010b54:	28800003 	ldbu	r2,0(r5)
10010b58:	20800005 	stb	r2,0(r4)
10010b5c:	f800283a 	ret

10010b60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>:
10010b60:	28800058 	cmpnei	r2,r5,1
10010b64:	200f883a 	mov	r7,r4
10010b68:	3007883a 	mov	r3,r6
10010b6c:	10000726 	beq	r2,zero,10010b8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x2c>
10010b70:	2800011e 	bne	r5,zero,10010b78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x18>
10010b74:	f800283a 	ret
10010b78:	280d883a 	mov	r6,r5
10010b7c:	19403fcc 	andi	r5,r3,255
10010b80:	2940201c 	xori	r5,r5,128
10010b84:	297fe004 	addi	r5,r5,-128
10010b88:	0015a241 	jmpi	10015a24 <memset>
10010b8c:	39800005 	stb	r6,0(r7)
10010b90:	f800283a 	ret

10010b94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_>:
10010b94:	314dc83a 	sub	r6,r6,r5
10010b98:	30c00058 	cmpnei	r3,r6,1
10010b9c:	18000326 	beq	r3,zero,10010bac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x18>
10010ba0:	3000011e 	bne	r6,zero,10010ba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_+0x14>
10010ba4:	f800283a 	ret
10010ba8:	00157f81 	jmpi	100157f8 <memcpy>
10010bac:	28800003 	ldbu	r2,0(r5)
10010bb0:	20800005 	stb	r2,0(r4)
10010bb4:	f800283a 	ret

10010bb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_>:
10010bb8:	314dc83a 	sub	r6,r6,r5
10010bbc:	30c00058 	cmpnei	r3,r6,1
10010bc0:	18000326 	beq	r3,zero,10010bd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x18>
10010bc4:	3000011e 	bne	r6,zero,10010bcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_+0x14>
10010bc8:	f800283a 	ret
10010bcc:	00157f81 	jmpi	100157f8 <memcpy>
10010bd0:	28800003 	ldbu	r2,0(r5)
10010bd4:	20800005 	stb	r2,0(r4)
10010bd8:	f800283a 	ret

10010bdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
10010bdc:	314dc83a 	sub	r6,r6,r5
10010be0:	30c00058 	cmpnei	r3,r6,1
10010be4:	18000326 	beq	r3,zero,10010bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x18>
10010be8:	3000011e 	bne	r6,zero,10010bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_+0x14>
10010bec:	f800283a 	ret
10010bf0:	00157f81 	jmpi	100157f8 <memcpy>
10010bf4:	28800003 	ldbu	r2,0(r5)
10010bf8:	20800005 	stb	r2,0(r4)
10010bfc:	f800283a 	ret

10010c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
10010c00:	314dc83a 	sub	r6,r6,r5
10010c04:	30c00058 	cmpnei	r3,r6,1
10010c08:	18000326 	beq	r3,zero,10010c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x18>
10010c0c:	3000011e 	bne	r6,zero,10010c14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_+0x14>
10010c10:	f800283a 	ret
10010c14:	00157f81 	jmpi	100157f8 <memcpy>
10010c18:	28800003 	ldbu	r2,0(r5)
10010c1c:	20800005 	stb	r2,0(r4)
10010c20:	f800283a 	ret

10010c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj>:
10010c24:	2145c83a 	sub	r2,r4,r5
10010c28:	f800283a 	ret

10010c2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
10010c2c:	21402e26 	beq	r4,r5,10010ce8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xbc>
10010c30:	defff904 	addi	sp,sp,-28
10010c34:	dd000515 	stw	r20,20(sp)
10010c38:	dfc00615 	stw	ra,24(sp)
10010c3c:	dcc00415 	stw	r19,16(sp)
10010c40:	dc800315 	stw	r18,12(sp)
10010c44:	dc400215 	stw	r17,8(sp)
10010c48:	dc000115 	stw	r16,4(sp)
10010c4c:	24400017 	ldw	r17,0(r4)
10010c50:	25000204 	addi	r20,r4,8
10010c54:	2cc00117 	ldw	r19,4(r5)
10010c58:	a4402426 	beq	r20,r17,10010cec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc0>
10010c5c:	21800217 	ldw	r6,8(r4)
10010c60:	2825883a 	mov	r18,r5
10010c64:	2021883a 	mov	r16,r4
10010c68:	34c01336 	bltu	r6,r19,10010cb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x8c>
10010c6c:	98000726 	beq	r19,zero,10010c8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
10010c70:	98800058 	cmpnei	r2,r19,1
10010c74:	91400017 	ldw	r5,0(r18)
10010c78:	10001e26 	beq	r2,zero,10010cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xc8>
10010c7c:	8809883a 	mov	r4,r17
10010c80:	980d883a 	mov	r6,r19
10010c84:	00157f80 	call	100157f8 <memcpy>
10010c88:	84400017 	ldw	r17,0(r16)
10010c8c:	84c00115 	stw	r19,4(r16)
10010c90:	8ce3883a 	add	r17,r17,r19
10010c94:	88000005 	stb	zero,0(r17)
10010c98:	dfc00617 	ldw	ra,24(sp)
10010c9c:	dd000517 	ldw	r20,20(sp)
10010ca0:	dcc00417 	ldw	r19,16(sp)
10010ca4:	dc800317 	ldw	r18,12(sp)
10010ca8:	dc400217 	ldw	r17,8(sp)
10010cac:	dc000117 	ldw	r16,4(sp)
10010cb0:	dec00704 	addi	sp,sp,28
10010cb4:	f800283a 	ret
10010cb8:	d80b883a 	mov	r5,sp
10010cbc:	dcc00015 	stw	r19,0(sp)
10010cc0:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10010cc4:	81000017 	ldw	r4,0(r16)
10010cc8:	1023883a 	mov	r17,r2
10010ccc:	a1000126 	beq	r20,r4,10010cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0xa8>
10010cd0:	00085040 	call	10008504 <_ZdlPv>
10010cd4:	d8800017 	ldw	r2,0(sp)
10010cd8:	84400015 	stw	r17,0(r16)
10010cdc:	80800215 	stw	r2,8(r16)
10010ce0:	983fea26 	beq	r19,zero,10010c8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>
10010ce4:	003fe206 	br	10010c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x44>
10010ce8:	f800283a 	ret
10010cec:	018003c4 	movi	r6,15
10010cf0:	003fdb06 	br	10010c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
10010cf4:	28800003 	ldbu	r2,0(r5)
10010cf8:	88800005 	stb	r2,0(r17)
10010cfc:	84400017 	ldw	r17,0(r16)
10010d00:	003fe206 	br	10010c8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x60>

10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
10010d04:	defff604 	addi	sp,sp,-40
10010d08:	ddc00815 	stw	r23,32(sp)
10010d0c:	dd400615 	stw	r21,24(sp)
10010d10:	dd000515 	stw	r20,20(sp)
10010d14:	dcc00415 	stw	r19,16(sp)
10010d18:	dc400215 	stw	r17,8(sp)
10010d1c:	dc000115 	stw	r16,4(sp)
10010d20:	dfc00915 	stw	ra,36(sp)
10010d24:	dd800715 	stw	r22,28(sp)
10010d28:	dc800315 	stw	r18,12(sp)
10010d2c:	dd400a17 	ldw	r21,40(sp)
10010d30:	24800117 	ldw	r18,4(r4)
10010d34:	20c00017 	ldw	r3,0(r4)
10010d38:	a985c83a 	sub	r2,r21,r6
10010d3c:	1485883a 	add	r2,r2,r18
10010d40:	29a7883a 	add	r19,r5,r6
10010d44:	d8800015 	stw	r2,0(sp)
10010d48:	25000204 	addi	r20,r4,8
10010d4c:	2021883a 	mov	r16,r4
10010d50:	2823883a 	mov	r17,r5
10010d54:	382f883a 	mov	r23,r7
10010d58:	94e5c83a 	sub	r18,r18,r19
10010d5c:	a0c03626 	beq	r20,r3,10010e38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x134>
10010d60:	21800217 	ldw	r6,8(r4)
10010d64:	d80b883a 	mov	r5,sp
10010d68:	8009883a 	mov	r4,r16
10010d6c:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10010d70:	102d883a 	mov	r22,r2
10010d74:	88000626 	beq	r17,zero,10010d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
10010d78:	88800058 	cmpnei	r2,r17,1
10010d7c:	81400017 	ldw	r5,0(r16)
10010d80:	10002a26 	beq	r2,zero,10010e2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x128>
10010d84:	880d883a 	mov	r6,r17
10010d88:	b009883a 	mov	r4,r22
10010d8c:	00157f80 	call	100157f8 <memcpy>
10010d90:	b8000726 	beq	r23,zero,10010db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
10010d94:	a8000626 	beq	r21,zero,10010db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>
10010d98:	a8800058 	cmpnei	r2,r21,1
10010d9c:	b449883a 	add	r4,r22,r17
10010da0:	10002726 	beq	r2,zero,10010e40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x13c>
10010da4:	a80d883a 	mov	r6,r21
10010da8:	b80b883a 	mov	r5,r23
10010dac:	00157f80 	call	100157f8 <memcpy>
10010db0:	81000017 	ldw	r4,0(r16)
10010db4:	90000926 	beq	r18,zero,10010ddc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
10010db8:	8d63883a 	add	r17,r17,r21
10010dbc:	90800058 	cmpnei	r2,r18,1
10010dc0:	b463883a 	add	r17,r22,r17
10010dc4:	24cb883a 	add	r5,r4,r19
10010dc8:	10001426 	beq	r2,zero,10010e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x118>
10010dcc:	8809883a 	mov	r4,r17
10010dd0:	900d883a 	mov	r6,r18
10010dd4:	00157f80 	call	100157f8 <memcpy>
10010dd8:	81000017 	ldw	r4,0(r16)
10010ddc:	a1000126 	beq	r20,r4,10010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xe0>
10010de0:	00085040 	call	10008504 <_ZdlPv>
10010de4:	d8800017 	ldw	r2,0(sp)
10010de8:	85800015 	stw	r22,0(r16)
10010dec:	80800215 	stw	r2,8(r16)
10010df0:	dfc00917 	ldw	ra,36(sp)
10010df4:	ddc00817 	ldw	r23,32(sp)
10010df8:	dd800717 	ldw	r22,28(sp)
10010dfc:	dd400617 	ldw	r21,24(sp)
10010e00:	dd000517 	ldw	r20,20(sp)
10010e04:	dcc00417 	ldw	r19,16(sp)
10010e08:	dc800317 	ldw	r18,12(sp)
10010e0c:	dc400217 	ldw	r17,8(sp)
10010e10:	dc000117 	ldw	r16,4(sp)
10010e14:	dec00a04 	addi	sp,sp,40
10010e18:	f800283a 	ret
10010e1c:	28800003 	ldbu	r2,0(r5)
10010e20:	88800005 	stb	r2,0(r17)
10010e24:	81000017 	ldw	r4,0(r16)
10010e28:	003fec06 	br	10010ddc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xd8>
10010e2c:	28800003 	ldbu	r2,0(r5)
10010e30:	b0800005 	stb	r2,0(r22)
10010e34:	003fd606 	br	10010d90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x8c>
10010e38:	018003c4 	movi	r6,15
10010e3c:	003fc906 	br	10010d64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x60>
10010e40:	b8800003 	ldbu	r2,0(r23)
10010e44:	20800005 	stb	r2,0(r4)
10010e48:	003fd906 	br	10010db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0xac>

10010e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
10010e4c:	defffd04 	addi	sp,sp,-12
10010e50:	dc400115 	stw	r17,4(sp)
10010e54:	dc000015 	stw	r16,0(sp)
10010e58:	dfc00215 	stw	ra,8(sp)
10010e5c:	20800117 	ldw	r2,4(r4)
10010e60:	298f883a 	add	r7,r5,r6
10010e64:	3023883a 	mov	r17,r6
10010e68:	11cdc83a 	sub	r6,r2,r7
10010e6c:	2021883a 	mov	r16,r4
10010e70:	20c00017 	ldw	r3,0(r4)
10010e74:	30000826 	beq	r6,zero,10010e98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
10010e78:	88000726 	beq	r17,zero,10010e98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>
10010e7c:	30800058 	cmpnei	r2,r6,1
10010e80:	1949883a 	add	r4,r3,r5
10010e84:	19cb883a 	add	r5,r3,r7
10010e88:	10000c26 	beq	r2,zero,10010ebc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x70>
10010e8c:	00158f80 	call	100158f8 <memmove>
10010e90:	80800117 	ldw	r2,4(r16)
10010e94:	80c00017 	ldw	r3,0(r16)
10010e98:	1445c83a 	sub	r2,r2,r17
10010e9c:	80800115 	stw	r2,4(r16)
10010ea0:	1885883a 	add	r2,r3,r2
10010ea4:	10000005 	stb	zero,0(r2)
10010ea8:	dfc00217 	ldw	ra,8(sp)
10010eac:	dc400117 	ldw	r17,4(sp)
10010eb0:	dc000017 	ldw	r16,0(sp)
10010eb4:	dec00304 	addi	sp,sp,12
10010eb8:	f800283a 	ret
10010ebc:	28800003 	ldbu	r2,0(r5)
10010ec0:	20800005 	stb	r2,0(r4)
10010ec4:	80800117 	ldw	r2,4(r16)
10010ec8:	80c00017 	ldw	r3,0(r16)
10010ecc:	003ff206 	br	10010e98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x4c>

10010ed0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
10010ed0:	20800204 	addi	r2,r4,8
10010ed4:	20800015 	stw	r2,0(r4)
10010ed8:	20000115 	stw	zero,4(r4)
10010edc:	20000205 	stb	zero,8(r4)
10010ee0:	f800283a 	ret

10010ee4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>:
10010ee4:	20800204 	addi	r2,r4,8
10010ee8:	20800015 	stw	r2,0(r4)
10010eec:	20000115 	stw	zero,4(r4)
10010ef0:	20000205 	stb	zero,8(r4)
10010ef4:	f800283a 	ret

10010ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_>:
10010ef8:	31803fcc 	andi	r6,r6,255
10010efc:	3180201c 	xori	r6,r6,128
10010f00:	20c00204 	addi	r3,r4,8
10010f04:	31bfe004 	addi	r6,r6,-128
10010f08:	20c00015 	stw	r3,0(r4)
10010f0c:	00109d01 	jmpi	100109d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>

10010f10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
10010f10:	defffc04 	addi	sp,sp,-16
10010f14:	dc800215 	stw	r18,8(sp)
10010f18:	dc400115 	stw	r17,4(sp)
10010f1c:	dc000015 	stw	r16,0(sp)
10010f20:	dfc00315 	stw	ra,12(sp)
10010f24:	2023883a 	mov	r17,r4
10010f28:	21000204 	addi	r4,r4,8
10010f2c:	89000015 	stw	r4,0(r17)
10010f30:	28800017 	ldw	r2,0(r5)
10010f34:	2c800204 	addi	r18,r5,8
10010f38:	2821883a 	mov	r16,r5
10010f3c:	90800e26 	beq	r18,r2,10010f78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x68>
10010f40:	88800015 	stw	r2,0(r17)
10010f44:	28800217 	ldw	r2,8(r5)
10010f48:	88800215 	stw	r2,8(r17)
10010f4c:	80800117 	ldw	r2,4(r16)
10010f50:	88800115 	stw	r2,4(r17)
10010f54:	84800015 	stw	r18,0(r16)
10010f58:	80000115 	stw	zero,4(r16)
10010f5c:	80000205 	stb	zero,8(r16)
10010f60:	dfc00317 	ldw	ra,12(sp)
10010f64:	dc800217 	ldw	r18,8(sp)
10010f68:	dc400117 	ldw	r17,4(sp)
10010f6c:	dc000017 	ldw	r16,0(sp)
10010f70:	dec00404 	addi	sp,sp,16
10010f74:	f800283a 	ret
10010f78:	01800404 	movi	r6,16
10010f7c:	900b883a 	mov	r5,r18
10010f80:	00157f80 	call	100157f8 <memcpy>
10010f84:	003ff106 	br	10010f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x3c>

10010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_>:
10010f88:	21c00204 	addi	r7,r4,8
10010f8c:	21c00015 	stw	r7,0(r4)
10010f90:	28c00017 	ldw	r3,0(r5)
10010f94:	28800204 	addi	r2,r5,8
10010f98:	10c00926 	beq	r2,r3,10010fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_+0x38>
10010f9c:	20c00015 	stw	r3,0(r4)
10010fa0:	28c00117 	ldw	r3,4(r5)
10010fa4:	20c00115 	stw	r3,4(r4)
10010fa8:	28c00217 	ldw	r3,8(r5)
10010fac:	20c00215 	stw	r3,8(r4)
10010fb0:	28800015 	stw	r2,0(r5)
10010fb4:	28000115 	stw	zero,4(r5)
10010fb8:	28000205 	stb	zero,8(r5)
10010fbc:	f800283a 	ret
10010fc0:	defffd04 	addi	sp,sp,-12
10010fc4:	dc400115 	stw	r17,4(sp)
10010fc8:	dc000015 	stw	r16,0(sp)
10010fcc:	2023883a 	mov	r17,r4
10010fd0:	2821883a 	mov	r16,r5
10010fd4:	01800404 	movi	r6,16
10010fd8:	100b883a 	mov	r5,r2
10010fdc:	3809883a 	mov	r4,r7
10010fe0:	dfc00215 	stw	ra,8(sp)
10010fe4:	00157f80 	call	100157f8 <memcpy>
10010fe8:	80800117 	ldw	r2,4(r16)
10010fec:	88800115 	stw	r2,4(r17)
10010ff0:	80800017 	ldw	r2,0(r16)
10010ff4:	80000115 	stw	zero,4(r16)
10010ff8:	10000005 	stb	zero,0(r2)
10010ffc:	dfc00217 	ldw	ra,8(sp)
10011000:	dc400117 	ldw	r17,4(sp)
10011004:	dc000017 	ldw	r16,0(sp)
10011008:	dec00304 	addi	sp,sp,12
1001100c:	f800283a 	ret

10011010 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
10011010:	20c00017 	ldw	r3,0(r4)
10011014:	20800204 	addi	r2,r4,8
10011018:	18800226 	beq	r3,r2,10011024 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev+0x14>
1001101c:	1809883a 	mov	r4,r3
10011020:	00085041 	jmpi	10008504 <_ZdlPv>
10011024:	f800283a 	ret

10011028 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
10011028:	defffe04 	addi	sp,sp,-8
1001102c:	dc000015 	stw	r16,0(sp)
10011030:	dfc00115 	stw	ra,4(sp)
10011034:	2021883a 	mov	r16,r4
10011038:	0010c2c0 	call	10010c2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
1001103c:	8005883a 	mov	r2,r16
10011040:	dfc00117 	ldw	ra,4(sp)
10011044:	dc000017 	ldw	r16,0(sp)
10011048:	dec00204 	addi	sp,sp,8
1001104c:	f800283a 	ret

10011050 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
10011050:	defffd04 	addi	sp,sp,-12
10011054:	dc400115 	stw	r17,4(sp)
10011058:	dc000015 	stw	r16,0(sp)
1001105c:	dfc00215 	stw	ra,8(sp)
10011060:	28800017 	ldw	r2,0(r5)
10011064:	2821883a 	mov	r16,r5
10011068:	29400204 	addi	r5,r5,8
1001106c:	2023883a 	mov	r17,r4
10011070:	21000017 	ldw	r4,0(r4)
10011074:	28801a26 	beq	r5,r2,100110e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x90>
10011078:	88c00204 	addi	r3,r17,8
1001107c:	88800015 	stw	r2,0(r17)
10011080:	20c01026 	beq	r4,r3,100110c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x74>
10011084:	80c00117 	ldw	r3,4(r16)
10011088:	88800217 	ldw	r2,8(r17)
1001108c:	88c00115 	stw	r3,4(r17)
10011090:	80c00217 	ldw	r3,8(r16)
10011094:	88c00215 	stw	r3,8(r17)
10011098:	20000e26 	beq	r4,zero,100110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x84>
1001109c:	81000015 	stw	r4,0(r16)
100110a0:	80800215 	stw	r2,8(r16)
100110a4:	80000115 	stw	zero,4(r16)
100110a8:	8805883a 	mov	r2,r17
100110ac:	20000005 	stb	zero,0(r4)
100110b0:	dfc00217 	ldw	ra,8(sp)
100110b4:	dc400117 	ldw	r17,4(sp)
100110b8:	dc000017 	ldw	r16,0(sp)
100110bc:	dec00304 	addi	sp,sp,12
100110c0:	f800283a 	ret
100110c4:	80800117 	ldw	r2,4(r16)
100110c8:	88800115 	stw	r2,4(r17)
100110cc:	80800217 	ldw	r2,8(r16)
100110d0:	88800215 	stw	r2,8(r17)
100110d4:	81400015 	stw	r5,0(r16)
100110d8:	2809883a 	mov	r4,r5
100110dc:	003ff106 	br	100110a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
100110e0:	81800117 	ldw	r6,4(r16)
100110e4:	30000526 	beq	r6,zero,100110fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>
100110e8:	30800058 	cmpnei	r2,r6,1
100110ec:	10000826 	beq	r2,zero,10011110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xc0>
100110f0:	00157f80 	call	100157f8 <memcpy>
100110f4:	89000017 	ldw	r4,0(r17)
100110f8:	81800117 	ldw	r6,4(r16)
100110fc:	89800115 	stw	r6,4(r17)
10011100:	2189883a 	add	r4,r4,r6
10011104:	20000005 	stb	zero,0(r4)
10011108:	81000017 	ldw	r4,0(r16)
1001110c:	003fe506 	br	100110a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x54>
10011110:	80800203 	ldbu	r2,8(r16)
10011114:	20800005 	stb	r2,0(r4)
10011118:	89000017 	ldw	r4,0(r17)
1001111c:	81800117 	ldw	r6,4(r16)
10011120:	003ff606 	br	100110fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0xac>

10011124 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
10011124:	20800017 	ldw	r2,0(r4)
10011128:	f800283a 	ret

1001112c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv>:
1001112c:	20800017 	ldw	r2,0(r4)
10011130:	f800283a 	ret

10011134 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
10011134:	20c00017 	ldw	r3,0(r4)
10011138:	20800117 	ldw	r2,4(r4)
1001113c:	1885883a 	add	r2,r3,r2
10011140:	f800283a 	ret

10011144 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv>:
10011144:	20c00017 	ldw	r3,0(r4)
10011148:	20800117 	ldw	r2,4(r4)
1001114c:	1885883a 	add	r2,r3,r2
10011150:	f800283a 	ret

10011154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
10011154:	28c00017 	ldw	r3,0(r5)
10011158:	29400117 	ldw	r5,4(r5)
1001115c:	2005883a 	mov	r2,r4
10011160:	1947883a 	add	r3,r3,r5
10011164:	20c00015 	stw	r3,0(r4)
10011168:	f800283a 	ret

1001116c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv>:
1001116c:	28c00017 	ldw	r3,0(r5)
10011170:	29400117 	ldw	r5,4(r5)
10011174:	2005883a 	mov	r2,r4
10011178:	1947883a 	add	r3,r3,r5
1001117c:	20c00015 	stw	r3,0(r4)
10011180:	f800283a 	ret

10011184 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
10011184:	28c00017 	ldw	r3,0(r5)
10011188:	2005883a 	mov	r2,r4
1001118c:	20c00015 	stw	r3,0(r4)
10011190:	f800283a 	ret

10011194 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv>:
10011194:	28c00017 	ldw	r3,0(r5)
10011198:	2005883a 	mov	r2,r4
1001119c:	20c00015 	stw	r3,0(r4)
100111a0:	f800283a 	ret

100111a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv>:
100111a4:	20800017 	ldw	r2,0(r4)
100111a8:	f800283a 	ret

100111ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv>:
100111ac:	20c00017 	ldw	r3,0(r4)
100111b0:	20800117 	ldw	r2,4(r4)
100111b4:	1885883a 	add	r2,r3,r2
100111b8:	f800283a 	ret

100111bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv>:
100111bc:	28c00017 	ldw	r3,0(r5)
100111c0:	29400117 	ldw	r5,4(r5)
100111c4:	2005883a 	mov	r2,r4
100111c8:	1947883a 	add	r3,r3,r5
100111cc:	20c00015 	stw	r3,0(r4)
100111d0:	f800283a 	ret

100111d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv>:
100111d4:	28c00017 	ldw	r3,0(r5)
100111d8:	2005883a 	mov	r2,r4
100111dc:	20c00015 	stw	r3,0(r4)
100111e0:	f800283a 	ret

100111e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
100111e4:	20800117 	ldw	r2,4(r4)
100111e8:	f800283a 	ret

100111ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
100111ec:	20800117 	ldw	r2,4(r4)
100111f0:	f800283a 	ret

100111f4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
100111f4:	00a00034 	movhi	r2,32768
100111f8:	10bfffc4 	addi	r2,r2,-1
100111fc:	f800283a 	ret

10011200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
10011200:	20c00017 	ldw	r3,0(r4)
10011204:	20800204 	addi	r2,r4,8
10011208:	18800226 	beq	r3,r2,10011214 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x14>
1001120c:	20800217 	ldw	r2,8(r4)
10011210:	f800283a 	ret
10011214:	008003c4 	movi	r2,15
10011218:	f800283a 	ret

1001121c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
1001121c:	defffb04 	addi	sp,sp,-20
10011220:	dc000115 	stw	r16,4(sp)
10011224:	dfc00415 	stw	ra,16(sp)
10011228:	dc800315 	stw	r18,12(sp)
1001122c:	dc400215 	stw	r17,8(sp)
10011230:	20800117 	ldw	r2,4(r4)
10011234:	d9400015 	stw	r5,0(sp)
10011238:	2021883a 	mov	r16,r4
1001123c:	2880022e 	bgeu	r5,r2,10011248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2c>
10011240:	d8800015 	stw	r2,0(sp)
10011244:	100b883a 	mov	r5,r2
10011248:	84800017 	ldw	r18,0(r16)
1001124c:	84400204 	addi	r17,r16,8
10011250:	8c802926 	beq	r17,r18,100112f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xdc>
10011254:	81800217 	ldw	r6,8(r16)
10011258:	31400d26 	beq	r6,r5,10011290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
1001125c:	31401236 	bltu	r6,r5,100112a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011260:	29400430 	cmpltui	r5,r5,16
10011264:	28001026 	beq	r5,zero,100112a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x8c>
10011268:	8c800926 	beq	r17,r18,10011290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
1001126c:	11800044 	addi	r6,r2,1
10011270:	10002726 	beq	r2,zero,10011310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xf4>
10011274:	30000326 	beq	r6,zero,10011284 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>
10011278:	900b883a 	mov	r5,r18
1001127c:	8809883a 	mov	r4,r17
10011280:	00157f80 	call	100157f8 <memcpy>
10011284:	9009883a 	mov	r4,r18
10011288:	00085040 	call	10008504 <_ZdlPv>
1001128c:	84400015 	stw	r17,0(r16)
10011290:	dfc00417 	ldw	ra,16(sp)
10011294:	dc800317 	ldw	r18,12(sp)
10011298:	dc400217 	ldw	r17,8(sp)
1001129c:	dc000117 	ldw	r16,4(sp)
100112a0:	dec00504 	addi	sp,sp,20
100112a4:	f800283a 	ret
100112a8:	8009883a 	mov	r4,r16
100112ac:	d80b883a 	mov	r5,sp
100112b0:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
100112b4:	1025883a 	mov	r18,r2
100112b8:	80800117 	ldw	r2,4(r16)
100112bc:	81000017 	ldw	r4,0(r16)
100112c0:	11800044 	addi	r6,r2,1
100112c4:	10000e26 	beq	r2,zero,10011300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xe4>
100112c8:	3000061e 	bne	r6,zero,100112e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xc8>
100112cc:	89000126 	beq	r17,r4,100112d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb8>
100112d0:	00085040 	call	10008504 <_ZdlPv>
100112d4:	d8800017 	ldw	r2,0(sp)
100112d8:	84800015 	stw	r18,0(r16)
100112dc:	80800215 	stw	r2,8(r16)
100112e0:	003feb06 	br	10011290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x74>
100112e4:	200b883a 	mov	r5,r4
100112e8:	9009883a 	mov	r4,r18
100112ec:	00157f80 	call	100157f8 <memcpy>
100112f0:	81000017 	ldw	r4,0(r16)
100112f4:	003ff506 	br	100112cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
100112f8:	018003c4 	movi	r6,15
100112fc:	003fd606 	br	10011258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x3c>
10011300:	20800003 	ldbu	r2,0(r4)
10011304:	90800005 	stb	r2,0(r18)
10011308:	81000017 	ldw	r4,0(r16)
1001130c:	003fef06 	br	100112cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0xb0>
10011310:	90800003 	ldbu	r2,0(r18)
10011314:	80800205 	stb	r2,8(r16)
10011318:	003fda06 	br	10011284 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x68>

1001131c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv>:
1001131c:	deffe704 	addi	sp,sp,-100
10011320:	00c400b4 	movhi	r3,4098
10011324:	d9800204 	addi	r6,sp,8
10011328:	18d1a704 	addi	r3,r3,18076
1001132c:	01440074 	movhi	r5,4097
10011330:	00840074 	movhi	r2,4097
10011334:	10850104 	addi	r2,r2,5124
10011338:	2962a704 	addi	r5,r5,-30052
1001133c:	d9000015 	stw	r4,0(sp)
10011340:	d8c00915 	stw	r3,36(sp)
10011344:	3009883a 	mov	r4,r6
10011348:	d8c00f04 	addi	r3,sp,60
1001134c:	d8c00a15 	stw	r3,40(sp)
10011350:	d8800b15 	stw	r2,44(sp)
10011354:	dfc01815 	stw	ra,96(sp)
10011358:	df001715 	stw	fp,92(sp)
1001135c:	ddc01615 	stw	r23,88(sp)
10011360:	dd801515 	stw	r22,84(sp)
10011364:	dd401415 	stw	r21,80(sp)
10011368:	dd001315 	stw	r20,76(sp)
1001136c:	dcc01215 	stw	r19,72(sp)
10011370:	dc801115 	stw	r18,68(sp)
10011374:	dc401015 	stw	r17,64(sp)
10011378:	dc000f15 	stw	r16,60(sp)
1001137c:	d9800115 	stw	r6,4(sp)
10011380:	d9400815 	stw	r5,32(sp)
10011384:	dec00c15 	stw	sp,48(sp)
10011388:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1001138c:	d9000017 	ldw	r4,0(sp)
10011390:	20c00017 	ldw	r3,0(r4)
10011394:	20800204 	addi	r2,r4,8
10011398:	18801826 	beq	r3,r2,100113fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xe0>
1001139c:	20c00217 	ldw	r3,8(r4)
100113a0:	d8800017 	ldw	r2,0(sp)
100113a4:	10800117 	ldw	r2,4(r2)
100113a8:	10c00e36 	bltu	r2,r3,100113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0xc8>
100113ac:	d9000117 	ldw	r4,4(sp)
100113b0:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
100113b4:	dfc01817 	ldw	ra,96(sp)
100113b8:	df001717 	ldw	fp,92(sp)
100113bc:	ddc01617 	ldw	r23,88(sp)
100113c0:	dd801517 	ldw	r22,84(sp)
100113c4:	dd401417 	ldw	r21,80(sp)
100113c8:	dd001317 	ldw	r20,76(sp)
100113cc:	dcc01217 	ldw	r19,72(sp)
100113d0:	dc801117 	ldw	r18,68(sp)
100113d4:	dc401017 	ldw	r17,64(sp)
100113d8:	dc000f17 	ldw	r16,60(sp)
100113dc:	dec01904 	addi	sp,sp,100
100113e0:	f800283a 	ret
100113e4:	d9000017 	ldw	r4,0(sp)
100113e8:	00800044 	movi	r2,1
100113ec:	000b883a 	mov	r5,zero
100113f0:	d8800315 	stw	r2,12(sp)
100113f4:	001121c0 	call	1001121c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
100113f8:	003fec06 	br	100113ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>
100113fc:	00c003c4 	movi	r3,15
10011400:	003fe706 	br	100113a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x84>
10011404:	d9000417 	ldw	r4,16(sp)
10011408:	d8800204 	addi	r2,sp,8
1001140c:	d8800115 	stw	r2,4(sp)
10011410:	00080480 	call	10008048 <__cxa_begin_catch>
10011414:	d8000315 	stw	zero,12(sp)
10011418:	00080f40 	call	100080f4 <__cxa_end_catch>
1001141c:	003fe306 	br	100113ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv+0x90>

10011420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv>:
10011420:	20800017 	ldw	r2,0(r4)
10011424:	20000115 	stw	zero,4(r4)
10011428:	10000005 	stb	zero,0(r2)
1001142c:	f800283a 	ret

10011430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
10011430:	20800117 	ldw	r2,4(r4)
10011434:	1005003a 	cmpeq	r2,r2,zero
10011438:	f800283a 	ret

1001143c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
1001143c:	20800017 	ldw	r2,0(r4)
10011440:	1145883a 	add	r2,r2,r5
10011444:	f800283a 	ret

10011448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
10011448:	20800017 	ldw	r2,0(r4)
1001144c:	1145883a 	add	r2,r2,r5
10011450:	f800283a 	ret

10011454 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
10011454:	21800117 	ldw	r6,4(r4)
10011458:	2980032e 	bgeu	r5,r6,10011468 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
1001145c:	20c00017 	ldw	r3,0(r4)
10011460:	1945883a 	add	r2,r3,r5
10011464:	f800283a 	ret
10011468:	010400b4 	movhi	r4,4098
1001146c:	deffff04 	addi	sp,sp,-4
10011470:	21162d04 	addi	r4,r4,22708
10011474:	dfc00015 	stw	ra,0(sp)
10011478:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001147c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj>:
1001147c:	21800117 	ldw	r6,4(r4)
10011480:	2980032e 	bgeu	r5,r6,10011490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj+0x14>
10011484:	20c00017 	ldw	r3,0(r4)
10011488:	1945883a 	add	r2,r3,r5
1001148c:	f800283a 	ret
10011490:	010400b4 	movhi	r4,4098
10011494:	deffff04 	addi	sp,sp,-4
10011498:	21162d04 	addi	r4,r4,22708
1001149c:	dfc00015 	stw	ra,0(sp)
100114a0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100114a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
100114a4:	20800017 	ldw	r2,0(r4)
100114a8:	f800283a 	ret

100114ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv>:
100114ac:	20800017 	ldw	r2,0(r4)
100114b0:	f800283a 	ret

100114b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
100114b4:	20c00117 	ldw	r3,4(r4)
100114b8:	20800017 	ldw	r2,0(r4)
100114bc:	18ffffc4 	addi	r3,r3,-1
100114c0:	10c5883a 	add	r2,r2,r3
100114c4:	f800283a 	ret

100114c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
100114c8:	20c00117 	ldw	r3,4(r4)
100114cc:	20800017 	ldw	r2,0(r4)
100114d0:	18ffffc4 	addi	r3,r3,-1
100114d4:	10c5883a 	add	r2,r2,r3
100114d8:	f800283a 	ret

100114dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
100114dc:	defffa04 	addi	sp,sp,-24
100114e0:	dc800415 	stw	r18,16(sp)
100114e4:	dc000215 	stw	r16,8(sp)
100114e8:	dfc00515 	stw	ra,20(sp)
100114ec:	dc400315 	stw	r17,12(sp)
100114f0:	24400117 	ldw	r17,4(r4)
100114f4:	20c00017 	ldw	r3,0(r4)
100114f8:	2005883a 	mov	r2,r4
100114fc:	21000204 	addi	r4,r4,8
10011500:	2825883a 	mov	r18,r5
10011504:	8c000044 	addi	r16,r17,1
10011508:	19001926 	beq	r3,r4,10011570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x94>
1001150c:	11000217 	ldw	r4,8(r2)
10011510:	24000c36 	bltu	r4,r16,10011544 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x68>
10011514:	1c47883a 	add	r3,r3,r17
10011518:	1c800005 	stb	r18,0(r3)
1001151c:	10c00017 	ldw	r3,0(r2)
10011520:	14000115 	stw	r16,4(r2)
10011524:	1c07883a 	add	r3,r3,r16
10011528:	18000005 	stb	zero,0(r3)
1001152c:	dfc00517 	ldw	ra,20(sp)
10011530:	dc800417 	ldw	r18,16(sp)
10011534:	dc400317 	ldw	r17,12(sp)
10011538:	dc000217 	ldw	r16,8(sp)
1001153c:	dec00604 	addi	sp,sp,24
10011540:	f800283a 	ret
10011544:	00c00044 	movi	r3,1
10011548:	d8c00015 	stw	r3,0(sp)
1001154c:	1009883a 	mov	r4,r2
10011550:	000f883a 	mov	r7,zero
10011554:	000d883a 	mov	r6,zero
10011558:	880b883a 	mov	r5,r17
1001155c:	d8800115 	stw	r2,4(sp)
10011560:	0010d040 	call	10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011564:	d8800117 	ldw	r2,4(sp)
10011568:	10c00017 	ldw	r3,0(r2)
1001156c:	003fe906 	br	10011514 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x38>
10011570:	010003c4 	movi	r4,15
10011574:	003fe606 	br	10011510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc+0x34>

10011578 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
10011578:	defffa04 	addi	sp,sp,-24
1001157c:	dcc00415 	stw	r19,16(sp)
10011580:	dc400215 	stw	r17,8(sp)
10011584:	dc000115 	stw	r16,4(sp)
10011588:	dfc00515 	stw	ra,20(sp)
1001158c:	dc800315 	stw	r18,12(sp)
10011590:	24800117 	ldw	r18,4(r4)
10011594:	20800017 	ldw	r2,0(r4)
10011598:	20c00204 	addi	r3,r4,8
1001159c:	2021883a 	mov	r16,r4
100115a0:	2827883a 	mov	r19,r5
100115a4:	94400044 	addi	r17,r18,1
100115a8:	10c01826 	beq	r2,r3,1001160c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x94>
100115ac:	20c00217 	ldw	r3,8(r4)
100115b0:	1c400d36 	bltu	r3,r17,100115e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x70>
100115b4:	1485883a 	add	r2,r2,r18
100115b8:	14c00005 	stb	r19,0(r2)
100115bc:	80800017 	ldw	r2,0(r16)
100115c0:	84400115 	stw	r17,4(r16)
100115c4:	1445883a 	add	r2,r2,r17
100115c8:	10000005 	stb	zero,0(r2)
100115cc:	dfc00517 	ldw	ra,20(sp)
100115d0:	dcc00417 	ldw	r19,16(sp)
100115d4:	dc800317 	ldw	r18,12(sp)
100115d8:	dc400217 	ldw	r17,8(sp)
100115dc:	dc000117 	ldw	r16,4(sp)
100115e0:	dec00604 	addi	sp,sp,24
100115e4:	f800283a 	ret
100115e8:	00800044 	movi	r2,1
100115ec:	d8800015 	stw	r2,0(sp)
100115f0:	000f883a 	mov	r7,zero
100115f4:	000d883a 	mov	r6,zero
100115f8:	900b883a 	mov	r5,r18
100115fc:	8009883a 	mov	r4,r16
10011600:	0010d040 	call	10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011604:	80800017 	ldw	r2,0(r16)
10011608:	003fea06 	br	100115b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x3c>
1001160c:	00c003c4 	movi	r3,15
10011610:	003fe706 	br	100115b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x38>

10011614 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_>:
10011614:	defffe04 	addi	sp,sp,-8
10011618:	dc000015 	stw	r16,0(sp)
1001161c:	dfc00115 	stw	ra,4(sp)
10011620:	2021883a 	mov	r16,r4
10011624:	0010c2c0 	call	10010c2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
10011628:	8005883a 	mov	r2,r16
1001162c:	dfc00117 	ldw	ra,4(sp)
10011630:	dc000017 	ldw	r16,0(sp)
10011634:	dec00204 	addi	sp,sp,8
10011638:	f800283a 	ret

1001163c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_>:
1001163c:	defffd04 	addi	sp,sp,-12
10011640:	dc400115 	stw	r17,4(sp)
10011644:	dc000015 	stw	r16,0(sp)
10011648:	dfc00215 	stw	ra,8(sp)
1001164c:	2821883a 	mov	r16,r5
10011650:	29400017 	ldw	r5,0(r5)
10011654:	80800204 	addi	r2,r16,8
10011658:	2023883a 	mov	r17,r4
1001165c:	21000017 	ldw	r4,0(r4)
10011660:	28801a26 	beq	r5,r2,100116cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x90>
10011664:	88c00204 	addi	r3,r17,8
10011668:	89400015 	stw	r5,0(r17)
1001166c:	20c01026 	beq	r4,r3,100116b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x74>
10011670:	81400117 	ldw	r5,4(r16)
10011674:	88c00217 	ldw	r3,8(r17)
10011678:	89400115 	stw	r5,4(r17)
1001167c:	81400217 	ldw	r5,8(r16)
10011680:	89400215 	stw	r5,8(r17)
10011684:	20000e26 	beq	r4,zero,100116c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x84>
10011688:	81000015 	stw	r4,0(r16)
1001168c:	80c00215 	stw	r3,8(r16)
10011690:	80000115 	stw	zero,4(r16)
10011694:	8805883a 	mov	r2,r17
10011698:	20000005 	stb	zero,0(r4)
1001169c:	dfc00217 	ldw	ra,8(sp)
100116a0:	dc400117 	ldw	r17,4(sp)
100116a4:	dc000017 	ldw	r16,0(sp)
100116a8:	dec00304 	addi	sp,sp,12
100116ac:	f800283a 	ret
100116b0:	80c00117 	ldw	r3,4(r16)
100116b4:	88c00115 	stw	r3,4(r17)
100116b8:	80c00217 	ldw	r3,8(r16)
100116bc:	88c00215 	stw	r3,8(r17)
100116c0:	80800015 	stw	r2,0(r16)
100116c4:	1009883a 	mov	r4,r2
100116c8:	003ff106 	br	10011690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
100116cc:	81800117 	ldw	r6,4(r16)
100116d0:	30000526 	beq	r6,zero,100116e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>
100116d4:	30800058 	cmpnei	r2,r6,1
100116d8:	10000826 	beq	r2,zero,100116fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xc0>
100116dc:	00157f80 	call	100157f8 <memcpy>
100116e0:	81800117 	ldw	r6,4(r16)
100116e4:	89000017 	ldw	r4,0(r17)
100116e8:	89800115 	stw	r6,4(r17)
100116ec:	2189883a 	add	r4,r4,r6
100116f0:	20000005 	stb	zero,0(r4)
100116f4:	81000017 	ldw	r4,0(r16)
100116f8:	003fe506 	br	10011690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0x54>
100116fc:	80800203 	ldbu	r2,8(r16)
10011700:	20800005 	stb	r2,0(r4)
10011704:	81800117 	ldw	r6,4(r16)
10011708:	89000017 	ldw	r4,0(r17)
1001170c:	003ff606 	br	100116e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_+0xac>

10011710 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj>:
10011710:	defffe04 	addi	sp,sp,-8
10011714:	dfc00115 	stw	ra,4(sp)
10011718:	21c00117 	ldw	r7,4(r4)
1001171c:	2807883a 	mov	r3,r5
10011720:	39401836 	bltu	r7,r5,10011784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x74>
10011724:	2005883a 	mov	r2,r4
10011728:	313fffd8 	cmpnei	r4,r6,-1
1001172c:	20000c26 	beq	r4,zero,10011760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x50>
10011730:	30000826 	beq	r6,zero,10011754 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x44>
10011734:	394fc83a 	sub	r7,r7,r5
10011738:	31c01036 	bltu	r6,r7,1001177c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x6c>
1001173c:	1009883a 	mov	r4,r2
10011740:	380d883a 	mov	r6,r7
10011744:	180b883a 	mov	r5,r3
10011748:	d8800015 	stw	r2,0(sp)
1001174c:	0010e4c0 	call	10010e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
10011750:	d8800017 	ldw	r2,0(sp)
10011754:	dfc00117 	ldw	ra,4(sp)
10011758:	dec00204 	addi	sp,sp,8
1001175c:	f800283a 	ret
10011760:	11000017 	ldw	r4,0(r2)
10011764:	11400115 	stw	r5,4(r2)
10011768:	2147883a 	add	r3,r4,r5
1001176c:	18000005 	stb	zero,0(r3)
10011770:	dfc00117 	ldw	ra,4(sp)
10011774:	dec00204 	addi	sp,sp,8
10011778:	f800283a 	ret
1001177c:	300f883a 	mov	r7,r6
10011780:	003fee06 	br	1001173c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj+0x2c>
10011784:	014400b4 	movhi	r5,4098
10011788:	010400b4 	movhi	r4,4098
1001178c:	180d883a 	mov	r6,r3
10011790:	29564f04 	addi	r5,r5,22844
10011794:	21161f04 	addi	r4,r4,22652
10011798:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001179c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE>:
1001179c:	defffd04 	addi	sp,sp,-12
100117a0:	dc000015 	stw	r16,0(sp)
100117a4:	24000017 	ldw	r16,0(r4)
100117a8:	01800044 	movi	r6,1
100117ac:	dc400115 	stw	r17,4(sp)
100117b0:	2c21c83a 	sub	r16,r5,r16
100117b4:	800b883a 	mov	r5,r16
100117b8:	dfc00215 	stw	ra,8(sp)
100117bc:	2023883a 	mov	r17,r4
100117c0:	0010e4c0 	call	10010e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
100117c4:	88800017 	ldw	r2,0(r17)
100117c8:	1405883a 	add	r2,r2,r16
100117cc:	dfc00217 	ldw	ra,8(sp)
100117d0:	dc400117 	ldw	r17,4(sp)
100117d4:	dc000017 	ldw	r16,0(sp)
100117d8:	dec00304 	addi	sp,sp,12
100117dc:	f800283a 	ret

100117e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_>:
100117e0:	20800017 	ldw	r2,0(r4)
100117e4:	20c00117 	ldw	r3,4(r4)
100117e8:	defffd04 	addi	sp,sp,-12
100117ec:	dc400115 	stw	r17,4(sp)
100117f0:	dc000015 	stw	r16,0(sp)
100117f4:	dfc00215 	stw	ra,8(sp)
100117f8:	10c7883a 	add	r3,r2,r3
100117fc:	2023883a 	mov	r17,r4
10011800:	28a1c83a 	sub	r16,r5,r2
10011804:	30c00a26 	beq	r6,r3,10011830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x50>
10011808:	314dc83a 	sub	r6,r6,r5
1001180c:	800b883a 	mov	r5,r16
10011810:	0010e4c0 	call	10010e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
10011814:	88800017 	ldw	r2,0(r17)
10011818:	1405883a 	add	r2,r2,r16
1001181c:	dfc00217 	ldw	ra,8(sp)
10011820:	dc400117 	ldw	r17,4(sp)
10011824:	dc000017 	ldw	r16,0(sp)
10011828:	dec00304 	addi	sp,sp,12
1001182c:	f800283a 	ret
10011830:	24000115 	stw	r16,4(r4)
10011834:	28000005 	stb	zero,0(r5)
10011838:	003ff606 	br	10011814 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_+0x34>

1001183c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
1001183c:	defff104 	addi	sp,sp,-60
10011840:	00c40074 	movhi	r3,4097
10011844:	008400b4 	movhi	r2,4098
10011848:	dc000d15 	stw	r16,52(sp)
1001184c:	18e2a704 	addi	r3,r3,-30052
10011850:	1091ab04 	addi	r2,r2,18092
10011854:	2021883a 	mov	r16,r4
10011858:	d809883a 	mov	r4,sp
1001185c:	dfc00e15 	stw	ra,56(sp)
10011860:	d8c00615 	stw	r3,24(sp)
10011864:	d8800715 	stw	r2,28(sp)
10011868:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
1001186c:	81400117 	ldw	r5,4(r16)
10011870:	01800044 	movi	r6,1
10011874:	8009883a 	mov	r4,r16
10011878:	297fffc4 	addi	r5,r5,-1
1001187c:	d8000115 	stw	zero,4(sp)
10011880:	0010e4c0 	call	10010e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
10011884:	d809883a 	mov	r4,sp
10011888:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
1001188c:	dfc00e17 	ldw	ra,56(sp)
10011890:	dc000d17 	ldw	r16,52(sp)
10011894:	dec00f04 	addi	sp,sp,60
10011898:	f800283a 	ret

1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>:
1001189c:	defff904 	addi	sp,sp,-28
100118a0:	dd000515 	stw	r20,20(sp)
100118a4:	dfc00615 	stw	ra,24(sp)
100118a8:	dcc00415 	stw	r19,16(sp)
100118ac:	dc800315 	stw	r18,12(sp)
100118b0:	dc400215 	stw	r17,8(sp)
100118b4:	dc000115 	stw	r16,4(sp)
100118b8:	20c00117 	ldw	r3,4(r4)
100118bc:	00a00034 	movhi	r2,32768
100118c0:	10bfffc4 	addi	r2,r2,-1
100118c4:	3085883a 	add	r2,r6,r2
100118c8:	10c5c83a 	sub	r2,r2,r3
100118cc:	dd000717 	ldw	r20,28(sp)
100118d0:	11c03e36 	bltu	r2,r7,100119cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x130>
100118d4:	2021883a 	mov	r16,r4
100118d8:	21000017 	ldw	r4,0(r4)
100118dc:	39a3c83a 	sub	r17,r7,r6
100118e0:	80800204 	addi	r2,r16,8
100118e4:	3825883a 	mov	r18,r7
100118e8:	2827883a 	mov	r19,r5
100118ec:	88e3883a 	add	r17,r17,r3
100118f0:	20803126 	beq	r4,r2,100119b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x11c>
100118f4:	80800217 	ldw	r2,8(r16)
100118f8:	14402236 	bltu	r2,r17,10011984 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xe8>
100118fc:	34c5883a 	add	r2,r6,r19
10011900:	1887c83a 	sub	r3,r3,r2
10011904:	18000926 	beq	r3,zero,1001192c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
10011908:	34800826 	beq	r6,r18,1001192c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x90>
1001190c:	24cb883a 	add	r5,r4,r19
10011910:	18800058 	cmpnei	r2,r3,1
10011914:	2c89883a 	add	r4,r5,r18
10011918:	298b883a 	add	r5,r5,r6
1001191c:	10002126 	beq	r2,zero,100119a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x108>
10011920:	180d883a 	mov	r6,r3
10011924:	00158f80 	call	100158f8 <memmove>
10011928:	81000017 	ldw	r4,0(r16)
1001192c:	90000926 	beq	r18,zero,10011954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
10011930:	90800058 	cmpnei	r2,r18,1
10011934:	24c9883a 	add	r4,r4,r19
10011938:	10002126 	beq	r2,zero,100119c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x124>
1001193c:	a1403fcc 	andi	r5,r20,255
10011940:	2940201c 	xori	r5,r5,128
10011944:	900d883a 	mov	r6,r18
10011948:	297fe004 	addi	r5,r5,-128
1001194c:	0015a240 	call	10015a24 <memset>
10011950:	81000017 	ldw	r4,0(r16)
10011954:	84400115 	stw	r17,4(r16)
10011958:	2449883a 	add	r4,r4,r17
1001195c:	8005883a 	mov	r2,r16
10011960:	20000005 	stb	zero,0(r4)
10011964:	dfc00617 	ldw	ra,24(sp)
10011968:	dd000517 	ldw	r20,20(sp)
1001196c:	dcc00417 	ldw	r19,16(sp)
10011970:	dc800317 	ldw	r18,12(sp)
10011974:	dc400217 	ldw	r17,8(sp)
10011978:	dc000117 	ldw	r16,4(sp)
1001197c:	dec00704 	addi	sp,sp,28
10011980:	f800283a 	ret
10011984:	8009883a 	mov	r4,r16
10011988:	dc800015 	stw	r18,0(sp)
1001198c:	000f883a 	mov	r7,zero
10011990:	980b883a 	mov	r5,r19
10011994:	0010d040 	call	10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011998:	81000017 	ldw	r4,0(r16)
1001199c:	903fed26 	beq	r18,zero,10011954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100119a0:	003fe306 	br	10011930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
100119a4:	28800003 	ldbu	r2,0(r5)
100119a8:	20800005 	stb	r2,0(r4)
100119ac:	81000017 	ldw	r4,0(r16)
100119b0:	903fe826 	beq	r18,zero,10011954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100119b4:	003fde06 	br	10011930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x94>
100119b8:	008003c4 	movi	r2,15
100119bc:	003fce06 	br	100118f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x5c>
100119c0:	25000005 	stb	r20,0(r4)
100119c4:	81000017 	ldw	r4,0(r16)
100119c8:	003fe206 	br	10011954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0xb8>
100119cc:	010400b4 	movhi	r4,4098
100119d0:	21165404 	addi	r4,r4,22864
100119d4:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

100119d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc>:
100119d8:	31803fcc 	andi	r6,r6,255
100119dc:	3180201c 	xori	r6,r6,128
100119e0:	defffe04 	addi	sp,sp,-8
100119e4:	31bfe004 	addi	r6,r6,-128
100119e8:	dfc00115 	stw	ra,4(sp)
100119ec:	d9800015 	stw	r6,0(sp)
100119f0:	280f883a 	mov	r7,r5
100119f4:	21400117 	ldw	r5,4(r4)
100119f8:	000d883a 	mov	r6,zero
100119fc:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011a00:	dfc00117 	ldw	ra,4(sp)
10011a04:	dec00204 	addi	sp,sp,8
10011a08:	f800283a 	ret

10011a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>:
10011a0c:	20800117 	ldw	r2,4(r4)
10011a10:	11400736 	bltu	r2,r5,10011a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x24>
10011a14:	2880052e 	bgeu	r5,r2,10011a2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x20>
10011a18:	21c00017 	ldw	r7,0(r4)
10011a1c:	21400115 	stw	r5,4(r4)
10011a20:	394b883a 	add	r5,r7,r5
10011a24:	28000005 	stb	zero,0(r5)
10011a28:	f800283a 	ret
10011a2c:	f800283a 	ret
10011a30:	31803fcc 	andi	r6,r6,255
10011a34:	3180201c 	xori	r6,r6,128
10011a38:	defffe04 	addi	sp,sp,-8
10011a3c:	31bfe004 	addi	r6,r6,-128
10011a40:	d9800015 	stw	r6,0(sp)
10011a44:	288fc83a 	sub	r7,r5,r2
10011a48:	000d883a 	mov	r6,zero
10011a4c:	100b883a 	mov	r5,r2
10011a50:	dfc00115 	stw	ra,4(sp)
10011a54:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011a58:	dfc00117 	ldw	ra,4(sp)
10011a5c:	dec00204 	addi	sp,sp,8
10011a60:	f800283a 	ret

10011a64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj>:
10011a64:	000d883a 	mov	r6,zero
10011a68:	0011a0c1 	jmpi	10011a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>

10011a6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc>:
10011a6c:	31803fcc 	andi	r6,r6,255
10011a70:	3180201c 	xori	r6,r6,128
10011a74:	defffe04 	addi	sp,sp,-8
10011a78:	31bfe004 	addi	r6,r6,-128
10011a7c:	dfc00115 	stw	ra,4(sp)
10011a80:	d9800015 	stw	r6,0(sp)
10011a84:	21800117 	ldw	r6,4(r4)
10011a88:	280f883a 	mov	r7,r5
10011a8c:	000b883a 	mov	r5,zero
10011a90:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011a94:	dfc00117 	ldw	ra,4(sp)
10011a98:	dec00204 	addi	sp,sp,8
10011a9c:	f800283a 	ret

10011aa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc>:
10011aa0:	29403fcc 	andi	r5,r5,255
10011aa4:	21800117 	ldw	r6,4(r4)
10011aa8:	2940201c 	xori	r5,r5,128
10011aac:	defffd04 	addi	sp,sp,-12
10011ab0:	297fe004 	addi	r5,r5,-128
10011ab4:	d9400015 	stw	r5,0(sp)
10011ab8:	01c00044 	movi	r7,1
10011abc:	000b883a 	mov	r5,zero
10011ac0:	dc000115 	stw	r16,4(sp)
10011ac4:	dfc00215 	stw	ra,8(sp)
10011ac8:	2021883a 	mov	r16,r4
10011acc:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011ad0:	8005883a 	mov	r2,r16
10011ad4:	dfc00217 	ldw	ra,8(sp)
10011ad8:	dc000117 	ldw	r16,4(sp)
10011adc:	dec00304 	addi	sp,sp,12
10011ae0:	f800283a 	ret

10011ae4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc>:
10011ae4:	defffe04 	addi	sp,sp,-8
10011ae8:	dfc00115 	stw	ra,4(sp)
10011aec:	20c00117 	ldw	r3,4(r4)
10011af0:	19400a36 	bltu	r3,r5,10011b1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc+0x38>
10011af4:	39c03fcc 	andi	r7,r7,255
10011af8:	39c0201c 	xori	r7,r7,128
10011afc:	39ffe004 	addi	r7,r7,-128
10011b00:	d9c00015 	stw	r7,0(sp)
10011b04:	300f883a 	mov	r7,r6
10011b08:	000d883a 	mov	r6,zero
10011b0c:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011b10:	dfc00117 	ldw	ra,4(sp)
10011b14:	dec00204 	addi	sp,sp,8
10011b18:	f800283a 	ret
10011b1c:	2805883a 	mov	r2,r5
10011b20:	010400b4 	movhi	r4,4098
10011b24:	014400b4 	movhi	r5,4098
10011b28:	180f883a 	mov	r7,r3
10011b2c:	100d883a 	mov	r6,r2
10011b30:	29565c04 	addi	r5,r5,22896
10011b34:	21161f04 	addi	r4,r4,22652
10011b38:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10011b3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>:
10011b3c:	defffc04 	addi	sp,sp,-16
10011b40:	dc000115 	stw	r16,4(sp)
10011b44:	24000017 	ldw	r16,0(r4)
10011b48:	31803fcc 	andi	r6,r6,255
10011b4c:	3180201c 	xori	r6,r6,128
10011b50:	2c21c83a 	sub	r16,r5,r16
10011b54:	31bfe004 	addi	r6,r6,-128
10011b58:	d9800015 	stw	r6,0(sp)
10011b5c:	01c00044 	movi	r7,1
10011b60:	000d883a 	mov	r6,zero
10011b64:	800b883a 	mov	r5,r16
10011b68:	dc400215 	stw	r17,8(sp)
10011b6c:	dfc00315 	stw	ra,12(sp)
10011b70:	2023883a 	mov	r17,r4
10011b74:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011b78:	88800017 	ldw	r2,0(r17)
10011b7c:	1405883a 	add	r2,r2,r16
10011b80:	dfc00317 	ldw	ra,12(sp)
10011b84:	dc400217 	ldw	r17,8(sp)
10011b88:	dc000117 	ldw	r16,4(sp)
10011b8c:	dec00404 	addi	sp,sp,16
10011b90:	f800283a 	ret

10011b94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc>:
10011b94:	deffff04 	addi	sp,sp,-4
10011b98:	dfc00015 	stw	ra,0(sp)
10011b9c:	20800117 	ldw	r2,4(r4)
10011ba0:	d8c00117 	ldw	r3,4(sp)
10011ba4:	11400c36 	bltu	r2,r5,10011bd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x44>
10011ba8:	1145c83a 	sub	r2,r2,r5
10011bac:	30800836 	bltu	r6,r2,10011bd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x3c>
10011bb0:	18c03fcc 	andi	r3,r3,255
10011bb4:	18c0201c 	xori	r3,r3,128
10011bb8:	18ffe004 	addi	r3,r3,-128
10011bbc:	100d883a 	mov	r6,r2
10011bc0:	d8c00115 	stw	r3,4(sp)
10011bc4:	dfc00017 	ldw	ra,0(sp)
10011bc8:	dec00104 	addi	sp,sp,4
10011bcc:	001189c1 	jmpi	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011bd0:	3005883a 	mov	r2,r6
10011bd4:	003ff606 	br	10011bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc+0x1c>
10011bd8:	280d883a 	mov	r6,r5
10011bdc:	010400b4 	movhi	r4,4098
10011be0:	014400b4 	movhi	r5,4098
10011be4:	100f883a 	mov	r7,r2
10011be8:	29566204 	addi	r5,r5,22920
10011bec:	21161f04 	addi	r4,r4,22652
10011bf0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10011bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc>:
10011bf4:	20800017 	ldw	r2,0(r4)
10011bf8:	d8c00007 	ldb	r3,0(sp)
10011bfc:	314dc83a 	sub	r6,r6,r5
10011c00:	288bc83a 	sub	r5,r5,r2
10011c04:	d8c00015 	stw	r3,0(sp)
10011c08:	001189c1 	jmpi	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>

10011c0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc>:
10011c0c:	defffc04 	addi	sp,sp,-16
10011c10:	dc000115 	stw	r16,4(sp)
10011c14:	24000017 	ldw	r16,0(r4)
10011c18:	39c03fcc 	andi	r7,r7,255
10011c1c:	39c0201c 	xori	r7,r7,128
10011c20:	2c21c83a 	sub	r16,r5,r16
10011c24:	39ffe004 	addi	r7,r7,-128
10011c28:	d9c00015 	stw	r7,0(sp)
10011c2c:	800b883a 	mov	r5,r16
10011c30:	300f883a 	mov	r7,r6
10011c34:	000d883a 	mov	r6,zero
10011c38:	dc400215 	stw	r17,8(sp)
10011c3c:	dfc00315 	stw	ra,12(sp)
10011c40:	2023883a 	mov	r17,r4
10011c44:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10011c48:	88800017 	ldw	r2,0(r17)
10011c4c:	1405883a 	add	r2,r2,r16
10011c50:	dfc00317 	ldw	ra,12(sp)
10011c54:	dc400217 	ldw	r17,8(sp)
10011c58:	dc000117 	ldw	r16,4(sp)
10011c5c:	dec00404 	addi	sp,sp,16
10011c60:	f800283a 	ret

10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
10011c64:	defff504 	addi	sp,sp,-44
10011c68:	dc400315 	stw	r17,12(sp)
10011c6c:	dfc00a15 	stw	ra,40(sp)
10011c70:	ddc00915 	stw	r23,36(sp)
10011c74:	dd800815 	stw	r22,32(sp)
10011c78:	dd400715 	stw	r21,28(sp)
10011c7c:	dd000615 	stw	r20,24(sp)
10011c80:	dcc00515 	stw	r19,20(sp)
10011c84:	dc800415 	stw	r18,16(sp)
10011c88:	dc000215 	stw	r16,8(sp)
10011c8c:	20c00117 	ldw	r3,4(r4)
10011c90:	00a00034 	movhi	r2,32768
10011c94:	10bfffc4 	addi	r2,r2,-1
10011c98:	dc400b17 	ldw	r17,44(sp)
10011c9c:	3085883a 	add	r2,r6,r2
10011ca0:	10c5c83a 	sub	r2,r2,r3
10011ca4:	14408836 	bltu	r2,r17,10011ec8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x264>
10011ca8:	20800017 	ldw	r2,0(r4)
10011cac:	89adc83a 	sub	r22,r17,r6
10011cb0:	3025883a 	mov	r18,r6
10011cb4:	21800204 	addi	r6,r4,8
10011cb8:	2021883a 	mov	r16,r4
10011cbc:	1dab883a 	add	r21,r3,r22
10011cc0:	11803e26 	beq	r2,r6,10011dbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x158>
10011cc4:	21000217 	ldw	r4,8(r4)
10011cc8:	25403436 	bltu	r4,r21,10011d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x138>
10011ccc:	9167883a 	add	r19,r18,r5
10011cd0:	1169883a 	add	r20,r2,r5
10011cd4:	1ce7c83a 	sub	r19,r3,r19
10011cd8:	3880212e 	bgeu	r7,r2,10011d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xfc>
10011cdc:	98000926 	beq	r19,zero,10011d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
10011ce0:	94400826 	beq	r18,r17,10011d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa0>
10011ce4:	98800058 	cmpnei	r2,r19,1
10011ce8:	a449883a 	add	r4,r20,r17
10011cec:	a48b883a 	add	r5,r20,r18
10011cf0:	10004926 	beq	r2,zero,10011e18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1b4>
10011cf4:	980d883a 	mov	r6,r19
10011cf8:	d9c00115 	stw	r7,4(sp)
10011cfc:	00158f80 	call	100158f8 <memmove>
10011d00:	d9c00117 	ldw	r7,4(sp)
10011d04:	88000626 	beq	r17,zero,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d08:	88800058 	cmpnei	r2,r17,1
10011d0c:	10002826 	beq	r2,zero,10011db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
10011d10:	880d883a 	mov	r6,r17
10011d14:	380b883a 	mov	r5,r7
10011d18:	a009883a 	mov	r4,r20
10011d1c:	00157f80 	call	100157f8 <memcpy>
10011d20:	80800017 	ldw	r2,0(r16)
10011d24:	85400115 	stw	r21,4(r16)
10011d28:	1545883a 	add	r2,r2,r21
10011d2c:	10000005 	stb	zero,0(r2)
10011d30:	8005883a 	mov	r2,r16
10011d34:	dfc00a17 	ldw	ra,40(sp)
10011d38:	ddc00917 	ldw	r23,36(sp)
10011d3c:	dd800817 	ldw	r22,32(sp)
10011d40:	dd400717 	ldw	r21,28(sp)
10011d44:	dd000617 	ldw	r20,24(sp)
10011d48:	dcc00517 	ldw	r19,20(sp)
10011d4c:	dc800417 	ldw	r18,16(sp)
10011d50:	dc400317 	ldw	r17,12(sp)
10011d54:	dc000217 	ldw	r16,8(sp)
10011d58:	dec00b04 	addi	sp,sp,44
10011d5c:	f800283a 	ret
10011d60:	10c5883a 	add	r2,r2,r3
10011d64:	11ffdd36 	bltu	r2,r7,10011cdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x78>
10011d68:	88001e26 	beq	r17,zero,10011de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
10011d6c:	9440152e 	bgeu	r18,r17,10011dc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x160>
10011d70:	a4af883a 	add	r23,r20,r18
10011d74:	98001d1e 	bne	r19,zero,10011dec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x188>
10011d78:	3c45883a 	add	r2,r7,r17
10011d7c:	b8802e36 	bltu	r23,r2,10011e38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1d4>
10011d80:	88800058 	cmpnei	r2,r17,1
10011d84:	10000a26 	beq	r2,zero,10011db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x14c>
10011d88:	880d883a 	mov	r6,r17
10011d8c:	380b883a 	mov	r5,r7
10011d90:	a009883a 	mov	r4,r20
10011d94:	00158f80 	call	100158f8 <memmove>
10011d98:	003fe106 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011d9c:	dc400015 	stw	r17,0(sp)
10011da0:	900d883a 	mov	r6,r18
10011da4:	8009883a 	mov	r4,r16
10011da8:	0010d040 	call	10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
10011dac:	003fdc06 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011db0:	38800003 	ldbu	r2,0(r7)
10011db4:	a0800005 	stb	r2,0(r20)
10011db8:	003fd906 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011dbc:	010003c4 	movi	r4,15
10011dc0:	003fc106 	br	10011cc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x64>
10011dc4:	88800058 	cmpnei	r2,r17,1
10011dc8:	10003326 	beq	r2,zero,10011e98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x234>
10011dcc:	380b883a 	mov	r5,r7
10011dd0:	880d883a 	mov	r6,r17
10011dd4:	a009883a 	mov	r4,r20
10011dd8:	d9c00115 	stw	r7,4(sp)
10011ddc:	00158f80 	call	100158f8 <memmove>
10011de0:	d9c00117 	ldw	r7,4(sp)
10011de4:	983fce26 	beq	r19,zero,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011de8:	947fcd26 	beq	r18,r17,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011dec:	98800058 	cmpnei	r2,r19,1
10011df0:	a449883a 	add	r4,r20,r17
10011df4:	a4af883a 	add	r23,r20,r18
10011df8:	10000b26 	beq	r2,zero,10011e28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1c4>
10011dfc:	980d883a 	mov	r6,r19
10011e00:	b80b883a 	mov	r5,r23
10011e04:	d9c00115 	stw	r7,4(sp)
10011e08:	00158f80 	call	100158f8 <memmove>
10011e0c:	d9c00117 	ldw	r7,4(sp)
10011e10:	947fd936 	bltu	r18,r17,10011d78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
10011e14:	003fc206 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e18:	28800003 	ldbu	r2,0(r5)
10011e1c:	20800005 	stb	r2,0(r4)
10011e20:	883fbf26 	beq	r17,zero,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e24:	003fb806 	br	10011d08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa4>
10011e28:	b8800003 	ldbu	r2,0(r23)
10011e2c:	20800005 	stb	r2,0(r4)
10011e30:	947fd136 	bltu	r18,r17,10011d78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x114>
10011e34:	003fba06 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e38:	3dc00736 	bltu	r7,r23,10011e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x1f4>
10011e3c:	88800058 	cmpnei	r2,r17,1
10011e40:	3d8b883a 	add	r5,r7,r22
10011e44:	10001a26 	beq	r2,zero,10011eb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x24c>
10011e48:	880d883a 	mov	r6,r17
10011e4c:	a009883a 	mov	r4,r20
10011e50:	00157f80 	call	100157f8 <memcpy>
10011e54:	003fb206 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e58:	b9efc83a 	sub	r23,r23,r7
10011e5c:	b8800058 	cmpnei	r2,r23,1
10011e60:	10001026 	beq	r2,zero,10011ea4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x240>
10011e64:	b8000426 	beq	r23,zero,10011e78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
10011e68:	b80d883a 	mov	r6,r23
10011e6c:	380b883a 	mov	r5,r7
10011e70:	a009883a 	mov	r4,r20
10011e74:	00158f80 	call	100158f8 <memmove>
10011e78:	8dcdc83a 	sub	r6,r17,r23
10011e7c:	30800058 	cmpnei	r2,r6,1
10011e80:	a5c9883a 	add	r4,r20,r23
10011e84:	a44b883a 	add	r5,r20,r17
10011e88:	10000c26 	beq	r2,zero,10011ebc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x258>
10011e8c:	303fa426 	beq	r6,zero,10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e90:	00157f80 	call	100157f8 <memcpy>
10011e94:	003fa206 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011e98:	38800003 	ldbu	r2,0(r7)
10011e9c:	a0800005 	stb	r2,0(r20)
10011ea0:	003fd006 	br	10011de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x180>
10011ea4:	38800003 	ldbu	r2,0(r7)
10011ea8:	a0800005 	stb	r2,0(r20)
10011eac:	003ff206 	br	10011e78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x214>
10011eb0:	28800003 	ldbu	r2,0(r5)
10011eb4:	a0800005 	stb	r2,0(r20)
10011eb8:	003f9906 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011ebc:	28800003 	ldbu	r2,0(r5)
10011ec0:	20800005 	stb	r2,0(r4)
10011ec4:	003f9606 	br	10011d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbc>
10011ec8:	010400b4 	movhi	r4,4098
10011ecc:	2116b104 	addi	r4,r4,23236
10011ed0:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

10011ed4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj>:
10011ed4:	defffe04 	addi	sp,sp,-8
10011ed8:	dfc00115 	stw	ra,4(sp)
10011edc:	28800117 	ldw	r2,4(r5)
10011ee0:	22000117 	ldw	r8,4(r4)
10011ee4:	29400017 	ldw	r5,0(r5)
10011ee8:	11800d36 	bltu	r2,r6,10011f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x4c>
10011eec:	1185c83a 	sub	r2,r2,r6
10011ef0:	2987883a 	add	r3,r5,r6
10011ef4:	38800836 	bltu	r7,r2,10011f18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x44>
10011ef8:	d8800015 	stw	r2,0(sp)
10011efc:	180f883a 	mov	r7,r3
10011f00:	400d883a 	mov	r6,r8
10011f04:	000b883a 	mov	r5,zero
10011f08:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011f0c:	dfc00117 	ldw	ra,4(sp)
10011f10:	dec00204 	addi	sp,sp,8
10011f14:	f800283a 	ret
10011f18:	3805883a 	mov	r2,r7
10011f1c:	003ff606 	br	10011ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj+0x24>
10011f20:	014400b4 	movhi	r5,4098
10011f24:	010400b4 	movhi	r4,4098
10011f28:	100f883a 	mov	r7,r2
10011f2c:	29566804 	addi	r5,r5,22944
10011f30:	21161f04 	addi	r4,r4,22652
10011f34:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10011f38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj>:
10011f38:	defffe04 	addi	sp,sp,-8
10011f3c:	dfc00115 	stw	ra,4(sp)
10011f40:	d9800015 	stw	r6,0(sp)
10011f44:	21800117 	ldw	r6,4(r4)
10011f48:	280f883a 	mov	r7,r5
10011f4c:	000b883a 	mov	r5,zero
10011f50:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011f54:	dfc00117 	ldw	ra,4(sp)
10011f58:	dec00204 	addi	sp,sp,8
10011f5c:	f800283a 	ret

10011f60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE>:
10011f60:	defffd04 	addi	sp,sp,-12
10011f64:	d9800015 	stw	r6,0(sp)
10011f68:	21800117 	ldw	r6,4(r4)
10011f6c:	280f883a 	mov	r7,r5
10011f70:	000b883a 	mov	r5,zero
10011f74:	dc000115 	stw	r16,4(sp)
10011f78:	dfc00215 	stw	ra,8(sp)
10011f7c:	2021883a 	mov	r16,r4
10011f80:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011f84:	8005883a 	mov	r2,r16
10011f88:	dfc00217 	ldw	ra,8(sp)
10011f8c:	dc000117 	ldw	r16,4(sp)
10011f90:	dec00304 	addi	sp,sp,12
10011f94:	f800283a 	ret

10011f98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE>:
10011f98:	defffe04 	addi	sp,sp,-8
10011f9c:	dfc00115 	stw	ra,4(sp)
10011fa0:	d9800015 	stw	r6,0(sp)
10011fa4:	21800117 	ldw	r6,4(r4)
10011fa8:	280f883a 	mov	r7,r5
10011fac:	000b883a 	mov	r5,zero
10011fb0:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011fb4:	dfc00117 	ldw	ra,4(sp)
10011fb8:	dec00204 	addi	sp,sp,8
10011fbc:	f800283a 	ret

10011fc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
10011fc0:	defffc04 	addi	sp,sp,-16
10011fc4:	dc000115 	stw	r16,4(sp)
10011fc8:	2021883a 	mov	r16,r4
10011fcc:	2809883a 	mov	r4,r5
10011fd0:	dfc00315 	stw	ra,12(sp)
10011fd4:	dc400215 	stw	r17,8(sp)
10011fd8:	2823883a 	mov	r17,r5
10011fdc:	00164b40 	call	100164b4 <strlen>
10011fe0:	81800117 	ldw	r6,4(r16)
10011fe4:	880f883a 	mov	r7,r17
10011fe8:	d8800015 	stw	r2,0(sp)
10011fec:	000b883a 	mov	r5,zero
10011ff0:	8009883a 	mov	r4,r16
10011ff4:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10011ff8:	dfc00317 	ldw	ra,12(sp)
10011ffc:	dc400217 	ldw	r17,8(sp)
10012000:	dc000117 	ldw	r16,4(sp)
10012004:	dec00404 	addi	sp,sp,16
10012008:	f800283a 	ret

1001200c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
1001200c:	deffff04 	addi	sp,sp,-4
10012010:	dfc00015 	stw	ra,0(sp)
10012014:	20800117 	ldw	r2,4(r4)
10012018:	d8c00117 	ldw	r3,4(sp)
1001201c:	11400936 	bltu	r2,r5,10012044 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x38>
10012020:	1145c83a 	sub	r2,r2,r5
10012024:	30800536 	bltu	r6,r2,1001203c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x30>
10012028:	100d883a 	mov	r6,r2
1001202c:	d8c00115 	stw	r3,4(sp)
10012030:	dfc00017 	ldw	ra,0(sp)
10012034:	dec00104 	addi	sp,sp,4
10012038:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001203c:	3005883a 	mov	r2,r6
10012040:	003ff906 	br	10012028 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x1c>
10012044:	280d883a 	mov	r6,r5
10012048:	010400b4 	movhi	r4,4098
1001204c:	014400b4 	movhi	r5,4098
10012050:	100f883a 	mov	r7,r2
10012054:	29566204 	addi	r5,r5,22920
10012058:	21161f04 	addi	r4,r4,22652
1001205c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
10012060:	defffc04 	addi	sp,sp,-16
10012064:	dc000115 	stw	r16,4(sp)
10012068:	2021883a 	mov	r16,r4
1001206c:	2809883a 	mov	r4,r5
10012070:	dfc00315 	stw	ra,12(sp)
10012074:	dc400215 	stw	r17,8(sp)
10012078:	2823883a 	mov	r17,r5
1001207c:	00164b40 	call	100164b4 <strlen>
10012080:	81800117 	ldw	r6,4(r16)
10012084:	880f883a 	mov	r7,r17
10012088:	d8800015 	stw	r2,0(sp)
1001208c:	000b883a 	mov	r5,zero
10012090:	8009883a 	mov	r4,r16
10012094:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012098:	dfc00317 	ldw	ra,12(sp)
1001209c:	dc400217 	ldw	r17,8(sp)
100120a0:	dc000117 	ldw	r16,4(sp)
100120a4:	dec00404 	addi	sp,sp,16
100120a8:	f800283a 	ret

100120ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj>:
100120ac:	defffe04 	addi	sp,sp,-8
100120b0:	dfc00115 	stw	ra,4(sp)
100120b4:	20c00117 	ldw	r3,4(r4)
100120b8:	19400736 	bltu	r3,r5,100120d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj+0x2c>
100120bc:	d9c00015 	stw	r7,0(sp)
100120c0:	300f883a 	mov	r7,r6
100120c4:	000d883a 	mov	r6,zero
100120c8:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100120cc:	dfc00117 	ldw	ra,4(sp)
100120d0:	dec00204 	addi	sp,sp,8
100120d4:	f800283a 	ret
100120d8:	2805883a 	mov	r2,r5
100120dc:	010400b4 	movhi	r4,4098
100120e0:	014400b4 	movhi	r5,4098
100120e4:	180f883a 	mov	r7,r3
100120e8:	100d883a 	mov	r6,r2
100120ec:	29566204 	addi	r5,r5,22920
100120f0:	21161f04 	addi	r4,r4,22652
100120f4:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100120f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_>:
100120f8:	defffe04 	addi	sp,sp,-8
100120fc:	dfc00115 	stw	ra,4(sp)
10012100:	20800117 	ldw	r2,4(r4)
10012104:	2807883a 	mov	r3,r5
10012108:	39400017 	ldw	r5,0(r7)
1001210c:	39c00117 	ldw	r7,4(r7)
10012110:	10c00c36 	bltu	r2,r3,10012144 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x4c>
10012114:	10c5c83a 	sub	r2,r2,r3
10012118:	30800836 	bltu	r6,r2,1001213c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x44>
1001211c:	d9c00015 	stw	r7,0(sp)
10012120:	100d883a 	mov	r6,r2
10012124:	280f883a 	mov	r7,r5
10012128:	180b883a 	mov	r5,r3
1001212c:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012130:	dfc00117 	ldw	ra,4(sp)
10012134:	dec00204 	addi	sp,sp,8
10012138:	f800283a 	ret
1001213c:	3005883a 	mov	r2,r6
10012140:	003ff606 	br	1001211c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_+0x24>
10012144:	014400b4 	movhi	r5,4098
10012148:	010400b4 	movhi	r4,4098
1001214c:	100f883a 	mov	r7,r2
10012150:	180d883a 	mov	r6,r3
10012154:	29566204 	addi	r5,r5,22920
10012158:	21161f04 	addi	r4,r4,22652
1001215c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
10012160:	defffe04 	addi	sp,sp,-8
10012164:	dfc00115 	stw	ra,4(sp)
10012168:	20c00117 	ldw	r3,4(r4)
1001216c:	31c00017 	ldw	r7,0(r6)
10012170:	31800117 	ldw	r6,4(r6)
10012174:	19400636 	bltu	r3,r5,10012190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_+0x30>
10012178:	d9800015 	stw	r6,0(sp)
1001217c:	000d883a 	mov	r6,zero
10012180:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012184:	dfc00117 	ldw	ra,4(sp)
10012188:	dec00204 	addi	sp,sp,8
1001218c:	f800283a 	ret
10012190:	2805883a 	mov	r2,r5
10012194:	010400b4 	movhi	r4,4098
10012198:	014400b4 	movhi	r5,4098
1001219c:	180f883a 	mov	r7,r3
100121a0:	100d883a 	mov	r6,r2
100121a4:	29566204 	addi	r5,r5,22920
100121a8:	21161f04 	addi	r4,r4,22652
100121ac:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100121b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc>:
100121b0:	defffa04 	addi	sp,sp,-24
100121b4:	dc400215 	stw	r17,8(sp)
100121b8:	2023883a 	mov	r17,r4
100121bc:	3809883a 	mov	r4,r7
100121c0:	dcc00415 	stw	r19,16(sp)
100121c4:	dc800315 	stw	r18,12(sp)
100121c8:	dc000115 	stw	r16,4(sp)
100121cc:	3025883a 	mov	r18,r6
100121d0:	dfc00515 	stw	ra,20(sp)
100121d4:	3827883a 	mov	r19,r7
100121d8:	2821883a 	mov	r16,r5
100121dc:	00164b40 	call	100164b4 <strlen>
100121e0:	89800117 	ldw	r6,4(r17)
100121e4:	34001036 	bltu	r6,r16,10012228 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x78>
100121e8:	340dc83a 	sub	r6,r6,r16
100121ec:	91800c36 	bltu	r18,r6,10012220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x70>
100121f0:	d8800015 	stw	r2,0(sp)
100121f4:	980f883a 	mov	r7,r19
100121f8:	800b883a 	mov	r5,r16
100121fc:	8809883a 	mov	r4,r17
10012200:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012204:	dfc00517 	ldw	ra,20(sp)
10012208:	dcc00417 	ldw	r19,16(sp)
1001220c:	dc800317 	ldw	r18,12(sp)
10012210:	dc400217 	ldw	r17,8(sp)
10012214:	dc000117 	ldw	r16,4(sp)
10012218:	dec00604 	addi	sp,sp,24
1001221c:	f800283a 	ret
10012220:	900d883a 	mov	r6,r18
10012224:	003ff206 	br	100121f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc+0x40>
10012228:	014400b4 	movhi	r5,4098
1001222c:	010400b4 	movhi	r4,4098
10012230:	300f883a 	mov	r7,r6
10012234:	29566204 	addi	r5,r5,22920
10012238:	800d883a 	mov	r6,r16
1001223c:	21161f04 	addi	r4,r4,22652
10012240:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012244 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
10012244:	defffb04 	addi	sp,sp,-20
10012248:	dc400215 	stw	r17,8(sp)
1001224c:	2023883a 	mov	r17,r4
10012250:	3009883a 	mov	r4,r6
10012254:	dc800315 	stw	r18,12(sp)
10012258:	dc000115 	stw	r16,4(sp)
1001225c:	dfc00415 	stw	ra,16(sp)
10012260:	3025883a 	mov	r18,r6
10012264:	2821883a 	mov	r16,r5
10012268:	00164b40 	call	100164b4 <strlen>
1001226c:	89c00117 	ldw	r7,4(r17)
10012270:	3c000c36 	bltu	r7,r16,100122a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc+0x60>
10012274:	d8800015 	stw	r2,0(sp)
10012278:	900f883a 	mov	r7,r18
1001227c:	000d883a 	mov	r6,zero
10012280:	800b883a 	mov	r5,r16
10012284:	8809883a 	mov	r4,r17
10012288:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001228c:	dfc00417 	ldw	ra,16(sp)
10012290:	dc800317 	ldw	r18,12(sp)
10012294:	dc400217 	ldw	r17,8(sp)
10012298:	dc000117 	ldw	r16,4(sp)
1001229c:	dec00504 	addi	sp,sp,20
100122a0:	f800283a 	ret
100122a4:	014400b4 	movhi	r5,4098
100122a8:	010400b4 	movhi	r4,4098
100122ac:	800d883a 	mov	r6,r16
100122b0:	29566204 	addi	r5,r5,22920
100122b4:	21161f04 	addi	r4,r4,22652
100122b8:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100122bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j>:
100122bc:	deffff04 	addi	sp,sp,-4
100122c0:	dfc00015 	stw	ra,0(sp)
100122c4:	20c00017 	ldw	r3,0(r4)
100122c8:	20800117 	ldw	r2,4(r4)
100122cc:	da000117 	ldw	r8,4(sp)
100122d0:	28c7c83a 	sub	r3,r5,r3
100122d4:	314bc83a 	sub	r5,r6,r5
100122d8:	10c00936 	bltu	r2,r3,10012300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x44>
100122dc:	10cdc83a 	sub	r6,r2,r3
100122e0:	29800536 	bltu	r5,r6,100122f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x3c>
100122e4:	180b883a 	mov	r5,r3
100122e8:	da000115 	stw	r8,4(sp)
100122ec:	dfc00017 	ldw	ra,0(sp)
100122f0:	dec00104 	addi	sp,sp,4
100122f4:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100122f8:	280d883a 	mov	r6,r5
100122fc:	003ff906 	br	100122e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j+0x28>
10012300:	014400b4 	movhi	r5,4098
10012304:	010400b4 	movhi	r4,4098
10012308:	100f883a 	mov	r7,r2
1001230c:	180d883a 	mov	r6,r3
10012310:	29566204 	addi	r5,r5,22920
10012314:	21161f04 	addi	r4,r4,22652
10012318:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001231c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_>:
1001231c:	deffff04 	addi	sp,sp,-4
10012320:	dfc00015 	stw	ra,0(sp)
10012324:	20c00017 	ldw	r3,0(r4)
10012328:	20800117 	ldw	r2,4(r4)
1001232c:	28c7c83a 	sub	r3,r5,r3
10012330:	314bc83a 	sub	r5,r6,r5
10012334:	d9800117 	ldw	r6,4(sp)
10012338:	31d1c83a 	sub	r8,r6,r7
1001233c:	10c00936 	bltu	r2,r3,10012364 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x48>
10012340:	10cdc83a 	sub	r6,r2,r3
10012344:	29800536 	bltu	r5,r6,1001235c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x40>
10012348:	180b883a 	mov	r5,r3
1001234c:	da000115 	stw	r8,4(sp)
10012350:	dfc00017 	ldw	ra,0(sp)
10012354:	dec00104 	addi	sp,sp,4
10012358:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
1001235c:	280d883a 	mov	r6,r5
10012360:	003ff906 	br	10012348 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_+0x2c>
10012364:	014400b4 	movhi	r5,4098
10012368:	010400b4 	movhi	r4,4098
1001236c:	100f883a 	mov	r7,r2
10012370:	180d883a 	mov	r6,r3
10012374:	29566204 	addi	r5,r5,22920
10012378:	21161f04 	addi	r4,r4,22652
1001237c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_>:
10012380:	deffff04 	addi	sp,sp,-4
10012384:	dfc00015 	stw	ra,0(sp)
10012388:	20c00017 	ldw	r3,0(r4)
1001238c:	20800117 	ldw	r2,4(r4)
10012390:	28c7c83a 	sub	r3,r5,r3
10012394:	314bc83a 	sub	r5,r6,r5
10012398:	d9800117 	ldw	r6,4(sp)
1001239c:	31d1c83a 	sub	r8,r6,r7
100123a0:	10c00936 	bltu	r2,r3,100123c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x48>
100123a4:	10cdc83a 	sub	r6,r2,r3
100123a8:	29800536 	bltu	r5,r6,100123c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x40>
100123ac:	180b883a 	mov	r5,r3
100123b0:	da000115 	stw	r8,4(sp)
100123b4:	dfc00017 	ldw	ra,0(sp)
100123b8:	dec00104 	addi	sp,sp,4
100123bc:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100123c0:	280d883a 	mov	r6,r5
100123c4:	003ff906 	br	100123ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_+0x2c>
100123c8:	014400b4 	movhi	r5,4098
100123cc:	010400b4 	movhi	r4,4098
100123d0:	100f883a 	mov	r7,r2
100123d4:	180d883a 	mov	r6,r3
100123d8:	29566204 	addi	r5,r5,22920
100123dc:	21161f04 	addi	r4,r4,22652
100123e0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100123e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE>:
100123e4:	defffe04 	addi	sp,sp,-8
100123e8:	dfc00015 	stw	ra,0(sp)
100123ec:	20c00017 	ldw	r3,0(r4)
100123f0:	20800117 	ldw	r2,4(r4)
100123f4:	d9c00115 	stw	r7,4(sp)
100123f8:	28c7c83a 	sub	r3,r5,r3
100123fc:	da000217 	ldw	r8,8(sp)
10012400:	314bc83a 	sub	r5,r6,r5
10012404:	10c00936 	bltu	r2,r3,1001242c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x48>
10012408:	10cdc83a 	sub	r6,r2,r3
1001240c:	29800536 	bltu	r5,r6,10012424 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x40>
10012410:	180b883a 	mov	r5,r3
10012414:	da000215 	stw	r8,8(sp)
10012418:	dfc00017 	ldw	ra,0(sp)
1001241c:	dec00204 	addi	sp,sp,8
10012420:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012424:	280d883a 	mov	r6,r5
10012428:	003ff906 	br	10012410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE+0x2c>
1001242c:	014400b4 	movhi	r5,4098
10012430:	010400b4 	movhi	r4,4098
10012434:	100f883a 	mov	r7,r2
10012438:	180d883a 	mov	r6,r3
1001243c:	29566204 	addi	r5,r5,22920
10012440:	21161f04 	addi	r4,r4,22652
10012444:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_>:
10012448:	defffe04 	addi	sp,sp,-8
1001244c:	dfc00115 	stw	ra,4(sp)
10012450:	20c00017 	ldw	r3,0(r4)
10012454:	20800117 	ldw	r2,4(r4)
10012458:	3a000017 	ldw	r8,0(r7)
1001245c:	28c7c83a 	sub	r3,r5,r3
10012460:	39c00117 	ldw	r7,4(r7)
10012464:	314bc83a 	sub	r5,r6,r5
10012468:	10c00b36 	bltu	r2,r3,10012498 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x50>
1001246c:	10cdc83a 	sub	r6,r2,r3
10012470:	29800736 	bltu	r5,r6,10012490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x48>
10012474:	d9c00015 	stw	r7,0(sp)
10012478:	180b883a 	mov	r5,r3
1001247c:	400f883a 	mov	r7,r8
10012480:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012484:	dfc00117 	ldw	ra,4(sp)
10012488:	dec00204 	addi	sp,sp,8
1001248c:	f800283a 	ret
10012490:	280d883a 	mov	r6,r5
10012494:	003ff706 	br	10012474 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_+0x2c>
10012498:	014400b4 	movhi	r5,4098
1001249c:	010400b4 	movhi	r4,4098
100124a0:	100f883a 	mov	r7,r2
100124a4:	180d883a 	mov	r6,r3
100124a8:	29566204 	addi	r5,r5,22920
100124ac:	21161f04 	addi	r4,r4,22652
100124b0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100124b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_>:
100124b4:	deffff04 	addi	sp,sp,-4
100124b8:	dfc00015 	stw	ra,0(sp)
100124bc:	20c00017 	ldw	r3,0(r4)
100124c0:	20800117 	ldw	r2,4(r4)
100124c4:	28c7c83a 	sub	r3,r5,r3
100124c8:	314bc83a 	sub	r5,r6,r5
100124cc:	d9800117 	ldw	r6,4(sp)
100124d0:	31d1c83a 	sub	r8,r6,r7
100124d4:	10c00936 	bltu	r2,r3,100124fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x48>
100124d8:	10cdc83a 	sub	r6,r2,r3
100124dc:	29800536 	bltu	r5,r6,100124f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x40>
100124e0:	180b883a 	mov	r5,r3
100124e4:	da000115 	stw	r8,4(sp)
100124e8:	dfc00017 	ldw	ra,0(sp)
100124ec:	dec00104 	addi	sp,sp,4
100124f0:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100124f4:	280d883a 	mov	r6,r5
100124f8:	003ff906 	br	100124e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_+0x2c>
100124fc:	014400b4 	movhi	r5,4098
10012500:	010400b4 	movhi	r4,4098
10012504:	100f883a 	mov	r7,r2
10012508:	180d883a 	mov	r6,r3
1001250c:	29566204 	addi	r5,r5,22920
10012510:	21161f04 	addi	r4,r4,22652
10012514:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012518 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_>:
10012518:	deffff04 	addi	sp,sp,-4
1001251c:	dfc00015 	stw	ra,0(sp)
10012520:	20c00017 	ldw	r3,0(r4)
10012524:	20800117 	ldw	r2,4(r4)
10012528:	28c7c83a 	sub	r3,r5,r3
1001252c:	314bc83a 	sub	r5,r6,r5
10012530:	d9800117 	ldw	r6,4(sp)
10012534:	31d1c83a 	sub	r8,r6,r7
10012538:	10c00936 	bltu	r2,r3,10012560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x48>
1001253c:	10cdc83a 	sub	r6,r2,r3
10012540:	29800536 	bltu	r5,r6,10012558 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x40>
10012544:	180b883a 	mov	r5,r3
10012548:	da000115 	stw	r8,4(sp)
1001254c:	dfc00017 	ldw	ra,0(sp)
10012550:	dec00104 	addi	sp,sp,4
10012554:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012558:	280d883a 	mov	r6,r5
1001255c:	003ff906 	br	10012544 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_+0x2c>
10012560:	014400b4 	movhi	r5,4098
10012564:	010400b4 	movhi	r4,4098
10012568:	100f883a 	mov	r7,r2
1001256c:	180d883a 	mov	r6,r3
10012570:	29566204 	addi	r5,r5,22920
10012574:	21161f04 	addi	r4,r4,22652
10012578:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001257c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_>:
1001257c:	defffa04 	addi	sp,sp,-24
10012580:	dc800315 	stw	r18,12(sp)
10012584:	2025883a 	mov	r18,r4
10012588:	3809883a 	mov	r4,r7
1001258c:	dcc00415 	stw	r19,16(sp)
10012590:	dc400215 	stw	r17,8(sp)
10012594:	dc000115 	stw	r16,4(sp)
10012598:	3023883a 	mov	r17,r6
1001259c:	2821883a 	mov	r16,r5
100125a0:	dfc00515 	stw	ra,20(sp)
100125a4:	3827883a 	mov	r19,r7
100125a8:	00164b40 	call	100164b4 <strlen>
100125ac:	90c00017 	ldw	r3,0(r18)
100125b0:	91800117 	ldw	r6,4(r18)
100125b4:	8c09c83a 	sub	r4,r17,r16
100125b8:	80c7c83a 	sub	r3,r16,r3
100125bc:	30c01036 	bltu	r6,r3,10012600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x84>
100125c0:	30cdc83a 	sub	r6,r6,r3
100125c4:	21800c36 	bltu	r4,r6,100125f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x7c>
100125c8:	d8800015 	stw	r2,0(sp)
100125cc:	980f883a 	mov	r7,r19
100125d0:	180b883a 	mov	r5,r3
100125d4:	9009883a 	mov	r4,r18
100125d8:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100125dc:	dfc00517 	ldw	ra,20(sp)
100125e0:	dcc00417 	ldw	r19,16(sp)
100125e4:	dc800317 	ldw	r18,12(sp)
100125e8:	dc400217 	ldw	r17,8(sp)
100125ec:	dc000117 	ldw	r16,4(sp)
100125f0:	dec00604 	addi	sp,sp,24
100125f4:	f800283a 	ret
100125f8:	200d883a 	mov	r6,r4
100125fc:	003ff206 	br	100125c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_+0x4c>
10012600:	014400b4 	movhi	r5,4098
10012604:	010400b4 	movhi	r4,4098
10012608:	300f883a 	mov	r7,r6
1001260c:	29566204 	addi	r5,r5,22920
10012610:	180d883a 	mov	r6,r3
10012614:	21161f04 	addi	r4,r4,22652
10012618:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

1001261c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE>:
1001261c:	defffe04 	addi	sp,sp,-8
10012620:	dfc00115 	stw	ra,4(sp)
10012624:	20800017 	ldw	r2,0(r4)
10012628:	20c00117 	ldw	r3,4(r4)
1001262c:	2885c83a 	sub	r2,r5,r2
10012630:	18800836 	bltu	r3,r2,10012654 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE+0x38>
10012634:	d9c00015 	stw	r7,0(sp)
10012638:	100b883a 	mov	r5,r2
1001263c:	300f883a 	mov	r7,r6
10012640:	000d883a 	mov	r6,zero
10012644:	0011c640 	call	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012648:	dfc00117 	ldw	ra,4(sp)
1001264c:	dec00204 	addi	sp,sp,8
10012650:	f800283a 	ret
10012654:	014400b4 	movhi	r5,4098
10012658:	010400b4 	movhi	r4,4098
1001265c:	180f883a 	mov	r7,r3
10012660:	100d883a 	mov	r6,r2
10012664:	29566204 	addi	r5,r5,22920
10012668:	21161f04 	addi	r4,r4,22652
1001266c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj>:
10012670:	deffff04 	addi	sp,sp,-4
10012674:	dfc00015 	stw	ra,0(sp)
10012678:	30800117 	ldw	r2,4(r6)
1001267c:	3807883a 	mov	r3,r7
10012680:	2811883a 	mov	r8,r5
10012684:	31c00017 	ldw	r7,0(r6)
10012688:	d9400117 	ldw	r5,4(sp)
1001268c:	10c00d36 	bltu	r2,r3,100126c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x54>
10012690:	10c5c83a 	sub	r2,r2,r3
10012694:	38cf883a 	add	r7,r7,r3
10012698:	28800836 	bltu	r5,r2,100126bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x4c>
1001269c:	20c00117 	ldw	r3,4(r4)
100126a0:	1a000f36 	bltu	r3,r8,100126e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x70>
100126a4:	000d883a 	mov	r6,zero
100126a8:	400b883a 	mov	r5,r8
100126ac:	d8800115 	stw	r2,4(sp)
100126b0:	dfc00017 	ldw	ra,0(sp)
100126b4:	dec00104 	addi	sp,sp,4
100126b8:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
100126bc:	2805883a 	mov	r2,r5
100126c0:	003ff606 	br	1001269c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj+0x2c>
100126c4:	014400b4 	movhi	r5,4098
100126c8:	010400b4 	movhi	r4,4098
100126cc:	100f883a 	mov	r7,r2
100126d0:	180d883a 	mov	r6,r3
100126d4:	29565c04 	addi	r5,r5,22896
100126d8:	21161f04 	addi	r4,r4,22652
100126dc:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
100126e0:	014400b4 	movhi	r5,4098
100126e4:	010400b4 	movhi	r4,4098
100126e8:	180f883a 	mov	r7,r3
100126ec:	400d883a 	mov	r6,r8
100126f0:	29566204 	addi	r5,r5,22920
100126f4:	21161f04 	addi	r4,r4,22652
100126f8:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100126fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj>:
100126fc:	deffff04 	addi	sp,sp,-4
10012700:	dfc00015 	stw	ra,0(sp)
10012704:	38800117 	ldw	r2,4(r7)
10012708:	d8c00117 	ldw	r3,4(sp)
1001270c:	2811883a 	mov	r8,r5
10012710:	39c00017 	ldw	r7,0(r7)
10012714:	d9400217 	ldw	r5,8(sp)
10012718:	10c01136 	bltu	r2,r3,10012760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x64>
1001271c:	10c5c83a 	sub	r2,r2,r3
10012720:	38cf883a 	add	r7,r7,r3
10012724:	28800a36 	bltu	r5,r2,10012750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x54>
10012728:	20c00117 	ldw	r3,4(r4)
1001272c:	1a001336 	bltu	r3,r8,1001277c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x80>
10012730:	1a07c83a 	sub	r3,r3,r8
10012734:	30c00836 	bltu	r6,r3,10012758 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x5c>
10012738:	180d883a 	mov	r6,r3
1001273c:	400b883a 	mov	r5,r8
10012740:	d8800115 	stw	r2,4(sp)
10012744:	dfc00017 	ldw	ra,0(sp)
10012748:	dec00104 	addi	sp,sp,4
1001274c:	0011c641 	jmpi	10011c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
10012750:	2805883a 	mov	r2,r5
10012754:	003ff406 	br	10012728 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x2c>
10012758:	3007883a 	mov	r3,r6
1001275c:	003ff606 	br	10012738 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj+0x3c>
10012760:	014400b4 	movhi	r5,4098
10012764:	010400b4 	movhi	r4,4098
10012768:	100f883a 	mov	r7,r2
1001276c:	180d883a 	mov	r6,r3
10012770:	29566204 	addi	r5,r5,22920
10012774:	21161f04 	addi	r4,r4,22652
10012778:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
1001277c:	014400b4 	movhi	r5,4098
10012780:	010400b4 	movhi	r4,4098
10012784:	180f883a 	mov	r7,r3
10012788:	400d883a 	mov	r6,r8
1001278c:	29566204 	addi	r5,r5,22920
10012790:	21161f04 	addi	r4,r4,22652
10012794:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
10012798:	defffc04 	addi	sp,sp,-16
1001279c:	dc400215 	stw	r17,8(sp)
100127a0:	dc000115 	stw	r16,4(sp)
100127a4:	dfc00315 	stw	ra,12(sp)
100127a8:	2021883a 	mov	r16,r4
100127ac:	20800117 	ldw	r2,4(r4)
100127b0:	21000017 	ldw	r4,0(r4)
100127b4:	80c00204 	addi	r3,r16,8
100127b8:	11a3883a 	add	r17,r2,r6
100127bc:	20c01926 	beq	r4,r3,10012824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x8c>
100127c0:	80c00217 	ldw	r3,8(r16)
100127c4:	1c400f36 	bltu	r3,r17,10012804 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x6c>
100127c8:	30000526 	beq	r6,zero,100127e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
100127cc:	30c00058 	cmpnei	r3,r6,1
100127d0:	2089883a 	add	r4,r4,r2
100127d4:	18001526 	beq	r3,zero,1001282c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x94>
100127d8:	00157f80 	call	100157f8 <memcpy>
100127dc:	81000017 	ldw	r4,0(r16)
100127e0:	84400115 	stw	r17,4(r16)
100127e4:	2449883a 	add	r4,r4,r17
100127e8:	8005883a 	mov	r2,r16
100127ec:	20000005 	stb	zero,0(r4)
100127f0:	dfc00317 	ldw	ra,12(sp)
100127f4:	dc400217 	ldw	r17,8(sp)
100127f8:	dc000117 	ldw	r16,4(sp)
100127fc:	dec00404 	addi	sp,sp,16
10012800:	f800283a 	ret
10012804:	d9800015 	stw	r6,0(sp)
10012808:	280f883a 	mov	r7,r5
1001280c:	8009883a 	mov	r4,r16
10012810:	000d883a 	mov	r6,zero
10012814:	100b883a 	mov	r5,r2
10012818:	0010d040 	call	10010d04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
1001281c:	81000017 	ldw	r4,0(r16)
10012820:	003fef06 	br	100127e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>
10012824:	00c003c4 	movi	r3,15
10012828:	003fe606 	br	100127c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x2c>
1001282c:	28800003 	ldbu	r2,0(r5)
10012830:	20800005 	stb	r2,0(r4)
10012834:	81000017 	ldw	r4,0(r16)
10012838:	003fe906 	br	100127e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x48>

1001283c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
1001283c:	29800117 	ldw	r6,4(r5)
10012840:	29400017 	ldw	r5,0(r5)
10012844:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

10012848 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
10012848:	29800117 	ldw	r6,4(r5)
1001284c:	29400017 	ldw	r5,0(r5)
10012850:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>

10012854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj>:
10012854:	28800117 	ldw	r2,4(r5)
10012858:	29400017 	ldw	r5,0(r5)
1001285c:	11800836 	bltu	r2,r6,10012880 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x2c>
10012860:	3007883a 	mov	r3,r6
10012864:	118dc83a 	sub	r6,r2,r6
10012868:	39800236 	bltu	r7,r6,10012874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj+0x20>
1001286c:	28cb883a 	add	r5,r5,r3
10012870:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012874:	380d883a 	mov	r6,r7
10012878:	28cb883a 	add	r5,r5,r3
1001287c:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012880:	014400b4 	movhi	r5,4098
10012884:	010400b4 	movhi	r4,4098
10012888:	deffff04 	addi	sp,sp,-4
1001288c:	100f883a 	mov	r7,r2
10012890:	29566e04 	addi	r5,r5,22968
10012894:	21161f04 	addi	r4,r4,22652
10012898:	dfc00015 	stw	ra,0(sp)
1001289c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100128a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
100128a0:	20c00117 	ldw	r3,4(r4)
100128a4:	00a00034 	movhi	r2,32768
100128a8:	10bfffc4 	addi	r2,r2,-1
100128ac:	10c5c83a 	sub	r2,r2,r3
100128b0:	11800136 	bltu	r2,r6,100128b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x18>
100128b4:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100128b8:	010400b4 	movhi	r4,4098
100128bc:	deffff04 	addi	sp,sp,-4
100128c0:	21166e04 	addi	r4,r4,22968
100128c4:	dfc00015 	stw	ra,0(sp)
100128c8:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

100128cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
100128cc:	defffd04 	addi	sp,sp,-12
100128d0:	dc000015 	stw	r16,0(sp)
100128d4:	2021883a 	mov	r16,r4
100128d8:	2809883a 	mov	r4,r5
100128dc:	dc400115 	stw	r17,4(sp)
100128e0:	dfc00215 	stw	ra,8(sp)
100128e4:	2823883a 	mov	r17,r5
100128e8:	00164b40 	call	100164b4 <strlen>
100128ec:	81000117 	ldw	r4,4(r16)
100128f0:	00e00034 	movhi	r3,32768
100128f4:	18ffffc4 	addi	r3,r3,-1
100128f8:	1907c83a 	sub	r3,r3,r4
100128fc:	18800836 	bltu	r3,r2,10012920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x54>
10012900:	100d883a 	mov	r6,r2
10012904:	880b883a 	mov	r5,r17
10012908:	8009883a 	mov	r4,r16
1001290c:	dfc00217 	ldw	ra,8(sp)
10012910:	dc400117 	ldw	r17,4(sp)
10012914:	dc000017 	ldw	r16,0(sp)
10012918:	dec00304 	addi	sp,sp,12
1001291c:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012920:	010400b4 	movhi	r4,4098
10012924:	21166e04 	addi	r4,r4,22968
10012928:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1001292c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
1001292c:	defffd04 	addi	sp,sp,-12
10012930:	dc000015 	stw	r16,0(sp)
10012934:	2021883a 	mov	r16,r4
10012938:	2809883a 	mov	r4,r5
1001293c:	dc400115 	stw	r17,4(sp)
10012940:	dfc00215 	stw	ra,8(sp)
10012944:	2823883a 	mov	r17,r5
10012948:	00164b40 	call	100164b4 <strlen>
1001294c:	81000117 	ldw	r4,4(r16)
10012950:	00e00034 	movhi	r3,32768
10012954:	18ffffc4 	addi	r3,r3,-1
10012958:	1907c83a 	sub	r3,r3,r4
1001295c:	18800836 	bltu	r3,r2,10012980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc+0x54>
10012960:	100d883a 	mov	r6,r2
10012964:	880b883a 	mov	r5,r17
10012968:	8009883a 	mov	r4,r16
1001296c:	dfc00217 	ldw	ra,8(sp)
10012970:	dc400117 	ldw	r17,4(sp)
10012974:	dc000017 	ldw	r16,0(sp)
10012978:	dec00304 	addi	sp,sp,12
1001297c:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10012980:	010400b4 	movhi	r4,4098
10012984:	21166e04 	addi	r4,r4,22968
10012988:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

1001298c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE>:
1001298c:	20c00117 	ldw	r3,4(r4)
10012990:	00a00034 	movhi	r2,32768
10012994:	10bfffc4 	addi	r2,r2,-1
10012998:	10c5c83a 	sub	r2,r2,r3
1001299c:	11800136 	bltu	r2,r6,100129a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE+0x18>
100129a0:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100129a4:	010400b4 	movhi	r4,4098
100129a8:	deffff04 	addi	sp,sp,-4
100129ac:	21166e04 	addi	r4,r4,22968
100129b0:	dfc00015 	stw	ra,0(sp)
100129b4:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

100129b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE>:
100129b8:	20c00117 	ldw	r3,4(r4)
100129bc:	00a00034 	movhi	r2,32768
100129c0:	10bfffc4 	addi	r2,r2,-1
100129c4:	10c5c83a 	sub	r2,r2,r3
100129c8:	11800136 	bltu	r2,r6,100129d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE+0x18>
100129cc:	00127981 	jmpi	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
100129d0:	010400b4 	movhi	r4,4098
100129d4:	deffff04 	addi	sp,sp,-4
100129d8:	21166e04 	addi	r4,r4,22968
100129dc:	dfc00015 	stw	ra,0(sp)
100129e0:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>

100129e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj>:
100129e4:	defffe04 	addi	sp,sp,-8
100129e8:	dfc00115 	stw	ra,4(sp)
100129ec:	dc000015 	stw	r16,0(sp)
100129f0:	24000117 	ldw	r16,4(r4)
100129f4:	3805883a 	mov	r2,r7
100129f8:	81c01636 	bltu	r16,r7,10012a54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x70>
100129fc:	80a1c83a 	sub	r16,r16,r2
10012a00:	280f883a 	mov	r7,r5
10012a04:	34000d36 	bltu	r6,r16,10012a3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x58>
10012a08:	80000726 	beq	r16,zero,10012a28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
10012a0c:	21400017 	ldw	r5,0(r4)
10012a10:	80c00058 	cmpnei	r3,r16,1
10012a14:	288b883a 	add	r5,r5,r2
10012a18:	18000b26 	beq	r3,zero,10012a48 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x64>
10012a1c:	800d883a 	mov	r6,r16
10012a20:	3809883a 	mov	r4,r7
10012a24:	00157f80 	call	100157f8 <memcpy>
10012a28:	8005883a 	mov	r2,r16
10012a2c:	dfc00117 	ldw	ra,4(sp)
10012a30:	dc000017 	ldw	r16,0(sp)
10012a34:	dec00204 	addi	sp,sp,8
10012a38:	f800283a 	ret
10012a3c:	3021883a 	mov	r16,r6
10012a40:	803ff926 	beq	r16,zero,10012a28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
10012a44:	003ff106 	br	10012a0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x28>
10012a48:	28800003 	ldbu	r2,0(r5)
10012a4c:	38800005 	stb	r2,0(r7)
10012a50:	003ff506 	br	10012a28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x44>
10012a54:	014400b4 	movhi	r5,4098
10012a58:	010400b4 	movhi	r4,4098
10012a5c:	800f883a 	mov	r7,r16
10012a60:	100d883a 	mov	r6,r2
10012a64:	29563e04 	addi	r5,r5,22776
10012a68:	21161f04 	addi	r4,r4,22652
10012a6c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10012a70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>:
10012a70:	21404626 	beq	r4,r5,10012b8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x11c>
10012a74:	defff404 	addi	sp,sp,-48
10012a78:	dd400915 	stw	r21,36(sp)
10012a7c:	dd000815 	stw	r20,32(sp)
10012a80:	dc400515 	stw	r17,20(sp)
10012a84:	dc000415 	stw	r16,16(sp)
10012a88:	dfc00b15 	stw	ra,44(sp)
10012a8c:	dd800a15 	stw	r22,40(sp)
10012a90:	dcc00715 	stw	r19,28(sp)
10012a94:	dc800615 	stw	r18,24(sp)
10012a98:	24c00017 	ldw	r19,0(r4)
10012a9c:	25400204 	addi	r21,r4,8
10012aa0:	2823883a 	mov	r17,r5
10012aa4:	2021883a 	mov	r16,r4
10012aa8:	2c800017 	ldw	r18,0(r5)
10012aac:	2d000204 	addi	r20,r5,8
10012ab0:	acc01526 	beq	r21,r19,10012b08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x98>
10012ab4:	25800217 	ldw	r22,8(r4)
10012ab8:	a4802d26 	beq	r20,r18,10012b70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x100>
10012abc:	24800015 	stw	r18,0(r4)
10012ac0:	28800217 	ldw	r2,8(r5)
10012ac4:	2cc00015 	stw	r19,0(r5)
10012ac8:	20800215 	stw	r2,8(r4)
10012acc:	8d800215 	stw	r22,8(r17)
10012ad0:	88800117 	ldw	r2,4(r17)
10012ad4:	80c00117 	ldw	r3,4(r16)
10012ad8:	80800115 	stw	r2,4(r16)
10012adc:	88c00115 	stw	r3,4(r17)
10012ae0:	dfc00b17 	ldw	ra,44(sp)
10012ae4:	dd800a17 	ldw	r22,40(sp)
10012ae8:	dd400917 	ldw	r21,36(sp)
10012aec:	dd000817 	ldw	r20,32(sp)
10012af0:	dcc00717 	ldw	r19,28(sp)
10012af4:	dc800617 	ldw	r18,24(sp)
10012af8:	dc400517 	ldw	r17,20(sp)
10012afc:	dc000417 	ldw	r16,16(sp)
10012b00:	dec00c04 	addi	sp,sp,48
10012b04:	f800283a 	ret
10012b08:	a4800b26 	beq	r20,r18,10012b38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xc8>
10012b0c:	2cc00217 	ldw	r19,8(r5)
10012b10:	01800404 	movi	r6,16
10012b14:	a80b883a 	mov	r5,r21
10012b18:	a009883a 	mov	r4,r20
10012b1c:	00157f80 	call	100157f8 <memcpy>
10012b20:	84800015 	stw	r18,0(r16)
10012b24:	8d000015 	stw	r20,0(r17)
10012b28:	84c00215 	stw	r19,8(r16)
10012b2c:	88800117 	ldw	r2,4(r17)
10012b30:	80c00117 	ldw	r3,4(r16)
10012b34:	003fe806 	br	10012ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012b38:	20c00117 	ldw	r3,4(r4)
10012b3c:	28800117 	ldw	r2,4(r5)
10012b40:	18001326 	beq	r3,zero,10012b90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x120>
10012b44:	01800404 	movi	r6,16
10012b48:	1000141e 	bne	r2,zero,10012b9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x12c>
10012b4c:	a80b883a 	mov	r5,r21
10012b50:	a009883a 	mov	r4,r20
10012b54:	00157f80 	call	100157f8 <memcpy>
10012b58:	80800117 	ldw	r2,4(r16)
10012b5c:	88800115 	stw	r2,4(r17)
10012b60:	80800017 	ldw	r2,0(r16)
10012b64:	80000115 	stw	zero,4(r16)
10012b68:	10000005 	stb	zero,0(r2)
10012b6c:	003fdc06 	br	10012ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>
10012b70:	01800404 	movi	r6,16
10012b74:	a00b883a 	mov	r5,r20
10012b78:	a809883a 	mov	r4,r21
10012b7c:	00157f80 	call	100157f8 <memcpy>
10012b80:	8cc00015 	stw	r19,0(r17)
10012b84:	85400015 	stw	r21,0(r16)
10012b88:	003fd006 	br	10012acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x5c>
10012b8c:	f800283a 	ret
10012b90:	1000101e 	bne	r2,zero,10012bd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x164>
10012b94:	0007883a 	mov	r3,zero
10012b98:	003fcf06 	br	10012ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012b9c:	a00b883a 	mov	r5,r20
10012ba0:	d809883a 	mov	r4,sp
10012ba4:	00157f80 	call	100157f8 <memcpy>
10012ba8:	01800404 	movi	r6,16
10012bac:	a80b883a 	mov	r5,r21
10012bb0:	a009883a 	mov	r4,r20
10012bb4:	00157f80 	call	100157f8 <memcpy>
10012bb8:	01800404 	movi	r6,16
10012bbc:	d80b883a 	mov	r5,sp
10012bc0:	a809883a 	mov	r4,r21
10012bc4:	00157f80 	call	100157f8 <memcpy>
10012bc8:	88800117 	ldw	r2,4(r17)
10012bcc:	80c00117 	ldw	r3,4(r16)
10012bd0:	003fc106 	br	10012ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x68>
10012bd4:	01800404 	movi	r6,16
10012bd8:	a00b883a 	mov	r5,r20
10012bdc:	a809883a 	mov	r4,r21
10012be0:	00157f80 	call	100157f8 <memcpy>
10012be4:	88800117 	ldw	r2,4(r17)
10012be8:	80800115 	stw	r2,4(r16)
10012bec:	88800017 	ldw	r2,0(r17)
10012bf0:	88000115 	stw	zero,4(r17)
10012bf4:	10000005 	stb	zero,0(r2)
10012bf8:	003fb906 	br	10012ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x70>

10012bfc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
10012bfc:	20800017 	ldw	r2,0(r4)
10012c00:	f800283a 	ret

10012c04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
10012c04:	20800017 	ldw	r2,0(r4)
10012c08:	f800283a 	ret

10012c0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
10012c0c:	2005883a 	mov	r2,r4
10012c10:	f800283a 	ret

10012c14 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>:
10012c14:	defff804 	addi	sp,sp,-32
10012c18:	dfc00715 	stw	ra,28(sp)
10012c1c:	dd800615 	stw	r22,24(sp)
10012c20:	dd400515 	stw	r21,20(sp)
10012c24:	dd000415 	stw	r20,16(sp)
10012c28:	dcc00315 	stw	r19,12(sp)
10012c2c:	dc800215 	stw	r18,8(sp)
10012c30:	dc400115 	stw	r17,4(sp)
10012c34:	dc000015 	stw	r16,0(sp)
10012c38:	24800117 	ldw	r18,4(r4)
10012c3c:	38002626 	beq	r7,zero,10012cd8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xc4>
10012c40:	34801a2e 	bgeu	r6,r18,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012c44:	25000017 	ldw	r20,0(r4)
10012c48:	9185c83a 	sub	r2,r18,r6
10012c4c:	a189883a 	add	r4,r20,r6
10012c50:	a4a5883a 	add	r18,r20,r18
10012c54:	11c01536 	bltu	r2,r7,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012c58:	05400044 	movi	r21,1
10012c5c:	a9ebc83a 	sub	r21,r21,r7
10012c60:	a88d883a 	add	r6,r21,r2
10012c64:	30001126 	beq	r6,zero,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012c68:	2d800007 	ldb	r22,0(r5)
10012c6c:	2827883a 	mov	r19,r5
10012c70:	3821883a 	mov	r16,r7
10012c74:	b00b883a 	mov	r5,r22
10012c78:	00156840 	call	10015684 <memchr>
10012c7c:	1023883a 	mov	r17,r2
10012c80:	800d883a 	mov	r6,r16
10012c84:	980b883a 	mov	r5,r19
10012c88:	1009883a 	mov	r4,r2
10012c8c:	10000726 	beq	r2,zero,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012c90:	001576c0 	call	1001576c <memcmp>
10012c94:	89000044 	addi	r4,r17,1
10012c98:	9107c83a 	sub	r3,r18,r4
10012c9c:	a8cd883a 	add	r6,r21,r3
10012ca0:	10001026 	beq	r2,zero,10012ce4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0xd0>
10012ca4:	1c000136 	bltu	r3,r16,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012ca8:	303ff21e 	bne	r6,zero,10012c74 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x60>
10012cac:	00bfffc4 	movi	r2,-1
10012cb0:	dfc00717 	ldw	ra,28(sp)
10012cb4:	dd800617 	ldw	r22,24(sp)
10012cb8:	dd400517 	ldw	r21,20(sp)
10012cbc:	dd000417 	ldw	r20,16(sp)
10012cc0:	dcc00317 	ldw	r19,12(sp)
10012cc4:	dc800217 	ldw	r18,8(sp)
10012cc8:	dc400117 	ldw	r17,4(sp)
10012ccc:	dc000017 	ldw	r16,0(sp)
10012cd0:	dec00804 	addi	sp,sp,32
10012cd4:	f800283a 	ret
10012cd8:	91bff436 	bltu	r18,r6,10012cac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x98>
10012cdc:	3005883a 	mov	r2,r6
10012ce0:	003ff306 	br	10012cb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>
10012ce4:	8d05c83a 	sub	r2,r17,r20
10012ce8:	003ff106 	br	10012cb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj+0x9c>

10012cec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j>:
10012cec:	29c00117 	ldw	r7,4(r5)
10012cf0:	29400017 	ldw	r5,0(r5)
10012cf4:	0012c141 	jmpi	10012c14 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10012cf8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj>:
10012cf8:	defffc04 	addi	sp,sp,-16
10012cfc:	dc000215 	stw	r16,8(sp)
10012d00:	2021883a 	mov	r16,r4
10012d04:	2809883a 	mov	r4,r5
10012d08:	dfc00315 	stw	ra,12(sp)
10012d0c:	d9800115 	stw	r6,4(sp)
10012d10:	d9400015 	stw	r5,0(sp)
10012d14:	00164b40 	call	100164b4 <strlen>
10012d18:	d9800117 	ldw	r6,4(sp)
10012d1c:	d9400017 	ldw	r5,0(sp)
10012d20:	100f883a 	mov	r7,r2
10012d24:	8009883a 	mov	r4,r16
10012d28:	dfc00317 	ldw	ra,12(sp)
10012d2c:	dc000217 	ldw	r16,8(sp)
10012d30:	dec00404 	addi	sp,sp,16
10012d34:	0012c141 	jmpi	10012c14 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj>

10012d38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>:
10012d38:	20800117 	ldw	r2,4(r4)
10012d3c:	3080112e 	bgeu	r6,r2,10012d84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x4c>
10012d40:	defffe04 	addi	sp,sp,-8
10012d44:	dfc00115 	stw	ra,4(sp)
10012d48:	dc000015 	stw	r16,0(sp)
10012d4c:	24000017 	ldw	r16,0(r4)
10012d50:	29403fcc 	andi	r5,r5,255
10012d54:	3007883a 	mov	r3,r6
10012d58:	2940201c 	xori	r5,r5,128
10012d5c:	118dc83a 	sub	r6,r2,r6
10012d60:	297fe004 	addi	r5,r5,-128
10012d64:	80c9883a 	add	r4,r16,r3
10012d68:	00156840 	call	10015684 <memchr>
10012d6c:	10000726 	beq	r2,zero,10012d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj+0x54>
10012d70:	1405c83a 	sub	r2,r2,r16
10012d74:	dfc00117 	ldw	ra,4(sp)
10012d78:	dc000017 	ldw	r16,0(sp)
10012d7c:	dec00204 	addi	sp,sp,8
10012d80:	f800283a 	ret
10012d84:	00bfffc4 	movi	r2,-1
10012d88:	f800283a 	ret
10012d8c:	00bfffc4 	movi	r2,-1
10012d90:	dfc00117 	ldw	ra,4(sp)
10012d94:	dc000017 	ldw	r16,0(sp)
10012d98:	dec00204 	addi	sp,sp,8
10012d9c:	f800283a 	ret

10012da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>:
10012da0:	defffb04 	addi	sp,sp,-20
10012da4:	dfc00415 	stw	ra,16(sp)
10012da8:	dcc00315 	stw	r19,12(sp)
10012dac:	dc800215 	stw	r18,8(sp)
10012db0:	dc400115 	stw	r17,4(sp)
10012db4:	dc000015 	stw	r16,0(sp)
10012db8:	24000117 	ldw	r16,4(r4)
10012dbc:	81c01c36 	bltu	r16,r7,10012e30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
10012dc0:	81e1c83a 	sub	r16,r16,r7
10012dc4:	34001836 	bltu	r6,r16,10012e28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x88>
10012dc8:	24c00017 	ldw	r19,0(r4)
10012dcc:	2825883a 	mov	r18,r5
10012dd0:	3823883a 	mov	r17,r7
10012dd4:	9c09883a 	add	r4,r19,r16
10012dd8:	880d883a 	mov	r6,r17
10012ddc:	900b883a 	mov	r5,r18
10012de0:	88000926 	beq	r17,zero,10012e08 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
10012de4:	001576c0 	call	1001576c <memcmp>
10012de8:	10000726 	beq	r2,zero,10012e08 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>
10012dec:	80bfffc4 	addi	r2,r16,-1
10012df0:	80000f26 	beq	r16,zero,10012e30 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x90>
10012df4:	1021883a 	mov	r16,r2
10012df8:	9c09883a 	add	r4,r19,r16
10012dfc:	880d883a 	mov	r6,r17
10012e00:	900b883a 	mov	r5,r18
10012e04:	883ff71e 	bne	r17,zero,10012de4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x44>
10012e08:	8005883a 	mov	r2,r16
10012e0c:	dfc00417 	ldw	ra,16(sp)
10012e10:	dcc00317 	ldw	r19,12(sp)
10012e14:	dc800217 	ldw	r18,8(sp)
10012e18:	dc400117 	ldw	r17,4(sp)
10012e1c:	dc000017 	ldw	r16,0(sp)
10012e20:	dec00504 	addi	sp,sp,20
10012e24:	f800283a 	ret
10012e28:	3021883a 	mov	r16,r6
10012e2c:	003fe606 	br	10012dc8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x28>
10012e30:	043fffc4 	movi	r16,-1
10012e34:	003ff406 	br	10012e08 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj+0x68>

10012e38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j>:
10012e38:	29c00117 	ldw	r7,4(r5)
10012e3c:	29400017 	ldw	r5,0(r5)
10012e40:	0012da01 	jmpi	10012da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

10012e44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj>:
10012e44:	defffc04 	addi	sp,sp,-16
10012e48:	dc000215 	stw	r16,8(sp)
10012e4c:	2021883a 	mov	r16,r4
10012e50:	2809883a 	mov	r4,r5
10012e54:	dfc00315 	stw	ra,12(sp)
10012e58:	d9800115 	stw	r6,4(sp)
10012e5c:	d9400015 	stw	r5,0(sp)
10012e60:	00164b40 	call	100164b4 <strlen>
10012e64:	d9800117 	ldw	r6,4(sp)
10012e68:	d9400017 	ldw	r5,0(sp)
10012e6c:	100f883a 	mov	r7,r2
10012e70:	8009883a 	mov	r4,r16
10012e74:	dfc00317 	ldw	ra,12(sp)
10012e78:	dc000217 	ldw	r16,8(sp)
10012e7c:	dec00404 	addi	sp,sp,16
10012e80:	0012da01 	jmpi	10012da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj>

10012e84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>:
10012e84:	20800117 	ldw	r2,4(r4)
10012e88:	10000f26 	beq	r2,zero,10012ec8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x44>
10012e8c:	10bfffc4 	addi	r2,r2,-1
10012e90:	30800b36 	bltu	r6,r2,10012ec0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x3c>
10012e94:	29403fcc 	andi	r5,r5,255
10012e98:	21000017 	ldw	r4,0(r4)
10012e9c:	2940201c 	xori	r5,r5,128
10012ea0:	297fe004 	addi	r5,r5,-128
10012ea4:	2087883a 	add	r3,r4,r2
10012ea8:	18c00007 	ldb	r3,0(r3)
10012eac:	19400826 	beq	r3,r5,10012ed0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x4c>
10012eb0:	10bfffc4 	addi	r2,r2,-1
10012eb4:	10ffffe0 	cmpeqi	r3,r2,-1
10012eb8:	183ffa26 	beq	r3,zero,10012ea4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x20>
10012ebc:	f800283a 	ret
10012ec0:	3005883a 	mov	r2,r6
10012ec4:	003ff306 	br	10012e94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj+0x10>
10012ec8:	00bfffc4 	movi	r2,-1
10012ecc:	f800283a 	ret
10012ed0:	f800283a 	ret

10012ed4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>:
10012ed4:	38002126 	beq	r7,zero,10012f5c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x88>
10012ed8:	defffa04 	addi	sp,sp,-24
10012edc:	dc000015 	stw	r16,0(sp)
10012ee0:	dfc00515 	stw	ra,20(sp)
10012ee4:	dd000415 	stw	r20,16(sp)
10012ee8:	dcc00315 	stw	r19,12(sp)
10012eec:	dc800215 	stw	r18,8(sp)
10012ef0:	dc400115 	stw	r17,4(sp)
10012ef4:	24800117 	ldw	r18,4(r4)
10012ef8:	3021883a 	mov	r16,r6
10012efc:	3480152e 	bgeu	r6,r18,10012f54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10012f00:	3823883a 	mov	r17,r7
10012f04:	2827883a 	mov	r19,r5
10012f08:	25000017 	ldw	r20,0(r4)
10012f0c:	00000206 	br	10012f18 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x44>
10012f10:	84000044 	addi	r16,r16,1
10012f14:	84800f26 	beq	r16,r18,10012f54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x80>
10012f18:	a405883a 	add	r2,r20,r16
10012f1c:	11400007 	ldb	r5,0(r2)
10012f20:	880d883a 	mov	r6,r17
10012f24:	9809883a 	mov	r4,r19
10012f28:	00156840 	call	10015684 <memchr>
10012f2c:	103ff826 	beq	r2,zero,10012f10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x3c>
10012f30:	8005883a 	mov	r2,r16
10012f34:	dfc00517 	ldw	ra,20(sp)
10012f38:	dd000417 	ldw	r20,16(sp)
10012f3c:	dcc00317 	ldw	r19,12(sp)
10012f40:	dc800217 	ldw	r18,8(sp)
10012f44:	dc400117 	ldw	r17,4(sp)
10012f48:	dc000017 	ldw	r16,0(sp)
10012f4c:	dec00604 	addi	sp,sp,24
10012f50:	f800283a 	ret
10012f54:	00bfffc4 	movi	r2,-1
10012f58:	003ff606 	br	10012f34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj+0x60>
10012f5c:	00bfffc4 	movi	r2,-1
10012f60:	f800283a 	ret

10012f64 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j>:
10012f64:	29c00117 	ldw	r7,4(r5)
10012f68:	29400017 	ldw	r5,0(r5)
10012f6c:	0012ed41 	jmpi	10012ed4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

10012f70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj>:
10012f70:	defffc04 	addi	sp,sp,-16
10012f74:	dc000215 	stw	r16,8(sp)
10012f78:	2021883a 	mov	r16,r4
10012f7c:	2809883a 	mov	r4,r5
10012f80:	dfc00315 	stw	ra,12(sp)
10012f84:	d9800115 	stw	r6,4(sp)
10012f88:	d9400015 	stw	r5,0(sp)
10012f8c:	00164b40 	call	100164b4 <strlen>
10012f90:	d9800117 	ldw	r6,4(sp)
10012f94:	d9400017 	ldw	r5,0(sp)
10012f98:	100f883a 	mov	r7,r2
10012f9c:	8009883a 	mov	r4,r16
10012fa0:	dfc00317 	ldw	ra,12(sp)
10012fa4:	dc000217 	ldw	r16,8(sp)
10012fa8:	dec00404 	addi	sp,sp,16
10012fac:	0012ed41 	jmpi	10012ed4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj>

10012fb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj>:
10012fb0:	29403fcc 	andi	r5,r5,255
10012fb4:	2940201c 	xori	r5,r5,128
10012fb8:	297fe004 	addi	r5,r5,-128
10012fbc:	0012d381 	jmpi	10012d38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj>

10012fc0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>:
10012fc0:	defffb04 	addi	sp,sp,-20
10012fc4:	dfc00415 	stw	ra,16(sp)
10012fc8:	dcc00315 	stw	r19,12(sp)
10012fcc:	dc800215 	stw	r18,8(sp)
10012fd0:	dc400115 	stw	r17,4(sp)
10012fd4:	dc000015 	stw	r16,0(sp)
10012fd8:	24000117 	ldw	r16,4(r4)
10012fdc:	80001226 	beq	r16,zero,10013028 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
10012fe0:	38001126 	beq	r7,zero,10013028 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x68>
10012fe4:	843fffc4 	addi	r16,r16,-1
10012fe8:	3400012e 	bgeu	r6,r16,10012ff0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x30>
10012fec:	3021883a 	mov	r16,r6
10012ff0:	3823883a 	mov	r17,r7
10012ff4:	2825883a 	mov	r18,r5
10012ff8:	24c00017 	ldw	r19,0(r4)
10012ffc:	00000306 	br	1001300c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x4c>
10013000:	843fffc4 	addi	r16,r16,-1
10013004:	80bfffd8 	cmpnei	r2,r16,-1
10013008:	10000826 	beq	r2,zero,1001302c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
1001300c:	9c05883a 	add	r2,r19,r16
10013010:	11400007 	ldb	r5,0(r2)
10013014:	880d883a 	mov	r6,r17
10013018:	9009883a 	mov	r4,r18
1001301c:	00156840 	call	10015684 <memchr>
10013020:	103ff726 	beq	r2,zero,10013000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x40>
10013024:	00000106 	br	1001302c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj+0x6c>
10013028:	043fffc4 	movi	r16,-1
1001302c:	8005883a 	mov	r2,r16
10013030:	dfc00417 	ldw	ra,16(sp)
10013034:	dcc00317 	ldw	r19,12(sp)
10013038:	dc800217 	ldw	r18,8(sp)
1001303c:	dc400117 	ldw	r17,4(sp)
10013040:	dc000017 	ldw	r16,0(sp)
10013044:	dec00504 	addi	sp,sp,20
10013048:	f800283a 	ret

1001304c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j>:
1001304c:	29c00117 	ldw	r7,4(r5)
10013050:	29400017 	ldw	r5,0(r5)
10013054:	0012fc01 	jmpi	10012fc0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

10013058 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj>:
10013058:	defffc04 	addi	sp,sp,-16
1001305c:	dc000215 	stw	r16,8(sp)
10013060:	2021883a 	mov	r16,r4
10013064:	2809883a 	mov	r4,r5
10013068:	dfc00315 	stw	ra,12(sp)
1001306c:	d9800115 	stw	r6,4(sp)
10013070:	d9400015 	stw	r5,0(sp)
10013074:	00164b40 	call	100164b4 <strlen>
10013078:	d9800117 	ldw	r6,4(sp)
1001307c:	d9400017 	ldw	r5,0(sp)
10013080:	100f883a 	mov	r7,r2
10013084:	8009883a 	mov	r4,r16
10013088:	dfc00317 	ldw	ra,12(sp)
1001308c:	dc000217 	ldw	r16,8(sp)
10013090:	dec00404 	addi	sp,sp,16
10013094:	0012fc01 	jmpi	10012fc0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj>

10013098 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj>:
10013098:	29403fcc 	andi	r5,r5,255
1001309c:	2940201c 	xori	r5,r5,128
100130a0:	297fe004 	addi	r5,r5,-128
100130a4:	0012e841 	jmpi	10012e84 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj>

100130a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>:
100130a8:	defffa04 	addi	sp,sp,-24
100130ac:	dfc00515 	stw	ra,20(sp)
100130b0:	dd000415 	stw	r20,16(sp)
100130b4:	dcc00315 	stw	r19,12(sp)
100130b8:	dc800215 	stw	r18,8(sp)
100130bc:	dc400115 	stw	r17,4(sp)
100130c0:	dc000015 	stw	r16,0(sp)
100130c4:	24800117 	ldw	r18,4(r4)
100130c8:	3480172e 	bgeu	r6,r18,10013128 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
100130cc:	3021883a 	mov	r16,r6
100130d0:	2827883a 	mov	r19,r5
100130d4:	3823883a 	mov	r17,r7
100130d8:	25000017 	ldw	r20,0(r4)
100130dc:	3800031e 	bne	r7,zero,100130ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x44>
100130e0:	00000806 	br	10013104 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x5c>
100130e4:	84000044 	addi	r16,r16,1
100130e8:	94000f26 	beq	r18,r16,10013128 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x80>
100130ec:	a405883a 	add	r2,r20,r16
100130f0:	11400007 	ldb	r5,0(r2)
100130f4:	880d883a 	mov	r6,r17
100130f8:	9809883a 	mov	r4,r19
100130fc:	00156840 	call	10015684 <memchr>
10013100:	103ff81e 	bne	r2,zero,100130e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x3c>
10013104:	8005883a 	mov	r2,r16
10013108:	dfc00517 	ldw	ra,20(sp)
1001310c:	dd000417 	ldw	r20,16(sp)
10013110:	dcc00317 	ldw	r19,12(sp)
10013114:	dc800217 	ldw	r18,8(sp)
10013118:	dc400117 	ldw	r17,4(sp)
1001311c:	dc000017 	ldw	r16,0(sp)
10013120:	dec00604 	addi	sp,sp,24
10013124:	f800283a 	ret
10013128:	00bfffc4 	movi	r2,-1
1001312c:	003ff606 	br	10013108 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj+0x60>

10013130 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j>:
10013130:	29c00117 	ldw	r7,4(r5)
10013134:	29400017 	ldw	r5,0(r5)
10013138:	00130a81 	jmpi	100130a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

1001313c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj>:
1001313c:	defffc04 	addi	sp,sp,-16
10013140:	dc000215 	stw	r16,8(sp)
10013144:	2021883a 	mov	r16,r4
10013148:	2809883a 	mov	r4,r5
1001314c:	dfc00315 	stw	ra,12(sp)
10013150:	d9800115 	stw	r6,4(sp)
10013154:	d9400015 	stw	r5,0(sp)
10013158:	00164b40 	call	100164b4 <strlen>
1001315c:	d9800117 	ldw	r6,4(sp)
10013160:	d9400017 	ldw	r5,0(sp)
10013164:	100f883a 	mov	r7,r2
10013168:	8009883a 	mov	r4,r16
1001316c:	dfc00317 	ldw	ra,12(sp)
10013170:	dc000217 	ldw	r16,8(sp)
10013174:	dec00404 	addi	sp,sp,16
10013178:	00130a81 	jmpi	100130a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj>

1001317c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>:
1001317c:	21c00117 	ldw	r7,4(r4)
10013180:	31c00e2e 	bgeu	r6,r7,100131bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x40>
10013184:	21000017 	ldw	r4,0(r4)
10013188:	29403fcc 	andi	r5,r5,255
1001318c:	2940201c 	xori	r5,r5,128
10013190:	2185883a 	add	r2,r4,r6
10013194:	10800007 	ldb	r2,0(r2)
10013198:	297fe004 	addi	r5,r5,-128
1001319c:	2880091e 	bne	r5,r2,100131c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
100131a0:	2807883a 	mov	r3,r5
100131a4:	00000206 	br	100131b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x34>
100131a8:	10800007 	ldb	r2,0(r2)
100131ac:	10c0051e 	bne	r2,r3,100131c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x48>
100131b0:	31800044 	addi	r6,r6,1
100131b4:	2185883a 	add	r2,r4,r6
100131b8:	31fffb1e 	bne	r6,r7,100131a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x2c>
100131bc:	00bfffc4 	movi	r2,-1
100131c0:	f800283a 	ret
100131c4:	3005883a 	mov	r2,r6
100131c8:	f800283a 	ret

100131cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>:
100131cc:	defffb04 	addi	sp,sp,-20
100131d0:	dfc00415 	stw	ra,16(sp)
100131d4:	dcc00315 	stw	r19,12(sp)
100131d8:	dc800215 	stw	r18,8(sp)
100131dc:	dc400115 	stw	r17,4(sp)
100131e0:	dc000015 	stw	r16,0(sp)
100131e4:	24000117 	ldw	r16,4(r4)
100131e8:	80001926 	beq	r16,zero,10013250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x84>
100131ec:	843fffc4 	addi	r16,r16,-1
100131f0:	34001536 	bltu	r6,r16,10013248 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x7c>
100131f4:	24c00017 	ldw	r19,0(r4)
100131f8:	3823883a 	mov	r17,r7
100131fc:	2825883a 	mov	r18,r5
10013200:	9c05883a 	add	r2,r19,r16
10013204:	880d883a 	mov	r6,r17
10013208:	9009883a 	mov	r4,r18
1001320c:	88000626 	beq	r17,zero,10013228 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
10013210:	11400007 	ldb	r5,0(r2)
10013214:	00156840 	call	10015684 <memchr>
10013218:	10000326 	beq	r2,zero,10013228 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>
1001321c:	843fffc4 	addi	r16,r16,-1
10013220:	80bfffd8 	cmpnei	r2,r16,-1
10013224:	103ff61e 	bne	r2,zero,10013200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x34>
10013228:	8005883a 	mov	r2,r16
1001322c:	dfc00417 	ldw	ra,16(sp)
10013230:	dcc00317 	ldw	r19,12(sp)
10013234:	dc800217 	ldw	r18,8(sp)
10013238:	dc400117 	ldw	r17,4(sp)
1001323c:	dc000017 	ldw	r16,0(sp)
10013240:	dec00504 	addi	sp,sp,20
10013244:	f800283a 	ret
10013248:	3021883a 	mov	r16,r6
1001324c:	003fe906 	br	100131f4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x28>
10013250:	043fffc4 	movi	r16,-1
10013254:	003ff406 	br	10013228 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj+0x5c>

10013258 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j>:
10013258:	29c00117 	ldw	r7,4(r5)
1001325c:	29400017 	ldw	r5,0(r5)
10013260:	00131cc1 	jmpi	100131cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

10013264 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj>:
10013264:	defffc04 	addi	sp,sp,-16
10013268:	dc000215 	stw	r16,8(sp)
1001326c:	2021883a 	mov	r16,r4
10013270:	2809883a 	mov	r4,r5
10013274:	dfc00315 	stw	ra,12(sp)
10013278:	d9800115 	stw	r6,4(sp)
1001327c:	d9400015 	stw	r5,0(sp)
10013280:	00164b40 	call	100164b4 <strlen>
10013284:	d9800117 	ldw	r6,4(sp)
10013288:	d9400017 	ldw	r5,0(sp)
1001328c:	100f883a 	mov	r7,r2
10013290:	8009883a 	mov	r4,r16
10013294:	dfc00317 	ldw	ra,12(sp)
10013298:	dc000217 	ldw	r16,8(sp)
1001329c:	dec00404 	addi	sp,sp,16
100132a0:	00131cc1 	jmpi	100131cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj>

100132a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj>:
100132a4:	20800117 	ldw	r2,4(r4)
100132a8:	10001026 	beq	r2,zero,100132ec <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x48>
100132ac:	10bfffc4 	addi	r2,r2,-1
100132b0:	30800c36 	bltu	r6,r2,100132e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x40>
100132b4:	29403fcc 	andi	r5,r5,255
100132b8:	2940201c 	xori	r5,r5,128
100132bc:	21000017 	ldw	r4,0(r4)
100132c0:	297fe004 	addi	r5,r5,-128
100132c4:	00000306 	br	100132d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x30>
100132c8:	10bfffc4 	addi	r2,r2,-1
100132cc:	10ffffd8 	cmpnei	r3,r2,-1
100132d0:	18000826 	beq	r3,zero,100132f4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x50>
100132d4:	2087883a 	add	r3,r4,r2
100132d8:	18c00007 	ldb	r3,0(r3)
100132dc:	197ffa26 	beq	r3,r5,100132c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x24>
100132e0:	f800283a 	ret
100132e4:	3005883a 	mov	r2,r6
100132e8:	003ff206 	br	100132b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj+0x10>
100132ec:	00bfffc4 	movi	r2,-1
100132f0:	f800283a 	ret
100132f4:	f800283a 	ret

100132f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
100132f8:	defffd04 	addi	sp,sp,-12
100132fc:	dfc00215 	stw	ra,8(sp)
10013300:	dc400115 	stw	r17,4(sp)
10013304:	dc000015 	stw	r16,0(sp)
10013308:	2c000117 	ldw	r16,4(r5)
1001330c:	24400117 	ldw	r17,4(r4)
10013310:	8c000c2e 	bgeu	r17,r16,10013344 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x4c>
10013314:	880d883a 	mov	r6,r17
10013318:	30000426 	beq	r6,zero,1001332c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x34>
1001331c:	29400017 	ldw	r5,0(r5)
10013320:	21000017 	ldw	r4,0(r4)
10013324:	001576c0 	call	1001576c <memcmp>
10013328:	1000011e 	bne	r2,zero,10013330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x38>
1001332c:	8c05c83a 	sub	r2,r17,r16
10013330:	dfc00217 	ldw	ra,8(sp)
10013334:	dc400117 	ldw	r17,4(sp)
10013338:	dc000017 	ldw	r16,0(sp)
1001333c:	dec00304 	addi	sp,sp,12
10013340:	f800283a 	ret
10013344:	800d883a 	mov	r6,r16
10013348:	003ff306 	br	10013318 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x20>

1001334c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_>:
1001334c:	defffd04 	addi	sp,sp,-12
10013350:	dfc00215 	stw	ra,8(sp)
10013354:	dc400115 	stw	r17,4(sp)
10013358:	dc000015 	stw	r16,0(sp)
1001335c:	24000117 	ldw	r16,4(r4)
10013360:	2805883a 	mov	r2,r5
10013364:	81401836 	bltu	r16,r5,100133c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x7c>
10013368:	8161c83a 	sub	r16,r16,r5
1001336c:	34001136 	bltu	r6,r16,100133b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x68>
10013370:	3c400117 	ldw	r17,4(r7)
10013374:	880d883a 	mov	r6,r17
10013378:	84400c36 	bltu	r16,r17,100133ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
1001337c:	30000526 	beq	r6,zero,10013394 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x48>
10013380:	21000017 	ldw	r4,0(r4)
10013384:	39400017 	ldw	r5,0(r7)
10013388:	2089883a 	add	r4,r4,r2
1001338c:	001576c0 	call	1001576c <memcmp>
10013390:	1000011e 	bne	r2,zero,10013398 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x4c>
10013394:	8445c83a 	sub	r2,r16,r17
10013398:	dfc00217 	ldw	ra,8(sp)
1001339c:	dc400117 	ldw	r17,4(sp)
100133a0:	dc000017 	ldw	r16,0(sp)
100133a4:	dec00304 	addi	sp,sp,12
100133a8:	f800283a 	ret
100133ac:	800d883a 	mov	r6,r16
100133b0:	003ff206 	br	1001337c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
100133b4:	3c400117 	ldw	r17,4(r7)
100133b8:	3021883a 	mov	r16,r6
100133bc:	880d883a 	mov	r6,r17
100133c0:	847fee2e 	bgeu	r16,r17,1001337c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x30>
100133c4:	003ff906 	br	100133ac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_+0x60>
100133c8:	014400b4 	movhi	r5,4098
100133cc:	010400b4 	movhi	r4,4098
100133d0:	800f883a 	mov	r7,r16
100133d4:	100d883a 	mov	r6,r2
100133d8:	29564304 	addi	r5,r5,22796
100133dc:	21161f04 	addi	r4,r4,22652
100133e0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100133e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj>:
100133e4:	defffd04 	addi	sp,sp,-12
100133e8:	dfc00215 	stw	ra,8(sp)
100133ec:	dc400115 	stw	r17,4(sp)
100133f0:	dc000015 	stw	r16,0(sp)
100133f4:	24400117 	ldw	r17,4(r4)
100133f8:	2805883a 	mov	r2,r5
100133fc:	d8c00317 	ldw	r3,12(sp)
10013400:	d9400417 	ldw	r5,16(sp)
10013404:	88802636 	bltu	r17,r2,100134a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xbc>
10013408:	3c000117 	ldw	r16,4(r7)
1001340c:	80c01d36 	bltu	r16,r3,10013484 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0xa0>
10013410:	88a3c83a 	sub	r17,r17,r2
10013414:	34401736 	bltu	r6,r17,10013474 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x90>
10013418:	80e1c83a 	sub	r16,r16,r3
1001341c:	2c001136 	bltu	r5,r16,10013464 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
10013420:	800d883a 	mov	r6,r16
10013424:	8c000d36 	bltu	r17,r16,1001345c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
10013428:	30000626 	beq	r6,zero,10013444 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x60>
1001342c:	39400017 	ldw	r5,0(r7)
10013430:	21000017 	ldw	r4,0(r4)
10013434:	28cb883a 	add	r5,r5,r3
10013438:	2089883a 	add	r4,r4,r2
1001343c:	001576c0 	call	1001576c <memcmp>
10013440:	1000011e 	bne	r2,zero,10013448 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x64>
10013444:	8c05c83a 	sub	r2,r17,r16
10013448:	dfc00217 	ldw	ra,8(sp)
1001344c:	dc400117 	ldw	r17,4(sp)
10013450:	dc000017 	ldw	r16,0(sp)
10013454:	dec00304 	addi	sp,sp,12
10013458:	f800283a 	ret
1001345c:	880d883a 	mov	r6,r17
10013460:	003ff106 	br	10013428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
10013464:	2821883a 	mov	r16,r5
10013468:	800d883a 	mov	r6,r16
1001346c:	8c3fee2e 	bgeu	r17,r16,10013428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x44>
10013470:	003ffa06 	br	1001345c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x78>
10013474:	80e1c83a 	sub	r16,r16,r3
10013478:	3023883a 	mov	r17,r6
1001347c:	2c3fe82e 	bgeu	r5,r16,10013420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x3c>
10013480:	003ff806 	br	10013464 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj+0x80>
10013484:	014400b4 	movhi	r5,4098
10013488:	010400b4 	movhi	r4,4098
1001348c:	800f883a 	mov	r7,r16
10013490:	180d883a 	mov	r6,r3
10013494:	29564304 	addi	r5,r5,22796
10013498:	21161f04 	addi	r4,r4,22652
1001349c:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
100134a0:	014400b4 	movhi	r5,4098
100134a4:	010400b4 	movhi	r4,4098
100134a8:	880f883a 	mov	r7,r17
100134ac:	100d883a 	mov	r6,r2
100134b0:	29564304 	addi	r5,r5,22796
100134b4:	21161f04 	addi	r4,r4,22652
100134b8:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100134bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
100134bc:	defffb04 	addi	sp,sp,-20
100134c0:	dcc00315 	stw	r19,12(sp)
100134c4:	dc800215 	stw	r18,8(sp)
100134c8:	dc000015 	stw	r16,0(sp)
100134cc:	dfc00415 	stw	ra,16(sp)
100134d0:	dc400115 	stw	r17,4(sp)
100134d4:	24400117 	ldw	r17,4(r4)
100134d8:	2027883a 	mov	r19,r4
100134dc:	2809883a 	mov	r4,r5
100134e0:	2825883a 	mov	r18,r5
100134e4:	00164b40 	call	100164b4 <strlen>
100134e8:	1021883a 	mov	r16,r2
100134ec:	88800e2e 	bgeu	r17,r2,10013528 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x6c>
100134f0:	880d883a 	mov	r6,r17
100134f4:	30000426 	beq	r6,zero,10013508 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x4c>
100134f8:	99000017 	ldw	r4,0(r19)
100134fc:	900b883a 	mov	r5,r18
10013500:	001576c0 	call	1001576c <memcmp>
10013504:	1000011e 	bne	r2,zero,1001350c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x50>
10013508:	8c05c83a 	sub	r2,r17,r16
1001350c:	dfc00417 	ldw	ra,16(sp)
10013510:	dcc00317 	ldw	r19,12(sp)
10013514:	dc800217 	ldw	r18,8(sp)
10013518:	dc400117 	ldw	r17,4(sp)
1001351c:	dc000017 	ldw	r16,0(sp)
10013520:	dec00504 	addi	sp,sp,20
10013524:	f800283a 	ret
10013528:	100d883a 	mov	r6,r2
1001352c:	003ff106 	br	100134f4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x38>

10013530 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc>:
10013530:	defffa04 	addi	sp,sp,-24
10013534:	dc800215 	stw	r18,8(sp)
10013538:	dfc00515 	stw	ra,20(sp)
1001353c:	dd000415 	stw	r20,16(sp)
10013540:	dcc00315 	stw	r19,12(sp)
10013544:	dc400115 	stw	r17,4(sp)
10013548:	dc000015 	stw	r16,0(sp)
1001354c:	24000117 	ldw	r16,4(r4)
10013550:	2825883a 	mov	r18,r5
10013554:	81401c36 	bltu	r16,r5,100135c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x98>
10013558:	8161c83a 	sub	r16,r16,r5
1001355c:	2027883a 	mov	r19,r4
10013560:	3829883a 	mov	r20,r7
10013564:	34001636 	bltu	r6,r16,100135c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x90>
10013568:	a009883a 	mov	r4,r20
1001356c:	00164b40 	call	100164b4 <strlen>
10013570:	1023883a 	mov	r17,r2
10013574:	100d883a 	mov	r6,r2
10013578:	80800f36 	bltu	r16,r2,100135b8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x88>
1001357c:	30000526 	beq	r6,zero,10013594 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x64>
10013580:	99000017 	ldw	r4,0(r19)
10013584:	a00b883a 	mov	r5,r20
10013588:	2489883a 	add	r4,r4,r18
1001358c:	001576c0 	call	1001576c <memcmp>
10013590:	1000011e 	bne	r2,zero,10013598 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x68>
10013594:	8445c83a 	sub	r2,r16,r17
10013598:	dfc00517 	ldw	ra,20(sp)
1001359c:	dd000417 	ldw	r20,16(sp)
100135a0:	dcc00317 	ldw	r19,12(sp)
100135a4:	dc800217 	ldw	r18,8(sp)
100135a8:	dc400117 	ldw	r17,4(sp)
100135ac:	dc000017 	ldw	r16,0(sp)
100135b0:	dec00604 	addi	sp,sp,24
100135b4:	f800283a 	ret
100135b8:	800d883a 	mov	r6,r16
100135bc:	003fef06 	br	1001357c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x4c>
100135c0:	3021883a 	mov	r16,r6
100135c4:	003fe806 	br	10013568 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc+0x38>
100135c8:	014400b4 	movhi	r5,4098
100135cc:	010400b4 	movhi	r4,4098
100135d0:	800f883a 	mov	r7,r16
100135d4:	900d883a 	mov	r6,r18
100135d8:	29564304 	addi	r5,r5,22796
100135dc:	21161f04 	addi	r4,r4,22652
100135e0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

100135e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj>:
100135e4:	defffd04 	addi	sp,sp,-12
100135e8:	dc400115 	stw	r17,4(sp)
100135ec:	dfc00215 	stw	ra,8(sp)
100135f0:	dc000015 	stw	r16,0(sp)
100135f4:	24000117 	ldw	r16,4(r4)
100135f8:	2805883a 	mov	r2,r5
100135fc:	dc400317 	ldw	r17,12(sp)
10013600:	81401636 	bltu	r16,r5,1001365c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x78>
10013604:	8161c83a 	sub	r16,r16,r5
10013608:	34001036 	bltu	r6,r16,1001364c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x68>
1001360c:	800d883a 	mov	r6,r16
10013610:	8c000c36 	bltu	r17,r16,10013644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
10013614:	30000526 	beq	r6,zero,1001362c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x48>
10013618:	21000017 	ldw	r4,0(r4)
1001361c:	380b883a 	mov	r5,r7
10013620:	2089883a 	add	r4,r4,r2
10013624:	001576c0 	call	1001576c <memcmp>
10013628:	1000011e 	bne	r2,zero,10013630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x4c>
1001362c:	8445c83a 	sub	r2,r16,r17
10013630:	dfc00217 	ldw	ra,8(sp)
10013634:	dc400117 	ldw	r17,4(sp)
10013638:	dc000017 	ldw	r16,0(sp)
1001363c:	dec00304 	addi	sp,sp,12
10013640:	f800283a 	ret
10013644:	880d883a 	mov	r6,r17
10013648:	003ff206 	br	10013614 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
1001364c:	3021883a 	mov	r16,r6
10013650:	800d883a 	mov	r6,r16
10013654:	8c3fef2e 	bgeu	r17,r16,10013614 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x30>
10013658:	003ffa06 	br	10013644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj+0x60>
1001365c:	014400b4 	movhi	r5,4098
10013660:	010400b4 	movhi	r4,4098
10013664:	800f883a 	mov	r7,r16
10013668:	100d883a 	mov	r6,r2
1001366c:	29564304 	addi	r5,r5,22796
10013670:	21161f04 	addi	r4,r4,22652
10013674:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10013678 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
10013678:	21400015 	stw	r5,0(r4)
1001367c:	f800283a 	ret

10013680 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
10013680:	21400015 	stw	r5,0(r4)
10013684:	f800283a 	ret

10013688 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
10013688:	00c400b4 	movhi	r3,4098
1001368c:	00840074 	movhi	r2,4097
10013690:	deffec04 	addi	sp,sp,-80
10013694:	2011883a 	mov	r8,r4
10013698:	18d1ac04 	addi	r3,r3,18096
1001369c:	108de504 	addi	r2,r2,14228
100136a0:	01c40074 	movhi	r7,4097
100136a4:	39e2a704 	addi	r7,r7,-30052
100136a8:	d8c00c15 	stw	r3,48(sp)
100136ac:	d8800e15 	stw	r2,56(sp)
100136b0:	d8c01204 	addi	r3,sp,72
100136b4:	40800204 	addi	r2,r8,8
100136b8:	d9000504 	addi	r4,sp,20
100136bc:	d9400215 	stw	r5,8(sp)
100136c0:	d8c00d15 	stw	r3,52(sp)
100136c4:	dfc01315 	stw	ra,76(sp)
100136c8:	d9c00b15 	stw	r7,44(sp)
100136cc:	d9800315 	stw	r6,12(sp)
100136d0:	da000015 	stw	r8,0(sp)
100136d4:	d8800415 	stw	r2,16(sp)
100136d8:	df001215 	stw	fp,72(sp)
100136dc:	dec00f15 	stw	sp,60(sp)
100136e0:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
100136e4:	d9000217 	ldw	r4,8(sp)
100136e8:	00164b40 	call	100164b4 <strlen>
100136ec:	1009883a 	mov	r4,r2
100136f0:	d8c00017 	ldw	r3,0(sp)
100136f4:	d8800417 	ldw	r2,16(sp)
100136f8:	d9000115 	stw	r4,4(sp)
100136fc:	18000115 	stw	zero,4(r3)
10013700:	18800015 	stw	r2,0(r3)
10013704:	d8800317 	ldw	r2,12(sp)
10013708:	18000205 	stb	zero,8(r3)
1001370c:	11400117 	ldw	r5,4(r2)
10013710:	00800044 	movi	r2,1
10013714:	d8800615 	stw	r2,24(sp)
10013718:	214b883a 	add	r5,r4,r5
1001371c:	1809883a 	mov	r4,r3
10013720:	001121c0 	call	1001121c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
10013724:	d8c00017 	ldw	r3,0(sp)
10013728:	00a00034 	movhi	r2,32768
1001372c:	d9000117 	ldw	r4,4(sp)
10013730:	18c00117 	ldw	r3,4(r3)
10013734:	10bfffc4 	addi	r2,r2,-1
10013738:	10c5c83a 	sub	r2,r2,r3
1001373c:	11001236 	bltu	r2,r4,10013788 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x100>
10013740:	d9800117 	ldw	r6,4(sp)
10013744:	d9400217 	ldw	r5,8(sp)
10013748:	d9000017 	ldw	r4,0(sp)
1001374c:	00800044 	movi	r2,1
10013750:	d8800615 	stw	r2,24(sp)
10013754:	00127980 	call	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013758:	d8800317 	ldw	r2,12(sp)
1001375c:	d9000017 	ldw	r4,0(sp)
10013760:	11800117 	ldw	r6,4(r2)
10013764:	11400017 	ldw	r5,0(r2)
10013768:	00127980 	call	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
1001376c:	d9000504 	addi	r4,sp,20
10013770:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
10013774:	d8800017 	ldw	r2,0(sp)
10013778:	dfc01317 	ldw	ra,76(sp)
1001377c:	df001217 	ldw	fp,72(sp)
10013780:	dec01404 	addi	sp,sp,80
10013784:	f800283a 	ret
10013788:	010400b4 	movhi	r4,4098
1001378c:	21166e04 	addi	r4,r4,22968
10013790:	000a0f40 	call	1000a0f4 <_ZSt20__throw_length_errorPKc>
10013794:	d8c00717 	ldw	r3,28(sp)
10013798:	d8800017 	ldw	r2,0(sp)
1001379c:	d8c00115 	stw	r3,4(sp)
100137a0:	10800017 	ldw	r2,0(r2)
100137a4:	d8c00417 	ldw	r3,16(sp)
100137a8:	18800326 	beq	r3,r2,100137b8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x130>
100137ac:	d8800017 	ldw	r2,0(sp)
100137b0:	11000017 	ldw	r4,0(r2)
100137b4:	00085040 	call	10008504 <_ZdlPv>
100137b8:	d9000117 	ldw	r4,4(sp)
100137bc:	00bfffc4 	movi	r2,-1
100137c0:	d8800615 	stw	r2,24(sp)
100137c4:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

100137c8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_>:
100137c8:	00c400b4 	movhi	r3,4098
100137cc:	00840074 	movhi	r2,4097
100137d0:	deffec04 	addi	sp,sp,-80
100137d4:	2011883a 	mov	r8,r4
100137d8:	18d1ad84 	addi	r3,r3,18102
100137dc:	108e2904 	addi	r2,r2,14500
100137e0:	01c40074 	movhi	r7,4097
100137e4:	39e2a704 	addi	r7,r7,-30052
100137e8:	d9000504 	addi	r4,sp,20
100137ec:	d8c00c15 	stw	r3,48(sp)
100137f0:	d8800e15 	stw	r2,56(sp)
100137f4:	d8c01204 	addi	r3,sp,72
100137f8:	40800204 	addi	r2,r8,8
100137fc:	d8c00d15 	stw	r3,52(sp)
10013800:	d8800315 	stw	r2,12(sp)
10013804:	d9400415 	stw	r5,16(sp)
10013808:	dfc01315 	stw	ra,76(sp)
1001380c:	df001215 	stw	fp,72(sp)
10013810:	d9c00b15 	stw	r7,44(sp)
10013814:	dec00f15 	stw	sp,60(sp)
10013818:	da000115 	stw	r8,4(sp)
1001381c:	d9800215 	stw	r6,8(sp)
10013820:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10013824:	d8c00117 	ldw	r3,4(sp)
10013828:	d9000317 	ldw	r4,12(sp)
1001382c:	d8800217 	ldw	r2,8(sp)
10013830:	18000115 	stw	zero,4(r3)
10013834:	19000015 	stw	r4,0(r3)
10013838:	18000205 	stb	zero,8(r3)
1001383c:	11400117 	ldw	r5,4(r2)
10013840:	1809883a 	mov	r4,r3
10013844:	00800044 	movi	r2,1
10013848:	29400044 	addi	r5,r5,1
1001384c:	d8800615 	stw	r2,24(sp)
10013850:	001121c0 	call	1001121c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
10013854:	d8c00117 	ldw	r3,4(sp)
10013858:	d8800407 	ldb	r2,16(sp)
1001385c:	01c00044 	movi	r7,1
10013860:	19400117 	ldw	r5,4(r3)
10013864:	000d883a 	mov	r6,zero
10013868:	d8800015 	stw	r2,0(sp)
1001386c:	1809883a 	mov	r4,r3
10013870:	001189c0 	call	1001189c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
10013874:	d8800217 	ldw	r2,8(sp)
10013878:	d9000117 	ldw	r4,4(sp)
1001387c:	11800117 	ldw	r6,4(r2)
10013880:	11400017 	ldw	r5,0(r2)
10013884:	00127980 	call	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013888:	d9000504 	addi	r4,sp,20
1001388c:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
10013890:	d8800117 	ldw	r2,4(sp)
10013894:	dfc01317 	ldw	ra,76(sp)
10013898:	df001217 	ldw	fp,72(sp)
1001389c:	dec01404 	addi	sp,sp,80
100138a0:	f800283a 	ret
100138a4:	d8c00117 	ldw	r3,4(sp)
100138a8:	d9000717 	ldw	r4,28(sp)
100138ac:	18800017 	ldw	r2,0(r3)
100138b0:	d9000115 	stw	r4,4(sp)
100138b4:	d9000317 	ldw	r4,12(sp)
100138b8:	20800226 	beq	r4,r2,100138c4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_RKS8_+0xfc>
100138bc:	1009883a 	mov	r4,r2
100138c0:	00085040 	call	10008504 <_ZdlPv>
100138c4:	d9000117 	ldw	r4,4(sp)
100138c8:	00bfffc4 	movi	r2,-1
100138cc:	d8800615 	stw	r2,24(sp)
100138d0:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

100138d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>:
100138d4:	defffb04 	addi	sp,sp,-20
100138d8:	dc000115 	stw	r16,4(sp)
100138dc:	3161c83a 	sub	r16,r6,r5
100138e0:	dc800315 	stw	r18,12(sp)
100138e4:	dc400215 	stw	r17,8(sp)
100138e8:	dfc00415 	stw	ra,16(sp)
100138ec:	dc000015 	stw	r16,0(sp)
100138f0:	80800430 	cmpltui	r2,r16,16
100138f4:	2825883a 	mov	r18,r5
100138f8:	2023883a 	mov	r17,r4
100138fc:	10001226 	beq	r2,zero,10013948 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x74>
10013900:	80c00058 	cmpnei	r3,r16,1
10013904:	20800017 	ldw	r2,0(r4)
10013908:	18000d1e 	bne	r3,zero,10013940 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x6c>
1001390c:	28c00003 	ldbu	r3,0(r5)
10013910:	10c00005 	stb	r3,0(r2)
10013914:	dc000017 	ldw	r16,0(sp)
10013918:	20800017 	ldw	r2,0(r4)
1001391c:	8c000115 	stw	r16,4(r17)
10013920:	1405883a 	add	r2,r2,r16
10013924:	10000005 	stb	zero,0(r2)
10013928:	dfc00417 	ldw	ra,16(sp)
1001392c:	dc800317 	ldw	r18,12(sp)
10013930:	dc400217 	ldw	r17,8(sp)
10013934:	dc000117 	ldw	r16,4(sp)
10013938:	dec00504 	addi	sp,sp,20
1001393c:	f800283a 	ret
10013940:	803ff626 	beq	r16,zero,1001391c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>
10013944:	00000606 	br	10013960 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x8c>
10013948:	000d883a 	mov	r6,zero
1001394c:	d80b883a 	mov	r5,sp
10013950:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013954:	d8c00017 	ldw	r3,0(sp)
10013958:	88800015 	stw	r2,0(r17)
1001395c:	88c00215 	stw	r3,8(r17)
10013960:	800d883a 	mov	r6,r16
10013964:	1009883a 	mov	r4,r2
10013968:	900b883a 	mov	r5,r18
1001396c:	00157f80 	call	100157f8 <memcpy>
10013970:	88800017 	ldw	r2,0(r17)
10013974:	dc000017 	ldw	r16,0(sp)
10013978:	003fe806 	br	1001391c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag+0x48>

1001397c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IN9__gnu_cxx17__normal_iteratorIPcS4_EEvEET_SA_RKS3_>:
1001397c:	20c00204 	addi	r3,r4,8
10013980:	000f883a 	mov	r7,zero
10013984:	20c00015 	stw	r3,0(r4)
10013988:	00138d41 	jmpi	100138d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPcS4_EEEEvT_SA_St20forward_iterator_tag>

1001398c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>:
1001398c:	defffb04 	addi	sp,sp,-20
10013990:	dc000115 	stw	r16,4(sp)
10013994:	3161c83a 	sub	r16,r6,r5
10013998:	dc800315 	stw	r18,12(sp)
1001399c:	dc400215 	stw	r17,8(sp)
100139a0:	dfc00415 	stw	ra,16(sp)
100139a4:	dc000015 	stw	r16,0(sp)
100139a8:	80800430 	cmpltui	r2,r16,16
100139ac:	2825883a 	mov	r18,r5
100139b0:	2023883a 	mov	r17,r4
100139b4:	10001226 	beq	r2,zero,10013a00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x74>
100139b8:	80c00058 	cmpnei	r3,r16,1
100139bc:	20800017 	ldw	r2,0(r4)
100139c0:	18000d1e 	bne	r3,zero,100139f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x6c>
100139c4:	28c00003 	ldbu	r3,0(r5)
100139c8:	10c00005 	stb	r3,0(r2)
100139cc:	dc000017 	ldw	r16,0(sp)
100139d0:	20800017 	ldw	r2,0(r4)
100139d4:	8c000115 	stw	r16,4(r17)
100139d8:	1405883a 	add	r2,r2,r16
100139dc:	10000005 	stb	zero,0(r2)
100139e0:	dfc00417 	ldw	ra,16(sp)
100139e4:	dc800317 	ldw	r18,12(sp)
100139e8:	dc400217 	ldw	r17,8(sp)
100139ec:	dc000117 	ldw	r16,4(sp)
100139f0:	dec00504 	addi	sp,sp,20
100139f4:	f800283a 	ret
100139f8:	803ff626 	beq	r16,zero,100139d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>
100139fc:	00000606 	br	10013a18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x8c>
10013a00:	000d883a 	mov	r6,zero
10013a04:	d80b883a 	mov	r5,sp
10013a08:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013a0c:	d8c00017 	ldw	r3,0(sp)
10013a10:	88800015 	stw	r2,0(r17)
10013a14:	88c00215 	stw	r3,8(r17)
10013a18:	800d883a 	mov	r6,r16
10013a1c:	1009883a 	mov	r4,r2
10013a20:	900b883a 	mov	r5,r18
10013a24:	00157f80 	call	100157f8 <memcpy>
10013a28:	88800017 	ldw	r2,0(r17)
10013a2c:	dc000017 	ldw	r16,0(sp)
10013a30:	003fe806 	br	100139d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag+0x48>

10013a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_>:
10013a34:	20c00204 	addi	r3,r4,8
10013a38:	20c00015 	stw	r3,0(r4)
10013a3c:	28800017 	ldw	r2,0(r5)
10013a40:	29800117 	ldw	r6,4(r5)
10013a44:	000f883a 	mov	r7,zero
10013a48:	100b883a 	mov	r5,r2
10013a4c:	118d883a 	add	r6,r2,r6
10013a50:	001398c1 	jmpi	1001398c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIN9__gnu_cxx17__normal_iteratorIPKcS4_EEEEvT_SB_St20forward_iterator_tag>

10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
10013a54:	defffb04 	addi	sp,sp,-20
10013a58:	dc400215 	stw	r17,8(sp)
10013a5c:	dfc00415 	stw	ra,16(sp)
10013a60:	dc800315 	stw	r18,12(sp)
10013a64:	dc000115 	stw	r16,4(sp)
10013a68:	2023883a 	mov	r17,r4
10013a6c:	28002226 	beq	r5,zero,10013af8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa4>
10013a70:	3161c83a 	sub	r16,r6,r5
10013a74:	dc000015 	stw	r16,0(sp)
10013a78:	80800430 	cmpltui	r2,r16,16
10013a7c:	2825883a 	mov	r18,r5
10013a80:	10001026 	beq	r2,zero,10013ac4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x70>
10013a84:	80c00058 	cmpnei	r3,r16,1
10013a88:	20800017 	ldw	r2,0(r4)
10013a8c:	18001e1e 	bne	r3,zero,10013b08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xb4>
10013a90:	28c00003 	ldbu	r3,0(r5)
10013a94:	10c00005 	stb	r3,0(r2)
10013a98:	dc000017 	ldw	r16,0(sp)
10013a9c:	20800017 	ldw	r2,0(r4)
10013aa0:	8c000115 	stw	r16,4(r17)
10013aa4:	1405883a 	add	r2,r2,r16
10013aa8:	10000005 	stb	zero,0(r2)
10013aac:	dfc00417 	ldw	ra,16(sp)
10013ab0:	dc800317 	ldw	r18,12(sp)
10013ab4:	dc400217 	ldw	r17,8(sp)
10013ab8:	dc000117 	ldw	r16,4(sp)
10013abc:	dec00504 	addi	sp,sp,20
10013ac0:	f800283a 	ret
10013ac4:	000d883a 	mov	r6,zero
10013ac8:	d80b883a 	mov	r5,sp
10013acc:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013ad0:	d8c00017 	ldw	r3,0(sp)
10013ad4:	88800015 	stw	r2,0(r17)
10013ad8:	88c00215 	stw	r3,8(r17)
10013adc:	800d883a 	mov	r6,r16
10013ae0:	1009883a 	mov	r4,r2
10013ae4:	900b883a 	mov	r5,r18
10013ae8:	00157f80 	call	100157f8 <memcpy>
10013aec:	88800017 	ldw	r2,0(r17)
10013af0:	dc000017 	ldw	r16,0(sp)
10013af4:	003fea06 	br	10013aa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10013af8:	3000051e 	bne	r6,zero,10013b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xbc>
10013afc:	20800017 	ldw	r2,0(r4)
10013b00:	0021883a 	mov	r16,zero
10013b04:	003fe606 	br	10013aa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10013b08:	803fe526 	beq	r16,zero,10013aa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x4c>
10013b0c:	003ff306 	br	10013adc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x88>
10013b10:	010400b4 	movhi	r4,4098
10013b14:	2116b804 	addi	r4,r4,23264
10013b18:	0009ef00 	call	10009ef0 <_ZSt19__throw_logic_errorPKc>

10013b1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
10013b1c:	20c00204 	addi	r3,r4,8
10013b20:	20c00015 	stw	r3,0(r4)
10013b24:	28800017 	ldw	r2,0(r5)
10013b28:	29800117 	ldw	r6,4(r5)
10013b2c:	000f883a 	mov	r7,zero
10013b30:	100b883a 	mov	r5,r2
10013b34:	118d883a 	add	r6,r2,r6
10013b38:	0013a541 	jmpi	10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

10013b3c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
10013b3c:	00c400b4 	movhi	r3,4098
10013b40:	00840074 	movhi	r2,4097
10013b44:	deffed04 	addi	sp,sp,-76
10013b48:	2011883a 	mov	r8,r4
10013b4c:	18d1af04 	addi	r3,r3,18108
10013b50:	108f0104 	addi	r2,r2,15364
10013b54:	01c40074 	movhi	r7,4097
10013b58:	39e2a704 	addi	r7,r7,-30052
10013b5c:	d9000404 	addi	r4,sp,16
10013b60:	d8c00b15 	stw	r3,44(sp)
10013b64:	d8800d15 	stw	r2,52(sp)
10013b68:	d8c01104 	addi	r3,sp,68
10013b6c:	40800204 	addi	r2,r8,8
10013b70:	dfc01215 	stw	ra,72(sp)
10013b74:	d9c00a15 	stw	r7,40(sp)
10013b78:	d8c00c15 	stw	r3,48(sp)
10013b7c:	da000015 	stw	r8,0(sp)
10013b80:	d8800115 	stw	r2,4(sp)
10013b84:	d9400215 	stw	r5,8(sp)
10013b88:	d9800315 	stw	r6,12(sp)
10013b8c:	df001115 	stw	fp,68(sp)
10013b90:	dec00e15 	stw	sp,56(sp)
10013b94:	001437c0 	call	1001437c <_Unwind_SjLj_Register>
10013b98:	d8c00017 	ldw	r3,0(sp)
10013b9c:	d8800117 	ldw	r2,4(sp)
10013ba0:	d9000217 	ldw	r4,8(sp)
10013ba4:	000f883a 	mov	r7,zero
10013ba8:	18800015 	stw	r2,0(r3)
10013bac:	20800017 	ldw	r2,0(r4)
10013bb0:	21800117 	ldw	r6,4(r4)
10013bb4:	1809883a 	mov	r4,r3
10013bb8:	100b883a 	mov	r5,r2
10013bbc:	118d883a 	add	r6,r2,r6
10013bc0:	00bfffc4 	movi	r2,-1
10013bc4:	d8800515 	stw	r2,20(sp)
10013bc8:	0013a540 	call	10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
10013bcc:	00800044 	movi	r2,1
10013bd0:	d8800515 	stw	r2,20(sp)
10013bd4:	d8800317 	ldw	r2,12(sp)
10013bd8:	d9000017 	ldw	r4,0(sp)
10013bdc:	11800117 	ldw	r6,4(r2)
10013be0:	11400017 	ldw	r5,0(r2)
10013be4:	00127980 	call	10012798 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
10013be8:	d9000404 	addi	r4,sp,16
10013bec:	00143940 	call	10014394 <_Unwind_SjLj_Unregister>
10013bf0:	d8800017 	ldw	r2,0(sp)
10013bf4:	dfc01217 	ldw	ra,72(sp)
10013bf8:	df001117 	ldw	fp,68(sp)
10013bfc:	dec01304 	addi	sp,sp,76
10013c00:	f800283a 	ret
10013c04:	d8c00017 	ldw	r3,0(sp)
10013c08:	d9000617 	ldw	r4,24(sp)
10013c0c:	18800017 	ldw	r2,0(r3)
10013c10:	d9000015 	stw	r4,0(sp)
10013c14:	d9000117 	ldw	r4,4(sp)
10013c18:	20800226 	beq	r4,r2,10013c24 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_+0xe8>
10013c1c:	1009883a 	mov	r4,r2
10013c20:	00085040 	call	10008504 <_ZdlPv>
10013c24:	d9000017 	ldw	r4,0(sp)
10013c28:	00bfffc4 	movi	r2,-1
10013c2c:	d8800515 	stw	r2,20(sp)
10013c30:	00145640 	call	10014564 <_Unwind_SjLj_Resume>

10013c34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
10013c34:	20c00204 	addi	r3,r4,8
10013c38:	000f883a 	mov	r7,zero
10013c3c:	20c00015 	stw	r3,0(r4)
10013c40:	0013a541 	jmpi	10013a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>

10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
10013c44:	defffb04 	addi	sp,sp,-20
10013c48:	dc400215 	stw	r17,8(sp)
10013c4c:	dfc00415 	stw	ra,16(sp)
10013c50:	dc800315 	stw	r18,12(sp)
10013c54:	dc000115 	stw	r16,4(sp)
10013c58:	2023883a 	mov	r17,r4
10013c5c:	28002226 	beq	r5,zero,10013ce8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa4>
10013c60:	3161c83a 	sub	r16,r6,r5
10013c64:	dc000015 	stw	r16,0(sp)
10013c68:	80800430 	cmpltui	r2,r16,16
10013c6c:	2825883a 	mov	r18,r5
10013c70:	10001026 	beq	r2,zero,10013cb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x70>
10013c74:	80c00058 	cmpnei	r3,r16,1
10013c78:	20800017 	ldw	r2,0(r4)
10013c7c:	18001e1e 	bne	r3,zero,10013cf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xb4>
10013c80:	28c00003 	ldbu	r3,0(r5)
10013c84:	10c00005 	stb	r3,0(r2)
10013c88:	dc000017 	ldw	r16,0(sp)
10013c8c:	20800017 	ldw	r2,0(r4)
10013c90:	8c000115 	stw	r16,4(r17)
10013c94:	1405883a 	add	r2,r2,r16
10013c98:	10000005 	stb	zero,0(r2)
10013c9c:	dfc00417 	ldw	ra,16(sp)
10013ca0:	dc800317 	ldw	r18,12(sp)
10013ca4:	dc400217 	ldw	r17,8(sp)
10013ca8:	dc000117 	ldw	r16,4(sp)
10013cac:	dec00504 	addi	sp,sp,20
10013cb0:	f800283a 	ret
10013cb4:	000d883a 	mov	r6,zero
10013cb8:	d80b883a 	mov	r5,sp
10013cbc:	001095c0 	call	1001095c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
10013cc0:	d8c00017 	ldw	r3,0(sp)
10013cc4:	88800015 	stw	r2,0(r17)
10013cc8:	88c00215 	stw	r3,8(r17)
10013ccc:	800d883a 	mov	r6,r16
10013cd0:	1009883a 	mov	r4,r2
10013cd4:	900b883a 	mov	r5,r18
10013cd8:	00157f80 	call	100157f8 <memcpy>
10013cdc:	88800017 	ldw	r2,0(r17)
10013ce0:	dc000017 	ldw	r16,0(sp)
10013ce4:	003fea06 	br	10013c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013ce8:	3000051e 	bne	r6,zero,10013d00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbc>
10013cec:	20800017 	ldw	r2,0(r4)
10013cf0:	0021883a 	mov	r16,zero
10013cf4:	003fe606 	br	10013c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013cf8:	803fe526 	beq	r16,zero,10013c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x4c>
10013cfc:	003ff306 	br	10013ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x88>
10013d00:	010400b4 	movhi	r4,4098
10013d04:	2116b804 	addi	r4,r4,23264
10013d08:	0009ef00 	call	10009ef0 <_ZSt19__throw_logic_errorPKc>

10013d0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_>:
10013d0c:	20c00204 	addi	r3,r4,8
10013d10:	20c00015 	stw	r3,0(r4)
10013d14:	28800117 	ldw	r2,4(r5)
10013d18:	29400017 	ldw	r5,0(r5)
10013d1c:	11800536 	bltu	r2,r6,10013d34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jRKS3_+0x28>
10013d20:	3007883a 	mov	r3,r6
10013d24:	000f883a 	mov	r7,zero
10013d28:	288d883a 	add	r6,r5,r2
10013d2c:	28cb883a 	add	r5,r5,r3
10013d30:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013d34:	014400b4 	movhi	r5,4098
10013d38:	010400b4 	movhi	r4,4098
10013d3c:	deffff04 	addi	sp,sp,-4
10013d40:	100f883a 	mov	r7,r2
10013d44:	29568504 	addi	r5,r5,23060
10013d48:	21161f04 	addi	r4,r4,22652
10013d4c:	dfc00015 	stw	ra,0(sp)
10013d50:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10013d54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj>:
10013d54:	20800204 	addi	r2,r4,8
10013d58:	20800015 	stw	r2,0(r4)
10013d5c:	28800117 	ldw	r2,4(r5)
10013d60:	29400017 	ldw	r5,0(r5)
10013d64:	11800b36 	bltu	r2,r6,10013d94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x40>
10013d68:	3007883a 	mov	r3,r6
10013d6c:	118dc83a 	sub	r6,r2,r6
10013d70:	28cb883a 	add	r5,r5,r3
10013d74:	39800336 	bltu	r7,r6,10013d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jj+0x30>
10013d78:	000f883a 	mov	r7,zero
10013d7c:	298d883a 	add	r6,r5,r6
10013d80:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013d84:	380d883a 	mov	r6,r7
10013d88:	298d883a 	add	r6,r5,r6
10013d8c:	000f883a 	mov	r7,zero
10013d90:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013d94:	014400b4 	movhi	r5,4098
10013d98:	010400b4 	movhi	r4,4098
10013d9c:	deffff04 	addi	sp,sp,-4
10013da0:	100f883a 	mov	r7,r2
10013da4:	29568504 	addi	r5,r5,23060
10013da8:	21161f04 	addi	r4,r4,22652
10013dac:	dfc00015 	stw	ra,0(sp)
10013db0:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10013db4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_>:
10013db4:	20800204 	addi	r2,r4,8
10013db8:	20800015 	stw	r2,0(r4)
10013dbc:	28800117 	ldw	r2,4(r5)
10013dc0:	29400017 	ldw	r5,0(r5)
10013dc4:	11800b36 	bltu	r2,r6,10013df4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x40>
10013dc8:	3007883a 	mov	r3,r6
10013dcc:	118dc83a 	sub	r6,r2,r6
10013dd0:	28cb883a 	add	r5,r5,r3
10013dd4:	39800336 	bltu	r7,r6,10013de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_jjRKS3_+0x30>
10013dd8:	000f883a 	mov	r7,zero
10013ddc:	298d883a 	add	r6,r5,r6
10013de0:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013de4:	380d883a 	mov	r6,r7
10013de8:	298d883a 	add	r6,r5,r6
10013dec:	000f883a 	mov	r7,zero
10013df0:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013df4:	014400b4 	movhi	r5,4098
10013df8:	010400b4 	movhi	r4,4098
10013dfc:	deffff04 	addi	sp,sp,-4
10013e00:	100f883a 	mov	r7,r2
10013e04:	2956c304 	addi	r5,r5,23308
10013e08:	21161f04 	addi	r4,r4,22652
10013e0c:	dfc00015 	stw	ra,0(sp)
10013e10:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10013e14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcjRKS3_>:
10013e14:	20c00204 	addi	r3,r4,8
10013e18:	000f883a 	mov	r7,zero
10013e1c:	298d883a 	add	r6,r5,r6
10013e20:	20c00015 	stw	r3,0(r4)
10013e24:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013e28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
10013e28:	defffd04 	addi	sp,sp,-12
10013e2c:	dc000115 	stw	r16,4(sp)
10013e30:	dfc00215 	stw	ra,8(sp)
10013e34:	20800204 	addi	r2,r4,8
10013e38:	20800015 	stw	r2,0(r4)
10013e3c:	2021883a 	mov	r16,r4
10013e40:	28000b26 	beq	r5,zero,10013e70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x48>
10013e44:	2809883a 	mov	r4,r5
10013e48:	d9400015 	stw	r5,0(sp)
10013e4c:	00164b40 	call	100164b4 <strlen>
10013e50:	d9400017 	ldw	r5,0(sp)
10013e54:	288d883a 	add	r6,r5,r2
10013e58:	000f883a 	mov	r7,zero
10013e5c:	8009883a 	mov	r4,r16
10013e60:	dfc00217 	ldw	ra,8(sp)
10013e64:	dc000117 	ldw	r16,4(sp)
10013e68:	dec00304 	addi	sp,sp,12
10013e6c:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013e70:	01bfffc4 	movi	r6,-1
10013e74:	003ff806 	br	10013e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x30>

10013e78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_>:
10013e78:	20c00204 	addi	r3,r4,8
10013e7c:	000f883a 	mov	r7,zero
10013e80:	298d883a 	add	r6,r5,r6
10013e84:	20c00015 	stw	r3,0(r4)
10013e88:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013e8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPKcvEET_S8_RKS3_>:
10013e8c:	20c00204 	addi	r3,r4,8
10013e90:	000f883a 	mov	r7,zero
10013e94:	20c00015 	stw	r3,0(r4)
10013e98:	0013c441 	jmpi	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>

10013e9c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj>:
10013e9c:	defffe04 	addi	sp,sp,-8
10013ea0:	dfc00115 	stw	ra,4(sp)
10013ea4:	dc000015 	stw	r16,0(sp)
10013ea8:	28800117 	ldw	r2,4(r5)
10013eac:	11801b36 	bltu	r2,r6,10013f1c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x80>
10013eb0:	20800204 	addi	r2,r4,8
10013eb4:	20800015 	stw	r2,0(r4)
10013eb8:	28c00117 	ldw	r3,4(r5)
10013ebc:	3011883a 	mov	r8,r6
10013ec0:	2021883a 	mov	r16,r4
10013ec4:	29400017 	ldw	r5,0(r5)
10013ec8:	19800e36 	bltu	r3,r6,10013f04 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x68>
10013ecc:	198dc83a 	sub	r6,r3,r6
10013ed0:	2a0b883a 	add	r5,r5,r8
10013ed4:	39800936 	bltu	r7,r6,10013efc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x60>
10013ed8:	000f883a 	mov	r7,zero
10013edc:	298d883a 	add	r6,r5,r6
10013ee0:	8009883a 	mov	r4,r16
10013ee4:	0013c440 	call	10013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
10013ee8:	8005883a 	mov	r2,r16
10013eec:	dfc00117 	ldw	ra,4(sp)
10013ef0:	dc000017 	ldw	r16,0(sp)
10013ef4:	dec00204 	addi	sp,sp,8
10013ef8:	f800283a 	ret
10013efc:	380d883a 	mov	r6,r7
10013f00:	003ff506 	br	10013ed8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj+0x3c>
10013f04:	014400b4 	movhi	r5,4098
10013f08:	010400b4 	movhi	r4,4098
10013f0c:	180f883a 	mov	r7,r3
10013f10:	29568504 	addi	r5,r5,23060
10013f14:	21161f04 	addi	r4,r4,22652
10013f18:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>
10013f1c:	014400b4 	movhi	r5,4098
10013f20:	010400b4 	movhi	r4,4098
10013f24:	100f883a 	mov	r7,r2
10013f28:	29568c04 	addi	r5,r5,23088
10013f2c:	21161f04 	addi	r4,r4,22652
10013f30:	000a24c0 	call	1000a24c <_ZSt24__throw_out_of_range_fmtPKcz>

10013f34 <_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
10013f34:	20800017 	ldw	r2,0(r4)
10013f38:	28c00017 	ldw	r3,0(r5)
10013f3c:	10c5003a 	cmpeq	r2,r2,r3
10013f40:	f800283a 	ret

10013f44 <_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_>:
10013f44:	20800017 	ldw	r2,0(r4)
10013f48:	28c00017 	ldw	r3,0(r5)
10013f4c:	10c5003a 	cmpeq	r2,r2,r3
10013f50:	f800283a 	ret

10013f54 <__muldi3>:
10013f54:	20bfffcc 	andi	r2,r4,65535
10013f58:	2012d43a 	srli	r9,r4,16
10013f5c:	32bfffcc 	andi	r10,r6,65535
10013f60:	3018d43a 	srli	r12,r6,16
10013f64:	1297383a 	mul	r11,r2,r10
10013f68:	4a95383a 	mul	r10,r9,r10
10013f6c:	1311383a 	mul	r8,r2,r12
10013f70:	5804d43a 	srli	r2,r11,16
10013f74:	4b13383a 	mul	r9,r9,r12
10013f78:	4291883a 	add	r8,r8,r10
10013f7c:	1205883a 	add	r2,r2,r8
10013f80:	1280022e 	bgeu	r2,r10,10013f8c <__muldi3+0x38>
10013f84:	00c00074 	movhi	r3,1
10013f88:	48d3883a 	add	r9,r9,r3
10013f8c:	1010d43a 	srli	r8,r2,16
10013f90:	21c9383a 	mul	r4,r4,r7
10013f94:	314d383a 	mul	r6,r6,r5
10013f98:	1004943a 	slli	r2,r2,16
10013f9c:	4253883a 	add	r9,r8,r9
10013fa0:	5affffcc 	andi	r11,r11,65535
10013fa4:	2249883a 	add	r4,r4,r9
10013fa8:	12c5883a 	add	r2,r2,r11
10013fac:	2187883a 	add	r3,r4,r6
10013fb0:	f800283a 	ret

10013fb4 <__divsi3>:
10013fb4:	20001a16 	blt	r4,zero,10014020 <__divsi3+0x6c>
10013fb8:	000f883a 	mov	r7,zero
10013fbc:	2800020e 	bge	r5,zero,10013fc8 <__divsi3+0x14>
10013fc0:	014bc83a 	sub	r5,zero,r5
10013fc4:	39c0005c 	xori	r7,r7,1
10013fc8:	200d883a 	mov	r6,r4
10013fcc:	00c00044 	movi	r3,1
10013fd0:	2900092e 	bgeu	r5,r4,10013ff8 <__divsi3+0x44>
10013fd4:	00800804 	movi	r2,32
10013fd8:	00c00044 	movi	r3,1
10013fdc:	00000106 	br	10013fe4 <__divsi3+0x30>
10013fe0:	10001226 	beq	r2,zero,1001402c <__divsi3+0x78>
10013fe4:	294b883a 	add	r5,r5,r5
10013fe8:	10bfffc4 	addi	r2,r2,-1
10013fec:	18c7883a 	add	r3,r3,r3
10013ff0:	293ffb36 	bltu	r5,r4,10013fe0 <__divsi3+0x2c>
10013ff4:	18000d26 	beq	r3,zero,1001402c <__divsi3+0x78>
10013ff8:	0005883a 	mov	r2,zero
10013ffc:	31400236 	bltu	r6,r5,10014008 <__divsi3+0x54>
10014000:	314dc83a 	sub	r6,r6,r5
10014004:	10c4b03a 	or	r2,r2,r3
10014008:	1806d07a 	srli	r3,r3,1
1001400c:	280ad07a 	srli	r5,r5,1
10014010:	183ffa1e 	bne	r3,zero,10013ffc <__divsi3+0x48>
10014014:	38000126 	beq	r7,zero,1001401c <__divsi3+0x68>
10014018:	0085c83a 	sub	r2,zero,r2
1001401c:	f800283a 	ret
10014020:	0109c83a 	sub	r4,zero,r4
10014024:	01c00044 	movi	r7,1
10014028:	003fe406 	br	10013fbc <__divsi3+0x8>
1001402c:	0005883a 	mov	r2,zero
10014030:	003ff806 	br	10014014 <__divsi3+0x60>

10014034 <__modsi3>:
10014034:	20001a16 	blt	r4,zero,100140a0 <__modsi3+0x6c>
10014038:	000f883a 	mov	r7,zero
1001403c:	2005883a 	mov	r2,r4
10014040:	2800010e 	bge	r5,zero,10014048 <__modsi3+0x14>
10014044:	014bc83a 	sub	r5,zero,r5
10014048:	00c00044 	movi	r3,1
1001404c:	2900092e 	bgeu	r5,r4,10014074 <__modsi3+0x40>
10014050:	01800804 	movi	r6,32
10014054:	00c00044 	movi	r3,1
10014058:	00000106 	br	10014060 <__modsi3+0x2c>
1001405c:	30000d26 	beq	r6,zero,10014094 <__modsi3+0x60>
10014060:	294b883a 	add	r5,r5,r5
10014064:	31bfffc4 	addi	r6,r6,-1
10014068:	18c7883a 	add	r3,r3,r3
1001406c:	293ffb36 	bltu	r5,r4,1001405c <__modsi3+0x28>
10014070:	18000826 	beq	r3,zero,10014094 <__modsi3+0x60>
10014074:	1806d07a 	srli	r3,r3,1
10014078:	11400136 	bltu	r2,r5,10014080 <__modsi3+0x4c>
1001407c:	1145c83a 	sub	r2,r2,r5
10014080:	280ad07a 	srli	r5,r5,1
10014084:	183ffb1e 	bne	r3,zero,10014074 <__modsi3+0x40>
10014088:	38000126 	beq	r7,zero,10014090 <__modsi3+0x5c>
1001408c:	0085c83a 	sub	r2,zero,r2
10014090:	f800283a 	ret
10014094:	2005883a 	mov	r2,r4
10014098:	383ffd26 	beq	r7,zero,10014090 <__modsi3+0x5c>
1001409c:	003ffb06 	br	1001408c <__modsi3+0x58>
100140a0:	0109c83a 	sub	r4,zero,r4
100140a4:	01c00044 	movi	r7,1
100140a8:	003fe406 	br	1001403c <__modsi3+0x8>

100140ac <__udivsi3>:
100140ac:	200d883a 	mov	r6,r4
100140b0:	2900152e 	bgeu	r5,r4,10014108 <__udivsi3+0x5c>
100140b4:	28001416 	blt	r5,zero,10014108 <__udivsi3+0x5c>
100140b8:	00800804 	movi	r2,32
100140bc:	00c00044 	movi	r3,1
100140c0:	00000206 	br	100140cc <__udivsi3+0x20>
100140c4:	10000e26 	beq	r2,zero,10014100 <__udivsi3+0x54>
100140c8:	28000516 	blt	r5,zero,100140e0 <__udivsi3+0x34>
100140cc:	294b883a 	add	r5,r5,r5
100140d0:	10bfffc4 	addi	r2,r2,-1
100140d4:	18c7883a 	add	r3,r3,r3
100140d8:	293ffa36 	bltu	r5,r4,100140c4 <__udivsi3+0x18>
100140dc:	18000826 	beq	r3,zero,10014100 <__udivsi3+0x54>
100140e0:	0005883a 	mov	r2,zero
100140e4:	31400236 	bltu	r6,r5,100140f0 <__udivsi3+0x44>
100140e8:	314dc83a 	sub	r6,r6,r5
100140ec:	10c4b03a 	or	r2,r2,r3
100140f0:	1806d07a 	srli	r3,r3,1
100140f4:	280ad07a 	srli	r5,r5,1
100140f8:	183ffa1e 	bne	r3,zero,100140e4 <__udivsi3+0x38>
100140fc:	f800283a 	ret
10014100:	0005883a 	mov	r2,zero
10014104:	f800283a 	ret
10014108:	00c00044 	movi	r3,1
1001410c:	003ff406 	br	100140e0 <__udivsi3+0x34>

10014110 <__umodsi3>:
10014110:	2005883a 	mov	r2,r4
10014114:	2900132e 	bgeu	r5,r4,10014164 <__umodsi3+0x54>
10014118:	28001216 	blt	r5,zero,10014164 <__umodsi3+0x54>
1001411c:	01800804 	movi	r6,32
10014120:	00c00044 	movi	r3,1
10014124:	00000206 	br	10014130 <__umodsi3+0x20>
10014128:	30000c26 	beq	r6,zero,1001415c <__umodsi3+0x4c>
1001412c:	28000516 	blt	r5,zero,10014144 <__umodsi3+0x34>
10014130:	294b883a 	add	r5,r5,r5
10014134:	31bfffc4 	addi	r6,r6,-1
10014138:	18c7883a 	add	r3,r3,r3
1001413c:	293ffa36 	bltu	r5,r4,10014128 <__umodsi3+0x18>
10014140:	18000626 	beq	r3,zero,1001415c <__umodsi3+0x4c>
10014144:	1806d07a 	srli	r3,r3,1
10014148:	11400136 	bltu	r2,r5,10014150 <__umodsi3+0x40>
1001414c:	1145c83a 	sub	r2,r2,r5
10014150:	280ad07a 	srli	r5,r5,1
10014154:	183ffb1e 	bne	r3,zero,10014144 <__umodsi3+0x34>
10014158:	f800283a 	ret
1001415c:	2005883a 	mov	r2,r4
10014160:	f800283a 	ret
10014164:	00c00044 	movi	r3,1
10014168:	003ff606 	br	10014144 <__umodsi3+0x34>

1001416c <_Unwind_ForcedUnwind_Phase2>:
1001416c:	28800017 	ldw	r2,0(r5)
10014170:	defff504 	addi	sp,sp,-44
10014174:	dd400815 	stw	r21,32(sp)
10014178:	dd000715 	stw	r20,28(sp)
1001417c:	dcc00615 	stw	r19,24(sp)
10014180:	dc800515 	stw	r18,20(sp)
10014184:	dc400415 	stw	r17,16(sp)
10014188:	dc000315 	stw	r16,12(sp)
1001418c:	dfc00a15 	stw	ra,40(sp)
10014190:	dd800915 	stw	r22,36(sp)
10014194:	302b883a 	mov	r21,r6
10014198:	2823883a 	mov	r17,r5
1001419c:	2021883a 	mov	r16,r4
100141a0:	24c00317 	ldw	r19,12(r4)
100141a4:	25000417 	ldw	r20,16(r4)
100141a8:	21800017 	ldw	r6,0(r4)
100141ac:	21c00117 	ldw	r7,4(r4)
100141b0:	04800044 	movi	r18,1
100141b4:	10001d26 	beq	r2,zero,1001422c <_Unwind_ForcedUnwind_Phase2+0xc0>
100141b8:	15800617 	ldw	r22,24(r2)
100141bc:	01400284 	movi	r5,10
100141c0:	01000044 	movi	r4,1
100141c4:	dd000215 	stw	r20,8(sp)
100141c8:	dc400115 	stw	r17,4(sp)
100141cc:	dc000015 	stw	r16,0(sp)
100141d0:	983ee83a 	callr	r19
100141d4:	01400284 	movi	r5,10
100141d8:	01000044 	movi	r4,1
100141dc:	10001a1e 	bne	r2,zero,10014248 <_Unwind_ForcedUnwind_Phase2+0xdc>
100141e0:	81800017 	ldw	r6,0(r16)
100141e4:	81c00117 	ldw	r7,4(r16)
100141e8:	b0000926 	beq	r22,zero,10014210 <_Unwind_ForcedUnwind_Phase2+0xa4>
100141ec:	dc400115 	stw	r17,4(sp)
100141f0:	dc000015 	stw	r16,0(sp)
100141f4:	b03ee83a 	callr	r22
100141f8:	10c001e0 	cmpeqi	r3,r2,7
100141fc:	11000218 	cmpnei	r4,r2,8
10014200:	18001d1e 	bne	r3,zero,10014278 <_Unwind_ForcedUnwind_Phase2+0x10c>
10014204:	2000101e 	bne	r4,zero,10014248 <_Unwind_ForcedUnwind_Phase2+0xdc>
10014208:	81800017 	ldw	r6,0(r16)
1001420c:	81c00117 	ldw	r7,4(r16)
10014210:	88800017 	ldw	r2,0(r17)
10014214:	00c400f4 	movhi	r3,4099
10014218:	94800044 	addi	r18,r18,1
1001421c:	10800017 	ldw	r2,0(r2)
10014220:	18aaa915 	stw	r2,-21852(r3)
10014224:	88800015 	stw	r2,0(r17)
10014228:	103fe31e 	bne	r2,zero,100141b8 <_Unwind_ForcedUnwind_Phase2+0x4c>
1001422c:	dd000215 	stw	r20,8(sp)
10014230:	dc400115 	stw	r17,4(sp)
10014234:	dc000015 	stw	r16,0(sp)
10014238:	01400684 	movi	r5,26
1001423c:	01000044 	movi	r4,1
10014240:	983ee83a 	callr	r19
10014244:	10000b26 	beq	r2,zero,10014274 <_Unwind_ForcedUnwind_Phase2+0x108>
10014248:	00800084 	movi	r2,2
1001424c:	dfc00a17 	ldw	ra,40(sp)
10014250:	dd800917 	ldw	r22,36(sp)
10014254:	dd400817 	ldw	r21,32(sp)
10014258:	dd000717 	ldw	r20,28(sp)
1001425c:	dcc00617 	ldw	r19,24(sp)
10014260:	dc800517 	ldw	r18,20(sp)
10014264:	dc400417 	ldw	r17,16(sp)
10014268:	dc000317 	ldw	r16,12(sp)
1001426c:	dec00b04 	addi	sp,sp,44
10014270:	f800283a 	ret
10014274:	00800144 	movi	r2,5
10014278:	ac800015 	stw	r18,0(r21)
1001427c:	003ff306 	br	1001424c <_Unwind_ForcedUnwind_Phase2+0xe0>

10014280 <_Unwind_RaiseException_Phase2>:
10014280:	28800017 	ldw	r2,0(r5)
10014284:	10002f26 	beq	r2,zero,10014344 <_Unwind_RaiseException_Phase2+0xc4>
10014288:	defff804 	addi	sp,sp,-32
1001428c:	dcc00515 	stw	r19,20(sp)
10014290:	dc800415 	stw	r18,16(sp)
10014294:	dc400315 	stw	r17,12(sp)
10014298:	dc000215 	stw	r16,8(sp)
1001429c:	dfc00715 	stw	ra,28(sp)
100142a0:	dd000615 	stw	r20,24(sp)
100142a4:	3025883a 	mov	r18,r6
100142a8:	2021883a 	mov	r16,r4
100142ac:	2823883a 	mov	r17,r5
100142b0:	04c00044 	movi	r19,1
100142b4:	00001306 	br	10014304 <_Unwind_RaiseException_Phase2+0x84>
100142b8:	18000e26 	beq	r3,zero,100142f4 <_Unwind_RaiseException_Phase2+0x74>
100142bc:	01400084 	movi	r5,2
100142c0:	0029883a 	mov	r20,zero
100142c4:	81800017 	ldw	r6,0(r16)
100142c8:	81c00117 	ldw	r7,4(r16)
100142cc:	01000044 	movi	r4,1
100142d0:	dc400115 	stw	r17,4(sp)
100142d4:	dc000015 	stw	r16,0(sp)
100142d8:	183ee83a 	callr	r3
100142dc:	10c001e0 	cmpeqi	r3,r2,7
100142e0:	18001a1e 	bne	r3,zero,1001434c <_Unwind_RaiseException_Phase2+0xcc>
100142e4:	10800218 	cmpnei	r2,r2,8
100142e8:	10000d1e 	bne	r2,zero,10014320 <_Unwind_RaiseException_Phase2+0xa0>
100142ec:	a000191e 	bne	r20,zero,10014354 <_Unwind_RaiseException_Phase2+0xd4>
100142f0:	88800017 	ldw	r2,0(r17)
100142f4:	10800017 	ldw	r2,0(r2)
100142f8:	9cc00044 	addi	r19,r19,1
100142fc:	88800015 	stw	r2,0(r17)
10014300:	10000726 	beq	r2,zero,10014320 <_Unwind_RaiseException_Phase2+0xa0>
10014304:	81000417 	ldw	r4,16(r16)
10014308:	10c00617 	ldw	r3,24(r2)
1001430c:	113fea1e 	bne	r2,r4,100142b8 <_Unwind_RaiseException_Phase2+0x38>
10014310:	18001026 	beq	r3,zero,10014354 <_Unwind_RaiseException_Phase2+0xd4>
10014314:	01400184 	movi	r5,6
10014318:	05000104 	movi	r20,4
1001431c:	003fe906 	br	100142c4 <_Unwind_RaiseException_Phase2+0x44>
10014320:	00800084 	movi	r2,2
10014324:	dfc00717 	ldw	ra,28(sp)
10014328:	dd000617 	ldw	r20,24(sp)
1001432c:	dcc00517 	ldw	r19,20(sp)
10014330:	dc800417 	ldw	r18,16(sp)
10014334:	dc400317 	ldw	r17,12(sp)
10014338:	dc000217 	ldw	r16,8(sp)
1001433c:	dec00804 	addi	sp,sp,32
10014340:	f800283a 	ret
10014344:	00800084 	movi	r2,2
10014348:	f800283a 	ret
1001434c:	94c00015 	stw	r19,0(r18)
10014350:	003ff406 	br	10014324 <_Unwind_RaiseException_Phase2+0xa4>
10014354:	00146940 	call	10014694 <abort>

10014358 <uw_install_context.isra.4>:
10014358:	20c00917 	ldw	r3,36(r4)
1001435c:	deffff04 	addi	sp,sp,-4
10014360:	df000015 	stw	fp,0(sp)
10014364:	014400f4 	movhi	r5,4099
10014368:	d839883a 	mov	fp,sp
1001436c:	292aa915 	stw	r4,-21852(r5)
10014370:	27000817 	ldw	fp,32(r4)
10014374:	26c00a17 	ldw	sp,40(r4)
10014378:	1800683a 	jmp	r3

1001437c <_Unwind_SjLj_Register>:
1001437c:	008400f4 	movhi	r2,4099
10014380:	10aaa917 	ldw	r2,-21852(r2)
10014384:	20800015 	stw	r2,0(r4)
10014388:	008400f4 	movhi	r2,4099
1001438c:	112aa915 	stw	r4,-21852(r2)
10014390:	f800283a 	ret

10014394 <_Unwind_SjLj_Unregister>:
10014394:	20c00017 	ldw	r3,0(r4)
10014398:	008400f4 	movhi	r2,4099
1001439c:	10eaa915 	stw	r3,-21852(r2)
100143a0:	f800283a 	ret

100143a4 <_Unwind_GetGR>:
100143a4:	29400084 	addi	r5,r5,2
100143a8:	20800017 	ldw	r2,0(r4)
100143ac:	280a90ba 	slli	r5,r5,2
100143b0:	1145883a 	add	r2,r2,r5
100143b4:	10800017 	ldw	r2,0(r2)
100143b8:	f800283a 	ret

100143bc <_Unwind_GetCFA>:
100143bc:	20800017 	ldw	r2,0(r4)
100143c0:	10000226 	beq	r2,zero,100143cc <_Unwind_GetCFA+0x10>
100143c4:	10800a17 	ldw	r2,40(r2)
100143c8:	f800283a 	ret
100143cc:	0005883a 	mov	r2,zero
100143d0:	f800283a 	ret

100143d4 <_Unwind_SetGR>:
100143d4:	29400084 	addi	r5,r5,2
100143d8:	20800017 	ldw	r2,0(r4)
100143dc:	280a90ba 	slli	r5,r5,2
100143e0:	1145883a 	add	r2,r2,r5
100143e4:	11800015 	stw	r6,0(r2)
100143e8:	f800283a 	ret

100143ec <_Unwind_GetIP>:
100143ec:	20800017 	ldw	r2,0(r4)
100143f0:	10800117 	ldw	r2,4(r2)
100143f4:	10800044 	addi	r2,r2,1
100143f8:	f800283a 	ret

100143fc <_Unwind_GetIPInfo>:
100143fc:	20800017 	ldw	r2,0(r4)
10014400:	28000015 	stw	zero,0(r5)
10014404:	10000326 	beq	r2,zero,10014414 <_Unwind_GetIPInfo+0x18>
10014408:	10800117 	ldw	r2,4(r2)
1001440c:	10800044 	addi	r2,r2,1
10014410:	f800283a 	ret
10014414:	0005883a 	mov	r2,zero
10014418:	f800283a 	ret

1001441c <_Unwind_SetIP>:
1001441c:	20800017 	ldw	r2,0(r4)
10014420:	297fffc4 	addi	r5,r5,-1
10014424:	11400115 	stw	r5,4(r2)
10014428:	f800283a 	ret

1001442c <_Unwind_GetLanguageSpecificData>:
1001442c:	20800017 	ldw	r2,0(r4)
10014430:	10800717 	ldw	r2,28(r2)
10014434:	f800283a 	ret

10014438 <_Unwind_GetRegionStart>:
10014438:	0005883a 	mov	r2,zero
1001443c:	f800283a 	ret

10014440 <_Unwind_FindEnclosingFunction>:
10014440:	0005883a 	mov	r2,zero
10014444:	f800283a 	ret

10014448 <_Unwind_GetDataRelBase>:
10014448:	0005883a 	mov	r2,zero
1001444c:	f800283a 	ret

10014450 <_Unwind_GetTextRelBase>:
10014450:	0005883a 	mov	r2,zero
10014454:	f800283a 	ret

10014458 <_Unwind_SjLj_RaiseException>:
10014458:	defff804 	addi	sp,sp,-32
1001445c:	008400f4 	movhi	r2,4099
10014460:	dc400515 	stw	r17,20(sp)
10014464:	146aa917 	ldw	r17,-21852(r2)
10014468:	dfc00715 	stw	ra,28(sp)
1001446c:	dc800615 	stw	r18,24(sp)
10014470:	dc000415 	stw	r16,16(sp)
10014474:	dc400215 	stw	r17,8(sp)
10014478:	88001426 	beq	r17,zero,100144cc <_Unwind_SjLj_RaiseException+0x74>
1001447c:	2021883a 	mov	r16,r4
10014480:	8805883a 	mov	r2,r17
10014484:	dc800204 	addi	r18,sp,8
10014488:	10800617 	ldw	r2,24(r2)
1001448c:	10000b26 	beq	r2,zero,100144bc <_Unwind_SjLj_RaiseException+0x64>
10014490:	81800017 	ldw	r6,0(r16)
10014494:	81c00117 	ldw	r7,4(r16)
10014498:	01400044 	movi	r5,1
1001449c:	dc800115 	stw	r18,4(sp)
100144a0:	dc000015 	stw	r16,0(sp)
100144a4:	01000044 	movi	r4,1
100144a8:	103ee83a 	callr	r2
100144ac:	10c001a0 	cmpeqi	r3,r2,6
100144b0:	18000d1e 	bne	r3,zero,100144e8 <_Unwind_SjLj_RaiseException+0x90>
100144b4:	10800218 	cmpnei	r2,r2,8
100144b8:	1000171e 	bne	r2,zero,10014518 <_Unwind_SjLj_RaiseException+0xc0>
100144bc:	d8800217 	ldw	r2,8(sp)
100144c0:	10800017 	ldw	r2,0(r2)
100144c4:	d8800215 	stw	r2,8(sp)
100144c8:	103fef1e 	bne	r2,zero,10014488 <_Unwind_SjLj_RaiseException+0x30>
100144cc:	00800144 	movi	r2,5
100144d0:	dfc00717 	ldw	ra,28(sp)
100144d4:	dc800617 	ldw	r18,24(sp)
100144d8:	dc400517 	ldw	r17,20(sp)
100144dc:	dc000417 	ldw	r16,16(sp)
100144e0:	dec00804 	addi	sp,sp,32
100144e4:	f800283a 	ret
100144e8:	d8800217 	ldw	r2,8(sp)
100144ec:	80000315 	stw	zero,12(r16)
100144f0:	d9800304 	addi	r6,sp,12
100144f4:	80800415 	stw	r2,16(r16)
100144f8:	900b883a 	mov	r5,r18
100144fc:	8009883a 	mov	r4,r16
10014500:	dc400215 	stw	r17,8(sp)
10014504:	00142800 	call	10014280 <_Unwind_RaiseException_Phase2>
10014508:	10c001d8 	cmpnei	r3,r2,7
1001450c:	183ff01e 	bne	r3,zero,100144d0 <_Unwind_SjLj_RaiseException+0x78>
10014510:	d9000217 	ldw	r4,8(sp)
10014514:	00143580 	call	10014358 <uw_install_context.isra.4>
10014518:	008000c4 	movi	r2,3
1001451c:	003fec06 	br	100144d0 <_Unwind_SjLj_RaiseException+0x78>

10014520 <_Unwind_SjLj_ForcedUnwind>:
10014520:	008400f4 	movhi	r2,4099
10014524:	defffd04 	addi	sp,sp,-12
10014528:	10eaa917 	ldw	r3,-21852(r2)
1001452c:	dfc00215 	stw	ra,8(sp)
10014530:	21400315 	stw	r5,12(r4)
10014534:	21800415 	stw	r6,16(r4)
10014538:	d80b883a 	mov	r5,sp
1001453c:	d9800104 	addi	r6,sp,4
10014540:	d8c00015 	stw	r3,0(sp)
10014544:	001416c0 	call	1001416c <_Unwind_ForcedUnwind_Phase2>
10014548:	10c001e0 	cmpeqi	r3,r2,7
1001454c:	1800031e 	bne	r3,zero,1001455c <_Unwind_SjLj_ForcedUnwind+0x3c>
10014550:	dfc00217 	ldw	ra,8(sp)
10014554:	dec00304 	addi	sp,sp,12
10014558:	f800283a 	ret
1001455c:	d9000017 	ldw	r4,0(sp)
10014560:	00143580 	call	10014358 <uw_install_context.isra.4>

10014564 <_Unwind_SjLj_Resume>:
10014564:	008400f4 	movhi	r2,4099
10014568:	10eaa917 	ldw	r3,-21852(r2)
1001456c:	20800317 	ldw	r2,12(r4)
10014570:	defffd04 	addi	sp,sp,-12
10014574:	dfc00215 	stw	ra,8(sp)
10014578:	d8c00015 	stw	r3,0(sp)
1001457c:	d9800104 	addi	r6,sp,4
10014580:	d80b883a 	mov	r5,sp
10014584:	1000051e 	bne	r2,zero,1001459c <_Unwind_SjLj_Resume+0x38>
10014588:	00142800 	call	10014280 <_Unwind_RaiseException_Phase2>
1001458c:	108001e0 	cmpeqi	r2,r2,7
10014590:	10000426 	beq	r2,zero,100145a4 <_Unwind_SjLj_Resume+0x40>
10014594:	d9000017 	ldw	r4,0(sp)
10014598:	00143580 	call	10014358 <uw_install_context.isra.4>
1001459c:	001416c0 	call	1001416c <_Unwind_ForcedUnwind_Phase2>
100145a0:	003ffa06 	br	1001458c <_Unwind_SjLj_Resume+0x28>
100145a4:	00146940 	call	10014694 <abort>

100145a8 <_Unwind_SjLj_Resume_or_Rethrow>:
100145a8:	20800317 	ldw	r2,12(r4)
100145ac:	defffd04 	addi	sp,sp,-12
100145b0:	dfc00215 	stw	ra,8(sp)
100145b4:	10000a26 	beq	r2,zero,100145e0 <_Unwind_SjLj_Resume_or_Rethrow+0x38>
100145b8:	008400f4 	movhi	r2,4099
100145bc:	10aaa917 	ldw	r2,-21852(r2)
100145c0:	d9800104 	addi	r6,sp,4
100145c4:	d80b883a 	mov	r5,sp
100145c8:	d8800015 	stw	r2,0(sp)
100145cc:	001416c0 	call	1001416c <_Unwind_ForcedUnwind_Phase2>
100145d0:	108001e0 	cmpeqi	r2,r2,7
100145d4:	10000626 	beq	r2,zero,100145f0 <_Unwind_SjLj_Resume_or_Rethrow+0x48>
100145d8:	d9000017 	ldw	r4,0(sp)
100145dc:	00143580 	call	10014358 <uw_install_context.isra.4>
100145e0:	00144580 	call	10014458 <_Unwind_SjLj_RaiseException>
100145e4:	dfc00217 	ldw	ra,8(sp)
100145e8:	dec00304 	addi	sp,sp,12
100145ec:	f800283a 	ret
100145f0:	00146940 	call	10014694 <abort>

100145f4 <_Unwind_DeleteException>:
100145f4:	20800217 	ldw	r2,8(r4)
100145f8:	10000326 	beq	r2,zero,10014608 <_Unwind_DeleteException+0x14>
100145fc:	200b883a 	mov	r5,r4
10014600:	01000044 	movi	r4,1
10014604:	1000683a 	jmp	r2
10014608:	f800283a 	ret

1001460c <_Unwind_Backtrace>:
1001460c:	008400f4 	movhi	r2,4099
10014610:	10aaa917 	ldw	r2,-21852(r2)
10014614:	defffb04 	addi	sp,sp,-20
10014618:	dc800315 	stw	r18,12(sp)
1001461c:	dc400215 	stw	r17,8(sp)
10014620:	dc000115 	stw	r16,4(sp)
10014624:	dfc00415 	stw	ra,16(sp)
10014628:	d8800015 	stw	r2,0(sp)
1001462c:	2021883a 	mov	r16,r4
10014630:	2823883a 	mov	r17,r5
10014634:	d825883a 	mov	r18,sp
10014638:	10000826 	beq	r2,zero,1001465c <_Unwind_Backtrace+0x50>
1001463c:	880b883a 	mov	r5,r17
10014640:	9009883a 	mov	r4,r18
10014644:	803ee83a 	callr	r16
10014648:	1000101e 	bne	r2,zero,1001468c <_Unwind_Backtrace+0x80>
1001464c:	d8800017 	ldw	r2,0(sp)
10014650:	10800017 	ldw	r2,0(r2)
10014654:	d8800015 	stw	r2,0(sp)
10014658:	103ff81e 	bne	r2,zero,1001463c <_Unwind_Backtrace+0x30>
1001465c:	880b883a 	mov	r5,r17
10014660:	9009883a 	mov	r4,r18
10014664:	803ee83a 	callr	r16
10014668:	00c00144 	movi	r3,5
1001466c:	1000071e 	bne	r2,zero,1001468c <_Unwind_Backtrace+0x80>
10014670:	1805883a 	mov	r2,r3
10014674:	dfc00417 	ldw	ra,16(sp)
10014678:	dc800317 	ldw	r18,12(sp)
1001467c:	dc400217 	ldw	r17,8(sp)
10014680:	dc000117 	ldw	r16,4(sp)
10014684:	dec00504 	addi	sp,sp,20
10014688:	f800283a 	ret
1001468c:	00c000c4 	movi	r3,3
10014690:	003ff706 	br	10014670 <_Unwind_Backtrace+0x64>

10014694 <abort>:
10014694:	deffff04 	addi	sp,sp,-4
10014698:	01000184 	movi	r4,6
1001469c:	dfc00015 	stw	ra,0(sp)
100146a0:	00161e80 	call	100161e8 <raise>
100146a4:	01000044 	movi	r4,1
100146a8:	0021d800 	call	10021d80 <_exit>

100146ac <_fopen_r>:
100146ac:	defffa04 	addi	sp,sp,-24
100146b0:	3005883a 	mov	r2,r6
100146b4:	dcc00415 	stw	r19,16(sp)
100146b8:	d80d883a 	mov	r6,sp
100146bc:	2827883a 	mov	r19,r5
100146c0:	100b883a 	mov	r5,r2
100146c4:	dc800315 	stw	r18,12(sp)
100146c8:	dfc00515 	stw	ra,20(sp)
100146cc:	dc400215 	stw	r17,8(sp)
100146d0:	dc000115 	stw	r16,4(sp)
100146d4:	2025883a 	mov	r18,r4
100146d8:	001aaf00 	call	1001aaf0 <__sflags>
100146dc:	10002726 	beq	r2,zero,1001477c <_fopen_r+0xd0>
100146e0:	9009883a 	mov	r4,r18
100146e4:	1023883a 	mov	r17,r2
100146e8:	001a9980 	call	1001a998 <__sfp>
100146ec:	1021883a 	mov	r16,r2
100146f0:	10002226 	beq	r2,zero,1001477c <_fopen_r+0xd0>
100146f4:	d9800017 	ldw	r6,0(sp)
100146f8:	01c06d84 	movi	r7,438
100146fc:	980b883a 	mov	r5,r19
10014700:	9009883a 	mov	r4,r18
10014704:	0015b140 	call	10015b14 <_open_r>
10014708:	10001916 	blt	r2,zero,10014770 <_fopen_r+0xc4>
1001470c:	01840074 	movhi	r6,4097
10014710:	01440074 	movhi	r5,4097
10014714:	01040074 	movhi	r4,4097
10014718:	00c40074 	movhi	r3,4097
1001471c:	3198a704 	addi	r6,r6,25244
10014720:	2958be04 	addi	r5,r5,25336
10014724:	2118de04 	addi	r4,r4,25464
10014728:	18d8f504 	addi	r3,r3,25556
1001472c:	8440030d 	sth	r17,12(r16)
10014730:	8080038d 	sth	r2,14(r16)
10014734:	84000715 	stw	r16,28(r16)
10014738:	81800815 	stw	r6,32(r16)
1001473c:	81400915 	stw	r5,36(r16)
10014740:	81000a15 	stw	r4,40(r16)
10014744:	80c00b15 	stw	r3,44(r16)
10014748:	8c40400c 	andi	r17,r17,256
1001474c:	88000d1e 	bne	r17,zero,10014784 <_fopen_r+0xd8>
10014750:	8005883a 	mov	r2,r16
10014754:	dfc00517 	ldw	ra,20(sp)
10014758:	dcc00417 	ldw	r19,16(sp)
1001475c:	dc800317 	ldw	r18,12(sp)
10014760:	dc400217 	ldw	r17,8(sp)
10014764:	dc000117 	ldw	r16,4(sp)
10014768:	dec00604 	addi	sp,sp,24
1001476c:	f800283a 	ret
10014770:	001aab80 	call	1001aab8 <__sfp_lock_acquire>
10014774:	8000030d 	sth	zero,12(r16)
10014778:	001aabc0 	call	1001aabc <__sfp_lock_release>
1001477c:	0021883a 	mov	r16,zero
10014780:	003ff306 	br	10014750 <_fopen_r+0xa4>
10014784:	01c00084 	movi	r7,2
10014788:	000d883a 	mov	r6,zero
1001478c:	800b883a 	mov	r5,r16
10014790:	9009883a 	mov	r4,r18
10014794:	00147b00 	call	100147b0 <_fseek_r>
10014798:	003fed06 	br	10014750 <_fopen_r+0xa4>

1001479c <fopen>:
1001479c:	008400f4 	movhi	r2,4099
100147a0:	280d883a 	mov	r6,r5
100147a4:	200b883a 	mov	r5,r4
100147a8:	11215917 	ldw	r4,-31388(r2)
100147ac:	00146ac1 	jmpi	100146ac <_fopen_r>

100147b0 <_fseek_r>:
100147b0:	00147cc1 	jmpi	100147cc <_fseeko_r>

100147b4 <fseek>:
100147b4:	008400f4 	movhi	r2,4099
100147b8:	300f883a 	mov	r7,r6
100147bc:	280d883a 	mov	r6,r5
100147c0:	200b883a 	mov	r5,r4
100147c4:	11215917 	ldw	r4,-31388(r2)
100147c8:	00147cc1 	jmpi	100147cc <_fseeko_r>

100147cc <_fseeko_r>:
100147cc:	deffe504 	addi	sp,sp,-108
100147d0:	dd401715 	stw	r21,92(sp)
100147d4:	dc801415 	stw	r18,80(sp)
100147d8:	dc401315 	stw	r17,76(sp)
100147dc:	dc001215 	stw	r16,72(sp)
100147e0:	dfc01a15 	stw	ra,104(sp)
100147e4:	ddc01915 	stw	r23,100(sp)
100147e8:	dd801815 	stw	r22,96(sp)
100147ec:	dd001615 	stw	r20,88(sp)
100147f0:	dcc01515 	stw	r19,84(sp)
100147f4:	2023883a 	mov	r17,r4
100147f8:	2821883a 	mov	r16,r5
100147fc:	302b883a 	mov	r21,r6
10014800:	3825883a 	mov	r18,r7
10014804:	20000226 	beq	r4,zero,10014810 <_fseeko_r+0x44>
10014808:	20800e17 	ldw	r2,56(r4)
1001480c:	10001a26 	beq	r2,zero,10014878 <_fseeko_r+0xac>
10014810:	8080030b 	ldhu	r2,12(r16)
10014814:	1080420c 	andi	r2,r2,264
10014818:	10804218 	cmpnei	r2,r2,264
1001481c:	10001b26 	beq	r2,zero,1001488c <_fseeko_r+0xc0>
10014820:	84c00a17 	ldw	r19,40(r16)
10014824:	9800fb26 	beq	r19,zero,10014c14 <_fseeko_r+0x448>
10014828:	90800060 	cmpeqi	r2,r18,1
1001482c:	10004b1e 	bne	r2,zero,1001495c <_fseeko_r+0x190>
10014830:	908000a0 	cmpeqi	r2,r18,2
10014834:	1000191e 	bne	r2,zero,1001489c <_fseeko_r+0xd0>
10014838:	90001826 	beq	r18,zero,1001489c <_fseeko_r+0xd0>
1001483c:	00800584 	movi	r2,22
10014840:	88800015 	stw	r2,0(r17)
10014844:	053fffc4 	movi	r20,-1
10014848:	a005883a 	mov	r2,r20
1001484c:	dfc01a17 	ldw	ra,104(sp)
10014850:	ddc01917 	ldw	r23,100(sp)
10014854:	dd801817 	ldw	r22,96(sp)
10014858:	dd401717 	ldw	r21,92(sp)
1001485c:	dd001617 	ldw	r20,88(sp)
10014860:	dcc01517 	ldw	r19,84(sp)
10014864:	dc801417 	ldw	r18,80(sp)
10014868:	dc401317 	ldw	r17,76(sp)
1001486c:	dc001217 	ldw	r16,72(sp)
10014870:	dec01b04 	addi	sp,sp,108
10014874:	f800283a 	ret
10014878:	001aaa80 	call	1001aaa8 <__sinit>
1001487c:	8080030b 	ldhu	r2,12(r16)
10014880:	1080420c 	andi	r2,r2,264
10014884:	10804218 	cmpnei	r2,r2,264
10014888:	103fe51e 	bne	r2,zero,10014820 <_fseeko_r+0x54>
1001488c:	800b883a 	mov	r5,r16
10014890:	8809883a 	mov	r4,r17
10014894:	001a7240 	call	1001a724 <_fflush_r>
10014898:	003fe106 	br	10014820 <_fseeko_r+0x54>
1001489c:	81000417 	ldw	r4,16(r16)
100148a0:	002f883a 	mov	r23,zero
100148a4:	0029883a 	mov	r20,zero
100148a8:	20004826 	beq	r4,zero,100149cc <_fseeko_r+0x200>
100148ac:	8080030b 	ldhu	r2,12(r16)
100148b0:	10c2068c 	andi	r3,r2,2074
100148b4:	1800071e 	bne	r3,zero,100148d4 <_fseeko_r+0x108>
100148b8:	10c1000c 	andi	r3,r2,1024
100148bc:	1800561e 	bne	r3,zero,10014a18 <_fseeko_r+0x24c>
100148c0:	00c40074 	movhi	r3,4097
100148c4:	18d8de04 	addi	r3,r3,25464
100148c8:	98c04426 	beq	r19,r3,100149dc <_fseeko_r+0x210>
100148cc:	10820014 	ori	r2,r2,2048
100148d0:	8080030d 	sth	r2,12(r16)
100148d4:	800b883a 	mov	r5,r16
100148d8:	8809883a 	mov	r4,r17
100148dc:	001a7240 	call	1001a724 <_fflush_r>
100148e0:	1029883a 	mov	r20,r2
100148e4:	103fd71e 	bne	r2,zero,10014844 <_fseeko_r+0x78>
100148e8:	81400717 	ldw	r5,28(r16)
100148ec:	900f883a 	mov	r7,r18
100148f0:	a80d883a 	mov	r6,r21
100148f4:	8809883a 	mov	r4,r17
100148f8:	983ee83a 	callr	r19
100148fc:	10bfffe0 	cmpeqi	r2,r2,-1
10014900:	103fd01e 	bne	r2,zero,10014844 <_fseeko_r+0x78>
10014904:	81400c17 	ldw	r5,48(r16)
10014908:	28000526 	beq	r5,zero,10014920 <_fseeko_r+0x154>
1001490c:	80801004 	addi	r2,r16,64
10014910:	28800226 	beq	r5,r2,1001491c <_fseeko_r+0x150>
10014914:	8809883a 	mov	r4,r17
10014918:	001acb00 	call	1001acb0 <_free_r>
1001491c:	80000c15 	stw	zero,48(r16)
10014920:	8080030b 	ldhu	r2,12(r16)
10014924:	80c00417 	ldw	r3,16(r16)
10014928:	80000115 	stw	zero,4(r16)
1001492c:	10bdf7cc 	andi	r2,r2,63455
10014930:	80c00015 	stw	r3,0(r16)
10014934:	8080030d 	sth	r2,12(r16)
10014938:	80001705 	stb	zero,92(r16)
1001493c:	80001745 	stb	zero,93(r16)
10014940:	80001785 	stb	zero,94(r16)
10014944:	800017c5 	stb	zero,95(r16)
10014948:	80001805 	stb	zero,96(r16)
1001494c:	80001845 	stb	zero,97(r16)
10014950:	80001885 	stb	zero,98(r16)
10014954:	800018c5 	stb	zero,99(r16)
10014958:	003fbb06 	br	10014848 <_fseeko_r+0x7c>
1001495c:	800b883a 	mov	r5,r16
10014960:	8809883a 	mov	r4,r17
10014964:	001a7240 	call	1001a724 <_fflush_r>
10014968:	8080030b 	ldhu	r2,12(r16)
1001496c:	10c4000c 	andi	r3,r2,4096
10014970:	18006e1e 	bne	r3,zero,10014b2c <_fseeko_r+0x360>
10014974:	81400717 	ldw	r5,28(r16)
10014978:	01c00044 	movi	r7,1
1001497c:	000d883a 	mov	r6,zero
10014980:	8809883a 	mov	r4,r17
10014984:	983ee83a 	callr	r19
10014988:	1029883a 	mov	r20,r2
1001498c:	10bfffd8 	cmpnei	r2,r2,-1
10014990:	103fac26 	beq	r2,zero,10014844 <_fseeko_r+0x78>
10014994:	8080030b 	ldhu	r2,12(r16)
10014998:	81000417 	ldw	r4,16(r16)
1001499c:	10c0010c 	andi	r3,r2,4
100149a0:	18006626 	beq	r3,zero,10014b3c <_fseeko_r+0x370>
100149a4:	80c00117 	ldw	r3,4(r16)
100149a8:	80800c17 	ldw	r2,48(r16)
100149ac:	a0e9c83a 	sub	r20,r20,r3
100149b0:	10000226 	beq	r2,zero,100149bc <_fseeko_r+0x1f0>
100149b4:	81800f17 	ldw	r6,60(r16)
100149b8:	a1a9c83a 	sub	r20,r20,r6
100149bc:	ad2b883a 	add	r21,r21,r20
100149c0:	05c00044 	movi	r23,1
100149c4:	0025883a 	mov	r18,zero
100149c8:	203fb81e 	bne	r4,zero,100148ac <_fseeko_r+0xe0>
100149cc:	800b883a 	mov	r5,r16
100149d0:	8809883a 	mov	r4,r17
100149d4:	0014d340 	call	10014d34 <__smakebuf_r>
100149d8:	003fb406 	br	100148ac <_fseeko_r+0xe0>
100149dc:	8140038f 	ldh	r5,14(r16)
100149e0:	283fba16 	blt	r5,zero,100148cc <_fseeko_r+0x100>
100149e4:	d80d883a 	mov	r6,sp
100149e8:	8809883a 	mov	r4,r17
100149ec:	0014c3c0 	call	10014c3c <_fstat_r>
100149f0:	1000761e 	bne	r2,zero,10014bcc <_fseeko_r+0x400>
100149f4:	d8c00117 	ldw	r3,4(sp)
100149f8:	01200014 	movui	r4,32768
100149fc:	8080030b 	ldhu	r2,12(r16)
10014a00:	18fc000c 	andi	r3,r3,61440
10014a04:	193fb11e 	bne	r3,r4,100148cc <_fseeko_r+0x100>
10014a08:	10810014 	ori	r2,r2,1024
10014a0c:	00c10004 	movi	r3,1024
10014a10:	80c01315 	stw	r3,76(r16)
10014a14:	8080030d 	sth	r2,12(r16)
10014a18:	90004f1e 	bne	r18,zero,10014b58 <_fseeko_r+0x38c>
10014a1c:	a82d883a 	mov	r22,r21
10014a20:	b800551e 	bne	r23,zero,10014b78 <_fseeko_r+0x3ac>
10014a24:	8080030b 	ldhu	r2,12(r16)
10014a28:	1084000c 	andi	r2,r2,4096
10014a2c:	10005f26 	beq	r2,zero,10014bac <_fseeko_r+0x3e0>
10014a30:	80801417 	ldw	r2,80(r16)
10014a34:	80c00117 	ldw	r3,4(r16)
10014a38:	81400c17 	ldw	r5,48(r16)
10014a3c:	1809883a 	mov	r4,r3
10014a40:	10e9c83a 	sub	r20,r2,r3
10014a44:	28005226 	beq	r5,zero,10014b90 <_fseeko_r+0x3c4>
10014a48:	81800f17 	ldw	r6,60(r16)
10014a4c:	a1a9c83a 	sub	r20,r20,r6
10014a50:	80800e17 	ldw	r2,56(r16)
10014a54:	81c00417 	ldw	r7,16(r16)
10014a58:	a0e9883a 	add	r20,r20,r3
10014a5c:	11c5c83a 	sub	r2,r2,r7
10014a60:	a0a9c83a 	sub	r20,r20,r2
10014a64:	1185883a 	add	r2,r2,r6
10014a68:	b5000216 	blt	r22,r20,10014a74 <_fseeko_r+0x2a8>
10014a6c:	a087883a 	add	r3,r20,r2
10014a70:	b0c05836 	bltu	r22,r3,10014bd4 <_fseeko_r+0x408>
10014a74:	85001317 	ldw	r20,76(r16)
10014a78:	81400717 	ldw	r5,28(r16)
10014a7c:	000f883a 	mov	r7,zero
10014a80:	0529c83a 	sub	r20,zero,r20
10014a84:	a5a8703a 	and	r20,r20,r22
10014a88:	a00d883a 	mov	r6,r20
10014a8c:	8809883a 	mov	r4,r17
10014a90:	983ee83a 	callr	r19
10014a94:	10bfffe0 	cmpeqi	r2,r2,-1
10014a98:	103f8e1e 	bne	r2,zero,100148d4 <_fseeko_r+0x108>
10014a9c:	80800417 	ldw	r2,16(r16)
10014aa0:	81400c17 	ldw	r5,48(r16)
10014aa4:	80000115 	stw	zero,4(r16)
10014aa8:	80800015 	stw	r2,0(r16)
10014aac:	28000526 	beq	r5,zero,10014ac4 <_fseeko_r+0x2f8>
10014ab0:	80801004 	addi	r2,r16,64
10014ab4:	28800226 	beq	r5,r2,10014ac0 <_fseeko_r+0x2f4>
10014ab8:	8809883a 	mov	r4,r17
10014abc:	001acb00 	call	1001acb0 <_free_r>
10014ac0:	80000c15 	stw	zero,48(r16)
10014ac4:	8080030b 	ldhu	r2,12(r16)
10014ac8:	b529c83a 	sub	r20,r22,r20
10014acc:	10bff7cc 	andi	r2,r2,65503
10014ad0:	8080030d 	sth	r2,12(r16)
10014ad4:	a0000b26 	beq	r20,zero,10014b04 <_fseeko_r+0x338>
10014ad8:	800b883a 	mov	r5,r16
10014adc:	8809883a 	mov	r4,r17
10014ae0:	0015d6c0 	call	10015d6c <__srefill_r>
10014ae4:	103f7b1e 	bne	r2,zero,100148d4 <_fseeko_r+0x108>
10014ae8:	80800117 	ldw	r2,4(r16)
10014aec:	153f7936 	bltu	r2,r20,100148d4 <_fseeko_r+0x108>
10014af0:	85800017 	ldw	r22,0(r16)
10014af4:	1505c83a 	sub	r2,r2,r20
10014af8:	80800115 	stw	r2,4(r16)
10014afc:	b529883a 	add	r20,r22,r20
10014b00:	85000015 	stw	r20,0(r16)
10014b04:	80001705 	stb	zero,92(r16)
10014b08:	80001745 	stb	zero,93(r16)
10014b0c:	80001785 	stb	zero,94(r16)
10014b10:	800017c5 	stb	zero,95(r16)
10014b14:	80001805 	stb	zero,96(r16)
10014b18:	80001845 	stb	zero,97(r16)
10014b1c:	80001885 	stb	zero,98(r16)
10014b20:	800018c5 	stb	zero,99(r16)
10014b24:	0029883a 	mov	r20,zero
10014b28:	003f4706 	br	10014848 <_fseeko_r+0x7c>
10014b2c:	10c0010c 	andi	r3,r2,4
10014b30:	85001417 	ldw	r20,80(r16)
10014b34:	81000417 	ldw	r4,16(r16)
10014b38:	183f9a1e 	bne	r3,zero,100149a4 <_fseeko_r+0x1d8>
10014b3c:	1080020c 	andi	r2,r2,8
10014b40:	103f9e26 	beq	r2,zero,100149bc <_fseeko_r+0x1f0>
10014b44:	80800017 	ldw	r2,0(r16)
10014b48:	103f9c26 	beq	r2,zero,100149bc <_fseeko_r+0x1f0>
10014b4c:	1105c83a 	sub	r2,r2,r4
10014b50:	a0a9883a 	add	r20,r20,r2
10014b54:	003f9906 	br	100149bc <_fseeko_r+0x1f0>
10014b58:	8140038f 	ldh	r5,14(r16)
10014b5c:	d80d883a 	mov	r6,sp
10014b60:	8809883a 	mov	r4,r17
10014b64:	0014c3c0 	call	10014c3c <_fstat_r>
10014b68:	103f5a1e 	bne	r2,zero,100148d4 <_fseeko_r+0x108>
10014b6c:	dd800417 	ldw	r22,16(sp)
10014b70:	adad883a 	add	r22,r21,r22
10014b74:	b83fab26 	beq	r23,zero,10014a24 <_fseeko_r+0x258>
10014b78:	81400c17 	ldw	r5,48(r16)
10014b7c:	28000326 	beq	r5,zero,10014b8c <_fseeko_r+0x3c0>
10014b80:	80c00117 	ldw	r3,4(r16)
10014b84:	81800f17 	ldw	r6,60(r16)
10014b88:	003fb106 	br	10014a50 <_fseeko_r+0x284>
10014b8c:	81000117 	ldw	r4,4(r16)
10014b90:	80800017 	ldw	r2,0(r16)
10014b94:	81c00417 	ldw	r7,16(r16)
10014b98:	000b883a 	mov	r5,zero
10014b9c:	11c5c83a 	sub	r2,r2,r7
10014ba0:	a0a9c83a 	sub	r20,r20,r2
10014ba4:	2085883a 	add	r2,r4,r2
10014ba8:	003faf06 	br	10014a68 <_fseeko_r+0x29c>
10014bac:	81400717 	ldw	r5,28(r16)
10014bb0:	01c00044 	movi	r7,1
10014bb4:	000d883a 	mov	r6,zero
10014bb8:	8809883a 	mov	r4,r17
10014bbc:	983ee83a 	callr	r19
10014bc0:	10ffffe0 	cmpeqi	r3,r2,-1
10014bc4:	183f9b26 	beq	r3,zero,10014a34 <_fseeko_r+0x268>
10014bc8:	003f4206 	br	100148d4 <_fseeko_r+0x108>
10014bcc:	8080030b 	ldhu	r2,12(r16)
10014bd0:	003f3e06 	br	100148cc <_fseeko_r+0x100>
10014bd4:	b529c83a 	sub	r20,r22,r20
10014bd8:	3d0f883a 	add	r7,r7,r20
10014bdc:	1529c83a 	sub	r20,r2,r20
10014be0:	81c00015 	stw	r7,0(r16)
10014be4:	85000115 	stw	r20,4(r16)
10014be8:	28000526 	beq	r5,zero,10014c00 <_fseeko_r+0x434>
10014bec:	80801004 	addi	r2,r16,64
10014bf0:	28800226 	beq	r5,r2,10014bfc <_fseeko_r+0x430>
10014bf4:	8809883a 	mov	r4,r17
10014bf8:	001acb00 	call	1001acb0 <_free_r>
10014bfc:	80000c15 	stw	zero,48(r16)
10014c00:	80c0030b 	ldhu	r3,12(r16)
10014c04:	80001705 	stb	zero,92(r16)
10014c08:	18fff7cc 	andi	r3,r3,65503
10014c0c:	80c0030d 	sth	r3,12(r16)
10014c10:	003fbd06 	br	10014b08 <_fseeko_r+0x33c>
10014c14:	00800744 	movi	r2,29
10014c18:	88800015 	stw	r2,0(r17)
10014c1c:	053fffc4 	movi	r20,-1
10014c20:	003f0906 	br	10014848 <_fseeko_r+0x7c>

10014c24 <fseeko>:
10014c24:	008400f4 	movhi	r2,4099
10014c28:	300f883a 	mov	r7,r6
10014c2c:	280d883a 	mov	r6,r5
10014c30:	200b883a 	mov	r5,r4
10014c34:	11215917 	ldw	r4,-31388(r2)
10014c38:	00147cc1 	jmpi	100147cc <_fseeko_r>

10014c3c <_fstat_r>:
10014c3c:	defffe04 	addi	sp,sp,-8
10014c40:	2805883a 	mov	r2,r5
10014c44:	dc000015 	stw	r16,0(sp)
10014c48:	300b883a 	mov	r5,r6
10014c4c:	2021883a 	mov	r16,r4
10014c50:	1009883a 	mov	r4,r2
10014c54:	008400f4 	movhi	r2,4099
10014c58:	dfc00115 	stw	ra,4(sp)
10014c5c:	102aaa15 	stw	zero,-21848(r2)
10014c60:	0021df00 	call	10021df0 <fstat>
10014c64:	10ffffd8 	cmpnei	r3,r2,-1
10014c68:	18000426 	beq	r3,zero,10014c7c <_fstat_r+0x40>
10014c6c:	dfc00117 	ldw	ra,4(sp)
10014c70:	dc000017 	ldw	r16,0(sp)
10014c74:	dec00204 	addi	sp,sp,8
10014c78:	f800283a 	ret
10014c7c:	00c400f4 	movhi	r3,4099
10014c80:	18eaaa17 	ldw	r3,-21848(r3)
10014c84:	183ff926 	beq	r3,zero,10014c6c <_fstat_r+0x30>
10014c88:	80c00015 	stw	r3,0(r16)
10014c8c:	dfc00117 	ldw	ra,4(sp)
10014c90:	dc000017 	ldw	r16,0(sp)
10014c94:	dec00204 	addi	sp,sp,8
10014c98:	f800283a 	ret

10014c9c <__swhatbuf_r>:
10014c9c:	deffea04 	addi	sp,sp,-88
10014ca0:	dc001215 	stw	r16,72(sp)
10014ca4:	2821883a 	mov	r16,r5
10014ca8:	2940038f 	ldh	r5,14(r5)
10014cac:	dc801415 	stw	r18,80(sp)
10014cb0:	dc401315 	stw	r17,76(sp)
10014cb4:	dfc01515 	stw	ra,84(sp)
10014cb8:	3023883a 	mov	r17,r6
10014cbc:	3825883a 	mov	r18,r7
10014cc0:	28001016 	blt	r5,zero,10014d04 <__swhatbuf_r+0x68>
10014cc4:	d80d883a 	mov	r6,sp
10014cc8:	0014c3c0 	call	10014c3c <_fstat_r>
10014ccc:	10000d16 	blt	r2,zero,10014d04 <__swhatbuf_r+0x68>
10014cd0:	d8c00117 	ldw	r3,4(sp)
10014cd4:	00820004 	movi	r2,2048
10014cd8:	18fc000c 	andi	r3,r3,61440
10014cdc:	18c80020 	cmpeqi	r3,r3,8192
10014ce0:	90c00015 	stw	r3,0(r18)
10014ce4:	00c10004 	movi	r3,1024
10014ce8:	88c00015 	stw	r3,0(r17)
10014cec:	dfc01517 	ldw	ra,84(sp)
10014cf0:	dc801417 	ldw	r18,80(sp)
10014cf4:	dc401317 	ldw	r17,76(sp)
10014cf8:	dc001217 	ldw	r16,72(sp)
10014cfc:	dec01604 	addi	sp,sp,88
10014d00:	f800283a 	ret
10014d04:	8080030b 	ldhu	r2,12(r16)
10014d08:	90000015 	stw	zero,0(r18)
10014d0c:	1080200c 	andi	r2,r2,128
10014d10:	10000426 	beq	r2,zero,10014d24 <__swhatbuf_r+0x88>
10014d14:	00801004 	movi	r2,64
10014d18:	88800015 	stw	r2,0(r17)
10014d1c:	0005883a 	mov	r2,zero
10014d20:	003ff206 	br	10014cec <__swhatbuf_r+0x50>
10014d24:	00810004 	movi	r2,1024
10014d28:	88800015 	stw	r2,0(r17)
10014d2c:	0005883a 	mov	r2,zero
10014d30:	003fee06 	br	10014cec <__swhatbuf_r+0x50>

10014d34 <__smakebuf_r>:
10014d34:	28c0030b 	ldhu	r3,12(r5)
10014d38:	defffa04 	addi	sp,sp,-24
10014d3c:	dc000215 	stw	r16,8(sp)
10014d40:	dfc00515 	stw	ra,20(sp)
10014d44:	dc800415 	stw	r18,16(sp)
10014d48:	dc400315 	stw	r17,12(sp)
10014d4c:	18c0008c 	andi	r3,r3,2
10014d50:	2821883a 	mov	r16,r5
10014d54:	18000b26 	beq	r3,zero,10014d84 <__smakebuf_r+0x50>
10014d58:	28c010c4 	addi	r3,r5,67
10014d5c:	28c00015 	stw	r3,0(r5)
10014d60:	28c00415 	stw	r3,16(r5)
10014d64:	00c00044 	movi	r3,1
10014d68:	28c00515 	stw	r3,20(r5)
10014d6c:	dfc00517 	ldw	ra,20(sp)
10014d70:	dc800417 	ldw	r18,16(sp)
10014d74:	dc400317 	ldw	r17,12(sp)
10014d78:	dc000217 	ldw	r16,8(sp)
10014d7c:	dec00604 	addi	sp,sp,24
10014d80:	f800283a 	ret
10014d84:	d9c00104 	addi	r7,sp,4
10014d88:	d80d883a 	mov	r6,sp
10014d8c:	2023883a 	mov	r17,r4
10014d90:	0014c9c0 	call	10014c9c <__swhatbuf_r>
10014d94:	1025883a 	mov	r18,r2
10014d98:	d8800117 	ldw	r2,4(sp)
10014d9c:	1000131e 	bne	r2,zero,10014dec <__smakebuf_r+0xb8>
10014da0:	d9400017 	ldw	r5,0(sp)
10014da4:	8809883a 	mov	r4,r17
10014da8:	0014e900 	call	10014e90 <_malloc_r>
10014dac:	10001c26 	beq	r2,zero,10014e20 <__smakebuf_r+0xec>
10014db0:	010400b4 	movhi	r4,4098
10014db4:	2129ed04 	addi	r4,r4,-22604
10014db8:	80c0030b 	ldhu	r3,12(r16)
10014dbc:	89000f15 	stw	r4,60(r17)
10014dc0:	80800015 	stw	r2,0(r16)
10014dc4:	80800415 	stw	r2,16(r16)
10014dc8:	d8800017 	ldw	r2,0(sp)
10014dcc:	d9400117 	ldw	r5,4(sp)
10014dd0:	18c02014 	ori	r3,r3,128
10014dd4:	80c0030d 	sth	r3,12(r16)
10014dd8:	80800515 	stw	r2,20(r16)
10014ddc:	28001c1e 	bne	r5,zero,10014e50 <__smakebuf_r+0x11c>
10014de0:	90c6b03a 	or	r3,r18,r3
10014de4:	80c0030d 	sth	r3,12(r16)
10014de8:	003fe006 	br	10014d6c <__smakebuf_r+0x38>
10014dec:	8140038f 	ldh	r5,14(r16)
10014df0:	8809883a 	mov	r4,r17
10014df4:	001b5c80 	call	1001b5c8 <_isatty_r>
10014df8:	103fe926 	beq	r2,zero,10014da0 <__smakebuf_r+0x6c>
10014dfc:	8080030b 	ldhu	r2,12(r16)
10014e00:	80c010c4 	addi	r3,r16,67
10014e04:	80c00015 	stw	r3,0(r16)
10014e08:	10800054 	ori	r2,r2,1
10014e0c:	8080030d 	sth	r2,12(r16)
10014e10:	00800044 	movi	r2,1
10014e14:	80c00415 	stw	r3,16(r16)
10014e18:	80800515 	stw	r2,20(r16)
10014e1c:	003fe006 	br	10014da0 <__smakebuf_r+0x6c>
10014e20:	8080030b 	ldhu	r2,12(r16)
10014e24:	10c0800c 	andi	r3,r2,512
10014e28:	183fd01e 	bne	r3,zero,10014d6c <__smakebuf_r+0x38>
10014e2c:	10bfff0c 	andi	r2,r2,65532
10014e30:	10800094 	ori	r2,r2,2
10014e34:	80c010c4 	addi	r3,r16,67
10014e38:	8080030d 	sth	r2,12(r16)
10014e3c:	00800044 	movi	r2,1
10014e40:	80c00015 	stw	r3,0(r16)
10014e44:	80c00415 	stw	r3,16(r16)
10014e48:	80800515 	stw	r2,20(r16)
10014e4c:	003fc706 	br	10014d6c <__smakebuf_r+0x38>
10014e50:	8140038f 	ldh	r5,14(r16)
10014e54:	8809883a 	mov	r4,r17
10014e58:	001b5c80 	call	1001b5c8 <_isatty_r>
10014e5c:	80c0030b 	ldhu	r3,12(r16)
10014e60:	103fdf26 	beq	r2,zero,10014de0 <__smakebuf_r+0xac>
10014e64:	18ffff0c 	andi	r3,r3,65532
10014e68:	18c00054 	ori	r3,r3,1
10014e6c:	003fdc06 	br	10014de0 <__smakebuf_r+0xac>

10014e70 <malloc>:
10014e70:	008400f4 	movhi	r2,4099
10014e74:	200b883a 	mov	r5,r4
10014e78:	11215917 	ldw	r4,-31388(r2)
10014e7c:	0014e901 	jmpi	10014e90 <_malloc_r>

10014e80 <free>:
10014e80:	008400f4 	movhi	r2,4099
10014e84:	200b883a 	mov	r5,r4
10014e88:	11215917 	ldw	r4,-31388(r2)
10014e8c:	001acb01 	jmpi	1001acb0 <_free_r>

10014e90 <_malloc_r>:
10014e90:	defff604 	addi	sp,sp,-40
10014e94:	dc400115 	stw	r17,4(sp)
10014e98:	2c4002c4 	addi	r17,r5,11
10014e9c:	dc800215 	stw	r18,8(sp)
10014ea0:	dfc00915 	stw	ra,36(sp)
10014ea4:	df000815 	stw	fp,32(sp)
10014ea8:	ddc00715 	stw	r23,28(sp)
10014eac:	dd800615 	stw	r22,24(sp)
10014eb0:	dd400515 	stw	r21,20(sp)
10014eb4:	dd000415 	stw	r20,16(sp)
10014eb8:	dcc00315 	stw	r19,12(sp)
10014ebc:	dc000015 	stw	r16,0(sp)
10014ec0:	888005e8 	cmpgeui	r2,r17,23
10014ec4:	2025883a 	mov	r18,r4
10014ec8:	10001b1e 	bne	r2,zero,10014f38 <_malloc_r+0xa8>
10014ecc:	29400468 	cmpgeui	r5,r5,17
10014ed0:	2800951e 	bne	r5,zero,10015128 <_malloc_r+0x298>
10014ed4:	00223800 	call	10022380 <__malloc_lock>
10014ed8:	04400404 	movi	r17,16
10014edc:	00800604 	movi	r2,24
10014ee0:	01800084 	movi	r6,2
10014ee4:	04c400b4 	movhi	r19,4098
10014ee8:	9cdb6904 	addi	r19,r19,28068
10014eec:	9885883a 	add	r2,r19,r2
10014ef0:	14000117 	ldw	r16,4(r2)
10014ef4:	10fffe04 	addi	r3,r2,-8
10014ef8:	80c09e26 	beq	r16,r3,10015174 <_malloc_r+0x2e4>
10014efc:	80800117 	ldw	r2,4(r16)
10014f00:	81000317 	ldw	r4,12(r16)
10014f04:	00ffff04 	movi	r3,-4
10014f08:	10c4703a 	and	r2,r2,r3
10014f0c:	81400217 	ldw	r5,8(r16)
10014f10:	8085883a 	add	r2,r16,r2
10014f14:	10c00117 	ldw	r3,4(r2)
10014f18:	29000315 	stw	r4,12(r5)
10014f1c:	21400215 	stw	r5,8(r4)
10014f20:	18c00054 	ori	r3,r3,1
10014f24:	10c00115 	stw	r3,4(r2)
10014f28:	9009883a 	mov	r4,r18
10014f2c:	00223a40 	call	100223a4 <__malloc_unlock>
10014f30:	80800204 	addi	r2,r16,8
10014f34:	00007f06 	br	10015134 <_malloc_r+0x2a4>
10014f38:	00bffe04 	movi	r2,-8
10014f3c:	88a2703a 	and	r17,r17,r2
10014f40:	88007916 	blt	r17,zero,10015128 <_malloc_r+0x298>
10014f44:	89407836 	bltu	r17,r5,10015128 <_malloc_r+0x298>
10014f48:	00223800 	call	10022380 <__malloc_lock>
10014f4c:	88807e28 	cmpgeui	r2,r17,504
10014f50:	10013326 	beq	r2,zero,10015420 <_malloc_r+0x590>
10014f54:	8804d27a 	srli	r2,r17,9
10014f58:	10008226 	beq	r2,zero,10015164 <_malloc_r+0x2d4>
10014f5c:	10c00168 	cmpgeui	r3,r2,5
10014f60:	1801151e 	bne	r3,zero,100153b8 <_malloc_r+0x528>
10014f64:	8804d1ba 	srli	r2,r17,6
10014f68:	11800e44 	addi	r6,r2,57
10014f6c:	300a90fa 	slli	r5,r6,3
10014f70:	12000e04 	addi	r8,r2,56
10014f74:	04c400b4 	movhi	r19,4098
10014f78:	9cdb6904 	addi	r19,r19,28068
10014f7c:	994b883a 	add	r5,r19,r5
10014f80:	2c000117 	ldw	r16,4(r5)
10014f84:	297ffe04 	addi	r5,r5,-8
10014f88:	2c001126 	beq	r5,r16,10014fd0 <_malloc_r+0x140>
10014f8c:	80800117 	ldw	r2,4(r16)
10014f90:	00ffff04 	movi	r3,-4
10014f94:	10c4703a 	and	r2,r2,r3
10014f98:	1447c83a 	sub	r3,r2,r17
10014f9c:	19000408 	cmpgei	r4,r3,16
10014fa0:	2000e81e 	bne	r4,zero,10015344 <_malloc_r+0x4b4>
10014fa4:	1800e90e 	bge	r3,zero,1001534c <_malloc_r+0x4bc>
10014fa8:	01ffff04 	movi	r7,-4
10014fac:	00000606 	br	10014fc8 <_malloc_r+0x138>
10014fb0:	80800117 	ldw	r2,4(r16)
10014fb4:	11c4703a 	and	r2,r2,r7
10014fb8:	1447c83a 	sub	r3,r2,r17
10014fbc:	19000408 	cmpgei	r4,r3,16
10014fc0:	2000e01e 	bne	r4,zero,10015344 <_malloc_r+0x4b4>
10014fc4:	1800e10e 	bge	r3,zero,1001534c <_malloc_r+0x4bc>
10014fc8:	84000317 	ldw	r16,12(r16)
10014fcc:	2c3ff81e 	bne	r5,r16,10014fb0 <_malloc_r+0x120>
10014fd0:	9c000417 	ldw	r16,16(r19)
10014fd4:	020400b4 	movhi	r8,4098
10014fd8:	421b6b04 	addi	r8,r8,28076
10014fdc:	82006c26 	beq	r16,r8,10015190 <_malloc_r+0x300>
10014fe0:	80c00117 	ldw	r3,4(r16)
10014fe4:	00bfff04 	movi	r2,-4
10014fe8:	1884703a 	and	r2,r3,r2
10014fec:	1447c83a 	sub	r3,r2,r17
10014ff0:	19000410 	cmplti	r4,r3,16
10014ff4:	20011526 	beq	r4,zero,1001544c <_malloc_r+0x5bc>
10014ff8:	9a000515 	stw	r8,20(r19)
10014ffc:	9a000415 	stw	r8,16(r19)
10015000:	18010a0e 	bge	r3,zero,1001542c <_malloc_r+0x59c>
10015004:	10c08028 	cmpgeui	r3,r2,512
10015008:	1800d21e 	bne	r3,zero,10015354 <_malloc_r+0x4c4>
1001500c:	1004d0fa 	srli	r2,r2,3
10015010:	99400117 	ldw	r5,4(r19)
10015014:	10c00044 	addi	r3,r2,1
10015018:	1009d0ba 	srai	r4,r2,2
1001501c:	180690fa 	slli	r3,r3,3
10015020:	00800044 	movi	r2,1
10015024:	1104983a 	sll	r2,r2,r4
10015028:	98c7883a 	add	r3,r19,r3
1001502c:	19000017 	ldw	r4,0(r3)
10015030:	1144b03a 	or	r2,r2,r5
10015034:	197ffe04 	addi	r5,r3,-8
10015038:	81400315 	stw	r5,12(r16)
1001503c:	81000215 	stw	r4,8(r16)
10015040:	98800115 	stw	r2,4(r19)
10015044:	1c000015 	stw	r16,0(r3)
10015048:	24000315 	stw	r16,12(r4)
1001504c:	3007d0ba 	srai	r3,r6,2
10015050:	01000044 	movi	r4,1
10015054:	20c8983a 	sll	r4,r4,r3
10015058:	11005236 	bltu	r2,r4,100151a4 <_malloc_r+0x314>
1001505c:	2086703a 	and	r3,r4,r2
10015060:	18000a1e 	bne	r3,zero,1001508c <_malloc_r+0x1fc>
10015064:	00ffff04 	movi	r3,-4
10015068:	2109883a 	add	r4,r4,r4
1001506c:	30cc703a 	and	r6,r6,r3
10015070:	2086703a 	and	r3,r4,r2
10015074:	31800104 	addi	r6,r6,4
10015078:	1800041e 	bne	r3,zero,1001508c <_malloc_r+0x1fc>
1001507c:	2109883a 	add	r4,r4,r4
10015080:	2086703a 	and	r3,r4,r2
10015084:	31800104 	addi	r6,r6,4
10015088:	183ffc26 	beq	r3,zero,1001507c <_malloc_r+0x1ec>
1001508c:	027fff04 	movi	r9,-4
10015090:	301490fa 	slli	r10,r6,3
10015094:	3017883a 	mov	r11,r6
10015098:	9a95883a 	add	r10,r19,r10
1001509c:	500f883a 	mov	r7,r10
100150a0:	3c000317 	ldw	r16,12(r7)
100150a4:	3c00cd26 	beq	r7,r16,100153dc <_malloc_r+0x54c>
100150a8:	80800117 	ldw	r2,4(r16)
100150ac:	1244703a 	and	r2,r2,r9
100150b0:	1447c83a 	sub	r3,r2,r17
100150b4:	19400408 	cmpgei	r5,r3,16
100150b8:	2800081e 	bne	r5,zero,100150dc <_malloc_r+0x24c>
100150bc:	1800cc0e 	bge	r3,zero,100153f0 <_malloc_r+0x560>
100150c0:	84000317 	ldw	r16,12(r16)
100150c4:	3c00c526 	beq	r7,r16,100153dc <_malloc_r+0x54c>
100150c8:	80800117 	ldw	r2,4(r16)
100150cc:	1244703a 	and	r2,r2,r9
100150d0:	1447c83a 	sub	r3,r2,r17
100150d4:	19400410 	cmplti	r5,r3,16
100150d8:	283ff81e 	bne	r5,zero,100150bc <_malloc_r+0x22c>
100150dc:	81000317 	ldw	r4,12(r16)
100150e0:	81400217 	ldw	r5,8(r16)
100150e4:	89800054 	ori	r6,r17,1
100150e8:	81800115 	stw	r6,4(r16)
100150ec:	29000315 	stw	r4,12(r5)
100150f0:	21400215 	stw	r5,8(r4)
100150f4:	8463883a 	add	r17,r16,r17
100150f8:	9c400515 	stw	r17,20(r19)
100150fc:	9c400415 	stw	r17,16(r19)
10015100:	19000054 	ori	r4,r3,1
10015104:	89000115 	stw	r4,4(r17)
10015108:	8085883a 	add	r2,r16,r2
1001510c:	8a000315 	stw	r8,12(r17)
10015110:	8a000215 	stw	r8,8(r17)
10015114:	10c00015 	stw	r3,0(r2)
10015118:	9009883a 	mov	r4,r18
1001511c:	00223a40 	call	100223a4 <__malloc_unlock>
10015120:	80800204 	addi	r2,r16,8
10015124:	00000306 	br	10015134 <_malloc_r+0x2a4>
10015128:	00800304 	movi	r2,12
1001512c:	90800015 	stw	r2,0(r18)
10015130:	0005883a 	mov	r2,zero
10015134:	dfc00917 	ldw	ra,36(sp)
10015138:	df000817 	ldw	fp,32(sp)
1001513c:	ddc00717 	ldw	r23,28(sp)
10015140:	dd800617 	ldw	r22,24(sp)
10015144:	dd400517 	ldw	r21,20(sp)
10015148:	dd000417 	ldw	r20,16(sp)
1001514c:	dcc00317 	ldw	r19,12(sp)
10015150:	dc800217 	ldw	r18,8(sp)
10015154:	dc400117 	ldw	r17,4(sp)
10015158:	dc000017 	ldw	r16,0(sp)
1001515c:	dec00a04 	addi	sp,sp,40
10015160:	f800283a 	ret
10015164:	01408004 	movi	r5,512
10015168:	01801004 	movi	r6,64
1001516c:	02000fc4 	movi	r8,63
10015170:	003f8006 	br	10014f74 <_malloc_r+0xe4>
10015174:	14000317 	ldw	r16,12(r2)
10015178:	31800084 	addi	r6,r6,2
1001517c:	143f5f1e 	bne	r2,r16,10014efc <_malloc_r+0x6c>
10015180:	9c000417 	ldw	r16,16(r19)
10015184:	020400b4 	movhi	r8,4098
10015188:	421b6b04 	addi	r8,r8,28076
1001518c:	823f941e 	bne	r16,r8,10014fe0 <_malloc_r+0x150>
10015190:	3007d0ba 	srai	r3,r6,2
10015194:	01000044 	movi	r4,1
10015198:	98800117 	ldw	r2,4(r19)
1001519c:	20c8983a 	sll	r4,r4,r3
100151a0:	113fae2e 	bgeu	r2,r4,1001505c <_malloc_r+0x1cc>
100151a4:	9c000217 	ldw	r16,8(r19)
100151a8:	00bfff04 	movi	r2,-4
100151ac:	85000117 	ldw	r20,4(r16)
100151b0:	a0ac703a 	and	r22,r20,r2
100151b4:	b4400336 	bltu	r22,r17,100151c4 <_malloc_r+0x334>
100151b8:	b445c83a 	sub	r2,r22,r17
100151bc:	10c00408 	cmpgei	r3,r2,16
100151c0:	1800561e 	bne	r3,zero,1001531c <_malloc_r+0x48c>
100151c4:	008400f4 	movhi	r2,4099
100151c8:	10a15a17 	ldw	r2,-31384(r2)
100151cc:	00c400f4 	movhi	r3,4099
100151d0:	1d2aad17 	ldw	r20,-21836(r3)
100151d4:	10bfffd8 	cmpnei	r2,r2,-1
100151d8:	85ab883a 	add	r21,r16,r22
100151dc:	8d29883a 	add	r20,r17,r20
100151e0:	1000c826 	beq	r2,zero,10015504 <_malloc_r+0x674>
100151e4:	a50403c4 	addi	r20,r20,4111
100151e8:	00bc0004 	movi	r2,-4096
100151ec:	a0a8703a 	and	r20,r20,r2
100151f0:	a00b883a 	mov	r5,r20
100151f4:	9009883a 	mov	r4,r18
100151f8:	0015f380 	call	10015f38 <_sbrk_r>
100151fc:	102f883a 	mov	r23,r2
10015200:	10bfffd8 	cmpnei	r2,r2,-1
10015204:	10009a26 	beq	r2,zero,10015470 <_malloc_r+0x5e0>
10015208:	bd409836 	bltu	r23,r21,1001546c <_malloc_r+0x5dc>
1001520c:	008400f4 	movhi	r2,4099
10015210:	10aac417 	ldw	r2,-21744(r2)
10015214:	00c400f4 	movhi	r3,4099
10015218:	a085883a 	add	r2,r20,r2
1001521c:	18aac415 	stw	r2,-21744(r3)
10015220:	1007883a 	mov	r3,r2
10015224:	adc0dd26 	beq	r21,r23,1001559c <_malloc_r+0x70c>
10015228:	008400f4 	movhi	r2,4099
1001522c:	10a15a17 	ldw	r2,-31384(r2)
10015230:	10bfffd8 	cmpnei	r2,r2,-1
10015234:	1000e026 	beq	r2,zero,100155b8 <_malloc_r+0x728>
10015238:	bd6bc83a 	sub	r21,r23,r21
1001523c:	a8c7883a 	add	r3,r21,r3
10015240:	008400f4 	movhi	r2,4099
10015244:	10eac415 	stw	r3,-21744(r2)
10015248:	bf0001cc 	andi	fp,r23,7
1001524c:	e000b626 	beq	fp,zero,10015528 <_malloc_r+0x698>
10015250:	bf2fc83a 	sub	r23,r23,fp
10015254:	bdc00204 	addi	r23,r23,8
10015258:	00840204 	movi	r2,4104
1001525c:	1705c83a 	sub	r2,r2,fp
10015260:	bd29883a 	add	r20,r23,r20
10015264:	1505c83a 	sub	r2,r2,r20
10015268:	1543ffcc 	andi	r21,r2,4095
1001526c:	a80b883a 	mov	r5,r21
10015270:	9009883a 	mov	r4,r18
10015274:	0015f380 	call	10015f38 <_sbrk_r>
10015278:	10ffffe0 	cmpeqi	r3,r2,-1
1001527c:	1800e41e 	bne	r3,zero,10015610 <_malloc_r+0x780>
10015280:	15c5c83a 	sub	r2,r2,r23
10015284:	1569883a 	add	r20,r2,r21
10015288:	008400f4 	movhi	r2,4099
1001528c:	10aac417 	ldw	r2,-21744(r2)
10015290:	9dc00215 	stw	r23,8(r19)
10015294:	a5000054 	ori	r20,r20,1
10015298:	a885883a 	add	r2,r21,r2
1001529c:	00c400f4 	movhi	r3,4099
100152a0:	18aac415 	stw	r2,-21744(r3)
100152a4:	bd000115 	stw	r20,4(r23)
100152a8:	84c0c626 	beq	r16,r19,100155c4 <_malloc_r+0x734>
100152ac:	b0c00428 	cmpgeui	r3,r22,16
100152b0:	1800c626 	beq	r3,zero,100155cc <_malloc_r+0x73c>
100152b4:	81000117 	ldw	r4,4(r16)
100152b8:	017ffe04 	movi	r5,-8
100152bc:	b0fffd04 	addi	r3,r22,-12
100152c0:	1946703a 	and	r3,r3,r5
100152c4:	2100004c 	andi	r4,r4,1
100152c8:	20c8b03a 	or	r4,r4,r3
100152cc:	81000115 	stw	r4,4(r16)
100152d0:	01400144 	movi	r5,5
100152d4:	80c9883a 	add	r4,r16,r3
100152d8:	21400115 	stw	r5,4(r4)
100152dc:	21400215 	stw	r5,8(r4)
100152e0:	18c00428 	cmpgeui	r3,r3,16
100152e4:	1800cf1e 	bne	r3,zero,10015624 <_malloc_r+0x794>
100152e8:	bd000117 	ldw	r20,4(r23)
100152ec:	b821883a 	mov	r16,r23
100152f0:	00c400f4 	movhi	r3,4099
100152f4:	18eaac17 	ldw	r3,-21840(r3)
100152f8:	1880022e 	bgeu	r3,r2,10015304 <_malloc_r+0x474>
100152fc:	00c400f4 	movhi	r3,4099
10015300:	18aaac15 	stw	r2,-21840(r3)
10015304:	00c400f4 	movhi	r3,4099
10015308:	18eaab17 	ldw	r3,-21844(r3)
1001530c:	18805a2e 	bgeu	r3,r2,10015478 <_malloc_r+0x5e8>
10015310:	00c400f4 	movhi	r3,4099
10015314:	18aaab15 	stw	r2,-21844(r3)
10015318:	00005706 	br	10015478 <_malloc_r+0x5e8>
1001531c:	88c00054 	ori	r3,r17,1
10015320:	80c00115 	stw	r3,4(r16)
10015324:	8463883a 	add	r17,r16,r17
10015328:	10800054 	ori	r2,r2,1
1001532c:	9c400215 	stw	r17,8(r19)
10015330:	88800115 	stw	r2,4(r17)
10015334:	9009883a 	mov	r4,r18
10015338:	00223a40 	call	100223a4 <__malloc_unlock>
1001533c:	80800204 	addi	r2,r16,8
10015340:	003f7c06 	br	10015134 <_malloc_r+0x2a4>
10015344:	400d883a 	mov	r6,r8
10015348:	003f2106 	br	10014fd0 <_malloc_r+0x140>
1001534c:	81000317 	ldw	r4,12(r16)
10015350:	003eee06 	br	10014f0c <_malloc_r+0x7c>
10015354:	1006d27a 	srli	r3,r2,9
10015358:	19000168 	cmpgeui	r4,r3,5
1001535c:	20003e26 	beq	r4,zero,10015458 <_malloc_r+0x5c8>
10015360:	19000568 	cmpgeui	r4,r3,21
10015364:	20007a1e 	bne	r4,zero,10015550 <_malloc_r+0x6c0>
10015368:	19401704 	addi	r5,r3,92
1001536c:	280a90fa 	slli	r5,r5,3
10015370:	190016c4 	addi	r4,r3,91
10015374:	994b883a 	add	r5,r19,r5
10015378:	28c00017 	ldw	r3,0(r5)
1001537c:	297ffe04 	addi	r5,r5,-8
10015380:	28c06226 	beq	r5,r3,1001550c <_malloc_r+0x67c>
10015384:	01ffff04 	movi	r7,-4
10015388:	19000117 	ldw	r4,4(r3)
1001538c:	21c8703a 	and	r4,r4,r7
10015390:	1100022e 	bgeu	r2,r4,1001539c <_malloc_r+0x50c>
10015394:	18c00217 	ldw	r3,8(r3)
10015398:	28fffb1e 	bne	r5,r3,10015388 <_malloc_r+0x4f8>
1001539c:	19400317 	ldw	r5,12(r3)
100153a0:	98800117 	ldw	r2,4(r19)
100153a4:	81400315 	stw	r5,12(r16)
100153a8:	80c00215 	stw	r3,8(r16)
100153ac:	2c000215 	stw	r16,8(r5)
100153b0:	1c000315 	stw	r16,12(r3)
100153b4:	003f2506 	br	1001504c <_malloc_r+0x1bc>
100153b8:	10c00568 	cmpgeui	r3,r2,21
100153bc:	18003826 	beq	r3,zero,100154a0 <_malloc_r+0x610>
100153c0:	10c01568 	cmpgeui	r3,r2,85
100153c4:	1800691e 	bne	r3,zero,1001556c <_malloc_r+0x6dc>
100153c8:	8804d33a 	srli	r2,r17,12
100153cc:	11801bc4 	addi	r6,r2,111
100153d0:	12001b84 	addi	r8,r2,110
100153d4:	300a90fa 	slli	r5,r6,3
100153d8:	003ee606 	br	10014f74 <_malloc_r+0xe4>
100153dc:	5ac00044 	addi	r11,r11,1
100153e0:	588000cc 	andi	r2,r11,3
100153e4:	39c00204 	addi	r7,r7,8
100153e8:	103f2d1e 	bne	r2,zero,100150a0 <_malloc_r+0x210>
100153ec:	00003306 	br	100154bc <_malloc_r+0x62c>
100153f0:	8085883a 	add	r2,r16,r2
100153f4:	10c00117 	ldw	r3,4(r2)
100153f8:	81000317 	ldw	r4,12(r16)
100153fc:	81400217 	ldw	r5,8(r16)
10015400:	18c00054 	ori	r3,r3,1
10015404:	10c00115 	stw	r3,4(r2)
10015408:	29000315 	stw	r4,12(r5)
1001540c:	21400215 	stw	r5,8(r4)
10015410:	9009883a 	mov	r4,r18
10015414:	00223a40 	call	100223a4 <__malloc_unlock>
10015418:	80800204 	addi	r2,r16,8
1001541c:	003f4506 	br	10015134 <_malloc_r+0x2a4>
10015420:	880cd0fa 	srli	r6,r17,3
10015424:	88800204 	addi	r2,r17,8
10015428:	003eae06 	br	10014ee4 <_malloc_r+0x54>
1001542c:	8085883a 	add	r2,r16,r2
10015430:	10c00117 	ldw	r3,4(r2)
10015434:	9009883a 	mov	r4,r18
10015438:	18c00054 	ori	r3,r3,1
1001543c:	10c00115 	stw	r3,4(r2)
10015440:	00223a40 	call	100223a4 <__malloc_unlock>
10015444:	80800204 	addi	r2,r16,8
10015448:	003f3a06 	br	10015134 <_malloc_r+0x2a4>
1001544c:	89000054 	ori	r4,r17,1
10015450:	81000115 	stw	r4,4(r16)
10015454:	003f2706 	br	100150f4 <_malloc_r+0x264>
10015458:	1006d1ba 	srli	r3,r2,6
1001545c:	19400e44 	addi	r5,r3,57
10015460:	19000e04 	addi	r4,r3,56
10015464:	280a90fa 	slli	r5,r5,3
10015468:	003fc206 	br	10015374 <_malloc_r+0x4e4>
1001546c:	84c04626 	beq	r16,r19,10015588 <_malloc_r+0x6f8>
10015470:	9c000217 	ldw	r16,8(r19)
10015474:	85000117 	ldw	r20,4(r16)
10015478:	00bfff04 	movi	r2,-4
1001547c:	a0a8703a 	and	r20,r20,r2
10015480:	a445c83a 	sub	r2,r20,r17
10015484:	a4400236 	bltu	r20,r17,10015490 <_malloc_r+0x600>
10015488:	10c00408 	cmpgei	r3,r2,16
1001548c:	183fa31e 	bne	r3,zero,1001531c <_malloc_r+0x48c>
10015490:	9009883a 	mov	r4,r18
10015494:	00223a40 	call	100223a4 <__malloc_unlock>
10015498:	0005883a 	mov	r2,zero
1001549c:	003f2506 	br	10015134 <_malloc_r+0x2a4>
100154a0:	11801704 	addi	r6,r2,92
100154a4:	120016c4 	addi	r8,r2,91
100154a8:	300a90fa 	slli	r5,r6,3
100154ac:	003eb106 	br	10014f74 <_malloc_r+0xe4>
100154b0:	50800217 	ldw	r2,8(r10)
100154b4:	31bfffc4 	addi	r6,r6,-1
100154b8:	1280701e 	bne	r2,r10,1001567c <_malloc_r+0x7ec>
100154bc:	308000cc 	andi	r2,r6,3
100154c0:	52bffe04 	addi	r10,r10,-8
100154c4:	103ffa1e 	bne	r2,zero,100154b0 <_malloc_r+0x620>
100154c8:	98c00117 	ldw	r3,4(r19)
100154cc:	0104303a 	nor	r2,zero,r4
100154d0:	10c4703a 	and	r2,r2,r3
100154d4:	98800115 	stw	r2,4(r19)
100154d8:	2109883a 	add	r4,r4,r4
100154dc:	113f3136 	bltu	r2,r4,100151a4 <_malloc_r+0x314>
100154e0:	203f3026 	beq	r4,zero,100151a4 <_malloc_r+0x314>
100154e4:	2086703a 	and	r3,r4,r2
100154e8:	1800041e 	bne	r3,zero,100154fc <_malloc_r+0x66c>
100154ec:	2109883a 	add	r4,r4,r4
100154f0:	2086703a 	and	r3,r4,r2
100154f4:	5ac00104 	addi	r11,r11,4
100154f8:	183ffc26 	beq	r3,zero,100154ec <_malloc_r+0x65c>
100154fc:	580d883a 	mov	r6,r11
10015500:	003ee306 	br	10015090 <_malloc_r+0x200>
10015504:	a5000404 	addi	r20,r20,16
10015508:	003f3906 	br	100151f0 <_malloc_r+0x360>
1001550c:	2009d0ba 	srai	r4,r4,2
10015510:	00800044 	movi	r2,1
10015514:	99c00117 	ldw	r7,4(r19)
10015518:	1104983a 	sll	r2,r2,r4
1001551c:	11c4b03a 	or	r2,r2,r7
10015520:	98800115 	stw	r2,4(r19)
10015524:	003f9f06 	br	100153a4 <_malloc_r+0x514>
10015528:	bd05883a 	add	r2,r23,r20
1001552c:	0085c83a 	sub	r2,zero,r2
10015530:	1543ffcc 	andi	r21,r2,4095
10015534:	a80b883a 	mov	r5,r21
10015538:	9009883a 	mov	r4,r18
1001553c:	0015f380 	call	10015f38 <_sbrk_r>
10015540:	10ffffe0 	cmpeqi	r3,r2,-1
10015544:	183f4e26 	beq	r3,zero,10015280 <_malloc_r+0x3f0>
10015548:	002b883a 	mov	r21,zero
1001554c:	003f4e06 	br	10015288 <_malloc_r+0x3f8>
10015550:	19001568 	cmpgeui	r4,r3,85
10015554:	2000201e 	bne	r4,zero,100155d8 <_malloc_r+0x748>
10015558:	1006d33a 	srli	r3,r2,12
1001555c:	19401bc4 	addi	r5,r3,111
10015560:	19001b84 	addi	r4,r3,110
10015564:	280a90fa 	slli	r5,r5,3
10015568:	003f8206 	br	10015374 <_malloc_r+0x4e4>
1001556c:	10c05568 	cmpgeui	r3,r2,341
10015570:	1800201e 	bne	r3,zero,100155f4 <_malloc_r+0x764>
10015574:	8804d3fa 	srli	r2,r17,15
10015578:	11801e04 	addi	r6,r2,120
1001557c:	12001dc4 	addi	r8,r2,119
10015580:	300a90fa 	slli	r5,r6,3
10015584:	003e7b06 	br	10014f74 <_malloc_r+0xe4>
10015588:	008400f4 	movhi	r2,4099
1001558c:	10eac417 	ldw	r3,-21744(r2)
10015590:	a0c7883a 	add	r3,r20,r3
10015594:	10eac415 	stw	r3,-21744(r2)
10015598:	003f2306 	br	10015228 <_malloc_r+0x398>
1001559c:	a903ffcc 	andi	r4,r21,4095
100155a0:	203f211e 	bne	r4,zero,10015228 <_malloc_r+0x398>
100155a4:	9c000217 	ldw	r16,8(r19)
100155a8:	b529883a 	add	r20,r22,r20
100155ac:	a5000054 	ori	r20,r20,1
100155b0:	85000115 	stw	r20,4(r16)
100155b4:	003f4e06 	br	100152f0 <_malloc_r+0x460>
100155b8:	008400f4 	movhi	r2,4099
100155bc:	15e15a15 	stw	r23,-31384(r2)
100155c0:	003f2106 	br	10015248 <_malloc_r+0x3b8>
100155c4:	b821883a 	mov	r16,r23
100155c8:	003f4906 	br	100152f0 <_malloc_r+0x460>
100155cc:	00800044 	movi	r2,1
100155d0:	b8800115 	stw	r2,4(r23)
100155d4:	003fae06 	br	10015490 <_malloc_r+0x600>
100155d8:	19005568 	cmpgeui	r4,r3,341
100155dc:	2000191e 	bne	r4,zero,10015644 <_malloc_r+0x7b4>
100155e0:	1006d3fa 	srli	r3,r2,15
100155e4:	19401e04 	addi	r5,r3,120
100155e8:	19001dc4 	addi	r4,r3,119
100155ec:	280a90fa 	slli	r5,r5,3
100155f0:	003f6006 	br	10015374 <_malloc_r+0x4e4>
100155f4:	10815568 	cmpgeui	r2,r2,1365
100155f8:	1000191e 	bne	r2,zero,10015660 <_malloc_r+0x7d0>
100155fc:	8804d4ba 	srli	r2,r17,18
10015600:	11801f44 	addi	r6,r2,125
10015604:	12001f04 	addi	r8,r2,124
10015608:	300a90fa 	slli	r5,r6,3
1001560c:	003e5906 	br	10014f74 <_malloc_r+0xe4>
10015610:	e73ffe04 	addi	fp,fp,-8
10015614:	a729883a 	add	r20,r20,fp
10015618:	a5e9c83a 	sub	r20,r20,r23
1001561c:	002b883a 	mov	r21,zero
10015620:	003f1906 	br	10015288 <_malloc_r+0x3f8>
10015624:	81400204 	addi	r5,r16,8
10015628:	9009883a 	mov	r4,r18
1001562c:	001acb00 	call	1001acb0 <_free_r>
10015630:	9c000217 	ldw	r16,8(r19)
10015634:	008400f4 	movhi	r2,4099
10015638:	10aac417 	ldw	r2,-21744(r2)
1001563c:	85000117 	ldw	r20,4(r16)
10015640:	003f2b06 	br	100152f0 <_malloc_r+0x460>
10015644:	18c15568 	cmpgeui	r3,r3,1365
10015648:	1800091e 	bne	r3,zero,10015670 <_malloc_r+0x7e0>
1001564c:	1006d4ba 	srli	r3,r2,18
10015650:	19401f44 	addi	r5,r3,125
10015654:	19001f04 	addi	r4,r3,124
10015658:	280a90fa 	slli	r5,r5,3
1001565c:	003f4506 	br	10015374 <_malloc_r+0x4e4>
10015660:	0140fe04 	movi	r5,1016
10015664:	01801fc4 	movi	r6,127
10015668:	02001f84 	movi	r8,126
1001566c:	003e4106 	br	10014f74 <_malloc_r+0xe4>
10015670:	0140fe04 	movi	r5,1016
10015674:	01001f84 	movi	r4,126
10015678:	003f3e06 	br	10015374 <_malloc_r+0x4e4>
1001567c:	98800117 	ldw	r2,4(r19)
10015680:	003f9506 	br	100154d8 <_malloc_r+0x648>

10015684 <memchr>:
10015684:	208000cc 	andi	r2,r4,3
10015688:	280f883a 	mov	r7,r5
1001568c:	10003526 	beq	r2,zero,10015764 <memchr+0xe0>
10015690:	30bfffc4 	addi	r2,r6,-1
10015694:	30001926 	beq	r6,zero,100156fc <memchr+0x78>
10015698:	20c00003 	ldbu	r3,0(r4)
1001569c:	29803fcc 	andi	r6,r5,255
100156a0:	30c0061e 	bne	r6,r3,100156bc <memchr+0x38>
100156a4:	00001706 	br	10015704 <memchr+0x80>
100156a8:	10bfffc4 	addi	r2,r2,-1
100156ac:	10ffffe0 	cmpeqi	r3,r2,-1
100156b0:	1800121e 	bne	r3,zero,100156fc <memchr+0x78>
100156b4:	20c00003 	ldbu	r3,0(r4)
100156b8:	19801226 	beq	r3,r6,10015704 <memchr+0x80>
100156bc:	21000044 	addi	r4,r4,1
100156c0:	20c000cc 	andi	r3,r4,3
100156c4:	183ff81e 	bne	r3,zero,100156a8 <memchr+0x24>
100156c8:	10c00128 	cmpgeui	r3,r2,4
100156cc:	18000f1e 	bne	r3,zero,1001570c <memchr+0x88>
100156d0:	10000a26 	beq	r2,zero,100156fc <memchr+0x78>
100156d4:	20c00003 	ldbu	r3,0(r4)
100156d8:	29403fcc 	andi	r5,r5,255
100156dc:	19400926 	beq	r3,r5,10015704 <memchr+0x80>
100156e0:	2085883a 	add	r2,r4,r2
100156e4:	39403fcc 	andi	r5,r7,255
100156e8:	00000206 	br	100156f4 <memchr+0x70>
100156ec:	20c00003 	ldbu	r3,0(r4)
100156f0:	19400426 	beq	r3,r5,10015704 <memchr+0x80>
100156f4:	21000044 	addi	r4,r4,1
100156f8:	113ffc1e 	bne	r2,r4,100156ec <memchr+0x68>
100156fc:	0005883a 	mov	r2,zero
10015700:	f800283a 	ret
10015704:	2005883a 	mov	r2,r4
10015708:	f800283a 	ret
1001570c:	280c923a 	slli	r6,r5,8
10015710:	2a403fcc 	andi	r9,r5,255
10015714:	02bfbff4 	movhi	r10,65279
10015718:	31bfffcc 	andi	r6,r6,65535
1001571c:	3246b03a 	or	r3,r6,r9
10015720:	1812943a 	slli	r9,r3,16
10015724:	02202074 	movhi	r8,32897
10015728:	52bfbfc4 	addi	r10,r10,-257
1001572c:	48d2b03a 	or	r9,r9,r3
10015730:	42202004 	addi	r8,r8,-32640
10015734:	20c00017 	ldw	r3,0(r4)
10015738:	48c6f03a 	xor	r3,r9,r3
1001573c:	1a8d883a 	add	r6,r3,r10
10015740:	00c6303a 	nor	r3,zero,r3
10015744:	30c6703a 	and	r3,r6,r3
10015748:	1a06703a 	and	r3,r3,r8
1001574c:	183fe11e 	bne	r3,zero,100156d4 <memchr+0x50>
10015750:	10bfff04 	addi	r2,r2,-4
10015754:	10c00128 	cmpgeui	r3,r2,4
10015758:	21000104 	addi	r4,r4,4
1001575c:	183ff51e 	bne	r3,zero,10015734 <memchr+0xb0>
10015760:	003fdb06 	br	100156d0 <memchr+0x4c>
10015764:	3005883a 	mov	r2,r6
10015768:	003fd706 	br	100156c8 <memchr+0x44>

1001576c <memcmp>:
1001576c:	30800130 	cmpltui	r2,r6,4
10015770:	10000b1e 	bne	r2,zero,100157a0 <memcmp+0x34>
10015774:	2144b03a 	or	r2,r4,r5
10015778:	108000cc 	andi	r2,r2,3
1001577c:	10001a1e 	bne	r2,zero,100157e8 <memcmp+0x7c>
10015780:	20c00017 	ldw	r3,0(r4)
10015784:	28800017 	ldw	r2,0(r5)
10015788:	1880171e 	bne	r3,r2,100157e8 <memcmp+0x7c>
1001578c:	31bfff04 	addi	r6,r6,-4
10015790:	30800128 	cmpgeui	r2,r6,4
10015794:	21000104 	addi	r4,r4,4
10015798:	29400104 	addi	r5,r5,4
1001579c:	103ff81e 	bne	r2,zero,10015780 <memcmp+0x14>
100157a0:	30ffffc4 	addi	r3,r6,-1
100157a4:	30000e26 	beq	r6,zero,100157e0 <memcmp+0x74>
100157a8:	29800003 	ldbu	r6,0(r5)
100157ac:	20800003 	ldbu	r2,0(r4)
100157b0:	30800f1e 	bne	r6,r2,100157f0 <memcmp+0x84>
100157b4:	18800044 	addi	r2,r3,1
100157b8:	20c00044 	addi	r3,r4,1
100157bc:	2089883a 	add	r4,r4,r2
100157c0:	00000506 	br	100157d8 <memcmp+0x6c>
100157c4:	18800003 	ldbu	r2,0(r3)
100157c8:	29800003 	ldbu	r6,0(r5)
100157cc:	18c00044 	addi	r3,r3,1
100157d0:	10803fcc 	andi	r2,r2,255
100157d4:	1180061e 	bne	r2,r6,100157f0 <memcmp+0x84>
100157d8:	29400044 	addi	r5,r5,1
100157dc:	193ff91e 	bne	r3,r4,100157c4 <memcmp+0x58>
100157e0:	0005883a 	mov	r2,zero
100157e4:	f800283a 	ret
100157e8:	30ffffc4 	addi	r3,r6,-1
100157ec:	003fee06 	br	100157a8 <memcmp+0x3c>
100157f0:	1185c83a 	sub	r2,r2,r6
100157f4:	f800283a 	ret

100157f8 <memcpy>:
100157f8:	30c00430 	cmpltui	r3,r6,16
100157fc:	2005883a 	mov	r2,r4
10015800:	18002d1e 	bne	r3,zero,100158b8 <memcpy+0xc0>
10015804:	2906b03a 	or	r3,r5,r4
10015808:	18c000cc 	andi	r3,r3,3
1001580c:	1800351e 	bne	r3,zero,100158e4 <memcpy+0xec>
10015810:	32fffc04 	addi	r11,r6,-16
10015814:	5816d13a 	srli	r11,r11,4
10015818:	2007883a 	mov	r3,r4
1001581c:	280f883a 	mov	r7,r5
10015820:	5ac00044 	addi	r11,r11,1
10015824:	5816913a 	slli	r11,r11,4
10015828:	22c9883a 	add	r4,r4,r11
1001582c:	3a000017 	ldw	r8,0(r7)
10015830:	3a800117 	ldw	r10,4(r7)
10015834:	3a400217 	ldw	r9,8(r7)
10015838:	39c00404 	addi	r7,r7,16
1001583c:	1a000015 	stw	r8,0(r3)
10015840:	3a3fff17 	ldw	r8,-4(r7)
10015844:	1a800115 	stw	r10,4(r3)
10015848:	1a400215 	stw	r9,8(r3)
1001584c:	18c00404 	addi	r3,r3,16
10015850:	1a3fff15 	stw	r8,-4(r3)
10015854:	20fff51e 	bne	r4,r3,1001582c <memcpy+0x34>
10015858:	3100030c 	andi	r4,r6,12
1001585c:	2acb883a 	add	r5,r5,r11
10015860:	320003cc 	andi	r8,r6,15
10015864:	20002226 	beq	r4,zero,100158f0 <memcpy+0xf8>
10015868:	2809883a 	mov	r4,r5
1001586c:	1813883a 	mov	r9,r3
10015870:	21000104 	addi	r4,r4,4
10015874:	22bfff17 	ldw	r10,-4(r4)
10015878:	410fc83a 	sub	r7,r8,r4
1001587c:	4a400104 	addi	r9,r9,4
10015880:	29cf883a 	add	r7,r5,r7
10015884:	4abfff15 	stw	r10,-4(r9)
10015888:	39c00128 	cmpgeui	r7,r7,4
1001588c:	383ff81e 	bne	r7,zero,10015870 <memcpy+0x78>
10015890:	413fff04 	addi	r4,r8,-4
10015894:	2008d0ba 	srli	r4,r4,2
10015898:	318000cc 	andi	r6,r6,3
1001589c:	31ffffc4 	addi	r7,r6,-1
100158a0:	21000044 	addi	r4,r4,1
100158a4:	200890ba 	slli	r4,r4,2
100158a8:	1907883a 	add	r3,r3,r4
100158ac:	290b883a 	add	r5,r5,r4
100158b0:	3000041e 	bne	r6,zero,100158c4 <memcpy+0xcc>
100158b4:	f800283a 	ret
100158b8:	2007883a 	mov	r3,r4
100158bc:	31ffffc4 	addi	r7,r6,-1
100158c0:	303ffc26 	beq	r6,zero,100158b4 <memcpy+0xbc>
100158c4:	39c00044 	addi	r7,r7,1
100158c8:	19cf883a 	add	r7,r3,r7
100158cc:	29400044 	addi	r5,r5,1
100158d0:	29bfffc3 	ldbu	r6,-1(r5)
100158d4:	18c00044 	addi	r3,r3,1
100158d8:	19bfffc5 	stb	r6,-1(r3)
100158dc:	19fffb1e 	bne	r3,r7,100158cc <memcpy+0xd4>
100158e0:	f800283a 	ret
100158e4:	31ffffc4 	addi	r7,r6,-1
100158e8:	2007883a 	mov	r3,r4
100158ec:	003ff506 	br	100158c4 <memcpy+0xcc>
100158f0:	400d883a 	mov	r6,r8
100158f4:	003ff106 	br	100158bc <memcpy+0xc4>

100158f8 <memmove>:
100158f8:	2005883a 	mov	r2,r4
100158fc:	29000a2e 	bgeu	r5,r4,10015928 <memmove+0x30>
10015900:	2989883a 	add	r4,r5,r6
10015904:	1100082e 	bgeu	r2,r4,10015928 <memmove+0x30>
10015908:	1187883a 	add	r3,r2,r6
1001590c:	30003e26 	beq	r6,zero,10015a08 <memmove+0x110>
10015910:	213fffc4 	addi	r4,r4,-1
10015914:	21400003 	ldbu	r5,0(r4)
10015918:	18ffffc4 	addi	r3,r3,-1
1001591c:	19400005 	stb	r5,0(r3)
10015920:	10fffb1e 	bne	r2,r3,10015910 <memmove+0x18>
10015924:	f800283a 	ret
10015928:	30c00430 	cmpltui	r3,r6,16
1001592c:	18000b26 	beq	r3,zero,1001595c <memmove+0x64>
10015930:	1007883a 	mov	r3,r2
10015934:	31ffffc4 	addi	r7,r6,-1
10015938:	30003726 	beq	r6,zero,10015a18 <memmove+0x120>
1001593c:	39c00044 	addi	r7,r7,1
10015940:	29cf883a 	add	r7,r5,r7
10015944:	29400044 	addi	r5,r5,1
10015948:	29bfffc3 	ldbu	r6,-1(r5)
1001594c:	18c00044 	addi	r3,r3,1
10015950:	19bfffc5 	stb	r6,-1(r3)
10015954:	29fffb1e 	bne	r5,r7,10015944 <memmove+0x4c>
10015958:	f800283a 	ret
1001595c:	2886b03a 	or	r3,r5,r2
10015960:	18c000cc 	andi	r3,r3,3
10015964:	1800291e 	bne	r3,zero,10015a0c <memmove+0x114>
10015968:	327ffc04 	addi	r9,r6,-16
1001596c:	4812d13a 	srli	r9,r9,4
10015970:	280f883a 	mov	r7,r5
10015974:	1007883a 	mov	r3,r2
10015978:	4a400044 	addi	r9,r9,1
1001597c:	4812913a 	slli	r9,r9,4
10015980:	1251883a 	add	r8,r2,r9
10015984:	39000017 	ldw	r4,0(r7)
10015988:	18c00404 	addi	r3,r3,16
1001598c:	39c00404 	addi	r7,r7,16
10015990:	193ffc15 	stw	r4,-16(r3)
10015994:	393ffd17 	ldw	r4,-12(r7)
10015998:	193ffd15 	stw	r4,-12(r3)
1001599c:	393ffe17 	ldw	r4,-8(r7)
100159a0:	193ffe15 	stw	r4,-8(r3)
100159a4:	393fff17 	ldw	r4,-4(r7)
100159a8:	193fff15 	stw	r4,-4(r3)
100159ac:	40fff51e 	bne	r8,r3,10015984 <memmove+0x8c>
100159b0:	3100030c 	andi	r4,r6,12
100159b4:	2a4b883a 	add	r5,r5,r9
100159b8:	320003cc 	andi	r8,r6,15
100159bc:	20001726 	beq	r4,zero,10015a1c <memmove+0x124>
100159c0:	2813883a 	mov	r9,r5
100159c4:	180f883a 	mov	r7,r3
100159c8:	4a400104 	addi	r9,r9,4
100159cc:	39c00104 	addi	r7,r7,4
100159d0:	4abfff17 	ldw	r10,-4(r9)
100159d4:	41c9c83a 	sub	r4,r8,r7
100159d8:	1909883a 	add	r4,r3,r4
100159dc:	3abfff15 	stw	r10,-4(r7)
100159e0:	21000128 	cmpgeui	r4,r4,4
100159e4:	203ff81e 	bne	r4,zero,100159c8 <memmove+0xd0>
100159e8:	413fff04 	addi	r4,r8,-4
100159ec:	2008d0ba 	srli	r4,r4,2
100159f0:	318000cc 	andi	r6,r6,3
100159f4:	21000044 	addi	r4,r4,1
100159f8:	200890ba 	slli	r4,r4,2
100159fc:	1907883a 	add	r3,r3,r4
10015a00:	290b883a 	add	r5,r5,r4
10015a04:	003fcb06 	br	10015934 <memmove+0x3c>
10015a08:	f800283a 	ret
10015a0c:	31ffffc4 	addi	r7,r6,-1
10015a10:	1007883a 	mov	r3,r2
10015a14:	003fc906 	br	1001593c <memmove+0x44>
10015a18:	f800283a 	ret
10015a1c:	400d883a 	mov	r6,r8
10015a20:	003fc406 	br	10015934 <memmove+0x3c>

10015a24 <memset>:
10015a24:	20c000cc 	andi	r3,r4,3
10015a28:	2005883a 	mov	r2,r4
10015a2c:	18003626 	beq	r3,zero,10015b08 <memset+0xe4>
10015a30:	31ffffc4 	addi	r7,r6,-1
10015a34:	30003326 	beq	r6,zero,10015b04 <memset+0xe0>
10015a38:	2811883a 	mov	r8,r5
10015a3c:	2007883a 	mov	r3,r4
10015a40:	00000306 	br	10015a50 <memset+0x2c>
10015a44:	39ffffc4 	addi	r7,r7,-1
10015a48:	39bfffe0 	cmpeqi	r6,r7,-1
10015a4c:	30002d1e 	bne	r6,zero,10015b04 <memset+0xe0>
10015a50:	18c00044 	addi	r3,r3,1
10015a54:	1a3fffc5 	stb	r8,-1(r3)
10015a58:	198000cc 	andi	r6,r3,3
10015a5c:	303ff91e 	bne	r6,zero,10015a44 <memset+0x20>
10015a60:	39000130 	cmpltui	r4,r7,4
10015a64:	2000221e 	bne	r4,zero,10015af0 <memset+0xcc>
10015a68:	29003fcc 	andi	r4,r5,255
10015a6c:	200c923a 	slli	r6,r4,8
10015a70:	3a000430 	cmpltui	r8,r7,16
10015a74:	3108b03a 	or	r4,r6,r4
10015a78:	200c943a 	slli	r6,r4,16
10015a7c:	310cb03a 	or	r6,r6,r4
10015a80:	40000e1e 	bne	r8,zero,10015abc <memset+0x98>
10015a84:	3a3ffc04 	addi	r8,r7,-16
10015a88:	4010d13a 	srli	r8,r8,4
10015a8c:	42000044 	addi	r8,r8,1
10015a90:	4010913a 	slli	r8,r8,4
10015a94:	1a11883a 	add	r8,r3,r8
10015a98:	19800015 	stw	r6,0(r3)
10015a9c:	19800115 	stw	r6,4(r3)
10015aa0:	19800215 	stw	r6,8(r3)
10015aa4:	18c00404 	addi	r3,r3,16
10015aa8:	19bfff15 	stw	r6,-4(r3)
10015aac:	40fffa1e 	bne	r8,r3,10015a98 <memset+0x74>
10015ab0:	3900030c 	andi	r4,r7,12
10015ab4:	39c003cc 	andi	r7,r7,15
10015ab8:	20000d26 	beq	r4,zero,10015af0 <memset+0xcc>
10015abc:	1809883a 	mov	r4,r3
10015ac0:	21000104 	addi	r4,r4,4
10015ac4:	3911c83a 	sub	r8,r7,r4
10015ac8:	1a11883a 	add	r8,r3,r8
10015acc:	21bfff15 	stw	r6,-4(r4)
10015ad0:	42000128 	cmpgeui	r8,r8,4
10015ad4:	403ffa1e 	bne	r8,zero,10015ac0 <memset+0x9c>
10015ad8:	393fff04 	addi	r4,r7,-4
10015adc:	2008d0ba 	srli	r4,r4,2
10015ae0:	39c000cc 	andi	r7,r7,3
10015ae4:	21000044 	addi	r4,r4,1
10015ae8:	200890ba 	slli	r4,r4,2
10015aec:	1907883a 	add	r3,r3,r4
10015af0:	38000426 	beq	r7,zero,10015b04 <memset+0xe0>
10015af4:	19cf883a 	add	r7,r3,r7
10015af8:	18c00044 	addi	r3,r3,1
10015afc:	197fffc5 	stb	r5,-1(r3)
10015b00:	38fffd1e 	bne	r7,r3,10015af8 <memset+0xd4>
10015b04:	f800283a 	ret
10015b08:	2007883a 	mov	r3,r4
10015b0c:	300f883a 	mov	r7,r6
10015b10:	003fd306 	br	10015a60 <memset+0x3c>

10015b14 <_open_r>:
10015b14:	defffe04 	addi	sp,sp,-8
10015b18:	2805883a 	mov	r2,r5
10015b1c:	dc000015 	stw	r16,0(sp)
10015b20:	300b883a 	mov	r5,r6
10015b24:	2021883a 	mov	r16,r4
10015b28:	380d883a 	mov	r6,r7
10015b2c:	1009883a 	mov	r4,r2
10015b30:	008400f4 	movhi	r2,4099
10015b34:	dfc00115 	stw	ra,4(sp)
10015b38:	102aaa15 	stw	zero,-21848(r2)
10015b3c:	00224bc0 	call	100224bc <open>
10015b40:	10ffffd8 	cmpnei	r3,r2,-1
10015b44:	18000426 	beq	r3,zero,10015b58 <_open_r+0x44>
10015b48:	dfc00117 	ldw	ra,4(sp)
10015b4c:	dc000017 	ldw	r16,0(sp)
10015b50:	dec00204 	addi	sp,sp,8
10015b54:	f800283a 	ret
10015b58:	00c400f4 	movhi	r3,4099
10015b5c:	18eaaa17 	ldw	r3,-21848(r3)
10015b60:	183ff926 	beq	r3,zero,10015b48 <_open_r+0x34>
10015b64:	80c00015 	stw	r3,0(r16)
10015b68:	dfc00117 	ldw	ra,4(sp)
10015b6c:	dc000017 	ldw	r16,0(sp)
10015b70:	dec00204 	addi	sp,sp,8
10015b74:	f800283a 	ret

10015b78 <_printf_r>:
10015b78:	defffd04 	addi	sp,sp,-12
10015b7c:	2805883a 	mov	r2,r5
10015b80:	dfc00015 	stw	ra,0(sp)
10015b84:	d9800115 	stw	r6,4(sp)
10015b88:	d9c00215 	stw	r7,8(sp)
10015b8c:	21400217 	ldw	r5,8(r4)
10015b90:	d9c00104 	addi	r7,sp,4
10015b94:	100d883a 	mov	r6,r2
10015b98:	00167d00 	call	100167d0 <___vfprintf_internal_r>
10015b9c:	dfc00017 	ldw	ra,0(sp)
10015ba0:	dec00304 	addi	sp,sp,12
10015ba4:	f800283a 	ret

10015ba8 <printf>:
10015ba8:	defffc04 	addi	sp,sp,-16
10015bac:	dfc00015 	stw	ra,0(sp)
10015bb0:	d9400115 	stw	r5,4(sp)
10015bb4:	d9800215 	stw	r6,8(sp)
10015bb8:	d9c00315 	stw	r7,12(sp)
10015bbc:	008400f4 	movhi	r2,4099
10015bc0:	10a15917 	ldw	r2,-31388(r2)
10015bc4:	200b883a 	mov	r5,r4
10015bc8:	d9800104 	addi	r6,sp,4
10015bcc:	11000217 	ldw	r4,8(r2)
10015bd0:	00189300 	call	10018930 <__vfprintf_internal>
10015bd4:	dfc00017 	ldw	ra,0(sp)
10015bd8:	dec00404 	addi	sp,sp,16
10015bdc:	f800283a 	ret

10015be0 <_putchar_r>:
10015be0:	21800217 	ldw	r6,8(r4)
10015be4:	001c5e01 	jmpi	1001c5e0 <_putc_r>

10015be8 <putchar>:
10015be8:	008400f4 	movhi	r2,4099
10015bec:	10a15917 	ldw	r2,-31388(r2)
10015bf0:	200b883a 	mov	r5,r4
10015bf4:	11800217 	ldw	r6,8(r2)
10015bf8:	1009883a 	mov	r4,r2
10015bfc:	001c5e01 	jmpi	1001c5e0 <_putc_r>

10015c00 <_puts_r>:
10015c00:	defff504 	addi	sp,sp,-44
10015c04:	dc000815 	stw	r16,32(sp)
10015c08:	2021883a 	mov	r16,r4
10015c0c:	2809883a 	mov	r4,r5
10015c10:	dc400915 	stw	r17,36(sp)
10015c14:	dfc00a15 	stw	ra,40(sp)
10015c18:	2823883a 	mov	r17,r5
10015c1c:	00164b40 	call	100164b4 <strlen>
10015c20:	11000044 	addi	r4,r2,1
10015c24:	d8800515 	stw	r2,20(sp)
10015c28:	00800044 	movi	r2,1
10015c2c:	00c400b4 	movhi	r3,4098
10015c30:	d8800715 	stw	r2,28(sp)
10015c34:	d8800404 	addi	r2,sp,16
10015c38:	18d6c704 	addi	r3,r3,23324
10015c3c:	d8800115 	stw	r2,4(sp)
10015c40:	00800084 	movi	r2,2
10015c44:	dc400415 	stw	r17,16(sp)
10015c48:	d8c00615 	stw	r3,24(sp)
10015c4c:	d9000315 	stw	r4,12(sp)
10015c50:	d8800215 	stw	r2,8(sp)
10015c54:	81400217 	ldw	r5,8(r16)
10015c58:	80000226 	beq	r16,zero,10015c64 <_puts_r+0x64>
10015c5c:	80800e17 	ldw	r2,56(r16)
10015c60:	10001326 	beq	r2,zero,10015cb0 <_puts_r+0xb0>
10015c64:	2880030b 	ldhu	r2,12(r5)
10015c68:	10c8000c 	andi	r3,r2,8192
10015c6c:	1800061e 	bne	r3,zero,10015c88 <_puts_r+0x88>
10015c70:	28c01917 	ldw	r3,100(r5)
10015c74:	0137ffc4 	movi	r4,-8193
10015c78:	10880014 	ori	r2,r2,8192
10015c7c:	1906703a 	and	r3,r3,r4
10015c80:	2880030d 	sth	r2,12(r5)
10015c84:	28c01915 	stw	r3,100(r5)
10015c88:	d9800104 	addi	r6,sp,4
10015c8c:	8009883a 	mov	r4,r16
10015c90:	001afac0 	call	1001afac <__sfvwrite_r>
10015c94:	10000b1e 	bne	r2,zero,10015cc4 <_puts_r+0xc4>
10015c98:	00800284 	movi	r2,10
10015c9c:	dfc00a17 	ldw	ra,40(sp)
10015ca0:	dc400917 	ldw	r17,36(sp)
10015ca4:	dc000817 	ldw	r16,32(sp)
10015ca8:	dec00b04 	addi	sp,sp,44
10015cac:	f800283a 	ret
10015cb0:	8009883a 	mov	r4,r16
10015cb4:	d9400015 	stw	r5,0(sp)
10015cb8:	001aaa80 	call	1001aaa8 <__sinit>
10015cbc:	d9400017 	ldw	r5,0(sp)
10015cc0:	003fe806 	br	10015c64 <_puts_r+0x64>
10015cc4:	00bfffc4 	movi	r2,-1
10015cc8:	003ff406 	br	10015c9c <_puts_r+0x9c>

10015ccc <puts>:
10015ccc:	008400f4 	movhi	r2,4099
10015cd0:	200b883a 	mov	r5,r4
10015cd4:	11215917 	ldw	r4,-31388(r2)
10015cd8:	0015c001 	jmpi	10015c00 <_puts_r>

10015cdc <srand>:
10015cdc:	008400f4 	movhi	r2,4099
10015ce0:	10a15917 	ldw	r2,-31388(r2)
10015ce4:	11002915 	stw	r4,164(r2)
10015ce8:	10002a15 	stw	zero,168(r2)
10015cec:	f800283a 	ret

10015cf0 <rand>:
10015cf0:	defffe04 	addi	sp,sp,-8
10015cf4:	008400f4 	movhi	r2,4099
10015cf8:	dc000015 	stw	r16,0(sp)
10015cfc:	14215917 	ldw	r16,-31388(r2)
10015d00:	dfc00115 	stw	ra,4(sp)
10015d04:	01932574 	movhi	r6,19605
10015d08:	81002917 	ldw	r4,164(r16)
10015d0c:	81402a17 	ldw	r5,168(r16)
10015d10:	01d614b4 	movhi	r7,22610
10015d14:	319fcb44 	addi	r6,r6,32557
10015d18:	39fd0b44 	addi	r7,r7,-3027
10015d1c:	0013f540 	call	10013f54 <__muldi3>
10015d20:	11400044 	addi	r5,r2,1
10015d24:	2885803a 	cmpltu	r2,r5,r2
10015d28:	01200034 	movhi	r4,32768
10015d2c:	10c5883a 	add	r2,r2,r3
10015d30:	213fffc4 	addi	r4,r4,-1
10015d34:	80802a15 	stw	r2,168(r16)
10015d38:	1104703a 	and	r2,r2,r4
10015d3c:	81402915 	stw	r5,164(r16)
10015d40:	dfc00117 	ldw	ra,4(sp)
10015d44:	dc000017 	ldw	r16,0(sp)
10015d48:	dec00204 	addi	sp,sp,8
10015d4c:	f800283a 	ret

10015d50 <lflush>:
10015d50:	2080030b 	ldhu	r2,12(r4)
10015d54:	1080024c 	andi	r2,r2,9
10015d58:	10800258 	cmpnei	r2,r2,9
10015d5c:	10000226 	beq	r2,zero,10015d68 <lflush+0x18>
10015d60:	0005883a 	mov	r2,zero
10015d64:	f800283a 	ret
10015d68:	001a7841 	jmpi	1001a784 <fflush>

10015d6c <__srefill_r>:
10015d6c:	defffc04 	addi	sp,sp,-16
10015d70:	dc400115 	stw	r17,4(sp)
10015d74:	dc000015 	stw	r16,0(sp)
10015d78:	dfc00315 	stw	ra,12(sp)
10015d7c:	dc800215 	stw	r18,8(sp)
10015d80:	2023883a 	mov	r17,r4
10015d84:	2821883a 	mov	r16,r5
10015d88:	20000226 	beq	r4,zero,10015d94 <__srefill_r+0x28>
10015d8c:	20800e17 	ldw	r2,56(r4)
10015d90:	10003a26 	beq	r2,zero,10015e7c <__srefill_r+0x110>
10015d94:	80c0030b 	ldhu	r3,12(r16)
10015d98:	1908000c 	andi	r4,r3,8192
10015d9c:	1805883a 	mov	r2,r3
10015da0:	2000071e 	bne	r4,zero,10015dc0 <__srefill_r+0x54>
10015da4:	81001917 	ldw	r4,100(r16)
10015da8:	18880014 	ori	r2,r3,8192
10015dac:	00f7ffc4 	movi	r3,-8193
10015db0:	20c8703a 	and	r4,r4,r3
10015db4:	8080030d 	sth	r2,12(r16)
10015db8:	1007883a 	mov	r3,r2
10015dbc:	81001915 	stw	r4,100(r16)
10015dc0:	80000115 	stw	zero,4(r16)
10015dc4:	1100080c 	andi	r4,r2,32
10015dc8:	20004d1e 	bne	r4,zero,10015f00 <__srefill_r+0x194>
10015dcc:	1100010c 	andi	r4,r2,4
10015dd0:	20001c1e 	bne	r4,zero,10015e44 <__srefill_r+0xd8>
10015dd4:	1100040c 	andi	r4,r2,16
10015dd8:	20005126 	beq	r4,zero,10015f20 <__srefill_r+0x1b4>
10015ddc:	1080020c 	andi	r2,r2,8
10015de0:	1000371e 	bne	r2,zero,10015ec0 <__srefill_r+0x154>
10015de4:	18c00114 	ori	r3,r3,4
10015de8:	80c0030d 	sth	r3,12(r16)
10015dec:	80800417 	ldw	r2,16(r16)
10015df0:	10003c26 	beq	r2,zero,10015ee4 <__srefill_r+0x178>
10015df4:	8480030b 	ldhu	r18,12(r16)
10015df8:	908000cc 	andi	r2,r18,3
10015dfc:	1000211e 	bne	r2,zero,10015e84 <__srefill_r+0x118>
10015e00:	81800417 	ldw	r6,16(r16)
10015e04:	80800817 	ldw	r2,32(r16)
10015e08:	81c00517 	ldw	r7,20(r16)
10015e0c:	81400717 	ldw	r5,28(r16)
10015e10:	81800015 	stw	r6,0(r16)
10015e14:	8809883a 	mov	r4,r17
10015e18:	103ee83a 	callr	r2
10015e1c:	1007883a 	mov	r3,r2
10015e20:	80800115 	stw	r2,4(r16)
10015e24:	0005883a 	mov	r2,zero
10015e28:	00c0370e 	bge	zero,r3,10015f08 <__srefill_r+0x19c>
10015e2c:	dfc00317 	ldw	ra,12(sp)
10015e30:	dc800217 	ldw	r18,8(sp)
10015e34:	dc400117 	ldw	r17,4(sp)
10015e38:	dc000017 	ldw	r16,0(sp)
10015e3c:	dec00404 	addi	sp,sp,16
10015e40:	f800283a 	ret
10015e44:	81400c17 	ldw	r5,48(r16)
10015e48:	283fe826 	beq	r5,zero,10015dec <__srefill_r+0x80>
10015e4c:	80801004 	addi	r2,r16,64
10015e50:	28800226 	beq	r5,r2,10015e5c <__srefill_r+0xf0>
10015e54:	8809883a 	mov	r4,r17
10015e58:	001acb00 	call	1001acb0 <_free_r>
10015e5c:	80800f17 	ldw	r2,60(r16)
10015e60:	80000c15 	stw	zero,48(r16)
10015e64:	80800115 	stw	r2,4(r16)
10015e68:	103fe026 	beq	r2,zero,10015dec <__srefill_r+0x80>
10015e6c:	80c00e17 	ldw	r3,56(r16)
10015e70:	0005883a 	mov	r2,zero
10015e74:	80c00015 	stw	r3,0(r16)
10015e78:	003fec06 	br	10015e2c <__srefill_r+0xc0>
10015e7c:	001aaa80 	call	1001aaa8 <__sinit>
10015e80:	003fc406 	br	10015d94 <__srefill_r+0x28>
10015e84:	008400f4 	movhi	r2,4099
10015e88:	11215817 	ldw	r4,-31392(r2)
10015e8c:	01440074 	movhi	r5,4097
10015e90:	00800044 	movi	r2,1
10015e94:	8080030d 	sth	r2,12(r16)
10015e98:	29575404 	addi	r5,r5,23888
10015e9c:	001b4700 	call	1001b470 <_fwalk>
10015ea0:	9080024c 	andi	r2,r18,9
10015ea4:	8480030d 	sth	r18,12(r16)
10015ea8:	10800258 	cmpnei	r2,r2,9
10015eac:	103fd41e 	bne	r2,zero,10015e00 <__srefill_r+0x94>
10015eb0:	800b883a 	mov	r5,r16
10015eb4:	8809883a 	mov	r4,r17
10015eb8:	001a4fc0 	call	1001a4fc <__sflush_r>
10015ebc:	003fd006 	br	10015e00 <__srefill_r+0x94>
10015ec0:	800b883a 	mov	r5,r16
10015ec4:	8809883a 	mov	r4,r17
10015ec8:	001a7240 	call	1001a724 <_fflush_r>
10015ecc:	10000c1e 	bne	r2,zero,10015f00 <__srefill_r+0x194>
10015ed0:	80c0030b 	ldhu	r3,12(r16)
10015ed4:	80000215 	stw	zero,8(r16)
10015ed8:	80000615 	stw	zero,24(r16)
10015edc:	18fffdcc 	andi	r3,r3,65527
10015ee0:	003fc006 	br	10015de4 <__srefill_r+0x78>
10015ee4:	800b883a 	mov	r5,r16
10015ee8:	8809883a 	mov	r4,r17
10015eec:	0014d340 	call	10014d34 <__smakebuf_r>
10015ef0:	003fc006 	br	10015df4 <__srefill_r+0x88>
10015ef4:	10801014 	ori	r2,r2,64
10015ef8:	80000115 	stw	zero,4(r16)
10015efc:	8080030d 	sth	r2,12(r16)
10015f00:	00bfffc4 	movi	r2,-1
10015f04:	003fc906 	br	10015e2c <__srefill_r+0xc0>
10015f08:	8080030b 	ldhu	r2,12(r16)
10015f0c:	183ff91e 	bne	r3,zero,10015ef4 <__srefill_r+0x188>
10015f10:	10800814 	ori	r2,r2,32
10015f14:	8080030d 	sth	r2,12(r16)
10015f18:	00bfffc4 	movi	r2,-1
10015f1c:	003fc306 	br	10015e2c <__srefill_r+0xc0>
10015f20:	00800244 	movi	r2,9
10015f24:	88800015 	stw	r2,0(r17)
10015f28:	18c01014 	ori	r3,r3,64
10015f2c:	80c0030d 	sth	r3,12(r16)
10015f30:	00bfffc4 	movi	r2,-1
10015f34:	003fbd06 	br	10015e2c <__srefill_r+0xc0>

10015f38 <_sbrk_r>:
10015f38:	defffe04 	addi	sp,sp,-8
10015f3c:	dc000015 	stw	r16,0(sp)
10015f40:	008400f4 	movhi	r2,4099
10015f44:	2021883a 	mov	r16,r4
10015f48:	2809883a 	mov	r4,r5
10015f4c:	dfc00115 	stw	ra,4(sp)
10015f50:	102aaa15 	stw	zero,-21848(r2)
10015f54:	00227a00 	call	100227a0 <sbrk>
10015f58:	10ffffd8 	cmpnei	r3,r2,-1
10015f5c:	18000426 	beq	r3,zero,10015f70 <_sbrk_r+0x38>
10015f60:	dfc00117 	ldw	ra,4(sp)
10015f64:	dc000017 	ldw	r16,0(sp)
10015f68:	dec00204 	addi	sp,sp,8
10015f6c:	f800283a 	ret
10015f70:	00c400f4 	movhi	r3,4099
10015f74:	18eaaa17 	ldw	r3,-21848(r3)
10015f78:	183ff926 	beq	r3,zero,10015f60 <_sbrk_r+0x28>
10015f7c:	80c00015 	stw	r3,0(r16)
10015f80:	dfc00117 	ldw	ra,4(sp)
10015f84:	dc000017 	ldw	r16,0(sp)
10015f88:	dec00204 	addi	sp,sp,8
10015f8c:	f800283a 	ret

10015f90 <_init_signal_r.part.0>:
10015f90:	defffe04 	addi	sp,sp,-8
10015f94:	01402004 	movi	r5,128
10015f98:	dc000015 	stw	r16,0(sp)
10015f9c:	dfc00115 	stw	ra,4(sp)
10015fa0:	2021883a 	mov	r16,r4
10015fa4:	0014e900 	call	10014e90 <_malloc_r>
10015fa8:	8080b715 	stw	r2,732(r16)
10015fac:	10000926 	beq	r2,zero,10015fd4 <_init_signal_r.part.0+0x44>
10015fb0:	10c02004 	addi	r3,r2,128
10015fb4:	10000015 	stw	zero,0(r2)
10015fb8:	10800104 	addi	r2,r2,4
10015fbc:	10fffd1e 	bne	r2,r3,10015fb4 <_init_signal_r.part.0+0x24>
10015fc0:	0005883a 	mov	r2,zero
10015fc4:	dfc00117 	ldw	ra,4(sp)
10015fc8:	dc000017 	ldw	r16,0(sp)
10015fcc:	dec00204 	addi	sp,sp,8
10015fd0:	f800283a 	ret
10015fd4:	00bfffc4 	movi	r2,-1
10015fd8:	003ffa06 	br	10015fc4 <_init_signal_r.part.0+0x34>

10015fdc <_init_signal_r>:
10015fdc:	2080b717 	ldw	r2,732(r4)
10015fe0:	10000226 	beq	r2,zero,10015fec <_init_signal_r+0x10>
10015fe4:	0005883a 	mov	r2,zero
10015fe8:	f800283a 	ret
10015fec:	0015f901 	jmpi	10015f90 <_init_signal_r.part.0>

10015ff0 <_signal_r>:
10015ff0:	defffc04 	addi	sp,sp,-16
10015ff4:	dc000215 	stw	r16,8(sp)
10015ff8:	dfc00315 	stw	ra,12(sp)
10015ffc:	28c00830 	cmpltui	r3,r5,32
10016000:	2021883a 	mov	r16,r4
10016004:	18000a26 	beq	r3,zero,10016030 <_signal_r+0x40>
10016008:	2080b717 	ldw	r2,732(r4)
1001600c:	10000f26 	beq	r2,zero,1001604c <_signal_r+0x5c>
10016010:	280a90ba 	slli	r5,r5,2
10016014:	114b883a 	add	r5,r2,r5
10016018:	28800017 	ldw	r2,0(r5)
1001601c:	29800015 	stw	r6,0(r5)
10016020:	dfc00317 	ldw	ra,12(sp)
10016024:	dc000217 	ldw	r16,8(sp)
10016028:	dec00404 	addi	sp,sp,16
1001602c:	f800283a 	ret
10016030:	00c00584 	movi	r3,22
10016034:	00bfffc4 	movi	r2,-1
10016038:	20c00015 	stw	r3,0(r4)
1001603c:	dfc00317 	ldw	ra,12(sp)
10016040:	dc000217 	ldw	r16,8(sp)
10016044:	dec00404 	addi	sp,sp,16
10016048:	f800283a 	ret
1001604c:	d9800115 	stw	r6,4(sp)
10016050:	d9400015 	stw	r5,0(sp)
10016054:	0015f900 	call	10015f90 <_init_signal_r.part.0>
10016058:	1000041e 	bne	r2,zero,1001606c <_signal_r+0x7c>
1001605c:	8080b717 	ldw	r2,732(r16)
10016060:	d9800117 	ldw	r6,4(sp)
10016064:	d9400017 	ldw	r5,0(sp)
10016068:	003fe906 	br	10016010 <_signal_r+0x20>
1001606c:	00bfffc4 	movi	r2,-1
10016070:	003feb06 	br	10016020 <_signal_r+0x30>

10016074 <_raise_r>:
10016074:	28800830 	cmpltui	r2,r5,32
10016078:	10002926 	beq	r2,zero,10016120 <_raise_r+0xac>
1001607c:	2080b717 	ldw	r2,732(r4)
10016080:	defffd04 	addi	sp,sp,-12
10016084:	dc400115 	stw	r17,4(sp)
10016088:	dc000015 	stw	r16,0(sp)
1001608c:	dfc00215 	stw	ra,8(sp)
10016090:	2021883a 	mov	r16,r4
10016094:	2823883a 	mov	r17,r5
10016098:	10001126 	beq	r2,zero,100160e0 <_raise_r+0x6c>
1001609c:	280690ba 	slli	r3,r5,2
100160a0:	10c5883a 	add	r2,r2,r3
100160a4:	10c00017 	ldw	r3,0(r2)
100160a8:	18000d26 	beq	r3,zero,100160e0 <_raise_r+0x6c>
100160ac:	19000060 	cmpeqi	r4,r3,1
100160b0:	2000191e 	bne	r4,zero,10016118 <_raise_r+0xa4>
100160b4:	193fffd8 	cmpnei	r4,r3,-1
100160b8:	20001326 	beq	r4,zero,10016108 <_raise_r+0x94>
100160bc:	10000015 	stw	zero,0(r2)
100160c0:	2809883a 	mov	r4,r5
100160c4:	183ee83a 	callr	r3
100160c8:	0005883a 	mov	r2,zero
100160cc:	dfc00217 	ldw	ra,8(sp)
100160d0:	dc400117 	ldw	r17,4(sp)
100160d4:	dc000017 	ldw	r16,0(sp)
100160d8:	dec00304 	addi	sp,sp,12
100160dc:	f800283a 	ret
100160e0:	8009883a 	mov	r4,r16
100160e4:	00162980 	call	10016298 <_getpid_r>
100160e8:	880d883a 	mov	r6,r17
100160ec:	100b883a 	mov	r5,r2
100160f0:	8009883a 	mov	r4,r16
100160f4:	dfc00217 	ldw	ra,8(sp)
100160f8:	dc400117 	ldw	r17,4(sp)
100160fc:	dc000017 	ldw	r16,0(sp)
10016100:	dec00304 	addi	sp,sp,12
10016104:	00162381 	jmpi	10016238 <_kill_r>
10016108:	00800584 	movi	r2,22
1001610c:	80800015 	stw	r2,0(r16)
10016110:	00800044 	movi	r2,1
10016114:	003fed06 	br	100160cc <_raise_r+0x58>
10016118:	0005883a 	mov	r2,zero
1001611c:	003feb06 	br	100160cc <_raise_r+0x58>
10016120:	00800584 	movi	r2,22
10016124:	20800015 	stw	r2,0(r4)
10016128:	00bfffc4 	movi	r2,-1
1001612c:	f800283a 	ret

10016130 <__sigtramp_r>:
10016130:	28800830 	cmpltui	r2,r5,32
10016134:	10002a26 	beq	r2,zero,100161e0 <__sigtramp_r+0xb0>
10016138:	2080b717 	ldw	r2,732(r4)
1001613c:	defffd04 	addi	sp,sp,-12
10016140:	dc000115 	stw	r16,4(sp)
10016144:	dfc00215 	stw	ra,8(sp)
10016148:	2021883a 	mov	r16,r4
1001614c:	10001526 	beq	r2,zero,100161a4 <__sigtramp_r+0x74>
10016150:	280690ba 	slli	r3,r5,2
10016154:	10c5883a 	add	r2,r2,r3
10016158:	10c00017 	ldw	r3,0(r2)
1001615c:	18000c26 	beq	r3,zero,10016190 <__sigtramp_r+0x60>
10016160:	193fffe0 	cmpeqi	r4,r3,-1
10016164:	20001a1e 	bne	r4,zero,100161d0 <__sigtramp_r+0xa0>
10016168:	19000060 	cmpeqi	r4,r3,1
1001616c:	2000131e 	bne	r4,zero,100161bc <__sigtramp_r+0x8c>
10016170:	10000015 	stw	zero,0(r2)
10016174:	2809883a 	mov	r4,r5
10016178:	183ee83a 	callr	r3
1001617c:	0005883a 	mov	r2,zero
10016180:	dfc00217 	ldw	ra,8(sp)
10016184:	dc000117 	ldw	r16,4(sp)
10016188:	dec00304 	addi	sp,sp,12
1001618c:	f800283a 	ret
10016190:	00800044 	movi	r2,1
10016194:	dfc00217 	ldw	ra,8(sp)
10016198:	dc000117 	ldw	r16,4(sp)
1001619c:	dec00304 	addi	sp,sp,12
100161a0:	f800283a 	ret
100161a4:	d9400015 	stw	r5,0(sp)
100161a8:	0015f900 	call	10015f90 <_init_signal_r.part.0>
100161ac:	10000a1e 	bne	r2,zero,100161d8 <__sigtramp_r+0xa8>
100161b0:	8080b717 	ldw	r2,732(r16)
100161b4:	d9400017 	ldw	r5,0(sp)
100161b8:	003fe506 	br	10016150 <__sigtramp_r+0x20>
100161bc:	008000c4 	movi	r2,3
100161c0:	dfc00217 	ldw	ra,8(sp)
100161c4:	dc000117 	ldw	r16,4(sp)
100161c8:	dec00304 	addi	sp,sp,12
100161cc:	f800283a 	ret
100161d0:	00800084 	movi	r2,2
100161d4:	003fea06 	br	10016180 <__sigtramp_r+0x50>
100161d8:	00bfffc4 	movi	r2,-1
100161dc:	003fe806 	br	10016180 <__sigtramp_r+0x50>
100161e0:	00bfffc4 	movi	r2,-1
100161e4:	f800283a 	ret

100161e8 <raise>:
100161e8:	008400f4 	movhi	r2,4099
100161ec:	200b883a 	mov	r5,r4
100161f0:	11215917 	ldw	r4,-31388(r2)
100161f4:	00160741 	jmpi	10016074 <_raise_r>

100161f8 <signal>:
100161f8:	008400f4 	movhi	r2,4099
100161fc:	280d883a 	mov	r6,r5
10016200:	200b883a 	mov	r5,r4
10016204:	11215917 	ldw	r4,-31388(r2)
10016208:	0015ff01 	jmpi	10015ff0 <_signal_r>

1001620c <_init_signal>:
1001620c:	008400f4 	movhi	r2,4099
10016210:	11215917 	ldw	r4,-31388(r2)
10016214:	2080b717 	ldw	r2,732(r4)
10016218:	10000226 	beq	r2,zero,10016224 <_init_signal+0x18>
1001621c:	0005883a 	mov	r2,zero
10016220:	f800283a 	ret
10016224:	0015f901 	jmpi	10015f90 <_init_signal_r.part.0>

10016228 <__sigtramp>:
10016228:	008400f4 	movhi	r2,4099
1001622c:	200b883a 	mov	r5,r4
10016230:	11215917 	ldw	r4,-31388(r2)
10016234:	00161301 	jmpi	10016130 <__sigtramp_r>

10016238 <_kill_r>:
10016238:	defffe04 	addi	sp,sp,-8
1001623c:	2805883a 	mov	r2,r5
10016240:	dc000015 	stw	r16,0(sp)
10016244:	300b883a 	mov	r5,r6
10016248:	2021883a 	mov	r16,r4
1001624c:	1009883a 	mov	r4,r2
10016250:	008400f4 	movhi	r2,4099
10016254:	dfc00115 	stw	ra,4(sp)
10016258:	102aaa15 	stw	zero,-21848(r2)
1001625c:	0021fdc0 	call	10021fdc <kill>
10016260:	10ffffd8 	cmpnei	r3,r2,-1
10016264:	18000426 	beq	r3,zero,10016278 <_kill_r+0x40>
10016268:	dfc00117 	ldw	ra,4(sp)
1001626c:	dc000017 	ldw	r16,0(sp)
10016270:	dec00204 	addi	sp,sp,8
10016274:	f800283a 	ret
10016278:	00c400f4 	movhi	r3,4099
1001627c:	18eaaa17 	ldw	r3,-21848(r3)
10016280:	183ff926 	beq	r3,zero,10016268 <_kill_r+0x30>
10016284:	80c00015 	stw	r3,0(r16)
10016288:	dfc00117 	ldw	ra,4(sp)
1001628c:	dc000017 	ldw	r16,0(sp)
10016290:	dec00204 	addi	sp,sp,8
10016294:	f800283a 	ret

10016298 <_getpid_r>:
10016298:	0021ea01 	jmpi	10021ea0 <getpid>

1001629c <__sread>:
1001629c:	defffe04 	addi	sp,sp,-8
100162a0:	dc000015 	stw	r16,0(sp)
100162a4:	2821883a 	mov	r16,r5
100162a8:	2940038f 	ldh	r5,14(r5)
100162ac:	dfc00115 	stw	ra,4(sp)
100162b0:	001c78c0 	call	1001c78c <_read_r>
100162b4:	10000716 	blt	r2,zero,100162d4 <__sread+0x38>
100162b8:	80c01417 	ldw	r3,80(r16)
100162bc:	1887883a 	add	r3,r3,r2
100162c0:	80c01415 	stw	r3,80(r16)
100162c4:	dfc00117 	ldw	ra,4(sp)
100162c8:	dc000017 	ldw	r16,0(sp)
100162cc:	dec00204 	addi	sp,sp,8
100162d0:	f800283a 	ret
100162d4:	80c0030b 	ldhu	r3,12(r16)
100162d8:	18fbffcc 	andi	r3,r3,61439
100162dc:	80c0030d 	sth	r3,12(r16)
100162e0:	dfc00117 	ldw	ra,4(sp)
100162e4:	dc000017 	ldw	r16,0(sp)
100162e8:	dec00204 	addi	sp,sp,8
100162ec:	f800283a 	ret

100162f0 <__seofread>:
100162f0:	0005883a 	mov	r2,zero
100162f4:	f800283a 	ret

100162f8 <__swrite>:
100162f8:	2880030b 	ldhu	r2,12(r5)
100162fc:	defffb04 	addi	sp,sp,-20
10016300:	dcc00315 	stw	r19,12(sp)
10016304:	dc800215 	stw	r18,8(sp)
10016308:	dc400115 	stw	r17,4(sp)
1001630c:	dc000015 	stw	r16,0(sp)
10016310:	dfc00415 	stw	ra,16(sp)
10016314:	10c0400c 	andi	r3,r2,256
10016318:	2821883a 	mov	r16,r5
1001631c:	2023883a 	mov	r17,r4
10016320:	3025883a 	mov	r18,r6
10016324:	3827883a 	mov	r19,r7
10016328:	2940038f 	ldh	r5,14(r5)
1001632c:	18000c1e 	bne	r3,zero,10016360 <__swrite+0x68>
10016330:	10bbffcc 	andi	r2,r2,61439
10016334:	980f883a 	mov	r7,r19
10016338:	900d883a 	mov	r6,r18
1001633c:	8809883a 	mov	r4,r17
10016340:	8080030d 	sth	r2,12(r16)
10016344:	dfc00417 	ldw	ra,16(sp)
10016348:	dcc00317 	ldw	r19,12(sp)
1001634c:	dc800217 	ldw	r18,8(sp)
10016350:	dc400117 	ldw	r17,4(sp)
10016354:	dc000017 	ldw	r16,0(sp)
10016358:	dec00504 	addi	sp,sp,20
1001635c:	0018a081 	jmpi	10018a08 <_write_r>
10016360:	01c00084 	movi	r7,2
10016364:	000d883a 	mov	r6,zero
10016368:	001b6400 	call	1001b640 <_lseek_r>
1001636c:	8080030b 	ldhu	r2,12(r16)
10016370:	8140038f 	ldh	r5,14(r16)
10016374:	003fee06 	br	10016330 <__swrite+0x38>

10016378 <__sseek>:
10016378:	defffe04 	addi	sp,sp,-8
1001637c:	dc000015 	stw	r16,0(sp)
10016380:	2821883a 	mov	r16,r5
10016384:	2940038f 	ldh	r5,14(r5)
10016388:	dfc00115 	stw	ra,4(sp)
1001638c:	001b6400 	call	1001b640 <_lseek_r>
10016390:	10ffffd8 	cmpnei	r3,r2,-1
10016394:	18000826 	beq	r3,zero,100163b8 <__sseek+0x40>
10016398:	80c0030b 	ldhu	r3,12(r16)
1001639c:	80801415 	stw	r2,80(r16)
100163a0:	18c40014 	ori	r3,r3,4096
100163a4:	80c0030d 	sth	r3,12(r16)
100163a8:	dfc00117 	ldw	ra,4(sp)
100163ac:	dc000017 	ldw	r16,0(sp)
100163b0:	dec00204 	addi	sp,sp,8
100163b4:	f800283a 	ret
100163b8:	80c0030b 	ldhu	r3,12(r16)
100163bc:	18fbffcc 	andi	r3,r3,61439
100163c0:	80c0030d 	sth	r3,12(r16)
100163c4:	dfc00117 	ldw	ra,4(sp)
100163c8:	dc000017 	ldw	r16,0(sp)
100163cc:	dec00204 	addi	sp,sp,8
100163d0:	f800283a 	ret

100163d4 <__sclose>:
100163d4:	2940038f 	ldh	r5,14(r5)
100163d8:	0018bcc1 	jmpi	10018bcc <_close_r>

100163dc <strcmp>:
100163dc:	2144b03a 	or	r2,r4,r5
100163e0:	108000cc 	andi	r2,r2,3
100163e4:	1000171e 	bne	r2,zero,10016444 <strcmp+0x68>
100163e8:	20800017 	ldw	r2,0(r4)
100163ec:	28c00017 	ldw	r3,0(r5)
100163f0:	10c0141e 	bne	r2,r3,10016444 <strcmp+0x68>
100163f4:	027fbff4 	movhi	r9,65279
100163f8:	4a7fbfc4 	addi	r9,r9,-257
100163fc:	1247883a 	add	r3,r2,r9
10016400:	02202074 	movhi	r8,32897
10016404:	0084303a 	nor	r2,zero,r2
10016408:	1884703a 	and	r2,r3,r2
1001640c:	42202004 	addi	r8,r8,-32640
10016410:	1204703a 	and	r2,r2,r8
10016414:	10000226 	beq	r2,zero,10016420 <strcmp+0x44>
10016418:	00002406 	br	100164ac <strcmp+0xd0>
1001641c:	1000231e 	bne	r2,zero,100164ac <strcmp+0xd0>
10016420:	21000104 	addi	r4,r4,4
10016424:	20c00017 	ldw	r3,0(r4)
10016428:	29400104 	addi	r5,r5,4
1001642c:	29800017 	ldw	r6,0(r5)
10016430:	1a45883a 	add	r2,r3,r9
10016434:	00ce303a 	nor	r7,zero,r3
10016438:	11c4703a 	and	r2,r2,r7
1001643c:	1204703a 	and	r2,r2,r8
10016440:	19bff626 	beq	r3,r6,1001641c <strcmp+0x40>
10016444:	20800003 	ldbu	r2,0(r4)
10016448:	10c03fcc 	andi	r3,r2,255
1001644c:	18c0201c 	xori	r3,r3,128
10016450:	18ffe004 	addi	r3,r3,-128
10016454:	18000d26 	beq	r3,zero,1001648c <strcmp+0xb0>
10016458:	29800007 	ldb	r6,0(r5)
1001645c:	10803fcc 	andi	r2,r2,255
10016460:	19800326 	beq	r3,r6,10016470 <strcmp+0x94>
10016464:	00000a06 	br	10016490 <strcmp+0xb4>
10016468:	29800007 	ldb	r6,0(r5)
1001646c:	11800b1e 	bne	r2,r6,1001649c <strcmp+0xc0>
10016470:	21000044 	addi	r4,r4,1
10016474:	20c00003 	ldbu	r3,0(r4)
10016478:	29400044 	addi	r5,r5,1
1001647c:	18803fcc 	andi	r2,r3,255
10016480:	1080201c 	xori	r2,r2,128
10016484:	10bfe004 	addi	r2,r2,-128
10016488:	103ff71e 	bne	r2,zero,10016468 <strcmp+0x8c>
1001648c:	0005883a 	mov	r2,zero
10016490:	28c00003 	ldbu	r3,0(r5)
10016494:	10c5c83a 	sub	r2,r2,r3
10016498:	f800283a 	ret
1001649c:	18803fcc 	andi	r2,r3,255
100164a0:	28c00003 	ldbu	r3,0(r5)
100164a4:	10c5c83a 	sub	r2,r2,r3
100164a8:	f800283a 	ret
100164ac:	0005883a 	mov	r2,zero
100164b0:	f800283a 	ret

100164b4 <strlen>:
100164b4:	208000cc 	andi	r2,r4,3
100164b8:	10002026 	beq	r2,zero,1001653c <strlen+0x88>
100164bc:	20800007 	ldb	r2,0(r4)
100164c0:	10002026 	beq	r2,zero,10016544 <strlen+0x90>
100164c4:	2005883a 	mov	r2,r4
100164c8:	00000206 	br	100164d4 <strlen+0x20>
100164cc:	10c00007 	ldb	r3,0(r2)
100164d0:	18001826 	beq	r3,zero,10016534 <strlen+0x80>
100164d4:	10800044 	addi	r2,r2,1
100164d8:	10c000cc 	andi	r3,r2,3
100164dc:	183ffb1e 	bne	r3,zero,100164cc <strlen+0x18>
100164e0:	11400017 	ldw	r5,0(r2)
100164e4:	01ffbff4 	movhi	r7,65279
100164e8:	39ffbfc4 	addi	r7,r7,-257
100164ec:	29c7883a 	add	r3,r5,r7
100164f0:	01a02074 	movhi	r6,32897
100164f4:	014a303a 	nor	r5,zero,r5
100164f8:	1946703a 	and	r3,r3,r5
100164fc:	31a02004 	addi	r6,r6,-32640
10016500:	1986703a 	and	r3,r3,r6
10016504:	1800091e 	bne	r3,zero,1001652c <strlen+0x78>
10016508:	10800104 	addi	r2,r2,4
1001650c:	11400017 	ldw	r5,0(r2)
10016510:	29c7883a 	add	r3,r5,r7
10016514:	014a303a 	nor	r5,zero,r5
10016518:	1946703a 	and	r3,r3,r5
1001651c:	1986703a 	and	r3,r3,r6
10016520:	183ff926 	beq	r3,zero,10016508 <strlen+0x54>
10016524:	00000106 	br	1001652c <strlen+0x78>
10016528:	10800044 	addi	r2,r2,1
1001652c:	10c00007 	ldb	r3,0(r2)
10016530:	183ffd1e 	bne	r3,zero,10016528 <strlen+0x74>
10016534:	1105c83a 	sub	r2,r2,r4
10016538:	f800283a 	ret
1001653c:	2005883a 	mov	r2,r4
10016540:	003fe706 	br	100164e0 <strlen+0x2c>
10016544:	0005883a 	mov	r2,zero
10016548:	f800283a 	ret

1001654c <_strtoul_l.isra.0>:
1001654c:	defff704 	addi	sp,sp,-36
10016550:	dd000515 	stw	r20,20(sp)
10016554:	dcc00415 	stw	r19,16(sp)
10016558:	dc800315 	stw	r18,12(sp)
1001655c:	2029883a 	mov	r20,r4
10016560:	dfc00815 	stw	ra,32(sp)
10016564:	dd800715 	stw	r22,28(sp)
10016568:	dd400615 	stw	r21,24(sp)
1001656c:	dc400215 	stw	r17,8(sp)
10016570:	dc000115 	stw	r16,4(sp)
10016574:	2827883a 	mov	r19,r5
10016578:	3825883a 	mov	r18,r7
1001657c:	2809883a 	mov	r4,r5
10016580:	00000106 	br	10016588 <_strtoul_l.isra.0+0x3c>
10016584:	8009883a 	mov	r4,r16
10016588:	24000044 	addi	r16,r4,1
1001658c:	80ffffc3 	ldbu	r3,-1(r16)
10016590:	008400b4 	movhi	r2,4098
10016594:	1885883a 	add	r2,r3,r2
10016598:	1096e0c3 	ldbu	r2,23427(r2)
1001659c:	1080020c 	andi	r2,r2,8
100165a0:	103ff81e 	bne	r2,zero,10016584 <_strtoul_l.isra.0+0x38>
100165a4:	18800b58 	cmpnei	r2,r3,45
100165a8:	10004f26 	beq	r2,zero,100166e8 <_strtoul_l.isra.0+0x19c>
100165ac:	18800ae0 	cmpeqi	r2,r3,43
100165b0:	1000231e 	bne	r2,zero,10016640 <_strtoul_l.isra.0+0xf4>
100165b4:	1823883a 	mov	r17,r3
100165b8:	002d883a 	mov	r22,zero
100165bc:	90002426 	beq	r18,zero,10016650 <_strtoul_l.isra.0+0x104>
100165c0:	90800420 	cmpeqi	r2,r18,16
100165c4:	10004c1e 	bne	r2,zero,100166f8 <_strtoul_l.isra.0+0x1ac>
100165c8:	013fffc4 	movi	r4,-1
100165cc:	900b883a 	mov	r5,r18
100165d0:	d9800015 	stw	r6,0(sp)
100165d4:	00140ac0 	call	100140ac <__udivsi3>
100165d8:	900b883a 	mov	r5,r18
100165dc:	013fffc4 	movi	r4,-1
100165e0:	102b883a 	mov	r21,r2
100165e4:	00141100 	call	10014110 <__umodsi3>
100165e8:	d9800017 	ldw	r6,0(sp)
100165ec:	1011883a 	mov	r8,r2
100165f0:	900f883a 	mov	r7,r18
100165f4:	0009883a 	mov	r4,zero
100165f8:	0005883a 	mov	r2,zero
100165fc:	88fff404 	addi	r3,r17,-48
10016600:	194002a8 	cmpgeui	r5,r3,10
10016604:	28000426 	beq	r5,zero,10016618 <_strtoul_l.isra.0+0xcc>
10016608:	88ffefc4 	addi	r3,r17,-65
1001660c:	18c006a8 	cmpgeui	r3,r3,26
10016610:	18001a1e 	bne	r3,zero,1001667c <_strtoul_l.isra.0+0x130>
10016614:	88fff244 	addi	r3,r17,-55
10016618:	1c801d0e 	bge	r3,r18,10016690 <_strtoul_l.isra.0+0x144>
1001661c:	20001516 	blt	r4,zero,10016674 <_strtoul_l.isra.0+0x128>
10016620:	a8801436 	bltu	r21,r2,10016674 <_strtoul_l.isra.0+0x128>
10016624:	15401226 	beq	r2,r21,10016670 <_strtoul_l.isra.0+0x124>
10016628:	3885383a 	mul	r2,r7,r2
1001662c:	01000044 	movi	r4,1
10016630:	1885883a 	add	r2,r3,r2
10016634:	84000044 	addi	r16,r16,1
10016638:	847fffc3 	ldbu	r17,-1(r16)
1001663c:	003fef06 	br	100165fc <_strtoul_l.isra.0+0xb0>
10016640:	84400003 	ldbu	r17,0(r16)
10016644:	002d883a 	mov	r22,zero
10016648:	24000084 	addi	r16,r4,2
1001664c:	903fdc1e 	bne	r18,zero,100165c0 <_strtoul_l.isra.0+0x74>
10016650:	88800c20 	cmpeqi	r2,r17,48
10016654:	1000361e 	bne	r2,zero,10016730 <_strtoul_l.isra.0+0x1e4>
10016658:	054666b4 	movhi	r21,6554
1001665c:	02000144 	movi	r8,5
10016660:	ad666644 	addi	r21,r21,-26215
10016664:	01c00284 	movi	r7,10
10016668:	04800284 	movi	r18,10
1001666c:	003fe106 	br	100165f4 <_strtoul_l.isra.0+0xa8>
10016670:	40ffed0e 	bge	r8,r3,10016628 <_strtoul_l.isra.0+0xdc>
10016674:	013fffc4 	movi	r4,-1
10016678:	003fee06 	br	10016634 <_strtoul_l.isra.0+0xe8>
1001667c:	88ffe7c4 	addi	r3,r17,-97
10016680:	18c006a8 	cmpgeui	r3,r3,26
10016684:	1800021e 	bne	r3,zero,10016690 <_strtoul_l.isra.0+0x144>
10016688:	88ffea44 	addi	r3,r17,-87
1001668c:	1cbfe316 	blt	r3,r18,1001661c <_strtoul_l.isra.0+0xd0>
10016690:	20000f16 	blt	r4,zero,100166d0 <_strtoul_l.isra.0+0x184>
10016694:	b0000126 	beq	r22,zero,1001669c <_strtoul_l.isra.0+0x150>
10016698:	0085c83a 	sub	r2,zero,r2
1001669c:	30000226 	beq	r6,zero,100166a8 <_strtoul_l.isra.0+0x15c>
100166a0:	20000f1e 	bne	r4,zero,100166e0 <_strtoul_l.isra.0+0x194>
100166a4:	34c00015 	stw	r19,0(r6)
100166a8:	dfc00817 	ldw	ra,32(sp)
100166ac:	dd800717 	ldw	r22,28(sp)
100166b0:	dd400617 	ldw	r21,24(sp)
100166b4:	dd000517 	ldw	r20,20(sp)
100166b8:	dcc00417 	ldw	r19,16(sp)
100166bc:	dc800317 	ldw	r18,12(sp)
100166c0:	dc400217 	ldw	r17,8(sp)
100166c4:	dc000117 	ldw	r16,4(sp)
100166c8:	dec00904 	addi	sp,sp,36
100166cc:	f800283a 	ret
100166d0:	00800884 	movi	r2,34
100166d4:	a0800015 	stw	r2,0(r20)
100166d8:	00bfffc4 	movi	r2,-1
100166dc:	303ff226 	beq	r6,zero,100166a8 <_strtoul_l.isra.0+0x15c>
100166e0:	84ffffc4 	addi	r19,r16,-1
100166e4:	003fef06 	br	100166a4 <_strtoul_l.isra.0+0x158>
100166e8:	84400003 	ldbu	r17,0(r16)
100166ec:	05800044 	movi	r22,1
100166f0:	24000084 	addi	r16,r4,2
100166f4:	003fb106 	br	100165bc <_strtoul_l.isra.0+0x70>
100166f8:	88800c18 	cmpnei	r2,r17,48
100166fc:	1000221e 	bne	r2,zero,10016788 <_strtoul_l.isra.0+0x23c>
10016700:	80800003 	ldbu	r2,0(r16)
10016704:	108037cc 	andi	r2,r2,223
10016708:	10801620 	cmpeqi	r2,r2,88
1001670c:	10001226 	beq	r2,zero,10016758 <_strtoul_l.isra.0+0x20c>
10016710:	05440034 	movhi	r21,4096
10016714:	84400043 	ldbu	r17,1(r16)
10016718:	020003c4 	movi	r8,15
1001671c:	84000084 	addi	r16,r16,2
10016720:	ad7fffc4 	addi	r21,r21,-1
10016724:	01c00404 	movi	r7,16
10016728:	04800404 	movi	r18,16
1001672c:	003fb106 	br	100165f4 <_strtoul_l.isra.0+0xa8>
10016730:	80800003 	ldbu	r2,0(r16)
10016734:	108037cc 	andi	r2,r2,223
10016738:	10801618 	cmpnei	r2,r2,88
1001673c:	103ff426 	beq	r2,zero,10016710 <_strtoul_l.isra.0+0x1c4>
10016740:	05480034 	movhi	r21,8192
10016744:	020001c4 	movi	r8,7
10016748:	ad7fffc4 	addi	r21,r21,-1
1001674c:	01c00204 	movi	r7,8
10016750:	04800204 	movi	r18,8
10016754:	003fa706 	br	100165f4 <_strtoul_l.isra.0+0xa8>
10016758:	01400404 	movi	r5,16
1001675c:	013fffc4 	movi	r4,-1
10016760:	d9800015 	stw	r6,0(sp)
10016764:	00140ac0 	call	100140ac <__udivsi3>
10016768:	01400404 	movi	r5,16
1001676c:	013fffc4 	movi	r4,-1
10016770:	102b883a 	mov	r21,r2
10016774:	00141100 	call	10014110 <__umodsi3>
10016778:	1011883a 	mov	r8,r2
1001677c:	01c00404 	movi	r7,16
10016780:	d9800017 	ldw	r6,0(sp)
10016784:	003f9b06 	br	100165f4 <_strtoul_l.isra.0+0xa8>
10016788:	05440034 	movhi	r21,4096
1001678c:	020003c4 	movi	r8,15
10016790:	ad7fffc4 	addi	r21,r21,-1
10016794:	01c00404 	movi	r7,16
10016798:	003f9606 	br	100165f4 <_strtoul_l.isra.0+0xa8>

1001679c <_strtoul_r>:
1001679c:	001654c1 	jmpi	1001654c <_strtoul_l.isra.0>

100167a0 <strtoul_l>:
100167a0:	008400f4 	movhi	r2,4099
100167a4:	300f883a 	mov	r7,r6
100167a8:	280d883a 	mov	r6,r5
100167ac:	200b883a 	mov	r5,r4
100167b0:	11215917 	ldw	r4,-31388(r2)
100167b4:	001654c1 	jmpi	1001654c <_strtoul_l.isra.0>

100167b8 <strtoul>:
100167b8:	008400f4 	movhi	r2,4099
100167bc:	300f883a 	mov	r7,r6
100167c0:	280d883a 	mov	r6,r5
100167c4:	200b883a 	mov	r5,r4
100167c8:	11215917 	ldw	r4,-31388(r2)
100167cc:	001654c1 	jmpi	1001654c <_strtoul_l.isra.0>

100167d0 <___vfprintf_internal_r>:
100167d0:	deffbd04 	addi	sp,sp,-268
100167d4:	dfc04215 	stw	ra,264(sp)
100167d8:	dd003d15 	stw	r20,244(sp)
100167dc:	dcc03c15 	stw	r19,240(sp)
100167e0:	dc003915 	stw	r16,228(sp)
100167e4:	d9000515 	stw	r4,20(sp)
100167e8:	2021883a 	mov	r16,r4
100167ec:	2827883a 	mov	r19,r5
100167f0:	3029883a 	mov	r20,r6
100167f4:	d9c00615 	stw	r7,24(sp)
100167f8:	df004115 	stw	fp,260(sp)
100167fc:	ddc04015 	stw	r23,256(sp)
10016800:	dd803f15 	stw	r22,252(sp)
10016804:	dd403e15 	stw	r21,248(sp)
10016808:	dc803b15 	stw	r18,236(sp)
1001680c:	dc403a15 	stw	r17,232(sp)
10016810:	001b6280 	call	1001b628 <_localeconv_r>
10016814:	10800017 	ldw	r2,0(r2)
10016818:	1009883a 	mov	r4,r2
1001681c:	d8800d15 	stw	r2,52(sp)
10016820:	00164b40 	call	100164b4 <strlen>
10016824:	d8800b15 	stw	r2,44(sp)
10016828:	80000226 	beq	r16,zero,10016834 <___vfprintf_internal_r+0x64>
1001682c:	80800e17 	ldw	r2,56(r16)
10016830:	1002da26 	beq	r2,zero,1001739c <___vfprintf_internal_r+0xbcc>
10016834:	9880030b 	ldhu	r2,12(r19)
10016838:	10c8000c 	andi	r3,r2,8192
1001683c:	1800061e 	bne	r3,zero,10016858 <___vfprintf_internal_r+0x88>
10016840:	98c01917 	ldw	r3,100(r19)
10016844:	0137ffc4 	movi	r4,-8193
10016848:	10880014 	ori	r2,r2,8192
1001684c:	1906703a 	and	r3,r3,r4
10016850:	9880030d 	sth	r2,12(r19)
10016854:	98c01915 	stw	r3,100(r19)
10016858:	10c0020c 	andi	r3,r2,8
1001685c:	18009a26 	beq	r3,zero,10016ac8 <___vfprintf_internal_r+0x2f8>
10016860:	98c00417 	ldw	r3,16(r19)
10016864:	18009826 	beq	r3,zero,10016ac8 <___vfprintf_internal_r+0x2f8>
10016868:	1080068c 	andi	r2,r2,26
1001686c:	10800298 	cmpnei	r2,r2,10
10016870:	10009d26 	beq	r2,zero,10016ae8 <___vfprintf_internal_r+0x318>
10016874:	ddc02904 	addi	r23,sp,164
10016878:	ddc01c15 	stw	r23,112(sp)
1001687c:	d8001e15 	stw	zero,120(sp)
10016880:	d8001d15 	stw	zero,116(sp)
10016884:	d8000815 	stw	zero,32(sp)
10016888:	d8000915 	stw	zero,36(sp)
1001688c:	d8000a15 	stw	zero,40(sp)
10016890:	b811883a 	mov	r8,r23
10016894:	d8000c15 	stw	zero,48(sp)
10016898:	d8001115 	stw	zero,68(sp)
1001689c:	d8000415 	stw	zero,16(sp)
100168a0:	a02d883a 	mov	r22,r20
100168a4:	b0800007 	ldb	r2,0(r22)
100168a8:	1000a226 	beq	r2,zero,10016b34 <___vfprintf_internal_r+0x364>
100168ac:	10800960 	cmpeqi	r2,r2,37
100168b0:	10052e1e 	bne	r2,zero,10017d6c <___vfprintf_internal_r+0x159c>
100168b4:	b021883a 	mov	r16,r22
100168b8:	00000206 	br	100168c4 <___vfprintf_internal_r+0xf4>
100168bc:	18009326 	beq	r3,zero,10016b0c <___vfprintf_internal_r+0x33c>
100168c0:	9021883a 	mov	r16,r18
100168c4:	80800047 	ldb	r2,1(r16)
100168c8:	84800044 	addi	r18,r16,1
100168cc:	10c00958 	cmpnei	r3,r2,37
100168d0:	103ffa1e 	bne	r2,zero,100168bc <___vfprintf_internal_r+0xec>
100168d4:	95a3c83a 	sub	r17,r18,r22
100168d8:	88009626 	beq	r17,zero,10016b34 <___vfprintf_internal_r+0x364>
100168dc:	d8c01e17 	ldw	r3,120(sp)
100168e0:	d8801d17 	ldw	r2,116(sp)
100168e4:	45800015 	stw	r22,0(r8)
100168e8:	1c47883a 	add	r3,r3,r17
100168ec:	10800044 	addi	r2,r2,1
100168f0:	d8801d15 	stw	r2,116(sp)
100168f4:	44400115 	stw	r17,4(r8)
100168f8:	d8c01e15 	stw	r3,120(sp)
100168fc:	10800208 	cmpgei	r2,r2,8
10016900:	1000851e 	bne	r2,zero,10016b18 <___vfprintf_internal_r+0x348>
10016904:	42000204 	addi	r8,r8,8
10016908:	d8c00417 	ldw	r3,16(sp)
1001690c:	80800047 	ldb	r2,1(r16)
10016910:	1c47883a 	add	r3,r3,r17
10016914:	d8c00415 	stw	r3,16(sp)
10016918:	10008626 	beq	r2,zero,10016b34 <___vfprintf_internal_r+0x364>
1001691c:	92800047 	ldb	r10,1(r18)
10016920:	95800044 	addi	r22,r18,1
10016924:	d8001545 	stb	zero,85(sp)
10016928:	0009883a 	mov	r4,zero
1001692c:	000b883a 	mov	r5,zero
10016930:	02ffffc4 	movi	r11,-1
10016934:	0023883a 	mov	r17,zero
10016938:	0019883a 	mov	r12,zero
1001693c:	b5800044 	addi	r22,r22,1
10016940:	5039883a 	mov	fp,r10
10016944:	e0bff804 	addi	r2,fp,-32
10016948:	10c01668 	cmpgeui	r3,r2,89
1001694c:	18009b1e 	bne	r3,zero,10016bbc <___vfprintf_internal_r+0x3ec>
10016950:	100490ba 	slli	r2,r2,2
10016954:	00c40074 	movhi	r3,4097
10016958:	10c7883a 	add	r3,r2,r3
1001695c:	189a5917 	ldw	r2,26980(r3)
10016960:	1000683a 	jmp	r2
10016964:	10016c8c 	andi	zero,r2,1458
10016968:	10016bbc 	xorhi	zero,r2,1454
1001696c:	10016bbc 	xorhi	zero,r2,1454
10016970:	10016c80 	call	110016c8 <_gp+0xfd11a8>
10016974:	10016bbc 	xorhi	zero,r2,1454
10016978:	10016bbc 	xorhi	zero,r2,1454
1001697c:	10016bbc 	xorhi	zero,r2,1454
10016980:	10016bbc 	xorhi	zero,r2,1454
10016984:	10016bbc 	xorhi	zero,r2,1454
10016988:	10016bbc 	xorhi	zero,r2,1454
1001698c:	10016c58 	cmpnei	zero,r2,1457
10016990:	10016c48 	cmpgei	zero,r2,1457
10016994:	10016bbc 	xorhi	zero,r2,1454
10016998:	10016c30 	cmpltui	zero,r2,1456
1001699c:	10016bec 	andhi	zero,r2,1455
100169a0:	10016bbc 	xorhi	zero,r2,1454
100169a4:	10016be0 	cmpeqi	zero,r2,1455
100169a8:	10016b8c 	andi	zero,r2,1454
100169ac:	10016b8c 	andi	zero,r2,1454
100169b0:	10016b8c 	andi	zero,r2,1454
100169b4:	10016b8c 	andi	zero,r2,1454
100169b8:	10016b8c 	andi	zero,r2,1454
100169bc:	10016b8c 	andi	zero,r2,1454
100169c0:	10016b8c 	andi	zero,r2,1454
100169c4:	10016b8c 	andi	zero,r2,1454
100169c8:	10016b8c 	andi	zero,r2,1454
100169cc:	10016bbc 	xorhi	zero,r2,1454
100169d0:	10016bbc 	xorhi	zero,r2,1454
100169d4:	10016bbc 	xorhi	zero,r2,1454
100169d8:	10016bbc 	xorhi	zero,r2,1454
100169dc:	10016bbc 	xorhi	zero,r2,1454
100169e0:	10016bbc 	xorhi	zero,r2,1454
100169e4:	10016bbc 	xorhi	zero,r2,1454
100169e8:	10016bbc 	xorhi	zero,r2,1454
100169ec:	10016bbc 	xorhi	zero,r2,1454
100169f0:	10016bbc 	xorhi	zero,r2,1454
100169f4:	100171a0 	cmpeqi	zero,r2,1478
100169f8:	100170c0 	call	1100170c <_gp+0xfd11ec>
100169fc:	10016bbc 	xorhi	zero,r2,1454
10016a00:	100170c0 	call	1100170c <_gp+0xfd11ec>
10016a04:	10016bbc 	xorhi	zero,r2,1454
10016a08:	10016bbc 	xorhi	zero,r2,1454
10016a0c:	10016bbc 	xorhi	zero,r2,1454
10016a10:	10016bbc 	xorhi	zero,r2,1454
10016a14:	100170b4 	orhi	zero,r2,1474
10016a18:	10016bbc 	xorhi	zero,r2,1454
10016a1c:	10016bbc 	xorhi	zero,r2,1454
10016a20:	10017080 	call	11001708 <_gp+0xfd11e8>
10016a24:	10016bbc 	xorhi	zero,r2,1454
10016a28:	10016bbc 	xorhi	zero,r2,1454
10016a2c:	10016bbc 	xorhi	zero,r2,1454
10016a30:	10016bbc 	xorhi	zero,r2,1454
10016a34:	10016bbc 	xorhi	zero,r2,1454
10016a38:	100172c0 	call	1100172c <_gp+0xfd120c>
10016a3c:	10016bbc 	xorhi	zero,r2,1454
10016a40:	10016bbc 	xorhi	zero,r2,1454
10016a44:	10017278 	rdprs	zero,r2,1481
10016a48:	10016bbc 	xorhi	zero,r2,1454
10016a4c:	10016bbc 	xorhi	zero,r2,1454
10016a50:	10016bbc 	xorhi	zero,r2,1454
10016a54:	10016bbc 	xorhi	zero,r2,1454
10016a58:	10016bbc 	xorhi	zero,r2,1454
10016a5c:	10016bbc 	xorhi	zero,r2,1454
10016a60:	10016bbc 	xorhi	zero,r2,1454
10016a64:	10016bbc 	xorhi	zero,r2,1454
10016a68:	10016bbc 	xorhi	zero,r2,1454
10016a6c:	10016bbc 	xorhi	zero,r2,1454
10016a70:	10016e10 	cmplti	zero,r2,1464
10016a74:	10016d9c 	xori	zero,r2,1462
10016a78:	100170c0 	call	1100170c <_gp+0xfd11ec>
10016a7c:	100170c0 	call	1100170c <_gp+0xfd11ec>
10016a80:	100170c0 	call	1100170c <_gp+0xfd11ec>
10016a84:	10017390 	cmplti	zero,r2,1486
10016a88:	10016d9c 	xori	zero,r2,1462
10016a8c:	10016bbc 	xorhi	zero,r2,1454
10016a90:	10016bbc 	xorhi	zero,r2,1454
10016a94:	1001737c 	xorhi	zero,r2,1485
10016a98:	10016bbc 	xorhi	zero,r2,1454
10016a9c:	10017040 	call	11001704 <_gp+0xfd11e4>
10016aa0:	10017000 	call	11001700 <_gp+0xfd11e0>
10016aa4:	10017300 	call	11001730 <_gp+0xfd1210>
10016aa8:	100172f4 	orhi	zero,r2,1483
10016aac:	10016bbc 	xorhi	zero,r2,1454
10016ab0:	10016d40 	call	110016d4 <_gp+0xfd11b4>
10016ab4:	10016bbc 	xorhi	zero,r2,1454
10016ab8:	10016d00 	call	110016d0 <_gp+0xfd11b0>
10016abc:	10016bbc 	xorhi	zero,r2,1454
10016ac0:	10016bbc 	xorhi	zero,r2,1454
10016ac4:	10016cb8 	rdprs	zero,r2,1458
10016ac8:	d9000517 	ldw	r4,20(sp)
10016acc:	980b883a 	mov	r5,r19
10016ad0:	0018a6c0 	call	10018a6c <__swsetup_r>
10016ad4:	10074c1e 	bne	r2,zero,10018808 <___vfprintf_internal_r+0x2038>
10016ad8:	9880030b 	ldhu	r2,12(r19)
10016adc:	1080068c 	andi	r2,r2,26
10016ae0:	10800298 	cmpnei	r2,r2,10
10016ae4:	103f631e 	bne	r2,zero,10016874 <___vfprintf_internal_r+0xa4>
10016ae8:	9880038f 	ldh	r2,14(r19)
10016aec:	103f6116 	blt	r2,zero,10016874 <___vfprintf_internal_r+0xa4>
10016af0:	d9c00617 	ldw	r7,24(sp)
10016af4:	d9000517 	ldw	r4,20(sp)
10016af8:	a00d883a 	mov	r6,r20
10016afc:	980b883a 	mov	r5,r19
10016b00:	00189480 	call	10018948 <__sbprintf>
10016b04:	d8800415 	stw	r2,16(sp)
10016b08:	00001306 	br	10016b58 <___vfprintf_internal_r+0x388>
10016b0c:	95a3c83a 	sub	r17,r18,r22
10016b10:	883f8226 	beq	r17,zero,1001691c <___vfprintf_internal_r+0x14c>
10016b14:	003f7106 	br	100168dc <___vfprintf_internal_r+0x10c>
10016b18:	d9000517 	ldw	r4,20(sp)
10016b1c:	d9801c04 	addi	r6,sp,112
10016b20:	980b883a 	mov	r5,r19
10016b24:	001cf100 	call	1001cf10 <__sprint_r>
10016b28:	1000081e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10016b2c:	b811883a 	mov	r8,r23
10016b30:	003f7506 	br	10016908 <___vfprintf_internal_r+0x138>
10016b34:	d8801e17 	ldw	r2,120(sp)
10016b38:	10000426 	beq	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10016b3c:	d9000517 	ldw	r4,20(sp)
10016b40:	d9801c04 	addi	r6,sp,112
10016b44:	980b883a 	mov	r5,r19
10016b48:	001cf100 	call	1001cf10 <__sprint_r>
10016b4c:	9880030b 	ldhu	r2,12(r19)
10016b50:	1080100c 	andi	r2,r2,64
10016b54:	10072c1e 	bne	r2,zero,10018808 <___vfprintf_internal_r+0x2038>
10016b58:	d8800417 	ldw	r2,16(sp)
10016b5c:	dfc04217 	ldw	ra,264(sp)
10016b60:	df004117 	ldw	fp,260(sp)
10016b64:	ddc04017 	ldw	r23,256(sp)
10016b68:	dd803f17 	ldw	r22,252(sp)
10016b6c:	dd403e17 	ldw	r21,248(sp)
10016b70:	dd003d17 	ldw	r20,244(sp)
10016b74:	dcc03c17 	ldw	r19,240(sp)
10016b78:	dc803b17 	ldw	r18,236(sp)
10016b7c:	dc403a17 	ldw	r17,232(sp)
10016b80:	dc003917 	ldw	r16,228(sp)
10016b84:	dec04304 	addi	sp,sp,268
10016b88:	f800283a 	ret
10016b8c:	0023883a 	mov	r17,zero
10016b90:	e0bff404 	addi	r2,fp,-48
10016b94:	b5800044 	addi	r22,r22,1
10016b98:	8c4002a4 	muli	r17,r17,10
10016b9c:	b73fffc7 	ldb	fp,-1(r22)
10016ba0:	1463883a 	add	r17,r2,r17
10016ba4:	e0bff404 	addi	r2,fp,-48
10016ba8:	10c002b0 	cmpltui	r3,r2,10
10016bac:	183ff91e 	bne	r3,zero,10016b94 <___vfprintf_internal_r+0x3c4>
10016bb0:	e0bff804 	addi	r2,fp,-32
10016bb4:	10c01668 	cmpgeui	r3,r2,89
10016bb8:	183f6526 	beq	r3,zero,10016950 <___vfprintf_internal_r+0x180>
10016bbc:	21003fcc 	andi	r4,r4,255
10016bc0:	20066d1e 	bne	r4,zero,10018578 <___vfprintf_internal_r+0x1da8>
10016bc4:	e03fdb26 	beq	fp,zero,10016b34 <___vfprintf_internal_r+0x364>
10016bc8:	df001f05 	stb	fp,124(sp)
10016bcc:	d8001545 	stb	zero,85(sp)
10016bd0:	05400044 	movi	r21,1
10016bd4:	05000044 	movi	r20,1
10016bd8:	dc001f04 	addi	r16,sp,124
10016bdc:	00009506 	br	10016e34 <___vfprintf_internal_r+0x664>
10016be0:	63002014 	ori	r12,r12,128
10016be4:	b2800007 	ldb	r10,0(r22)
10016be8:	003f5406 	br	1001693c <___vfprintf_internal_r+0x16c>
10016bec:	b7000007 	ldb	fp,0(r22)
10016bf0:	b0c00044 	addi	r3,r22,1
10016bf4:	e0800aa0 	cmpeqi	r2,fp,42
10016bf8:	1007411e 	bne	r2,zero,10018900 <___vfprintf_internal_r+0x2130>
10016bfc:	e0bff404 	addi	r2,fp,-48
10016c00:	118002b0 	cmpltui	r6,r2,10
10016c04:	182d883a 	mov	r22,r3
10016c08:	0017883a 	mov	r11,zero
10016c0c:	303f4d26 	beq	r6,zero,10016944 <___vfprintf_internal_r+0x174>
10016c10:	b5800044 	addi	r22,r22,1
10016c14:	5ac002a4 	muli	r11,r11,10
10016c18:	b73fffc7 	ldb	fp,-1(r22)
10016c1c:	5897883a 	add	r11,r11,r2
10016c20:	e0bff404 	addi	r2,fp,-48
10016c24:	10c002b0 	cmpltui	r3,r2,10
10016c28:	183ff91e 	bne	r3,zero,10016c10 <___vfprintf_internal_r+0x440>
10016c2c:	003f4506 	br	10016944 <___vfprintf_internal_r+0x174>
10016c30:	b7000003 	ldbu	fp,0(r22)
10016c34:	e2803fcc 	andi	r10,fp,255
10016c38:	5280201c 	xori	r10,r10,128
10016c3c:	63000114 	ori	r12,r12,4
10016c40:	52bfe004 	addi	r10,r10,-128
10016c44:	003f3d06 	br	1001693c <___vfprintf_internal_r+0x16c>
10016c48:	01000044 	movi	r4,1
10016c4c:	01400ac4 	movi	r5,43
10016c50:	b2800007 	ldb	r10,0(r22)
10016c54:	003f3906 	br	1001693c <___vfprintf_internal_r+0x16c>
10016c58:	d8800617 	ldw	r2,24(sp)
10016c5c:	b7000003 	ldbu	fp,0(r22)
10016c60:	14400017 	ldw	r17,0(r2)
10016c64:	10800104 	addi	r2,r2,4
10016c68:	8804d716 	blt	r17,zero,10017fc8 <___vfprintf_internal_r+0x17f8>
10016c6c:	d8800615 	stw	r2,24(sp)
10016c70:	e2803fcc 	andi	r10,fp,255
10016c74:	5280201c 	xori	r10,r10,128
10016c78:	52bfe004 	addi	r10,r10,-128
10016c7c:	003f2f06 	br	1001693c <___vfprintf_internal_r+0x16c>
10016c80:	63000054 	ori	r12,r12,1
10016c84:	b2800007 	ldb	r10,0(r22)
10016c88:	003f2c06 	br	1001693c <___vfprintf_internal_r+0x16c>
10016c8c:	28803fcc 	andi	r2,r5,255
10016c90:	1080201c 	xori	r2,r2,128
10016c94:	10bfe004 	addi	r2,r2,-128
10016c98:	b7000003 	ldbu	fp,0(r22)
10016c9c:	103ff41e 	bne	r2,zero,10016c70 <___vfprintf_internal_r+0x4a0>
10016ca0:	e2803fcc 	andi	r10,fp,255
10016ca4:	5280201c 	xori	r10,r10,128
10016ca8:	01000044 	movi	r4,1
10016cac:	01400804 	movi	r5,32
10016cb0:	52bfe004 	addi	r10,r10,-128
10016cb4:	003f2106 	br	1001693c <___vfprintf_internal_r+0x16c>
10016cb8:	21003fcc 	andi	r4,r4,255
10016cbc:	2006b31e 	bne	r4,zero,1001878c <___vfprintf_internal_r+0x1fbc>
10016cc0:	008400b4 	movhi	r2,4098
10016cc4:	1096d104 	addi	r2,r2,23364
10016cc8:	d8800c15 	stw	r2,48(sp)
10016ccc:	6080080c 	andi	r2,r12,32
10016cd0:	10017026 	beq	r2,zero,10017294 <___vfprintf_internal_r+0xac4>
10016cd4:	d8800617 	ldw	r2,24(sp)
10016cd8:	15400017 	ldw	r21,0(r2)
10016cdc:	15000117 	ldw	r20,4(r2)
10016ce0:	10800204 	addi	r2,r2,8
10016ce4:	d8800615 	stw	r2,24(sp)
10016ce8:	6080004c 	andi	r2,r12,1
10016cec:	10000226 	beq	r2,zero,10016cf8 <___vfprintf_internal_r+0x528>
10016cf0:	ad04b03a 	or	r2,r21,r20
10016cf4:	1004a71e 	bne	r2,zero,10017f94 <___vfprintf_internal_r+0x17c4>
10016cf8:	00800084 	movi	r2,2
10016cfc:	00018f06 	br	1001733c <___vfprintf_internal_r+0xb6c>
10016d00:	21003fcc 	andi	r4,r4,255
10016d04:	20069f1e 	bne	r4,zero,10018784 <___vfprintf_internal_r+0x1fb4>
10016d08:	6080080c 	andi	r2,r12,32
10016d0c:	1001b41e 	bne	r2,zero,100173e0 <___vfprintf_internal_r+0xc10>
10016d10:	d8800617 	ldw	r2,24(sp)
10016d14:	60c0040c 	andi	r3,r12,16
10016d18:	15400017 	ldw	r21,0(r2)
10016d1c:	10800104 	addi	r2,r2,4
10016d20:	18016e1e 	bne	r3,zero,100172dc <___vfprintf_internal_r+0xb0c>
10016d24:	60c0100c 	andi	r3,r12,64
10016d28:	18059f26 	beq	r3,zero,100183a8 <___vfprintf_internal_r+0x1bd8>
10016d2c:	d8800615 	stw	r2,24(sp)
10016d30:	ad7fffcc 	andi	r21,r21,65535
10016d34:	0029883a 	mov	r20,zero
10016d38:	00800044 	movi	r2,1
10016d3c:	00017f06 	br	1001733c <___vfprintf_internal_r+0xb6c>
10016d40:	d8800617 	ldw	r2,24(sp)
10016d44:	d8001545 	stb	zero,85(sp)
10016d48:	14000017 	ldw	r16,0(r2)
10016d4c:	14800104 	addi	r18,r2,4
10016d50:	8004c726 	beq	r16,zero,10018070 <___vfprintf_internal_r+0x18a0>
10016d54:	da000e15 	stw	r8,56(sp)
10016d58:	db000715 	stw	r12,28(sp)
10016d5c:	58bfffe0 	cmpeqi	r2,r11,-1
10016d60:	1005691e 	bne	r2,zero,10018308 <___vfprintf_internal_r+0x1b38>
10016d64:	580d883a 	mov	r6,r11
10016d68:	000b883a 	mov	r5,zero
10016d6c:	8009883a 	mov	r4,r16
10016d70:	dac00615 	stw	r11,24(sp)
10016d74:	00156840 	call	10015684 <memchr>
10016d78:	dac00617 	ldw	r11,24(sp)
10016d7c:	db000717 	ldw	r12,28(sp)
10016d80:	da000e17 	ldw	r8,56(sp)
10016d84:	10066726 	beq	r2,zero,10018724 <___vfprintf_internal_r+0x1f54>
10016d88:	1429c83a 	sub	r20,r2,r16
10016d8c:	a02b883a 	mov	r21,r20
10016d90:	a005f716 	blt	r20,zero,10018570 <___vfprintf_internal_r+0x1da0>
10016d94:	dc800615 	stw	r18,24(sp)
10016d98:	00002606 	br	10016e34 <___vfprintf_internal_r+0x664>
10016d9c:	21003fcc 	andi	r4,r4,255
10016da0:	2006761e 	bne	r4,zero,1001877c <___vfprintf_internal_r+0x1fac>
10016da4:	6080080c 	andi	r2,r12,32
10016da8:	10017f1e 	bne	r2,zero,100173a8 <___vfprintf_internal_r+0xbd8>
10016dac:	d8800617 	ldw	r2,24(sp)
10016db0:	60c0040c 	andi	r3,r12,16
10016db4:	10800104 	addi	r2,r2,4
10016db8:	1801001e 	bne	r3,zero,100171bc <___vfprintf_internal_r+0x9ec>
10016dbc:	60c0100c 	andi	r3,r12,64
10016dc0:	1800fe26 	beq	r3,zero,100171bc <___vfprintf_internal_r+0x9ec>
10016dc4:	d8c00617 	ldw	r3,24(sp)
10016dc8:	d8800615 	stw	r2,24(sp)
10016dcc:	1d40000f 	ldh	r21,0(r3)
10016dd0:	a829d7fa 	srai	r20,r21,31
10016dd4:	a005883a 	mov	r2,r20
10016dd8:	1000fe16 	blt	r2,zero,100171d4 <___vfprintf_internal_r+0xa04>
10016ddc:	58bfffd8 	cmpnei	r2,r11,-1
10016de0:	db401543 	ldbu	r13,85(sp)
10016de4:	10018526 	beq	r2,zero,100173fc <___vfprintf_internal_r+0xc2c>
10016de8:	00ffdfc4 	movi	r3,-129
10016dec:	ad04b03a 	or	r2,r21,r20
10016df0:	60d8703a 	and	r12,r12,r3
10016df4:	1001811e 	bne	r2,zero,100173fc <___vfprintf_internal_r+0xc2c>
10016df8:	5801831e 	bne	r11,zero,10017408 <___vfprintf_internal_r+0xc38>
10016dfc:	6025883a 	mov	r18,r12
10016e00:	0017883a 	mov	r11,zero
10016e04:	0029883a 	mov	r20,zero
10016e08:	b821883a 	mov	r16,r23
10016e0c:	00018306 	br	1001741c <___vfprintf_internal_r+0xc4c>
10016e10:	d8c00617 	ldw	r3,24(sp)
10016e14:	d8001545 	stb	zero,85(sp)
10016e18:	05400044 	movi	r21,1
10016e1c:	18800017 	ldw	r2,0(r3)
10016e20:	18c00104 	addi	r3,r3,4
10016e24:	d8c00615 	stw	r3,24(sp)
10016e28:	d8801f05 	stb	r2,124(sp)
10016e2c:	05000044 	movi	r20,1
10016e30:	dc001f04 	addi	r16,sp,124
10016e34:	6025883a 	mov	r18,r12
10016e38:	0017883a 	mov	r11,zero
10016e3c:	d8000715 	stw	zero,28(sp)
10016e40:	9380008c 	andi	r14,r18,2
10016e44:	70000126 	beq	r14,zero,10016e4c <___vfprintf_internal_r+0x67c>
10016e48:	ad400084 	addi	r21,r21,2
10016e4c:	9340210c 	andi	r13,r18,132
10016e50:	d8c01e17 	ldw	r3,120(sp)
10016e54:	6800021e 	bne	r13,zero,10016e60 <___vfprintf_internal_r+0x690>
10016e58:	8d4fc83a 	sub	r7,r17,r21
10016e5c:	01c2ce16 	blt	zero,r7,10017998 <___vfprintf_internal_r+0x11c8>
10016e60:	d8801547 	ldb	r2,85(sp)
10016e64:	10000c26 	beq	r2,zero,10016e98 <___vfprintf_internal_r+0x6c8>
10016e68:	d8801d17 	ldw	r2,116(sp)
10016e6c:	d9001544 	addi	r4,sp,85
10016e70:	18c00044 	addi	r3,r3,1
10016e74:	10800044 	addi	r2,r2,1
10016e78:	41000015 	stw	r4,0(r8)
10016e7c:	01000044 	movi	r4,1
10016e80:	d8801d15 	stw	r2,116(sp)
10016e84:	41000115 	stw	r4,4(r8)
10016e88:	d8c01e15 	stw	r3,120(sp)
10016e8c:	10800208 	cmpgei	r2,r2,8
10016e90:	1002fb1e 	bne	r2,zero,10017a80 <___vfprintf_internal_r+0x12b0>
10016e94:	42000204 	addi	r8,r8,8
10016e98:	70000c26 	beq	r14,zero,10016ecc <___vfprintf_internal_r+0x6fc>
10016e9c:	d8801d17 	ldw	r2,116(sp)
10016ea0:	d9001584 	addi	r4,sp,86
10016ea4:	18c00084 	addi	r3,r3,2
10016ea8:	10800044 	addi	r2,r2,1
10016eac:	41000015 	stw	r4,0(r8)
10016eb0:	01000084 	movi	r4,2
10016eb4:	d8801d15 	stw	r2,116(sp)
10016eb8:	41000115 	stw	r4,4(r8)
10016ebc:	d8c01e15 	stw	r3,120(sp)
10016ec0:	10800208 	cmpgei	r2,r2,8
10016ec4:	1002fc1e 	bne	r2,zero,10017ab8 <___vfprintf_internal_r+0x12e8>
10016ec8:	42000204 	addi	r8,r8,8
10016ecc:	6b402018 	cmpnei	r13,r13,128
10016ed0:	6801cf26 	beq	r13,zero,10017610 <___vfprintf_internal_r+0xe40>
10016ed4:	5d0fc83a 	sub	r7,r11,r20
10016ed8:	01c20616 	blt	zero,r7,100176f4 <___vfprintf_internal_r+0xf24>
10016edc:	9080400c 	andi	r2,r18,256
10016ee0:	10017c1e 	bne	r2,zero,100174d4 <___vfprintf_internal_r+0xd04>
10016ee4:	d8801d17 	ldw	r2,116(sp)
10016ee8:	1d07883a 	add	r3,r3,r20
10016eec:	44000015 	stw	r16,0(r8)
10016ef0:	10800044 	addi	r2,r2,1
10016ef4:	d8801d15 	stw	r2,116(sp)
10016ef8:	45000115 	stw	r20,4(r8)
10016efc:	d8c01e15 	stw	r3,120(sp)
10016f00:	10800208 	cmpgei	r2,r2,8
10016f04:	1002571e 	bne	r2,zero,10017864 <___vfprintf_internal_r+0x1094>
10016f08:	42000204 	addi	r8,r8,8
10016f0c:	9480010c 	andi	r18,r18,4
10016f10:	90000226 	beq	r18,zero,10016f1c <___vfprintf_internal_r+0x74c>
10016f14:	8d61c83a 	sub	r16,r17,r21
10016f18:	04000916 	blt	zero,r16,10016f40 <___vfprintf_internal_r+0x770>
10016f1c:	8d40010e 	bge	r17,r21,10016f24 <___vfprintf_internal_r+0x754>
10016f20:	a823883a 	mov	r17,r21
10016f24:	d8800417 	ldw	r2,16(sp)
10016f28:	1445883a 	add	r2,r2,r17
10016f2c:	d8800415 	stw	r2,16(sp)
10016f30:	1802241e 	bne	r3,zero,100177c4 <___vfprintf_internal_r+0xff4>
10016f34:	d8001d15 	stw	zero,116(sp)
10016f38:	b811883a 	mov	r8,r23
10016f3c:	003e5906 	br	100168a4 <___vfprintf_internal_r+0xd4>
10016f40:	030400b4 	movhi	r12,4098
10016f44:	81000450 	cmplti	r4,r16,17
10016f48:	6316dc84 	addi	r12,r12,23410
10016f4c:	d8801d17 	ldw	r2,116(sp)
10016f50:	20001c1e 	bne	r4,zero,10016fc4 <___vfprintf_internal_r+0x7f4>
10016f54:	04800404 	movi	r18,16
10016f58:	dd000517 	ldw	r20,20(sp)
10016f5c:	6039883a 	mov	fp,r12
10016f60:	00000406 	br	10016f74 <___vfprintf_internal_r+0x7a4>
10016f64:	843ffc04 	addi	r16,r16,-16
10016f68:	81000448 	cmpgei	r4,r16,17
10016f6c:	42000204 	addi	r8,r8,8
10016f70:	20001326 	beq	r4,zero,10016fc0 <___vfprintf_internal_r+0x7f0>
10016f74:	10800044 	addi	r2,r2,1
10016f78:	18c00404 	addi	r3,r3,16
10016f7c:	47000015 	stw	fp,0(r8)
10016f80:	44800115 	stw	r18,4(r8)
10016f84:	d8c01e15 	stw	r3,120(sp)
10016f88:	d8801d15 	stw	r2,116(sp)
10016f8c:	11000208 	cmpgei	r4,r2,8
10016f90:	203ff426 	beq	r4,zero,10016f64 <___vfprintf_internal_r+0x794>
10016f94:	d9801c04 	addi	r6,sp,112
10016f98:	980b883a 	mov	r5,r19
10016f9c:	a009883a 	mov	r4,r20
10016fa0:	001cf100 	call	1001cf10 <__sprint_r>
10016fa4:	103ee91e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10016fa8:	843ffc04 	addi	r16,r16,-16
10016fac:	81000448 	cmpgei	r4,r16,17
10016fb0:	d8c01e17 	ldw	r3,120(sp)
10016fb4:	d8801d17 	ldw	r2,116(sp)
10016fb8:	b811883a 	mov	r8,r23
10016fbc:	203fed1e 	bne	r4,zero,10016f74 <___vfprintf_internal_r+0x7a4>
10016fc0:	e019883a 	mov	r12,fp
10016fc4:	10800044 	addi	r2,r2,1
10016fc8:	1c07883a 	add	r3,r3,r16
10016fcc:	d8801d15 	stw	r2,116(sp)
10016fd0:	43000015 	stw	r12,0(r8)
10016fd4:	44000115 	stw	r16,4(r8)
10016fd8:	d8c01e15 	stw	r3,120(sp)
10016fdc:	10800210 	cmplti	r2,r2,8
10016fe0:	103fce1e 	bne	r2,zero,10016f1c <___vfprintf_internal_r+0x74c>
10016fe4:	d9000517 	ldw	r4,20(sp)
10016fe8:	d9801c04 	addi	r6,sp,112
10016fec:	980b883a 	mov	r5,r19
10016ff0:	001cf100 	call	1001cf10 <__sprint_r>
10016ff4:	103ed51e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10016ff8:	d8c01e17 	ldw	r3,120(sp)
10016ffc:	003fc706 	br	10016f1c <___vfprintf_internal_r+0x74c>
10017000:	21003fcc 	andi	r4,r4,255
10017004:	2005d91e 	bne	r4,zero,1001876c <___vfprintf_internal_r+0x1f9c>
10017008:	6080080c 	andi	r2,r12,32
1001700c:	1000ed1e 	bne	r2,zero,100173c4 <___vfprintf_internal_r+0xbf4>
10017010:	d8800617 	ldw	r2,24(sp)
10017014:	60c0040c 	andi	r3,r12,16
10017018:	15400017 	ldw	r21,0(r2)
1001701c:	10800104 	addi	r2,r2,4
10017020:	18001e1e 	bne	r3,zero,1001709c <___vfprintf_internal_r+0x8cc>
10017024:	60c0100c 	andi	r3,r12,64
10017028:	1804db26 	beq	r3,zero,10018398 <___vfprintf_internal_r+0x1bc8>
1001702c:	d8800615 	stw	r2,24(sp)
10017030:	ad7fffcc 	andi	r21,r21,65535
10017034:	0029883a 	mov	r20,zero
10017038:	0005883a 	mov	r2,zero
1001703c:	0000bf06 	br	1001733c <___vfprintf_internal_r+0xb6c>
10017040:	21003fcc 	andi	r4,r4,255
10017044:	2005cb1e 	bne	r4,zero,10018774 <___vfprintf_internal_r+0x1fa4>
10017048:	d9000617 	ldw	r4,24(sp)
1001704c:	6080080c 	andi	r2,r12,32
10017050:	20c00104 	addi	r3,r4,4
10017054:	1003d51e 	bne	r2,zero,10017fac <___vfprintf_internal_r+0x17dc>
10017058:	6080040c 	andi	r2,r12,16
1001705c:	1004301e 	bne	r2,zero,10018120 <___vfprintf_internal_r+0x1950>
10017060:	6300100c 	andi	r12,r12,64
10017064:	60042e26 	beq	r12,zero,10018120 <___vfprintf_internal_r+0x1950>
10017068:	d8800617 	ldw	r2,24(sp)
1001706c:	d8c00615 	stw	r3,24(sp)
10017070:	d8c00417 	ldw	r3,16(sp)
10017074:	10800017 	ldw	r2,0(r2)
10017078:	10c0000d 	sth	r3,0(r2)
1001707c:	003e0906 	br	100168a4 <___vfprintf_internal_r+0xd4>
10017080:	21003fcc 	andi	r4,r4,255
10017084:	2005c31e 	bne	r4,zero,10018794 <___vfprintf_internal_r+0x1fc4>
10017088:	6080080c 	andi	r2,r12,32
1001708c:	63000414 	ori	r12,r12,16
10017090:	1000cc1e 	bne	r2,zero,100173c4 <___vfprintf_internal_r+0xbf4>
10017094:	d8800617 	ldw	r2,24(sp)
10017098:	10800104 	addi	r2,r2,4
1001709c:	d8c00617 	ldw	r3,24(sp)
100170a0:	0029883a 	mov	r20,zero
100170a4:	d8800615 	stw	r2,24(sp)
100170a8:	1d400017 	ldw	r21,0(r3)
100170ac:	0005883a 	mov	r2,zero
100170b0:	0000a206 	br	1001733c <___vfprintf_internal_r+0xb6c>
100170b4:	63000214 	ori	r12,r12,8
100170b8:	b2800007 	ldb	r10,0(r22)
100170bc:	003e1f06 	br	1001693c <___vfprintf_internal_r+0x16c>
100170c0:	21003fcc 	andi	r4,r4,255
100170c4:	2005b71e 	bne	r4,zero,100187a4 <___vfprintf_internal_r+0x1fd4>
100170c8:	d8c00617 	ldw	r3,24(sp)
100170cc:	00a00034 	movhi	r2,32768
100170d0:	10bfffc4 	addi	r2,r2,-1
100170d4:	1d000117 	ldw	r20,4(r3)
100170d8:	1c800017 	ldw	r18,0(r3)
100170dc:	01dffc34 	movhi	r7,32752
100170e0:	a0a0703a 	and	r16,r20,r2
100170e4:	01bfffc4 	movi	r6,-1
100170e8:	18800204 	addi	r2,r3,8
100170ec:	39ffffc4 	addi	r7,r7,-1
100170f0:	9009883a 	mov	r4,r18
100170f4:	800b883a 	mov	r5,r16
100170f8:	da000f15 	stw	r8,60(sp)
100170fc:	dac00e15 	stw	r11,56(sp)
10017100:	db000715 	stw	r12,28(sp)
10017104:	dd000a15 	stw	r20,40(sp)
10017108:	dc800915 	stw	r18,36(sp)
1001710c:	d8800615 	stw	r2,24(sp)
10017110:	00219bc0 	call	100219bc <__unorddf2>
10017114:	db000717 	ldw	r12,28(sp)
10017118:	dac00e17 	ldw	r11,56(sp)
1001711c:	da000f17 	ldw	r8,60(sp)
10017120:	1003161e 	bne	r2,zero,10017d7c <___vfprintf_internal_r+0x15ac>
10017124:	01dffc34 	movhi	r7,32752
10017128:	01bfffc4 	movi	r6,-1
1001712c:	39ffffc4 	addi	r7,r7,-1
10017130:	9009883a 	mov	r4,r18
10017134:	800b883a 	mov	r5,r16
10017138:	00208d40 	call	100208d4 <__ledf2>
1001713c:	db000717 	ldw	r12,28(sp)
10017140:	dac00e17 	ldw	r11,56(sp)
10017144:	da000f17 	ldw	r8,60(sp)
10017148:	00830c0e 	bge	zero,r2,10017d7c <___vfprintf_internal_r+0x15ac>
1001714c:	000d883a 	mov	r6,zero
10017150:	000f883a 	mov	r7,zero
10017154:	9009883a 	mov	r4,r18
10017158:	a00b883a 	mov	r5,r20
1001715c:	da000e15 	stw	r8,56(sp)
10017160:	00208d40 	call	100208d4 <__ledf2>
10017164:	db000717 	ldw	r12,28(sp)
10017168:	da000e17 	ldw	r8,56(sp)
1001716c:	1004e216 	blt	r2,zero,100184f8 <___vfprintf_internal_r+0x1d28>
10017170:	db401543 	ldbu	r13,85(sp)
10017174:	e0801210 	cmplti	r2,fp,72
10017178:	1004cb1e 	bne	r2,zero,100184a8 <___vfprintf_internal_r+0x1cd8>
1001717c:	040400b4 	movhi	r16,4098
10017180:	8416c904 	addi	r16,r16,23332
10017184:	04bfdfc4 	movi	r18,-129
10017188:	64a4703a 	and	r18,r12,r18
1001718c:	054000c4 	movi	r21,3
10017190:	050000c4 	movi	r20,3
10017194:	0017883a 	mov	r11,zero
10017198:	d8000715 	stw	zero,28(sp)
1001719c:	0000a306 	br	1001742c <___vfprintf_internal_r+0xc5c>
100171a0:	21003fcc 	andi	r4,r4,255
100171a4:	20057d1e 	bne	r4,zero,1001879c <___vfprintf_internal_r+0x1fcc>
100171a8:	6080080c 	andi	r2,r12,32
100171ac:	63000414 	ori	r12,r12,16
100171b0:	10007d1e 	bne	r2,zero,100173a8 <___vfprintf_internal_r+0xbd8>
100171b4:	d8800617 	ldw	r2,24(sp)
100171b8:	10800104 	addi	r2,r2,4
100171bc:	d8c00617 	ldw	r3,24(sp)
100171c0:	1d400017 	ldw	r21,0(r3)
100171c4:	d8800615 	stw	r2,24(sp)
100171c8:	a829d7fa 	srai	r20,r21,31
100171cc:	a005883a 	mov	r2,r20
100171d0:	103f020e 	bge	r2,zero,10016ddc <___vfprintf_internal_r+0x60c>
100171d4:	056bc83a 	sub	r21,zero,r21
100171d8:	a804c03a 	cmpne	r2,r21,zero
100171dc:	0529c83a 	sub	r20,zero,r20
100171e0:	a0a9c83a 	sub	r20,r20,r2
100171e4:	00800b44 	movi	r2,45
100171e8:	d8801545 	stb	r2,85(sp)
100171ec:	58ffffe0 	cmpeqi	r3,r11,-1
100171f0:	03400b44 	movi	r13,45
100171f4:	00800044 	movi	r2,1
100171f8:	18005426 	beq	r3,zero,1001734c <___vfprintf_internal_r+0xb7c>
100171fc:	10c00060 	cmpeqi	r3,r2,1
10017200:	18007e1e 	bne	r3,zero,100173fc <___vfprintf_internal_r+0xc2c>
10017204:	108000a0 	cmpeqi	r2,r2,2
10017208:	1002371e 	bne	r2,zero,10017ae8 <___vfprintf_internal_r+0x1318>
1001720c:	b807883a 	mov	r3,r23
10017210:	00000106 	br	10017218 <___vfprintf_internal_r+0xa48>
10017214:	8007883a 	mov	r3,r16
10017218:	a808d0fa 	srli	r4,r21,3
1001721c:	a00a977a 	slli	r5,r20,29
10017220:	a028d0fa 	srli	r20,r20,3
10017224:	ad4001cc 	andi	r21,r21,7
10017228:	a8800c04 	addi	r2,r21,48
1001722c:	292ab03a 	or	r21,r5,r4
10017230:	18bfffc5 	stb	r2,-1(r3)
10017234:	ad08b03a 	or	r4,r21,r20
10017238:	1c3fffc4 	addi	r16,r3,-1
1001723c:	203ff51e 	bne	r4,zero,10017214 <___vfprintf_internal_r+0xa44>
10017240:	6100004c 	andi	r4,r12,1
10017244:	2000a026 	beq	r4,zero,100174c8 <___vfprintf_internal_r+0xcf8>
10017248:	10803fcc 	andi	r2,r2,255
1001724c:	1080201c 	xori	r2,r2,128
10017250:	10bfe004 	addi	r2,r2,-128
10017254:	10800c18 	cmpnei	r2,r2,48
10017258:	10009b26 	beq	r2,zero,100174c8 <___vfprintf_internal_r+0xcf8>
1001725c:	18ffff84 	addi	r3,r3,-2
10017260:	00800c04 	movi	r2,48
10017264:	80bfffc5 	stb	r2,-1(r16)
10017268:	b8e9c83a 	sub	r20,r23,r3
1001726c:	6025883a 	mov	r18,r12
10017270:	1821883a 	mov	r16,r3
10017274:	00006906 	br	1001741c <___vfprintf_internal_r+0xc4c>
10017278:	21003fcc 	andi	r4,r4,255
1001727c:	2005391e 	bne	r4,zero,10018764 <___vfprintf_internal_r+0x1f94>
10017280:	008400b4 	movhi	r2,4098
10017284:	1096cc04 	addi	r2,r2,23344
10017288:	d8800c15 	stw	r2,48(sp)
1001728c:	6080080c 	andi	r2,r12,32
10017290:	103e901e 	bne	r2,zero,10016cd4 <___vfprintf_internal_r+0x504>
10017294:	d8c00617 	ldw	r3,24(sp)
10017298:	6080040c 	andi	r2,r12,16
1001729c:	1d400017 	ldw	r21,0(r3)
100172a0:	18c00104 	addi	r3,r3,4
100172a4:	d8c00615 	stw	r3,24(sp)
100172a8:	1002ae1e 	bne	r2,zero,10017d64 <___vfprintf_internal_r+0x1594>
100172ac:	6080100c 	andi	r2,r12,64
100172b0:	1002ac26 	beq	r2,zero,10017d64 <___vfprintf_internal_r+0x1594>
100172b4:	ad7fffcc 	andi	r21,r21,65535
100172b8:	0029883a 	mov	r20,zero
100172bc:	003e8a06 	br	10016ce8 <___vfprintf_internal_r+0x518>
100172c0:	21003fcc 	andi	r4,r4,255
100172c4:	2005391e 	bne	r4,zero,100187ac <___vfprintf_internal_r+0x1fdc>
100172c8:	6080080c 	andi	r2,r12,32
100172cc:	63000414 	ori	r12,r12,16
100172d0:	1000431e 	bne	r2,zero,100173e0 <___vfprintf_internal_r+0xc10>
100172d4:	d8800617 	ldw	r2,24(sp)
100172d8:	10800104 	addi	r2,r2,4
100172dc:	d8c00617 	ldw	r3,24(sp)
100172e0:	0029883a 	mov	r20,zero
100172e4:	d8800615 	stw	r2,24(sp)
100172e8:	1d400017 	ldw	r21,0(r3)
100172ec:	00800044 	movi	r2,1
100172f0:	00001206 	br	1001733c <___vfprintf_internal_r+0xb6c>
100172f4:	63000814 	ori	r12,r12,32
100172f8:	b2800007 	ldb	r10,0(r22)
100172fc:	003d8f06 	br	1001693c <___vfprintf_internal_r+0x16c>
10017300:	d8c00617 	ldw	r3,24(sp)
10017304:	00800c04 	movi	r2,48
10017308:	d8801585 	stb	r2,86(sp)
1001730c:	00801e04 	movi	r2,120
10017310:	010400b4 	movhi	r4,4098
10017314:	d88015c5 	stb	r2,87(sp)
10017318:	1d400017 	ldw	r21,0(r3)
1001731c:	18800104 	addi	r2,r3,4
10017320:	d8800615 	stw	r2,24(sp)
10017324:	2096d104 	addi	r2,r4,23364
10017328:	d8800c15 	stw	r2,48(sp)
1001732c:	0029883a 	mov	r20,zero
10017330:	63000094 	ori	r12,r12,2
10017334:	00800084 	movi	r2,2
10017338:	07001e04 	movi	fp,120
1001733c:	d8001545 	stb	zero,85(sp)
10017340:	58ffffe0 	cmpeqi	r3,r11,-1
10017344:	001b883a 	mov	r13,zero
10017348:	183fac1e 	bne	r3,zero,100171fc <___vfprintf_internal_r+0xa2c>
1001734c:	04bfdfc4 	movi	r18,-129
10017350:	ad06b03a 	or	r3,r21,r20
10017354:	64a4703a 	and	r18,r12,r18
10017358:	18018d1e 	bne	r3,zero,10017990 <___vfprintf_internal_r+0x11c0>
1001735c:	5803b91e 	bne	r11,zero,10018244 <___vfprintf_internal_r+0x1a74>
10017360:	103ea71e 	bne	r2,zero,10016e00 <___vfprintf_internal_r+0x630>
10017364:	6500004c 	andi	r20,r12,1
10017368:	a0028226 	beq	r20,zero,10017d74 <___vfprintf_internal_r+0x15a4>
1001736c:	00800c04 	movi	r2,48
10017370:	d88028c5 	stb	r2,163(sp)
10017374:	dc0028c4 	addi	r16,sp,163
10017378:	00002806 	br	1001741c <___vfprintf_internal_r+0xc4c>
1001737c:	b2800007 	ldb	r10,0(r22)
10017380:	50801b18 	cmpnei	r2,r10,108
10017384:	10032926 	beq	r2,zero,1001802c <___vfprintf_internal_r+0x185c>
10017388:	63000414 	ori	r12,r12,16
1001738c:	003d6b06 	br	1001693c <___vfprintf_internal_r+0x16c>
10017390:	63001014 	ori	r12,r12,64
10017394:	b2800007 	ldb	r10,0(r22)
10017398:	003d6806 	br	1001693c <___vfprintf_internal_r+0x16c>
1001739c:	d9000517 	ldw	r4,20(sp)
100173a0:	001aaa80 	call	1001aaa8 <__sinit>
100173a4:	003d2306 	br	10016834 <___vfprintf_internal_r+0x64>
100173a8:	d8c00617 	ldw	r3,24(sp)
100173ac:	18800117 	ldw	r2,4(r3)
100173b0:	1d400017 	ldw	r21,0(r3)
100173b4:	18c00204 	addi	r3,r3,8
100173b8:	d8c00615 	stw	r3,24(sp)
100173bc:	1029883a 	mov	r20,r2
100173c0:	003e8506 	br	10016dd8 <___vfprintf_internal_r+0x608>
100173c4:	d8c00617 	ldw	r3,24(sp)
100173c8:	0005883a 	mov	r2,zero
100173cc:	1d400017 	ldw	r21,0(r3)
100173d0:	1d000117 	ldw	r20,4(r3)
100173d4:	18c00204 	addi	r3,r3,8
100173d8:	d8c00615 	stw	r3,24(sp)
100173dc:	003fd706 	br	1001733c <___vfprintf_internal_r+0xb6c>
100173e0:	d8c00617 	ldw	r3,24(sp)
100173e4:	00800044 	movi	r2,1
100173e8:	1d400017 	ldw	r21,0(r3)
100173ec:	1d000117 	ldw	r20,4(r3)
100173f0:	18c00204 	addi	r3,r3,8
100173f4:	d8c00615 	stw	r3,24(sp)
100173f8:	003fd006 	br	1001733c <___vfprintf_internal_r+0xb6c>
100173fc:	a000111e 	bne	r20,zero,10017444 <___vfprintf_internal_r+0xc74>
10017400:	a88002a8 	cmpgeui	r2,r21,10
10017404:	10000f1e 	bne	r2,zero,10017444 <___vfprintf_internal_r+0xc74>
10017408:	ad400c04 	addi	r21,r21,48
1001740c:	dd4028c5 	stb	r21,163(sp)
10017410:	6025883a 	mov	r18,r12
10017414:	05000044 	movi	r20,1
10017418:	dc0028c4 	addi	r16,sp,163
1001741c:	582b883a 	mov	r21,r11
10017420:	5d00010e 	bge	r11,r20,10017428 <___vfprintf_internal_r+0xc58>
10017424:	a02b883a 	mov	r21,r20
10017428:	d8000715 	stw	zero,28(sp)
1001742c:	6b403fcc 	andi	r13,r13,255
10017430:	6b40201c 	xori	r13,r13,128
10017434:	6b7fe004 	addi	r13,r13,-128
10017438:	683e8126 	beq	r13,zero,10016e40 <___vfprintf_internal_r+0x670>
1001743c:	ad400044 	addi	r21,r21,1
10017440:	003e7f06 	br	10016e40 <___vfprintf_internal_r+0x670>
10017444:	dc400e15 	stw	r17,56(sp)
10017448:	b821883a 	mov	r16,r23
1001744c:	a023883a 	mov	r17,r20
10017450:	db000715 	stw	r12,28(sp)
10017454:	9829883a 	mov	r20,r19
10017458:	dac00f15 	stw	r11,60(sp)
1001745c:	4025883a 	mov	r18,r8
10017460:	6827883a 	mov	r19,r13
10017464:	00000206 	br	10017470 <___vfprintf_internal_r+0xca0>
10017468:	102b883a 	mov	r21,r2
1001746c:	1823883a 	mov	r17,r3
10017470:	a809883a 	mov	r4,r21
10017474:	880b883a 	mov	r5,r17
10017478:	01800284 	movi	r6,10
1001747c:	000f883a 	mov	r7,zero
10017480:	001efdc0 	call	1001efdc <__umoddi3>
10017484:	10800c04 	addi	r2,r2,48
10017488:	843fffc4 	addi	r16,r16,-1
1001748c:	a809883a 	mov	r4,r21
10017490:	880b883a 	mov	r5,r17
10017494:	80800005 	stb	r2,0(r16)
10017498:	01800284 	movi	r6,10
1001749c:	000f883a 	mov	r7,zero
100174a0:	001ea440 	call	1001ea44 <__udivdi3>
100174a4:	883ff01e 	bne	r17,zero,10017468 <___vfprintf_internal_r+0xc98>
100174a8:	ad4002a8 	cmpgeui	r21,r21,10
100174ac:	a83fee1e 	bne	r21,zero,10017468 <___vfprintf_internal_r+0xc98>
100174b0:	db000717 	ldw	r12,28(sp)
100174b4:	dc400e17 	ldw	r17,56(sp)
100174b8:	dac00f17 	ldw	r11,60(sp)
100174bc:	981b883a 	mov	r13,r19
100174c0:	9011883a 	mov	r8,r18
100174c4:	a027883a 	mov	r19,r20
100174c8:	bc29c83a 	sub	r20,r23,r16
100174cc:	6025883a 	mov	r18,r12
100174d0:	003fd206 	br	1001741c <___vfprintf_internal_r+0xc4c>
100174d4:	e2801990 	cmplti	r10,fp,102
100174d8:	5000ea1e 	bne	r10,zero,10017884 <___vfprintf_internal_r+0x10b4>
100174dc:	d9000917 	ldw	r4,36(sp)
100174e0:	d9400a17 	ldw	r5,40(sp)
100174e4:	000d883a 	mov	r6,zero
100174e8:	000f883a 	mov	r7,zero
100174ec:	da000f15 	stw	r8,60(sp)
100174f0:	d8c00e15 	stw	r3,56(sp)
100174f4:	00207640 	call	10020764 <__eqdf2>
100174f8:	d8c00e17 	ldw	r3,56(sp)
100174fc:	da000f17 	ldw	r8,60(sp)
10017500:	1001891e 	bne	r2,zero,10017b28 <___vfprintf_internal_r+0x1358>
10017504:	d8801d17 	ldw	r2,116(sp)
10017508:	010400b4 	movhi	r4,4098
1001750c:	2116d804 	addi	r4,r4,23392
10017510:	10800044 	addi	r2,r2,1
10017514:	18c00044 	addi	r3,r3,1
10017518:	41000015 	stw	r4,0(r8)
1001751c:	01000044 	movi	r4,1
10017520:	d8801d15 	stw	r2,116(sp)
10017524:	41000115 	stw	r4,4(r8)
10017528:	d8c01e15 	stw	r3,120(sp)
1001752c:	10800208 	cmpgei	r2,r2,8
10017530:	1003331e 	bne	r2,zero,10018200 <___vfprintf_internal_r+0x1a30>
10017534:	42000204 	addi	r8,r8,8
10017538:	d8801617 	ldw	r2,88(sp)
1001753c:	d8c00817 	ldw	r3,32(sp)
10017540:	10c00416 	blt	r2,r3,10017554 <___vfprintf_internal_r+0xd84>
10017544:	9080004c 	andi	r2,r18,1
10017548:	1000021e 	bne	r2,zero,10017554 <___vfprintf_internal_r+0xd84>
1001754c:	d8c01e17 	ldw	r3,120(sp)
10017550:	003e6e06 	br	10016f0c <___vfprintf_internal_r+0x73c>
10017554:	d8800d17 	ldw	r2,52(sp)
10017558:	d8c01e17 	ldw	r3,120(sp)
1001755c:	d9000b17 	ldw	r4,44(sp)
10017560:	40800015 	stw	r2,0(r8)
10017564:	d8801d17 	ldw	r2,116(sp)
10017568:	20c7883a 	add	r3,r4,r3
1001756c:	41000115 	stw	r4,4(r8)
10017570:	10800044 	addi	r2,r2,1
10017574:	d8801d15 	stw	r2,116(sp)
10017578:	d8c01e15 	stw	r3,120(sp)
1001757c:	10800208 	cmpgei	r2,r2,8
10017580:	1002b11e 	bne	r2,zero,10018048 <___vfprintf_internal_r+0x1878>
10017584:	42000204 	addi	r8,r8,8
10017588:	d8800817 	ldw	r2,32(sp)
1001758c:	143fffc4 	addi	r16,r2,-1
10017590:	043e5e0e 	bge	zero,r16,10016f0c <___vfprintf_internal_r+0x73c>
10017594:	030400b4 	movhi	r12,4098
10017598:	81000450 	cmplti	r4,r16,17
1001759c:	6316d884 	addi	r12,r12,23394
100175a0:	d8801d17 	ldw	r2,116(sp)
100175a4:	2003731e 	bne	r4,zero,10018374 <___vfprintf_internal_r+0x1ba4>
100175a8:	dc400715 	stw	r17,28(sp)
100175ac:	05000404 	movi	r20,16
100175b0:	df000517 	ldw	fp,20(sp)
100175b4:	6023883a 	mov	r17,r12
100175b8:	00000406 	br	100175cc <___vfprintf_internal_r+0xdfc>
100175bc:	42000204 	addi	r8,r8,8
100175c0:	843ffc04 	addi	r16,r16,-16
100175c4:	81000448 	cmpgei	r4,r16,17
100175c8:	20036826 	beq	r4,zero,1001836c <___vfprintf_internal_r+0x1b9c>
100175cc:	10800044 	addi	r2,r2,1
100175d0:	18c00404 	addi	r3,r3,16
100175d4:	44400015 	stw	r17,0(r8)
100175d8:	45000115 	stw	r20,4(r8)
100175dc:	d8c01e15 	stw	r3,120(sp)
100175e0:	d8801d15 	stw	r2,116(sp)
100175e4:	11000208 	cmpgei	r4,r2,8
100175e8:	203ff426 	beq	r4,zero,100175bc <___vfprintf_internal_r+0xdec>
100175ec:	d9801c04 	addi	r6,sp,112
100175f0:	980b883a 	mov	r5,r19
100175f4:	e009883a 	mov	r4,fp
100175f8:	001cf100 	call	1001cf10 <__sprint_r>
100175fc:	103d531e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017600:	d8c01e17 	ldw	r3,120(sp)
10017604:	d8801d17 	ldw	r2,116(sp)
10017608:	b811883a 	mov	r8,r23
1001760c:	003fec06 	br	100175c0 <___vfprintf_internal_r+0xdf0>
10017610:	8d4fc83a 	sub	r7,r17,r21
10017614:	01fe2f0e 	bge	zero,r7,10016ed4 <___vfprintf_internal_r+0x704>
10017618:	030400b4 	movhi	r12,4098
1001761c:	39000450 	cmplti	r4,r7,17
10017620:	6316d884 	addi	r12,r12,23394
10017624:	d8801d17 	ldw	r2,116(sp)
10017628:	2000271e 	bne	r4,zero,100176c8 <___vfprintf_internal_r+0xef8>
1001762c:	dc000e15 	stw	r16,56(sp)
10017630:	dc800f15 	stw	r18,60(sp)
10017634:	dc401015 	stw	r17,64(sp)
10017638:	03400404 	movi	r13,16
1001763c:	3821883a 	mov	r16,r7
10017640:	dac01215 	stw	r11,72(sp)
10017644:	dc400517 	ldw	r17,20(sp)
10017648:	6025883a 	mov	r18,r12
1001764c:	00000406 	br	10017660 <___vfprintf_internal_r+0xe90>
10017650:	843ffc04 	addi	r16,r16,-16
10017654:	81000448 	cmpgei	r4,r16,17
10017658:	42000204 	addi	r8,r8,8
1001765c:	20001426 	beq	r4,zero,100176b0 <___vfprintf_internal_r+0xee0>
10017660:	10800044 	addi	r2,r2,1
10017664:	18c00404 	addi	r3,r3,16
10017668:	44800015 	stw	r18,0(r8)
1001766c:	43400115 	stw	r13,4(r8)
10017670:	d8c01e15 	stw	r3,120(sp)
10017674:	d8801d15 	stw	r2,116(sp)
10017678:	11000208 	cmpgei	r4,r2,8
1001767c:	203ff426 	beq	r4,zero,10017650 <___vfprintf_internal_r+0xe80>
10017680:	d9801c04 	addi	r6,sp,112
10017684:	980b883a 	mov	r5,r19
10017688:	8809883a 	mov	r4,r17
1001768c:	001cf100 	call	1001cf10 <__sprint_r>
10017690:	103d2e1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017694:	843ffc04 	addi	r16,r16,-16
10017698:	81000448 	cmpgei	r4,r16,17
1001769c:	d8c01e17 	ldw	r3,120(sp)
100176a0:	d8801d17 	ldw	r2,116(sp)
100176a4:	b811883a 	mov	r8,r23
100176a8:	03400404 	movi	r13,16
100176ac:	203fec1e 	bne	r4,zero,10017660 <___vfprintf_internal_r+0xe90>
100176b0:	800f883a 	mov	r7,r16
100176b4:	9019883a 	mov	r12,r18
100176b8:	dc000e17 	ldw	r16,56(sp)
100176bc:	dc401017 	ldw	r17,64(sp)
100176c0:	dac01217 	ldw	r11,72(sp)
100176c4:	dc800f17 	ldw	r18,60(sp)
100176c8:	10800044 	addi	r2,r2,1
100176cc:	19c7883a 	add	r3,r3,r7
100176d0:	d8801d15 	stw	r2,116(sp)
100176d4:	43000015 	stw	r12,0(r8)
100176d8:	41c00115 	stw	r7,4(r8)
100176dc:	d8c01e15 	stw	r3,120(sp)
100176e0:	10800208 	cmpgei	r2,r2,8
100176e4:	1002cd1e 	bne	r2,zero,1001821c <___vfprintf_internal_r+0x1a4c>
100176e8:	5d0fc83a 	sub	r7,r11,r20
100176ec:	42000204 	addi	r8,r8,8
100176f0:	01fdfa0e 	bge	zero,r7,10016edc <___vfprintf_internal_r+0x70c>
100176f4:	030400b4 	movhi	r12,4098
100176f8:	39000450 	cmplti	r4,r7,17
100176fc:	6316d884 	addi	r12,r12,23394
10017700:	d8801d17 	ldw	r2,116(sp)
10017704:	2000251e 	bne	r4,zero,1001779c <___vfprintf_internal_r+0xfcc>
10017708:	dc000e15 	stw	r16,56(sp)
1001770c:	dc800f15 	stw	r18,60(sp)
10017710:	dc401015 	stw	r17,64(sp)
10017714:	02c00404 	movi	r11,16
10017718:	3821883a 	mov	r16,r7
1001771c:	dc400517 	ldw	r17,20(sp)
10017720:	6025883a 	mov	r18,r12
10017724:	00000406 	br	10017738 <___vfprintf_internal_r+0xf68>
10017728:	843ffc04 	addi	r16,r16,-16
1001772c:	81000448 	cmpgei	r4,r16,17
10017730:	42000204 	addi	r8,r8,8
10017734:	20001426 	beq	r4,zero,10017788 <___vfprintf_internal_r+0xfb8>
10017738:	10800044 	addi	r2,r2,1
1001773c:	18c00404 	addi	r3,r3,16
10017740:	44800015 	stw	r18,0(r8)
10017744:	42c00115 	stw	r11,4(r8)
10017748:	d8c01e15 	stw	r3,120(sp)
1001774c:	d8801d15 	stw	r2,116(sp)
10017750:	11000208 	cmpgei	r4,r2,8
10017754:	203ff426 	beq	r4,zero,10017728 <___vfprintf_internal_r+0xf58>
10017758:	d9801c04 	addi	r6,sp,112
1001775c:	980b883a 	mov	r5,r19
10017760:	8809883a 	mov	r4,r17
10017764:	001cf100 	call	1001cf10 <__sprint_r>
10017768:	103cf81e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
1001776c:	843ffc04 	addi	r16,r16,-16
10017770:	81000448 	cmpgei	r4,r16,17
10017774:	d8c01e17 	ldw	r3,120(sp)
10017778:	d8801d17 	ldw	r2,116(sp)
1001777c:	b811883a 	mov	r8,r23
10017780:	02c00404 	movi	r11,16
10017784:	203fec1e 	bne	r4,zero,10017738 <___vfprintf_internal_r+0xf68>
10017788:	800f883a 	mov	r7,r16
1001778c:	9019883a 	mov	r12,r18
10017790:	dc401017 	ldw	r17,64(sp)
10017794:	dc000e17 	ldw	r16,56(sp)
10017798:	dc800f17 	ldw	r18,60(sp)
1001779c:	10800044 	addi	r2,r2,1
100177a0:	19c7883a 	add	r3,r3,r7
100177a4:	d8801d15 	stw	r2,116(sp)
100177a8:	43000015 	stw	r12,0(r8)
100177ac:	41c00115 	stw	r7,4(r8)
100177b0:	d8c01e15 	stw	r3,120(sp)
100177b4:	10800208 	cmpgei	r2,r2,8
100177b8:	1001621e 	bne	r2,zero,10017d44 <___vfprintf_internal_r+0x1574>
100177bc:	42000204 	addi	r8,r8,8
100177c0:	003dc606 	br	10016edc <___vfprintf_internal_r+0x70c>
100177c4:	d9000517 	ldw	r4,20(sp)
100177c8:	d9801c04 	addi	r6,sp,112
100177cc:	980b883a 	mov	r5,r19
100177d0:	001cf100 	call	1001cf10 <__sprint_r>
100177d4:	103dd726 	beq	r2,zero,10016f34 <___vfprintf_internal_r+0x764>
100177d8:	003cdc06 	br	10016b4c <___vfprintf_internal_r+0x37c>
100177dc:	d9000517 	ldw	r4,20(sp)
100177e0:	d9801c04 	addi	r6,sp,112
100177e4:	980b883a 	mov	r5,r19
100177e8:	001cf100 	call	1001cf10 <__sprint_r>
100177ec:	103cd71e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100177f0:	d9001617 	ldw	r4,88(sp)
100177f4:	d8c01e17 	ldw	r3,120(sp)
100177f8:	b811883a 	mov	r8,r23
100177fc:	2002951e 	bne	r4,zero,10018254 <___vfprintf_internal_r+0x1a84>
10017800:	d9000817 	ldw	r4,32(sp)
10017804:	9080004c 	andi	r2,r18,1
10017808:	1104b03a 	or	r2,r2,r4
1001780c:	103dbf26 	beq	r2,zero,10016f0c <___vfprintf_internal_r+0x73c>
10017810:	d8800d17 	ldw	r2,52(sp)
10017814:	d9000b17 	ldw	r4,44(sp)
10017818:	40800015 	stw	r2,0(r8)
1001781c:	d8801d17 	ldw	r2,116(sp)
10017820:	20c7883a 	add	r3,r4,r3
10017824:	41000115 	stw	r4,4(r8)
10017828:	10800044 	addi	r2,r2,1
1001782c:	d8c01e15 	stw	r3,120(sp)
10017830:	d8801d15 	stw	r2,116(sp)
10017834:	11000208 	cmpgei	r4,r2,8
10017838:	2003641e 	bne	r4,zero,100185cc <___vfprintf_internal_r+0x1dfc>
1001783c:	42000204 	addi	r8,r8,8
10017840:	d9000817 	ldw	r4,32(sp)
10017844:	10800044 	addi	r2,r2,1
10017848:	d8801d15 	stw	r2,116(sp)
1001784c:	20c7883a 	add	r3,r4,r3
10017850:	44000015 	stw	r16,0(r8)
10017854:	41000115 	stw	r4,4(r8)
10017858:	d8c01e15 	stw	r3,120(sp)
1001785c:	10800208 	cmpgei	r2,r2,8
10017860:	103da926 	beq	r2,zero,10016f08 <___vfprintf_internal_r+0x738>
10017864:	d9000517 	ldw	r4,20(sp)
10017868:	d9801c04 	addi	r6,sp,112
1001786c:	980b883a 	mov	r5,r19
10017870:	001cf100 	call	1001cf10 <__sprint_r>
10017874:	103cb51e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017878:	d8c01e17 	ldw	r3,120(sp)
1001787c:	b811883a 	mov	r8,r23
10017880:	003da206 	br	10016f0c <___vfprintf_internal_r+0x73c>
10017884:	d8800817 	ldw	r2,32(sp)
10017888:	df001d17 	ldw	fp,116(sp)
1001788c:	18c00044 	addi	r3,r3,1
10017890:	10800088 	cmpgei	r2,r2,2
10017894:	e5000044 	addi	r20,fp,1
10017898:	42800204 	addi	r10,r8,8
1001789c:	1000fb26 	beq	r2,zero,10017c8c <___vfprintf_internal_r+0x14bc>
100178a0:	00800044 	movi	r2,1
100178a4:	40800115 	stw	r2,4(r8)
100178a8:	44000015 	stw	r16,0(r8)
100178ac:	d8c01e15 	stw	r3,120(sp)
100178b0:	dd001d15 	stw	r20,116(sp)
100178b4:	a0800210 	cmplti	r2,r20,8
100178b8:	10022c26 	beq	r2,zero,1001816c <___vfprintf_internal_r+0x199c>
100178bc:	d8800b17 	ldw	r2,44(sp)
100178c0:	d9000d17 	ldw	r4,52(sp)
100178c4:	a5000044 	addi	r20,r20,1
100178c8:	1887883a 	add	r3,r3,r2
100178cc:	50800115 	stw	r2,4(r10)
100178d0:	51000015 	stw	r4,0(r10)
100178d4:	d8c01e15 	stw	r3,120(sp)
100178d8:	dd001d15 	stw	r20,116(sp)
100178dc:	a0800208 	cmpgei	r2,r20,8
100178e0:	1002191e 	bne	r2,zero,10018148 <___vfprintf_internal_r+0x1978>
100178e4:	52800204 	addi	r10,r10,8
100178e8:	d8800817 	ldw	r2,32(sp)
100178ec:	d9000917 	ldw	r4,36(sp)
100178f0:	d9400a17 	ldw	r5,40(sp)
100178f4:	52000204 	addi	r8,r10,8
100178f8:	12ffffc4 	addi	r11,r2,-1
100178fc:	a7000044 	addi	fp,r20,1
10017900:	000d883a 	mov	r6,zero
10017904:	000f883a 	mov	r7,zero
10017908:	d8c01215 	stw	r3,72(sp)
1001790c:	da800f15 	stw	r10,60(sp)
10017910:	da000e15 	stw	r8,56(sp)
10017914:	dac00715 	stw	r11,28(sp)
10017918:	df001015 	stw	fp,64(sp)
1001791c:	00207640 	call	10020764 <__eqdf2>
10017920:	dac00717 	ldw	r11,28(sp)
10017924:	da000e17 	ldw	r8,56(sp)
10017928:	da800f17 	ldw	r10,60(sp)
1001792c:	db401017 	ldw	r13,64(sp)
10017930:	d8c01217 	ldw	r3,72(sp)
10017934:	1000e126 	beq	r2,zero,10017cbc <___vfprintf_internal_r+0x14ec>
10017938:	84000044 	addi	r16,r16,1
1001793c:	1ac7883a 	add	r3,r3,r11
10017940:	df001d15 	stw	fp,116(sp)
10017944:	54000015 	stw	r16,0(r10)
10017948:	52c00115 	stw	r11,4(r10)
1001794c:	d8c01e15 	stw	r3,120(sp)
10017950:	e7000208 	cmpgei	fp,fp,8
10017954:	e001aa1e 	bne	fp,zero,10018000 <___vfprintf_internal_r+0x1830>
10017958:	50800404 	addi	r2,r10,16
1001795c:	a7000084 	addi	fp,r20,2
10017960:	4015883a 	mov	r10,r8
10017964:	1011883a 	mov	r8,r2
10017968:	d9001117 	ldw	r4,68(sp)
1001796c:	d8801844 	addi	r2,sp,97
10017970:	df001d15 	stw	fp,116(sp)
10017974:	20c7883a 	add	r3,r4,r3
10017978:	50800015 	stw	r2,0(r10)
1001797c:	51000115 	stw	r4,4(r10)
10017980:	d8c01e15 	stw	r3,120(sp)
10017984:	e7000210 	cmplti	fp,fp,8
10017988:	e03d601e 	bne	fp,zero,10016f0c <___vfprintf_internal_r+0x73c>
1001798c:	003fb506 	br	10017864 <___vfprintf_internal_r+0x1094>
10017990:	9019883a 	mov	r12,r18
10017994:	003e1906 	br	100171fc <___vfprintf_internal_r+0xa2c>
10017998:	030400b4 	movhi	r12,4098
1001799c:	39000450 	cmplti	r4,r7,17
100179a0:	6316dc84 	addi	r12,r12,23410
100179a4:	d8801d17 	ldw	r2,116(sp)
100179a8:	20002b1e 	bne	r4,zero,10017a58 <___vfprintf_internal_r+0x1288>
100179ac:	dc001015 	stw	r16,64(sp)
100179b0:	dc801215 	stw	r18,72(sp)
100179b4:	dc401315 	stw	r17,76(sp)
100179b8:	03c00404 	movi	r15,16
100179bc:	db800e15 	stw	r14,56(sp)
100179c0:	db400f15 	stw	r13,60(sp)
100179c4:	dac01415 	stw	r11,80(sp)
100179c8:	3821883a 	mov	r16,r7
100179cc:	dc400517 	ldw	r17,20(sp)
100179d0:	6025883a 	mov	r18,r12
100179d4:	00000406 	br	100179e8 <___vfprintf_internal_r+0x1218>
100179d8:	843ffc04 	addi	r16,r16,-16
100179dc:	81000448 	cmpgei	r4,r16,17
100179e0:	42000204 	addi	r8,r8,8
100179e4:	20001426 	beq	r4,zero,10017a38 <___vfprintf_internal_r+0x1268>
100179e8:	10800044 	addi	r2,r2,1
100179ec:	18c00404 	addi	r3,r3,16
100179f0:	44800015 	stw	r18,0(r8)
100179f4:	43c00115 	stw	r15,4(r8)
100179f8:	d8c01e15 	stw	r3,120(sp)
100179fc:	d8801d15 	stw	r2,116(sp)
10017a00:	11000208 	cmpgei	r4,r2,8
10017a04:	203ff426 	beq	r4,zero,100179d8 <___vfprintf_internal_r+0x1208>
10017a08:	d9801c04 	addi	r6,sp,112
10017a0c:	980b883a 	mov	r5,r19
10017a10:	8809883a 	mov	r4,r17
10017a14:	001cf100 	call	1001cf10 <__sprint_r>
10017a18:	103c4c1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017a1c:	843ffc04 	addi	r16,r16,-16
10017a20:	81000448 	cmpgei	r4,r16,17
10017a24:	d8c01e17 	ldw	r3,120(sp)
10017a28:	d8801d17 	ldw	r2,116(sp)
10017a2c:	b811883a 	mov	r8,r23
10017a30:	03c00404 	movi	r15,16
10017a34:	203fec1e 	bne	r4,zero,100179e8 <___vfprintf_internal_r+0x1218>
10017a38:	800f883a 	mov	r7,r16
10017a3c:	9019883a 	mov	r12,r18
10017a40:	db800e17 	ldw	r14,56(sp)
10017a44:	db400f17 	ldw	r13,60(sp)
10017a48:	dc401317 	ldw	r17,76(sp)
10017a4c:	dac01417 	ldw	r11,80(sp)
10017a50:	dc001017 	ldw	r16,64(sp)
10017a54:	dc801217 	ldw	r18,72(sp)
10017a58:	10800044 	addi	r2,r2,1
10017a5c:	19c7883a 	add	r3,r3,r7
10017a60:	d8801d15 	stw	r2,116(sp)
10017a64:	43000015 	stw	r12,0(r8)
10017a68:	41c00115 	stw	r7,4(r8)
10017a6c:	d8c01e15 	stw	r3,120(sp)
10017a70:	10800208 	cmpgei	r2,r2,8
10017a74:	1001d41e 	bne	r2,zero,100181c8 <___vfprintf_internal_r+0x19f8>
10017a78:	42000204 	addi	r8,r8,8
10017a7c:	003cf806 	br	10016e60 <___vfprintf_internal_r+0x690>
10017a80:	d9000517 	ldw	r4,20(sp)
10017a84:	d9801c04 	addi	r6,sp,112
10017a88:	980b883a 	mov	r5,r19
10017a8c:	dac01015 	stw	r11,64(sp)
10017a90:	db400f15 	stw	r13,60(sp)
10017a94:	db800e15 	stw	r14,56(sp)
10017a98:	001cf100 	call	1001cf10 <__sprint_r>
10017a9c:	103c2b1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017aa0:	d8c01e17 	ldw	r3,120(sp)
10017aa4:	b811883a 	mov	r8,r23
10017aa8:	dac01017 	ldw	r11,64(sp)
10017aac:	db400f17 	ldw	r13,60(sp)
10017ab0:	db800e17 	ldw	r14,56(sp)
10017ab4:	003cf806 	br	10016e98 <___vfprintf_internal_r+0x6c8>
10017ab8:	d9000517 	ldw	r4,20(sp)
10017abc:	d9801c04 	addi	r6,sp,112
10017ac0:	980b883a 	mov	r5,r19
10017ac4:	dac00f15 	stw	r11,60(sp)
10017ac8:	db400e15 	stw	r13,56(sp)
10017acc:	001cf100 	call	1001cf10 <__sprint_r>
10017ad0:	103c1e1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017ad4:	d8c01e17 	ldw	r3,120(sp)
10017ad8:	b811883a 	mov	r8,r23
10017adc:	dac00f17 	ldw	r11,60(sp)
10017ae0:	db400e17 	ldw	r13,56(sp)
10017ae4:	003cf906 	br	10016ecc <___vfprintf_internal_r+0x6fc>
10017ae8:	d9000c17 	ldw	r4,48(sp)
10017aec:	b821883a 	mov	r16,r23
10017af0:	a88003cc 	andi	r2,r21,15
10017af4:	a006973a 	slli	r3,r20,28
10017af8:	2085883a 	add	r2,r4,r2
10017afc:	a82ad13a 	srli	r21,r21,4
10017b00:	10800003 	ldbu	r2,0(r2)
10017b04:	a028d13a 	srli	r20,r20,4
10017b08:	843fffc4 	addi	r16,r16,-1
10017b0c:	1d6ab03a 	or	r21,r3,r21
10017b10:	80800005 	stb	r2,0(r16)
10017b14:	ad04b03a 	or	r2,r21,r20
10017b18:	103ff51e 	bne	r2,zero,10017af0 <___vfprintf_internal_r+0x1320>
10017b1c:	bc29c83a 	sub	r20,r23,r16
10017b20:	6025883a 	mov	r18,r12
10017b24:	003e3d06 	br	1001741c <___vfprintf_internal_r+0xc4c>
10017b28:	d9001617 	ldw	r4,88(sp)
10017b2c:	0101980e 	bge	zero,r4,10018190 <___vfprintf_internal_r+0x19c0>
10017b30:	d8800717 	ldw	r2,28(sp)
10017b34:	d9000817 	ldw	r4,32(sp)
10017b38:	1039883a 	mov	fp,r2
10017b3c:	20812516 	blt	r4,r2,10017fd4 <___vfprintf_internal_r+0x1804>
10017b40:	07000a0e 	bge	zero,fp,10017b6c <___vfprintf_internal_r+0x139c>
10017b44:	d8801d17 	ldw	r2,116(sp)
10017b48:	1f07883a 	add	r3,r3,fp
10017b4c:	44000015 	stw	r16,0(r8)
10017b50:	10800044 	addi	r2,r2,1
10017b54:	d8801d15 	stw	r2,116(sp)
10017b58:	47000115 	stw	fp,4(r8)
10017b5c:	d8c01e15 	stw	r3,120(sp)
10017b60:	10800208 	cmpgei	r2,r2,8
10017b64:	1002d91e 	bne	r2,zero,100186cc <___vfprintf_internal_r+0x1efc>
10017b68:	42000204 	addi	r8,r8,8
10017b6c:	e0013e16 	blt	fp,zero,10018068 <___vfprintf_internal_r+0x1898>
10017b70:	d8800717 	ldw	r2,28(sp)
10017b74:	1739c83a 	sub	fp,r2,fp
10017b78:	07014516 	blt	zero,fp,10018090 <___vfprintf_internal_r+0x18c0>
10017b7c:	d9001617 	ldw	r4,88(sp)
10017b80:	d8800817 	ldw	r2,32(sp)
10017b84:	2081160e 	bge	r4,r2,10017fe0 <___vfprintf_internal_r+0x1810>
10017b88:	d8800d17 	ldw	r2,52(sp)
10017b8c:	d9400b17 	ldw	r5,44(sp)
10017b90:	40800015 	stw	r2,0(r8)
10017b94:	d8801d17 	ldw	r2,116(sp)
10017b98:	1947883a 	add	r3,r3,r5
10017b9c:	41400115 	stw	r5,4(r8)
10017ba0:	10800044 	addi	r2,r2,1
10017ba4:	d8801d15 	stw	r2,116(sp)
10017ba8:	d8c01e15 	stw	r3,120(sp)
10017bac:	10800208 	cmpgei	r2,r2,8
10017bb0:	1002601e 	bne	r2,zero,10018534 <___vfprintf_internal_r+0x1d64>
10017bb4:	42000204 	addi	r8,r8,8
10017bb8:	d8800817 	ldw	r2,32(sp)
10017bbc:	d9400717 	ldw	r5,28(sp)
10017bc0:	1105c83a 	sub	r2,r2,r4
10017bc4:	29015c0e 	bge	r5,r4,10018138 <___vfprintf_internal_r+0x1968>
10017bc8:	1039883a 	mov	fp,r2
10017bcc:	07000c0e 	bge	zero,fp,10017c00 <___vfprintf_internal_r+0x1430>
10017bd0:	d9000717 	ldw	r4,28(sp)
10017bd4:	1f07883a 	add	r3,r3,fp
10017bd8:	47000115 	stw	fp,4(r8)
10017bdc:	8121883a 	add	r16,r16,r4
10017be0:	d9001d17 	ldw	r4,116(sp)
10017be4:	44000015 	stw	r16,0(r8)
10017be8:	d8c01e15 	stw	r3,120(sp)
10017bec:	21000044 	addi	r4,r4,1
10017bf0:	d9001d15 	stw	r4,116(sp)
10017bf4:	21000208 	cmpgei	r4,r4,8
10017bf8:	2002bf1e 	bne	r4,zero,100186f8 <___vfprintf_internal_r+0x1f28>
10017bfc:	42000204 	addi	r8,r8,8
10017c00:	e000010e 	bge	fp,zero,10017c08 <___vfprintf_internal_r+0x1438>
10017c04:	0039883a 	mov	fp,zero
10017c08:	1739c83a 	sub	fp,r2,fp
10017c0c:	073cbf0e 	bge	zero,fp,10016f0c <___vfprintf_internal_r+0x73c>
10017c10:	030400b4 	movhi	r12,4098
10017c14:	e1000450 	cmplti	r4,fp,17
10017c18:	6316d884 	addi	r12,r12,23394
10017c1c:	d8801d17 	ldw	r2,116(sp)
10017c20:	20023b1e 	bne	r4,zero,10018510 <___vfprintf_internal_r+0x1d40>
10017c24:	dc400715 	stw	r17,28(sp)
10017c28:	05000404 	movi	r20,16
10017c2c:	dc000517 	ldw	r16,20(sp)
10017c30:	6023883a 	mov	r17,r12
10017c34:	00000406 	br	10017c48 <___vfprintf_internal_r+0x1478>
10017c38:	42000204 	addi	r8,r8,8
10017c3c:	e73ffc04 	addi	fp,fp,-16
10017c40:	e1000448 	cmpgei	r4,fp,17
10017c44:	20023026 	beq	r4,zero,10018508 <___vfprintf_internal_r+0x1d38>
10017c48:	10800044 	addi	r2,r2,1
10017c4c:	18c00404 	addi	r3,r3,16
10017c50:	44400015 	stw	r17,0(r8)
10017c54:	45000115 	stw	r20,4(r8)
10017c58:	d8c01e15 	stw	r3,120(sp)
10017c5c:	d8801d15 	stw	r2,116(sp)
10017c60:	11000208 	cmpgei	r4,r2,8
10017c64:	203ff426 	beq	r4,zero,10017c38 <___vfprintf_internal_r+0x1468>
10017c68:	d9801c04 	addi	r6,sp,112
10017c6c:	980b883a 	mov	r5,r19
10017c70:	8009883a 	mov	r4,r16
10017c74:	001cf100 	call	1001cf10 <__sprint_r>
10017c78:	103bb41e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017c7c:	d8c01e17 	ldw	r3,120(sp)
10017c80:	d8801d17 	ldw	r2,116(sp)
10017c84:	b811883a 	mov	r8,r23
10017c88:	003fec06 	br	10017c3c <___vfprintf_internal_r+0x146c>
10017c8c:	9080004c 	andi	r2,r18,1
10017c90:	103f031e 	bne	r2,zero,100178a0 <___vfprintf_internal_r+0x10d0>
10017c94:	00800044 	movi	r2,1
10017c98:	dd001d15 	stw	r20,116(sp)
10017c9c:	44000015 	stw	r16,0(r8)
10017ca0:	40800115 	stw	r2,4(r8)
10017ca4:	d8c01e15 	stw	r3,120(sp)
10017ca8:	a5000208 	cmpgei	r20,r20,8
10017cac:	a000d41e 	bne	r20,zero,10018000 <___vfprintf_internal_r+0x1830>
10017cb0:	e7000084 	addi	fp,fp,2
10017cb4:	42000404 	addi	r8,r8,16
10017cb8:	003f2b06 	br	10017968 <___vfprintf_internal_r+0x1198>
10017cbc:	02ff2a0e 	bge	zero,r11,10017968 <___vfprintf_internal_r+0x1198>
10017cc0:	58800450 	cmplti	r2,r11,17
10017cc4:	030400b4 	movhi	r12,4098
10017cc8:	1002f81e 	bne	r2,zero,100188ac <___vfprintf_internal_r+0x20dc>
10017ccc:	6316d884 	addi	r12,r12,23394
10017cd0:	dc800715 	stw	r18,28(sp)
10017cd4:	dc400e15 	stw	r17,56(sp)
10017cd8:	04000404 	movi	r16,16
10017cdc:	5823883a 	mov	r17,r11
10017ce0:	df000517 	ldw	fp,20(sp)
10017ce4:	6025883a 	mov	r18,r12
10017ce8:	6829883a 	mov	r20,r13
10017cec:	00000506 	br	10017d04 <___vfprintf_internal_r+0x1534>
10017cf0:	52800204 	addi	r10,r10,8
10017cf4:	8c7ffc04 	addi	r17,r17,-16
10017cf8:	88800448 	cmpgei	r2,r17,17
10017cfc:	10018a26 	beq	r2,zero,10018328 <___vfprintf_internal_r+0x1b58>
10017d00:	a5000044 	addi	r20,r20,1
10017d04:	18c00404 	addi	r3,r3,16
10017d08:	54800015 	stw	r18,0(r10)
10017d0c:	54000115 	stw	r16,4(r10)
10017d10:	d8c01e15 	stw	r3,120(sp)
10017d14:	dd001d15 	stw	r20,116(sp)
10017d18:	a0800208 	cmpgei	r2,r20,8
10017d1c:	103ff426 	beq	r2,zero,10017cf0 <___vfprintf_internal_r+0x1520>
10017d20:	d9801c04 	addi	r6,sp,112
10017d24:	980b883a 	mov	r5,r19
10017d28:	e009883a 	mov	r4,fp
10017d2c:	001cf100 	call	1001cf10 <__sprint_r>
10017d30:	103b861e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017d34:	dd001d17 	ldw	r20,116(sp)
10017d38:	d8c01e17 	ldw	r3,120(sp)
10017d3c:	b815883a 	mov	r10,r23
10017d40:	003fec06 	br	10017cf4 <___vfprintf_internal_r+0x1524>
10017d44:	d9000517 	ldw	r4,20(sp)
10017d48:	d9801c04 	addi	r6,sp,112
10017d4c:	980b883a 	mov	r5,r19
10017d50:	001cf100 	call	1001cf10 <__sprint_r>
10017d54:	103b7d1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10017d58:	d8c01e17 	ldw	r3,120(sp)
10017d5c:	b811883a 	mov	r8,r23
10017d60:	003c5e06 	br	10016edc <___vfprintf_internal_r+0x70c>
10017d64:	0029883a 	mov	r20,zero
10017d68:	003bdf06 	br	10016ce8 <___vfprintf_internal_r+0x518>
10017d6c:	b025883a 	mov	r18,r22
10017d70:	003aea06 	br	1001691c <___vfprintf_internal_r+0x14c>
10017d74:	b821883a 	mov	r16,r23
10017d78:	003da806 	br	1001741c <___vfprintf_internal_r+0xc4c>
10017d7c:	d9000917 	ldw	r4,36(sp)
10017d80:	d9400a17 	ldw	r5,40(sp)
10017d84:	da000f15 	stw	r8,60(sp)
10017d88:	200d883a 	mov	r6,r4
10017d8c:	280f883a 	mov	r7,r5
10017d90:	dac00e15 	stw	r11,56(sp)
10017d94:	db000715 	stw	r12,28(sp)
10017d98:	00219bc0 	call	100219bc <__unorddf2>
10017d9c:	db000717 	ldw	r12,28(sp)
10017da0:	dac00e17 	ldw	r11,56(sp)
10017da4:	da000f17 	ldw	r8,60(sp)
10017da8:	1002af1e 	bne	r2,zero,10018868 <___vfprintf_internal_r+0x2098>
10017dac:	00fff7c4 	movi	r3,-33
10017db0:	e0c6703a 	and	r3,fp,r3
10017db4:	58bfffe0 	cmpeqi	r2,r11,-1
10017db8:	d8c00715 	stw	r3,28(sp)
10017dbc:	10024c1e 	bne	r2,zero,100186f0 <___vfprintf_internal_r+0x1f20>
10017dc0:	188011d8 	cmpnei	r2,r3,71
10017dc4:	1001fe26 	beq	r2,zero,100185c0 <___vfprintf_internal_r+0x1df0>
10017dc8:	d8800a17 	ldw	r2,40(sp)
10017dcc:	64804014 	ori	r18,r12,256
10017dd0:	1001e116 	blt	r2,zero,10018558 <___vfprintf_internal_r+0x1d88>
10017dd4:	dd400a17 	ldw	r21,40(sp)
10017dd8:	d8000e05 	stb	zero,56(sp)
10017ddc:	e08019a0 	cmpeqi	r2,fp,102
10017de0:	d8800f15 	stw	r2,60(sp)
10017de4:	1001741e 	bne	r2,zero,100183b8 <___vfprintf_internal_r+0x1be8>
10017de8:	e08011a0 	cmpeqi	r2,fp,70
10017dec:	1001721e 	bne	r2,zero,100183b8 <___vfprintf_internal_r+0x1be8>
10017df0:	d8800717 	ldw	r2,28(sp)
10017df4:	da001215 	stw	r8,72(sp)
10017df8:	db001015 	stw	r12,64(sp)
10017dfc:	10801158 	cmpnei	r2,r2,69
10017e00:	10020526 	beq	r2,zero,10018618 <___vfprintf_internal_r+0x1e48>
10017e04:	d8801a04 	addi	r2,sp,104
10017e08:	d8800315 	stw	r2,12(sp)
10017e0c:	d9400917 	ldw	r5,36(sp)
10017e10:	d8801704 	addi	r2,sp,92
10017e14:	d9000517 	ldw	r4,20(sp)
10017e18:	d8800215 	stw	r2,8(sp)
10017e1c:	d8801604 	addi	r2,sp,88
10017e20:	dac00015 	stw	r11,0(sp)
10017e24:	d8800115 	stw	r2,4(sp)
10017e28:	01c00084 	movi	r7,2
10017e2c:	a80d883a 	mov	r6,r21
10017e30:	dac00815 	stw	r11,32(sp)
10017e34:	0018e340 	call	10018e34 <_dtoa_r>
10017e38:	dac00817 	ldw	r11,32(sp)
10017e3c:	1021883a 	mov	r16,r2
10017e40:	e08019d8 	cmpnei	r2,fp,103
10017e44:	db001017 	ldw	r12,64(sp)
10017e48:	da001217 	ldw	r8,72(sp)
10017e4c:	5829883a 	mov	r20,r11
10017e50:	1002031e 	bne	r2,zero,10018660 <___vfprintf_internal_r+0x1e90>
10017e54:	6080004c 	andi	r2,r12,1
10017e58:	1002031e 	bne	r2,zero,10018668 <___vfprintf_internal_r+0x1e98>
10017e5c:	d8c01617 	ldw	r3,88(sp)
10017e60:	d8800717 	ldw	r2,28(sp)
10017e64:	d8c00715 	stw	r3,28(sp)
10017e68:	d8c01a17 	ldw	r3,104(sp)
10017e6c:	108011e0 	cmpeqi	r2,r2,71
10017e70:	1c07c83a 	sub	r3,r3,r16
10017e74:	d8c00815 	stw	r3,32(sp)
10017e78:	10000526 	beq	r2,zero,10017e90 <___vfprintf_internal_r+0x16c0>
10017e7c:	d8c00717 	ldw	r3,28(sp)
10017e80:	18bfff50 	cmplti	r2,r3,-3
10017e84:	1000011e 	bne	r2,zero,10017e8c <___vfprintf_internal_r+0x16bc>
10017e88:	58c2050e 	bge	r11,r3,100186a0 <___vfprintf_internal_r+0x1ed0>
10017e8c:	e73fff84 	addi	fp,fp,-2
10017e90:	d8800717 	ldw	r2,28(sp)
10017e94:	df001845 	stb	fp,97(sp)
10017e98:	153fffc4 	addi	r20,r2,-1
10017e9c:	dd001615 	stw	r20,88(sp)
10017ea0:	a0027916 	blt	r20,zero,10018888 <___vfprintf_internal_r+0x20b8>
10017ea4:	00800ac4 	movi	r2,43
10017ea8:	d8801885 	stb	r2,98(sp)
10017eac:	a0800290 	cmplti	r2,r20,10
10017eb0:	1002581e 	bne	r2,zero,10018814 <___vfprintf_internal_r+0x2044>
10017eb4:	dc000715 	stw	r16,28(sp)
10017eb8:	dd401bc4 	addi	r21,sp,111
10017ebc:	a021883a 	mov	r16,r20
10017ec0:	db000f15 	stw	r12,60(sp)
10017ec4:	9829883a 	mov	r20,r19
10017ec8:	4027883a 	mov	r19,r8
10017ecc:	00000206 	br	10017ed8 <___vfprintf_internal_r+0x1708>
10017ed0:	202b883a 	mov	r21,r4
10017ed4:	1021883a 	mov	r16,r2
10017ed8:	8009883a 	mov	r4,r16
10017edc:	01400284 	movi	r5,10
10017ee0:	00140340 	call	10014034 <__modsi3>
10017ee4:	10800c04 	addi	r2,r2,48
10017ee8:	8009883a 	mov	r4,r16
10017eec:	a8bfffc5 	stb	r2,-1(r21)
10017ef0:	01400284 	movi	r5,10
10017ef4:	0013fb40 	call	10013fb4 <__divsi3>
10017ef8:	80c01908 	cmpgei	r3,r16,100
10017efc:	a93fffc4 	addi	r4,r21,-1
10017f00:	183ff31e 	bne	r3,zero,10017ed0 <___vfprintf_internal_r+0x1700>
10017f04:	10800c04 	addi	r2,r2,48
10017f08:	20bfffc5 	stb	r2,-1(r4)
10017f0c:	a8ffff84 	addi	r3,r21,-2
10017f10:	d9001bc4 	addi	r4,sp,111
10017f14:	9811883a 	mov	r8,r19
10017f18:	dc000717 	ldw	r16,28(sp)
10017f1c:	db000f17 	ldw	r12,60(sp)
10017f20:	a027883a 	mov	r19,r20
10017f24:	1902732e 	bgeu	r3,r4,100188f4 <___vfprintf_internal_r+0x2124>
10017f28:	d90018c4 	addi	r4,sp,99
10017f2c:	00000106 	br	10017f34 <___vfprintf_internal_r+0x1764>
10017f30:	18800003 	ldbu	r2,0(r3)
10017f34:	21000044 	addi	r4,r4,1
10017f38:	20bfffc5 	stb	r2,-1(r4)
10017f3c:	18c00044 	addi	r3,r3,1
10017f40:	d8801bc4 	addi	r2,sp,111
10017f44:	18bffa1e 	bne	r3,r2,10017f30 <___vfprintf_internal_r+0x1760>
10017f48:	d8801c44 	addi	r2,sp,113
10017f4c:	d8c018c4 	addi	r3,sp,99
10017f50:	1545c83a 	sub	r2,r2,r21
10017f54:	1885883a 	add	r2,r3,r2
10017f58:	d8c01844 	addi	r3,sp,97
10017f5c:	10c5c83a 	sub	r2,r2,r3
10017f60:	d8801115 	stw	r2,68(sp)
10017f64:	d8c00817 	ldw	r3,32(sp)
10017f68:	d9001117 	ldw	r4,68(sp)
10017f6c:	18800088 	cmpgei	r2,r3,2
10017f70:	1929883a 	add	r20,r3,r4
10017f74:	10024926 	beq	r2,zero,1001889c <___vfprintf_internal_r+0x20cc>
10017f78:	d8800b17 	ldw	r2,44(sp)
10017f7c:	a0a9883a 	add	r20,r20,r2
10017f80:	a02b883a 	mov	r21,r20
10017f84:	a000010e 	bge	r20,zero,10017f8c <___vfprintf_internal_r+0x17bc>
10017f88:	002b883a 	mov	r21,zero
10017f8c:	d8000715 	stw	zero,28(sp)
10017f90:	00013f06 	br	10018490 <___vfprintf_internal_r+0x1cc0>
10017f94:	00800c04 	movi	r2,48
10017f98:	d8801585 	stb	r2,86(sp)
10017f9c:	df0015c5 	stb	fp,87(sp)
10017fa0:	63000094 	ori	r12,r12,2
10017fa4:	00800084 	movi	r2,2
10017fa8:	003ce406 	br	1001733c <___vfprintf_internal_r+0xb6c>
10017fac:	d9400417 	ldw	r5,16(sp)
10017fb0:	20800017 	ldw	r2,0(r4)
10017fb4:	d8c00615 	stw	r3,24(sp)
10017fb8:	2809d7fa 	srai	r4,r5,31
10017fbc:	11400015 	stw	r5,0(r2)
10017fc0:	11000115 	stw	r4,4(r2)
10017fc4:	003a3706 	br	100168a4 <___vfprintf_internal_r+0xd4>
10017fc8:	0463c83a 	sub	r17,zero,r17
10017fcc:	d8800615 	stw	r2,24(sp)
10017fd0:	003b1806 	br	10016c34 <___vfprintf_internal_r+0x464>
10017fd4:	2039883a 	mov	fp,r4
10017fd8:	073eda16 	blt	zero,fp,10017b44 <___vfprintf_internal_r+0x1374>
10017fdc:	003ee306 	br	10017b6c <___vfprintf_internal_r+0x139c>
10017fe0:	9080004c 	andi	r2,r18,1
10017fe4:	103ee81e 	bne	r2,zero,10017b88 <___vfprintf_internal_r+0x13b8>
10017fe8:	d8800817 	ldw	r2,32(sp)
10017fec:	d9400717 	ldw	r5,28(sp)
10017ff0:	1105c83a 	sub	r2,r2,r4
10017ff4:	2900500e 	bge	r5,r4,10018138 <___vfprintf_internal_r+0x1968>
10017ff8:	1039883a 	mov	fp,r2
10017ffc:	003f0006 	br	10017c00 <___vfprintf_internal_r+0x1430>
10018000:	d9000517 	ldw	r4,20(sp)
10018004:	d9801c04 	addi	r6,sp,112
10018008:	980b883a 	mov	r5,r19
1001800c:	001cf100 	call	1001cf10 <__sprint_r>
10018010:	103ace1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018014:	df001d17 	ldw	fp,116(sp)
10018018:	d8c01e17 	ldw	r3,120(sp)
1001801c:	da002b04 	addi	r8,sp,172
10018020:	e7000044 	addi	fp,fp,1
10018024:	b815883a 	mov	r10,r23
10018028:	003e4f06 	br	10017968 <___vfprintf_internal_r+0x1198>
1001802c:	b7000043 	ldbu	fp,1(r22)
10018030:	63000814 	ori	r12,r12,32
10018034:	b5800044 	addi	r22,r22,1
10018038:	e2803fcc 	andi	r10,fp,255
1001803c:	5280201c 	xori	r10,r10,128
10018040:	52bfe004 	addi	r10,r10,-128
10018044:	003a3d06 	br	1001693c <___vfprintf_internal_r+0x16c>
10018048:	d9000517 	ldw	r4,20(sp)
1001804c:	d9801c04 	addi	r6,sp,112
10018050:	980b883a 	mov	r5,r19
10018054:	001cf100 	call	1001cf10 <__sprint_r>
10018058:	103abc1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
1001805c:	d8c01e17 	ldw	r3,120(sp)
10018060:	b811883a 	mov	r8,r23
10018064:	003d4806 	br	10017588 <___vfprintf_internal_r+0xdb8>
10018068:	0039883a 	mov	fp,zero
1001806c:	003ec006 	br	10017b70 <___vfprintf_internal_r+0x13a0>
10018070:	588001f0 	cmpltui	r2,r11,7
10018074:	5829883a 	mov	r20,r11
10018078:	10013b26 	beq	r2,zero,10018568 <___vfprintf_internal_r+0x1d98>
1001807c:	040400b4 	movhi	r16,4098
10018080:	a02b883a 	mov	r21,r20
10018084:	dc800615 	stw	r18,24(sp)
10018088:	8416d604 	addi	r16,r16,23384
1001808c:	003b6906 	br	10016e34 <___vfprintf_internal_r+0x664>
10018090:	030400b4 	movhi	r12,4098
10018094:	e1000450 	cmplti	r4,fp,17
10018098:	6316d884 	addi	r12,r12,23394
1001809c:	d8801d17 	ldw	r2,116(sp)
100180a0:	20010b1e 	bne	r4,zero,100184d0 <___vfprintf_internal_r+0x1d00>
100180a4:	b009883a 	mov	r4,r22
100180a8:	dc000e15 	stw	r16,56(sp)
100180ac:	dc800f15 	stw	r18,60(sp)
100180b0:	882d883a 	mov	r22,r17
100180b4:	05000404 	movi	r20,16
100180b8:	e023883a 	mov	r17,fp
100180bc:	dc000517 	ldw	r16,20(sp)
100180c0:	6025883a 	mov	r18,r12
100180c4:	2039883a 	mov	fp,r4
100180c8:	00000406 	br	100180dc <___vfprintf_internal_r+0x190c>
100180cc:	42000204 	addi	r8,r8,8
100180d0:	8c7ffc04 	addi	r17,r17,-16
100180d4:	89000448 	cmpgei	r4,r17,17
100180d8:	2000f626 	beq	r4,zero,100184b4 <___vfprintf_internal_r+0x1ce4>
100180dc:	10800044 	addi	r2,r2,1
100180e0:	18c00404 	addi	r3,r3,16
100180e4:	44800015 	stw	r18,0(r8)
100180e8:	45000115 	stw	r20,4(r8)
100180ec:	d8c01e15 	stw	r3,120(sp)
100180f0:	d8801d15 	stw	r2,116(sp)
100180f4:	11000208 	cmpgei	r4,r2,8
100180f8:	203ff426 	beq	r4,zero,100180cc <___vfprintf_internal_r+0x18fc>
100180fc:	d9801c04 	addi	r6,sp,112
10018100:	980b883a 	mov	r5,r19
10018104:	8009883a 	mov	r4,r16
10018108:	001cf100 	call	1001cf10 <__sprint_r>
1001810c:	103a8f1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018110:	d8c01e17 	ldw	r3,120(sp)
10018114:	d8801d17 	ldw	r2,116(sp)
10018118:	b811883a 	mov	r8,r23
1001811c:	003fec06 	br	100180d0 <___vfprintf_internal_r+0x1900>
10018120:	d8800617 	ldw	r2,24(sp)
10018124:	10800017 	ldw	r2,0(r2)
10018128:	d8c00615 	stw	r3,24(sp)
1001812c:	d8c00417 	ldw	r3,16(sp)
10018130:	10c00015 	stw	r3,0(r2)
10018134:	0039db06 	br	100168a4 <___vfprintf_internal_r+0xd4>
10018138:	d9000817 	ldw	r4,32(sp)
1001813c:	d9400717 	ldw	r5,28(sp)
10018140:	2179c83a 	sub	fp,r4,r5
10018144:	003ea106 	br	10017bcc <___vfprintf_internal_r+0x13fc>
10018148:	d9000517 	ldw	r4,20(sp)
1001814c:	d9801c04 	addi	r6,sp,112
10018150:	980b883a 	mov	r5,r19
10018154:	001cf100 	call	1001cf10 <__sprint_r>
10018158:	103a7c1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
1001815c:	d8c01e17 	ldw	r3,120(sp)
10018160:	dd001d17 	ldw	r20,116(sp)
10018164:	b815883a 	mov	r10,r23
10018168:	003ddf06 	br	100178e8 <___vfprintf_internal_r+0x1118>
1001816c:	d9000517 	ldw	r4,20(sp)
10018170:	d9801c04 	addi	r6,sp,112
10018174:	980b883a 	mov	r5,r19
10018178:	001cf100 	call	1001cf10 <__sprint_r>
1001817c:	103a731e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018180:	d8c01e17 	ldw	r3,120(sp)
10018184:	dd001d17 	ldw	r20,116(sp)
10018188:	b815883a 	mov	r10,r23
1001818c:	003dcb06 	br	100178bc <___vfprintf_internal_r+0x10ec>
10018190:	d8801d17 	ldw	r2,116(sp)
10018194:	014400b4 	movhi	r5,4098
10018198:	2956d804 	addi	r5,r5,23392
1001819c:	10800044 	addi	r2,r2,1
100181a0:	18c00044 	addi	r3,r3,1
100181a4:	41400015 	stw	r5,0(r8)
100181a8:	01400044 	movi	r5,1
100181ac:	d8801d15 	stw	r2,116(sp)
100181b0:	41400115 	stw	r5,4(r8)
100181b4:	d8c01e15 	stw	r3,120(sp)
100181b8:	10800208 	cmpgei	r2,r2,8
100181bc:	103d871e 	bne	r2,zero,100177dc <___vfprintf_internal_r+0x100c>
100181c0:	42000204 	addi	r8,r8,8
100181c4:	003d8d06 	br	100177fc <___vfprintf_internal_r+0x102c>
100181c8:	d9000517 	ldw	r4,20(sp)
100181cc:	d9801c04 	addi	r6,sp,112
100181d0:	980b883a 	mov	r5,r19
100181d4:	dac01015 	stw	r11,64(sp)
100181d8:	db400f15 	stw	r13,60(sp)
100181dc:	db800e15 	stw	r14,56(sp)
100181e0:	001cf100 	call	1001cf10 <__sprint_r>
100181e4:	103a591e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100181e8:	d8c01e17 	ldw	r3,120(sp)
100181ec:	b811883a 	mov	r8,r23
100181f0:	dac01017 	ldw	r11,64(sp)
100181f4:	db400f17 	ldw	r13,60(sp)
100181f8:	db800e17 	ldw	r14,56(sp)
100181fc:	003b1806 	br	10016e60 <___vfprintf_internal_r+0x690>
10018200:	d9000517 	ldw	r4,20(sp)
10018204:	d9801c04 	addi	r6,sp,112
10018208:	980b883a 	mov	r5,r19
1001820c:	001cf100 	call	1001cf10 <__sprint_r>
10018210:	103a4e1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018214:	b811883a 	mov	r8,r23
10018218:	003cc706 	br	10017538 <___vfprintf_internal_r+0xd68>
1001821c:	d9000517 	ldw	r4,20(sp)
10018220:	d9801c04 	addi	r6,sp,112
10018224:	980b883a 	mov	r5,r19
10018228:	dac00e15 	stw	r11,56(sp)
1001822c:	001cf100 	call	1001cf10 <__sprint_r>
10018230:	103a461e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018234:	d8c01e17 	ldw	r3,120(sp)
10018238:	b811883a 	mov	r8,r23
1001823c:	dac00e17 	ldw	r11,56(sp)
10018240:	003b2406 	br	10016ed4 <___vfprintf_internal_r+0x704>
10018244:	10c00060 	cmpeqi	r3,r2,1
10018248:	9019883a 	mov	r12,r18
1001824c:	183bed26 	beq	r3,zero,10017204 <___vfprintf_internal_r+0xa34>
10018250:	003c6d06 	br	10017408 <___vfprintf_internal_r+0xc38>
10018254:	d8800d17 	ldw	r2,52(sp)
10018258:	d9400b17 	ldw	r5,44(sp)
1001825c:	40800015 	stw	r2,0(r8)
10018260:	d8801d17 	ldw	r2,116(sp)
10018264:	28c7883a 	add	r3,r5,r3
10018268:	41400115 	stw	r5,4(r8)
1001826c:	10800044 	addi	r2,r2,1
10018270:	d8c01e15 	stw	r3,120(sp)
10018274:	d8801d15 	stw	r2,116(sp)
10018278:	11400208 	cmpgei	r5,r2,8
1001827c:	2800d31e 	bne	r5,zero,100185cc <___vfprintf_internal_r+0x1dfc>
10018280:	42000204 	addi	r8,r8,8
10018284:	203d6e0e 	bge	r4,zero,10017840 <___vfprintf_internal_r+0x1070>
10018288:	030400b4 	movhi	r12,4098
1001828c:	217ffc08 	cmpgei	r5,r4,-16
10018290:	6316d884 	addi	r12,r12,23394
10018294:	0129c83a 	sub	r20,zero,r4
10018298:	28014a1e 	bne	r5,zero,100187c4 <___vfprintf_internal_r+0x1ff4>
1001829c:	dc000715 	stw	r16,28(sp)
100182a0:	07000404 	movi	fp,16
100182a4:	a021883a 	mov	r16,r20
100182a8:	8829883a 	mov	r20,r17
100182ac:	6023883a 	mov	r17,r12
100182b0:	00000406 	br	100182c4 <___vfprintf_internal_r+0x1af4>
100182b4:	42000204 	addi	r8,r8,8
100182b8:	843ffc04 	addi	r16,r16,-16
100182bc:	81000448 	cmpgei	r4,r16,17
100182c0:	20013c26 	beq	r4,zero,100187b4 <___vfprintf_internal_r+0x1fe4>
100182c4:	10800044 	addi	r2,r2,1
100182c8:	18c00404 	addi	r3,r3,16
100182cc:	44400015 	stw	r17,0(r8)
100182d0:	47000115 	stw	fp,4(r8)
100182d4:	d8c01e15 	stw	r3,120(sp)
100182d8:	d8801d15 	stw	r2,116(sp)
100182dc:	11000208 	cmpgei	r4,r2,8
100182e0:	203ff426 	beq	r4,zero,100182b4 <___vfprintf_internal_r+0x1ae4>
100182e4:	d9000517 	ldw	r4,20(sp)
100182e8:	d9801c04 	addi	r6,sp,112
100182ec:	980b883a 	mov	r5,r19
100182f0:	001cf100 	call	1001cf10 <__sprint_r>
100182f4:	103a151e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100182f8:	d8c01e17 	ldw	r3,120(sp)
100182fc:	d8801d17 	ldw	r2,116(sp)
10018300:	b811883a 	mov	r8,r23
10018304:	003fec06 	br	100182b8 <___vfprintf_internal_r+0x1ae8>
10018308:	8009883a 	mov	r4,r16
1001830c:	00164b40 	call	100164b4 <strlen>
10018310:	1029883a 	mov	r20,r2
10018314:	102b883a 	mov	r21,r2
10018318:	dc800615 	stw	r18,24(sp)
1001831c:	db000717 	ldw	r12,28(sp)
10018320:	da000e17 	ldw	r8,56(sp)
10018324:	003ac306 	br	10016e34 <___vfprintf_internal_r+0x664>
10018328:	8817883a 	mov	r11,r17
1001832c:	9019883a 	mov	r12,r18
10018330:	dc400e17 	ldw	r17,56(sp)
10018334:	dc800717 	ldw	r18,28(sp)
10018338:	a7000044 	addi	fp,r20,1
1001833c:	50800204 	addi	r2,r10,8
10018340:	1ac7883a 	add	r3,r3,r11
10018344:	53000015 	stw	r12,0(r10)
10018348:	52c00115 	stw	r11,4(r10)
1001834c:	d8c01e15 	stw	r3,120(sp)
10018350:	df001d15 	stw	fp,116(sp)
10018354:	e1000208 	cmpgei	r4,fp,8
10018358:	203f291e 	bne	r4,zero,10018000 <___vfprintf_internal_r+0x1830>
1001835c:	e7000044 	addi	fp,fp,1
10018360:	12000204 	addi	r8,r2,8
10018364:	1015883a 	mov	r10,r2
10018368:	003d7f06 	br	10017968 <___vfprintf_internal_r+0x1198>
1001836c:	8819883a 	mov	r12,r17
10018370:	dc400717 	ldw	r17,28(sp)
10018374:	10800044 	addi	r2,r2,1
10018378:	1c07883a 	add	r3,r3,r16
1001837c:	d8801d15 	stw	r2,116(sp)
10018380:	43000015 	stw	r12,0(r8)
10018384:	44000115 	stw	r16,4(r8)
10018388:	d8c01e15 	stw	r3,120(sp)
1001838c:	10800208 	cmpgei	r2,r2,8
10018390:	103add26 	beq	r2,zero,10016f08 <___vfprintf_internal_r+0x738>
10018394:	003d3306 	br	10017864 <___vfprintf_internal_r+0x1094>
10018398:	d8800615 	stw	r2,24(sp)
1001839c:	0029883a 	mov	r20,zero
100183a0:	0005883a 	mov	r2,zero
100183a4:	003be506 	br	1001733c <___vfprintf_internal_r+0xb6c>
100183a8:	d8800615 	stw	r2,24(sp)
100183ac:	0029883a 	mov	r20,zero
100183b0:	00800044 	movi	r2,1
100183b4:	003be106 	br	1001733c <___vfprintf_internal_r+0xb6c>
100183b8:	d8801a04 	addi	r2,sp,104
100183bc:	d8800315 	stw	r2,12(sp)
100183c0:	d9400917 	ldw	r5,36(sp)
100183c4:	d8801704 	addi	r2,sp,92
100183c8:	d9000517 	ldw	r4,20(sp)
100183cc:	d8800215 	stw	r2,8(sp)
100183d0:	d8801604 	addi	r2,sp,88
100183d4:	dac00015 	stw	r11,0(sp)
100183d8:	d8800115 	stw	r2,4(sp)
100183dc:	01c000c4 	movi	r7,3
100183e0:	a80d883a 	mov	r6,r21
100183e4:	da001215 	stw	r8,72(sp)
100183e8:	db001015 	stw	r12,64(sp)
100183ec:	dac00815 	stw	r11,32(sp)
100183f0:	0018e340 	call	10018e34 <_dtoa_r>
100183f4:	dac00817 	ldw	r11,32(sp)
100183f8:	1021883a 	mov	r16,r2
100183fc:	db001017 	ldw	r12,64(sp)
10018400:	12e9883a 	add	r20,r2,r11
10018404:	80800007 	ldb	r2,0(r16)
10018408:	da001217 	ldw	r8,72(sp)
1001840c:	10800c20 	cmpeqi	r2,r2,48
10018410:	10005b1e 	bne	r2,zero,10018580 <___vfprintf_internal_r+0x1db0>
10018414:	d8801617 	ldw	r2,88(sp)
10018418:	a0a9883a 	add	r20,r20,r2
1001841c:	d9000917 	ldw	r4,36(sp)
10018420:	000d883a 	mov	r6,zero
10018424:	000f883a 	mov	r7,zero
10018428:	a80b883a 	mov	r5,r21
1001842c:	da001215 	stw	r8,72(sp)
10018430:	dac01015 	stw	r11,64(sp)
10018434:	db000815 	stw	r12,32(sp)
10018438:	00207640 	call	10020764 <__eqdf2>
1001843c:	db000817 	ldw	r12,32(sp)
10018440:	dac01017 	ldw	r11,64(sp)
10018444:	da001217 	ldw	r8,72(sp)
10018448:	1000891e 	bne	r2,zero,10018670 <___vfprintf_internal_r+0x1ea0>
1001844c:	a005883a 	mov	r2,r20
10018450:	1405c83a 	sub	r2,r2,r16
10018454:	d8c00717 	ldw	r3,28(sp)
10018458:	d8800815 	stw	r2,32(sp)
1001845c:	d8801617 	ldw	r2,88(sp)
10018460:	18c011d8 	cmpnei	r3,r3,71
10018464:	d8800715 	stw	r2,28(sp)
10018468:	183e8426 	beq	r3,zero,10017e7c <___vfprintf_internal_r+0x16ac>
1001846c:	d8800f17 	ldw	r2,60(sp)
10018470:	103e8726 	beq	r2,zero,10017e90 <___vfprintf_internal_r+0x16c0>
10018474:	d8c00717 	ldw	r3,28(sp)
10018478:	6080004c 	andi	r2,r12,1
1001847c:	12c4b03a 	or	r2,r2,r11
10018480:	00c10d0e 	bge	zero,r3,100188b8 <___vfprintf_internal_r+0x20e8>
10018484:	1000f11e 	bne	r2,zero,1001884c <___vfprintf_internal_r+0x207c>
10018488:	dd000717 	ldw	r20,28(sp)
1001848c:	a02b883a 	mov	r21,r20
10018490:	d8800e07 	ldb	r2,56(sp)
10018494:	10007f26 	beq	r2,zero,10018694 <___vfprintf_internal_r+0x1ec4>
10018498:	00800b44 	movi	r2,45
1001849c:	d8801545 	stb	r2,85(sp)
100184a0:	0017883a 	mov	r11,zero
100184a4:	003be506 	br	1001743c <___vfprintf_internal_r+0xc6c>
100184a8:	040400b4 	movhi	r16,4098
100184ac:	8416c804 	addi	r16,r16,23328
100184b0:	003b3406 	br	10017184 <___vfprintf_internal_r+0x9b4>
100184b4:	9019883a 	mov	r12,r18
100184b8:	dc000e17 	ldw	r16,56(sp)
100184bc:	dc800f17 	ldw	r18,60(sp)
100184c0:	e009883a 	mov	r4,fp
100184c4:	8839883a 	mov	fp,r17
100184c8:	b023883a 	mov	r17,r22
100184cc:	202d883a 	mov	r22,r4
100184d0:	10800044 	addi	r2,r2,1
100184d4:	1f07883a 	add	r3,r3,fp
100184d8:	d8801d15 	stw	r2,116(sp)
100184dc:	43000015 	stw	r12,0(r8)
100184e0:	47000115 	stw	fp,4(r8)
100184e4:	d8c01e15 	stw	r3,120(sp)
100184e8:	10800208 	cmpgei	r2,r2,8
100184ec:	1000421e 	bne	r2,zero,100185f8 <___vfprintf_internal_r+0x1e28>
100184f0:	42000204 	addi	r8,r8,8
100184f4:	003da106 	br	10017b7c <___vfprintf_internal_r+0x13ac>
100184f8:	00800b44 	movi	r2,45
100184fc:	d8801545 	stb	r2,85(sp)
10018500:	03400b44 	movi	r13,45
10018504:	003b1b06 	br	10017174 <___vfprintf_internal_r+0x9a4>
10018508:	8819883a 	mov	r12,r17
1001850c:	dc400717 	ldw	r17,28(sp)
10018510:	10800044 	addi	r2,r2,1
10018514:	1f07883a 	add	r3,r3,fp
10018518:	d8801d15 	stw	r2,116(sp)
1001851c:	43000015 	stw	r12,0(r8)
10018520:	47000115 	stw	fp,4(r8)
10018524:	d8c01e15 	stw	r3,120(sp)
10018528:	10800208 	cmpgei	r2,r2,8
1001852c:	103a7626 	beq	r2,zero,10016f08 <___vfprintf_internal_r+0x738>
10018530:	003ccc06 	br	10017864 <___vfprintf_internal_r+0x1094>
10018534:	d9000517 	ldw	r4,20(sp)
10018538:	d9801c04 	addi	r6,sp,112
1001853c:	980b883a 	mov	r5,r19
10018540:	001cf100 	call	1001cf10 <__sprint_r>
10018544:	1039811e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
10018548:	d9001617 	ldw	r4,88(sp)
1001854c:	d8c01e17 	ldw	r3,120(sp)
10018550:	b811883a 	mov	r8,r23
10018554:	003d9806 	br	10017bb8 <___vfprintf_internal_r+0x13e8>
10018558:	1560003c 	xorhi	r21,r2,32768
1001855c:	00800b44 	movi	r2,45
10018560:	d8800e05 	stb	r2,56(sp)
10018564:	003e1d06 	br	10017ddc <___vfprintf_internal_r+0x160c>
10018568:	05000184 	movi	r20,6
1001856c:	003ec306 	br	1001807c <___vfprintf_internal_r+0x18ac>
10018570:	002b883a 	mov	r21,zero
10018574:	003a0706 	br	10016d94 <___vfprintf_internal_r+0x5c4>
10018578:	d9401545 	stb	r5,85(sp)
1001857c:	00399106 	br	10016bc4 <___vfprintf_internal_r+0x3f4>
10018580:	d9000917 	ldw	r4,36(sp)
10018584:	000d883a 	mov	r6,zero
10018588:	000f883a 	mov	r7,zero
1001858c:	a80b883a 	mov	r5,r21
10018590:	da001215 	stw	r8,72(sp)
10018594:	dac01015 	stw	r11,64(sp)
10018598:	db000815 	stw	r12,32(sp)
1001859c:	00207640 	call	10020764 <__eqdf2>
100185a0:	db000817 	ldw	r12,32(sp)
100185a4:	dac01017 	ldw	r11,64(sp)
100185a8:	da001217 	ldw	r8,72(sp)
100185ac:	103f9926 	beq	r2,zero,10018414 <___vfprintf_internal_r+0x1c44>
100185b0:	00800044 	movi	r2,1
100185b4:	12c5c83a 	sub	r2,r2,r11
100185b8:	d8801615 	stw	r2,88(sp)
100185bc:	003f9606 	br	10018418 <___vfprintf_internal_r+0x1c48>
100185c0:	583e011e 	bne	r11,zero,10017dc8 <___vfprintf_internal_r+0x15f8>
100185c4:	02c00044 	movi	r11,1
100185c8:	003dff06 	br	10017dc8 <___vfprintf_internal_r+0x15f8>
100185cc:	d9000517 	ldw	r4,20(sp)
100185d0:	d9801c04 	addi	r6,sp,112
100185d4:	980b883a 	mov	r5,r19
100185d8:	001cf100 	call	1001cf10 <__sprint_r>
100185dc:	10395b1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100185e0:	d9001617 	ldw	r4,88(sp)
100185e4:	d8c01e17 	ldw	r3,120(sp)
100185e8:	d8801d17 	ldw	r2,116(sp)
100185ec:	b811883a 	mov	r8,r23
100185f0:	203c930e 	bge	r4,zero,10017840 <___vfprintf_internal_r+0x1070>
100185f4:	003f2406 	br	10018288 <___vfprintf_internal_r+0x1ab8>
100185f8:	d9000517 	ldw	r4,20(sp)
100185fc:	d9801c04 	addi	r6,sp,112
10018600:	980b883a 	mov	r5,r19
10018604:	001cf100 	call	1001cf10 <__sprint_r>
10018608:	1039501e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
1001860c:	d8c01e17 	ldw	r3,120(sp)
10018610:	b811883a 	mov	r8,r23
10018614:	003d5906 	br	10017b7c <___vfprintf_internal_r+0x13ac>
10018618:	d8801a04 	addi	r2,sp,104
1001861c:	d8800315 	stw	r2,12(sp)
10018620:	d9400917 	ldw	r5,36(sp)
10018624:	d8801704 	addi	r2,sp,92
10018628:	d9000517 	ldw	r4,20(sp)
1001862c:	5d000044 	addi	r20,r11,1
10018630:	d8800215 	stw	r2,8(sp)
10018634:	d8801604 	addi	r2,sp,88
10018638:	d8800115 	stw	r2,4(sp)
1001863c:	dd000015 	stw	r20,0(sp)
10018640:	01c00084 	movi	r7,2
10018644:	a80d883a 	mov	r6,r21
10018648:	dac00815 	stw	r11,32(sp)
1001864c:	0018e340 	call	10018e34 <_dtoa_r>
10018650:	dac00817 	ldw	r11,32(sp)
10018654:	db001017 	ldw	r12,64(sp)
10018658:	da001217 	ldw	r8,72(sp)
1001865c:	1021883a 	mov	r16,r2
10018660:	e08011d8 	cmpnei	r2,fp,71
10018664:	103dfb26 	beq	r2,zero,10017e54 <___vfprintf_internal_r+0x1684>
10018668:	8529883a 	add	r20,r16,r20
1001866c:	003f6b06 	br	1001841c <___vfprintf_internal_r+0x1c4c>
10018670:	d8801a17 	ldw	r2,104(sp)
10018674:	01000c04 	movi	r4,48
10018678:	153f752e 	bgeu	r2,r20,10018450 <___vfprintf_internal_r+0x1c80>
1001867c:	10c00044 	addi	r3,r2,1
10018680:	d8c01a15 	stw	r3,104(sp)
10018684:	11000005 	stb	r4,0(r2)
10018688:	d8801a17 	ldw	r2,104(sp)
1001868c:	153ffb36 	bltu	r2,r20,1001867c <___vfprintf_internal_r+0x1eac>
10018690:	003f6f06 	br	10018450 <___vfprintf_internal_r+0x1c80>
10018694:	db401543 	ldbu	r13,85(sp)
10018698:	0017883a 	mov	r11,zero
1001869c:	003b6306 	br	1001742c <___vfprintf_internal_r+0xc5c>
100186a0:	d8800717 	ldw	r2,28(sp)
100186a4:	d8c00817 	ldw	r3,32(sp)
100186a8:	10c02216 	blt	r2,r3,10018734 <___vfprintf_internal_r+0x1f64>
100186ac:	6300004c 	andi	r12,r12,1
100186b0:	60005f1e 	bne	r12,zero,10018830 <___vfprintf_internal_r+0x2060>
100186b4:	102b883a 	mov	r21,r2
100186b8:	1000010e 	bge	r2,zero,100186c0 <___vfprintf_internal_r+0x1ef0>
100186bc:	002b883a 	mov	r21,zero
100186c0:	dd000717 	ldw	r20,28(sp)
100186c4:	070019c4 	movi	fp,103
100186c8:	003f7106 	br	10018490 <___vfprintf_internal_r+0x1cc0>
100186cc:	d9000517 	ldw	r4,20(sp)
100186d0:	d9801c04 	addi	r6,sp,112
100186d4:	980b883a 	mov	r5,r19
100186d8:	001cf100 	call	1001cf10 <__sprint_r>
100186dc:	10391b1e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100186e0:	d8c01e17 	ldw	r3,120(sp)
100186e4:	b811883a 	mov	r8,r23
100186e8:	e03d210e 	bge	fp,zero,10017b70 <___vfprintf_internal_r+0x13a0>
100186ec:	003e5e06 	br	10018068 <___vfprintf_internal_r+0x1898>
100186f0:	02c00184 	movi	r11,6
100186f4:	003db406 	br	10017dc8 <___vfprintf_internal_r+0x15f8>
100186f8:	d9000517 	ldw	r4,20(sp)
100186fc:	d9801c04 	addi	r6,sp,112
10018700:	980b883a 	mov	r5,r19
10018704:	001cf100 	call	1001cf10 <__sprint_r>
10018708:	1039101e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
1001870c:	d8801617 	ldw	r2,88(sp)
10018710:	d9000817 	ldw	r4,32(sp)
10018714:	d8c01e17 	ldw	r3,120(sp)
10018718:	b811883a 	mov	r8,r23
1001871c:	2085c83a 	sub	r2,r4,r2
10018720:	003d3706 	br	10017c00 <___vfprintf_internal_r+0x1430>
10018724:	582b883a 	mov	r21,r11
10018728:	dc800615 	stw	r18,24(sp)
1001872c:	5829883a 	mov	r20,r11
10018730:	0039c006 	br	10016e34 <___vfprintf_internal_r+0x664>
10018734:	d8800817 	ldw	r2,32(sp)
10018738:	d8c00b17 	ldw	r3,44(sp)
1001873c:	10e9883a 	add	r20,r2,r3
10018740:	d8800717 	ldw	r2,28(sp)
10018744:	00800316 	blt	zero,r2,10018754 <___vfprintf_internal_r+0x1f84>
10018748:	d8800717 	ldw	r2,28(sp)
1001874c:	a0b9c83a 	sub	fp,r20,r2
10018750:	e5000044 	addi	r20,fp,1
10018754:	a02b883a 	mov	r21,r20
10018758:	a0003a16 	blt	r20,zero,10018844 <___vfprintf_internal_r+0x2074>
1001875c:	070019c4 	movi	fp,103
10018760:	003f4b06 	br	10018490 <___vfprintf_internal_r+0x1cc0>
10018764:	d9401545 	stb	r5,85(sp)
10018768:	003ac506 	br	10017280 <___vfprintf_internal_r+0xab0>
1001876c:	d9401545 	stb	r5,85(sp)
10018770:	003a2506 	br	10017008 <___vfprintf_internal_r+0x838>
10018774:	d9401545 	stb	r5,85(sp)
10018778:	003a3306 	br	10017048 <___vfprintf_internal_r+0x878>
1001877c:	d9401545 	stb	r5,85(sp)
10018780:	00398806 	br	10016da4 <___vfprintf_internal_r+0x5d4>
10018784:	d9401545 	stb	r5,85(sp)
10018788:	00395f06 	br	10016d08 <___vfprintf_internal_r+0x538>
1001878c:	d9401545 	stb	r5,85(sp)
10018790:	00394b06 	br	10016cc0 <___vfprintf_internal_r+0x4f0>
10018794:	d9401545 	stb	r5,85(sp)
10018798:	003a3b06 	br	10017088 <___vfprintf_internal_r+0x8b8>
1001879c:	d9401545 	stb	r5,85(sp)
100187a0:	003a8106 	br	100171a8 <___vfprintf_internal_r+0x9d8>
100187a4:	d9401545 	stb	r5,85(sp)
100187a8:	003a4706 	br	100170c8 <___vfprintf_internal_r+0x8f8>
100187ac:	d9401545 	stb	r5,85(sp)
100187b0:	003ac506 	br	100172c8 <___vfprintf_internal_r+0xaf8>
100187b4:	8819883a 	mov	r12,r17
100187b8:	a023883a 	mov	r17,r20
100187bc:	8029883a 	mov	r20,r16
100187c0:	dc000717 	ldw	r16,28(sp)
100187c4:	10800044 	addi	r2,r2,1
100187c8:	1d07883a 	add	r3,r3,r20
100187cc:	43000015 	stw	r12,0(r8)
100187d0:	45000115 	stw	r20,4(r8)
100187d4:	d8c01e15 	stw	r3,120(sp)
100187d8:	d8801d15 	stw	r2,116(sp)
100187dc:	11000208 	cmpgei	r4,r2,8
100187e0:	203c1626 	beq	r4,zero,1001783c <___vfprintf_internal_r+0x106c>
100187e4:	d9000517 	ldw	r4,20(sp)
100187e8:	d9801c04 	addi	r6,sp,112
100187ec:	980b883a 	mov	r5,r19
100187f0:	001cf100 	call	1001cf10 <__sprint_r>
100187f4:	1038d51e 	bne	r2,zero,10016b4c <___vfprintf_internal_r+0x37c>
100187f8:	d8c01e17 	ldw	r3,120(sp)
100187fc:	d8801d17 	ldw	r2,116(sp)
10018800:	b811883a 	mov	r8,r23
10018804:	003c0e06 	br	10017840 <___vfprintf_internal_r+0x1070>
10018808:	00bfffc4 	movi	r2,-1
1001880c:	d8800415 	stw	r2,16(sp)
10018810:	0038d106 	br	10016b58 <___vfprintf_internal_r+0x388>
10018814:	00800c04 	movi	r2,48
10018818:	a0c00c04 	addi	r3,r20,48
1001881c:	d88018c5 	stb	r2,99(sp)
10018820:	00800104 	movi	r2,4
10018824:	d8c01905 	stb	r3,100(sp)
10018828:	d8801115 	stw	r2,68(sp)
1001882c:	003dcd06 	br	10017f64 <___vfprintf_internal_r+0x1794>
10018830:	d8800717 	ldw	r2,28(sp)
10018834:	d8c00b17 	ldw	r3,44(sp)
10018838:	10e9883a 	add	r20,r2,r3
1001883c:	a02b883a 	mov	r21,r20
10018840:	a03fc60e 	bge	r20,zero,1001875c <___vfprintf_internal_r+0x1f8c>
10018844:	002b883a 	mov	r21,zero
10018848:	003fc406 	br	1001875c <___vfprintf_internal_r+0x1f8c>
1001884c:	d8800b17 	ldw	r2,44(sp)
10018850:	1885883a 	add	r2,r3,r2
10018854:	12e9883a 	add	r20,r2,r11
10018858:	a02b883a 	mov	r21,r20
1001885c:	a03f0c0e 	bge	r20,zero,10018490 <___vfprintf_internal_r+0x1cc0>
10018860:	002b883a 	mov	r21,zero
10018864:	003f0a06 	br	10018490 <___vfprintf_internal_r+0x1cc0>
10018868:	d8800a17 	ldw	r2,40(sp)
1001886c:	10001d16 	blt	r2,zero,100188e4 <___vfprintf_internal_r+0x2114>
10018870:	db401543 	ldbu	r13,85(sp)
10018874:	e0801210 	cmplti	r2,fp,72
10018878:	1000171e 	bne	r2,zero,100188d8 <___vfprintf_internal_r+0x2108>
1001887c:	040400b4 	movhi	r16,4098
10018880:	8416cb04 	addi	r16,r16,23340
10018884:	003a3f06 	br	10017184 <___vfprintf_internal_r+0x9b4>
10018888:	00c00044 	movi	r3,1
1001888c:	18a9c83a 	sub	r20,r3,r2
10018890:	00800b44 	movi	r2,45
10018894:	d8801885 	stb	r2,98(sp)
10018898:	003d8406 	br	10017eac <___vfprintf_internal_r+0x16dc>
1001889c:	6080004c 	andi	r2,r12,1
100188a0:	d8800715 	stw	r2,28(sp)
100188a4:	103db41e 	bne	r2,zero,10017f78 <___vfprintf_internal_r+0x17a8>
100188a8:	003feb06 	br	10018858 <___vfprintf_internal_r+0x2088>
100188ac:	4005883a 	mov	r2,r8
100188b0:	6316d884 	addi	r12,r12,23394
100188b4:	003ea206 	br	10018340 <___vfprintf_internal_r+0x1b70>
100188b8:	1000031e 	bne	r2,zero,100188c8 <___vfprintf_internal_r+0x20f8>
100188bc:	05400044 	movi	r21,1
100188c0:	05000044 	movi	r20,1
100188c4:	003ef206 	br	10018490 <___vfprintf_internal_r+0x1cc0>
100188c8:	d8800b17 	ldw	r2,44(sp)
100188cc:	10800044 	addi	r2,r2,1
100188d0:	12e9883a 	add	r20,r2,r11
100188d4:	003fe006 	br	10018858 <___vfprintf_internal_r+0x2088>
100188d8:	040400b4 	movhi	r16,4098
100188dc:	8416ca04 	addi	r16,r16,23336
100188e0:	003a2806 	br	10017184 <___vfprintf_internal_r+0x9b4>
100188e4:	00800b44 	movi	r2,45
100188e8:	d8801545 	stb	r2,85(sp)
100188ec:	03400b44 	movi	r13,45
100188f0:	003fe006 	br	10018874 <___vfprintf_internal_r+0x20a4>
100188f4:	00800084 	movi	r2,2
100188f8:	d8801115 	stw	r2,68(sp)
100188fc:	003d9906 	br	10017f64 <___vfprintf_internal_r+0x1794>
10018900:	d8800617 	ldw	r2,24(sp)
10018904:	12c00017 	ldw	r11,0(r2)
10018908:	10800104 	addi	r2,r2,4
1001890c:	5800010e 	bge	r11,zero,10018914 <___vfprintf_internal_r+0x2144>
10018910:	02ffffc4 	movi	r11,-1
10018914:	b7000043 	ldbu	fp,1(r22)
10018918:	d8800615 	stw	r2,24(sp)
1001891c:	182d883a 	mov	r22,r3
10018920:	e2803fcc 	andi	r10,fp,255
10018924:	5280201c 	xori	r10,r10,128
10018928:	52bfe004 	addi	r10,r10,-128
1001892c:	00380306 	br	1001693c <___vfprintf_internal_r+0x16c>

10018930 <__vfprintf_internal>:
10018930:	008400f4 	movhi	r2,4099
10018934:	300f883a 	mov	r7,r6
10018938:	280d883a 	mov	r6,r5
1001893c:	200b883a 	mov	r5,r4
10018940:	11215917 	ldw	r4,-31388(r2)
10018944:	00167d01 	jmpi	100167d0 <___vfprintf_internal_r>

10018948 <__sbprintf>:
10018948:	2880030b 	ldhu	r2,12(r5)
1001894c:	2b001917 	ldw	r12,100(r5)
10018950:	2ac0038b 	ldhu	r11,14(r5)
10018954:	2a800717 	ldw	r10,28(r5)
10018958:	2a400917 	ldw	r9,36(r5)
1001895c:	defee204 	addi	sp,sp,-1144
10018960:	da001a04 	addi	r8,sp,104
10018964:	00c10004 	movi	r3,1024
10018968:	dc011a15 	stw	r16,1128(sp)
1001896c:	10bfff4c 	andi	r2,r2,65533
10018970:	2821883a 	mov	r16,r5
10018974:	d80b883a 	mov	r5,sp
10018978:	dc811c15 	stw	r18,1136(sp)
1001897c:	dc411b15 	stw	r17,1132(sp)
10018980:	dfc11d15 	stw	ra,1140(sp)
10018984:	2025883a 	mov	r18,r4
10018988:	d880030d 	sth	r2,12(sp)
1001898c:	db001915 	stw	r12,100(sp)
10018990:	dac0038d 	sth	r11,14(sp)
10018994:	da800715 	stw	r10,28(sp)
10018998:	da400915 	stw	r9,36(sp)
1001899c:	da000015 	stw	r8,0(sp)
100189a0:	da000415 	stw	r8,16(sp)
100189a4:	d8c00215 	stw	r3,8(sp)
100189a8:	d8c00515 	stw	r3,20(sp)
100189ac:	d8000615 	stw	zero,24(sp)
100189b0:	00167d00 	call	100167d0 <___vfprintf_internal_r>
100189b4:	1023883a 	mov	r17,r2
100189b8:	10000d0e 	bge	r2,zero,100189f0 <__sbprintf+0xa8>
100189bc:	d880030b 	ldhu	r2,12(sp)
100189c0:	1080100c 	andi	r2,r2,64
100189c4:	10000326 	beq	r2,zero,100189d4 <__sbprintf+0x8c>
100189c8:	8080030b 	ldhu	r2,12(r16)
100189cc:	10801014 	ori	r2,r2,64
100189d0:	8080030d 	sth	r2,12(r16)
100189d4:	8805883a 	mov	r2,r17
100189d8:	dfc11d17 	ldw	ra,1140(sp)
100189dc:	dc811c17 	ldw	r18,1136(sp)
100189e0:	dc411b17 	ldw	r17,1132(sp)
100189e4:	dc011a17 	ldw	r16,1128(sp)
100189e8:	dec11e04 	addi	sp,sp,1144
100189ec:	f800283a 	ret
100189f0:	d80b883a 	mov	r5,sp
100189f4:	9009883a 	mov	r4,r18
100189f8:	001a7240 	call	1001a724 <_fflush_r>
100189fc:	103fef26 	beq	r2,zero,100189bc <__sbprintf+0x74>
10018a00:	047fffc4 	movi	r17,-1
10018a04:	003fed06 	br	100189bc <__sbprintf+0x74>

10018a08 <_write_r>:
10018a08:	defffe04 	addi	sp,sp,-8
10018a0c:	2805883a 	mov	r2,r5
10018a10:	dc000015 	stw	r16,0(sp)
10018a14:	300b883a 	mov	r5,r6
10018a18:	2021883a 	mov	r16,r4
10018a1c:	380d883a 	mov	r6,r7
10018a20:	1009883a 	mov	r4,r2
10018a24:	008400f4 	movhi	r2,4099
10018a28:	dfc00115 	stw	ra,4(sp)
10018a2c:	102aaa15 	stw	zero,-21848(r2)
10018a30:	00228bc0 	call	100228bc <write>
10018a34:	10ffffd8 	cmpnei	r3,r2,-1
10018a38:	18000426 	beq	r3,zero,10018a4c <_write_r+0x44>
10018a3c:	dfc00117 	ldw	ra,4(sp)
10018a40:	dc000017 	ldw	r16,0(sp)
10018a44:	dec00204 	addi	sp,sp,8
10018a48:	f800283a 	ret
10018a4c:	00c400f4 	movhi	r3,4099
10018a50:	18eaaa17 	ldw	r3,-21848(r3)
10018a54:	183ff926 	beq	r3,zero,10018a3c <_write_r+0x34>
10018a58:	80c00015 	stw	r3,0(r16)
10018a5c:	dfc00117 	ldw	ra,4(sp)
10018a60:	dc000017 	ldw	r16,0(sp)
10018a64:	dec00204 	addi	sp,sp,8
10018a68:	f800283a 	ret

10018a6c <__swsetup_r>:
10018a6c:	008400f4 	movhi	r2,4099
10018a70:	10a15917 	ldw	r2,-31388(r2)
10018a74:	defffd04 	addi	sp,sp,-12
10018a78:	dc400115 	stw	r17,4(sp)
10018a7c:	dc000015 	stw	r16,0(sp)
10018a80:	dfc00215 	stw	ra,8(sp)
10018a84:	2023883a 	mov	r17,r4
10018a88:	2821883a 	mov	r16,r5
10018a8c:	10000226 	beq	r2,zero,10018a98 <__swsetup_r+0x2c>
10018a90:	10c00e17 	ldw	r3,56(r2)
10018a94:	18002026 	beq	r3,zero,10018b18 <__swsetup_r+0xac>
10018a98:	8080030b 	ldhu	r2,12(r16)
10018a9c:	10c0020c 	andi	r3,r2,8
10018aa0:	1009883a 	mov	r4,r2
10018aa4:	18002226 	beq	r3,zero,10018b30 <__swsetup_r+0xc4>
10018aa8:	80c00417 	ldw	r3,16(r16)
10018aac:	18002826 	beq	r3,zero,10018b50 <__swsetup_r+0xe4>
10018ab0:	1100004c 	andi	r4,r2,1
10018ab4:	20000b1e 	bne	r4,zero,10018ae4 <__swsetup_r+0x78>
10018ab8:	1080008c 	andi	r2,r2,2
10018abc:	10002d1e 	bne	r2,zero,10018b74 <__swsetup_r+0x108>
10018ac0:	80800517 	ldw	r2,20(r16)
10018ac4:	80800215 	stw	r2,8(r16)
10018ac8:	18000b26 	beq	r3,zero,10018af8 <__swsetup_r+0x8c>
10018acc:	0005883a 	mov	r2,zero
10018ad0:	dfc00217 	ldw	ra,8(sp)
10018ad4:	dc400117 	ldw	r17,4(sp)
10018ad8:	dc000017 	ldw	r16,0(sp)
10018adc:	dec00304 	addi	sp,sp,12
10018ae0:	f800283a 	ret
10018ae4:	80800517 	ldw	r2,20(r16)
10018ae8:	80000215 	stw	zero,8(r16)
10018aec:	0085c83a 	sub	r2,zero,r2
10018af0:	80800615 	stw	r2,24(r16)
10018af4:	183ff51e 	bne	r3,zero,10018acc <__swsetup_r+0x60>
10018af8:	80c0030b 	ldhu	r3,12(r16)
10018afc:	0005883a 	mov	r2,zero
10018b00:	1900200c 	andi	r4,r3,128
10018b04:	203ff226 	beq	r4,zero,10018ad0 <__swsetup_r+0x64>
10018b08:	18c01014 	ori	r3,r3,64
10018b0c:	80c0030d 	sth	r3,12(r16)
10018b10:	00bfffc4 	movi	r2,-1
10018b14:	003fee06 	br	10018ad0 <__swsetup_r+0x64>
10018b18:	1009883a 	mov	r4,r2
10018b1c:	001aaa80 	call	1001aaa8 <__sinit>
10018b20:	8080030b 	ldhu	r2,12(r16)
10018b24:	10c0020c 	andi	r3,r2,8
10018b28:	1009883a 	mov	r4,r2
10018b2c:	183fde1e 	bne	r3,zero,10018aa8 <__swsetup_r+0x3c>
10018b30:	2080040c 	andi	r2,r4,16
10018b34:	10001f26 	beq	r2,zero,10018bb4 <__swsetup_r+0x148>
10018b38:	2080010c 	andi	r2,r4,4
10018b3c:	10000f1e 	bne	r2,zero,10018b7c <__swsetup_r+0x110>
10018b40:	80c00417 	ldw	r3,16(r16)
10018b44:	20800214 	ori	r2,r4,8
10018b48:	8080030d 	sth	r2,12(r16)
10018b4c:	183fd81e 	bne	r3,zero,10018ab0 <__swsetup_r+0x44>
10018b50:	1100a00c 	andi	r4,r2,640
10018b54:	21008020 	cmpeqi	r4,r4,512
10018b58:	203fd51e 	bne	r4,zero,10018ab0 <__swsetup_r+0x44>
10018b5c:	800b883a 	mov	r5,r16
10018b60:	8809883a 	mov	r4,r17
10018b64:	0014d340 	call	10014d34 <__smakebuf_r>
10018b68:	8080030b 	ldhu	r2,12(r16)
10018b6c:	80c00417 	ldw	r3,16(r16)
10018b70:	003fcf06 	br	10018ab0 <__swsetup_r+0x44>
10018b74:	0005883a 	mov	r2,zero
10018b78:	003fd206 	br	10018ac4 <__swsetup_r+0x58>
10018b7c:	81400c17 	ldw	r5,48(r16)
10018b80:	28000626 	beq	r5,zero,10018b9c <__swsetup_r+0x130>
10018b84:	80801004 	addi	r2,r16,64
10018b88:	28800326 	beq	r5,r2,10018b98 <__swsetup_r+0x12c>
10018b8c:	8809883a 	mov	r4,r17
10018b90:	001acb00 	call	1001acb0 <_free_r>
10018b94:	8100030b 	ldhu	r4,12(r16)
10018b98:	80000c15 	stw	zero,48(r16)
10018b9c:	80c00417 	ldw	r3,16(r16)
10018ba0:	00bff6c4 	movi	r2,-37
10018ba4:	1108703a 	and	r4,r2,r4
10018ba8:	80000115 	stw	zero,4(r16)
10018bac:	80c00015 	stw	r3,0(r16)
10018bb0:	003fe406 	br	10018b44 <__swsetup_r+0xd8>
10018bb4:	00800244 	movi	r2,9
10018bb8:	88800015 	stw	r2,0(r17)
10018bbc:	20801014 	ori	r2,r4,64
10018bc0:	8080030d 	sth	r2,12(r16)
10018bc4:	00bfffc4 	movi	r2,-1
10018bc8:	003fc106 	br	10018ad0 <__swsetup_r+0x64>

10018bcc <_close_r>:
10018bcc:	defffe04 	addi	sp,sp,-8
10018bd0:	dc000015 	stw	r16,0(sp)
10018bd4:	008400f4 	movhi	r2,4099
10018bd8:	2021883a 	mov	r16,r4
10018bdc:	2809883a 	mov	r4,r5
10018be0:	dfc00115 	stw	ra,4(sp)
10018be4:	102aaa15 	stw	zero,-21848(r2)
10018be8:	0021c840 	call	10021c84 <close>
10018bec:	10ffffd8 	cmpnei	r3,r2,-1
10018bf0:	18000426 	beq	r3,zero,10018c04 <_close_r+0x38>
10018bf4:	dfc00117 	ldw	ra,4(sp)
10018bf8:	dc000017 	ldw	r16,0(sp)
10018bfc:	dec00204 	addi	sp,sp,8
10018c00:	f800283a 	ret
10018c04:	00c400f4 	movhi	r3,4099
10018c08:	18eaaa17 	ldw	r3,-21848(r3)
10018c0c:	183ff926 	beq	r3,zero,10018bf4 <_close_r+0x28>
10018c10:	80c00015 	stw	r3,0(r16)
10018c14:	dfc00117 	ldw	ra,4(sp)
10018c18:	dc000017 	ldw	r16,0(sp)
10018c1c:	dec00204 	addi	sp,sp,8
10018c20:	f800283a 	ret

10018c24 <quorem>:
10018c24:	defff504 	addi	sp,sp,-44
10018c28:	dc800315 	stw	r18,12(sp)
10018c2c:	20800417 	ldw	r2,16(r4)
10018c30:	2c800417 	ldw	r18,16(r5)
10018c34:	dfc00a15 	stw	ra,40(sp)
10018c38:	df000915 	stw	fp,36(sp)
10018c3c:	ddc00815 	stw	r23,32(sp)
10018c40:	dd800715 	stw	r22,28(sp)
10018c44:	dd400615 	stw	r21,24(sp)
10018c48:	dd000515 	stw	r20,20(sp)
10018c4c:	dcc00415 	stw	r19,16(sp)
10018c50:	dc400215 	stw	r17,8(sp)
10018c54:	dc000115 	stw	r16,4(sp)
10018c58:	14807416 	blt	r2,r18,10018e2c <quorem+0x208>
10018c5c:	94bfffc4 	addi	r18,r18,-1
10018c60:	902e90ba 	slli	r23,r18,2
10018c64:	2c400504 	addi	r17,r5,20
10018c68:	25400504 	addi	r21,r4,20
10018c6c:	8de9883a 	add	r20,r17,r23
10018c70:	a7000017 	ldw	fp,0(r20)
10018c74:	adef883a 	add	r23,r21,r23
10018c78:	b8c00017 	ldw	r3,0(r23)
10018c7c:	e7000044 	addi	fp,fp,1
10018c80:	282d883a 	mov	r22,r5
10018c84:	2021883a 	mov	r16,r4
10018c88:	e00b883a 	mov	r5,fp
10018c8c:	1809883a 	mov	r4,r3
10018c90:	d8c00015 	stw	r3,0(sp)
10018c94:	00140ac0 	call	100140ac <__udivsi3>
10018c98:	d8c00017 	ldw	r3,0(sp)
10018c9c:	1027883a 	mov	r19,r2
10018ca0:	1f002c36 	bltu	r3,fp,10018d54 <quorem+0x130>
10018ca4:	8811883a 	mov	r8,r17
10018ca8:	a80b883a 	mov	r5,r21
10018cac:	0013883a 	mov	r9,zero
10018cb0:	0007883a 	mov	r3,zero
10018cb4:	42000104 	addi	r8,r8,4
10018cb8:	41ffff17 	ldw	r7,-4(r8)
10018cbc:	29800017 	ldw	r6,0(r5)
10018cc0:	29400104 	addi	r5,r5,4
10018cc4:	38bfffcc 	andi	r2,r7,65535
10018cc8:	14c5383a 	mul	r2,r2,r19
10018ccc:	3808d43a 	srli	r4,r7,16
10018cd0:	32bfffcc 	andi	r10,r6,65535
10018cd4:	1245883a 	add	r2,r2,r9
10018cd8:	1012d43a 	srli	r9,r2,16
10018cdc:	11ffffcc 	andi	r7,r2,65535
10018ce0:	24c9383a 	mul	r4,r4,r19
10018ce4:	19c7c83a 	sub	r3,r3,r7
10018ce8:	1a8f883a 	add	r7,r3,r10
10018cec:	3006d43a 	srli	r3,r6,16
10018cf0:	2249883a 	add	r4,r4,r9
10018cf4:	3805d43a 	srai	r2,r7,16
10018cf8:	21bfffcc 	andi	r6,r4,65535
10018cfc:	1987c83a 	sub	r3,r3,r6
10018d00:	1887883a 	add	r3,r3,r2
10018d04:	180c943a 	slli	r6,r3,16
10018d08:	39ffffcc 	andi	r7,r7,65535
10018d0c:	2012d43a 	srli	r9,r4,16
10018d10:	31ceb03a 	or	r7,r6,r7
10018d14:	29ffff15 	stw	r7,-4(r5)
10018d18:	1807d43a 	srai	r3,r3,16
10018d1c:	a23fe52e 	bgeu	r20,r8,10018cb4 <quorem+0x90>
10018d20:	b8800017 	ldw	r2,0(r23)
10018d24:	10000b1e 	bne	r2,zero,10018d54 <quorem+0x130>
10018d28:	b8bfff04 	addi	r2,r23,-4
10018d2c:	a880082e 	bgeu	r21,r2,10018d50 <quorem+0x12c>
10018d30:	b8ffff17 	ldw	r3,-4(r23)
10018d34:	18000326 	beq	r3,zero,10018d44 <quorem+0x120>
10018d38:	00000506 	br	10018d50 <quorem+0x12c>
10018d3c:	10c00017 	ldw	r3,0(r2)
10018d40:	1800031e 	bne	r3,zero,10018d50 <quorem+0x12c>
10018d44:	10bfff04 	addi	r2,r2,-4
10018d48:	94bfffc4 	addi	r18,r18,-1
10018d4c:	a8bffb36 	bltu	r21,r2,10018d3c <quorem+0x118>
10018d50:	84800415 	stw	r18,16(r16)
10018d54:	b00b883a 	mov	r5,r22
10018d58:	8009883a 	mov	r4,r16
10018d5c:	001bf280 	call	1001bf28 <__mcmp>
10018d60:	10002516 	blt	r2,zero,10018df8 <quorem+0x1d4>
10018d64:	9cc00044 	addi	r19,r19,1
10018d68:	a80d883a 	mov	r6,r21
10018d6c:	0007883a 	mov	r3,zero
10018d70:	8c400104 	addi	r17,r17,4
10018d74:	893fff17 	ldw	r4,-4(r17)
10018d78:	31400017 	ldw	r5,0(r6)
10018d7c:	31800104 	addi	r6,r6,4
10018d80:	20bfffcc 	andi	r2,r4,65535
10018d84:	1887c83a 	sub	r3,r3,r2
10018d88:	28bfffcc 	andi	r2,r5,65535
10018d8c:	1885883a 	add	r2,r3,r2
10018d90:	2008d43a 	srli	r4,r4,16
10018d94:	2806d43a 	srli	r3,r5,16
10018d98:	100fd43a 	srai	r7,r2,16
10018d9c:	117fffcc 	andi	r5,r2,65535
10018da0:	1907c83a 	sub	r3,r3,r4
10018da4:	19c7883a 	add	r3,r3,r7
10018da8:	1804943a 	slli	r2,r3,16
10018dac:	1807d43a 	srai	r3,r3,16
10018db0:	1144b03a 	or	r2,r2,r5
10018db4:	30bfff15 	stw	r2,-4(r6)
10018db8:	a47fed2e 	bgeu	r20,r17,10018d70 <quorem+0x14c>
10018dbc:	900690ba 	slli	r3,r18,2
10018dc0:	a8c7883a 	add	r3,r21,r3
10018dc4:	18800017 	ldw	r2,0(r3)
10018dc8:	10000b1e 	bne	r2,zero,10018df8 <quorem+0x1d4>
10018dcc:	18bfff04 	addi	r2,r3,-4
10018dd0:	a880082e 	bgeu	r21,r2,10018df4 <quorem+0x1d0>
10018dd4:	18ffff17 	ldw	r3,-4(r3)
10018dd8:	18000326 	beq	r3,zero,10018de8 <quorem+0x1c4>
10018ddc:	00000506 	br	10018df4 <quorem+0x1d0>
10018de0:	10c00017 	ldw	r3,0(r2)
10018de4:	1800031e 	bne	r3,zero,10018df4 <quorem+0x1d0>
10018de8:	10bfff04 	addi	r2,r2,-4
10018dec:	94bfffc4 	addi	r18,r18,-1
10018df0:	a8bffb36 	bltu	r21,r2,10018de0 <quorem+0x1bc>
10018df4:	84800415 	stw	r18,16(r16)
10018df8:	9805883a 	mov	r2,r19
10018dfc:	dfc00a17 	ldw	ra,40(sp)
10018e00:	df000917 	ldw	fp,36(sp)
10018e04:	ddc00817 	ldw	r23,32(sp)
10018e08:	dd800717 	ldw	r22,28(sp)
10018e0c:	dd400617 	ldw	r21,24(sp)
10018e10:	dd000517 	ldw	r20,20(sp)
10018e14:	dcc00417 	ldw	r19,16(sp)
10018e18:	dc800317 	ldw	r18,12(sp)
10018e1c:	dc400217 	ldw	r17,8(sp)
10018e20:	dc000117 	ldw	r16,4(sp)
10018e24:	dec00b04 	addi	sp,sp,44
10018e28:	f800283a 	ret
10018e2c:	0005883a 	mov	r2,zero
10018e30:	003ff206 	br	10018dfc <quorem+0x1d8>

10018e34 <_dtoa_r>:
10018e34:	20801017 	ldw	r2,64(r4)
10018e38:	deffe204 	addi	sp,sp,-120
10018e3c:	df001c15 	stw	fp,112(sp)
10018e40:	dcc01715 	stw	r19,92(sp)
10018e44:	dc401515 	stw	r17,84(sp)
10018e48:	dc001415 	stw	r16,80(sp)
10018e4c:	dfc01d15 	stw	ra,116(sp)
10018e50:	ddc01b15 	stw	r23,108(sp)
10018e54:	dd801a15 	stw	r22,104(sp)
10018e58:	dd401915 	stw	r21,100(sp)
10018e5c:	dd001815 	stw	r20,96(sp)
10018e60:	dc801615 	stw	r18,88(sp)
10018e64:	d9400115 	stw	r5,4(sp)
10018e68:	d9c00215 	stw	r7,8(sp)
10018e6c:	2039883a 	mov	fp,r4
10018e70:	3027883a 	mov	r19,r6
10018e74:	dc002017 	ldw	r16,128(sp)
10018e78:	3023883a 	mov	r17,r6
10018e7c:	10000826 	beq	r2,zero,10018ea0 <_dtoa_r+0x6c>
10018e80:	21801117 	ldw	r6,68(r4)
10018e84:	00c00044 	movi	r3,1
10018e88:	100b883a 	mov	r5,r2
10018e8c:	1986983a 	sll	r3,r3,r6
10018e90:	11800115 	stw	r6,4(r2)
10018e94:	10c00215 	stw	r3,8(r2)
10018e98:	001b7480 	call	1001b748 <_Bfree>
10018e9c:	e0001015 	stw	zero,64(fp)
10018ea0:	98018116 	blt	r19,zero,100194a8 <_dtoa_r+0x674>
10018ea4:	80000015 	stw	zero,0(r16)
10018ea8:	989ffc2c 	andhi	r2,r19,32752
10018eac:	00dffc34 	movhi	r3,32752
10018eb0:	10c18626 	beq	r2,r3,100194cc <_dtoa_r+0x698>
10018eb4:	d9000117 	ldw	r4,4(sp)
10018eb8:	000d883a 	mov	r6,zero
10018ebc:	000f883a 	mov	r7,zero
10018ec0:	880b883a 	mov	r5,r17
10018ec4:	00207640 	call	10020764 <__eqdf2>
10018ec8:	1000191e 	bne	r2,zero,10018f30 <_dtoa_r+0xfc>
10018ecc:	d8c01f17 	ldw	r3,124(sp)
10018ed0:	00800044 	movi	r2,1
10018ed4:	18800015 	stw	r2,0(r3)
10018ed8:	d8802117 	ldw	r2,132(sp)
10018edc:	10032426 	beq	r2,zero,10019b70 <_dtoa_r+0xd3c>
10018ee0:	d9002117 	ldw	r4,132(sp)
10018ee4:	008400b4 	movhi	r2,4098
10018ee8:	1096d844 	addi	r2,r2,23393
10018eec:	00c400b4 	movhi	r3,4098
10018ef0:	20800015 	stw	r2,0(r4)
10018ef4:	1896d804 	addi	r2,r3,23392
10018ef8:	d8800315 	stw	r2,12(sp)
10018efc:	d8800317 	ldw	r2,12(sp)
10018f00:	dfc01d17 	ldw	ra,116(sp)
10018f04:	df001c17 	ldw	fp,112(sp)
10018f08:	ddc01b17 	ldw	r23,108(sp)
10018f0c:	dd801a17 	ldw	r22,104(sp)
10018f10:	dd401917 	ldw	r21,100(sp)
10018f14:	dd001817 	ldw	r20,96(sp)
10018f18:	dcc01717 	ldw	r19,92(sp)
10018f1c:	dc801617 	ldw	r18,88(sp)
10018f20:	dc401517 	ldw	r17,84(sp)
10018f24:	dc001417 	ldw	r16,80(sp)
10018f28:	dec01e04 	addi	sp,sp,120
10018f2c:	f800283a 	ret
10018f30:	dc800117 	ldw	r18,4(sp)
10018f34:	d8801204 	addi	r2,sp,72
10018f38:	9820d53a 	srli	r16,r19,20
10018f3c:	d8800015 	stw	r2,0(sp)
10018f40:	d9c01304 	addi	r7,sp,76
10018f44:	900b883a 	mov	r5,r18
10018f48:	880d883a 	mov	r6,r17
10018f4c:	e009883a 	mov	r4,fp
10018f50:	001c29c0 	call	1001c29c <__d2b>
10018f54:	102b883a 	mov	r21,r2
10018f58:	8001701e 	bne	r16,zero,1001951c <_dtoa_r+0x6e8>
10018f5c:	dc801217 	ldw	r18,72(sp)
10018f60:	dc001317 	ldw	r16,76(sp)
10018f64:	9421883a 	add	r16,r18,r16
10018f68:	80810c84 	addi	r2,r16,1074
10018f6c:	10c00850 	cmplti	r3,r2,33
10018f70:	18030f1e 	bne	r3,zero,10019bb0 <_dtoa_r+0xd7c>
10018f74:	01001004 	movi	r4,64
10018f78:	2085c83a 	sub	r2,r4,r2
10018f7c:	98a6983a 	sll	r19,r19,r2
10018f80:	d8800117 	ldw	r2,4(sp)
10018f84:	81010484 	addi	r4,r16,1042
10018f88:	1108d83a 	srl	r4,r2,r4
10018f8c:	9908b03a 	or	r4,r19,r4
10018f90:	0021b580 	call	10021b58 <__floatunsidf>
10018f94:	1009883a 	mov	r4,r2
10018f98:	017f8434 	movhi	r5,65040
10018f9c:	00800044 	movi	r2,1
10018fa0:	194b883a 	add	r5,r3,r5
10018fa4:	843fffc4 	addi	r16,r16,-1
10018fa8:	d8800a15 	stw	r2,40(sp)
10018fac:	000d883a 	mov	r6,zero
10018fb0:	01cffe34 	movhi	r7,16376
10018fb4:	00210500 	call	10021050 <__subdf3>
10018fb8:	0198dbf4 	movhi	r6,25455
10018fbc:	01cff4f4 	movhi	r7,16339
10018fc0:	3190d844 	addi	r6,r6,17249
10018fc4:	39e1e9c4 	addi	r7,r7,-30809
10018fc8:	1009883a 	mov	r4,r2
10018fcc:	180b883a 	mov	r5,r3
10018fd0:	00209c40 	call	100209c4 <__muldf3>
10018fd4:	01a2d874 	movhi	r6,35681
10018fd8:	01cff1f4 	movhi	r7,16327
10018fdc:	31b22cc4 	addi	r6,r6,-14157
10018fe0:	39e28a04 	addi	r7,r7,-30168
10018fe4:	180b883a 	mov	r5,r3
10018fe8:	1009883a 	mov	r4,r2
10018fec:	001f51c0 	call	1001f51c <__adddf3>
10018ff0:	8009883a 	mov	r4,r16
10018ff4:	1029883a 	mov	r20,r2
10018ff8:	1827883a 	mov	r19,r3
10018ffc:	0021a900 	call	10021a90 <__floatsidf>
10019000:	019427f4 	movhi	r6,20639
10019004:	01cff4f4 	movhi	r7,16339
10019008:	319e7ec4 	addi	r6,r6,31227
1001900c:	39d104c4 	addi	r7,r7,17427
10019010:	1009883a 	mov	r4,r2
10019014:	180b883a 	mov	r5,r3
10019018:	00209c40 	call	100209c4 <__muldf3>
1001901c:	100d883a 	mov	r6,r2
10019020:	180f883a 	mov	r7,r3
10019024:	a009883a 	mov	r4,r20
10019028:	980b883a 	mov	r5,r19
1001902c:	001f51c0 	call	1001f51c <__adddf3>
10019030:	1009883a 	mov	r4,r2
10019034:	180b883a 	mov	r5,r3
10019038:	1029883a 	mov	r20,r2
1001903c:	1827883a 	mov	r19,r3
10019040:	0021a100 	call	10021a10 <__fixdfsi>
10019044:	000d883a 	mov	r6,zero
10019048:	000f883a 	mov	r7,zero
1001904c:	a009883a 	mov	r4,r20
10019050:	980b883a 	mov	r5,r19
10019054:	102d883a 	mov	r22,r2
10019058:	00208d40 	call	100208d4 <__ledf2>
1001905c:	1002ba16 	blt	r2,zero,10019b48 <_dtoa_r+0xd14>
10019060:	9421c83a 	sub	r16,r18,r16
10019064:	b08005e8 	cmpgeui	r2,r22,23
10019068:	853fffc4 	addi	r20,r16,-1
1001906c:	1002ae1e 	bne	r2,zero,10019b28 <_dtoa_r+0xcf4>
10019070:	b00690fa 	slli	r3,r22,3
10019074:	008400b4 	movhi	r2,4098
10019078:	10979c04 	addi	r2,r2,24176
1001907c:	10c5883a 	add	r2,r2,r3
10019080:	11800017 	ldw	r6,0(r2)
10019084:	11c00117 	ldw	r7,4(r2)
10019088:	d9000117 	ldw	r4,4(sp)
1001908c:	880b883a 	mov	r5,r17
10019090:	00208d40 	call	100208d4 <__ledf2>
10019094:	10026f0e 	bge	r2,zero,10019a54 <_dtoa_r+0xc20>
10019098:	d8000915 	stw	zero,36(sp)
1001909c:	b5bfffc4 	addi	r22,r22,-1
100190a0:	a002a416 	blt	r20,zero,10019b34 <_dtoa_r+0xd00>
100190a4:	d8000515 	stw	zero,20(sp)
100190a8:	b0026d0e 	bge	r22,zero,10019a60 <_dtoa_r+0xc2c>
100190ac:	d8800517 	ldw	r2,20(sp)
100190b0:	d8c00217 	ldw	r3,8(sp)
100190b4:	dd800415 	stw	r22,16(sp)
100190b8:	1585c83a 	sub	r2,r2,r22
100190bc:	d8800515 	stw	r2,20(sp)
100190c0:	0585c83a 	sub	r2,zero,r22
100190c4:	d8800815 	stw	r2,32(sp)
100190c8:	188002a8 	cmpgeui	r2,r3,10
100190cc:	002d883a 	mov	r22,zero
100190d0:	1002691e 	bne	r2,zero,10019a78 <_dtoa_r+0xc44>
100190d4:	18800190 	cmplti	r2,r3,6
100190d8:	1002ba1e 	bne	r2,zero,10019bc4 <_dtoa_r+0xd90>
100190dc:	18bfff04 	addi	r2,r3,-4
100190e0:	d8800215 	stw	r2,8(sp)
100190e4:	0021883a 	mov	r16,zero
100190e8:	d8c00217 	ldw	r3,8(sp)
100190ec:	188000e0 	cmpeqi	r2,r3,3
100190f0:	10039d1e 	bne	r2,zero,10019f68 <_dtoa_r+0x1134>
100190f4:	18800108 	cmpgei	r2,r3,4
100190f8:	10027a26 	beq	r2,zero,10019ae4 <_dtoa_r+0xcb0>
100190fc:	d8c00217 	ldw	r3,8(sp)
10019100:	18800120 	cmpeqi	r2,r3,4
10019104:	10026926 	beq	r2,zero,10019aac <_dtoa_r+0xc78>
10019108:	00800044 	movi	r2,1
1001910c:	d8800715 	stw	r2,28(sp)
10019110:	d8801e17 	ldw	r2,120(sp)
10019114:	0083670e 	bge	zero,r2,10019eb4 <_dtoa_r+0x1080>
10019118:	d8800b15 	stw	r2,44(sp)
1001911c:	d8800615 	stw	r2,24(sp)
10019120:	100d883a 	mov	r6,r2
10019124:	e0001115 	stw	zero,68(fp)
10019128:	30800610 	cmplti	r2,r6,24
1001912c:	dc800617 	ldw	r18,24(sp)
10019130:	1004eb1e 	bne	r2,zero,1001a4e0 <_dtoa_r+0x16ac>
10019134:	00c00044 	movi	r3,1
10019138:	00800104 	movi	r2,4
1001913c:	1085883a 	add	r2,r2,r2
10019140:	11000504 	addi	r4,r2,20
10019144:	180b883a 	mov	r5,r3
10019148:	18c00044 	addi	r3,r3,1
1001914c:	313ffb2e 	bgeu	r6,r4,1001913c <_dtoa_r+0x308>
10019150:	e1401115 	stw	r5,68(fp)
10019154:	e009883a 	mov	r4,fp
10019158:	001b6a40 	call	1001b6a4 <_Balloc>
1001915c:	d8800315 	stw	r2,12(sp)
10019160:	e0801015 	stw	r2,64(fp)
10019164:	948003e8 	cmpgeui	r18,r18,15
10019168:	9000fe1e 	bne	r18,zero,10019564 <_dtoa_r+0x730>
1001916c:	8000fd26 	beq	r16,zero,10019564 <_dtoa_r+0x730>
10019170:	d9000417 	ldw	r4,16(sp)
10019174:	0103c60e 	bge	zero,r4,1001a090 <_dtoa_r+0x125c>
10019178:	208003cc 	andi	r2,r4,15
1001917c:	100690fa 	slli	r3,r2,3
10019180:	202fd13a 	srai	r23,r4,4
10019184:	008400b4 	movhi	r2,4098
10019188:	10979c04 	addi	r2,r2,24176
1001918c:	10c5883a 	add	r2,r2,r3
10019190:	b8c0040c 	andi	r3,r23,16
10019194:	12800017 	ldw	r10,0(r2)
10019198:	12400117 	ldw	r9,4(r2)
1001919c:	1803621e 	bne	r3,zero,10019f28 <_dtoa_r+0x10f4>
100191a0:	d8800117 	ldw	r2,4(sp)
100191a4:	8827883a 	mov	r19,r17
100191a8:	04000084 	movi	r16,2
100191ac:	d8800c15 	stw	r2,48(sp)
100191b0:	048400b4 	movhi	r18,4098
100191b4:	94979204 	addi	r18,r18,24136
100191b8:	b8000f26 	beq	r23,zero,100191f8 <_dtoa_r+0x3c4>
100191bc:	5005883a 	mov	r2,r10
100191c0:	4807883a 	mov	r3,r9
100191c4:	b980004c 	andi	r6,r23,1
100191c8:	1009883a 	mov	r4,r2
100191cc:	b82fd07a 	srai	r23,r23,1
100191d0:	180b883a 	mov	r5,r3
100191d4:	30000426 	beq	r6,zero,100191e8 <_dtoa_r+0x3b4>
100191d8:	91800017 	ldw	r6,0(r18)
100191dc:	91c00117 	ldw	r7,4(r18)
100191e0:	84000044 	addi	r16,r16,1
100191e4:	00209c40 	call	100209c4 <__muldf3>
100191e8:	94800204 	addi	r18,r18,8
100191ec:	b83ff51e 	bne	r23,zero,100191c4 <_dtoa_r+0x390>
100191f0:	1015883a 	mov	r10,r2
100191f4:	1813883a 	mov	r9,r3
100191f8:	d9000c17 	ldw	r4,48(sp)
100191fc:	980b883a 	mov	r5,r19
10019200:	500d883a 	mov	r6,r10
10019204:	480f883a 	mov	r7,r9
10019208:	001febc0 	call	1001febc <__divdf3>
1001920c:	1025883a 	mov	r18,r2
10019210:	1827883a 	mov	r19,r3
10019214:	d8800917 	ldw	r2,36(sp)
10019218:	10000626 	beq	r2,zero,10019234 <_dtoa_r+0x400>
1001921c:	000d883a 	mov	r6,zero
10019220:	01cffc34 	movhi	r7,16368
10019224:	9009883a 	mov	r4,r18
10019228:	980b883a 	mov	r5,r19
1001922c:	00208d40 	call	100208d4 <__ledf2>
10019230:	10042616 	blt	r2,zero,1001a2cc <_dtoa_r+0x1498>
10019234:	8009883a 	mov	r4,r16
10019238:	0021a900 	call	10021a90 <__floatsidf>
1001923c:	900d883a 	mov	r6,r18
10019240:	980f883a 	mov	r7,r19
10019244:	1009883a 	mov	r4,r2
10019248:	180b883a 	mov	r5,r3
1001924c:	00209c40 	call	100209c4 <__muldf3>
10019250:	000d883a 	mov	r6,zero
10019254:	01d00734 	movhi	r7,16412
10019258:	1009883a 	mov	r4,r2
1001925c:	180b883a 	mov	r5,r3
10019260:	001f51c0 	call	1001f51c <__adddf3>
10019264:	d8800c15 	stw	r2,48(sp)
10019268:	00bf3034 	movhi	r2,64704
1001926c:	1885883a 	add	r2,r3,r2
10019270:	d8800d15 	stw	r2,52(sp)
10019274:	d8800617 	ldw	r2,24(sp)
10019278:	10036d26 	beq	r2,zero,1001a030 <_dtoa_r+0x11fc>
1001927c:	d8800417 	ldw	r2,16(sp)
10019280:	d8800f15 	stw	r2,60(sp)
10019284:	d8800617 	ldw	r2,24(sp)
10019288:	d8800e15 	stw	r2,56(sp)
1001928c:	980b883a 	mov	r5,r19
10019290:	9009883a 	mov	r4,r18
10019294:	0021a100 	call	10021a10 <__fixdfsi>
10019298:	1009883a 	mov	r4,r2
1001929c:	102f883a 	mov	r23,r2
100192a0:	0021a900 	call	10021a90 <__floatsidf>
100192a4:	100d883a 	mov	r6,r2
100192a8:	180f883a 	mov	r7,r3
100192ac:	9009883a 	mov	r4,r18
100192b0:	980b883a 	mov	r5,r19
100192b4:	00210500 	call	10021050 <__subdf3>
100192b8:	1025883a 	mov	r18,r2
100192bc:	d8800e17 	ldw	r2,56(sp)
100192c0:	1821883a 	mov	r16,r3
100192c4:	ba400c04 	addi	r9,r23,48
100192c8:	10bfffc4 	addi	r2,r2,-1
100192cc:	100690fa 	slli	r3,r2,3
100192d0:	008400b4 	movhi	r2,4098
100192d4:	10979c04 	addi	r2,r2,24176
100192d8:	10c5883a 	add	r2,r2,r3
100192dc:	11800017 	ldw	r6,0(r2)
100192e0:	d8c00317 	ldw	r3,12(sp)
100192e4:	11c00117 	ldw	r7,4(r2)
100192e8:	d8800717 	ldw	r2,28(sp)
100192ec:	4811883a 	mov	r8,r9
100192f0:	da001015 	stw	r8,64(sp)
100192f4:	1dc00044 	addi	r23,r3,1
100192f8:	1003a226 	beq	r2,zero,1001a184 <_dtoa_r+0x1350>
100192fc:	0009883a 	mov	r4,zero
10019300:	014ff834 	movhi	r5,16352
10019304:	da401115 	stw	r9,68(sp)
10019308:	001febc0 	call	1001febc <__divdf3>
1001930c:	d9800c17 	ldw	r6,48(sp)
10019310:	d9c00d17 	ldw	r7,52(sp)
10019314:	1009883a 	mov	r4,r2
10019318:	180b883a 	mov	r5,r3
1001931c:	00210500 	call	10021050 <__subdf3>
10019320:	1827883a 	mov	r19,r3
10019324:	da401117 	ldw	r9,68(sp)
10019328:	d8c00317 	ldw	r3,12(sp)
1001932c:	900d883a 	mov	r6,r18
10019330:	800f883a 	mov	r7,r16
10019334:	1a400005 	stb	r9,0(r3)
10019338:	1009883a 	mov	r4,r2
1001933c:	980b883a 	mov	r5,r19
10019340:	d8800c15 	stw	r2,48(sp)
10019344:	00207e40 	call	100207e4 <__gedf2>
10019348:	da001017 	ldw	r8,64(sp)
1001934c:	00804816 	blt	zero,r2,10019470 <_dtoa_r+0x63c>
10019350:	900d883a 	mov	r6,r18
10019354:	800f883a 	mov	r7,r16
10019358:	0009883a 	mov	r4,zero
1001935c:	014ffc34 	movhi	r5,16368
10019360:	da000d15 	stw	r8,52(sp)
10019364:	00210500 	call	10021050 <__subdf3>
10019368:	d9000c17 	ldw	r4,48(sp)
1001936c:	100d883a 	mov	r6,r2
10019370:	180f883a 	mov	r7,r3
10019374:	980b883a 	mov	r5,r19
10019378:	00207e40 	call	100207e4 <__gedf2>
1001937c:	da000d17 	ldw	r8,52(sp)
10019380:	00844e16 	blt	zero,r2,1001a4bc <_dtoa_r+0x1688>
10019384:	d8c00e17 	ldw	r3,56(sp)
10019388:	18800060 	cmpeqi	r2,r3,1
1001938c:	1000751e 	bne	r2,zero,10019564 <_dtoa_r+0x730>
10019390:	d8800317 	ldw	r2,12(sp)
10019394:	dd800d15 	stw	r22,52(sp)
10019398:	dd000e15 	stw	r20,56(sp)
1001939c:	10c5883a 	add	r2,r2,r3
100193a0:	dd000c17 	ldw	r20,48(sp)
100193a4:	102d883a 	mov	r22,r2
100193a8:	dc400c15 	stw	r17,48(sp)
100193ac:	00000806 	br	100193d0 <_dtoa_r+0x59c>
100193b0:	00210500 	call	10021050 <__subdf3>
100193b4:	a00d883a 	mov	r6,r20
100193b8:	980f883a 	mov	r7,r19
100193bc:	1009883a 	mov	r4,r2
100193c0:	180b883a 	mov	r5,r3
100193c4:	00208d40 	call	100208d4 <__ledf2>
100193c8:	10042316 	blt	r2,zero,1001a458 <_dtoa_r+0x1624>
100193cc:	bd806226 	beq	r23,r22,10019558 <_dtoa_r+0x724>
100193d0:	a009883a 	mov	r4,r20
100193d4:	980b883a 	mov	r5,r19
100193d8:	000d883a 	mov	r6,zero
100193dc:	01d00934 	movhi	r7,16420
100193e0:	00209c40 	call	100209c4 <__muldf3>
100193e4:	000d883a 	mov	r6,zero
100193e8:	01d00934 	movhi	r7,16420
100193ec:	9009883a 	mov	r4,r18
100193f0:	800b883a 	mov	r5,r16
100193f4:	1029883a 	mov	r20,r2
100193f8:	1827883a 	mov	r19,r3
100193fc:	00209c40 	call	100209c4 <__muldf3>
10019400:	180b883a 	mov	r5,r3
10019404:	1009883a 	mov	r4,r2
10019408:	1821883a 	mov	r16,r3
1001940c:	1025883a 	mov	r18,r2
10019410:	0021a100 	call	10021a10 <__fixdfsi>
10019414:	1009883a 	mov	r4,r2
10019418:	1023883a 	mov	r17,r2
1001941c:	0021a900 	call	10021a90 <__floatsidf>
10019420:	9009883a 	mov	r4,r18
10019424:	800b883a 	mov	r5,r16
10019428:	100d883a 	mov	r6,r2
1001942c:	180f883a 	mov	r7,r3
10019430:	00210500 	call	10021050 <__subdf3>
10019434:	bdc00044 	addi	r23,r23,1
10019438:	8c400c04 	addi	r17,r17,48
1001943c:	a00d883a 	mov	r6,r20
10019440:	980f883a 	mov	r7,r19
10019444:	1009883a 	mov	r4,r2
10019448:	180b883a 	mov	r5,r3
1001944c:	bc7fffc5 	stb	r17,-1(r23)
10019450:	1025883a 	mov	r18,r2
10019454:	1821883a 	mov	r16,r3
10019458:	00208d40 	call	100208d4 <__ledf2>
1001945c:	900d883a 	mov	r6,r18
10019460:	800f883a 	mov	r7,r16
10019464:	0009883a 	mov	r4,zero
10019468:	014ffc34 	movhi	r5,16368
1001946c:	103fd00e 	bge	r2,zero,100193b0 <_dtoa_r+0x57c>
10019470:	d8800f17 	ldw	r2,60(sp)
10019474:	10800044 	addi	r2,r2,1
10019478:	d8800415 	stw	r2,16(sp)
1001947c:	a80b883a 	mov	r5,r21
10019480:	e009883a 	mov	r4,fp
10019484:	001b7480 	call	1001b748 <_Bfree>
10019488:	d8801f17 	ldw	r2,124(sp)
1001948c:	d8c00417 	ldw	r3,16(sp)
10019490:	b8000005 	stb	zero,0(r23)
10019494:	10c00015 	stw	r3,0(r2)
10019498:	d8802117 	ldw	r2,132(sp)
1001949c:	103e9726 	beq	r2,zero,10018efc <_dtoa_r+0xc8>
100194a0:	15c00015 	stw	r23,0(r2)
100194a4:	003e9506 	br	10018efc <_dtoa_r+0xc8>
100194a8:	04600034 	movhi	r17,32768
100194ac:	8c7fffc4 	addi	r17,r17,-1
100194b0:	9c62703a 	and	r17,r19,r17
100194b4:	00800044 	movi	r2,1
100194b8:	8827883a 	mov	r19,r17
100194bc:	80800015 	stw	r2,0(r16)
100194c0:	00dffc34 	movhi	r3,32752
100194c4:	989ffc2c 	andhi	r2,r19,32752
100194c8:	10fe7a1e 	bne	r2,r3,10018eb4 <_dtoa_r+0x80>
100194cc:	00800434 	movhi	r2,16
100194d0:	d8c01f17 	ldw	r3,124(sp)
100194d4:	10bfffc4 	addi	r2,r2,-1
100194d8:	98a6703a 	and	r19,r19,r2
100194dc:	0089c3c4 	movi	r2,9999
100194e0:	18800015 	stw	r2,0(r3)
100194e4:	d8800117 	ldw	r2,4(sp)
100194e8:	98aab03a 	or	r21,r19,r2
100194ec:	a800141e 	bne	r21,zero,10019540 <_dtoa_r+0x70c>
100194f0:	d8802117 	ldw	r2,132(sp)
100194f4:	1003f626 	beq	r2,zero,1001a4d0 <_dtoa_r+0x169c>
100194f8:	008400b4 	movhi	r2,4098
100194fc:	1007883a 	mov	r3,r2
10019500:	18d78204 	addi	r3,r3,24072
10019504:	008400b4 	movhi	r2,4098
10019508:	d8c00315 	stw	r3,12(sp)
1001950c:	10978404 	addi	r2,r2,24080
10019510:	d8c02117 	ldw	r3,132(sp)
10019514:	18800015 	stw	r2,0(r3)
10019518:	003e7806 	br	10018efc <_dtoa_r+0xc8>
1001951c:	01400434 	movhi	r5,16
10019520:	297fffc4 	addi	r5,r5,-1
10019524:	894a703a 	and	r5,r17,r5
10019528:	9009883a 	mov	r4,r18
1001952c:	294ffc34 	orhi	r5,r5,16368
10019530:	843f0044 	addi	r16,r16,-1023
10019534:	dc801217 	ldw	r18,72(sp)
10019538:	d8000a15 	stw	zero,40(sp)
1001953c:	003e9b06 	br	10018fac <_dtoa_r+0x178>
10019540:	d8802117 	ldw	r2,132(sp)
10019544:	1002461e 	bne	r2,zero,10019e60 <_dtoa_r+0x102c>
10019548:	008400b4 	movhi	r2,4098
1001954c:	10978104 	addi	r2,r2,24068
10019550:	d8800315 	stw	r2,12(sp)
10019554:	003e6906 	br	10018efc <_dtoa_r+0xc8>
10019558:	dd800d17 	ldw	r22,52(sp)
1001955c:	dd000e17 	ldw	r20,56(sp)
10019560:	dc400c17 	ldw	r17,48(sp)
10019564:	d8801317 	ldw	r2,76(sp)
10019568:	10009f16 	blt	r2,zero,100197e8 <_dtoa_r+0x9b4>
1001956c:	d9000417 	ldw	r4,16(sp)
10019570:	20c003c8 	cmpgei	r3,r4,15
10019574:	18009c1e 	bne	r3,zero,100197e8 <_dtoa_r+0x9b4>
10019578:	200690fa 	slli	r3,r4,3
1001957c:	008400b4 	movhi	r2,4098
10019580:	10979c04 	addi	r2,r2,24176
10019584:	10c5883a 	add	r2,r2,r3
10019588:	14000017 	ldw	r16,0(r2)
1001958c:	14800117 	ldw	r18,4(r2)
10019590:	d8801e17 	ldw	r2,120(sp)
10019594:	1000140e 	bge	r2,zero,100195e8 <_dtoa_r+0x7b4>
10019598:	d8800617 	ldw	r2,24(sp)
1001959c:	00801216 	blt	zero,r2,100195e8 <_dtoa_r+0x7b4>
100195a0:	1002b81e 	bne	r2,zero,1001a084 <_dtoa_r+0x1250>
100195a4:	8009883a 	mov	r4,r16
100195a8:	900b883a 	mov	r5,r18
100195ac:	000d883a 	mov	r6,zero
100195b0:	01d00534 	movhi	r7,16404
100195b4:	00209c40 	call	100209c4 <__muldf3>
100195b8:	d9800117 	ldw	r6,4(sp)
100195bc:	880f883a 	mov	r7,r17
100195c0:	1009883a 	mov	r4,r2
100195c4:	180b883a 	mov	r5,r3
100195c8:	00207e40 	call	100207e4 <__gedf2>
100195cc:	0025883a 	mov	r18,zero
100195d0:	0021883a 	mov	r16,zero
100195d4:	1001fd16 	blt	r2,zero,10019dcc <_dtoa_r+0xf98>
100195d8:	d8801e17 	ldw	r2,120(sp)
100195dc:	ddc00317 	ldw	r23,12(sp)
100195e0:	00a2303a 	nor	r17,zero,r2
100195e4:	0001ff06 	br	10019de4 <_dtoa_r+0xfb0>
100195e8:	dcc00117 	ldw	r19,4(sp)
100195ec:	800d883a 	mov	r6,r16
100195f0:	900f883a 	mov	r7,r18
100195f4:	880b883a 	mov	r5,r17
100195f8:	9809883a 	mov	r4,r19
100195fc:	001febc0 	call	1001febc <__divdf3>
10019600:	180b883a 	mov	r5,r3
10019604:	1009883a 	mov	r4,r2
10019608:	0021a100 	call	10021a10 <__fixdfsi>
1001960c:	1009883a 	mov	r4,r2
10019610:	102d883a 	mov	r22,r2
10019614:	0021a900 	call	10021a90 <__floatsidf>
10019618:	800d883a 	mov	r6,r16
1001961c:	900f883a 	mov	r7,r18
10019620:	1009883a 	mov	r4,r2
10019624:	180b883a 	mov	r5,r3
10019628:	00209c40 	call	100209c4 <__muldf3>
1001962c:	880b883a 	mov	r5,r17
10019630:	100d883a 	mov	r6,r2
10019634:	180f883a 	mov	r7,r3
10019638:	9809883a 	mov	r4,r19
1001963c:	00210500 	call	10021050 <__subdf3>
10019640:	dc400317 	ldw	r17,12(sp)
10019644:	1009883a 	mov	r4,r2
10019648:	d9c00417 	ldw	r7,16(sp)
1001964c:	b0800c04 	addi	r2,r22,48
10019650:	88800005 	stb	r2,0(r17)
10019654:	d8800617 	ldw	r2,24(sp)
10019658:	39c00044 	addi	r7,r7,1
1001965c:	d9c00415 	stw	r7,16(sp)
10019660:	11800060 	cmpeqi	r6,r2,1
10019664:	180b883a 	mov	r5,r3
10019668:	2005883a 	mov	r2,r4
1001966c:	8dc00044 	addi	r23,r17,1
10019670:	3000391e 	bne	r6,zero,10019758 <_dtoa_r+0x924>
10019674:	01d00934 	movhi	r7,16420
10019678:	00209c40 	call	100209c4 <__muldf3>
1001967c:	000d883a 	mov	r6,zero
10019680:	000f883a 	mov	r7,zero
10019684:	1009883a 	mov	r4,r2
10019688:	180b883a 	mov	r5,r3
1001968c:	1027883a 	mov	r19,r2
10019690:	1829883a 	mov	r20,r3
10019694:	00207640 	call	10020764 <__eqdf2>
10019698:	103f7826 	beq	r2,zero,1001947c <_dtoa_r+0x648>
1001969c:	d8c00617 	ldw	r3,24(sp)
100196a0:	8805883a 	mov	r2,r17
100196a4:	dd400115 	stw	r21,4(sp)
100196a8:	8c400084 	addi	r17,r17,2
100196ac:	10ed883a 	add	r22,r2,r3
100196b0:	00000a06 	br	100196dc <_dtoa_r+0x8a8>
100196b4:	00209c40 	call	100209c4 <__muldf3>
100196b8:	000d883a 	mov	r6,zero
100196bc:	000f883a 	mov	r7,zero
100196c0:	1009883a 	mov	r4,r2
100196c4:	180b883a 	mov	r5,r3
100196c8:	1027883a 	mov	r19,r2
100196cc:	1829883a 	mov	r20,r3
100196d0:	8c400044 	addi	r17,r17,1
100196d4:	00207640 	call	10020764 <__eqdf2>
100196d8:	10029d26 	beq	r2,zero,1001a150 <_dtoa_r+0x131c>
100196dc:	800d883a 	mov	r6,r16
100196e0:	900f883a 	mov	r7,r18
100196e4:	9809883a 	mov	r4,r19
100196e8:	a00b883a 	mov	r5,r20
100196ec:	001febc0 	call	1001febc <__divdf3>
100196f0:	180b883a 	mov	r5,r3
100196f4:	1009883a 	mov	r4,r2
100196f8:	0021a100 	call	10021a10 <__fixdfsi>
100196fc:	1009883a 	mov	r4,r2
10019700:	102b883a 	mov	r21,r2
10019704:	0021a900 	call	10021a90 <__floatsidf>
10019708:	800d883a 	mov	r6,r16
1001970c:	900f883a 	mov	r7,r18
10019710:	1009883a 	mov	r4,r2
10019714:	180b883a 	mov	r5,r3
10019718:	00209c40 	call	100209c4 <__muldf3>
1001971c:	100d883a 	mov	r6,r2
10019720:	180f883a 	mov	r7,r3
10019724:	9809883a 	mov	r4,r19
10019728:	a00b883a 	mov	r5,r20
1001972c:	00210500 	call	10021050 <__subdf3>
10019730:	aa400c04 	addi	r9,r21,48
10019734:	8a7fffc5 	stb	r9,-1(r17)
10019738:	000d883a 	mov	r6,zero
1001973c:	01d00934 	movhi	r7,16420
10019740:	1009883a 	mov	r4,r2
10019744:	180b883a 	mov	r5,r3
10019748:	882f883a 	mov	r23,r17
1001974c:	b47fd91e 	bne	r22,r17,100196b4 <_dtoa_r+0x880>
10019750:	a82d883a 	mov	r22,r21
10019754:	dd400117 	ldw	r21,4(sp)
10019758:	100d883a 	mov	r6,r2
1001975c:	180f883a 	mov	r7,r3
10019760:	1009883a 	mov	r4,r2
10019764:	180b883a 	mov	r5,r3
10019768:	001f51c0 	call	1001f51c <__adddf3>
1001976c:	800d883a 	mov	r6,r16
10019770:	900f883a 	mov	r7,r18
10019774:	1009883a 	mov	r4,r2
10019778:	180b883a 	mov	r5,r3
1001977c:	1027883a 	mov	r19,r2
10019780:	1823883a 	mov	r17,r3
10019784:	00207e40 	call	100207e4 <__gedf2>
10019788:	00800816 	blt	zero,r2,100197ac <_dtoa_r+0x978>
1001978c:	800d883a 	mov	r6,r16
10019790:	900f883a 	mov	r7,r18
10019794:	9809883a 	mov	r4,r19
10019798:	880b883a 	mov	r5,r17
1001979c:	00207640 	call	10020764 <__eqdf2>
100197a0:	103f361e 	bne	r2,zero,1001947c <_dtoa_r+0x648>
100197a4:	b580004c 	andi	r22,r22,1
100197a8:	b03f3426 	beq	r22,zero,1001947c <_dtoa_r+0x648>
100197ac:	ba3fffc3 	ldbu	r8,-1(r23)
100197b0:	d9000317 	ldw	r4,12(sp)
100197b4:	00000306 	br	100197c4 <_dtoa_r+0x990>
100197b8:	20c30e26 	beq	r4,r3,1001a3f4 <_dtoa_r+0x15c0>
100197bc:	1a3fffc3 	ldbu	r8,-1(r3)
100197c0:	182f883a 	mov	r23,r3
100197c4:	40803fcc 	andi	r2,r8,255
100197c8:	1080201c 	xori	r2,r2,128
100197cc:	10bfe004 	addi	r2,r2,-128
100197d0:	10800e60 	cmpeqi	r2,r2,57
100197d4:	b8ffffc4 	addi	r3,r23,-1
100197d8:	103ff71e 	bne	r2,zero,100197b8 <_dtoa_r+0x984>
100197dc:	42000044 	addi	r8,r8,1
100197e0:	1a000005 	stb	r8,0(r3)
100197e4:	003f2506 	br	1001947c <_dtoa_r+0x648>
100197e8:	d8c00717 	ldw	r3,28(sp)
100197ec:	1800e426 	beq	r3,zero,10019b80 <_dtoa_r+0xd4c>
100197f0:	d8c00217 	ldw	r3,8(sp)
100197f4:	18c00088 	cmpgei	r3,r3,2
100197f8:	1801ec26 	beq	r3,zero,10019fac <_dtoa_r+0x1178>
100197fc:	d8800617 	ldw	r2,24(sp)
10019800:	14bfffc4 	addi	r18,r2,-1
10019804:	d8800817 	ldw	r2,32(sp)
10019808:	1481c50e 	bge	r2,r18,10019f20 <_dtoa_r+0x10ec>
1001980c:	d8800817 	ldw	r2,32(sp)
10019810:	dc800815 	stw	r18,32(sp)
10019814:	9085c83a 	sub	r2,r18,r2
10019818:	b0ad883a 	add	r22,r22,r2
1001981c:	0025883a 	mov	r18,zero
10019820:	d8800617 	ldw	r2,24(sp)
10019824:	10024c16 	blt	r2,zero,1001a158 <_dtoa_r+0x1324>
10019828:	d8c00517 	ldw	r3,20(sp)
1001982c:	a0a9883a 	add	r20,r20,r2
10019830:	1885883a 	add	r2,r3,r2
10019834:	1827883a 	mov	r19,r3
10019838:	d8800515 	stw	r2,20(sp)
1001983c:	01400044 	movi	r5,1
10019840:	e009883a 	mov	r4,fp
10019844:	001baa40 	call	1001baa4 <__i2b>
10019848:	1021883a 	mov	r16,r2
1001984c:	04c0080e 	bge	zero,r19,10019870 <_dtoa_r+0xa3c>
10019850:	0500070e 	bge	zero,r20,10019870 <_dtoa_r+0xa3c>
10019854:	9805883a 	mov	r2,r19
10019858:	a4c1a916 	blt	r20,r19,10019f00 <_dtoa_r+0x10cc>
1001985c:	d8c00517 	ldw	r3,20(sp)
10019860:	98a7c83a 	sub	r19,r19,r2
10019864:	a0a9c83a 	sub	r20,r20,r2
10019868:	1887c83a 	sub	r3,r3,r2
1001986c:	d8c00515 	stw	r3,20(sp)
10019870:	d8800817 	ldw	r2,32(sp)
10019874:	10001426 	beq	r2,zero,100198c8 <_dtoa_r+0xa94>
10019878:	d8800717 	ldw	r2,28(sp)
1001987c:	10017226 	beq	r2,zero,10019e48 <_dtoa_r+0x1014>
10019880:	04800e0e 	bge	zero,r18,100198bc <_dtoa_r+0xa88>
10019884:	800b883a 	mov	r5,r16
10019888:	900d883a 	mov	r6,r18
1001988c:	e009883a 	mov	r4,fp
10019890:	001bcc40 	call	1001bcc4 <__pow5mult>
10019894:	a80d883a 	mov	r6,r21
10019898:	100b883a 	mov	r5,r2
1001989c:	e009883a 	mov	r4,fp
100198a0:	1021883a 	mov	r16,r2
100198a4:	001bad80 	call	1001bad8 <__multiply>
100198a8:	102f883a 	mov	r23,r2
100198ac:	a80b883a 	mov	r5,r21
100198b0:	e009883a 	mov	r4,fp
100198b4:	001b7480 	call	1001b748 <_Bfree>
100198b8:	b82b883a 	mov	r21,r23
100198bc:	d8800817 	ldw	r2,32(sp)
100198c0:	148dc83a 	sub	r6,r2,r18
100198c4:	3001611e 	bne	r6,zero,10019e4c <_dtoa_r+0x1018>
100198c8:	01400044 	movi	r5,1
100198cc:	e009883a 	mov	r4,fp
100198d0:	001baa40 	call	1001baa4 <__i2b>
100198d4:	1025883a 	mov	r18,r2
100198d8:	0580bc16 	blt	zero,r22,10019bcc <_dtoa_r+0xd98>
100198dc:	d8800217 	ldw	r2,8(sp)
100198e0:	10800088 	cmpgei	r2,r2,2
100198e4:	10016526 	beq	r2,zero,10019e7c <_dtoa_r+0x1048>
100198e8:	0023883a 	mov	r17,zero
100198ec:	00800044 	movi	r2,1
100198f0:	b000bf1e 	bne	r22,zero,10019bf0 <_dtoa_r+0xdbc>
100198f4:	1505883a 	add	r2,r2,r20
100198f8:	108007cc 	andi	r2,r2,31
100198fc:	1000aa26 	beq	r2,zero,10019ba8 <_dtoa_r+0xd74>
10019900:	00c00804 	movi	r3,32
10019904:	1887c83a 	sub	r3,r3,r2
10019908:	19000150 	cmplti	r4,r3,5
1001990c:	2002f61e 	bne	r4,zero,1001a4e8 <_dtoa_r+0x16b4>
10019910:	00c00704 	movi	r3,28
10019914:	1885c83a 	sub	r2,r3,r2
10019918:	d8c00517 	ldw	r3,20(sp)
1001991c:	98a7883a 	add	r19,r19,r2
10019920:	a0a9883a 	add	r20,r20,r2
10019924:	1887883a 	add	r3,r3,r2
10019928:	d8c00515 	stw	r3,20(sp)
1001992c:	d8800517 	ldw	r2,20(sp)
10019930:	00809716 	blt	zero,r2,10019b90 <_dtoa_r+0xd5c>
10019934:	0500050e 	bge	zero,r20,1001994c <_dtoa_r+0xb18>
10019938:	900b883a 	mov	r5,r18
1001993c:	a00d883a 	mov	r6,r20
10019940:	e009883a 	mov	r4,fp
10019944:	001bdec0 	call	1001bdec <__lshift>
10019948:	1025883a 	mov	r18,r2
1001994c:	d8800917 	ldw	r2,36(sp)
10019950:	10012b1e 	bne	r2,zero,10019e00 <_dtoa_r+0xfcc>
10019954:	d8800617 	ldw	r2,24(sp)
10019958:	00810d0e 	bge	zero,r2,10019d90 <_dtoa_r+0xf5c>
1001995c:	d8800417 	ldw	r2,16(sp)
10019960:	10800044 	addi	r2,r2,1
10019964:	d8800415 	stw	r2,16(sp)
10019968:	d8800717 	ldw	r2,28(sp)
1001996c:	1000b21e 	bne	r2,zero,10019c38 <_dtoa_r+0xe04>
10019970:	ddc00317 	ldw	r23,12(sp)
10019974:	04400044 	movi	r17,1
10019978:	dcc00617 	ldw	r19,24(sp)
1001997c:	00000306 	br	1001998c <_dtoa_r+0xb58>
10019980:	001b76c0 	call	1001b76c <__multadd>
10019984:	102b883a 	mov	r21,r2
10019988:	8c400044 	addi	r17,r17,1
1001998c:	900b883a 	mov	r5,r18
10019990:	a809883a 	mov	r4,r21
10019994:	0018c240 	call	10018c24 <quorem>
10019998:	10800c04 	addi	r2,r2,48
1001999c:	bdc00044 	addi	r23,r23,1
100199a0:	b8bfffc5 	stb	r2,-1(r23)
100199a4:	000f883a 	mov	r7,zero
100199a8:	01800284 	movi	r6,10
100199ac:	a80b883a 	mov	r5,r21
100199b0:	e009883a 	mov	r4,fp
100199b4:	8cfff216 	blt	r17,r19,10019980 <_dtoa_r+0xb4c>
100199b8:	1011883a 	mov	r8,r2
100199bc:	0029883a 	mov	r20,zero
100199c0:	a80b883a 	mov	r5,r21
100199c4:	01800044 	movi	r6,1
100199c8:	e009883a 	mov	r4,fp
100199cc:	da000115 	stw	r8,4(sp)
100199d0:	001bdec0 	call	1001bdec <__lshift>
100199d4:	900b883a 	mov	r5,r18
100199d8:	1009883a 	mov	r4,r2
100199dc:	102b883a 	mov	r21,r2
100199e0:	001bf280 	call	1001bf28 <__mcmp>
100199e4:	b8ffffc3 	ldbu	r3,-1(r23)
100199e8:	0081610e 	bge	zero,r2,10019f70 <_dtoa_r+0x113c>
100199ec:	d9400317 	ldw	r5,12(sp)
100199f0:	00000306 	br	10019a00 <_dtoa_r+0xbcc>
100199f4:	29017726 	beq	r5,r4,10019fd4 <_dtoa_r+0x11a0>
100199f8:	20ffffc3 	ldbu	r3,-1(r4)
100199fc:	202f883a 	mov	r23,r4
10019a00:	18803fcc 	andi	r2,r3,255
10019a04:	1080201c 	xori	r2,r2,128
10019a08:	10bfe004 	addi	r2,r2,-128
10019a0c:	10800e60 	cmpeqi	r2,r2,57
10019a10:	b93fffc4 	addi	r4,r23,-1
10019a14:	103ff71e 	bne	r2,zero,100199f4 <_dtoa_r+0xbc0>
10019a18:	18c00044 	addi	r3,r3,1
10019a1c:	20c00005 	stb	r3,0(r4)
10019a20:	900b883a 	mov	r5,r18
10019a24:	e009883a 	mov	r4,fp
10019a28:	001b7480 	call	1001b748 <_Bfree>
10019a2c:	803e9326 	beq	r16,zero,1001947c <_dtoa_r+0x648>
10019a30:	a0000426 	beq	r20,zero,10019a44 <_dtoa_r+0xc10>
10019a34:	a4000326 	beq	r20,r16,10019a44 <_dtoa_r+0xc10>
10019a38:	a00b883a 	mov	r5,r20
10019a3c:	e009883a 	mov	r4,fp
10019a40:	001b7480 	call	1001b748 <_Bfree>
10019a44:	800b883a 	mov	r5,r16
10019a48:	e009883a 	mov	r4,fp
10019a4c:	001b7480 	call	1001b748 <_Bfree>
10019a50:	003e8a06 	br	1001947c <_dtoa_r+0x648>
10019a54:	d8000915 	stw	zero,36(sp)
10019a58:	a0003616 	blt	r20,zero,10019b34 <_dtoa_r+0xd00>
10019a5c:	d8000515 	stw	zero,20(sp)
10019a60:	d8c00217 	ldw	r3,8(sp)
10019a64:	dd800415 	stw	r22,16(sp)
10019a68:	d8000815 	stw	zero,32(sp)
10019a6c:	188002a8 	cmpgeui	r2,r3,10
10019a70:	a5a9883a 	add	r20,r20,r22
10019a74:	103d9726 	beq	r2,zero,100190d4 <_dtoa_r+0x2a0>
10019a78:	00800044 	movi	r2,1
10019a7c:	d8800715 	stw	r2,28(sp)
10019a80:	00bfffc4 	movi	r2,-1
10019a84:	04bfffc4 	movi	r18,-1
10019a88:	04000044 	movi	r16,1
10019a8c:	d8000215 	stw	zero,8(sp)
10019a90:	d8800615 	stw	r2,24(sp)
10019a94:	d8001e15 	stw	zero,120(sp)
10019a98:	d8800617 	ldw	r2,24(sp)
10019a9c:	e0001115 	stw	zero,68(fp)
10019aa0:	000b883a 	mov	r5,zero
10019aa4:	d8800b15 	stw	r2,44(sp)
10019aa8:	003daa06 	br	10019154 <_dtoa_r+0x320>
10019aac:	18800160 	cmpeqi	r2,r3,5
10019ab0:	00c00044 	movi	r3,1
10019ab4:	d8c00715 	stw	r3,28(sp)
10019ab8:	10000d26 	beq	r2,zero,10019af0 <_dtoa_r+0xcbc>
10019abc:	d8801e17 	ldw	r2,120(sp)
10019ac0:	d8c00417 	ldw	r3,16(sp)
10019ac4:	10c5883a 	add	r2,r2,r3
10019ac8:	d8800b15 	stw	r2,44(sp)
10019acc:	10800044 	addi	r2,r2,1
10019ad0:	d8800615 	stw	r2,24(sp)
10019ad4:	100d883a 	mov	r6,r2
10019ad8:	00bd9216 	blt	zero,r2,10019124 <_dtoa_r+0x2f0>
10019adc:	01800044 	movi	r6,1
10019ae0:	003d9006 	br	10019124 <_dtoa_r+0x2f0>
10019ae4:	188000a0 	cmpeqi	r2,r3,2
10019ae8:	d8000715 	stw	zero,28(sp)
10019aec:	103d881e 	bne	r2,zero,10019110 <_dtoa_r+0x2dc>
10019af0:	e0001115 	stw	zero,68(fp)
10019af4:	000b883a 	mov	r5,zero
10019af8:	e009883a 	mov	r4,fp
10019afc:	001b6a40 	call	1001b6a4 <_Balloc>
10019b00:	d8800315 	stw	r2,12(sp)
10019b04:	e0801015 	stw	r2,64(fp)
10019b08:	00bfffc4 	movi	r2,-1
10019b0c:	d8800b15 	stw	r2,44(sp)
10019b10:	00800044 	movi	r2,1
10019b14:	d8800715 	stw	r2,28(sp)
10019b18:	00bfffc4 	movi	r2,-1
10019b1c:	d8001e15 	stw	zero,120(sp)
10019b20:	d8800615 	stw	r2,24(sp)
10019b24:	003e8f06 	br	10019564 <_dtoa_r+0x730>
10019b28:	00800044 	movi	r2,1
10019b2c:	d8800915 	stw	r2,36(sp)
10019b30:	a03d5c0e 	bge	r20,zero,100190a4 <_dtoa_r+0x270>
10019b34:	04800044 	movi	r18,1
10019b38:	9405c83a 	sub	r2,r18,r16
10019b3c:	d8800515 	stw	r2,20(sp)
10019b40:	0029883a 	mov	r20,zero
10019b44:	003d5806 	br	100190a8 <_dtoa_r+0x274>
10019b48:	b009883a 	mov	r4,r22
10019b4c:	0021a900 	call	10021a90 <__floatsidf>
10019b50:	a00d883a 	mov	r6,r20
10019b54:	980f883a 	mov	r7,r19
10019b58:	1009883a 	mov	r4,r2
10019b5c:	180b883a 	mov	r5,r3
10019b60:	00207640 	call	10020764 <__eqdf2>
10019b64:	103d3e26 	beq	r2,zero,10019060 <_dtoa_r+0x22c>
10019b68:	b5bfffc4 	addi	r22,r22,-1
10019b6c:	003d3c06 	br	10019060 <_dtoa_r+0x22c>
10019b70:	008400b4 	movhi	r2,4098
10019b74:	1096d804 	addi	r2,r2,23392
10019b78:	d8800315 	stw	r2,12(sp)
10019b7c:	003cdf06 	br	10018efc <_dtoa_r+0xc8>
10019b80:	dc800817 	ldw	r18,32(sp)
10019b84:	dcc00517 	ldw	r19,20(sp)
10019b88:	0021883a 	mov	r16,zero
10019b8c:	003f2f06 	br	1001984c <_dtoa_r+0xa18>
10019b90:	a80b883a 	mov	r5,r21
10019b94:	100d883a 	mov	r6,r2
10019b98:	e009883a 	mov	r4,fp
10019b9c:	001bdec0 	call	1001bdec <__lshift>
10019ba0:	102b883a 	mov	r21,r2
10019ba4:	003f6306 	br	10019934 <_dtoa_r+0xb00>
10019ba8:	00800704 	movi	r2,28
10019bac:	003f5a06 	br	10019918 <_dtoa_r+0xae4>
10019bb0:	01000804 	movi	r4,32
10019bb4:	2089c83a 	sub	r4,r4,r2
10019bb8:	d8800117 	ldw	r2,4(sp)
10019bbc:	1108983a 	sll	r4,r2,r4
10019bc0:	003cf306 	br	10018f90 <_dtoa_r+0x15c>
10019bc4:	04000044 	movi	r16,1
10019bc8:	003d4706 	br	100190e8 <_dtoa_r+0x2b4>
10019bcc:	b00d883a 	mov	r6,r22
10019bd0:	100b883a 	mov	r5,r2
10019bd4:	e009883a 	mov	r4,fp
10019bd8:	001bcc40 	call	1001bcc4 <__pow5mult>
10019bdc:	1025883a 	mov	r18,r2
10019be0:	d8800217 	ldw	r2,8(sp)
10019be4:	10800090 	cmplti	r2,r2,2
10019be8:	10012f1e 	bne	r2,zero,1001a0a8 <_dtoa_r+0x1274>
10019bec:	0023883a 	mov	r17,zero
10019bf0:	90800417 	ldw	r2,16(r18)
10019bf4:	10800104 	addi	r2,r2,4
10019bf8:	100490ba 	slli	r2,r2,2
10019bfc:	9085883a 	add	r2,r18,r2
10019c00:	11000017 	ldw	r4,0(r2)
10019c04:	001b9900 	call	1001b990 <__hi0bits>
10019c08:	00c00804 	movi	r3,32
10019c0c:	1885c83a 	sub	r2,r3,r2
10019c10:	003f3806 	br	100198f4 <_dtoa_r+0xac0>
10019c14:	800b883a 	mov	r5,r16
10019c18:	000f883a 	mov	r7,zero
10019c1c:	01800284 	movi	r6,10
10019c20:	e009883a 	mov	r4,fp
10019c24:	001b76c0 	call	1001b76c <__multadd>
10019c28:	1021883a 	mov	r16,r2
10019c2c:	d8800b17 	ldw	r2,44(sp)
10019c30:	00821b0e 	bge	zero,r2,1001a4a0 <_dtoa_r+0x166c>
10019c34:	d8800615 	stw	r2,24(sp)
10019c38:	04c0b316 	blt	zero,r19,10019f08 <_dtoa_r+0x10d4>
10019c3c:	8801341e 	bne	r17,zero,1001a110 <_dtoa_r+0x12dc>
10019c40:	8027883a 	mov	r19,r16
10019c44:	dc400317 	ldw	r17,12(sp)
10019c48:	d8c00617 	ldw	r3,24(sp)
10019c4c:	d8800117 	ldw	r2,4(sp)
10019c50:	8dffffc4 	addi	r23,r17,-1
10019c54:	b8c7883a 	add	r3,r23,r3
10019c58:	d8c00615 	stw	r3,24(sp)
10019c5c:	d8c00217 	ldw	r3,8(sp)
10019c60:	1080004c 	andi	r2,r2,1
10019c64:	d8800815 	stw	r2,32(sp)
10019c68:	10c4b03a 	or	r2,r2,r3
10019c6c:	d8800715 	stw	r2,28(sp)
10019c70:	00002c06 	br	10019d24 <_dtoa_r+0xef0>
10019c74:	b80b883a 	mov	r5,r23
10019c78:	a809883a 	mov	r4,r21
10019c7c:	da000515 	stw	r8,20(sp)
10019c80:	001bf280 	call	1001bf28 <__mcmp>
10019c84:	b80b883a 	mov	r5,r23
10019c88:	e009883a 	mov	r4,fp
10019c8c:	d8800115 	stw	r2,4(sp)
10019c90:	001b7480 	call	1001b748 <_Bfree>
10019c94:	d8800117 	ldw	r2,4(sp)
10019c98:	da000517 	ldw	r8,20(sp)
10019c9c:	1000021e 	bne	r2,zero,10019ca8 <_dtoa_r+0xe74>
10019ca0:	d8c00717 	ldw	r3,28(sp)
10019ca4:	1801f226 	beq	r3,zero,1001a470 <_dtoa_r+0x163c>
10019ca8:	8dc00044 	addi	r23,r17,1
10019cac:	a0010516 	blt	r20,zero,1001a0c4 <_dtoa_r+0x1290>
10019cb0:	d8c00217 	ldw	r3,8(sp)
10019cb4:	a0e8b03a 	or	r20,r20,r3
10019cb8:	d8c00817 	ldw	r3,32(sp)
10019cbc:	1d28b03a 	or	r20,r3,r20
10019cc0:	a0010026 	beq	r20,zero,1001a0c4 <_dtoa_r+0x1290>
10019cc4:	00812816 	blt	zero,r2,1001a168 <_dtoa_r+0x1334>
10019cc8:	d8800617 	ldw	r2,24(sp)
10019ccc:	8a000005 	stb	r8,0(r17)
10019cd0:	14412926 	beq	r2,r17,1001a178 <_dtoa_r+0x1344>
10019cd4:	a80b883a 	mov	r5,r21
10019cd8:	000f883a 	mov	r7,zero
10019cdc:	01800284 	movi	r6,10
10019ce0:	e009883a 	mov	r4,fp
10019ce4:	001b76c0 	call	1001b76c <__multadd>
10019ce8:	102b883a 	mov	r21,r2
10019cec:	000f883a 	mov	r7,zero
10019cf0:	01800284 	movi	r6,10
10019cf4:	800b883a 	mov	r5,r16
10019cf8:	e009883a 	mov	r4,fp
10019cfc:	84c02026 	beq	r16,r19,10019d80 <_dtoa_r+0xf4c>
10019d00:	001b76c0 	call	1001b76c <__multadd>
10019d04:	980b883a 	mov	r5,r19
10019d08:	000f883a 	mov	r7,zero
10019d0c:	01800284 	movi	r6,10
10019d10:	e009883a 	mov	r4,fp
10019d14:	1021883a 	mov	r16,r2
10019d18:	001b76c0 	call	1001b76c <__multadd>
10019d1c:	1027883a 	mov	r19,r2
10019d20:	b823883a 	mov	r17,r23
10019d24:	900b883a 	mov	r5,r18
10019d28:	a809883a 	mov	r4,r21
10019d2c:	0018c240 	call	10018c24 <quorem>
10019d30:	800b883a 	mov	r5,r16
10019d34:	a809883a 	mov	r4,r21
10019d38:	102d883a 	mov	r22,r2
10019d3c:	001bf280 	call	1001bf28 <__mcmp>
10019d40:	980d883a 	mov	r6,r19
10019d44:	900b883a 	mov	r5,r18
10019d48:	e009883a 	mov	r4,fp
10019d4c:	1029883a 	mov	r20,r2
10019d50:	001bf800 	call	1001bf80 <__mdiff>
10019d54:	102f883a 	mov	r23,r2
10019d58:	10800317 	ldw	r2,12(r2)
10019d5c:	b2000c04 	addi	r8,r22,48
10019d60:	103fc426 	beq	r2,zero,10019c74 <_dtoa_r+0xe40>
10019d64:	b80b883a 	mov	r5,r23
10019d68:	e009883a 	mov	r4,fp
10019d6c:	da000115 	stw	r8,4(sp)
10019d70:	001b7480 	call	1001b748 <_Bfree>
10019d74:	00800044 	movi	r2,1
10019d78:	da000117 	ldw	r8,4(sp)
10019d7c:	003fca06 	br	10019ca8 <_dtoa_r+0xe74>
10019d80:	001b76c0 	call	1001b76c <__multadd>
10019d84:	1021883a 	mov	r16,r2
10019d88:	1027883a 	mov	r19,r2
10019d8c:	003fe406 	br	10019d20 <_dtoa_r+0xeec>
10019d90:	d8800217 	ldw	r2,8(sp)
10019d94:	108000d0 	cmplti	r2,r2,3
10019d98:	10004b1e 	bne	r2,zero,10019ec8 <_dtoa_r+0x1094>
10019d9c:	d8800617 	ldw	r2,24(sp)
10019da0:	103e0d1e 	bne	r2,zero,100195d8 <_dtoa_r+0x7a4>
10019da4:	900b883a 	mov	r5,r18
10019da8:	e009883a 	mov	r4,fp
10019dac:	000f883a 	mov	r7,zero
10019db0:	01800144 	movi	r6,5
10019db4:	001b76c0 	call	1001b76c <__multadd>
10019db8:	100b883a 	mov	r5,r2
10019dbc:	a809883a 	mov	r4,r21
10019dc0:	1025883a 	mov	r18,r2
10019dc4:	001bf280 	call	1001bf28 <__mcmp>
10019dc8:	00be030e 	bge	zero,r2,100195d8 <_dtoa_r+0x7a4>
10019dcc:	d8c00317 	ldw	r3,12(sp)
10019dd0:	00800c44 	movi	r2,49
10019dd4:	18800005 	stb	r2,0(r3)
10019dd8:	d8800417 	ldw	r2,16(sp)
10019ddc:	1dc00044 	addi	r23,r3,1
10019de0:	14400044 	addi	r17,r2,1
10019de4:	900b883a 	mov	r5,r18
10019de8:	e009883a 	mov	r4,fp
10019dec:	001b7480 	call	1001b748 <_Bfree>
10019df0:	88800044 	addi	r2,r17,1
10019df4:	d8800415 	stw	r2,16(sp)
10019df8:	803f121e 	bne	r16,zero,10019a44 <_dtoa_r+0xc10>
10019dfc:	003d9f06 	br	1001947c <_dtoa_r+0x648>
10019e00:	900b883a 	mov	r5,r18
10019e04:	a809883a 	mov	r4,r21
10019e08:	001bf280 	call	1001bf28 <__mcmp>
10019e0c:	103ed10e 	bge	r2,zero,10019954 <_dtoa_r+0xb20>
10019e10:	a80b883a 	mov	r5,r21
10019e14:	000f883a 	mov	r7,zero
10019e18:	01800284 	movi	r6,10
10019e1c:	e009883a 	mov	r4,fp
10019e20:	001b76c0 	call	1001b76c <__multadd>
10019e24:	102b883a 	mov	r21,r2
10019e28:	d8800417 	ldw	r2,16(sp)
10019e2c:	153fffc4 	addi	r20,r2,-1
10019e30:	d8800717 	ldw	r2,28(sp)
10019e34:	103f771e 	bne	r2,zero,10019c14 <_dtoa_r+0xde0>
10019e38:	d8800b17 	ldw	r2,44(sp)
10019e3c:	0081910e 	bge	zero,r2,1001a484 <_dtoa_r+0x1650>
10019e40:	d8800615 	stw	r2,24(sp)
10019e44:	003eca06 	br	10019970 <_dtoa_r+0xb3c>
10019e48:	d9800817 	ldw	r6,32(sp)
10019e4c:	a80b883a 	mov	r5,r21
10019e50:	e009883a 	mov	r4,fp
10019e54:	001bcc40 	call	1001bcc4 <__pow5mult>
10019e58:	102b883a 	mov	r21,r2
10019e5c:	003e9a06 	br	100198c8 <_dtoa_r+0xa94>
10019e60:	008400b4 	movhi	r2,4098
10019e64:	1007883a 	mov	r3,r2
10019e68:	18d78104 	addi	r3,r3,24068
10019e6c:	008400b4 	movhi	r2,4098
10019e70:	d8c00315 	stw	r3,12(sp)
10019e74:	109781c4 	addi	r2,r2,24071
10019e78:	003da506 	br	10019510 <_dtoa_r+0x6dc>
10019e7c:	d8800117 	ldw	r2,4(sp)
10019e80:	103e991e 	bne	r2,zero,100198e8 <_dtoa_r+0xab4>
10019e84:	00800434 	movhi	r2,16
10019e88:	10bfffc4 	addi	r2,r2,-1
10019e8c:	8884703a 	and	r2,r17,r2
10019e90:	103e951e 	bne	r2,zero,100198e8 <_dtoa_r+0xab4>
10019e94:	8c5ffc2c 	andhi	r17,r17,32752
10019e98:	883e9326 	beq	r17,zero,100198e8 <_dtoa_r+0xab4>
10019e9c:	d8800517 	ldw	r2,20(sp)
10019ea0:	a5000044 	addi	r20,r20,1
10019ea4:	04400044 	movi	r17,1
10019ea8:	10800044 	addi	r2,r2,1
10019eac:	d8800515 	stw	r2,20(sp)
10019eb0:	003e8e06 	br	100198ec <_dtoa_r+0xab8>
10019eb4:	00800044 	movi	r2,1
10019eb8:	04800044 	movi	r18,1
10019ebc:	d8800615 	stw	r2,24(sp)
10019ec0:	d8801e15 	stw	r2,120(sp)
10019ec4:	003ef406 	br	10019a98 <_dtoa_r+0xc64>
10019ec8:	d8800417 	ldw	r2,16(sp)
10019ecc:	10800044 	addi	r2,r2,1
10019ed0:	d8800415 	stw	r2,16(sp)
10019ed4:	d8800717 	ldw	r2,28(sp)
10019ed8:	103f571e 	bne	r2,zero,10019c38 <_dtoa_r+0xe04>
10019edc:	900b883a 	mov	r5,r18
10019ee0:	a809883a 	mov	r4,r21
10019ee4:	0018c240 	call	10018c24 <quorem>
10019ee8:	12000c04 	addi	r8,r2,48
10019eec:	d8800317 	ldw	r2,12(sp)
10019ef0:	0029883a 	mov	r20,zero
10019ef4:	15c00044 	addi	r23,r2,1
10019ef8:	12000005 	stb	r8,0(r2)
10019efc:	003eb006 	br	100199c0 <_dtoa_r+0xb8c>
10019f00:	a005883a 	mov	r2,r20
10019f04:	003e5506 	br	1001985c <_dtoa_r+0xa28>
10019f08:	800b883a 	mov	r5,r16
10019f0c:	980d883a 	mov	r6,r19
10019f10:	e009883a 	mov	r4,fp
10019f14:	001bdec0 	call	1001bdec <__lshift>
10019f18:	1021883a 	mov	r16,r2
10019f1c:	003f4706 	br	10019c3c <_dtoa_r+0xe08>
10019f20:	14a5c83a 	sub	r18,r2,r18
10019f24:	003e3e06 	br	10019820 <_dtoa_r+0x9ec>
10019f28:	008400b4 	movhi	r2,4098
10019f2c:	10979204 	addi	r2,r2,24136
10019f30:	11800817 	ldw	r6,32(r2)
10019f34:	11c00917 	ldw	r7,36(r2)
10019f38:	d9000117 	ldw	r4,4(sp)
10019f3c:	880b883a 	mov	r5,r17
10019f40:	da400e15 	stw	r9,56(sp)
10019f44:	da800d15 	stw	r10,52(sp)
10019f48:	001febc0 	call	1001febc <__divdf3>
10019f4c:	d8800c15 	stw	r2,48(sp)
10019f50:	1827883a 	mov	r19,r3
10019f54:	bdc003cc 	andi	r23,r23,15
10019f58:	040000c4 	movi	r16,3
10019f5c:	da800d17 	ldw	r10,52(sp)
10019f60:	da400e17 	ldw	r9,56(sp)
10019f64:	003c9206 	br	100191b0 <_dtoa_r+0x37c>
10019f68:	d8000715 	stw	zero,28(sp)
10019f6c:	003ed306 	br	10019abc <_dtoa_r+0xc88>
10019f70:	1000031e 	bne	r2,zero,10019f80 <_dtoa_r+0x114c>
10019f74:	da000117 	ldw	r8,4(sp)
10019f78:	4200004c 	andi	r8,r8,1
10019f7c:	403e9b1e 	bne	r8,zero,100199ec <_dtoa_r+0xbb8>
10019f80:	1805883a 	mov	r2,r3
10019f84:	00000206 	br	10019f90 <_dtoa_r+0x115c>
10019f88:	b8bfff83 	ldbu	r2,-2(r23)
10019f8c:	182f883a 	mov	r23,r3
10019f90:	10803fcc 	andi	r2,r2,255
10019f94:	1080201c 	xori	r2,r2,128
10019f98:	10bfe004 	addi	r2,r2,-128
10019f9c:	10800c18 	cmpnei	r2,r2,48
10019fa0:	b8ffffc4 	addi	r3,r23,-1
10019fa4:	103ff826 	beq	r2,zero,10019f88 <_dtoa_r+0x1154>
10019fa8:	003e9d06 	br	10019a20 <_dtoa_r+0xbec>
10019fac:	d8c00a17 	ldw	r3,40(sp)
10019fb0:	1800bc26 	beq	r3,zero,1001a2a4 <_dtoa_r+0x1470>
10019fb4:	d8c00517 	ldw	r3,20(sp)
10019fb8:	10810cc4 	addi	r2,r2,1075
10019fbc:	a0a9883a 	add	r20,r20,r2
10019fc0:	1885883a 	add	r2,r3,r2
10019fc4:	1827883a 	mov	r19,r3
10019fc8:	dc800817 	ldw	r18,32(sp)
10019fcc:	d8800515 	stw	r2,20(sp)
10019fd0:	003e1a06 	br	1001983c <_dtoa_r+0xa08>
10019fd4:	d8c00317 	ldw	r3,12(sp)
10019fd8:	00800c44 	movi	r2,49
10019fdc:	18800005 	stb	r2,0(r3)
10019fe0:	d8800417 	ldw	r2,16(sp)
10019fe4:	10800044 	addi	r2,r2,1
10019fe8:	d8800415 	stw	r2,16(sp)
10019fec:	003e8c06 	br	10019a20 <_dtoa_r+0xbec>
10019ff0:	8009883a 	mov	r4,r16
10019ff4:	0021a900 	call	10021a90 <__floatsidf>
10019ff8:	900d883a 	mov	r6,r18
10019ffc:	980f883a 	mov	r7,r19
1001a000:	1009883a 	mov	r4,r2
1001a004:	180b883a 	mov	r5,r3
1001a008:	00209c40 	call	100209c4 <__muldf3>
1001a00c:	000d883a 	mov	r6,zero
1001a010:	01d00734 	movhi	r7,16412
1001a014:	1009883a 	mov	r4,r2
1001a018:	180b883a 	mov	r5,r3
1001a01c:	001f51c0 	call	1001f51c <__adddf3>
1001a020:	d8800c15 	stw	r2,48(sp)
1001a024:	00bf3034 	movhi	r2,64704
1001a028:	1885883a 	add	r2,r3,r2
1001a02c:	d8800d15 	stw	r2,52(sp)
1001a030:	9009883a 	mov	r4,r18
1001a034:	980b883a 	mov	r5,r19
1001a038:	000d883a 	mov	r6,zero
1001a03c:	01d00534 	movhi	r7,16404
1001a040:	00210500 	call	10021050 <__subdf3>
1001a044:	ddc00c17 	ldw	r23,48(sp)
1001a048:	dcc00d17 	ldw	r19,52(sp)
1001a04c:	1009883a 	mov	r4,r2
1001a050:	b80d883a 	mov	r6,r23
1001a054:	980f883a 	mov	r7,r19
1001a058:	180b883a 	mov	r5,r3
1001a05c:	1025883a 	mov	r18,r2
1001a060:	1821883a 	mov	r16,r3
1001a064:	00207e40 	call	100207e4 <__gedf2>
1001a068:	0080ee16 	blt	zero,r2,1001a424 <_dtoa_r+0x15f0>
1001a06c:	99e0003c 	xorhi	r7,r19,32768
1001a070:	b80d883a 	mov	r6,r23
1001a074:	9009883a 	mov	r4,r18
1001a078:	800b883a 	mov	r5,r16
1001a07c:	00208d40 	call	100208d4 <__ledf2>
1001a080:	103d380e 	bge	r2,zero,10019564 <_dtoa_r+0x730>
1001a084:	0025883a 	mov	r18,zero
1001a088:	0021883a 	mov	r16,zero
1001a08c:	003d5206 	br	100195d8 <_dtoa_r+0x7a4>
1001a090:	d8800417 	ldw	r2,16(sp)
1001a094:	1000ad1e 	bne	r2,zero,1001a34c <_dtoa_r+0x1518>
1001a098:	dc800117 	ldw	r18,4(sp)
1001a09c:	8827883a 	mov	r19,r17
1001a0a0:	04000084 	movi	r16,2
1001a0a4:	003c5b06 	br	10019214 <_dtoa_r+0x3e0>
1001a0a8:	d8800117 	ldw	r2,4(sp)
1001a0ac:	103ecf1e 	bne	r2,zero,10019bec <_dtoa_r+0xdb8>
1001a0b0:	00800434 	movhi	r2,16
1001a0b4:	10bfffc4 	addi	r2,r2,-1
1001a0b8:	8884703a 	and	r2,r17,r2
1001a0bc:	103f7526 	beq	r2,zero,10019e94 <_dtoa_r+0x1060>
1001a0c0:	003eca06 	br	10019bec <_dtoa_r+0xdb8>
1001a0c4:	00800e0e 	bge	zero,r2,1001a100 <_dtoa_r+0x12cc>
1001a0c8:	a80b883a 	mov	r5,r21
1001a0cc:	01800044 	movi	r6,1
1001a0d0:	e009883a 	mov	r4,fp
1001a0d4:	da000115 	stw	r8,4(sp)
1001a0d8:	001bdec0 	call	1001bdec <__lshift>
1001a0dc:	900b883a 	mov	r5,r18
1001a0e0:	1009883a 	mov	r4,r2
1001a0e4:	102b883a 	mov	r21,r2
1001a0e8:	001bf280 	call	1001bf28 <__mcmp>
1001a0ec:	da000117 	ldw	r8,4(sp)
1001a0f0:	0080d50e 	bge	zero,r2,1001a448 <_dtoa_r+0x1614>
1001a0f4:	42000e60 	cmpeqi	r8,r8,57
1001a0f8:	4000c31e 	bne	r8,zero,1001a408 <_dtoa_r+0x15d4>
1001a0fc:	b2000c44 	addi	r8,r22,49
1001a100:	8029883a 	mov	r20,r16
1001a104:	8a000005 	stb	r8,0(r17)
1001a108:	9821883a 	mov	r16,r19
1001a10c:	003e4406 	br	10019a20 <_dtoa_r+0xbec>
1001a110:	81400117 	ldw	r5,4(r16)
1001a114:	e009883a 	mov	r4,fp
1001a118:	001b6a40 	call	1001b6a4 <_Balloc>
1001a11c:	81800417 	ldw	r6,16(r16)
1001a120:	81400304 	addi	r5,r16,12
1001a124:	11000304 	addi	r4,r2,12
1001a128:	31800084 	addi	r6,r6,2
1001a12c:	300c90ba 	slli	r6,r6,2
1001a130:	1023883a 	mov	r17,r2
1001a134:	00157f80 	call	100157f8 <memcpy>
1001a138:	01800044 	movi	r6,1
1001a13c:	880b883a 	mov	r5,r17
1001a140:	e009883a 	mov	r4,fp
1001a144:	001bdec0 	call	1001bdec <__lshift>
1001a148:	1027883a 	mov	r19,r2
1001a14c:	003ebd06 	br	10019c44 <_dtoa_r+0xe10>
1001a150:	dd400117 	ldw	r21,4(sp)
1001a154:	003cc906 	br	1001947c <_dtoa_r+0x648>
1001a158:	d8800517 	ldw	r2,20(sp)
1001a15c:	d8c00617 	ldw	r3,24(sp)
1001a160:	10e7c83a 	sub	r19,r2,r3
1001a164:	003db506 	br	1001983c <_dtoa_r+0xa08>
1001a168:	40800e58 	cmpnei	r2,r8,57
1001a16c:	1000a626 	beq	r2,zero,1001a408 <_dtoa_r+0x15d4>
1001a170:	42000044 	addi	r8,r8,1
1001a174:	003fe206 	br	1001a100 <_dtoa_r+0x12cc>
1001a178:	8029883a 	mov	r20,r16
1001a17c:	9821883a 	mov	r16,r19
1001a180:	003e0f06 	br	100199c0 <_dtoa_r+0xb8c>
1001a184:	d9000c17 	ldw	r4,48(sp)
1001a188:	d9400d17 	ldw	r5,52(sp)
1001a18c:	da401015 	stw	r9,64(sp)
1001a190:	00209c40 	call	100209c4 <__muldf3>
1001a194:	d9000e17 	ldw	r4,56(sp)
1001a198:	d8c00d15 	stw	r3,52(sp)
1001a19c:	da401017 	ldw	r9,64(sp)
1001a1a0:	d8c00317 	ldw	r3,12(sp)
1001a1a4:	d8800c15 	stw	r2,48(sp)
1001a1a8:	20800058 	cmpnei	r2,r4,1
1001a1ac:	1a400005 	stb	r9,0(r3)
1001a1b0:	1907883a 	add	r3,r3,r4
1001a1b4:	1809883a 	mov	r4,r3
1001a1b8:	10001d26 	beq	r2,zero,1001a230 <_dtoa_r+0x13fc>
1001a1bc:	8007883a 	mov	r3,r16
1001a1c0:	9005883a 	mov	r2,r18
1001a1c4:	dc400e15 	stw	r17,56(sp)
1001a1c8:	2021883a 	mov	r16,r4
1001a1cc:	000d883a 	mov	r6,zero
1001a1d0:	01d00934 	movhi	r7,16420
1001a1d4:	1009883a 	mov	r4,r2
1001a1d8:	180b883a 	mov	r5,r3
1001a1dc:	00209c40 	call	100209c4 <__muldf3>
1001a1e0:	180b883a 	mov	r5,r3
1001a1e4:	1009883a 	mov	r4,r2
1001a1e8:	1825883a 	mov	r18,r3
1001a1ec:	1023883a 	mov	r17,r2
1001a1f0:	0021a100 	call	10021a10 <__fixdfsi>
1001a1f4:	1009883a 	mov	r4,r2
1001a1f8:	1027883a 	mov	r19,r2
1001a1fc:	0021a900 	call	10021a90 <__floatsidf>
1001a200:	100d883a 	mov	r6,r2
1001a204:	180f883a 	mov	r7,r3
1001a208:	8809883a 	mov	r4,r17
1001a20c:	900b883a 	mov	r5,r18
1001a210:	bdc00044 	addi	r23,r23,1
1001a214:	9cc00c04 	addi	r19,r19,48
1001a218:	00210500 	call	10021050 <__subdf3>
1001a21c:	bcffffc5 	stb	r19,-1(r23)
1001a220:	bc3fea1e 	bne	r23,r16,1001a1cc <_dtoa_r+0x1398>
1001a224:	dc400e17 	ldw	r17,56(sp)
1001a228:	1025883a 	mov	r18,r2
1001a22c:	1821883a 	mov	r16,r3
1001a230:	d9000c17 	ldw	r4,48(sp)
1001a234:	d9400d17 	ldw	r5,52(sp)
1001a238:	000d883a 	mov	r6,zero
1001a23c:	01cff834 	movhi	r7,16352
1001a240:	001f51c0 	call	1001f51c <__adddf3>
1001a244:	100d883a 	mov	r6,r2
1001a248:	180f883a 	mov	r7,r3
1001a24c:	9009883a 	mov	r4,r18
1001a250:	800b883a 	mov	r5,r16
1001a254:	00207e40 	call	100207e4 <__gedf2>
1001a258:	00807516 	blt	zero,r2,1001a430 <_dtoa_r+0x15fc>
1001a25c:	d9800c17 	ldw	r6,48(sp)
1001a260:	d9c00d17 	ldw	r7,52(sp)
1001a264:	0009883a 	mov	r4,zero
1001a268:	014ff834 	movhi	r5,16352
1001a26c:	00210500 	call	10021050 <__subdf3>
1001a270:	100d883a 	mov	r6,r2
1001a274:	180f883a 	mov	r7,r3
1001a278:	9009883a 	mov	r4,r18
1001a27c:	800b883a 	mov	r5,r16
1001a280:	00208d40 	call	100208d4 <__ledf2>
1001a284:	103cb70e 	bge	r2,zero,10019564 <_dtoa_r+0x730>
1001a288:	00000106 	br	1001a290 <_dtoa_r+0x145c>
1001a28c:	182f883a 	mov	r23,r3
1001a290:	b8bfffc7 	ldb	r2,-1(r23)
1001a294:	b8ffffc4 	addi	r3,r23,-1
1001a298:	10800c20 	cmpeqi	r2,r2,48
1001a29c:	103ffb1e 	bne	r2,zero,1001a28c <_dtoa_r+0x1458>
1001a2a0:	003c7306 	br	10019470 <_dtoa_r+0x63c>
1001a2a4:	d8c01217 	ldw	r3,72(sp)
1001a2a8:	d9000517 	ldw	r4,20(sp)
1001a2ac:	00800d84 	movi	r2,54
1001a2b0:	10c5c83a 	sub	r2,r2,r3
1001a2b4:	a0a9883a 	add	r20,r20,r2
1001a2b8:	2085883a 	add	r2,r4,r2
1001a2bc:	2027883a 	mov	r19,r4
1001a2c0:	dc800817 	ldw	r18,32(sp)
1001a2c4:	d8800515 	stw	r2,20(sp)
1001a2c8:	003d5c06 	br	1001983c <_dtoa_r+0xa08>
1001a2cc:	d8800617 	ldw	r2,24(sp)
1001a2d0:	103f4726 	beq	r2,zero,10019ff0 <_dtoa_r+0x11bc>
1001a2d4:	ddc00b17 	ldw	r23,44(sp)
1001a2d8:	05fca20e 	bge	zero,r23,10019564 <_dtoa_r+0x730>
1001a2dc:	980b883a 	mov	r5,r19
1001a2e0:	000d883a 	mov	r6,zero
1001a2e4:	01d00934 	movhi	r7,16420
1001a2e8:	9009883a 	mov	r4,r18
1001a2ec:	00209c40 	call	100209c4 <__muldf3>
1001a2f0:	81000044 	addi	r4,r16,1
1001a2f4:	1025883a 	mov	r18,r2
1001a2f8:	1827883a 	mov	r19,r3
1001a2fc:	0021a900 	call	10021a90 <__floatsidf>
1001a300:	900d883a 	mov	r6,r18
1001a304:	980f883a 	mov	r7,r19
1001a308:	1009883a 	mov	r4,r2
1001a30c:	180b883a 	mov	r5,r3
1001a310:	00209c40 	call	100209c4 <__muldf3>
1001a314:	000d883a 	mov	r6,zero
1001a318:	01d00734 	movhi	r7,16412
1001a31c:	1009883a 	mov	r4,r2
1001a320:	180b883a 	mov	r5,r3
1001a324:	001f51c0 	call	1001f51c <__adddf3>
1001a328:	d8800c15 	stw	r2,48(sp)
1001a32c:	d8800417 	ldw	r2,16(sp)
1001a330:	ddc00e15 	stw	r23,56(sp)
1001a334:	10bfffc4 	addi	r2,r2,-1
1001a338:	d8800f15 	stw	r2,60(sp)
1001a33c:	00bf3034 	movhi	r2,64704
1001a340:	1885883a 	add	r2,r3,r2
1001a344:	d8800d15 	stw	r2,52(sp)
1001a348:	003bd006 	br	1001928c <_dtoa_r+0x458>
1001a34c:	d8800417 	ldw	r2,16(sp)
1001a350:	d9000117 	ldw	r4,4(sp)
1001a354:	880b883a 	mov	r5,r17
1001a358:	00afc83a 	sub	r23,zero,r2
1001a35c:	b88003cc 	andi	r2,r23,15
1001a360:	100690fa 	slli	r3,r2,3
1001a364:	008400b4 	movhi	r2,4098
1001a368:	10979c04 	addi	r2,r2,24176
1001a36c:	10c5883a 	add	r2,r2,r3
1001a370:	11800017 	ldw	r6,0(r2)
1001a374:	11c00117 	ldw	r7,4(r2)
1001a378:	b82fd13a 	srai	r23,r23,4
1001a37c:	00209c40 	call	100209c4 <__muldf3>
1001a380:	1025883a 	mov	r18,r2
1001a384:	1827883a 	mov	r19,r3
1001a388:	b8004a26 	beq	r23,zero,1001a4b4 <_dtoa_r+0x1680>
1001a38c:	020400b4 	movhi	r8,4098
1001a390:	04000084 	movi	r16,2
1001a394:	42179204 	addi	r8,r8,24136
1001a398:	dc400c15 	stw	r17,48(sp)
1001a39c:	000f883a 	mov	r7,zero
1001a3a0:	8023883a 	mov	r17,r16
1001a3a4:	4021883a 	mov	r16,r8
1001a3a8:	b980004c 	andi	r6,r23,1
1001a3ac:	1009883a 	mov	r4,r2
1001a3b0:	b82fd07a 	srai	r23,r23,1
1001a3b4:	180b883a 	mov	r5,r3
1001a3b8:	30000526 	beq	r6,zero,1001a3d0 <_dtoa_r+0x159c>
1001a3bc:	81c00117 	ldw	r7,4(r16)
1001a3c0:	81800017 	ldw	r6,0(r16)
1001a3c4:	8c400044 	addi	r17,r17,1
1001a3c8:	00209c40 	call	100209c4 <__muldf3>
1001a3cc:	01c00044 	movi	r7,1
1001a3d0:	84000204 	addi	r16,r16,8
1001a3d4:	b83ff41e 	bne	r23,zero,1001a3a8 <_dtoa_r+0x1574>
1001a3d8:	39c03fcc 	andi	r7,r7,255
1001a3dc:	8821883a 	mov	r16,r17
1001a3e0:	dc400c17 	ldw	r17,48(sp)
1001a3e4:	383b8b26 	beq	r7,zero,10019214 <_dtoa_r+0x3e0>
1001a3e8:	1025883a 	mov	r18,r2
1001a3ec:	1827883a 	mov	r19,r3
1001a3f0:	003b8806 	br	10019214 <_dtoa_r+0x3e0>
1001a3f4:	d8800417 	ldw	r2,16(sp)
1001a3f8:	02000c44 	movi	r8,49
1001a3fc:	10800044 	addi	r2,r2,1
1001a400:	d8800415 	stw	r2,16(sp)
1001a404:	003cf606 	br	100197e0 <_dtoa_r+0x9ac>
1001a408:	00800e44 	movi	r2,57
1001a40c:	8029883a 	mov	r20,r16
1001a410:	88800005 	stb	r2,0(r17)
1001a414:	9821883a 	mov	r16,r19
1001a418:	00c00e44 	movi	r3,57
1001a41c:	d9400317 	ldw	r5,12(sp)
1001a420:	003d7706 	br	10019a00 <_dtoa_r+0xbcc>
1001a424:	0025883a 	mov	r18,zero
1001a428:	0021883a 	mov	r16,zero
1001a42c:	003e6706 	br	10019dcc <_dtoa_r+0xf98>
1001a430:	d8800f17 	ldw	r2,60(sp)
1001a434:	ba3fffc3 	ldbu	r8,-1(r23)
1001a438:	d9000317 	ldw	r4,12(sp)
1001a43c:	10800044 	addi	r2,r2,1
1001a440:	d8800415 	stw	r2,16(sp)
1001a444:	003cdf06 	br	100197c4 <_dtoa_r+0x990>
1001a448:	103f2d1e 	bne	r2,zero,1001a100 <_dtoa_r+0x12cc>
1001a44c:	4080004c 	andi	r2,r8,1
1001a450:	103f281e 	bne	r2,zero,1001a0f4 <_dtoa_r+0x12c0>
1001a454:	003f2a06 	br	1001a100 <_dtoa_r+0x12cc>
1001a458:	d8800f17 	ldw	r2,60(sp)
1001a45c:	8811883a 	mov	r8,r17
1001a460:	d9000317 	ldw	r4,12(sp)
1001a464:	10800044 	addi	r2,r2,1
1001a468:	d8800415 	stw	r2,16(sp)
1001a46c:	003cd506 	br	100197c4 <_dtoa_r+0x990>
1001a470:	40800e60 	cmpeqi	r2,r8,57
1001a474:	8dc00044 	addi	r23,r17,1
1001a478:	103fe31e 	bne	r2,zero,1001a408 <_dtoa_r+0x15d4>
1001a47c:	053f1f16 	blt	zero,r20,1001a0fc <_dtoa_r+0x12c8>
1001a480:	003f1f06 	br	1001a100 <_dtoa_r+0x12cc>
1001a484:	d8800217 	ldw	r2,8(sp)
1001a488:	108000c8 	cmpgei	r2,r2,3
1001a48c:	103e9326 	beq	r2,zero,10019edc <_dtoa_r+0x10a8>
1001a490:	d8800b17 	ldw	r2,44(sp)
1001a494:	dd000415 	stw	r20,16(sp)
1001a498:	d8800615 	stw	r2,24(sp)
1001a49c:	003e3f06 	br	10019d9c <_dtoa_r+0xf68>
1001a4a0:	d8800217 	ldw	r2,8(sp)
1001a4a4:	108000c8 	cmpgei	r2,r2,3
1001a4a8:	103ff91e 	bne	r2,zero,1001a490 <_dtoa_r+0x165c>
1001a4ac:	d8800b17 	ldw	r2,44(sp)
1001a4b0:	003de006 	br	10019c34 <_dtoa_r+0xe00>
1001a4b4:	04000084 	movi	r16,2
1001a4b8:	003b5606 	br	10019214 <_dtoa_r+0x3e0>
1001a4bc:	d8800f17 	ldw	r2,60(sp)
1001a4c0:	d9000317 	ldw	r4,12(sp)
1001a4c4:	10800044 	addi	r2,r2,1
1001a4c8:	d8800415 	stw	r2,16(sp)
1001a4cc:	003cbd06 	br	100197c4 <_dtoa_r+0x990>
1001a4d0:	008400b4 	movhi	r2,4098
1001a4d4:	10978204 	addi	r2,r2,24072
1001a4d8:	d8800315 	stw	r2,12(sp)
1001a4dc:	003a8706 	br	10018efc <_dtoa_r+0xc8>
1001a4e0:	000b883a 	mov	r5,zero
1001a4e4:	003b1b06 	br	10019154 <_dtoa_r+0x320>
1001a4e8:	18c00120 	cmpeqi	r3,r3,4
1001a4ec:	183d0f1e 	bne	r3,zero,1001992c <_dtoa_r+0xaf8>
1001a4f0:	00c00f04 	movi	r3,60
1001a4f4:	1885c83a 	sub	r2,r3,r2
1001a4f8:	003d0706 	br	10019918 <_dtoa_r+0xae4>

1001a4fc <__sflush_r>:
1001a4fc:	2880030b 	ldhu	r2,12(r5)
1001a500:	defffb04 	addi	sp,sp,-20
1001a504:	dcc00315 	stw	r19,12(sp)
1001a508:	dc000015 	stw	r16,0(sp)
1001a50c:	dfc00415 	stw	ra,16(sp)
1001a510:	dc800215 	stw	r18,8(sp)
1001a514:	dc400115 	stw	r17,4(sp)
1001a518:	10c0020c 	andi	r3,r2,8
1001a51c:	2821883a 	mov	r16,r5
1001a520:	2027883a 	mov	r19,r4
1001a524:	18003f1e 	bne	r3,zero,1001a624 <__sflush_r+0x128>
1001a528:	28c00117 	ldw	r3,4(r5)
1001a52c:	10820014 	ori	r2,r2,2048
1001a530:	2880030d 	sth	r2,12(r5)
1001a534:	00c0550e 	bge	zero,r3,1001a68c <__sflush_r+0x190>
1001a538:	82000a17 	ldw	r8,40(r16)
1001a53c:	40003126 	beq	r8,zero,1001a604 <__sflush_r+0x108>
1001a540:	9c400017 	ldw	r17,0(r19)
1001a544:	1104000c 	andi	r4,r2,4096
1001a548:	98000015 	stw	zero,0(r19)
1001a54c:	1007883a 	mov	r3,r2
1001a550:	81400717 	ldw	r5,28(r16)
1001a554:	2000521e 	bne	r4,zero,1001a6a0 <__sflush_r+0x1a4>
1001a558:	01c00044 	movi	r7,1
1001a55c:	000d883a 	mov	r6,zero
1001a560:	9809883a 	mov	r4,r19
1001a564:	403ee83a 	callr	r8
1001a568:	10ffffd8 	cmpnei	r3,r2,-1
1001a56c:	18005826 	beq	r3,zero,1001a6d0 <__sflush_r+0x1d4>
1001a570:	80c0030b 	ldhu	r3,12(r16)
1001a574:	82000a17 	ldw	r8,40(r16)
1001a578:	81400717 	ldw	r5,28(r16)
1001a57c:	18c0010c 	andi	r3,r3,4
1001a580:	18000626 	beq	r3,zero,1001a59c <__sflush_r+0xa0>
1001a584:	81000117 	ldw	r4,4(r16)
1001a588:	80c00c17 	ldw	r3,48(r16)
1001a58c:	1105c83a 	sub	r2,r2,r4
1001a590:	18000226 	beq	r3,zero,1001a59c <__sflush_r+0xa0>
1001a594:	80c00f17 	ldw	r3,60(r16)
1001a598:	10c5c83a 	sub	r2,r2,r3
1001a59c:	000f883a 	mov	r7,zero
1001a5a0:	100d883a 	mov	r6,r2
1001a5a4:	9809883a 	mov	r4,r19
1001a5a8:	403ee83a 	callr	r8
1001a5ac:	10ffffd8 	cmpnei	r3,r2,-1
1001a5b0:	18003d1e 	bne	r3,zero,1001a6a8 <__sflush_r+0x1ac>
1001a5b4:	99000017 	ldw	r4,0(r19)
1001a5b8:	80c0030b 	ldhu	r3,12(r16)
1001a5bc:	20004e26 	beq	r4,zero,1001a6f8 <__sflush_r+0x1fc>
1001a5c0:	21400760 	cmpeqi	r5,r4,29
1001a5c4:	2800021e 	bne	r5,zero,1001a5d0 <__sflush_r+0xd4>
1001a5c8:	210005a0 	cmpeqi	r4,r4,22
1001a5cc:	20002c26 	beq	r4,zero,1001a680 <__sflush_r+0x184>
1001a5d0:	80800417 	ldw	r2,16(r16)
1001a5d4:	18fdffcc 	andi	r3,r3,63487
1001a5d8:	80c0030d 	sth	r3,12(r16)
1001a5dc:	80000115 	stw	zero,4(r16)
1001a5e0:	80800015 	stw	r2,0(r16)
1001a5e4:	81400c17 	ldw	r5,48(r16)
1001a5e8:	9c400015 	stw	r17,0(r19)
1001a5ec:	28000526 	beq	r5,zero,1001a604 <__sflush_r+0x108>
1001a5f0:	80801004 	addi	r2,r16,64
1001a5f4:	28800226 	beq	r5,r2,1001a600 <__sflush_r+0x104>
1001a5f8:	9809883a 	mov	r4,r19
1001a5fc:	001acb00 	call	1001acb0 <_free_r>
1001a600:	80000c15 	stw	zero,48(r16)
1001a604:	0005883a 	mov	r2,zero
1001a608:	dfc00417 	ldw	ra,16(sp)
1001a60c:	dcc00317 	ldw	r19,12(sp)
1001a610:	dc800217 	ldw	r18,8(sp)
1001a614:	dc400117 	ldw	r17,4(sp)
1001a618:	dc000017 	ldw	r16,0(sp)
1001a61c:	dec00504 	addi	sp,sp,20
1001a620:	f800283a 	ret
1001a624:	2c800417 	ldw	r18,16(r5)
1001a628:	903ff626 	beq	r18,zero,1001a604 <__sflush_r+0x108>
1001a62c:	2c400017 	ldw	r17,0(r5)
1001a630:	108000cc 	andi	r2,r2,3
1001a634:	2c800015 	stw	r18,0(r5)
1001a638:	8ca3c83a 	sub	r17,r17,r18
1001a63c:	1000161e 	bne	r2,zero,1001a698 <__sflush_r+0x19c>
1001a640:	28800517 	ldw	r2,20(r5)
1001a644:	80800215 	stw	r2,8(r16)
1001a648:	04400316 	blt	zero,r17,1001a658 <__sflush_r+0x15c>
1001a64c:	003fed06 	br	1001a604 <__sflush_r+0x108>
1001a650:	90a5883a 	add	r18,r18,r2
1001a654:	047feb0e 	bge	zero,r17,1001a604 <__sflush_r+0x108>
1001a658:	80800917 	ldw	r2,36(r16)
1001a65c:	81400717 	ldw	r5,28(r16)
1001a660:	880f883a 	mov	r7,r17
1001a664:	900d883a 	mov	r6,r18
1001a668:	9809883a 	mov	r4,r19
1001a66c:	103ee83a 	callr	r2
1001a670:	88a3c83a 	sub	r17,r17,r2
1001a674:	00bff616 	blt	zero,r2,1001a650 <__sflush_r+0x154>
1001a678:	80c0030b 	ldhu	r3,12(r16)
1001a67c:	00bfffc4 	movi	r2,-1
1001a680:	18c01014 	ori	r3,r3,64
1001a684:	80c0030d 	sth	r3,12(r16)
1001a688:	003fdf06 	br	1001a608 <__sflush_r+0x10c>
1001a68c:	28c00f17 	ldw	r3,60(r5)
1001a690:	00ffa916 	blt	zero,r3,1001a538 <__sflush_r+0x3c>
1001a694:	003fdb06 	br	1001a604 <__sflush_r+0x108>
1001a698:	0005883a 	mov	r2,zero
1001a69c:	003fe906 	br	1001a644 <__sflush_r+0x148>
1001a6a0:	80801417 	ldw	r2,80(r16)
1001a6a4:	003fb506 	br	1001a57c <__sflush_r+0x80>
1001a6a8:	80c0030b 	ldhu	r3,12(r16)
1001a6ac:	81000417 	ldw	r4,16(r16)
1001a6b0:	80000115 	stw	zero,4(r16)
1001a6b4:	197dffcc 	andi	r5,r3,63487
1001a6b8:	8140030d 	sth	r5,12(r16)
1001a6bc:	81000015 	stw	r4,0(r16)
1001a6c0:	18c4000c 	andi	r3,r3,4096
1001a6c4:	183fc726 	beq	r3,zero,1001a5e4 <__sflush_r+0xe8>
1001a6c8:	80801415 	stw	r2,80(r16)
1001a6cc:	003fc506 	br	1001a5e4 <__sflush_r+0xe8>
1001a6d0:	98c00017 	ldw	r3,0(r19)
1001a6d4:	183fa626 	beq	r3,zero,1001a570 <__sflush_r+0x74>
1001a6d8:	19000760 	cmpeqi	r4,r3,29
1001a6dc:	20000e1e 	bne	r4,zero,1001a718 <__sflush_r+0x21c>
1001a6e0:	18c00598 	cmpnei	r3,r3,22
1001a6e4:	18000c26 	beq	r3,zero,1001a718 <__sflush_r+0x21c>
1001a6e8:	80c0030b 	ldhu	r3,12(r16)
1001a6ec:	18c01014 	ori	r3,r3,64
1001a6f0:	80c0030d 	sth	r3,12(r16)
1001a6f4:	003fc406 	br	1001a608 <__sflush_r+0x10c>
1001a6f8:	81000417 	ldw	r4,16(r16)
1001a6fc:	197dffcc 	andi	r5,r3,63487
1001a700:	8140030d 	sth	r5,12(r16)
1001a704:	80000115 	stw	zero,4(r16)
1001a708:	81000015 	stw	r4,0(r16)
1001a70c:	18c4000c 	andi	r3,r3,4096
1001a710:	183fb426 	beq	r3,zero,1001a5e4 <__sflush_r+0xe8>
1001a714:	003fec06 	br	1001a6c8 <__sflush_r+0x1cc>
1001a718:	9c400015 	stw	r17,0(r19)
1001a71c:	0005883a 	mov	r2,zero
1001a720:	003fb906 	br	1001a608 <__sflush_r+0x10c>

1001a724 <_fflush_r>:
1001a724:	defffd04 	addi	sp,sp,-12
1001a728:	dc000115 	stw	r16,4(sp)
1001a72c:	dfc00215 	stw	ra,8(sp)
1001a730:	2021883a 	mov	r16,r4
1001a734:	20000226 	beq	r4,zero,1001a740 <_fflush_r+0x1c>
1001a738:	20800e17 	ldw	r2,56(r4)
1001a73c:	10000726 	beq	r2,zero,1001a75c <_fflush_r+0x38>
1001a740:	2880030f 	ldh	r2,12(r5)
1001a744:	10000a1e 	bne	r2,zero,1001a770 <_fflush_r+0x4c>
1001a748:	0005883a 	mov	r2,zero
1001a74c:	dfc00217 	ldw	ra,8(sp)
1001a750:	dc000117 	ldw	r16,4(sp)
1001a754:	dec00304 	addi	sp,sp,12
1001a758:	f800283a 	ret
1001a75c:	d9400015 	stw	r5,0(sp)
1001a760:	001aaa80 	call	1001aaa8 <__sinit>
1001a764:	d9400017 	ldw	r5,0(sp)
1001a768:	2880030f 	ldh	r2,12(r5)
1001a76c:	103ff626 	beq	r2,zero,1001a748 <_fflush_r+0x24>
1001a770:	8009883a 	mov	r4,r16
1001a774:	dfc00217 	ldw	ra,8(sp)
1001a778:	dc000117 	ldw	r16,4(sp)
1001a77c:	dec00304 	addi	sp,sp,12
1001a780:	001a4fc1 	jmpi	1001a4fc <__sflush_r>

1001a784 <fflush>:
1001a784:	200b883a 	mov	r5,r4
1001a788:	20000326 	beq	r4,zero,1001a798 <fflush+0x14>
1001a78c:	008400f4 	movhi	r2,4099
1001a790:	11215917 	ldw	r4,-31388(r2)
1001a794:	001a7241 	jmpi	1001a724 <_fflush_r>
1001a798:	008400f4 	movhi	r2,4099
1001a79c:	11215817 	ldw	r4,-31392(r2)
1001a7a0:	014400b4 	movhi	r5,4098
1001a7a4:	2969c904 	addi	r5,r5,-22748
1001a7a8:	001b5141 	jmpi	1001b514 <_fwalk_reent>

1001a7ac <__fp_lock>:
1001a7ac:	0005883a 	mov	r2,zero
1001a7b0:	f800283a 	ret

1001a7b4 <_cleanup_r>:
1001a7b4:	014400b4 	movhi	r5,4098
1001a7b8:	29795004 	addi	r5,r5,-6848
1001a7bc:	001b5141 	jmpi	1001b514 <_fwalk_reent>

1001a7c0 <__sinit.part.0>:
1001a7c0:	00c400b4 	movhi	r3,4098
1001a7c4:	20800117 	ldw	r2,4(r4)
1001a7c8:	18e9ed04 	addi	r3,r3,-22604
1001a7cc:	20c00f15 	stw	r3,60(r4)
1001a7d0:	2140bb04 	addi	r5,r4,748
1001a7d4:	00c000c4 	movi	r3,3
1001a7d8:	20c0b915 	stw	r3,740(r4)
1001a7dc:	2140ba15 	stw	r5,744(r4)
1001a7e0:	2000b815 	stw	zero,736(r4)
1001a7e4:	10001705 	stb	zero,92(r2)
1001a7e8:	10001745 	stb	zero,93(r2)
1001a7ec:	10001785 	stb	zero,94(r2)
1001a7f0:	100017c5 	stb	zero,95(r2)
1001a7f4:	10001805 	stb	zero,96(r2)
1001a7f8:	10001845 	stb	zero,97(r2)
1001a7fc:	10001885 	stb	zero,98(r2)
1001a800:	100018c5 	stb	zero,99(r2)
1001a804:	00c00104 	movi	r3,4
1001a808:	10c00315 	stw	r3,12(r2)
1001a80c:	02040074 	movhi	r8,4097
1001a810:	20c00217 	ldw	r3,8(r4)
1001a814:	01c40074 	movhi	r7,4097
1001a818:	01840074 	movhi	r6,4097
1001a81c:	01440074 	movhi	r5,4097
1001a820:	4218a704 	addi	r8,r8,25244
1001a824:	39d8be04 	addi	r7,r7,25336
1001a828:	3198de04 	addi	r6,r6,25464
1001a82c:	2958f504 	addi	r5,r5,25556
1001a830:	02400074 	movhi	r9,1
1001a834:	10001915 	stw	zero,100(r2)
1001a838:	10000015 	stw	zero,0(r2)
1001a83c:	10000115 	stw	zero,4(r2)
1001a840:	10000215 	stw	zero,8(r2)
1001a844:	10000415 	stw	zero,16(r2)
1001a848:	10000515 	stw	zero,20(r2)
1001a84c:	10000615 	stw	zero,24(r2)
1001a850:	10800715 	stw	r2,28(r2)
1001a854:	12000815 	stw	r8,32(r2)
1001a858:	11c00915 	stw	r7,36(r2)
1001a85c:	11800a15 	stw	r6,40(r2)
1001a860:	11400b15 	stw	r5,44(r2)
1001a864:	4a400284 	addi	r9,r9,10
1001a868:	1a400315 	stw	r9,12(r3)
1001a86c:	18001915 	stw	zero,100(r3)
1001a870:	18000015 	stw	zero,0(r3)
1001a874:	18000115 	stw	zero,4(r3)
1001a878:	18000215 	stw	zero,8(r3)
1001a87c:	18000415 	stw	zero,16(r3)
1001a880:	18001705 	stb	zero,92(r3)
1001a884:	18001745 	stb	zero,93(r3)
1001a888:	18001785 	stb	zero,94(r3)
1001a88c:	180017c5 	stb	zero,95(r3)
1001a890:	18001805 	stb	zero,96(r3)
1001a894:	18001845 	stb	zero,97(r3)
1001a898:	18001885 	stb	zero,98(r3)
1001a89c:	180018c5 	stb	zero,99(r3)
1001a8a0:	20800317 	ldw	r2,12(r4)
1001a8a4:	024000b4 	movhi	r9,2
1001a8a8:	18000515 	stw	zero,20(r3)
1001a8ac:	18000615 	stw	zero,24(r3)
1001a8b0:	18c00715 	stw	r3,28(r3)
1001a8b4:	1a000815 	stw	r8,32(r3)
1001a8b8:	19c00915 	stw	r7,36(r3)
1001a8bc:	19800a15 	stw	r6,40(r3)
1001a8c0:	19400b15 	stw	r5,44(r3)
1001a8c4:	4a400484 	addi	r9,r9,18
1001a8c8:	10001915 	stw	zero,100(r2)
1001a8cc:	10000015 	stw	zero,0(r2)
1001a8d0:	10000115 	stw	zero,4(r2)
1001a8d4:	10000215 	stw	zero,8(r2)
1001a8d8:	12400315 	stw	r9,12(r2)
1001a8dc:	10000415 	stw	zero,16(r2)
1001a8e0:	10000515 	stw	zero,20(r2)
1001a8e4:	10000615 	stw	zero,24(r2)
1001a8e8:	10001705 	stb	zero,92(r2)
1001a8ec:	10001745 	stb	zero,93(r2)
1001a8f0:	10001785 	stb	zero,94(r2)
1001a8f4:	100017c5 	stb	zero,95(r2)
1001a8f8:	10001805 	stb	zero,96(r2)
1001a8fc:	10001845 	stb	zero,97(r2)
1001a900:	10001885 	stb	zero,98(r2)
1001a904:	100018c5 	stb	zero,99(r2)
1001a908:	10800715 	stw	r2,28(r2)
1001a90c:	12000815 	stw	r8,32(r2)
1001a910:	11c00915 	stw	r7,36(r2)
1001a914:	11800a15 	stw	r6,40(r2)
1001a918:	11400b15 	stw	r5,44(r2)
1001a91c:	00800044 	movi	r2,1
1001a920:	20800e15 	stw	r2,56(r4)
1001a924:	f800283a 	ret

1001a928 <__fp_unlock>:
1001a928:	0005883a 	mov	r2,zero
1001a92c:	f800283a 	ret

1001a930 <__sfmoreglue>:
1001a930:	defffc04 	addi	sp,sp,-16
1001a934:	dc400115 	stw	r17,4(sp)
1001a938:	2c7fffc4 	addi	r17,r5,-1
1001a93c:	8c401a24 	muli	r17,r17,104
1001a940:	dc800215 	stw	r18,8(sp)
1001a944:	2825883a 	mov	r18,r5
1001a948:	89401d04 	addi	r5,r17,116
1001a94c:	dc000015 	stw	r16,0(sp)
1001a950:	dfc00315 	stw	ra,12(sp)
1001a954:	0014e900 	call	10014e90 <_malloc_r>
1001a958:	1021883a 	mov	r16,r2
1001a95c:	10000726 	beq	r2,zero,1001a97c <__sfmoreglue+0x4c>
1001a960:	11000304 	addi	r4,r2,12
1001a964:	10000015 	stw	zero,0(r2)
1001a968:	14800115 	stw	r18,4(r2)
1001a96c:	11000215 	stw	r4,8(r2)
1001a970:	89801a04 	addi	r6,r17,104
1001a974:	000b883a 	mov	r5,zero
1001a978:	0015a240 	call	10015a24 <memset>
1001a97c:	8005883a 	mov	r2,r16
1001a980:	dfc00317 	ldw	ra,12(sp)
1001a984:	dc800217 	ldw	r18,8(sp)
1001a988:	dc400117 	ldw	r17,4(sp)
1001a98c:	dc000017 	ldw	r16,0(sp)
1001a990:	dec00404 	addi	sp,sp,16
1001a994:	f800283a 	ret

1001a998 <__sfp>:
1001a998:	defffd04 	addi	sp,sp,-12
1001a99c:	008400f4 	movhi	r2,4099
1001a9a0:	dc000015 	stw	r16,0(sp)
1001a9a4:	14215817 	ldw	r16,-31392(r2)
1001a9a8:	dc400115 	stw	r17,4(sp)
1001a9ac:	dfc00215 	stw	ra,8(sp)
1001a9b0:	80800e17 	ldw	r2,56(r16)
1001a9b4:	2023883a 	mov	r17,r4
1001a9b8:	10002b26 	beq	r2,zero,1001aa68 <__sfp+0xd0>
1001a9bc:	8400b804 	addi	r16,r16,736
1001a9c0:	80c00117 	ldw	r3,4(r16)
1001a9c4:	80800217 	ldw	r2,8(r16)
1001a9c8:	18ffffc4 	addi	r3,r3,-1
1001a9cc:	1800050e 	bge	r3,zero,1001a9e4 <__sfp+0x4c>
1001a9d0:	00002106 	br	1001aa58 <__sfp+0xc0>
1001a9d4:	18ffffc4 	addi	r3,r3,-1
1001a9d8:	193fffd8 	cmpnei	r4,r3,-1
1001a9dc:	10801a04 	addi	r2,r2,104
1001a9e0:	20001d26 	beq	r4,zero,1001aa58 <__sfp+0xc0>
1001a9e4:	1100030f 	ldh	r4,12(r2)
1001a9e8:	203ffa1e 	bne	r4,zero,1001a9d4 <__sfp+0x3c>
1001a9ec:	00fffff4 	movhi	r3,65535
1001a9f0:	18c00044 	addi	r3,r3,1
1001a9f4:	10001915 	stw	zero,100(r2)
1001a9f8:	10000015 	stw	zero,0(r2)
1001a9fc:	10000115 	stw	zero,4(r2)
1001aa00:	10000215 	stw	zero,8(r2)
1001aa04:	10c00315 	stw	r3,12(r2)
1001aa08:	10000415 	stw	zero,16(r2)
1001aa0c:	10000515 	stw	zero,20(r2)
1001aa10:	10000615 	stw	zero,24(r2)
1001aa14:	10001705 	stb	zero,92(r2)
1001aa18:	10001745 	stb	zero,93(r2)
1001aa1c:	10001785 	stb	zero,94(r2)
1001aa20:	100017c5 	stb	zero,95(r2)
1001aa24:	10001805 	stb	zero,96(r2)
1001aa28:	10001845 	stb	zero,97(r2)
1001aa2c:	10001885 	stb	zero,98(r2)
1001aa30:	100018c5 	stb	zero,99(r2)
1001aa34:	10000c15 	stw	zero,48(r2)
1001aa38:	10000d15 	stw	zero,52(r2)
1001aa3c:	10001115 	stw	zero,68(r2)
1001aa40:	10001215 	stw	zero,72(r2)
1001aa44:	dfc00217 	ldw	ra,8(sp)
1001aa48:	dc400117 	ldw	r17,4(sp)
1001aa4c:	dc000017 	ldw	r16,0(sp)
1001aa50:	dec00304 	addi	sp,sp,12
1001aa54:	f800283a 	ret
1001aa58:	80800017 	ldw	r2,0(r16)
1001aa5c:	10000526 	beq	r2,zero,1001aa74 <__sfp+0xdc>
1001aa60:	1021883a 	mov	r16,r2
1001aa64:	003fd606 	br	1001a9c0 <__sfp+0x28>
1001aa68:	8009883a 	mov	r4,r16
1001aa6c:	001a7c00 	call	1001a7c0 <__sinit.part.0>
1001aa70:	003fd206 	br	1001a9bc <__sfp+0x24>
1001aa74:	01400104 	movi	r5,4
1001aa78:	8809883a 	mov	r4,r17
1001aa7c:	001a9300 	call	1001a930 <__sfmoreglue>
1001aa80:	80800015 	stw	r2,0(r16)
1001aa84:	103ff61e 	bne	r2,zero,1001aa60 <__sfp+0xc8>
1001aa88:	00c00304 	movi	r3,12
1001aa8c:	88c00015 	stw	r3,0(r17)
1001aa90:	003fec06 	br	1001aa44 <__sfp+0xac>

1001aa94 <_cleanup>:
1001aa94:	008400f4 	movhi	r2,4099
1001aa98:	11215817 	ldw	r4,-31392(r2)
1001aa9c:	014400b4 	movhi	r5,4098
1001aaa0:	29795004 	addi	r5,r5,-6848
1001aaa4:	001b5141 	jmpi	1001b514 <_fwalk_reent>

1001aaa8 <__sinit>:
1001aaa8:	20800e17 	ldw	r2,56(r4)
1001aaac:	10000126 	beq	r2,zero,1001aab4 <__sinit+0xc>
1001aab0:	f800283a 	ret
1001aab4:	001a7c01 	jmpi	1001a7c0 <__sinit.part.0>

1001aab8 <__sfp_lock_acquire>:
1001aab8:	f800283a 	ret

1001aabc <__sfp_lock_release>:
1001aabc:	f800283a 	ret

1001aac0 <__sinit_lock_acquire>:
1001aac0:	f800283a 	ret

1001aac4 <__sinit_lock_release>:
1001aac4:	f800283a 	ret

1001aac8 <__fp_lock_all>:
1001aac8:	008400f4 	movhi	r2,4099
1001aacc:	11215917 	ldw	r4,-31388(r2)
1001aad0:	014400b4 	movhi	r5,4098
1001aad4:	2969eb04 	addi	r5,r5,-22612
1001aad8:	001b4701 	jmpi	1001b470 <_fwalk>

1001aadc <__fp_unlock_all>:
1001aadc:	008400f4 	movhi	r2,4099
1001aae0:	11215917 	ldw	r4,-31388(r2)
1001aae4:	014400b4 	movhi	r5,4098
1001aae8:	296a4a04 	addi	r5,r5,-22232
1001aaec:	001b4701 	jmpi	1001b470 <_fwalk>

1001aaf0 <__sflags>:
1001aaf0:	28800007 	ldb	r2,0(r5)
1001aaf4:	10c01ca0 	cmpeqi	r3,r2,114
1001aaf8:	1800221e 	bne	r3,zero,1001ab84 <__sflags+0x94>
1001aafc:	10c01de0 	cmpeqi	r3,r2,119
1001ab00:	1800061e 	bne	r3,zero,1001ab1c <__sflags+0x2c>
1001ab04:	10801860 	cmpeqi	r2,r2,97
1001ab08:	10001a1e 	bne	r2,zero,1001ab74 <__sflags+0x84>
1001ab0c:	00800584 	movi	r2,22
1001ab10:	20800015 	stw	r2,0(r4)
1001ab14:	0005883a 	mov	r2,zero
1001ab18:	f800283a 	ret
1001ab1c:	02c18004 	movi	r11,1536
1001ab20:	01000044 	movi	r4,1
1001ab24:	00800204 	movi	r2,8
1001ab28:	02bff8c4 	movi	r10,-29
1001ab2c:	027fff04 	movi	r9,-4
1001ab30:	29400044 	addi	r5,r5,1
1001ab34:	28c00007 	ldb	r3,0(r5)
1001ab38:	1a000ae0 	cmpeqi	r8,r3,43
1001ab3c:	19c01e20 	cmpeqi	r7,r3,120
1001ab40:	18000926 	beq	r3,zero,1001ab68 <__sflags+0x78>
1001ab44:	4000031e 	bne	r8,zero,1001ab54 <__sflags+0x64>
1001ab48:	383ff926 	beq	r7,zero,1001ab30 <__sflags+0x40>
1001ab4c:	21020014 	ori	r4,r4,2048
1001ab50:	003ff706 	br	1001ab30 <__sflags+0x40>
1001ab54:	1284703a 	and	r2,r2,r10
1001ab58:	2248703a 	and	r4,r4,r9
1001ab5c:	10800414 	ori	r2,r2,16
1001ab60:	21000094 	ori	r4,r4,2
1001ab64:	003ff206 	br	1001ab30 <__sflags+0x40>
1001ab68:	22c8b03a 	or	r4,r4,r11
1001ab6c:	31000015 	stw	r4,0(r6)
1001ab70:	f800283a 	ret
1001ab74:	02c08204 	movi	r11,520
1001ab78:	01000044 	movi	r4,1
1001ab7c:	00804204 	movi	r2,264
1001ab80:	003fe906 	br	1001ab28 <__sflags+0x38>
1001ab84:	0017883a 	mov	r11,zero
1001ab88:	0009883a 	mov	r4,zero
1001ab8c:	00800104 	movi	r2,4
1001ab90:	003fe506 	br	1001ab28 <__sflags+0x38>

1001ab94 <_malloc_trim_r>:
1001ab94:	defffb04 	addi	sp,sp,-20
1001ab98:	dcc00315 	stw	r19,12(sp)
1001ab9c:	04c400b4 	movhi	r19,4098
1001aba0:	dc800215 	stw	r18,8(sp)
1001aba4:	dc400115 	stw	r17,4(sp)
1001aba8:	dc000015 	stw	r16,0(sp)
1001abac:	dfc00415 	stw	ra,16(sp)
1001abb0:	2821883a 	mov	r16,r5
1001abb4:	9cdb6904 	addi	r19,r19,28068
1001abb8:	2025883a 	mov	r18,r4
1001abbc:	00223800 	call	10022380 <__malloc_lock>
1001abc0:	98800217 	ldw	r2,8(r19)
1001abc4:	14400117 	ldw	r17,4(r2)
1001abc8:	00bfff04 	movi	r2,-4
1001abcc:	88a2703a 	and	r17,r17,r2
1001abd0:	8c21c83a 	sub	r16,r17,r16
1001abd4:	8403fbc4 	addi	r16,r16,4079
1001abd8:	8020d33a 	srli	r16,r16,12
1001abdc:	843fffc4 	addi	r16,r16,-1
1001abe0:	8020933a 	slli	r16,r16,12
1001abe4:	80840008 	cmpgei	r2,r16,4096
1001abe8:	10000626 	beq	r2,zero,1001ac04 <_malloc_trim_r+0x70>
1001abec:	000b883a 	mov	r5,zero
1001abf0:	9009883a 	mov	r4,r18
1001abf4:	0015f380 	call	10015f38 <_sbrk_r>
1001abf8:	98c00217 	ldw	r3,8(r19)
1001abfc:	1c47883a 	add	r3,r3,r17
1001ac00:	10c00a26 	beq	r2,r3,1001ac2c <_malloc_trim_r+0x98>
1001ac04:	9009883a 	mov	r4,r18
1001ac08:	00223a40 	call	100223a4 <__malloc_unlock>
1001ac0c:	0005883a 	mov	r2,zero
1001ac10:	dfc00417 	ldw	ra,16(sp)
1001ac14:	dcc00317 	ldw	r19,12(sp)
1001ac18:	dc800217 	ldw	r18,8(sp)
1001ac1c:	dc400117 	ldw	r17,4(sp)
1001ac20:	dc000017 	ldw	r16,0(sp)
1001ac24:	dec00504 	addi	sp,sp,20
1001ac28:	f800283a 	ret
1001ac2c:	040bc83a 	sub	r5,zero,r16
1001ac30:	9009883a 	mov	r4,r18
1001ac34:	0015f380 	call	10015f38 <_sbrk_r>
1001ac38:	10bfffd8 	cmpnei	r2,r2,-1
1001ac3c:	10000d26 	beq	r2,zero,1001ac74 <_malloc_trim_r+0xe0>
1001ac40:	008400f4 	movhi	r2,4099
1001ac44:	10aac417 	ldw	r2,-21744(r2)
1001ac48:	98c00217 	ldw	r3,8(r19)
1001ac4c:	8c23c83a 	sub	r17,r17,r16
1001ac50:	8c400054 	ori	r17,r17,1
1001ac54:	1421c83a 	sub	r16,r2,r16
1001ac58:	1c400115 	stw	r17,4(r3)
1001ac5c:	008400f4 	movhi	r2,4099
1001ac60:	9009883a 	mov	r4,r18
1001ac64:	142ac415 	stw	r16,-21744(r2)
1001ac68:	00223a40 	call	100223a4 <__malloc_unlock>
1001ac6c:	00800044 	movi	r2,1
1001ac70:	003fe706 	br	1001ac10 <_malloc_trim_r+0x7c>
1001ac74:	000b883a 	mov	r5,zero
1001ac78:	9009883a 	mov	r4,r18
1001ac7c:	0015f380 	call	10015f38 <_sbrk_r>
1001ac80:	99000217 	ldw	r4,8(r19)
1001ac84:	1107c83a 	sub	r3,r2,r4
1001ac88:	19400410 	cmplti	r5,r3,16
1001ac8c:	283fdd1e 	bne	r5,zero,1001ac04 <_malloc_trim_r+0x70>
1001ac90:	014400f4 	movhi	r5,4099
1001ac94:	29615a17 	ldw	r5,-31384(r5)
1001ac98:	18c00054 	ori	r3,r3,1
1001ac9c:	20c00115 	stw	r3,4(r4)
1001aca0:	1145c83a 	sub	r2,r2,r5
1001aca4:	014400f4 	movhi	r5,4099
1001aca8:	28aac415 	stw	r2,-21744(r5)
1001acac:	003fd506 	br	1001ac04 <_malloc_trim_r+0x70>

1001acb0 <_free_r>:
1001acb0:	28004f26 	beq	r5,zero,1001adf0 <_free_r+0x140>
1001acb4:	defffd04 	addi	sp,sp,-12
1001acb8:	dc400115 	stw	r17,4(sp)
1001acbc:	dc000015 	stw	r16,0(sp)
1001acc0:	2023883a 	mov	r17,r4
1001acc4:	2821883a 	mov	r16,r5
1001acc8:	dfc00215 	stw	ra,8(sp)
1001accc:	00223800 	call	10022380 <__malloc_lock>
1001acd0:	81ffff17 	ldw	r7,-4(r16)
1001acd4:	00bfff84 	movi	r2,-2
1001acd8:	80fffe04 	addi	r3,r16,-8
1001acdc:	3884703a 	and	r2,r7,r2
1001ace0:	018400b4 	movhi	r6,4098
1001ace4:	1889883a 	add	r4,r3,r2
1001ace8:	319b6904 	addi	r6,r6,28068
1001acec:	21400117 	ldw	r5,4(r4)
1001acf0:	32000217 	ldw	r8,8(r6)
1001acf4:	027fff04 	movi	r9,-4
1001acf8:	2a4a703a 	and	r5,r5,r9
1001acfc:	41006426 	beq	r8,r4,1001ae90 <_free_r+0x1e0>
1001ad00:	21400115 	stw	r5,4(r4)
1001ad04:	39c0004c 	andi	r7,r7,1
1001ad08:	2151883a 	add	r8,r4,r5
1001ad0c:	3800281e 	bne	r7,zero,1001adb0 <_free_r+0x100>
1001ad10:	82bffe17 	ldw	r10,-8(r16)
1001ad14:	42000117 	ldw	r8,4(r8)
1001ad18:	01c400b4 	movhi	r7,4098
1001ad1c:	1a87c83a 	sub	r3,r3,r10
1001ad20:	1a400217 	ldw	r9,8(r3)
1001ad24:	39db6b04 	addi	r7,r7,28076
1001ad28:	1285883a 	add	r2,r2,r10
1001ad2c:	4200004c 	andi	r8,r8,1
1001ad30:	49c04c26 	beq	r9,r7,1001ae64 <_free_r+0x1b4>
1001ad34:	1a800317 	ldw	r10,12(r3)
1001ad38:	4a800315 	stw	r10,12(r9)
1001ad3c:	52400215 	stw	r9,8(r10)
1001ad40:	40007126 	beq	r8,zero,1001af08 <_free_r+0x258>
1001ad44:	11400054 	ori	r5,r2,1
1001ad48:	19400115 	stw	r5,4(r3)
1001ad4c:	20800015 	stw	r2,0(r4)
1001ad50:	11008028 	cmpgeui	r4,r2,512
1001ad54:	20002c1e 	bne	r4,zero,1001ae08 <_free_r+0x158>
1001ad58:	1008d0fa 	srli	r4,r2,3
1001ad5c:	31c00117 	ldw	r7,4(r6)
1001ad60:	20800044 	addi	r2,r4,1
1001ad64:	200bd0ba 	srai	r5,r4,2
1001ad68:	100490fa 	slli	r2,r2,3
1001ad6c:	01000044 	movi	r4,1
1001ad70:	2148983a 	sll	r4,r4,r5
1001ad74:	3085883a 	add	r2,r6,r2
1001ad78:	11400017 	ldw	r5,0(r2)
1001ad7c:	21c8b03a 	or	r4,r4,r7
1001ad80:	11fffe04 	addi	r7,r2,-8
1001ad84:	19c00315 	stw	r7,12(r3)
1001ad88:	19400215 	stw	r5,8(r3)
1001ad8c:	31000115 	stw	r4,4(r6)
1001ad90:	10c00015 	stw	r3,0(r2)
1001ad94:	28c00315 	stw	r3,12(r5)
1001ad98:	8809883a 	mov	r4,r17
1001ad9c:	dfc00217 	ldw	ra,8(sp)
1001ada0:	dc400117 	ldw	r17,4(sp)
1001ada4:	dc000017 	ldw	r16,0(sp)
1001ada8:	dec00304 	addi	sp,sp,12
1001adac:	00223a41 	jmpi	100223a4 <__malloc_unlock>
1001adb0:	41c00117 	ldw	r7,4(r8)
1001adb4:	39c0004c 	andi	r7,r7,1
1001adb8:	38000e1e 	bne	r7,zero,1001adf4 <_free_r+0x144>
1001adbc:	01c400b4 	movhi	r7,4098
1001adc0:	1145883a 	add	r2,r2,r5
1001adc4:	39db6b04 	addi	r7,r7,28076
1001adc8:	21400217 	ldw	r5,8(r4)
1001adcc:	12400054 	ori	r9,r2,1
1001add0:	1891883a 	add	r8,r3,r2
1001add4:	29c05226 	beq	r5,r7,1001af20 <_free_r+0x270>
1001add8:	21000317 	ldw	r4,12(r4)
1001addc:	29000315 	stw	r4,12(r5)
1001ade0:	21400215 	stw	r5,8(r4)
1001ade4:	1a400115 	stw	r9,4(r3)
1001ade8:	40800015 	stw	r2,0(r8)
1001adec:	003fd806 	br	1001ad50 <_free_r+0xa0>
1001adf0:	f800283a 	ret
1001adf4:	11400054 	ori	r5,r2,1
1001adf8:	817fff15 	stw	r5,-4(r16)
1001adfc:	20800015 	stw	r2,0(r4)
1001ae00:	11008028 	cmpgeui	r4,r2,512
1001ae04:	203fd426 	beq	r4,zero,1001ad58 <_free_r+0xa8>
1001ae08:	1008d27a 	srli	r4,r2,9
1001ae0c:	21400168 	cmpgeui	r5,r4,5
1001ae10:	2800341e 	bne	r5,zero,1001aee4 <_free_r+0x234>
1001ae14:	1008d1ba 	srli	r4,r2,6
1001ae18:	21c00e44 	addi	r7,r4,57
1001ae1c:	380e90fa 	slli	r7,r7,3
1001ae20:	21400e04 	addi	r5,r4,56
1001ae24:	31cf883a 	add	r7,r6,r7
1001ae28:	39000017 	ldw	r4,0(r7)
1001ae2c:	39fffe04 	addi	r7,r7,-8
1001ae30:	39004226 	beq	r7,r4,1001af3c <_free_r+0x28c>
1001ae34:	01bfff04 	movi	r6,-4
1001ae38:	21400117 	ldw	r5,4(r4)
1001ae3c:	298a703a 	and	r5,r5,r6
1001ae40:	1140022e 	bgeu	r2,r5,1001ae4c <_free_r+0x19c>
1001ae44:	21000217 	ldw	r4,8(r4)
1001ae48:	393ffb1e 	bne	r7,r4,1001ae38 <_free_r+0x188>
1001ae4c:	21c00317 	ldw	r7,12(r4)
1001ae50:	19c00315 	stw	r7,12(r3)
1001ae54:	19000215 	stw	r4,8(r3)
1001ae58:	38c00215 	stw	r3,8(r7)
1001ae5c:	20c00315 	stw	r3,12(r4)
1001ae60:	003fcd06 	br	1001ad98 <_free_r+0xe8>
1001ae64:	40004d1e 	bne	r8,zero,1001af9c <_free_r+0x2ec>
1001ae68:	21800317 	ldw	r6,12(r4)
1001ae6c:	21000217 	ldw	r4,8(r4)
1001ae70:	2885883a 	add	r2,r5,r2
1001ae74:	11400054 	ori	r5,r2,1
1001ae78:	21800315 	stw	r6,12(r4)
1001ae7c:	31000215 	stw	r4,8(r6)
1001ae80:	19400115 	stw	r5,4(r3)
1001ae84:	1887883a 	add	r3,r3,r2
1001ae88:	18800015 	stw	r2,0(r3)
1001ae8c:	003fc206 	br	1001ad98 <_free_r+0xe8>
1001ae90:	39c0004c 	andi	r7,r7,1
1001ae94:	1145883a 	add	r2,r2,r5
1001ae98:	3800071e 	bne	r7,zero,1001aeb8 <_free_r+0x208>
1001ae9c:	81fffe17 	ldw	r7,-8(r16)
1001aea0:	19c7c83a 	sub	r3,r3,r7
1001aea4:	19000317 	ldw	r4,12(r3)
1001aea8:	19400217 	ldw	r5,8(r3)
1001aeac:	11c5883a 	add	r2,r2,r7
1001aeb0:	29000315 	stw	r4,12(r5)
1001aeb4:	21400215 	stw	r5,8(r4)
1001aeb8:	010400f4 	movhi	r4,4099
1001aebc:	11400054 	ori	r5,r2,1
1001aec0:	21215b17 	ldw	r4,-31380(r4)
1001aec4:	19400115 	stw	r5,4(r3)
1001aec8:	30c00215 	stw	r3,8(r6)
1001aecc:	113fb236 	bltu	r2,r4,1001ad98 <_free_r+0xe8>
1001aed0:	008400f4 	movhi	r2,4099
1001aed4:	116aad17 	ldw	r5,-21836(r2)
1001aed8:	8809883a 	mov	r4,r17
1001aedc:	001ab940 	call	1001ab94 <_malloc_trim_r>
1001aee0:	003fad06 	br	1001ad98 <_free_r+0xe8>
1001aee4:	21400568 	cmpgeui	r5,r4,21
1001aee8:	28000926 	beq	r5,zero,1001af10 <_free_r+0x260>
1001aeec:	21401568 	cmpgeui	r5,r4,85
1001aef0:	2800191e 	bne	r5,zero,1001af58 <_free_r+0x2a8>
1001aef4:	1008d33a 	srli	r4,r2,12
1001aef8:	21c01bc4 	addi	r7,r4,111
1001aefc:	21401b84 	addi	r5,r4,110
1001af00:	380e90fa 	slli	r7,r7,3
1001af04:	003fc706 	br	1001ae24 <_free_r+0x174>
1001af08:	1145883a 	add	r2,r2,r5
1001af0c:	003fae06 	br	1001adc8 <_free_r+0x118>
1001af10:	21c01704 	addi	r7,r4,92
1001af14:	214016c4 	addi	r5,r4,91
1001af18:	380e90fa 	slli	r7,r7,3
1001af1c:	003fc106 	br	1001ae24 <_free_r+0x174>
1001af20:	30c00515 	stw	r3,20(r6)
1001af24:	30c00415 	stw	r3,16(r6)
1001af28:	19c00315 	stw	r7,12(r3)
1001af2c:	19c00215 	stw	r7,8(r3)
1001af30:	1a400115 	stw	r9,4(r3)
1001af34:	40800015 	stw	r2,0(r8)
1001af38:	003f9706 	br	1001ad98 <_free_r+0xe8>
1001af3c:	280bd0ba 	srai	r5,r5,2
1001af40:	00800044 	movi	r2,1
1001af44:	32000117 	ldw	r8,4(r6)
1001af48:	114a983a 	sll	r5,r2,r5
1001af4c:	2a0ab03a 	or	r5,r5,r8
1001af50:	31400115 	stw	r5,4(r6)
1001af54:	003fbe06 	br	1001ae50 <_free_r+0x1a0>
1001af58:	21405568 	cmpgeui	r5,r4,341
1001af5c:	2800051e 	bne	r5,zero,1001af74 <_free_r+0x2c4>
1001af60:	1008d3fa 	srli	r4,r2,15
1001af64:	21c01e04 	addi	r7,r4,120
1001af68:	21401dc4 	addi	r5,r4,119
1001af6c:	380e90fa 	slli	r7,r7,3
1001af70:	003fac06 	br	1001ae24 <_free_r+0x174>
1001af74:	21015568 	cmpgeui	r4,r4,1365
1001af78:	2000051e 	bne	r4,zero,1001af90 <_free_r+0x2e0>
1001af7c:	1008d4ba 	srli	r4,r2,18
1001af80:	21c01f44 	addi	r7,r4,125
1001af84:	21401f04 	addi	r5,r4,124
1001af88:	380e90fa 	slli	r7,r7,3
1001af8c:	003fa506 	br	1001ae24 <_free_r+0x174>
1001af90:	01c0fe04 	movi	r7,1016
1001af94:	01401f84 	movi	r5,126
1001af98:	003fa206 	br	1001ae24 <_free_r+0x174>
1001af9c:	11400054 	ori	r5,r2,1
1001afa0:	19400115 	stw	r5,4(r3)
1001afa4:	20800015 	stw	r2,0(r4)
1001afa8:	003f7b06 	br	1001ad98 <_free_r+0xe8>

1001afac <__sfvwrite_r>:
1001afac:	30800217 	ldw	r2,8(r6)
1001afb0:	1000c926 	beq	r2,zero,1001b2d8 <__sfvwrite_r+0x32c>
1001afb4:	2880030b 	ldhu	r2,12(r5)
1001afb8:	defff304 	addi	sp,sp,-52
1001afbc:	dd000715 	stw	r20,28(sp)
1001afc0:	dc000315 	stw	r16,12(sp)
1001afc4:	dfc00c15 	stw	ra,48(sp)
1001afc8:	df000b15 	stw	fp,44(sp)
1001afcc:	ddc00a15 	stw	r23,40(sp)
1001afd0:	dd800915 	stw	r22,36(sp)
1001afd4:	dd400815 	stw	r21,32(sp)
1001afd8:	dcc00615 	stw	r19,24(sp)
1001afdc:	dc800515 	stw	r18,20(sp)
1001afe0:	dc400415 	stw	r17,16(sp)
1001afe4:	d9000015 	stw	r4,0(sp)
1001afe8:	10c0020c 	andi	r3,r2,8
1001afec:	2821883a 	mov	r16,r5
1001aff0:	3029883a 	mov	r20,r6
1001aff4:	18002426 	beq	r3,zero,1001b088 <__sfvwrite_r+0xdc>
1001aff8:	28c00417 	ldw	r3,16(r5)
1001affc:	18002226 	beq	r3,zero,1001b088 <__sfvwrite_r+0xdc>
1001b000:	10c0008c 	andi	r3,r2,2
1001b004:	a4400017 	ldw	r17,0(r20)
1001b008:	18002726 	beq	r3,zero,1001b0a8 <__sfvwrite_r+0xfc>
1001b00c:	80c00917 	ldw	r3,36(r16)
1001b010:	80800717 	ldw	r2,28(r16)
1001b014:	05600034 	movhi	r21,32768
1001b018:	0027883a 	mov	r19,zero
1001b01c:	0025883a 	mov	r18,zero
1001b020:	ad7f0004 	addi	r21,r21,-1024
1001b024:	980d883a 	mov	r6,r19
1001b028:	100b883a 	mov	r5,r2
1001b02c:	d9000017 	ldw	r4,0(sp)
1001b030:	90001126 	beq	r18,zero,1001b078 <__sfvwrite_r+0xcc>
1001b034:	900f883a 	mov	r7,r18
1001b038:	ac80012e 	bgeu	r21,r18,1001b040 <__sfvwrite_r+0x94>
1001b03c:	a80f883a 	mov	r7,r21
1001b040:	183ee83a 	callr	r3
1001b044:	00809f0e 	bge	zero,r2,1001b2c4 <__sfvwrite_r+0x318>
1001b048:	a0c00217 	ldw	r3,8(r20)
1001b04c:	98a7883a 	add	r19,r19,r2
1001b050:	90a5c83a 	sub	r18,r18,r2
1001b054:	1885c83a 	sub	r2,r3,r2
1001b058:	a0800215 	stw	r2,8(r20)
1001b05c:	10006326 	beq	r2,zero,1001b1ec <__sfvwrite_r+0x240>
1001b060:	80800717 	ldw	r2,28(r16)
1001b064:	80c00917 	ldw	r3,36(r16)
1001b068:	980d883a 	mov	r6,r19
1001b06c:	100b883a 	mov	r5,r2
1001b070:	d9000017 	ldw	r4,0(sp)
1001b074:	903fef1e 	bne	r18,zero,1001b034 <__sfvwrite_r+0x88>
1001b078:	8cc00017 	ldw	r19,0(r17)
1001b07c:	8c800117 	ldw	r18,4(r17)
1001b080:	8c400204 	addi	r17,r17,8
1001b084:	003fe706 	br	1001b024 <__sfvwrite_r+0x78>
1001b088:	d9000017 	ldw	r4,0(sp)
1001b08c:	800b883a 	mov	r5,r16
1001b090:	0018a6c0 	call	10018a6c <__swsetup_r>
1001b094:	1000f41e 	bne	r2,zero,1001b468 <__sfvwrite_r+0x4bc>
1001b098:	8080030b 	ldhu	r2,12(r16)
1001b09c:	a4400017 	ldw	r17,0(r20)
1001b0a0:	10c0008c 	andi	r3,r2,2
1001b0a4:	183fd91e 	bne	r3,zero,1001b00c <__sfvwrite_r+0x60>
1001b0a8:	10c0004c 	andi	r3,r2,1
1001b0ac:	84800217 	ldw	r18,8(r16)
1001b0b0:	87000017 	ldw	fp,0(r16)
1001b0b4:	18008a1e 	bne	r3,zero,1001b2e0 <__sfvwrite_r+0x334>
1001b0b8:	00e00034 	movhi	r3,32768
1001b0bc:	18ffff84 	addi	r3,r3,-2
1001b0c0:	01200034 	movhi	r4,32768
1001b0c4:	d8c00115 	stw	r3,4(sp)
1001b0c8:	20ffffc4 	addi	r3,r4,-1
1001b0cc:	002d883a 	mov	r22,zero
1001b0d0:	002f883a 	mov	r23,zero
1001b0d4:	d8c00215 	stw	r3,8(sp)
1001b0d8:	b8004026 	beq	r23,zero,1001b1dc <__sfvwrite_r+0x230>
1001b0dc:	1100800c 	andi	r4,r2,512
1001b0e0:	20009026 	beq	r4,zero,1001b324 <__sfvwrite_r+0x378>
1001b0e4:	902b883a 	mov	r21,r18
1001b0e8:	bc80b436 	bltu	r23,r18,1001b3bc <__sfvwrite_r+0x410>
1001b0ec:	1101200c 	andi	r4,r2,1152
1001b0f0:	20002526 	beq	r4,zero,1001b188 <__sfvwrite_r+0x1dc>
1001b0f4:	81800517 	ldw	r6,20(r16)
1001b0f8:	81400417 	ldw	r5,16(r16)
1001b0fc:	b9000044 	addi	r4,r23,1
1001b100:	318000e4 	muli	r6,r6,3
1001b104:	e167c83a 	sub	r19,fp,r5
1001b108:	24c9883a 	add	r4,r4,r19
1001b10c:	3024d7fa 	srli	r18,r6,31
1001b110:	91a5883a 	add	r18,r18,r6
1001b114:	9025d07a 	srai	r18,r18,1
1001b118:	900d883a 	mov	r6,r18
1001b11c:	9100022e 	bgeu	r18,r4,1001b128 <__sfvwrite_r+0x17c>
1001b120:	2025883a 	mov	r18,r4
1001b124:	200d883a 	mov	r6,r4
1001b128:	1081000c 	andi	r2,r2,1024
1001b12c:	1000bc26 	beq	r2,zero,1001b420 <__sfvwrite_r+0x474>
1001b130:	d9000017 	ldw	r4,0(sp)
1001b134:	300b883a 	mov	r5,r6
1001b138:	0014e900 	call	10014e90 <_malloc_r>
1001b13c:	1000c526 	beq	r2,zero,1001b454 <__sfvwrite_r+0x4a8>
1001b140:	81400417 	ldw	r5,16(r16)
1001b144:	980d883a 	mov	r6,r19
1001b148:	1009883a 	mov	r4,r2
1001b14c:	00157f80 	call	100157f8 <memcpy>
1001b150:	100f883a 	mov	r7,r2
1001b154:	8080030b 	ldhu	r2,12(r16)
1001b158:	00fedfc4 	movi	r3,-1153
1001b15c:	10c4703a 	and	r2,r2,r3
1001b160:	10802014 	ori	r2,r2,128
1001b164:	8080030d 	sth	r2,12(r16)
1001b168:	94c5c83a 	sub	r2,r18,r19
1001b16c:	3cf9883a 	add	fp,r7,r19
1001b170:	84800515 	stw	r18,20(r16)
1001b174:	81c00415 	stw	r7,16(r16)
1001b178:	87000015 	stw	fp,0(r16)
1001b17c:	b825883a 	mov	r18,r23
1001b180:	80800215 	stw	r2,8(r16)
1001b184:	b82b883a 	mov	r21,r23
1001b188:	a80d883a 	mov	r6,r21
1001b18c:	b00b883a 	mov	r5,r22
1001b190:	e009883a 	mov	r4,fp
1001b194:	00158f80 	call	100158f8 <memmove>
1001b198:	80800217 	ldw	r2,8(r16)
1001b19c:	81800017 	ldw	r6,0(r16)
1001b1a0:	b827883a 	mov	r19,r23
1001b1a4:	14a5c83a 	sub	r18,r2,r18
1001b1a8:	354d883a 	add	r6,r6,r21
1001b1ac:	84800215 	stw	r18,8(r16)
1001b1b0:	81800015 	stw	r6,0(r16)
1001b1b4:	002f883a 	mov	r23,zero
1001b1b8:	a0800217 	ldw	r2,8(r20)
1001b1bc:	b4ed883a 	add	r22,r22,r19
1001b1c0:	14e7c83a 	sub	r19,r2,r19
1001b1c4:	a4c00215 	stw	r19,8(r20)
1001b1c8:	98000826 	beq	r19,zero,1001b1ec <__sfvwrite_r+0x240>
1001b1cc:	8080030b 	ldhu	r2,12(r16)
1001b1d0:	84800217 	ldw	r18,8(r16)
1001b1d4:	87000017 	ldw	fp,0(r16)
1001b1d8:	b83fc01e 	bne	r23,zero,1001b0dc <__sfvwrite_r+0x130>
1001b1dc:	8d800017 	ldw	r22,0(r17)
1001b1e0:	8dc00117 	ldw	r23,4(r17)
1001b1e4:	8c400204 	addi	r17,r17,8
1001b1e8:	003fbb06 	br	1001b0d8 <__sfvwrite_r+0x12c>
1001b1ec:	0005883a 	mov	r2,zero
1001b1f0:	dfc00c17 	ldw	ra,48(sp)
1001b1f4:	df000b17 	ldw	fp,44(sp)
1001b1f8:	ddc00a17 	ldw	r23,40(sp)
1001b1fc:	dd800917 	ldw	r22,36(sp)
1001b200:	dd400817 	ldw	r21,32(sp)
1001b204:	dd000717 	ldw	r20,28(sp)
1001b208:	dcc00617 	ldw	r19,24(sp)
1001b20c:	dc800517 	ldw	r18,20(sp)
1001b210:	dc400417 	ldw	r17,16(sp)
1001b214:	dc000317 	ldw	r16,12(sp)
1001b218:	dec00d04 	addi	sp,sp,52
1001b21c:	f800283a 	ret
1001b220:	b1c06e16 	blt	r22,r7,1001b3dc <__sfvwrite_r+0x430>
1001b224:	80800917 	ldw	r2,36(r16)
1001b228:	81400717 	ldw	r5,28(r16)
1001b22c:	d9000017 	ldw	r4,0(sp)
1001b230:	b80d883a 	mov	r6,r23
1001b234:	103ee83a 	callr	r2
1001b238:	1025883a 	mov	r18,r2
1001b23c:	0080210e 	bge	zero,r2,1001b2c4 <__sfvwrite_r+0x318>
1001b240:	acabc83a 	sub	r21,r21,r18
1001b244:	a8006026 	beq	r21,zero,1001b3c8 <__sfvwrite_r+0x41c>
1001b248:	00800044 	movi	r2,1
1001b24c:	a0c00217 	ldw	r3,8(r20)
1001b250:	bcaf883a 	add	r23,r23,r18
1001b254:	9ca7c83a 	sub	r19,r19,r18
1001b258:	1ca5c83a 	sub	r18,r3,r18
1001b25c:	a4800215 	stw	r18,8(r20)
1001b260:	903fe226 	beq	r18,zero,1001b1ec <__sfvwrite_r+0x240>
1001b264:	84800217 	ldw	r18,8(r16)
1001b268:	87000017 	ldw	fp,0(r16)
1001b26c:	98002126 	beq	r19,zero,1001b2f4 <__sfvwrite_r+0x348>
1001b270:	10002426 	beq	r2,zero,1001b304 <__sfvwrite_r+0x358>
1001b274:	a805883a 	mov	r2,r21
1001b278:	982d883a 	mov	r22,r19
1001b27c:	14c0012e 	bgeu	r2,r19,1001b284 <__sfvwrite_r+0x2d8>
1001b280:	102d883a 	mov	r22,r2
1001b284:	80800417 	ldw	r2,16(r16)
1001b288:	81c00517 	ldw	r7,20(r16)
1001b28c:	173fe42e 	bgeu	r2,fp,1001b220 <__sfvwrite_r+0x274>
1001b290:	3ca5883a 	add	r18,r7,r18
1001b294:	95bfe20e 	bge	r18,r22,1001b220 <__sfvwrite_r+0x274>
1001b298:	b80b883a 	mov	r5,r23
1001b29c:	e009883a 	mov	r4,fp
1001b2a0:	900d883a 	mov	r6,r18
1001b2a4:	00158f80 	call	100158f8 <memmove>
1001b2a8:	80800017 	ldw	r2,0(r16)
1001b2ac:	d9000017 	ldw	r4,0(sp)
1001b2b0:	800b883a 	mov	r5,r16
1001b2b4:	1485883a 	add	r2,r2,r18
1001b2b8:	80800015 	stw	r2,0(r16)
1001b2bc:	001a7240 	call	1001a724 <_fflush_r>
1001b2c0:	103fdf26 	beq	r2,zero,1001b240 <__sfvwrite_r+0x294>
1001b2c4:	8080030b 	ldhu	r2,12(r16)
1001b2c8:	10801014 	ori	r2,r2,64
1001b2cc:	8080030d 	sth	r2,12(r16)
1001b2d0:	00bfffc4 	movi	r2,-1
1001b2d4:	003fc606 	br	1001b1f0 <__sfvwrite_r+0x244>
1001b2d8:	0005883a 	mov	r2,zero
1001b2dc:	f800283a 	ret
1001b2e0:	0027883a 	mov	r19,zero
1001b2e4:	002b883a 	mov	r21,zero
1001b2e8:	0005883a 	mov	r2,zero
1001b2ec:	002f883a 	mov	r23,zero
1001b2f0:	983fdf1e 	bne	r19,zero,1001b270 <__sfvwrite_r+0x2c4>
1001b2f4:	8cc00117 	ldw	r19,4(r17)
1001b2f8:	8dc00017 	ldw	r23,0(r17)
1001b2fc:	8c400204 	addi	r17,r17,8
1001b300:	983ffc26 	beq	r19,zero,1001b2f4 <__sfvwrite_r+0x348>
1001b304:	980d883a 	mov	r6,r19
1001b308:	01400284 	movi	r5,10
1001b30c:	b809883a 	mov	r4,r23
1001b310:	00156840 	call	10015684 <memchr>
1001b314:	10003f26 	beq	r2,zero,1001b414 <__sfvwrite_r+0x468>
1001b318:	10800044 	addi	r2,r2,1
1001b31c:	15ebc83a 	sub	r21,r2,r23
1001b320:	003fd406 	br	1001b274 <__sfvwrite_r+0x2c8>
1001b324:	80800417 	ldw	r2,16(r16)
1001b328:	17001136 	bltu	r2,fp,1001b370 <__sfvwrite_r+0x3c4>
1001b32c:	84c00517 	ldw	r19,20(r16)
1001b330:	bcc00f36 	bltu	r23,r19,1001b370 <__sfvwrite_r+0x3c4>
1001b334:	d8800117 	ldw	r2,4(sp)
1001b338:	15c0342e 	bgeu	r2,r23,1001b40c <__sfvwrite_r+0x460>
1001b33c:	d9000217 	ldw	r4,8(sp)
1001b340:	980b883a 	mov	r5,r19
1001b344:	0013fb40 	call	10013fb4 <__divsi3>
1001b348:	14cf383a 	mul	r7,r2,r19
1001b34c:	81400717 	ldw	r5,28(r16)
1001b350:	80800917 	ldw	r2,36(r16)
1001b354:	d9000017 	ldw	r4,0(sp)
1001b358:	b00d883a 	mov	r6,r22
1001b35c:	103ee83a 	callr	r2
1001b360:	00bfd80e 	bge	zero,r2,1001b2c4 <__sfvwrite_r+0x318>
1001b364:	1027883a 	mov	r19,r2
1001b368:	bcefc83a 	sub	r23,r23,r19
1001b36c:	003f9206 	br	1001b1b8 <__sfvwrite_r+0x20c>
1001b370:	9027883a 	mov	r19,r18
1001b374:	bc80012e 	bgeu	r23,r18,1001b37c <__sfvwrite_r+0x3d0>
1001b378:	b827883a 	mov	r19,r23
1001b37c:	e009883a 	mov	r4,fp
1001b380:	980d883a 	mov	r6,r19
1001b384:	b00b883a 	mov	r5,r22
1001b388:	00158f80 	call	100158f8 <memmove>
1001b38c:	80800217 	ldw	r2,8(r16)
1001b390:	81000017 	ldw	r4,0(r16)
1001b394:	14c5c83a 	sub	r2,r2,r19
1001b398:	24c9883a 	add	r4,r4,r19
1001b39c:	80800215 	stw	r2,8(r16)
1001b3a0:	81000015 	stw	r4,0(r16)
1001b3a4:	103ff01e 	bne	r2,zero,1001b368 <__sfvwrite_r+0x3bc>
1001b3a8:	d9000017 	ldw	r4,0(sp)
1001b3ac:	800b883a 	mov	r5,r16
1001b3b0:	001a7240 	call	1001a724 <_fflush_r>
1001b3b4:	103fec26 	beq	r2,zero,1001b368 <__sfvwrite_r+0x3bc>
1001b3b8:	003fc206 	br	1001b2c4 <__sfvwrite_r+0x318>
1001b3bc:	b825883a 	mov	r18,r23
1001b3c0:	b82b883a 	mov	r21,r23
1001b3c4:	003f7006 	br	1001b188 <__sfvwrite_r+0x1dc>
1001b3c8:	d9000017 	ldw	r4,0(sp)
1001b3cc:	800b883a 	mov	r5,r16
1001b3d0:	001a7240 	call	1001a724 <_fflush_r>
1001b3d4:	103f9d26 	beq	r2,zero,1001b24c <__sfvwrite_r+0x2a0>
1001b3d8:	003fba06 	br	1001b2c4 <__sfvwrite_r+0x318>
1001b3dc:	b00d883a 	mov	r6,r22
1001b3e0:	b80b883a 	mov	r5,r23
1001b3e4:	e009883a 	mov	r4,fp
1001b3e8:	00158f80 	call	100158f8 <memmove>
1001b3ec:	80c00217 	ldw	r3,8(r16)
1001b3f0:	80800017 	ldw	r2,0(r16)
1001b3f4:	b025883a 	mov	r18,r22
1001b3f8:	1d87c83a 	sub	r3,r3,r22
1001b3fc:	15ad883a 	add	r22,r2,r22
1001b400:	80c00215 	stw	r3,8(r16)
1001b404:	85800015 	stw	r22,0(r16)
1001b408:	003f8d06 	br	1001b240 <__sfvwrite_r+0x294>
1001b40c:	b809883a 	mov	r4,r23
1001b410:	003fcb06 	br	1001b340 <__sfvwrite_r+0x394>
1001b414:	98800044 	addi	r2,r19,1
1001b418:	102b883a 	mov	r21,r2
1001b41c:	003f9606 	br	1001b278 <__sfvwrite_r+0x2cc>
1001b420:	d9000017 	ldw	r4,0(sp)
1001b424:	001c7f00 	call	1001c7f0 <_realloc_r>
1001b428:	100f883a 	mov	r7,r2
1001b42c:	103f4e1e 	bne	r2,zero,1001b168 <__sfvwrite_r+0x1bc>
1001b430:	dc400017 	ldw	r17,0(sp)
1001b434:	81400417 	ldw	r5,16(r16)
1001b438:	8809883a 	mov	r4,r17
1001b43c:	001acb00 	call	1001acb0 <_free_r>
1001b440:	8080030b 	ldhu	r2,12(r16)
1001b444:	00c00304 	movi	r3,12
1001b448:	88c00015 	stw	r3,0(r17)
1001b44c:	10bfdfcc 	andi	r2,r2,65407
1001b450:	003f9d06 	br	1001b2c8 <__sfvwrite_r+0x31c>
1001b454:	d8c00017 	ldw	r3,0(sp)
1001b458:	00800304 	movi	r2,12
1001b45c:	18800015 	stw	r2,0(r3)
1001b460:	8080030b 	ldhu	r2,12(r16)
1001b464:	003f9806 	br	1001b2c8 <__sfvwrite_r+0x31c>
1001b468:	00bfffc4 	movi	r2,-1
1001b46c:	003f6006 	br	1001b1f0 <__sfvwrite_r+0x244>

1001b470 <_fwalk>:
1001b470:	defffa04 	addi	sp,sp,-24
1001b474:	dc800215 	stw	r18,8(sp)
1001b478:	dfc00515 	stw	ra,20(sp)
1001b47c:	dd000415 	stw	r20,16(sp)
1001b480:	dcc00315 	stw	r19,12(sp)
1001b484:	dc400115 	stw	r17,4(sp)
1001b488:	dc000015 	stw	r16,0(sp)
1001b48c:	2480b804 	addi	r18,r4,736
1001b490:	90001e26 	beq	r18,zero,1001b50c <_fwalk+0x9c>
1001b494:	2827883a 	mov	r19,r5
1001b498:	0029883a 	mov	r20,zero
1001b49c:	94400117 	ldw	r17,4(r18)
1001b4a0:	94000217 	ldw	r16,8(r18)
1001b4a4:	8c7fffc4 	addi	r17,r17,-1
1001b4a8:	88000d16 	blt	r17,zero,1001b4e0 <_fwalk+0x70>
1001b4ac:	8080030b 	ldhu	r2,12(r16)
1001b4b0:	8c7fffc4 	addi	r17,r17,-1
1001b4b4:	108000b0 	cmpltui	r2,r2,2
1001b4b8:	1000061e 	bne	r2,zero,1001b4d4 <_fwalk+0x64>
1001b4bc:	8080038f 	ldh	r2,14(r16)
1001b4c0:	8009883a 	mov	r4,r16
1001b4c4:	10bfffe0 	cmpeqi	r2,r2,-1
1001b4c8:	1000021e 	bne	r2,zero,1001b4d4 <_fwalk+0x64>
1001b4cc:	983ee83a 	callr	r19
1001b4d0:	a0a8b03a 	or	r20,r20,r2
1001b4d4:	88bfffd8 	cmpnei	r2,r17,-1
1001b4d8:	84001a04 	addi	r16,r16,104
1001b4dc:	103ff31e 	bne	r2,zero,1001b4ac <_fwalk+0x3c>
1001b4e0:	94800017 	ldw	r18,0(r18)
1001b4e4:	903fed1e 	bne	r18,zero,1001b49c <_fwalk+0x2c>
1001b4e8:	a005883a 	mov	r2,r20
1001b4ec:	dfc00517 	ldw	ra,20(sp)
1001b4f0:	dd000417 	ldw	r20,16(sp)
1001b4f4:	dcc00317 	ldw	r19,12(sp)
1001b4f8:	dc800217 	ldw	r18,8(sp)
1001b4fc:	dc400117 	ldw	r17,4(sp)
1001b500:	dc000017 	ldw	r16,0(sp)
1001b504:	dec00604 	addi	sp,sp,24
1001b508:	f800283a 	ret
1001b50c:	0029883a 	mov	r20,zero
1001b510:	003ff506 	br	1001b4e8 <_fwalk+0x78>

1001b514 <_fwalk_reent>:
1001b514:	defff904 	addi	sp,sp,-28
1001b518:	dc800215 	stw	r18,8(sp)
1001b51c:	dfc00615 	stw	ra,24(sp)
1001b520:	dd400515 	stw	r21,20(sp)
1001b524:	dd000415 	stw	r20,16(sp)
1001b528:	dcc00315 	stw	r19,12(sp)
1001b52c:	dc400115 	stw	r17,4(sp)
1001b530:	dc000015 	stw	r16,0(sp)
1001b534:	2480b804 	addi	r18,r4,736
1001b538:	90002126 	beq	r18,zero,1001b5c0 <_fwalk_reent+0xac>
1001b53c:	2829883a 	mov	r20,r5
1001b540:	2027883a 	mov	r19,r4
1001b544:	002b883a 	mov	r21,zero
1001b548:	94400117 	ldw	r17,4(r18)
1001b54c:	94000217 	ldw	r16,8(r18)
1001b550:	8c7fffc4 	addi	r17,r17,-1
1001b554:	88000e16 	blt	r17,zero,1001b590 <_fwalk_reent+0x7c>
1001b558:	8080030b 	ldhu	r2,12(r16)
1001b55c:	8c7fffc4 	addi	r17,r17,-1
1001b560:	108000b0 	cmpltui	r2,r2,2
1001b564:	1000071e 	bne	r2,zero,1001b584 <_fwalk_reent+0x70>
1001b568:	8080038f 	ldh	r2,14(r16)
1001b56c:	800b883a 	mov	r5,r16
1001b570:	9809883a 	mov	r4,r19
1001b574:	10bfffe0 	cmpeqi	r2,r2,-1
1001b578:	1000021e 	bne	r2,zero,1001b584 <_fwalk_reent+0x70>
1001b57c:	a03ee83a 	callr	r20
1001b580:	a8aab03a 	or	r21,r21,r2
1001b584:	88bfffd8 	cmpnei	r2,r17,-1
1001b588:	84001a04 	addi	r16,r16,104
1001b58c:	103ff21e 	bne	r2,zero,1001b558 <_fwalk_reent+0x44>
1001b590:	94800017 	ldw	r18,0(r18)
1001b594:	903fec1e 	bne	r18,zero,1001b548 <_fwalk_reent+0x34>
1001b598:	a805883a 	mov	r2,r21
1001b59c:	dfc00617 	ldw	ra,24(sp)
1001b5a0:	dd400517 	ldw	r21,20(sp)
1001b5a4:	dd000417 	ldw	r20,16(sp)
1001b5a8:	dcc00317 	ldw	r19,12(sp)
1001b5ac:	dc800217 	ldw	r18,8(sp)
1001b5b0:	dc400117 	ldw	r17,4(sp)
1001b5b4:	dc000017 	ldw	r16,0(sp)
1001b5b8:	dec00704 	addi	sp,sp,28
1001b5bc:	f800283a 	ret
1001b5c0:	002b883a 	mov	r21,zero
1001b5c4:	003ff406 	br	1001b598 <_fwalk_reent+0x84>

1001b5c8 <_isatty_r>:
1001b5c8:	defffe04 	addi	sp,sp,-8
1001b5cc:	dc000015 	stw	r16,0(sp)
1001b5d0:	008400f4 	movhi	r2,4099
1001b5d4:	2021883a 	mov	r16,r4
1001b5d8:	2809883a 	mov	r4,r5
1001b5dc:	dfc00115 	stw	ra,4(sp)
1001b5e0:	102aaa15 	stw	zero,-21848(r2)
1001b5e4:	0021efc0 	call	10021efc <isatty>
1001b5e8:	10ffffd8 	cmpnei	r3,r2,-1
1001b5ec:	18000426 	beq	r3,zero,1001b600 <_isatty_r+0x38>
1001b5f0:	dfc00117 	ldw	ra,4(sp)
1001b5f4:	dc000017 	ldw	r16,0(sp)
1001b5f8:	dec00204 	addi	sp,sp,8
1001b5fc:	f800283a 	ret
1001b600:	00c400f4 	movhi	r3,4099
1001b604:	18eaaa17 	ldw	r3,-21848(r3)
1001b608:	183ff926 	beq	r3,zero,1001b5f0 <_isatty_r+0x28>
1001b60c:	80c00015 	stw	r3,0(r16)
1001b610:	dfc00117 	ldw	ra,4(sp)
1001b614:	dc000017 	ldw	r16,0(sp)
1001b618:	dec00204 	addi	sp,sp,8
1001b61c:	f800283a 	ret

1001b620 <__localeconv_l>:
1001b620:	20803c04 	addi	r2,r4,240
1001b624:	f800283a 	ret

1001b628 <_localeconv_r>:
1001b628:	008400b4 	movhi	r2,4098
1001b62c:	109ca704 	addi	r2,r2,29340
1001b630:	f800283a 	ret

1001b634 <localeconv>:
1001b634:	008400b4 	movhi	r2,4098
1001b638:	109ca704 	addi	r2,r2,29340
1001b63c:	f800283a 	ret

1001b640 <_lseek_r>:
1001b640:	defffe04 	addi	sp,sp,-8
1001b644:	2805883a 	mov	r2,r5
1001b648:	dc000015 	stw	r16,0(sp)
1001b64c:	300b883a 	mov	r5,r6
1001b650:	2021883a 	mov	r16,r4
1001b654:	380d883a 	mov	r6,r7
1001b658:	1009883a 	mov	r4,r2
1001b65c:	008400f4 	movhi	r2,4099
1001b660:	dfc00115 	stw	ra,4(sp)
1001b664:	102aaa15 	stw	zero,-21848(r2)
1001b668:	00222300 	call	10022230 <lseek>
1001b66c:	10ffffd8 	cmpnei	r3,r2,-1
1001b670:	18000426 	beq	r3,zero,1001b684 <_lseek_r+0x44>
1001b674:	dfc00117 	ldw	ra,4(sp)
1001b678:	dc000017 	ldw	r16,0(sp)
1001b67c:	dec00204 	addi	sp,sp,8
1001b680:	f800283a 	ret
1001b684:	00c400f4 	movhi	r3,4099
1001b688:	18eaaa17 	ldw	r3,-21848(r3)
1001b68c:	183ff926 	beq	r3,zero,1001b674 <_lseek_r+0x34>
1001b690:	80c00015 	stw	r3,0(r16)
1001b694:	dfc00117 	ldw	ra,4(sp)
1001b698:	dc000017 	ldw	r16,0(sp)
1001b69c:	dec00204 	addi	sp,sp,8
1001b6a0:	f800283a 	ret

1001b6a4 <_Balloc>:
1001b6a4:	20801317 	ldw	r2,76(r4)
1001b6a8:	defffc04 	addi	sp,sp,-16
1001b6ac:	dc400115 	stw	r17,4(sp)
1001b6b0:	dc000015 	stw	r16,0(sp)
1001b6b4:	dfc00315 	stw	ra,12(sp)
1001b6b8:	dc800215 	stw	r18,8(sp)
1001b6bc:	2021883a 	mov	r16,r4
1001b6c0:	2823883a 	mov	r17,r5
1001b6c4:	10000e26 	beq	r2,zero,1001b700 <_Balloc+0x5c>
1001b6c8:	880690ba 	slli	r3,r17,2
1001b6cc:	10c7883a 	add	r3,r2,r3
1001b6d0:	18800017 	ldw	r2,0(r3)
1001b6d4:	10001126 	beq	r2,zero,1001b71c <_Balloc+0x78>
1001b6d8:	11000017 	ldw	r4,0(r2)
1001b6dc:	19000015 	stw	r4,0(r3)
1001b6e0:	10000415 	stw	zero,16(r2)
1001b6e4:	10000315 	stw	zero,12(r2)
1001b6e8:	dfc00317 	ldw	ra,12(sp)
1001b6ec:	dc800217 	ldw	r18,8(sp)
1001b6f0:	dc400117 	ldw	r17,4(sp)
1001b6f4:	dc000017 	ldw	r16,0(sp)
1001b6f8:	dec00404 	addi	sp,sp,16
1001b6fc:	f800283a 	ret
1001b700:	01800844 	movi	r6,33
1001b704:	01400104 	movi	r5,4
1001b708:	001e4880 	call	1001e488 <_calloc_r>
1001b70c:	80801315 	stw	r2,76(r16)
1001b710:	103fed1e 	bne	r2,zero,1001b6c8 <_Balloc+0x24>
1001b714:	0005883a 	mov	r2,zero
1001b718:	003ff306 	br	1001b6e8 <_Balloc+0x44>
1001b71c:	04800044 	movi	r18,1
1001b720:	9464983a 	sll	r18,r18,r17
1001b724:	01400044 	movi	r5,1
1001b728:	8009883a 	mov	r4,r16
1001b72c:	91800144 	addi	r6,r18,5
1001b730:	300c90ba 	slli	r6,r6,2
1001b734:	001e4880 	call	1001e488 <_calloc_r>
1001b738:	103ff626 	beq	r2,zero,1001b714 <_Balloc+0x70>
1001b73c:	14400115 	stw	r17,4(r2)
1001b740:	14800215 	stw	r18,8(r2)
1001b744:	003fe606 	br	1001b6e0 <_Balloc+0x3c>

1001b748 <_Bfree>:
1001b748:	28000726 	beq	r5,zero,1001b768 <_Bfree+0x20>
1001b74c:	28c00117 	ldw	r3,4(r5)
1001b750:	20801317 	ldw	r2,76(r4)
1001b754:	180690ba 	slli	r3,r3,2
1001b758:	10c5883a 	add	r2,r2,r3
1001b75c:	10c00017 	ldw	r3,0(r2)
1001b760:	28c00015 	stw	r3,0(r5)
1001b764:	11400015 	stw	r5,0(r2)
1001b768:	f800283a 	ret

1001b76c <__multadd>:
1001b76c:	defffa04 	addi	sp,sp,-24
1001b770:	dc800315 	stw	r18,12(sp)
1001b774:	dc400215 	stw	r17,8(sp)
1001b778:	dc000115 	stw	r16,4(sp)
1001b77c:	2823883a 	mov	r17,r5
1001b780:	2c000417 	ldw	r16,16(r5)
1001b784:	2025883a 	mov	r18,r4
1001b788:	dfc00515 	stw	ra,20(sp)
1001b78c:	29000504 	addi	r4,r5,20
1001b790:	dcc00415 	stw	r19,16(sp)
1001b794:	000b883a 	mov	r5,zero
1001b798:	20800017 	ldw	r2,0(r4)
1001b79c:	21000104 	addi	r4,r4,4
1001b7a0:	29400044 	addi	r5,r5,1
1001b7a4:	10ffffcc 	andi	r3,r2,65535
1001b7a8:	1987383a 	mul	r3,r3,r6
1001b7ac:	1004d43a 	srli	r2,r2,16
1001b7b0:	19cf883a 	add	r7,r3,r7
1001b7b4:	1185383a 	mul	r2,r2,r6
1001b7b8:	3810d43a 	srli	r8,r7,16
1001b7bc:	38ffffcc 	andi	r3,r7,65535
1001b7c0:	120f883a 	add	r7,r2,r8
1001b7c4:	3804943a 	slli	r2,r7,16
1001b7c8:	380ed43a 	srli	r7,r7,16
1001b7cc:	10c7883a 	add	r3,r2,r3
1001b7d0:	20ffff15 	stw	r3,-4(r4)
1001b7d4:	2c3ff016 	blt	r5,r16,1001b798 <__multadd+0x2c>
1001b7d8:	38000826 	beq	r7,zero,1001b7fc <__multadd+0x90>
1001b7dc:	88800217 	ldw	r2,8(r17)
1001b7e0:	80800e0e 	bge	r16,r2,1001b81c <__multadd+0xb0>
1001b7e4:	80800144 	addi	r2,r16,5
1001b7e8:	100490ba 	slli	r2,r2,2
1001b7ec:	84000044 	addi	r16,r16,1
1001b7f0:	8885883a 	add	r2,r17,r2
1001b7f4:	11c00015 	stw	r7,0(r2)
1001b7f8:	8c000415 	stw	r16,16(r17)
1001b7fc:	8805883a 	mov	r2,r17
1001b800:	dfc00517 	ldw	ra,20(sp)
1001b804:	dcc00417 	ldw	r19,16(sp)
1001b808:	dc800317 	ldw	r18,12(sp)
1001b80c:	dc400217 	ldw	r17,8(sp)
1001b810:	dc000117 	ldw	r16,4(sp)
1001b814:	dec00604 	addi	sp,sp,24
1001b818:	f800283a 	ret
1001b81c:	89400117 	ldw	r5,4(r17)
1001b820:	9009883a 	mov	r4,r18
1001b824:	d9c00015 	stw	r7,0(sp)
1001b828:	29400044 	addi	r5,r5,1
1001b82c:	001b6a40 	call	1001b6a4 <_Balloc>
1001b830:	89800417 	ldw	r6,16(r17)
1001b834:	89400304 	addi	r5,r17,12
1001b838:	11000304 	addi	r4,r2,12
1001b83c:	31800084 	addi	r6,r6,2
1001b840:	300c90ba 	slli	r6,r6,2
1001b844:	1027883a 	mov	r19,r2
1001b848:	00157f80 	call	100157f8 <memcpy>
1001b84c:	d9c00017 	ldw	r7,0(sp)
1001b850:	88000926 	beq	r17,zero,1001b878 <__multadd+0x10c>
1001b854:	88c00117 	ldw	r3,4(r17)
1001b858:	90801317 	ldw	r2,76(r18)
1001b85c:	180690ba 	slli	r3,r3,2
1001b860:	10c5883a 	add	r2,r2,r3
1001b864:	10c00017 	ldw	r3,0(r2)
1001b868:	88c00015 	stw	r3,0(r17)
1001b86c:	14400015 	stw	r17,0(r2)
1001b870:	9823883a 	mov	r17,r19
1001b874:	003fdb06 	br	1001b7e4 <__multadd+0x78>
1001b878:	9823883a 	mov	r17,r19
1001b87c:	003fd906 	br	1001b7e4 <__multadd+0x78>

1001b880 <__s2b>:
1001b880:	defff904 	addi	sp,sp,-28
1001b884:	dc800215 	stw	r18,8(sp)
1001b888:	dc000015 	stw	r16,0(sp)
1001b88c:	2025883a 	mov	r18,r4
1001b890:	2821883a 	mov	r16,r5
1001b894:	39000204 	addi	r4,r7,8
1001b898:	01400244 	movi	r5,9
1001b89c:	dcc00315 	stw	r19,12(sp)
1001b8a0:	dc400115 	stw	r17,4(sp)
1001b8a4:	dfc00615 	stw	ra,24(sp)
1001b8a8:	3823883a 	mov	r17,r7
1001b8ac:	dd400515 	stw	r21,20(sp)
1001b8b0:	dd000415 	stw	r20,16(sp)
1001b8b4:	3027883a 	mov	r19,r6
1001b8b8:	0013fb40 	call	10013fb4 <__divsi3>
1001b8bc:	88c00290 	cmplti	r3,r17,10
1001b8c0:	1800311e 	bne	r3,zero,1001b988 <__s2b+0x108>
1001b8c4:	00c00044 	movi	r3,1
1001b8c8:	000b883a 	mov	r5,zero
1001b8cc:	18c7883a 	add	r3,r3,r3
1001b8d0:	29400044 	addi	r5,r5,1
1001b8d4:	18bffd16 	blt	r3,r2,1001b8cc <__s2b+0x4c>
1001b8d8:	9009883a 	mov	r4,r18
1001b8dc:	001b6a40 	call	1001b6a4 <_Balloc>
1001b8e0:	d8c00717 	ldw	r3,28(sp)
1001b8e4:	10c00515 	stw	r3,20(r2)
1001b8e8:	00c00044 	movi	r3,1
1001b8ec:	10c00415 	stw	r3,16(r2)
1001b8f0:	98c00290 	cmplti	r3,r19,10
1001b8f4:	1800211e 	bne	r3,zero,1001b97c <__s2b+0xfc>
1001b8f8:	85400244 	addi	r21,r16,9
1001b8fc:	84e9883a 	add	r20,r16,r19
1001b900:	a821883a 	mov	r16,r21
1001b904:	84000044 	addi	r16,r16,1
1001b908:	81ffffc7 	ldb	r7,-1(r16)
1001b90c:	01800284 	movi	r6,10
1001b910:	100b883a 	mov	r5,r2
1001b914:	39fff404 	addi	r7,r7,-48
1001b918:	9009883a 	mov	r4,r18
1001b91c:	001b76c0 	call	1001b76c <__multadd>
1001b920:	a43ff81e 	bne	r20,r16,1001b904 <__s2b+0x84>
1001b924:	9c3ffe04 	addi	r16,r19,-8
1001b928:	ac21883a 	add	r16,r21,r16
1001b92c:	9c400a0e 	bge	r19,r17,1001b958 <__s2b+0xd8>
1001b930:	8ce3c83a 	sub	r17,r17,r19
1001b934:	8463883a 	add	r17,r16,r17
1001b938:	84000044 	addi	r16,r16,1
1001b93c:	81ffffc7 	ldb	r7,-1(r16)
1001b940:	01800284 	movi	r6,10
1001b944:	100b883a 	mov	r5,r2
1001b948:	39fff404 	addi	r7,r7,-48
1001b94c:	9009883a 	mov	r4,r18
1001b950:	001b76c0 	call	1001b76c <__multadd>
1001b954:	8c3ff81e 	bne	r17,r16,1001b938 <__s2b+0xb8>
1001b958:	dfc00617 	ldw	ra,24(sp)
1001b95c:	dd400517 	ldw	r21,20(sp)
1001b960:	dd000417 	ldw	r20,16(sp)
1001b964:	dcc00317 	ldw	r19,12(sp)
1001b968:	dc800217 	ldw	r18,8(sp)
1001b96c:	dc400117 	ldw	r17,4(sp)
1001b970:	dc000017 	ldw	r16,0(sp)
1001b974:	dec00704 	addi	sp,sp,28
1001b978:	f800283a 	ret
1001b97c:	84000284 	addi	r16,r16,10
1001b980:	04c00244 	movi	r19,9
1001b984:	003fe906 	br	1001b92c <__s2b+0xac>
1001b988:	000b883a 	mov	r5,zero
1001b98c:	003fd206 	br	1001b8d8 <__s2b+0x58>

1001b990 <__hi0bits>:
1001b990:	20bfffec 	andhi	r2,r4,65535
1001b994:	1000131e 	bne	r2,zero,1001b9e4 <__hi0bits+0x54>
1001b998:	2008943a 	slli	r4,r4,16
1001b99c:	00800404 	movi	r2,16
1001b9a0:	20ffc02c 	andhi	r3,r4,65280
1001b9a4:	1800021e 	bne	r3,zero,1001b9b0 <__hi0bits+0x20>
1001b9a8:	2008923a 	slli	r4,r4,8
1001b9ac:	10800204 	addi	r2,r2,8
1001b9b0:	20fc002c 	andhi	r3,r4,61440
1001b9b4:	1800021e 	bne	r3,zero,1001b9c0 <__hi0bits+0x30>
1001b9b8:	2008913a 	slli	r4,r4,4
1001b9bc:	10800104 	addi	r2,r2,4
1001b9c0:	20f0002c 	andhi	r3,r4,49152
1001b9c4:	1800021e 	bne	r3,zero,1001b9d0 <__hi0bits+0x40>
1001b9c8:	200890ba 	slli	r4,r4,2
1001b9cc:	10800084 	addi	r2,r2,2
1001b9d0:	20000316 	blt	r4,zero,1001b9e0 <__hi0bits+0x50>
1001b9d4:	2110002c 	andhi	r4,r4,16384
1001b9d8:	10800044 	addi	r2,r2,1
1001b9dc:	20000326 	beq	r4,zero,1001b9ec <__hi0bits+0x5c>
1001b9e0:	f800283a 	ret
1001b9e4:	0005883a 	mov	r2,zero
1001b9e8:	003fed06 	br	1001b9a0 <__hi0bits+0x10>
1001b9ec:	00800804 	movi	r2,32
1001b9f0:	f800283a 	ret

1001b9f4 <__lo0bits>:
1001b9f4:	20c00017 	ldw	r3,0(r4)
1001b9f8:	188001cc 	andi	r2,r3,7
1001b9fc:	10000826 	beq	r2,zero,1001ba20 <__lo0bits+0x2c>
1001ba00:	1880004c 	andi	r2,r3,1
1001ba04:	10001f1e 	bne	r2,zero,1001ba84 <__lo0bits+0x90>
1001ba08:	1880008c 	andi	r2,r3,2
1001ba0c:	10002126 	beq	r2,zero,1001ba94 <__lo0bits+0xa0>
1001ba10:	1806d07a 	srli	r3,r3,1
1001ba14:	00800044 	movi	r2,1
1001ba18:	20c00015 	stw	r3,0(r4)
1001ba1c:	f800283a 	ret
1001ba20:	18bfffcc 	andi	r2,r3,65535
1001ba24:	1000151e 	bne	r2,zero,1001ba7c <__lo0bits+0x88>
1001ba28:	1806d43a 	srli	r3,r3,16
1001ba2c:	00800404 	movi	r2,16
1001ba30:	19403fcc 	andi	r5,r3,255
1001ba34:	2800021e 	bne	r5,zero,1001ba40 <__lo0bits+0x4c>
1001ba38:	1806d23a 	srli	r3,r3,8
1001ba3c:	10800204 	addi	r2,r2,8
1001ba40:	194003cc 	andi	r5,r3,15
1001ba44:	2800021e 	bne	r5,zero,1001ba50 <__lo0bits+0x5c>
1001ba48:	1806d13a 	srli	r3,r3,4
1001ba4c:	10800104 	addi	r2,r2,4
1001ba50:	194000cc 	andi	r5,r3,3
1001ba54:	2800021e 	bne	r5,zero,1001ba60 <__lo0bits+0x6c>
1001ba58:	1806d0ba 	srli	r3,r3,2
1001ba5c:	10800084 	addi	r2,r2,2
1001ba60:	1940004c 	andi	r5,r3,1
1001ba64:	2800031e 	bne	r5,zero,1001ba74 <__lo0bits+0x80>
1001ba68:	1806d07a 	srli	r3,r3,1
1001ba6c:	10800044 	addi	r2,r2,1
1001ba70:	18000626 	beq	r3,zero,1001ba8c <__lo0bits+0x98>
1001ba74:	20c00015 	stw	r3,0(r4)
1001ba78:	f800283a 	ret
1001ba7c:	0005883a 	mov	r2,zero
1001ba80:	003feb06 	br	1001ba30 <__lo0bits+0x3c>
1001ba84:	0005883a 	mov	r2,zero
1001ba88:	f800283a 	ret
1001ba8c:	00800804 	movi	r2,32
1001ba90:	f800283a 	ret
1001ba94:	1806d0ba 	srli	r3,r3,2
1001ba98:	00800084 	movi	r2,2
1001ba9c:	20c00015 	stw	r3,0(r4)
1001baa0:	f800283a 	ret

1001baa4 <__i2b>:
1001baa4:	defffe04 	addi	sp,sp,-8
1001baa8:	dc000015 	stw	r16,0(sp)
1001baac:	2821883a 	mov	r16,r5
1001bab0:	01400044 	movi	r5,1
1001bab4:	dfc00115 	stw	ra,4(sp)
1001bab8:	001b6a40 	call	1001b6a4 <_Balloc>
1001babc:	01000044 	movi	r4,1
1001bac0:	14000515 	stw	r16,20(r2)
1001bac4:	11000415 	stw	r4,16(r2)
1001bac8:	dfc00117 	ldw	ra,4(sp)
1001bacc:	dc000017 	ldw	r16,0(sp)
1001bad0:	dec00204 	addi	sp,sp,8
1001bad4:	f800283a 	ret

1001bad8 <__multiply>:
1001bad8:	defffa04 	addi	sp,sp,-24
1001badc:	dd000415 	stw	r20,16(sp)
1001bae0:	dcc00315 	stw	r19,12(sp)
1001bae4:	35000417 	ldw	r20,16(r6)
1001bae8:	2cc00417 	ldw	r19,16(r5)
1001baec:	dc800215 	stw	r18,8(sp)
1001baf0:	dc400115 	stw	r17,4(sp)
1001baf4:	dfc00515 	stw	ra,20(sp)
1001baf8:	dc000015 	stw	r16,0(sp)
1001bafc:	2823883a 	mov	r17,r5
1001bb00:	3025883a 	mov	r18,r6
1001bb04:	9d000516 	blt	r19,r20,1001bb1c <__multiply+0x44>
1001bb08:	a007883a 	mov	r3,r20
1001bb0c:	2825883a 	mov	r18,r5
1001bb10:	9829883a 	mov	r20,r19
1001bb14:	3023883a 	mov	r17,r6
1001bb18:	1827883a 	mov	r19,r3
1001bb1c:	90800217 	ldw	r2,8(r18)
1001bb20:	a4e1883a 	add	r16,r20,r19
1001bb24:	91400117 	ldw	r5,4(r18)
1001bb28:	1400010e 	bge	r2,r16,1001bb30 <__multiply+0x58>
1001bb2c:	29400044 	addi	r5,r5,1
1001bb30:	001b6a40 	call	1001b6a4 <_Balloc>
1001bb34:	801290ba 	slli	r9,r16,2
1001bb38:	12800504 	addi	r10,r2,20
1001bb3c:	5007883a 	mov	r3,r10
1001bb40:	5253883a 	add	r9,r10,r9
1001bb44:	5240032e 	bgeu	r10,r9,1001bb54 <__multiply+0x7c>
1001bb48:	18000015 	stw	zero,0(r3)
1001bb4c:	18c00104 	addi	r3,r3,4
1001bb50:	1a7ffd36 	bltu	r3,r9,1001bb48 <__multiply+0x70>
1001bb54:	981690ba 	slli	r11,r19,2
1001bb58:	a01090ba 	slli	r8,r20,2
1001bb5c:	89400504 	addi	r5,r17,20
1001bb60:	91800504 	addi	r6,r18,20
1001bb64:	2ad7883a 	add	r11,r5,r11
1001bb68:	3211883a 	add	r8,r6,r8
1001bb6c:	2ac00636 	bltu	r5,r11,1001bb88 <__multiply+0xb0>
1001bb70:	00004106 	br	1001bc78 <__multiply+0x1a0>
1001bb74:	701cd43a 	srli	r14,r14,16
1001bb78:	7000221e 	bne	r14,zero,1001bc04 <__multiply+0x12c>
1001bb7c:	29400104 	addi	r5,r5,4
1001bb80:	52800104 	addi	r10,r10,4
1001bb84:	2ac03c2e 	bgeu	r5,r11,1001bc78 <__multiply+0x1a0>
1001bb88:	2b800017 	ldw	r14,0(r5)
1001bb8c:	73ffffcc 	andi	r15,r14,65535
1001bb90:	783ff826 	beq	r15,zero,1001bb74 <__multiply+0x9c>
1001bb94:	501b883a 	mov	r13,r10
1001bb98:	301d883a 	mov	r14,r6
1001bb9c:	003f883a 	mov	ra,zero
1001bba0:	71000017 	ldw	r4,0(r14)
1001bba4:	6b000017 	ldw	r12,0(r13)
1001bba8:	6b400104 	addi	r13,r13,4
1001bbac:	21ffffcc 	andi	r7,r4,65535
1001bbb0:	3bcf383a 	mul	r7,r7,r15
1001bbb4:	2006d43a 	srli	r3,r4,16
1001bbb8:	613fffcc 	andi	r4,r12,65535
1001bbbc:	390f883a 	add	r7,r7,r4
1001bbc0:	3fcf883a 	add	r7,r7,ra
1001bbc4:	1bc7383a 	mul	r3,r3,r15
1001bbc8:	6018d43a 	srli	r12,r12,16
1001bbcc:	3808d43a 	srli	r4,r7,16
1001bbd0:	39ffffcc 	andi	r7,r7,65535
1001bbd4:	1b07883a 	add	r3,r3,r12
1001bbd8:	1907883a 	add	r3,r3,r4
1001bbdc:	1808943a 	slli	r4,r3,16
1001bbe0:	73800104 	addi	r14,r14,4
1001bbe4:	183ed43a 	srli	ra,r3,16
1001bbe8:	21ceb03a 	or	r7,r4,r7
1001bbec:	69ffff15 	stw	r7,-4(r13)
1001bbf0:	723feb36 	bltu	r14,r8,1001bba0 <__multiply+0xc8>
1001bbf4:	6fc00015 	stw	ra,0(r13)
1001bbf8:	2b800017 	ldw	r14,0(r5)
1001bbfc:	701cd43a 	srli	r14,r14,16
1001bc00:	703fde26 	beq	r14,zero,1001bb7c <__multiply+0xa4>
1001bc04:	50c00017 	ldw	r3,0(r10)
1001bc08:	501b883a 	mov	r13,r10
1001bc0c:	3019883a 	mov	r12,r6
1001bc10:	180f883a 	mov	r7,r3
1001bc14:	001f883a 	mov	r15,zero
1001bc18:	6100000b 	ldhu	r4,0(r12)
1001bc1c:	380ed43a 	srli	r7,r7,16
1001bc20:	18ffffcc 	andi	r3,r3,65535
1001bc24:	2389383a 	mul	r4,r4,r14
1001bc28:	6b400104 	addi	r13,r13,4
1001bc2c:	63000104 	addi	r12,r12,4
1001bc30:	21c9883a 	add	r4,r4,r7
1001bc34:	23c9883a 	add	r4,r4,r15
1001bc38:	201e943a 	slli	r15,r4,16
1001bc3c:	69c00017 	ldw	r7,0(r13)
1001bc40:	2008d43a 	srli	r4,r4,16
1001bc44:	78c6b03a 	or	r3,r15,r3
1001bc48:	68ffff15 	stw	r3,-4(r13)
1001bc4c:	60ffff8b 	ldhu	r3,-2(r12)
1001bc50:	3bffffcc 	andi	r15,r7,65535
1001bc54:	1b87383a 	mul	r3,r3,r14
1001bc58:	1bc7883a 	add	r3,r3,r15
1001bc5c:	1907883a 	add	r3,r3,r4
1001bc60:	181ed43a 	srli	r15,r3,16
1001bc64:	623fec36 	bltu	r12,r8,1001bc18 <__multiply+0x140>
1001bc68:	68c00015 	stw	r3,0(r13)
1001bc6c:	29400104 	addi	r5,r5,4
1001bc70:	52800104 	addi	r10,r10,4
1001bc74:	2affc436 	bltu	r5,r11,1001bb88 <__multiply+0xb0>
1001bc78:	0400090e 	bge	zero,r16,1001bca0 <__multiply+0x1c8>
1001bc7c:	48ffff17 	ldw	r3,-4(r9)
1001bc80:	4a7fff04 	addi	r9,r9,-4
1001bc84:	18000326 	beq	r3,zero,1001bc94 <__multiply+0x1bc>
1001bc88:	00000506 	br	1001bca0 <__multiply+0x1c8>
1001bc8c:	48c00017 	ldw	r3,0(r9)
1001bc90:	1800031e 	bne	r3,zero,1001bca0 <__multiply+0x1c8>
1001bc94:	843fffc4 	addi	r16,r16,-1
1001bc98:	4a7fff04 	addi	r9,r9,-4
1001bc9c:	803ffb1e 	bne	r16,zero,1001bc8c <__multiply+0x1b4>
1001bca0:	14000415 	stw	r16,16(r2)
1001bca4:	dfc00517 	ldw	ra,20(sp)
1001bca8:	dd000417 	ldw	r20,16(sp)
1001bcac:	dcc00317 	ldw	r19,12(sp)
1001bcb0:	dc800217 	ldw	r18,8(sp)
1001bcb4:	dc400117 	ldw	r17,4(sp)
1001bcb8:	dc000017 	ldw	r16,0(sp)
1001bcbc:	dec00604 	addi	sp,sp,24
1001bcc0:	f800283a 	ret

1001bcc4 <__pow5mult>:
1001bcc4:	defffb04 	addi	sp,sp,-20
1001bcc8:	dcc00315 	stw	r19,12(sp)
1001bccc:	dc000015 	stw	r16,0(sp)
1001bcd0:	dfc00415 	stw	ra,16(sp)
1001bcd4:	dc800215 	stw	r18,8(sp)
1001bcd8:	dc400115 	stw	r17,4(sp)
1001bcdc:	308000cc 	andi	r2,r6,3
1001bce0:	3021883a 	mov	r16,r6
1001bce4:	2027883a 	mov	r19,r4
1001bce8:	10002d1e 	bne	r2,zero,1001bda0 <__pow5mult+0xdc>
1001bcec:	2825883a 	mov	r18,r5
1001bcf0:	8021d0ba 	srai	r16,r16,2
1001bcf4:	80001926 	beq	r16,zero,1001bd5c <__pow5mult+0x98>
1001bcf8:	9c401217 	ldw	r17,72(r19)
1001bcfc:	8800061e 	bne	r17,zero,1001bd18 <__pow5mult+0x54>
1001bd00:	00002f06 	br	1001bdc0 <__pow5mult+0xfc>
1001bd04:	8021d07a 	srai	r16,r16,1
1001bd08:	80001426 	beq	r16,zero,1001bd5c <__pow5mult+0x98>
1001bd0c:	88800017 	ldw	r2,0(r17)
1001bd10:	10001a26 	beq	r2,zero,1001bd7c <__pow5mult+0xb8>
1001bd14:	1023883a 	mov	r17,r2
1001bd18:	8080004c 	andi	r2,r16,1
1001bd1c:	103ff926 	beq	r2,zero,1001bd04 <__pow5mult+0x40>
1001bd20:	880d883a 	mov	r6,r17
1001bd24:	900b883a 	mov	r5,r18
1001bd28:	9809883a 	mov	r4,r19
1001bd2c:	001bad80 	call	1001bad8 <__multiply>
1001bd30:	90001926 	beq	r18,zero,1001bd98 <__pow5mult+0xd4>
1001bd34:	91000117 	ldw	r4,4(r18)
1001bd38:	98c01317 	ldw	r3,76(r19)
1001bd3c:	8021d07a 	srai	r16,r16,1
1001bd40:	200890ba 	slli	r4,r4,2
1001bd44:	1907883a 	add	r3,r3,r4
1001bd48:	19000017 	ldw	r4,0(r3)
1001bd4c:	91000015 	stw	r4,0(r18)
1001bd50:	1c800015 	stw	r18,0(r3)
1001bd54:	1025883a 	mov	r18,r2
1001bd58:	803fec1e 	bne	r16,zero,1001bd0c <__pow5mult+0x48>
1001bd5c:	9005883a 	mov	r2,r18
1001bd60:	dfc00417 	ldw	ra,16(sp)
1001bd64:	dcc00317 	ldw	r19,12(sp)
1001bd68:	dc800217 	ldw	r18,8(sp)
1001bd6c:	dc400117 	ldw	r17,4(sp)
1001bd70:	dc000017 	ldw	r16,0(sp)
1001bd74:	dec00504 	addi	sp,sp,20
1001bd78:	f800283a 	ret
1001bd7c:	880d883a 	mov	r6,r17
1001bd80:	880b883a 	mov	r5,r17
1001bd84:	9809883a 	mov	r4,r19
1001bd88:	001bad80 	call	1001bad8 <__multiply>
1001bd8c:	88800015 	stw	r2,0(r17)
1001bd90:	10000015 	stw	zero,0(r2)
1001bd94:	003fdf06 	br	1001bd14 <__pow5mult+0x50>
1001bd98:	1025883a 	mov	r18,r2
1001bd9c:	003fd906 	br	1001bd04 <__pow5mult+0x40>
1001bda0:	100490ba 	slli	r2,r2,2
1001bda4:	00c400b4 	movhi	r3,4098
1001bda8:	000f883a 	mov	r7,zero
1001bdac:	10c7883a 	add	r3,r2,r3
1001bdb0:	19978417 	ldw	r6,24080(r3)
1001bdb4:	001b76c0 	call	1001b76c <__multadd>
1001bdb8:	1025883a 	mov	r18,r2
1001bdbc:	003fcc06 	br	1001bcf0 <__pow5mult+0x2c>
1001bdc0:	01400044 	movi	r5,1
1001bdc4:	9809883a 	mov	r4,r19
1001bdc8:	001b6a40 	call	1001b6a4 <_Balloc>
1001bdcc:	1023883a 	mov	r17,r2
1001bdd0:	00809c44 	movi	r2,625
1001bdd4:	88800515 	stw	r2,20(r17)
1001bdd8:	00800044 	movi	r2,1
1001bddc:	88800415 	stw	r2,16(r17)
1001bde0:	9c401215 	stw	r17,72(r19)
1001bde4:	88000015 	stw	zero,0(r17)
1001bde8:	003fcb06 	br	1001bd18 <__pow5mult+0x54>

1001bdec <__lshift>:
1001bdec:	defff904 	addi	sp,sp,-28
1001bdf0:	dcc00315 	stw	r19,12(sp)
1001bdf4:	dc400115 	stw	r17,4(sp)
1001bdf8:	2cc00417 	ldw	r19,16(r5)
1001bdfc:	3023d17a 	srai	r17,r6,5
1001be00:	28800217 	ldw	r2,8(r5)
1001be04:	dd400515 	stw	r21,20(sp)
1001be08:	8ce7883a 	add	r19,r17,r19
1001be0c:	dd000415 	stw	r20,16(sp)
1001be10:	dc800215 	stw	r18,8(sp)
1001be14:	dc000015 	stw	r16,0(sp)
1001be18:	dfc00615 	stw	ra,24(sp)
1001be1c:	9c000044 	addi	r16,r19,1
1001be20:	2825883a 	mov	r18,r5
1001be24:	302b883a 	mov	r21,r6
1001be28:	2029883a 	mov	r20,r4
1001be2c:	29400117 	ldw	r5,4(r5)
1001be30:	1400030e 	bge	r2,r16,1001be40 <__lshift+0x54>
1001be34:	1085883a 	add	r2,r2,r2
1001be38:	29400044 	addi	r5,r5,1
1001be3c:	143ffd16 	blt	r2,r16,1001be34 <__lshift+0x48>
1001be40:	a009883a 	mov	r4,r20
1001be44:	001b6a40 	call	1001b6a4 <_Balloc>
1001be48:	11000504 	addi	r4,r2,20
1001be4c:	0440090e 	bge	zero,r17,1001be74 <__lshift+0x88>
1001be50:	8c400144 	addi	r17,r17,5
1001be54:	882290ba 	slli	r17,r17,2
1001be58:	2007883a 	mov	r3,r4
1001be5c:	144b883a 	add	r5,r2,r17
1001be60:	18c00104 	addi	r3,r3,4
1001be64:	183fff15 	stw	zero,-4(r3)
1001be68:	28fffd1e 	bne	r5,r3,1001be60 <__lshift+0x74>
1001be6c:	8c7ffb04 	addi	r17,r17,-20
1001be70:	2449883a 	add	r4,r4,r17
1001be74:	92000417 	ldw	r8,16(r18)
1001be78:	90c00504 	addi	r3,r18,20
1001be7c:	a98007cc 	andi	r6,r21,31
1001be80:	401090ba 	slli	r8,r8,2
1001be84:	1a11883a 	add	r8,r3,r8
1001be88:	30002126 	beq	r6,zero,1001bf10 <__lshift+0x124>
1001be8c:	02400804 	movi	r9,32
1001be90:	4993c83a 	sub	r9,r9,r6
1001be94:	000f883a 	mov	r7,zero
1001be98:	19400017 	ldw	r5,0(r3)
1001be9c:	21000104 	addi	r4,r4,4
1001bea0:	18c00104 	addi	r3,r3,4
1001bea4:	298a983a 	sll	r5,r5,r6
1001bea8:	29cab03a 	or	r5,r5,r7
1001beac:	217fff15 	stw	r5,-4(r4)
1001beb0:	197fff17 	ldw	r5,-4(r3)
1001beb4:	2a4ed83a 	srl	r7,r5,r9
1001beb8:	1a3ff736 	bltu	r3,r8,1001be98 <__lshift+0xac>
1001bebc:	21c00015 	stw	r7,0(r4)
1001bec0:	38000126 	beq	r7,zero,1001bec8 <__lshift+0xdc>
1001bec4:	8027883a 	mov	r19,r16
1001bec8:	14c00415 	stw	r19,16(r2)
1001becc:	90000726 	beq	r18,zero,1001beec <__lshift+0x100>
1001bed0:	91000117 	ldw	r4,4(r18)
1001bed4:	a0c01317 	ldw	r3,76(r20)
1001bed8:	200890ba 	slli	r4,r4,2
1001bedc:	1907883a 	add	r3,r3,r4
1001bee0:	19000017 	ldw	r4,0(r3)
1001bee4:	91000015 	stw	r4,0(r18)
1001bee8:	1c800015 	stw	r18,0(r3)
1001beec:	dfc00617 	ldw	ra,24(sp)
1001bef0:	dd400517 	ldw	r21,20(sp)
1001bef4:	dd000417 	ldw	r20,16(sp)
1001bef8:	dcc00317 	ldw	r19,12(sp)
1001befc:	dc800217 	ldw	r18,8(sp)
1001bf00:	dc400117 	ldw	r17,4(sp)
1001bf04:	dc000017 	ldw	r16,0(sp)
1001bf08:	dec00704 	addi	sp,sp,28
1001bf0c:	f800283a 	ret
1001bf10:	18c00104 	addi	r3,r3,4
1001bf14:	197fff17 	ldw	r5,-4(r3)
1001bf18:	21000104 	addi	r4,r4,4
1001bf1c:	217fff15 	stw	r5,-4(r4)
1001bf20:	1a3ffb36 	bltu	r3,r8,1001bf10 <__lshift+0x124>
1001bf24:	003fe806 	br	1001bec8 <__lshift+0xdc>

1001bf28 <__mcmp>:
1001bf28:	20800417 	ldw	r2,16(r4)
1001bf2c:	28c00417 	ldw	r3,16(r5)
1001bf30:	10c5c83a 	sub	r2,r2,r3
1001bf34:	10000e1e 	bne	r2,zero,1001bf70 <__mcmp+0x48>
1001bf38:	180c90ba 	slli	r6,r3,2
1001bf3c:	21000504 	addi	r4,r4,20
1001bf40:	29400504 	addi	r5,r5,20
1001bf44:	2187883a 	add	r3,r4,r6
1001bf48:	298b883a 	add	r5,r5,r6
1001bf4c:	00000106 	br	1001bf54 <__mcmp+0x2c>
1001bf50:	20c0082e 	bgeu	r4,r3,1001bf74 <__mcmp+0x4c>
1001bf54:	18ffff04 	addi	r3,r3,-4
1001bf58:	297fff04 	addi	r5,r5,-4
1001bf5c:	19c00017 	ldw	r7,0(r3)
1001bf60:	29800017 	ldw	r6,0(r5)
1001bf64:	39bffa26 	beq	r7,r6,1001bf50 <__mcmp+0x28>
1001bf68:	3980032e 	bgeu	r7,r6,1001bf78 <__mcmp+0x50>
1001bf6c:	00bfffc4 	movi	r2,-1
1001bf70:	f800283a 	ret
1001bf74:	f800283a 	ret
1001bf78:	00800044 	movi	r2,1
1001bf7c:	f800283a 	ret

1001bf80 <__mdiff>:
1001bf80:	defffa04 	addi	sp,sp,-24
1001bf84:	dc800215 	stw	r18,8(sp)
1001bf88:	30c00417 	ldw	r3,16(r6)
1001bf8c:	2c800417 	ldw	r18,16(r5)
1001bf90:	dd000415 	stw	r20,16(sp)
1001bf94:	dcc00315 	stw	r19,12(sp)
1001bf98:	dc400115 	stw	r17,4(sp)
1001bf9c:	dc000015 	stw	r16,0(sp)
1001bfa0:	dfc00515 	stw	ra,20(sp)
1001bfa4:	90e5c83a 	sub	r18,r18,r3
1001bfa8:	2827883a 	mov	r19,r5
1001bfac:	3029883a 	mov	r20,r6
1001bfb0:	2c000504 	addi	r16,r5,20
1001bfb4:	34400504 	addi	r17,r6,20
1001bfb8:	9000131e 	bne	r18,zero,1001c008 <__mdiff+0x88>
1001bfbc:	180690ba 	slli	r3,r3,2
1001bfc0:	80c5883a 	add	r2,r16,r3
1001bfc4:	88c7883a 	add	r3,r17,r3
1001bfc8:	00000106 	br	1001bfd0 <__mdiff+0x50>
1001bfcc:	8080552e 	bgeu	r16,r2,1001c124 <__mdiff+0x1a4>
1001bfd0:	10bfff04 	addi	r2,r2,-4
1001bfd4:	18ffff04 	addi	r3,r3,-4
1001bfd8:	11c00017 	ldw	r7,0(r2)
1001bfdc:	19400017 	ldw	r5,0(r3)
1001bfe0:	397ffa26 	beq	r7,r5,1001bfcc <__mdiff+0x4c>
1001bfe4:	39400a2e 	bgeu	r7,r5,1001c010 <__mdiff+0x90>
1001bfe8:	8007883a 	mov	r3,r16
1001bfec:	9805883a 	mov	r2,r19
1001bff0:	8821883a 	mov	r16,r17
1001bff4:	a027883a 	mov	r19,r20
1001bff8:	1823883a 	mov	r17,r3
1001bffc:	1029883a 	mov	r20,r2
1001c000:	04800044 	movi	r18,1
1001c004:	00000206 	br	1001c010 <__mdiff+0x90>
1001c008:	903ff716 	blt	r18,zero,1001bfe8 <__mdiff+0x68>
1001c00c:	0025883a 	mov	r18,zero
1001c010:	99400117 	ldw	r5,4(r19)
1001c014:	001b6a40 	call	1001b6a4 <_Balloc>
1001c018:	9a400417 	ldw	r9,16(r19)
1001c01c:	a2c00417 	ldw	r11,16(r20)
1001c020:	12800504 	addi	r10,r2,20
1001c024:	481090ba 	slli	r8,r9,2
1001c028:	581690ba 	slli	r11,r11,2
1001c02c:	14800315 	stw	r18,12(r2)
1001c030:	8211883a 	add	r8,r16,r8
1001c034:	8ad7883a 	add	r11,r17,r11
1001c038:	0007883a 	mov	r3,zero
1001c03c:	00000106 	br	1001c044 <__mdiff+0xc4>
1001c040:	3815883a 	mov	r10,r7
1001c044:	81000017 	ldw	r4,0(r16)
1001c048:	89800017 	ldw	r6,0(r17)
1001c04c:	51c00104 	addi	r7,r10,4
1001c050:	217fffcc 	andi	r5,r4,65535
1001c054:	28cb883a 	add	r5,r5,r3
1001c058:	30ffffcc 	andi	r3,r6,65535
1001c05c:	28cbc83a 	sub	r5,r5,r3
1001c060:	300cd43a 	srli	r6,r6,16
1001c064:	2006d43a 	srli	r3,r4,16
1001c068:	2809d43a 	srai	r4,r5,16
1001c06c:	297fffcc 	andi	r5,r5,65535
1001c070:	1987c83a 	sub	r3,r3,r6
1001c074:	1907883a 	add	r3,r3,r4
1001c078:	1808943a 	slli	r4,r3,16
1001c07c:	8c400104 	addi	r17,r17,4
1001c080:	84000104 	addi	r16,r16,4
1001c084:	214ab03a 	or	r5,r4,r5
1001c088:	397fff15 	stw	r5,-4(r7)
1001c08c:	1807d43a 	srai	r3,r3,16
1001c090:	8affeb36 	bltu	r17,r11,1001c040 <__mdiff+0xc0>
1001c094:	8200152e 	bgeu	r16,r8,1001c0ec <__mdiff+0x16c>
1001c098:	3815883a 	mov	r10,r7
1001c09c:	800d883a 	mov	r6,r16
1001c0a0:	31000017 	ldw	r4,0(r6)
1001c0a4:	52800104 	addi	r10,r10,4
1001c0a8:	31800104 	addi	r6,r6,4
1001c0ac:	217fffcc 	andi	r5,r4,65535
1001c0b0:	28cb883a 	add	r5,r5,r3
1001c0b4:	2817d43a 	srai	r11,r5,16
1001c0b8:	2006d43a 	srli	r3,r4,16
1001c0bc:	293fffcc 	andi	r4,r5,65535
1001c0c0:	1ac7883a 	add	r3,r3,r11
1001c0c4:	180a943a 	slli	r5,r3,16
1001c0c8:	1807d43a 	srai	r3,r3,16
1001c0cc:	290ab03a 	or	r5,r5,r4
1001c0d0:	517fff15 	stw	r5,-4(r10)
1001c0d4:	323ff236 	bltu	r6,r8,1001c0a0 <__mdiff+0x120>
1001c0d8:	42bfffc4 	addi	r10,r8,-1
1001c0dc:	5415c83a 	sub	r10,r10,r16
1001c0e0:	5014d0ba 	srli	r10,r10,2
1001c0e4:	501490ba 	slli	r10,r10,2
1001c0e8:	3a95883a 	add	r10,r7,r10
1001c0ec:	2800041e 	bne	r5,zero,1001c100 <__mdiff+0x180>
1001c0f0:	52bfff04 	addi	r10,r10,-4
1001c0f4:	50c00017 	ldw	r3,0(r10)
1001c0f8:	4a7fffc4 	addi	r9,r9,-1
1001c0fc:	183ffc26 	beq	r3,zero,1001c0f0 <__mdiff+0x170>
1001c100:	12400415 	stw	r9,16(r2)
1001c104:	dfc00517 	ldw	ra,20(sp)
1001c108:	dd000417 	ldw	r20,16(sp)
1001c10c:	dcc00317 	ldw	r19,12(sp)
1001c110:	dc800217 	ldw	r18,8(sp)
1001c114:	dc400117 	ldw	r17,4(sp)
1001c118:	dc000017 	ldw	r16,0(sp)
1001c11c:	dec00604 	addi	sp,sp,24
1001c120:	f800283a 	ret
1001c124:	000b883a 	mov	r5,zero
1001c128:	001b6a40 	call	1001b6a4 <_Balloc>
1001c12c:	00c00044 	movi	r3,1
1001c130:	10c00415 	stw	r3,16(r2)
1001c134:	10000515 	stw	zero,20(r2)
1001c138:	003ff206 	br	1001c104 <__mdiff+0x184>

1001c13c <__ulp>:
1001c13c:	295ffc2c 	andhi	r5,r5,32752
1001c140:	00ff3034 	movhi	r3,64704
1001c144:	28c7883a 	add	r3,r5,r3
1001c148:	00c0020e 	bge	zero,r3,1001c154 <__ulp+0x18>
1001c14c:	0005883a 	mov	r2,zero
1001c150:	f800283a 	ret
1001c154:	00c7c83a 	sub	r3,zero,r3
1001c158:	1807d53a 	srai	r3,r3,20
1001c15c:	18800508 	cmpgei	r2,r3,20
1001c160:	1000041e 	bne	r2,zero,1001c174 <__ulp+0x38>
1001c164:	01400234 	movhi	r5,8
1001c168:	28c7d83a 	sra	r3,r5,r3
1001c16c:	0005883a 	mov	r2,zero
1001c170:	f800283a 	ret
1001c174:	193ffb04 	addi	r4,r3,-20
1001c178:	208007c8 	cmpgei	r2,r4,31
1001c17c:	0007883a 	mov	r3,zero
1001c180:	1000031e 	bne	r2,zero,1001c190 <__ulp+0x54>
1001c184:	00a00034 	movhi	r2,32768
1001c188:	1104d83a 	srl	r2,r2,r4
1001c18c:	f800283a 	ret
1001c190:	00800044 	movi	r2,1
1001c194:	f800283a 	ret

1001c198 <__b2d>:
1001c198:	defffa04 	addi	sp,sp,-24
1001c19c:	dc000015 	stw	r16,0(sp)
1001c1a0:	24000417 	ldw	r16,16(r4)
1001c1a4:	dc800215 	stw	r18,8(sp)
1001c1a8:	24800504 	addi	r18,r4,20
1001c1ac:	802090ba 	slli	r16,r16,2
1001c1b0:	dc400115 	stw	r17,4(sp)
1001c1b4:	dd000415 	stw	r20,16(sp)
1001c1b8:	9421883a 	add	r16,r18,r16
1001c1bc:	847fff17 	ldw	r17,-4(r16)
1001c1c0:	dcc00315 	stw	r19,12(sp)
1001c1c4:	2829883a 	mov	r20,r5
1001c1c8:	8809883a 	mov	r4,r17
1001c1cc:	dfc00515 	stw	ra,20(sp)
1001c1d0:	001b9900 	call	1001b990 <__hi0bits>
1001c1d4:	01000804 	movi	r4,32
1001c1d8:	2087c83a 	sub	r3,r4,r2
1001c1dc:	a0c00015 	stw	r3,0(r20)
1001c1e0:	10c002c8 	cmpgei	r3,r2,11
1001c1e4:	84ffff04 	addi	r19,r16,-4
1001c1e8:	18001f26 	beq	r3,zero,1001c268 <__b2d+0xd0>
1001c1ec:	10fffd44 	addi	r3,r2,-11
1001c1f0:	94c00e2e 	bgeu	r18,r19,1001c22c <__b2d+0x94>
1001c1f4:	80bffe17 	ldw	r2,-8(r16)
1001c1f8:	18001226 	beq	r3,zero,1001c244 <__b2d+0xac>
1001c1fc:	20c9c83a 	sub	r4,r4,r3
1001c200:	110cd83a 	srl	r6,r2,r4
1001c204:	88e2983a 	sll	r17,r17,r3
1001c208:	10c4983a 	sll	r2,r2,r3
1001c20c:	817ffe04 	addi	r5,r16,-8
1001c210:	8986b03a 	or	r3,r17,r6
1001c214:	18cffc34 	orhi	r3,r3,16368
1001c218:	91400b2e 	bgeu	r18,r5,1001c248 <__b2d+0xb0>
1001c21c:	817ffd17 	ldw	r5,-12(r16)
1001c220:	2908d83a 	srl	r4,r5,r4
1001c224:	1104b03a 	or	r2,r2,r4
1001c228:	00000706 	br	1001c248 <__b2d+0xb0>
1001c22c:	18000426 	beq	r3,zero,1001c240 <__b2d+0xa8>
1001c230:	88c6983a 	sll	r3,r17,r3
1001c234:	0005883a 	mov	r2,zero
1001c238:	18cffc34 	orhi	r3,r3,16368
1001c23c:	00000206 	br	1001c248 <__b2d+0xb0>
1001c240:	0005883a 	mov	r2,zero
1001c244:	88cffc34 	orhi	r3,r17,16368
1001c248:	dfc00517 	ldw	ra,20(sp)
1001c24c:	dd000417 	ldw	r20,16(sp)
1001c250:	dcc00317 	ldw	r19,12(sp)
1001c254:	dc800217 	ldw	r18,8(sp)
1001c258:	dc400117 	ldw	r17,4(sp)
1001c25c:	dc000017 	ldw	r16,0(sp)
1001c260:	dec00604 	addi	sp,sp,24
1001c264:	f800283a 	ret
1001c268:	014002c4 	movi	r5,11
1001c26c:	2889c83a 	sub	r4,r5,r2
1001c270:	8906d83a 	srl	r3,r17,r4
1001c274:	18cffc34 	orhi	r3,r3,16368
1001c278:	94c00536 	bltu	r18,r19,1001c290 <__b2d+0xf8>
1001c27c:	000b883a 	mov	r5,zero
1001c280:	10800544 	addi	r2,r2,21
1001c284:	8884983a 	sll	r2,r17,r2
1001c288:	1144b03a 	or	r2,r2,r5
1001c28c:	003fee06 	br	1001c248 <__b2d+0xb0>
1001c290:	817ffe17 	ldw	r5,-8(r16)
1001c294:	290ad83a 	srl	r5,r5,r4
1001c298:	003ff906 	br	1001c280 <__b2d+0xe8>

1001c29c <__d2b>:
1001c29c:	defff804 	addi	sp,sp,-32
1001c2a0:	dc400315 	stw	r17,12(sp)
1001c2a4:	3023883a 	mov	r17,r6
1001c2a8:	dd000615 	stw	r20,24(sp)
1001c2ac:	dc000215 	stw	r16,8(sp)
1001c2b0:	2829883a 	mov	r20,r5
1001c2b4:	8820d53a 	srli	r16,r17,20
1001c2b8:	01400044 	movi	r5,1
1001c2bc:	dcc00515 	stw	r19,20(sp)
1001c2c0:	dc800415 	stw	r18,16(sp)
1001c2c4:	dfc00715 	stw	ra,28(sp)
1001c2c8:	3825883a 	mov	r18,r7
1001c2cc:	001b6a40 	call	1001b6a4 <_Balloc>
1001c2d0:	01800434 	movhi	r6,16
1001c2d4:	31bfffc4 	addi	r6,r6,-1
1001c2d8:	8401ffcc 	andi	r16,r16,2047
1001c2dc:	1027883a 	mov	r19,r2
1001c2e0:	89a2703a 	and	r17,r17,r6
1001c2e4:	80000126 	beq	r16,zero,1001c2ec <__d2b+0x50>
1001c2e8:	8c400434 	orhi	r17,r17,16
1001c2ec:	dc400115 	stw	r17,4(sp)
1001c2f0:	a0002826 	beq	r20,zero,1001c394 <__d2b+0xf8>
1001c2f4:	d809883a 	mov	r4,sp
1001c2f8:	dd000015 	stw	r20,0(sp)
1001c2fc:	001b9f40 	call	1001b9f4 <__lo0bits>
1001c300:	d8c00117 	ldw	r3,4(sp)
1001c304:	1000171e 	bne	r2,zero,1001c364 <__d2b+0xc8>
1001c308:	d9000017 	ldw	r4,0(sp)
1001c30c:	98c00615 	stw	r3,24(r19)
1001c310:	99000515 	stw	r4,20(r19)
1001c314:	18001d1e 	bne	r3,zero,1001c38c <__d2b+0xf0>
1001c318:	04400044 	movi	r17,1
1001c31c:	9c400415 	stw	r17,16(r19)
1001c320:	80002526 	beq	r16,zero,1001c3b8 <__d2b+0x11c>
1001c324:	00c00d44 	movi	r3,53
1001c328:	843ef344 	addi	r16,r16,-1075
1001c32c:	80a1883a 	add	r16,r16,r2
1001c330:	1885c83a 	sub	r2,r3,r2
1001c334:	d8c00817 	ldw	r3,32(sp)
1001c338:	94000015 	stw	r16,0(r18)
1001c33c:	18800015 	stw	r2,0(r3)
1001c340:	9805883a 	mov	r2,r19
1001c344:	dfc00717 	ldw	ra,28(sp)
1001c348:	dd000617 	ldw	r20,24(sp)
1001c34c:	dcc00517 	ldw	r19,20(sp)
1001c350:	dc800417 	ldw	r18,16(sp)
1001c354:	dc400317 	ldw	r17,12(sp)
1001c358:	dc000217 	ldw	r16,8(sp)
1001c35c:	dec00804 	addi	sp,sp,32
1001c360:	f800283a 	ret
1001c364:	01000804 	movi	r4,32
1001c368:	2089c83a 	sub	r4,r4,r2
1001c36c:	1908983a 	sll	r4,r3,r4
1001c370:	d9400017 	ldw	r5,0(sp)
1001c374:	1886d83a 	srl	r3,r3,r2
1001c378:	2148b03a 	or	r4,r4,r5
1001c37c:	99000515 	stw	r4,20(r19)
1001c380:	d8c00115 	stw	r3,4(sp)
1001c384:	98c00615 	stw	r3,24(r19)
1001c388:	183fe326 	beq	r3,zero,1001c318 <__d2b+0x7c>
1001c38c:	04400084 	movi	r17,2
1001c390:	003fe206 	br	1001c31c <__d2b+0x80>
1001c394:	d9000104 	addi	r4,sp,4
1001c398:	001b9f40 	call	1001b9f4 <__lo0bits>
1001c39c:	00c00044 	movi	r3,1
1001c3a0:	98c00415 	stw	r3,16(r19)
1001c3a4:	d8c00117 	ldw	r3,4(sp)
1001c3a8:	10800804 	addi	r2,r2,32
1001c3ac:	04400044 	movi	r17,1
1001c3b0:	98c00515 	stw	r3,20(r19)
1001c3b4:	803fdb1e 	bne	r16,zero,1001c324 <__d2b+0x88>
1001c3b8:	880690ba 	slli	r3,r17,2
1001c3bc:	10bef384 	addi	r2,r2,-1074
1001c3c0:	8822917a 	slli	r17,r17,5
1001c3c4:	98c7883a 	add	r3,r19,r3
1001c3c8:	19000417 	ldw	r4,16(r3)
1001c3cc:	90800015 	stw	r2,0(r18)
1001c3d0:	001b9900 	call	1001b990 <__hi0bits>
1001c3d4:	88a3c83a 	sub	r17,r17,r2
1001c3d8:	d8800817 	ldw	r2,32(sp)
1001c3dc:	14400015 	stw	r17,0(r2)
1001c3e0:	003fd706 	br	1001c340 <__d2b+0xa4>

1001c3e4 <__ratio>:
1001c3e4:	defff904 	addi	sp,sp,-28
1001c3e8:	dc400315 	stw	r17,12(sp)
1001c3ec:	2823883a 	mov	r17,r5
1001c3f0:	d80b883a 	mov	r5,sp
1001c3f4:	dfc00615 	stw	ra,24(sp)
1001c3f8:	dcc00515 	stw	r19,20(sp)
1001c3fc:	dc800415 	stw	r18,16(sp)
1001c400:	2027883a 	mov	r19,r4
1001c404:	dc000215 	stw	r16,8(sp)
1001c408:	001c1980 	call	1001c198 <__b2d>
1001c40c:	d9400104 	addi	r5,sp,4
1001c410:	8809883a 	mov	r4,r17
1001c414:	1025883a 	mov	r18,r2
1001c418:	1821883a 	mov	r16,r3
1001c41c:	001c1980 	call	1001c198 <__b2d>
1001c420:	89400417 	ldw	r5,16(r17)
1001c424:	99000417 	ldw	r4,16(r19)
1001c428:	d9800117 	ldw	r6,4(sp)
1001c42c:	2149c83a 	sub	r4,r4,r5
1001c430:	d9400017 	ldw	r5,0(sp)
1001c434:	2008917a 	slli	r4,r4,5
1001c438:	298bc83a 	sub	r5,r5,r6
1001c43c:	2149883a 	add	r4,r4,r5
1001c440:	01000e0e 	bge	zero,r4,1001c47c <__ratio+0x98>
1001c444:	2008953a 	slli	r4,r4,20
1001c448:	2421883a 	add	r16,r4,r16
1001c44c:	100d883a 	mov	r6,r2
1001c450:	180f883a 	mov	r7,r3
1001c454:	9009883a 	mov	r4,r18
1001c458:	800b883a 	mov	r5,r16
1001c45c:	001febc0 	call	1001febc <__divdf3>
1001c460:	dfc00617 	ldw	ra,24(sp)
1001c464:	dcc00517 	ldw	r19,20(sp)
1001c468:	dc800417 	ldw	r18,16(sp)
1001c46c:	dc400317 	ldw	r17,12(sp)
1001c470:	dc000217 	ldw	r16,8(sp)
1001c474:	dec00704 	addi	sp,sp,28
1001c478:	f800283a 	ret
1001c47c:	017ffc34 	movhi	r5,65520
1001c480:	2149383a 	mul	r4,r4,r5
1001c484:	20c7883a 	add	r3,r4,r3
1001c488:	003ff006 	br	1001c44c <__ratio+0x68>

1001c48c <_mprec_log10>:
1001c48c:	defffe04 	addi	sp,sp,-8
1001c490:	dc000015 	stw	r16,0(sp)
1001c494:	dfc00115 	stw	ra,4(sp)
1001c498:	20800608 	cmpgei	r2,r4,24
1001c49c:	2021883a 	mov	r16,r4
1001c4a0:	10000d26 	beq	r2,zero,1001c4d8 <_mprec_log10+0x4c>
1001c4a4:	0005883a 	mov	r2,zero
1001c4a8:	00cffc34 	movhi	r3,16368
1001c4ac:	843fffc4 	addi	r16,r16,-1
1001c4b0:	000d883a 	mov	r6,zero
1001c4b4:	01d00934 	movhi	r7,16420
1001c4b8:	1009883a 	mov	r4,r2
1001c4bc:	180b883a 	mov	r5,r3
1001c4c0:	00209c40 	call	100209c4 <__muldf3>
1001c4c4:	803ff91e 	bne	r16,zero,1001c4ac <_mprec_log10+0x20>
1001c4c8:	dfc00117 	ldw	ra,4(sp)
1001c4cc:	dc000017 	ldw	r16,0(sp)
1001c4d0:	dec00204 	addi	sp,sp,8
1001c4d4:	f800283a 	ret
1001c4d8:	202090fa 	slli	r16,r4,3
1001c4dc:	008400b4 	movhi	r2,4098
1001c4e0:	10979c04 	addi	r2,r2,24176
1001c4e4:	1421883a 	add	r16,r2,r16
1001c4e8:	80800017 	ldw	r2,0(r16)
1001c4ec:	80c00117 	ldw	r3,4(r16)
1001c4f0:	dfc00117 	ldw	ra,4(sp)
1001c4f4:	dc000017 	ldw	r16,0(sp)
1001c4f8:	dec00204 	addi	sp,sp,8
1001c4fc:	f800283a 	ret

1001c500 <__copybits>:
1001c500:	29ffffc4 	addi	r7,r5,-1
1001c504:	380fd17a 	srai	r7,r7,5
1001c508:	31400417 	ldw	r5,16(r6)
1001c50c:	30800504 	addi	r2,r6,20
1001c510:	39c00044 	addi	r7,r7,1
1001c514:	280a90ba 	slli	r5,r5,2
1001c518:	380e90ba 	slli	r7,r7,2
1001c51c:	114b883a 	add	r5,r2,r5
1001c520:	21cf883a 	add	r7,r4,r7
1001c524:	11400c2e 	bgeu	r2,r5,1001c558 <__copybits+0x58>
1001c528:	2007883a 	mov	r3,r4
1001c52c:	10800104 	addi	r2,r2,4
1001c530:	123fff17 	ldw	r8,-4(r2)
1001c534:	18c00104 	addi	r3,r3,4
1001c538:	1a3fff15 	stw	r8,-4(r3)
1001c53c:	117ffb36 	bltu	r2,r5,1001c52c <__copybits+0x2c>
1001c540:	2985c83a 	sub	r2,r5,r6
1001c544:	10bffac4 	addi	r2,r2,-21
1001c548:	1004d0ba 	srli	r2,r2,2
1001c54c:	10800044 	addi	r2,r2,1
1001c550:	100490ba 	slli	r2,r2,2
1001c554:	2089883a 	add	r4,r4,r2
1001c558:	21c0032e 	bgeu	r4,r7,1001c568 <__copybits+0x68>
1001c55c:	21000104 	addi	r4,r4,4
1001c560:	203fff15 	stw	zero,-4(r4)
1001c564:	21fffd36 	bltu	r4,r7,1001c55c <__copybits+0x5c>
1001c568:	f800283a 	ret

1001c56c <__any_on>:
1001c56c:	20800417 	ldw	r2,16(r4)
1001c570:	280dd17a 	srai	r6,r5,5
1001c574:	21000504 	addi	r4,r4,20
1001c578:	11800c0e 	bge	r2,r6,1001c5ac <__any_on+0x40>
1001c57c:	100690ba 	slli	r3,r2,2
1001c580:	20c7883a 	add	r3,r4,r3
1001c584:	20c0142e 	bgeu	r4,r3,1001c5d8 <__any_on+0x6c>
1001c588:	18bfff17 	ldw	r2,-4(r3)
1001c58c:	18ffff04 	addi	r3,r3,-4
1001c590:	1000041e 	bne	r2,zero,1001c5a4 <__any_on+0x38>
1001c594:	20c00f2e 	bgeu	r4,r3,1001c5d4 <__any_on+0x68>
1001c598:	18ffff04 	addi	r3,r3,-4
1001c59c:	19400017 	ldw	r5,0(r3)
1001c5a0:	283ffc26 	beq	r5,zero,1001c594 <__any_on+0x28>
1001c5a4:	00800044 	movi	r2,1
1001c5a8:	f800283a 	ret
1001c5ac:	300690ba 	slli	r3,r6,2
1001c5b0:	20c7883a 	add	r3,r4,r3
1001c5b4:	30bff30e 	bge	r6,r2,1001c584 <__any_on+0x18>
1001c5b8:	294007cc 	andi	r5,r5,31
1001c5bc:	283ff126 	beq	r5,zero,1001c584 <__any_on+0x18>
1001c5c0:	19800017 	ldw	r6,0(r3)
1001c5c4:	3144d83a 	srl	r2,r6,r5
1001c5c8:	114a983a 	sll	r5,r2,r5
1001c5cc:	317ff51e 	bne	r6,r5,1001c5a4 <__any_on+0x38>
1001c5d0:	003fec06 	br	1001c584 <__any_on+0x18>
1001c5d4:	f800283a 	ret
1001c5d8:	0005883a 	mov	r2,zero
1001c5dc:	f800283a 	ret

1001c5e0 <_putc_r>:
1001c5e0:	defffc04 	addi	sp,sp,-16
1001c5e4:	dc000215 	stw	r16,8(sp)
1001c5e8:	dfc00315 	stw	ra,12(sp)
1001c5ec:	2021883a 	mov	r16,r4
1001c5f0:	20000226 	beq	r4,zero,1001c5fc <_putc_r+0x1c>
1001c5f4:	20800e17 	ldw	r2,56(r4)
1001c5f8:	10000e26 	beq	r2,zero,1001c634 <_putc_r+0x54>
1001c5fc:	30800217 	ldw	r2,8(r6)
1001c600:	10bfffc4 	addi	r2,r2,-1
1001c604:	30800215 	stw	r2,8(r6)
1001c608:	10001316 	blt	r2,zero,1001c658 <_putc_r+0x78>
1001c60c:	30800017 	ldw	r2,0(r6)
1001c610:	11400005 	stb	r5,0(r2)
1001c614:	30800017 	ldw	r2,0(r6)
1001c618:	10c00044 	addi	r3,r2,1
1001c61c:	30c00015 	stw	r3,0(r6)
1001c620:	10800003 	ldbu	r2,0(r2)
1001c624:	dfc00317 	ldw	ra,12(sp)
1001c628:	dc000217 	ldw	r16,8(sp)
1001c62c:	dec00404 	addi	sp,sp,16
1001c630:	f800283a 	ret
1001c634:	d9800115 	stw	r6,4(sp)
1001c638:	d9400015 	stw	r5,0(sp)
1001c63c:	001aaa80 	call	1001aaa8 <__sinit>
1001c640:	d9800117 	ldw	r6,4(sp)
1001c644:	d9400017 	ldw	r5,0(sp)
1001c648:	30800217 	ldw	r2,8(r6)
1001c64c:	10bfffc4 	addi	r2,r2,-1
1001c650:	30800215 	stw	r2,8(r6)
1001c654:	103fed0e 	bge	r2,zero,1001c60c <_putc_r+0x2c>
1001c658:	30c00617 	ldw	r3,24(r6)
1001c65c:	10c00e16 	blt	r2,r3,1001c698 <_putc_r+0xb8>
1001c660:	30800017 	ldw	r2,0(r6)
1001c664:	11400005 	stb	r5,0(r2)
1001c668:	30c00017 	ldw	r3,0(r6)
1001c66c:	18800003 	ldbu	r2,0(r3)
1001c670:	108002a0 	cmpeqi	r2,r2,10
1001c674:	1000071e 	bne	r2,zero,1001c694 <_putc_r+0xb4>
1001c678:	18800044 	addi	r2,r3,1
1001c67c:	30800015 	stw	r2,0(r6)
1001c680:	18800003 	ldbu	r2,0(r3)
1001c684:	dfc00317 	ldw	ra,12(sp)
1001c688:	dc000217 	ldw	r16,8(sp)
1001c68c:	dec00404 	addi	sp,sp,16
1001c690:	f800283a 	ret
1001c694:	01400284 	movi	r5,10
1001c698:	8009883a 	mov	r4,r16
1001c69c:	dfc00317 	ldw	ra,12(sp)
1001c6a0:	dc000217 	ldw	r16,8(sp)
1001c6a4:	dec00404 	addi	sp,sp,16
1001c6a8:	001e32c1 	jmpi	1001e32c <__swbuf_r>

1001c6ac <putc>:
1001c6ac:	defffc04 	addi	sp,sp,-16
1001c6b0:	008400f4 	movhi	r2,4099
1001c6b4:	dc000115 	stw	r16,4(sp)
1001c6b8:	14215917 	ldw	r16,-31388(r2)
1001c6bc:	dc400215 	stw	r17,8(sp)
1001c6c0:	dfc00315 	stw	ra,12(sp)
1001c6c4:	2023883a 	mov	r17,r4
1001c6c8:	80000226 	beq	r16,zero,1001c6d4 <putc+0x28>
1001c6cc:	80800e17 	ldw	r2,56(r16)
1001c6d0:	10000f26 	beq	r2,zero,1001c710 <putc+0x64>
1001c6d4:	28800217 	ldw	r2,8(r5)
1001c6d8:	10bfffc4 	addi	r2,r2,-1
1001c6dc:	28800215 	stw	r2,8(r5)
1001c6e0:	10001316 	blt	r2,zero,1001c730 <putc+0x84>
1001c6e4:	28800017 	ldw	r2,0(r5)
1001c6e8:	14400005 	stb	r17,0(r2)
1001c6ec:	28800017 	ldw	r2,0(r5)
1001c6f0:	10c00044 	addi	r3,r2,1
1001c6f4:	28c00015 	stw	r3,0(r5)
1001c6f8:	10800003 	ldbu	r2,0(r2)
1001c6fc:	dfc00317 	ldw	ra,12(sp)
1001c700:	dc400217 	ldw	r17,8(sp)
1001c704:	dc000117 	ldw	r16,4(sp)
1001c708:	dec00404 	addi	sp,sp,16
1001c70c:	f800283a 	ret
1001c710:	8009883a 	mov	r4,r16
1001c714:	d9400015 	stw	r5,0(sp)
1001c718:	001aaa80 	call	1001aaa8 <__sinit>
1001c71c:	d9400017 	ldw	r5,0(sp)
1001c720:	28800217 	ldw	r2,8(r5)
1001c724:	10bfffc4 	addi	r2,r2,-1
1001c728:	28800215 	stw	r2,8(r5)
1001c72c:	103fed0e 	bge	r2,zero,1001c6e4 <putc+0x38>
1001c730:	28c00617 	ldw	r3,24(r5)
1001c734:	10c00a16 	blt	r2,r3,1001c760 <putc+0xb4>
1001c738:	28800017 	ldw	r2,0(r5)
1001c73c:	14400005 	stb	r17,0(r2)
1001c740:	28c00017 	ldw	r3,0(r5)
1001c744:	18800003 	ldbu	r2,0(r3)
1001c748:	108002a0 	cmpeqi	r2,r2,10
1001c74c:	10000c1e 	bne	r2,zero,1001c780 <putc+0xd4>
1001c750:	18800044 	addi	r2,r3,1
1001c754:	28800015 	stw	r2,0(r5)
1001c758:	18800003 	ldbu	r2,0(r3)
1001c75c:	003fe706 	br	1001c6fc <putc+0x50>
1001c760:	280d883a 	mov	r6,r5
1001c764:	880b883a 	mov	r5,r17
1001c768:	8009883a 	mov	r4,r16
1001c76c:	dfc00317 	ldw	ra,12(sp)
1001c770:	dc400217 	ldw	r17,8(sp)
1001c774:	dc000117 	ldw	r16,4(sp)
1001c778:	dec00404 	addi	sp,sp,16
1001c77c:	001e32c1 	jmpi	1001e32c <__swbuf_r>
1001c780:	280d883a 	mov	r6,r5
1001c784:	01400284 	movi	r5,10
1001c788:	003ff706 	br	1001c768 <putc+0xbc>

1001c78c <_read_r>:
1001c78c:	defffe04 	addi	sp,sp,-8
1001c790:	2805883a 	mov	r2,r5
1001c794:	dc000015 	stw	r16,0(sp)
1001c798:	300b883a 	mov	r5,r6
1001c79c:	2021883a 	mov	r16,r4
1001c7a0:	380d883a 	mov	r6,r7
1001c7a4:	1009883a 	mov	r4,r2
1001c7a8:	008400f4 	movhi	r2,4099
1001c7ac:	dfc00115 	stw	ra,4(sp)
1001c7b0:	102aaa15 	stw	zero,-21848(r2)
1001c7b4:	002264c0 	call	1002264c <read>
1001c7b8:	10ffffd8 	cmpnei	r3,r2,-1
1001c7bc:	18000426 	beq	r3,zero,1001c7d0 <_read_r+0x44>
1001c7c0:	dfc00117 	ldw	ra,4(sp)
1001c7c4:	dc000017 	ldw	r16,0(sp)
1001c7c8:	dec00204 	addi	sp,sp,8
1001c7cc:	f800283a 	ret
1001c7d0:	00c400f4 	movhi	r3,4099
1001c7d4:	18eaaa17 	ldw	r3,-21848(r3)
1001c7d8:	183ff926 	beq	r3,zero,1001c7c0 <_read_r+0x34>
1001c7dc:	80c00015 	stw	r3,0(r16)
1001c7e0:	dfc00117 	ldw	ra,4(sp)
1001c7e4:	dc000017 	ldw	r16,0(sp)
1001c7e8:	dec00204 	addi	sp,sp,8
1001c7ec:	f800283a 	ret

1001c7f0 <_realloc_r>:
1001c7f0:	defff504 	addi	sp,sp,-44
1001c7f4:	dcc00415 	stw	r19,16(sp)
1001c7f8:	dfc00a15 	stw	ra,40(sp)
1001c7fc:	df000915 	stw	fp,36(sp)
1001c800:	ddc00815 	stw	r23,32(sp)
1001c804:	dd800715 	stw	r22,28(sp)
1001c808:	dd400615 	stw	r21,24(sp)
1001c80c:	dd000515 	stw	r20,20(sp)
1001c810:	dc800315 	stw	r18,12(sp)
1001c814:	dc400215 	stw	r17,8(sp)
1001c818:	dc000115 	stw	r16,4(sp)
1001c81c:	3027883a 	mov	r19,r6
1001c820:	28008b26 	beq	r5,zero,1001ca50 <_realloc_r+0x260>
1001c824:	282d883a 	mov	r22,r5
1001c828:	202b883a 	mov	r21,r4
1001c82c:	9c0002c4 	addi	r16,r19,11
1001c830:	00223800 	call	10022380 <__malloc_lock>
1001c834:	808005f0 	cmpltui	r2,r16,23
1001c838:	1000521e 	bne	r2,zero,1001c984 <_realloc_r+0x194>
1001c83c:	017ffe04 	movi	r5,-8
1001c840:	8160703a 	and	r16,r16,r5
1001c844:	8007883a 	mov	r3,r16
1001c848:	80005116 	blt	r16,zero,1001c990 <_realloc_r+0x1a0>
1001c84c:	84c05036 	bltu	r16,r19,1001c990 <_realloc_r+0x1a0>
1001c850:	b0bfff17 	ldw	r2,-4(r22)
1001c854:	017fff04 	movi	r5,-4
1001c858:	b4bffe04 	addi	r18,r22,-8
1001c85c:	1162703a 	and	r17,r2,r5
1001c860:	9469883a 	add	r20,r18,r17
1001c864:	88c0390e 	bge	r17,r3,1001c94c <_realloc_r+0x15c>
1001c868:	070400b4 	movhi	fp,4098
1001c86c:	e71b6904 	addi	fp,fp,28068
1001c870:	e2000217 	ldw	r8,8(fp)
1001c874:	a1000117 	ldw	r4,4(r20)
1001c878:	45008e26 	beq	r8,r20,1001cab4 <_realloc_r+0x2c4>
1001c87c:	01bfff84 	movi	r6,-2
1001c880:	218c703a 	and	r6,r4,r6
1001c884:	a18d883a 	add	r6,r20,r6
1001c888:	31800117 	ldw	r6,4(r6)
1001c88c:	3180004c 	andi	r6,r6,1
1001c890:	30004f1e 	bne	r6,zero,1001c9d0 <_realloc_r+0x1e0>
1001c894:	2148703a 	and	r4,r4,r5
1001c898:	890b883a 	add	r5,r17,r4
1001c89c:	28c0cb0e 	bge	r5,r3,1001cbcc <_realloc_r+0x3dc>
1001c8a0:	1080004c 	andi	r2,r2,1
1001c8a4:	10004c1e 	bne	r2,zero,1001c9d8 <_realloc_r+0x1e8>
1001c8a8:	b1fffe17 	ldw	r7,-8(r22)
1001c8ac:	00bfff04 	movi	r2,-4
1001c8b0:	91cfc83a 	sub	r7,r18,r7
1001c8b4:	39400117 	ldw	r5,4(r7)
1001c8b8:	288a703a 	and	r5,r5,r2
1001c8bc:	a0000426 	beq	r20,zero,1001c8d0 <_realloc_r+0xe0>
1001c8c0:	896f883a 	add	r23,r17,r5
1001c8c4:	b92f883a 	add	r23,r23,r4
1001c8c8:	4500cb26 	beq	r8,r20,1001cbf8 <_realloc_r+0x408>
1001c8cc:	b8c0930e 	bge	r23,r3,1001cb1c <_realloc_r+0x32c>
1001c8d0:	38004126 	beq	r7,zero,1001c9d8 <_realloc_r+0x1e8>
1001c8d4:	896f883a 	add	r23,r17,r5
1001c8d8:	b8c03f16 	blt	r23,r3,1001c9d8 <_realloc_r+0x1e8>
1001c8dc:	38c00217 	ldw	r3,8(r7)
1001c8e0:	38800317 	ldw	r2,12(r7)
1001c8e4:	89bfff04 	addi	r6,r17,-4
1001c8e8:	31000968 	cmpgeui	r4,r6,37
1001c8ec:	18800315 	stw	r2,12(r3)
1001c8f0:	10c00215 	stw	r3,8(r2)
1001c8f4:	3de9883a 	add	r20,r7,r23
1001c8f8:	38c00204 	addi	r3,r7,8
1001c8fc:	2000f81e 	bne	r4,zero,1001cce0 <_realloc_r+0x4f0>
1001c900:	30800530 	cmpltui	r2,r6,20
1001c904:	b1000017 	ldw	r4,0(r22)
1001c908:	1000eb1e 	bne	r2,zero,1001ccb8 <_realloc_r+0x4c8>
1001c90c:	39000215 	stw	r4,8(r7)
1001c910:	b1000117 	ldw	r4,4(r22)
1001c914:	30800728 	cmpgeui	r2,r6,28
1001c918:	39000315 	stw	r4,12(r7)
1001c91c:	1001041e 	bne	r2,zero,1001cd30 <_realloc_r+0x540>
1001c920:	b1000217 	ldw	r4,8(r22)
1001c924:	38800404 	addi	r2,r7,16
1001c928:	b5800204 	addi	r22,r22,8
1001c92c:	11000015 	stw	r4,0(r2)
1001c930:	b1000117 	ldw	r4,4(r22)
1001c934:	b823883a 	mov	r17,r23
1001c938:	3825883a 	mov	r18,r7
1001c93c:	11000115 	stw	r4,4(r2)
1001c940:	b1000217 	ldw	r4,8(r22)
1001c944:	182d883a 	mov	r22,r3
1001c948:	11000215 	stw	r4,8(r2)
1001c94c:	91800117 	ldw	r6,4(r18)
1001c950:	8c05c83a 	sub	r2,r17,r16
1001c954:	10c00430 	cmpltui	r3,r2,16
1001c958:	3180004c 	andi	r6,r6,1
1001c95c:	18004926 	beq	r3,zero,1001ca84 <_realloc_r+0x294>
1001c960:	898cb03a 	or	r6,r17,r6
1001c964:	91800115 	stw	r6,4(r18)
1001c968:	a0800117 	ldw	r2,4(r20)
1001c96c:	10800054 	ori	r2,r2,1
1001c970:	a0800115 	stw	r2,4(r20)
1001c974:	a809883a 	mov	r4,r21
1001c978:	00223a40 	call	100223a4 <__malloc_unlock>
1001c97c:	b027883a 	mov	r19,r22
1001c980:	00000606 	br	1001c99c <_realloc_r+0x1ac>
1001c984:	04000404 	movi	r16,16
1001c988:	00c00404 	movi	r3,16
1001c98c:	84ffb02e 	bgeu	r16,r19,1001c850 <_realloc_r+0x60>
1001c990:	00800304 	movi	r2,12
1001c994:	a8800015 	stw	r2,0(r21)
1001c998:	0027883a 	mov	r19,zero
1001c99c:	9805883a 	mov	r2,r19
1001c9a0:	dfc00a17 	ldw	ra,40(sp)
1001c9a4:	df000917 	ldw	fp,36(sp)
1001c9a8:	ddc00817 	ldw	r23,32(sp)
1001c9ac:	dd800717 	ldw	r22,28(sp)
1001c9b0:	dd400617 	ldw	r21,24(sp)
1001c9b4:	dd000517 	ldw	r20,20(sp)
1001c9b8:	dcc00417 	ldw	r19,16(sp)
1001c9bc:	dc800317 	ldw	r18,12(sp)
1001c9c0:	dc400217 	ldw	r17,8(sp)
1001c9c4:	dc000117 	ldw	r16,4(sp)
1001c9c8:	dec00b04 	addi	sp,sp,44
1001c9cc:	f800283a 	ret
1001c9d0:	1080004c 	andi	r2,r2,1
1001c9d4:	10007826 	beq	r2,zero,1001cbb8 <_realloc_r+0x3c8>
1001c9d8:	980b883a 	mov	r5,r19
1001c9dc:	a809883a 	mov	r4,r21
1001c9e0:	0014e900 	call	10014e90 <_malloc_r>
1001c9e4:	1027883a 	mov	r19,r2
1001c9e8:	10001626 	beq	r2,zero,1001ca44 <_realloc_r+0x254>
1001c9ec:	b0bfff17 	ldw	r2,-4(r22)
1001c9f0:	013fff84 	movi	r4,-2
1001c9f4:	98fffe04 	addi	r3,r19,-8
1001c9f8:	1104703a 	and	r2,r2,r4
1001c9fc:	9085883a 	add	r2,r18,r2
1001ca00:	10c06726 	beq	r2,r3,1001cba0 <_realloc_r+0x3b0>
1001ca04:	89bfff04 	addi	r6,r17,-4
1001ca08:	30800968 	cmpgeui	r2,r6,37
1001ca0c:	1000761e 	bne	r2,zero,1001cbe8 <_realloc_r+0x3f8>
1001ca10:	30800530 	cmpltui	r2,r6,20
1001ca14:	b1000017 	ldw	r4,0(r22)
1001ca18:	10003726 	beq	r2,zero,1001caf8 <_realloc_r+0x308>
1001ca1c:	9805883a 	mov	r2,r19
1001ca20:	b007883a 	mov	r3,r22
1001ca24:	11000015 	stw	r4,0(r2)
1001ca28:	19000117 	ldw	r4,4(r3)
1001ca2c:	11000115 	stw	r4,4(r2)
1001ca30:	18c00217 	ldw	r3,8(r3)
1001ca34:	10c00215 	stw	r3,8(r2)
1001ca38:	b00b883a 	mov	r5,r22
1001ca3c:	a809883a 	mov	r4,r21
1001ca40:	001acb00 	call	1001acb0 <_free_r>
1001ca44:	a809883a 	mov	r4,r21
1001ca48:	00223a40 	call	100223a4 <__malloc_unlock>
1001ca4c:	003fd306 	br	1001c99c <_realloc_r+0x1ac>
1001ca50:	300b883a 	mov	r5,r6
1001ca54:	dfc00a17 	ldw	ra,40(sp)
1001ca58:	df000917 	ldw	fp,36(sp)
1001ca5c:	ddc00817 	ldw	r23,32(sp)
1001ca60:	dd800717 	ldw	r22,28(sp)
1001ca64:	dd400617 	ldw	r21,24(sp)
1001ca68:	dd000517 	ldw	r20,20(sp)
1001ca6c:	dcc00417 	ldw	r19,16(sp)
1001ca70:	dc800317 	ldw	r18,12(sp)
1001ca74:	dc400217 	ldw	r17,8(sp)
1001ca78:	dc000117 	ldw	r16,4(sp)
1001ca7c:	dec00b04 	addi	sp,sp,44
1001ca80:	0014e901 	jmpi	10014e90 <_malloc_r>
1001ca84:	340cb03a 	or	r6,r6,r16
1001ca88:	91800115 	stw	r6,4(r18)
1001ca8c:	940b883a 	add	r5,r18,r16
1001ca90:	10800054 	ori	r2,r2,1
1001ca94:	28800115 	stw	r2,4(r5)
1001ca98:	a0800117 	ldw	r2,4(r20)
1001ca9c:	29400204 	addi	r5,r5,8
1001caa0:	a809883a 	mov	r4,r21
1001caa4:	10800054 	ori	r2,r2,1
1001caa8:	a0800115 	stw	r2,4(r20)
1001caac:	001acb00 	call	1001acb0 <_free_r>
1001cab0:	003fb006 	br	1001c974 <_realloc_r+0x184>
1001cab4:	2148703a 	and	r4,r4,r5
1001cab8:	890b883a 	add	r5,r17,r4
1001cabc:	81800404 	addi	r6,r16,16
1001cac0:	29bf7716 	blt	r5,r6,1001c8a0 <_realloc_r+0xb0>
1001cac4:	9425883a 	add	r18,r18,r16
1001cac8:	2c05c83a 	sub	r2,r5,r16
1001cacc:	e4800215 	stw	r18,8(fp)
1001cad0:	10800054 	ori	r2,r2,1
1001cad4:	90800115 	stw	r2,4(r18)
1001cad8:	b0bfff17 	ldw	r2,-4(r22)
1001cadc:	a809883a 	mov	r4,r21
1001cae0:	b027883a 	mov	r19,r22
1001cae4:	1080004c 	andi	r2,r2,1
1001cae8:	1420b03a 	or	r16,r2,r16
1001caec:	b43fff15 	stw	r16,-4(r22)
1001caf0:	00223a40 	call	100223a4 <__malloc_unlock>
1001caf4:	003fa906 	br	1001c99c <_realloc_r+0x1ac>
1001caf8:	99000015 	stw	r4,0(r19)
1001cafc:	b0c00117 	ldw	r3,4(r22)
1001cb00:	30800728 	cmpgeui	r2,r6,28
1001cb04:	98c00115 	stw	r3,4(r19)
1001cb08:	1000611e 	bne	r2,zero,1001cc90 <_realloc_r+0x4a0>
1001cb0c:	b0c00204 	addi	r3,r22,8
1001cb10:	98800204 	addi	r2,r19,8
1001cb14:	b1000217 	ldw	r4,8(r22)
1001cb18:	003fc206 	br	1001ca24 <_realloc_r+0x234>
1001cb1c:	a0800317 	ldw	r2,12(r20)
1001cb20:	a0c00217 	ldw	r3,8(r20)
1001cb24:	89bfff04 	addi	r6,r17,-4
1001cb28:	31000968 	cmpgeui	r4,r6,37
1001cb2c:	18800315 	stw	r2,12(r3)
1001cb30:	10c00215 	stw	r3,8(r2)
1001cb34:	38c00217 	ldw	r3,8(r7)
1001cb38:	38800317 	ldw	r2,12(r7)
1001cb3c:	3a000204 	addi	r8,r7,8
1001cb40:	3de9883a 	add	r20,r7,r23
1001cb44:	18800315 	stw	r2,12(r3)
1001cb48:	10c00215 	stw	r3,8(r2)
1001cb4c:	20006f1e 	bne	r4,zero,1001cd0c <_realloc_r+0x51c>
1001cb50:	30800530 	cmpltui	r2,r6,20
1001cb54:	b0c00017 	ldw	r3,0(r22)
1001cb58:	10006a1e 	bne	r2,zero,1001cd04 <_realloc_r+0x514>
1001cb5c:	38c00215 	stw	r3,8(r7)
1001cb60:	b0c00117 	ldw	r3,4(r22)
1001cb64:	30800728 	cmpgeui	r2,r6,28
1001cb68:	38c00315 	stw	r3,12(r7)
1001cb6c:	10007a1e 	bne	r2,zero,1001cd58 <_realloc_r+0x568>
1001cb70:	b0c00217 	ldw	r3,8(r22)
1001cb74:	38800404 	addi	r2,r7,16
1001cb78:	b5800204 	addi	r22,r22,8
1001cb7c:	10c00015 	stw	r3,0(r2)
1001cb80:	b0c00117 	ldw	r3,4(r22)
1001cb84:	b823883a 	mov	r17,r23
1001cb88:	3825883a 	mov	r18,r7
1001cb8c:	10c00115 	stw	r3,4(r2)
1001cb90:	b0c00217 	ldw	r3,8(r22)
1001cb94:	402d883a 	mov	r22,r8
1001cb98:	10c00215 	stw	r3,8(r2)
1001cb9c:	003f6b06 	br	1001c94c <_realloc_r+0x15c>
1001cba0:	98bfff17 	ldw	r2,-4(r19)
1001cba4:	00ffff04 	movi	r3,-4
1001cba8:	10c4703a 	and	r2,r2,r3
1001cbac:	88a3883a 	add	r17,r17,r2
1001cbb0:	9469883a 	add	r20,r18,r17
1001cbb4:	003f6506 	br	1001c94c <_realloc_r+0x15c>
1001cbb8:	b1fffe17 	ldw	r7,-8(r22)
1001cbbc:	91cfc83a 	sub	r7,r18,r7
1001cbc0:	39000117 	ldw	r4,4(r7)
1001cbc4:	214a703a 	and	r5,r4,r5
1001cbc8:	003f4106 	br	1001c8d0 <_realloc_r+0xe0>
1001cbcc:	a0800317 	ldw	r2,12(r20)
1001cbd0:	a0c00217 	ldw	r3,8(r20)
1001cbd4:	2823883a 	mov	r17,r5
1001cbd8:	9169883a 	add	r20,r18,r5
1001cbdc:	18800315 	stw	r2,12(r3)
1001cbe0:	10c00215 	stw	r3,8(r2)
1001cbe4:	003f5906 	br	1001c94c <_realloc_r+0x15c>
1001cbe8:	b00b883a 	mov	r5,r22
1001cbec:	9809883a 	mov	r4,r19
1001cbf0:	00158f80 	call	100158f8 <memmove>
1001cbf4:	003f9006 	br	1001ca38 <_realloc_r+0x248>
1001cbf8:	80800404 	addi	r2,r16,16
1001cbfc:	b8bf3416 	blt	r23,r2,1001c8d0 <_realloc_r+0xe0>
1001cc00:	38800317 	ldw	r2,12(r7)
1001cc04:	38c00217 	ldw	r3,8(r7)
1001cc08:	89bfff04 	addi	r6,r17,-4
1001cc0c:	31000968 	cmpgeui	r4,r6,37
1001cc10:	18800315 	stw	r2,12(r3)
1001cc14:	10c00215 	stw	r3,8(r2)
1001cc18:	3cc00204 	addi	r19,r7,8
1001cc1c:	20005a1e 	bne	r4,zero,1001cd88 <_realloc_r+0x598>
1001cc20:	30800530 	cmpltui	r2,r6,20
1001cc24:	b0c00017 	ldw	r3,0(r22)
1001cc28:	1000551e 	bne	r2,zero,1001cd80 <_realloc_r+0x590>
1001cc2c:	38c00215 	stw	r3,8(r7)
1001cc30:	b0c00117 	ldw	r3,4(r22)
1001cc34:	30800728 	cmpgeui	r2,r6,28
1001cc38:	38c00315 	stw	r3,12(r7)
1001cc3c:	1000661e 	bne	r2,zero,1001cdd8 <_realloc_r+0x5e8>
1001cc40:	b0c00217 	ldw	r3,8(r22)
1001cc44:	38800404 	addi	r2,r7,16
1001cc48:	b5800204 	addi	r22,r22,8
1001cc4c:	10c00015 	stw	r3,0(r2)
1001cc50:	b0c00117 	ldw	r3,4(r22)
1001cc54:	10c00115 	stw	r3,4(r2)
1001cc58:	b0c00217 	ldw	r3,8(r22)
1001cc5c:	10c00215 	stw	r3,8(r2)
1001cc60:	3c07883a 	add	r3,r7,r16
1001cc64:	bc05c83a 	sub	r2,r23,r16
1001cc68:	e0c00215 	stw	r3,8(fp)
1001cc6c:	10800054 	ori	r2,r2,1
1001cc70:	18800115 	stw	r2,4(r3)
1001cc74:	38800117 	ldw	r2,4(r7)
1001cc78:	a809883a 	mov	r4,r21
1001cc7c:	1080004c 	andi	r2,r2,1
1001cc80:	1420b03a 	or	r16,r2,r16
1001cc84:	3c000115 	stw	r16,4(r7)
1001cc88:	00223a40 	call	100223a4 <__malloc_unlock>
1001cc8c:	003f4306 	br	1001c99c <_realloc_r+0x1ac>
1001cc90:	b0800217 	ldw	r2,8(r22)
1001cc94:	31800920 	cmpeqi	r6,r6,36
1001cc98:	98800215 	stw	r2,8(r19)
1001cc9c:	b0800317 	ldw	r2,12(r22)
1001cca0:	98800315 	stw	r2,12(r19)
1001cca4:	3000061e 	bne	r6,zero,1001ccc0 <_realloc_r+0x4d0>
1001cca8:	b0c00404 	addi	r3,r22,16
1001ccac:	98800404 	addi	r2,r19,16
1001ccb0:	b1000417 	ldw	r4,16(r22)
1001ccb4:	003f5b06 	br	1001ca24 <_realloc_r+0x234>
1001ccb8:	1805883a 	mov	r2,r3
1001ccbc:	003f1b06 	br	1001c92c <_realloc_r+0x13c>
1001ccc0:	b1000417 	ldw	r4,16(r22)
1001ccc4:	b0c00604 	addi	r3,r22,24
1001ccc8:	98800604 	addi	r2,r19,24
1001cccc:	99000415 	stw	r4,16(r19)
1001ccd0:	b1000517 	ldw	r4,20(r22)
1001ccd4:	99000515 	stw	r4,20(r19)
1001ccd8:	b1000617 	ldw	r4,24(r22)
1001ccdc:	003f5106 	br	1001ca24 <_realloc_r+0x234>
1001cce0:	b00b883a 	mov	r5,r22
1001cce4:	1809883a 	mov	r4,r3
1001cce8:	d9c00015 	stw	r7,0(sp)
1001ccec:	00158f80 	call	100158f8 <memmove>
1001ccf0:	d9c00017 	ldw	r7,0(sp)
1001ccf4:	102d883a 	mov	r22,r2
1001ccf8:	b823883a 	mov	r17,r23
1001ccfc:	3825883a 	mov	r18,r7
1001cd00:	003f1206 	br	1001c94c <_realloc_r+0x15c>
1001cd04:	4005883a 	mov	r2,r8
1001cd08:	003f9c06 	br	1001cb7c <_realloc_r+0x38c>
1001cd0c:	b00b883a 	mov	r5,r22
1001cd10:	4009883a 	mov	r4,r8
1001cd14:	d9c00015 	stw	r7,0(sp)
1001cd18:	00158f80 	call	100158f8 <memmove>
1001cd1c:	d9c00017 	ldw	r7,0(sp)
1001cd20:	102d883a 	mov	r22,r2
1001cd24:	b823883a 	mov	r17,r23
1001cd28:	3825883a 	mov	r18,r7
1001cd2c:	003f0706 	br	1001c94c <_realloc_r+0x15c>
1001cd30:	b0800217 	ldw	r2,8(r22)
1001cd34:	31800920 	cmpeqi	r6,r6,36
1001cd38:	38800415 	stw	r2,16(r7)
1001cd3c:	b0800317 	ldw	r2,12(r22)
1001cd40:	38800515 	stw	r2,20(r7)
1001cd44:	b1000417 	ldw	r4,16(r22)
1001cd48:	3000151e 	bne	r6,zero,1001cda0 <_realloc_r+0x5b0>
1001cd4c:	38800604 	addi	r2,r7,24
1001cd50:	b5800404 	addi	r22,r22,16
1001cd54:	003ef506 	br	1001c92c <_realloc_r+0x13c>
1001cd58:	b0800217 	ldw	r2,8(r22)
1001cd5c:	31800920 	cmpeqi	r6,r6,36
1001cd60:	38800415 	stw	r2,16(r7)
1001cd64:	b0800317 	ldw	r2,12(r22)
1001cd68:	38800515 	stw	r2,20(r7)
1001cd6c:	b0c00417 	ldw	r3,16(r22)
1001cd70:	3000121e 	bne	r6,zero,1001cdbc <_realloc_r+0x5cc>
1001cd74:	38800604 	addi	r2,r7,24
1001cd78:	b5800404 	addi	r22,r22,16
1001cd7c:	003f7f06 	br	1001cb7c <_realloc_r+0x38c>
1001cd80:	9805883a 	mov	r2,r19
1001cd84:	003fb106 	br	1001cc4c <_realloc_r+0x45c>
1001cd88:	b00b883a 	mov	r5,r22
1001cd8c:	9809883a 	mov	r4,r19
1001cd90:	d9c00015 	stw	r7,0(sp)
1001cd94:	00158f80 	call	100158f8 <memmove>
1001cd98:	d9c00017 	ldw	r7,0(sp)
1001cd9c:	003fb006 	br	1001cc60 <_realloc_r+0x470>
1001cda0:	b5800604 	addi	r22,r22,24
1001cda4:	39000615 	stw	r4,24(r7)
1001cda8:	b13fff17 	ldw	r4,-4(r22)
1001cdac:	38800804 	addi	r2,r7,32
1001cdb0:	39000715 	stw	r4,28(r7)
1001cdb4:	b1000017 	ldw	r4,0(r22)
1001cdb8:	003edc06 	br	1001c92c <_realloc_r+0x13c>
1001cdbc:	b5800604 	addi	r22,r22,24
1001cdc0:	38c00615 	stw	r3,24(r7)
1001cdc4:	b0ffff17 	ldw	r3,-4(r22)
1001cdc8:	38800804 	addi	r2,r7,32
1001cdcc:	38c00715 	stw	r3,28(r7)
1001cdd0:	b0c00017 	ldw	r3,0(r22)
1001cdd4:	003f6906 	br	1001cb7c <_realloc_r+0x38c>
1001cdd8:	b0800217 	ldw	r2,8(r22)
1001cddc:	31800920 	cmpeqi	r6,r6,36
1001cde0:	38800415 	stw	r2,16(r7)
1001cde4:	b0800317 	ldw	r2,12(r22)
1001cde8:	38800515 	stw	r2,20(r7)
1001cdec:	b0c00417 	ldw	r3,16(r22)
1001cdf0:	3000031e 	bne	r6,zero,1001ce00 <_realloc_r+0x610>
1001cdf4:	38800604 	addi	r2,r7,24
1001cdf8:	b5800404 	addi	r22,r22,16
1001cdfc:	003f9306 	br	1001cc4c <_realloc_r+0x45c>
1001ce00:	b5800604 	addi	r22,r22,24
1001ce04:	38c00615 	stw	r3,24(r7)
1001ce08:	b0ffff17 	ldw	r3,-4(r22)
1001ce0c:	38800804 	addi	r2,r7,32
1001ce10:	38c00715 	stw	r3,28(r7)
1001ce14:	b0c00017 	ldw	r3,0(r22)
1001ce18:	003f8c06 	br	1001cc4c <_realloc_r+0x45c>

1001ce1c <__sprint_r.part.0>:
1001ce1c:	28801917 	ldw	r2,100(r5)
1001ce20:	defff604 	addi	sp,sp,-40
1001ce24:	dd000415 	stw	r20,16(sp)
1001ce28:	dfc00915 	stw	ra,36(sp)
1001ce2c:	df000815 	stw	fp,32(sp)
1001ce30:	ddc00715 	stw	r23,28(sp)
1001ce34:	dd800615 	stw	r22,24(sp)
1001ce38:	dd400515 	stw	r21,20(sp)
1001ce3c:	dcc00315 	stw	r19,12(sp)
1001ce40:	dc800215 	stw	r18,8(sp)
1001ce44:	dc400115 	stw	r17,4(sp)
1001ce48:	dc000015 	stw	r16,0(sp)
1001ce4c:	1088000c 	andi	r2,r2,8192
1001ce50:	3029883a 	mov	r20,r6
1001ce54:	10002c26 	beq	r2,zero,1001cf08 <__sprint_r.part.0+0xec>
1001ce58:	30800217 	ldw	r2,8(r6)
1001ce5c:	2823883a 	mov	r17,r5
1001ce60:	2027883a 	mov	r19,r4
1001ce64:	35400017 	ldw	r21,0(r6)
1001ce68:	05ffff04 	movi	r23,-4
1001ce6c:	10002426 	beq	r2,zero,1001cf00 <__sprint_r.part.0+0xe4>
1001ce70:	ad800117 	ldw	r22,4(r21)
1001ce74:	ac000017 	ldw	r16,0(r21)
1001ce78:	b024d0ba 	srli	r18,r22,2
1001ce7c:	90001b26 	beq	r18,zero,1001ceec <__sprint_r.part.0+0xd0>
1001ce80:	0039883a 	mov	fp,zero
1001ce84:	00000206 	br	1001ce90 <__sprint_r.part.0+0x74>
1001ce88:	84000104 	addi	r16,r16,4
1001ce8c:	97001626 	beq	r18,fp,1001cee8 <__sprint_r.part.0+0xcc>
1001ce90:	81400017 	ldw	r5,0(r16)
1001ce94:	880d883a 	mov	r6,r17
1001ce98:	9809883a 	mov	r4,r19
1001ce9c:	001e7980 	call	1001e798 <_fputwc_r>
1001cea0:	10bfffe0 	cmpeqi	r2,r2,-1
1001cea4:	e7000044 	addi	fp,fp,1
1001cea8:	103ff726 	beq	r2,zero,1001ce88 <__sprint_r.part.0+0x6c>
1001ceac:	00bfffc4 	movi	r2,-1
1001ceb0:	a0000215 	stw	zero,8(r20)
1001ceb4:	a0000115 	stw	zero,4(r20)
1001ceb8:	dfc00917 	ldw	ra,36(sp)
1001cebc:	df000817 	ldw	fp,32(sp)
1001cec0:	ddc00717 	ldw	r23,28(sp)
1001cec4:	dd800617 	ldw	r22,24(sp)
1001cec8:	dd400517 	ldw	r21,20(sp)
1001cecc:	dd000417 	ldw	r20,16(sp)
1001ced0:	dcc00317 	ldw	r19,12(sp)
1001ced4:	dc800217 	ldw	r18,8(sp)
1001ced8:	dc400117 	ldw	r17,4(sp)
1001cedc:	dc000017 	ldw	r16,0(sp)
1001cee0:	dec00a04 	addi	sp,sp,40
1001cee4:	f800283a 	ret
1001cee8:	a0800217 	ldw	r2,8(r20)
1001ceec:	b5ec703a 	and	r22,r22,r23
1001cef0:	1585c83a 	sub	r2,r2,r22
1001cef4:	a0800215 	stw	r2,8(r20)
1001cef8:	ad400204 	addi	r21,r21,8
1001cefc:	103fdc1e 	bne	r2,zero,1001ce70 <__sprint_r.part.0+0x54>
1001cf00:	0005883a 	mov	r2,zero
1001cf04:	003fea06 	br	1001ceb0 <__sprint_r.part.0+0x94>
1001cf08:	001afac0 	call	1001afac <__sfvwrite_r>
1001cf0c:	003fe806 	br	1001ceb0 <__sprint_r.part.0+0x94>

1001cf10 <__sprint_r>:
1001cf10:	30c00217 	ldw	r3,8(r6)
1001cf14:	18000126 	beq	r3,zero,1001cf1c <__sprint_r+0xc>
1001cf18:	001ce1c1 	jmpi	1001ce1c <__sprint_r.part.0>
1001cf1c:	30000115 	stw	zero,4(r6)
1001cf20:	0005883a 	mov	r2,zero
1001cf24:	f800283a 	ret

1001cf28 <___vfiprintf_internal_r>:
1001cf28:	deffd004 	addi	sp,sp,-192
1001cf2c:	df002e15 	stw	fp,184(sp)
1001cf30:	dcc02915 	stw	r19,164(sp)
1001cf34:	dc802815 	stw	r18,160(sp)
1001cf38:	dfc02f15 	stw	ra,188(sp)
1001cf3c:	ddc02d15 	stw	r23,180(sp)
1001cf40:	dd802c15 	stw	r22,176(sp)
1001cf44:	dd402b15 	stw	r21,172(sp)
1001cf48:	dd002a15 	stw	r20,168(sp)
1001cf4c:	dc402715 	stw	r17,156(sp)
1001cf50:	dc002615 	stw	r16,152(sp)
1001cf54:	d9c00315 	stw	r7,12(sp)
1001cf58:	2027883a 	mov	r19,r4
1001cf5c:	2825883a 	mov	r18,r5
1001cf60:	3039883a 	mov	fp,r6
1001cf64:	20000226 	beq	r4,zero,1001cf70 <___vfiprintf_internal_r+0x48>
1001cf68:	20800e17 	ldw	r2,56(r4)
1001cf6c:	1002b626 	beq	r2,zero,1001da48 <___vfiprintf_internal_r+0xb20>
1001cf70:	9080030b 	ldhu	r2,12(r18)
1001cf74:	10c8000c 	andi	r3,r2,8192
1001cf78:	1800061e 	bne	r3,zero,1001cf94 <___vfiprintf_internal_r+0x6c>
1001cf7c:	90c01917 	ldw	r3,100(r18)
1001cf80:	0137ffc4 	movi	r4,-8193
1001cf84:	10880014 	ori	r2,r2,8192
1001cf88:	1906703a 	and	r3,r3,r4
1001cf8c:	9080030d 	sth	r2,12(r18)
1001cf90:	90c01915 	stw	r3,100(r18)
1001cf94:	10c0020c 	andi	r3,r2,8
1001cf98:	18009426 	beq	r3,zero,1001d1ec <___vfiprintf_internal_r+0x2c4>
1001cf9c:	90c00417 	ldw	r3,16(r18)
1001cfa0:	18009226 	beq	r3,zero,1001d1ec <___vfiprintf_internal_r+0x2c4>
1001cfa4:	1080068c 	andi	r2,r2,26
1001cfa8:	10800298 	cmpnei	r2,r2,10
1001cfac:	10009726 	beq	r2,zero,1001d20c <___vfiprintf_internal_r+0x2e4>
1001cfb0:	dc401604 	addi	r17,sp,88
1001cfb4:	dc400915 	stw	r17,36(sp)
1001cfb8:	d8000b15 	stw	zero,44(sp)
1001cfbc:	d8000a15 	stw	zero,40(sp)
1001cfc0:	8811883a 	mov	r8,r17
1001cfc4:	d8000415 	stw	zero,16(sp)
1001cfc8:	d8000015 	stw	zero,0(sp)
1001cfcc:	e0800007 	ldb	r2,0(fp)
1001cfd0:	1000a226 	beq	r2,zero,1001d25c <___vfiprintf_internal_r+0x334>
1001cfd4:	10800960 	cmpeqi	r2,r2,37
1001cfd8:	1003e71e 	bne	r2,zero,1001df78 <___vfiprintf_internal_r+0x1050>
1001cfdc:	e021883a 	mov	r16,fp
1001cfe0:	00000206 	br	1001cfec <___vfiprintf_internal_r+0xc4>
1001cfe4:	18009226 	beq	r3,zero,1001d230 <___vfiprintf_internal_r+0x308>
1001cfe8:	a021883a 	mov	r16,r20
1001cfec:	80800047 	ldb	r2,1(r16)
1001cff0:	85000044 	addi	r20,r16,1
1001cff4:	10c00958 	cmpnei	r3,r2,37
1001cff8:	103ffa1e 	bne	r2,zero,1001cfe4 <___vfiprintf_internal_r+0xbc>
1001cffc:	a72bc83a 	sub	r21,r20,fp
1001d000:	a8009626 	beq	r21,zero,1001d25c <___vfiprintf_internal_r+0x334>
1001d004:	d8c00b17 	ldw	r3,44(sp)
1001d008:	d8800a17 	ldw	r2,40(sp)
1001d00c:	47000015 	stw	fp,0(r8)
1001d010:	a8c7883a 	add	r3,r21,r3
1001d014:	10800044 	addi	r2,r2,1
1001d018:	d8800a15 	stw	r2,40(sp)
1001d01c:	45400115 	stw	r21,4(r8)
1001d020:	d8c00b15 	stw	r3,44(sp)
1001d024:	10800208 	cmpgei	r2,r2,8
1001d028:	1000841e 	bne	r2,zero,1001d23c <___vfiprintf_internal_r+0x314>
1001d02c:	42000204 	addi	r8,r8,8
1001d030:	d8c00017 	ldw	r3,0(sp)
1001d034:	80800047 	ldb	r2,1(r16)
1001d038:	1d47883a 	add	r3,r3,r21
1001d03c:	d8c00015 	stw	r3,0(sp)
1001d040:	10008626 	beq	r2,zero,1001d25c <___vfiprintf_internal_r+0x334>
1001d044:	a0800047 	ldb	r2,1(r20)
1001d048:	a7000044 	addi	fp,r20,1
1001d04c:	d8000845 	stb	zero,33(sp)
1001d050:	000b883a 	mov	r5,zero
1001d054:	000d883a 	mov	r6,zero
1001d058:	027fffc4 	movi	r9,-1
1001d05c:	0021883a 	mov	r16,zero
1001d060:	0019883a 	mov	r12,zero
1001d064:	e7000044 	addi	fp,fp,1
1001d068:	10fff804 	addi	r3,r2,-32
1001d06c:	19001668 	cmpgeui	r4,r3,89
1001d070:	20009c1e 	bne	r4,zero,1001d2e4 <___vfiprintf_internal_r+0x3bc>
1001d074:	180690ba 	slli	r3,r3,2
1001d078:	010400b4 	movhi	r4,4098
1001d07c:	1909883a 	add	r4,r3,r4
1001d080:	20f42217 	ldw	r3,-12152(r4)
1001d084:	1800683a 	jmp	r3
1001d088:	1001d3b4 	orhi	zero,r2,1870
1001d08c:	1001d2e4 	muli	zero,r2,1867
1001d090:	1001d2e4 	muli	zero,r2,1867
1001d094:	1001d3a8 	cmpgeui	zero,r2,1870
1001d098:	1001d2e4 	muli	zero,r2,1867
1001d09c:	1001d2e4 	muli	zero,r2,1867
1001d0a0:	1001d2e4 	muli	zero,r2,1867
1001d0a4:	1001d2e4 	muli	zero,r2,1867
1001d0a8:	1001d2e4 	muli	zero,r2,1867
1001d0ac:	1001d2e4 	muli	zero,r2,1867
1001d0b0:	1001d380 	call	11001d38 <_gp+0xfd1818>
1001d0b4:	1001d370 	cmpltui	zero,r2,1869
1001d0b8:	1001d2e4 	muli	zero,r2,1867
1001d0bc:	1001d358 	cmpnei	zero,r2,1869
1001d0c0:	1001d314 	ori	zero,r2,1868
1001d0c4:	1001d2e4 	muli	zero,r2,1867
1001d0c8:	1001d308 	cmpgei	zero,r2,1868
1001d0cc:	1001d2b4 	orhi	zero,r2,1866
1001d0d0:	1001d2b4 	orhi	zero,r2,1866
1001d0d4:	1001d2b4 	orhi	zero,r2,1866
1001d0d8:	1001d2b4 	orhi	zero,r2,1866
1001d0dc:	1001d2b4 	orhi	zero,r2,1866
1001d0e0:	1001d2b4 	orhi	zero,r2,1866
1001d0e4:	1001d2b4 	orhi	zero,r2,1866
1001d0e8:	1001d2b4 	orhi	zero,r2,1866
1001d0ec:	1001d2b4 	orhi	zero,r2,1866
1001d0f0:	1001d2e4 	muli	zero,r2,1867
1001d0f4:	1001d2e4 	muli	zero,r2,1867
1001d0f8:	1001d2e4 	muli	zero,r2,1867
1001d0fc:	1001d2e4 	muli	zero,r2,1867
1001d100:	1001d2e4 	muli	zero,r2,1867
1001d104:	1001d2e4 	muli	zero,r2,1867
1001d108:	1001d2e4 	muli	zero,r2,1867
1001d10c:	1001d2e4 	muli	zero,r2,1867
1001d110:	1001d2e4 	muli	zero,r2,1867
1001d114:	1001d2e4 	muli	zero,r2,1867
1001d118:	1001d970 	cmpltui	zero,r2,1893
1001d11c:	1001d2e4 	muli	zero,r2,1867
1001d120:	1001d2e4 	muli	zero,r2,1867
1001d124:	1001d2e4 	muli	zero,r2,1867
1001d128:	1001d2e4 	muli	zero,r2,1867
1001d12c:	1001d2e4 	muli	zero,r2,1867
1001d130:	1001d2e4 	muli	zero,r2,1867
1001d134:	1001d2e4 	muli	zero,r2,1867
1001d138:	1001d2e4 	muli	zero,r2,1867
1001d13c:	1001d2e4 	muli	zero,r2,1867
1001d140:	1001d2e4 	muli	zero,r2,1867
1001d144:	1001d908 	cmpgei	zero,r2,1892
1001d148:	1001d2e4 	muli	zero,r2,1867
1001d14c:	1001d2e4 	muli	zero,r2,1867
1001d150:	1001d2e4 	muli	zero,r2,1867
1001d154:	1001d2e4 	muli	zero,r2,1867
1001d158:	1001d2e4 	muli	zero,r2,1867
1001d15c:	1001d93c 	xorhi	zero,r2,1892
1001d160:	1001d2e4 	muli	zero,r2,1867
1001d164:	1001d2e4 	muli	zero,r2,1867
1001d168:	1001d50c 	andi	zero,r2,1876
1001d16c:	1001d2e4 	muli	zero,r2,1867
1001d170:	1001d2e4 	muli	zero,r2,1867
1001d174:	1001d2e4 	muli	zero,r2,1867
1001d178:	1001d2e4 	muli	zero,r2,1867
1001d17c:	1001d2e4 	muli	zero,r2,1867
1001d180:	1001d2e4 	muli	zero,r2,1867
1001d184:	1001d2e4 	muli	zero,r2,1867
1001d188:	1001d2e4 	muli	zero,r2,1867
1001d18c:	1001d2e4 	muli	zero,r2,1867
1001d190:	1001d2e4 	muli	zero,r2,1867
1001d194:	1001d6a8 	cmpgeui	zero,r2,1882
1001d198:	1001d634 	orhi	zero,r2,1880
1001d19c:	1001d2e4 	muli	zero,r2,1867
1001d1a0:	1001d2e4 	muli	zero,r2,1867
1001d1a4:	1001d2e4 	muli	zero,r2,1867
1001d1a8:	1001d43c 	xorhi	zero,r2,1872
1001d1ac:	1001d634 	orhi	zero,r2,1880
1001d1b0:	1001d2e4 	muli	zero,r2,1867
1001d1b4:	1001d2e4 	muli	zero,r2,1867
1001d1b8:	1001d428 	cmpgeui	zero,r2,1872
1001d1bc:	1001d2e4 	muli	zero,r2,1867
1001d1c0:	1001d5f4 	orhi	zero,r2,1879
1001d1c4:	1001d4cc 	andi	zero,r2,1875
1001d1c8:	1001d454 	ori	zero,r2,1873
1001d1cc:	1001d448 	cmpgei	zero,r2,1873
1001d1d0:	1001d2e4 	muli	zero,r2,1867
1001d1d4:	1001d594 	ori	zero,r2,1878
1001d1d8:	1001d2e4 	muli	zero,r2,1867
1001d1dc:	1001d554 	ori	zero,r2,1877
1001d1e0:	1001d2e4 	muli	zero,r2,1867
1001d1e4:	1001d2e4 	muli	zero,r2,1867
1001d1e8:	1001d3e0 	cmpeqi	zero,r2,1871
1001d1ec:	900b883a 	mov	r5,r18
1001d1f0:	9809883a 	mov	r4,r19
1001d1f4:	0018a6c0 	call	10018a6c <__swsetup_r>
1001d1f8:	1004071e 	bne	r2,zero,1001e218 <___vfiprintf_internal_r+0x12f0>
1001d1fc:	9080030b 	ldhu	r2,12(r18)
1001d200:	1080068c 	andi	r2,r2,26
1001d204:	10800298 	cmpnei	r2,r2,10
1001d208:	103f691e 	bne	r2,zero,1001cfb0 <___vfiprintf_internal_r+0x88>
1001d20c:	9080038f 	ldh	r2,14(r18)
1001d210:	103f6716 	blt	r2,zero,1001cfb0 <___vfiprintf_internal_r+0x88>
1001d214:	d9c00317 	ldw	r7,12(sp)
1001d218:	e00d883a 	mov	r6,fp
1001d21c:	900b883a 	mov	r5,r18
1001d220:	9809883a 	mov	r4,r19
1001d224:	001e26c0 	call	1001e26c <__sbprintf>
1001d228:	d8800015 	stw	r2,0(sp)
1001d22c:	00001406 	br	1001d280 <___vfiprintf_internal_r+0x358>
1001d230:	a72bc83a 	sub	r21,r20,fp
1001d234:	a83f8326 	beq	r21,zero,1001d044 <___vfiprintf_internal_r+0x11c>
1001d238:	003f7206 	br	1001d004 <___vfiprintf_internal_r+0xdc>
1001d23c:	18032b26 	beq	r3,zero,1001deec <___vfiprintf_internal_r+0xfc4>
1001d240:	d9800904 	addi	r6,sp,36
1001d244:	900b883a 	mov	r5,r18
1001d248:	9809883a 	mov	r4,r19
1001d24c:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d250:	1000081e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d254:	8811883a 	mov	r8,r17
1001d258:	003f7506 	br	1001d030 <___vfiprintf_internal_r+0x108>
1001d25c:	d8800b17 	ldw	r2,44(sp)
1001d260:	10000426 	beq	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d264:	d9800904 	addi	r6,sp,36
1001d268:	900b883a 	mov	r5,r18
1001d26c:	9809883a 	mov	r4,r19
1001d270:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d274:	9080030b 	ldhu	r2,12(r18)
1001d278:	1080100c 	andi	r2,r2,64
1001d27c:	1003e61e 	bne	r2,zero,1001e218 <___vfiprintf_internal_r+0x12f0>
1001d280:	d8800017 	ldw	r2,0(sp)
1001d284:	dfc02f17 	ldw	ra,188(sp)
1001d288:	df002e17 	ldw	fp,184(sp)
1001d28c:	ddc02d17 	ldw	r23,180(sp)
1001d290:	dd802c17 	ldw	r22,176(sp)
1001d294:	dd402b17 	ldw	r21,172(sp)
1001d298:	dd002a17 	ldw	r20,168(sp)
1001d29c:	dcc02917 	ldw	r19,164(sp)
1001d2a0:	dc802817 	ldw	r18,160(sp)
1001d2a4:	dc402717 	ldw	r17,156(sp)
1001d2a8:	dc002617 	ldw	r16,152(sp)
1001d2ac:	dec03004 	addi	sp,sp,192
1001d2b0:	f800283a 	ret
1001d2b4:	0021883a 	mov	r16,zero
1001d2b8:	10fff404 	addi	r3,r2,-48
1001d2bc:	e7000044 	addi	fp,fp,1
1001d2c0:	840002a4 	muli	r16,r16,10
1001d2c4:	e0bfffc7 	ldb	r2,-1(fp)
1001d2c8:	1c21883a 	add	r16,r3,r16
1001d2cc:	10fff404 	addi	r3,r2,-48
1001d2d0:	190002b0 	cmpltui	r4,r3,10
1001d2d4:	203ff91e 	bne	r4,zero,1001d2bc <___vfiprintf_internal_r+0x394>
1001d2d8:	10fff804 	addi	r3,r2,-32
1001d2dc:	19001668 	cmpgeui	r4,r3,89
1001d2e0:	203f6426 	beq	r4,zero,1001d074 <___vfiprintf_internal_r+0x14c>
1001d2e4:	29403fcc 	andi	r5,r5,255
1001d2e8:	2803a91e 	bne	r5,zero,1001e190 <___vfiprintf_internal_r+0x1268>
1001d2ec:	103fdb26 	beq	r2,zero,1001d25c <___vfiprintf_internal_r+0x334>
1001d2f0:	d8800c05 	stb	r2,48(sp)
1001d2f4:	d8000845 	stb	zero,33(sp)
1001d2f8:	05400044 	movi	r21,1
1001d2fc:	05800044 	movi	r22,1
1001d300:	ddc00c04 	addi	r23,sp,48
1001d304:	0000f106 	br	1001d6cc <___vfiprintf_internal_r+0x7a4>
1001d308:	63002014 	ori	r12,r12,128
1001d30c:	e0800007 	ldb	r2,0(fp)
1001d310:	003f5406 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d314:	e0800007 	ldb	r2,0(fp)
1001d318:	e1000044 	addi	r4,fp,1
1001d31c:	10c00aa0 	cmpeqi	r3,r2,42
1001d320:	1803c01e 	bne	r3,zero,1001e224 <___vfiprintf_internal_r+0x12fc>
1001d324:	10fff404 	addi	r3,r2,-48
1001d328:	19c002b0 	cmpltui	r7,r3,10
1001d32c:	2039883a 	mov	fp,r4
1001d330:	0013883a 	mov	r9,zero
1001d334:	383f4c26 	beq	r7,zero,1001d068 <___vfiprintf_internal_r+0x140>
1001d338:	e7000044 	addi	fp,fp,1
1001d33c:	4a4002a4 	muli	r9,r9,10
1001d340:	e0bfffc7 	ldb	r2,-1(fp)
1001d344:	48d3883a 	add	r9,r9,r3
1001d348:	10fff404 	addi	r3,r2,-48
1001d34c:	190002b0 	cmpltui	r4,r3,10
1001d350:	203ff91e 	bne	r4,zero,1001d338 <___vfiprintf_internal_r+0x410>
1001d354:	003f4406 	br	1001d068 <___vfiprintf_internal_r+0x140>
1001d358:	e0800003 	ldbu	r2,0(fp)
1001d35c:	10803fcc 	andi	r2,r2,255
1001d360:	1080201c 	xori	r2,r2,128
1001d364:	63000114 	ori	r12,r12,4
1001d368:	10bfe004 	addi	r2,r2,-128
1001d36c:	003f3d06 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d370:	01400044 	movi	r5,1
1001d374:	01800ac4 	movi	r6,43
1001d378:	e0800007 	ldb	r2,0(fp)
1001d37c:	003f3906 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d380:	d8800317 	ldw	r2,12(sp)
1001d384:	14000017 	ldw	r16,0(r2)
1001d388:	15c00104 	addi	r23,r2,4
1001d38c:	e0800003 	ldbu	r2,0(fp)
1001d390:	80031416 	blt	r16,zero,1001dfe4 <___vfiprintf_internal_r+0x10bc>
1001d394:	ddc00315 	stw	r23,12(sp)
1001d398:	10803fcc 	andi	r2,r2,255
1001d39c:	1080201c 	xori	r2,r2,128
1001d3a0:	10bfe004 	addi	r2,r2,-128
1001d3a4:	003f2f06 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d3a8:	63000054 	ori	r12,r12,1
1001d3ac:	e0800007 	ldb	r2,0(fp)
1001d3b0:	003f2c06 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d3b4:	30c03fcc 	andi	r3,r6,255
1001d3b8:	18c0201c 	xori	r3,r3,128
1001d3bc:	18ffe004 	addi	r3,r3,-128
1001d3c0:	e0800003 	ldbu	r2,0(fp)
1001d3c4:	183ff41e 	bne	r3,zero,1001d398 <___vfiprintf_internal_r+0x470>
1001d3c8:	10803fcc 	andi	r2,r2,255
1001d3cc:	1080201c 	xori	r2,r2,128
1001d3d0:	01400044 	movi	r5,1
1001d3d4:	01800804 	movi	r6,32
1001d3d8:	10bfe004 	addi	r2,r2,-128
1001d3dc:	003f2106 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d3e0:	29403fcc 	andi	r5,r5,255
1001d3e4:	2803741e 	bne	r5,zero,1001e1b8 <___vfiprintf_internal_r+0x1290>
1001d3e8:	00c400b4 	movhi	r3,4098
1001d3ec:	18d6d104 	addi	r3,r3,23364
1001d3f0:	d8c00415 	stw	r3,16(sp)
1001d3f4:	60c0080c 	andi	r3,r12,32
1001d3f8:	18004b26 	beq	r3,zero,1001d528 <___vfiprintf_internal_r+0x600>
1001d3fc:	d8c00317 	ldw	r3,12(sp)
1001d400:	1d400017 	ldw	r21,0(r3)
1001d404:	1d800117 	ldw	r22,4(r3)
1001d408:	18c00204 	addi	r3,r3,8
1001d40c:	d8c00315 	stw	r3,12(sp)
1001d410:	60c0004c 	andi	r3,r12,1
1001d414:	18000226 	beq	r3,zero,1001d420 <___vfiprintf_internal_r+0x4f8>
1001d418:	ad86b03a 	or	r3,r21,r22
1001d41c:	1802df1e 	bne	r3,zero,1001df9c <___vfiprintf_internal_r+0x1074>
1001d420:	00800084 	movi	r2,2
1001d424:	00001906 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001d428:	e0800007 	ldb	r2,0(fp)
1001d42c:	10c01b18 	cmpnei	r3,r2,108
1001d430:	18033026 	beq	r3,zero,1001e0f4 <___vfiprintf_internal_r+0x11cc>
1001d434:	63000414 	ori	r12,r12,16
1001d438:	003f0a06 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d43c:	63001014 	ori	r12,r12,64
1001d440:	e0800007 	ldb	r2,0(fp)
1001d444:	003f0706 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d448:	63000814 	ori	r12,r12,32
1001d44c:	e0800007 	ldb	r2,0(fp)
1001d450:	003f0406 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001d454:	d8c00317 	ldw	r3,12(sp)
1001d458:	00800c04 	movi	r2,48
1001d45c:	d8800885 	stb	r2,34(sp)
1001d460:	00801e04 	movi	r2,120
1001d464:	010400b4 	movhi	r4,4098
1001d468:	d88008c5 	stb	r2,35(sp)
1001d46c:	1d400017 	ldw	r21,0(r3)
1001d470:	18800104 	addi	r2,r3,4
1001d474:	d8800315 	stw	r2,12(sp)
1001d478:	2096d104 	addi	r2,r4,23364
1001d47c:	d8800415 	stw	r2,16(sp)
1001d480:	002d883a 	mov	r22,zero
1001d484:	63000094 	ori	r12,r12,2
1001d488:	00800084 	movi	r2,2
1001d48c:	d8000845 	stb	zero,33(sp)
1001d490:	48ffffe0 	cmpeqi	r3,r9,-1
1001d494:	001b883a 	mov	r13,zero
1001d498:	18014c1e 	bne	r3,zero,1001d9cc <___vfiprintf_internal_r+0xaa4>
1001d49c:	053fdfc4 	movi	r20,-129
1001d4a0:	ad86b03a 	or	r3,r21,r22
1001d4a4:	6528703a 	and	r20,r12,r20
1001d4a8:	1802411e 	bne	r3,zero,1001ddb0 <___vfiprintf_internal_r+0xe88>
1001d4ac:	48030d1e 	bne	r9,zero,1001e0e4 <___vfiprintf_internal_r+0x11bc>
1001d4b0:	1000791e 	bne	r2,zero,1001d698 <___vfiprintf_internal_r+0x770>
1001d4b4:	6580004c 	andi	r22,r12,1
1001d4b8:	b002b126 	beq	r22,zero,1001df80 <___vfiprintf_internal_r+0x1058>
1001d4bc:	00800c04 	movi	r2,48
1001d4c0:	d88015c5 	stb	r2,87(sp)
1001d4c4:	ddc015c4 	addi	r23,sp,87
1001d4c8:	00017e06 	br	1001dac4 <___vfiprintf_internal_r+0xb9c>
1001d4cc:	29403fcc 	andi	r5,r5,255
1001d4d0:	2803461e 	bne	r5,zero,1001e1ec <___vfiprintf_internal_r+0x12c4>
1001d4d4:	6080080c 	andi	r2,r12,32
1001d4d8:	10016b1e 	bne	r2,zero,1001da88 <___vfiprintf_internal_r+0xb60>
1001d4dc:	d8800317 	ldw	r2,12(sp)
1001d4e0:	60c0040c 	andi	r3,r12,16
1001d4e4:	15400017 	ldw	r21,0(r2)
1001d4e8:	10800104 	addi	r2,r2,4
1001d4ec:	18010d1e 	bne	r3,zero,1001d924 <___vfiprintf_internal_r+0x9fc>
1001d4f0:	60c0100c 	andi	r3,r12,64
1001d4f4:	18031326 	beq	r3,zero,1001e144 <___vfiprintf_internal_r+0x121c>
1001d4f8:	d8800315 	stw	r2,12(sp)
1001d4fc:	ad7fffcc 	andi	r21,r21,65535
1001d500:	002d883a 	mov	r22,zero
1001d504:	0005883a 	mov	r2,zero
1001d508:	003fe006 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001d50c:	29403fcc 	andi	r5,r5,255
1001d510:	2803251e 	bne	r5,zero,1001e1a8 <___vfiprintf_internal_r+0x1280>
1001d514:	00c400b4 	movhi	r3,4098
1001d518:	18d6cc04 	addi	r3,r3,23344
1001d51c:	d8c00415 	stw	r3,16(sp)
1001d520:	60c0080c 	andi	r3,r12,32
1001d524:	183fb51e 	bne	r3,zero,1001d3fc <___vfiprintf_internal_r+0x4d4>
1001d528:	d9000317 	ldw	r4,12(sp)
1001d52c:	60c0040c 	andi	r3,r12,16
1001d530:	25400017 	ldw	r21,0(r4)
1001d534:	21000104 	addi	r4,r4,4
1001d538:	d9000315 	stw	r4,12(sp)
1001d53c:	18026e1e 	bne	r3,zero,1001def8 <___vfiprintf_internal_r+0xfd0>
1001d540:	60c0100c 	andi	r3,r12,64
1001d544:	18026c26 	beq	r3,zero,1001def8 <___vfiprintf_internal_r+0xfd0>
1001d548:	ad7fffcc 	andi	r21,r21,65535
1001d54c:	002d883a 	mov	r22,zero
1001d550:	003faf06 	br	1001d410 <___vfiprintf_internal_r+0x4e8>
1001d554:	29403fcc 	andi	r5,r5,255
1001d558:	2803151e 	bne	r5,zero,1001e1b0 <___vfiprintf_internal_r+0x1288>
1001d55c:	6080080c 	andi	r2,r12,32
1001d560:	10013b1e 	bne	r2,zero,1001da50 <___vfiprintf_internal_r+0xb28>
1001d564:	d8800317 	ldw	r2,12(sp)
1001d568:	60c0040c 	andi	r3,r12,16
1001d56c:	15400017 	ldw	r21,0(r2)
1001d570:	10800104 	addi	r2,r2,4
1001d574:	1800f81e 	bne	r3,zero,1001d958 <___vfiprintf_internal_r+0xa30>
1001d578:	60c0100c 	andi	r3,r12,64
1001d57c:	1802ed26 	beq	r3,zero,1001e134 <___vfiprintf_internal_r+0x120c>
1001d580:	d8800315 	stw	r2,12(sp)
1001d584:	ad7fffcc 	andi	r21,r21,65535
1001d588:	002d883a 	mov	r22,zero
1001d58c:	00800044 	movi	r2,1
1001d590:	003fbe06 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001d594:	d8800317 	ldw	r2,12(sp)
1001d598:	d8000845 	stb	zero,33(sp)
1001d59c:	15c00017 	ldw	r23,0(r2)
1001d5a0:	15000104 	addi	r20,r2,4
1001d5a4:	b802da26 	beq	r23,zero,1001e110 <___vfiprintf_internal_r+0x11e8>
1001d5a8:	48bfffe0 	cmpeqi	r2,r9,-1
1001d5ac:	1002901e 	bne	r2,zero,1001dff0 <___vfiprintf_internal_r+0x10c8>
1001d5b0:	480d883a 	mov	r6,r9
1001d5b4:	000b883a 	mov	r5,zero
1001d5b8:	b809883a 	mov	r4,r23
1001d5bc:	da000315 	stw	r8,12(sp)
1001d5c0:	db000215 	stw	r12,8(sp)
1001d5c4:	da400115 	stw	r9,4(sp)
1001d5c8:	00156840 	call	10015684 <memchr>
1001d5cc:	da400117 	ldw	r9,4(sp)
1001d5d0:	db000217 	ldw	r12,8(sp)
1001d5d4:	da000317 	ldw	r8,12(sp)
1001d5d8:	1002ef26 	beq	r2,zero,1001e198 <___vfiprintf_internal_r+0x1270>
1001d5dc:	15edc83a 	sub	r22,r2,r23
1001d5e0:	b02b883a 	mov	r21,r22
1001d5e4:	b000010e 	bge	r22,zero,1001d5ec <___vfiprintf_internal_r+0x6c4>
1001d5e8:	002b883a 	mov	r21,zero
1001d5ec:	dd000315 	stw	r20,12(sp)
1001d5f0:	00003606 	br	1001d6cc <___vfiprintf_internal_r+0x7a4>
1001d5f4:	29403fcc 	andi	r5,r5,255
1001d5f8:	2802fa1e 	bne	r5,zero,1001e1e4 <___vfiprintf_internal_r+0x12bc>
1001d5fc:	d9000317 	ldw	r4,12(sp)
1001d600:	6080080c 	andi	r2,r12,32
1001d604:	20c00104 	addi	r3,r4,4
1001d608:	10026a1e 	bne	r2,zero,1001dfb4 <___vfiprintf_internal_r+0x108c>
1001d60c:	6080040c 	andi	r2,r12,16
1001d610:	1002891e 	bne	r2,zero,1001e038 <___vfiprintf_internal_r+0x1110>
1001d614:	6300100c 	andi	r12,r12,64
1001d618:	60028726 	beq	r12,zero,1001e038 <___vfiprintf_internal_r+0x1110>
1001d61c:	d8800317 	ldw	r2,12(sp)
1001d620:	d8c00315 	stw	r3,12(sp)
1001d624:	d8c00017 	ldw	r3,0(sp)
1001d628:	10800017 	ldw	r2,0(r2)
1001d62c:	10c0000d 	sth	r3,0(r2)
1001d630:	003e6606 	br	1001cfcc <___vfiprintf_internal_r+0xa4>
1001d634:	29403fcc 	andi	r5,r5,255
1001d638:	2802e81e 	bne	r5,zero,1001e1dc <___vfiprintf_internal_r+0x12b4>
1001d63c:	6080080c 	andi	r2,r12,32
1001d640:	10010a1e 	bne	r2,zero,1001da6c <___vfiprintf_internal_r+0xb44>
1001d644:	d8800317 	ldw	r2,12(sp)
1001d648:	60c0040c 	andi	r3,r12,16
1001d64c:	10800104 	addi	r2,r2,4
1001d650:	1800ce1e 	bne	r3,zero,1001d98c <___vfiprintf_internal_r+0xa64>
1001d654:	60c0100c 	andi	r3,r12,64
1001d658:	1800cc26 	beq	r3,zero,1001d98c <___vfiprintf_internal_r+0xa64>
1001d65c:	d8c00317 	ldw	r3,12(sp)
1001d660:	d8800315 	stw	r2,12(sp)
1001d664:	1d40000f 	ldh	r21,0(r3)
1001d668:	a82dd7fa 	srai	r22,r21,31
1001d66c:	b005883a 	mov	r2,r22
1001d670:	1000cc16 	blt	r2,zero,1001d9a4 <___vfiprintf_internal_r+0xa7c>
1001d674:	48bfffd8 	cmpnei	r2,r9,-1
1001d678:	db400843 	ldbu	r13,33(sp)
1001d67c:	10010926 	beq	r2,zero,1001daa4 <___vfiprintf_internal_r+0xb7c>
1001d680:	00ffdfc4 	movi	r3,-129
1001d684:	ad84b03a 	or	r2,r21,r22
1001d688:	60d8703a 	and	r12,r12,r3
1001d68c:	1001051e 	bne	r2,zero,1001daa4 <___vfiprintf_internal_r+0xb7c>
1001d690:	4801071e 	bne	r9,zero,1001dab0 <___vfiprintf_internal_r+0xb88>
1001d694:	6029883a 	mov	r20,r12
1001d698:	0013883a 	mov	r9,zero
1001d69c:	002d883a 	mov	r22,zero
1001d6a0:	882f883a 	mov	r23,r17
1001d6a4:	00010706 	br	1001dac4 <___vfiprintf_internal_r+0xb9c>
1001d6a8:	d8c00317 	ldw	r3,12(sp)
1001d6ac:	d8000845 	stb	zero,33(sp)
1001d6b0:	05400044 	movi	r21,1
1001d6b4:	18800017 	ldw	r2,0(r3)
1001d6b8:	18c00104 	addi	r3,r3,4
1001d6bc:	d8c00315 	stw	r3,12(sp)
1001d6c0:	d8800c05 	stb	r2,48(sp)
1001d6c4:	05800044 	movi	r22,1
1001d6c8:	ddc00c04 	addi	r23,sp,48
1001d6cc:	6029883a 	mov	r20,r12
1001d6d0:	0013883a 	mov	r9,zero
1001d6d4:	a340008c 	andi	r13,r20,2
1001d6d8:	68000126 	beq	r13,zero,1001d6e0 <___vfiprintf_internal_r+0x7b8>
1001d6dc:	ad400084 	addi	r21,r21,2
1001d6e0:	d9000a17 	ldw	r4,40(sp)
1001d6e4:	a300210c 	andi	r12,r20,132
1001d6e8:	d8800b17 	ldw	r2,44(sp)
1001d6ec:	21800044 	addi	r6,r4,1
1001d6f0:	300b883a 	mov	r5,r6
1001d6f4:	6000021e 	bne	r12,zero,1001d700 <___vfiprintf_internal_r+0x7d8>
1001d6f8:	8547c83a 	sub	r3,r16,r21
1001d6fc:	00c1ae16 	blt	zero,r3,1001ddb8 <___vfiprintf_internal_r+0xe90>
1001d700:	d9800847 	ldb	r6,33(sp)
1001d704:	40c00204 	addi	r3,r8,8
1001d708:	30000d26 	beq	r6,zero,1001d740 <___vfiprintf_internal_r+0x818>
1001d70c:	d9000844 	addi	r4,sp,33
1001d710:	10800044 	addi	r2,r2,1
1001d714:	41000015 	stw	r4,0(r8)
1001d718:	01000044 	movi	r4,1
1001d71c:	41000115 	stw	r4,4(r8)
1001d720:	d8800b15 	stw	r2,44(sp)
1001d724:	d9400a15 	stw	r5,40(sp)
1001d728:	29000208 	cmpgei	r4,r5,8
1001d72c:	2001831e 	bne	r4,zero,1001dd3c <___vfiprintf_internal_r+0xe14>
1001d730:	2809883a 	mov	r4,r5
1001d734:	1811883a 	mov	r8,r3
1001d738:	29400044 	addi	r5,r5,1
1001d73c:	18c00204 	addi	r3,r3,8
1001d740:	68001826 	beq	r13,zero,1001d7a4 <___vfiprintf_internal_r+0x87c>
1001d744:	d9000884 	addi	r4,sp,34
1001d748:	10800084 	addi	r2,r2,2
1001d74c:	41000015 	stw	r4,0(r8)
1001d750:	01000084 	movi	r4,2
1001d754:	41000115 	stw	r4,4(r8)
1001d758:	d8800b15 	stw	r2,44(sp)
1001d75c:	d9400a15 	stw	r5,40(sp)
1001d760:	29000208 	cmpgei	r4,r5,8
1001d764:	20018d26 	beq	r4,zero,1001dd9c <___vfiprintf_internal_r+0xe74>
1001d768:	1001ed26 	beq	r2,zero,1001df20 <___vfiprintf_internal_r+0xff8>
1001d76c:	d9800904 	addi	r6,sp,36
1001d770:	900b883a 	mov	r5,r18
1001d774:	9809883a 	mov	r4,r19
1001d778:	da400215 	stw	r9,8(sp)
1001d77c:	db000115 	stw	r12,4(sp)
1001d780:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d784:	103ebb1e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d788:	d9000a17 	ldw	r4,40(sp)
1001d78c:	d8800b17 	ldw	r2,44(sp)
1001d790:	da400217 	ldw	r9,8(sp)
1001d794:	db000117 	ldw	r12,4(sp)
1001d798:	d8c01804 	addi	r3,sp,96
1001d79c:	21400044 	addi	r5,r4,1
1001d7a0:	8811883a 	mov	r8,r17
1001d7a4:	63002018 	cmpnei	r12,r12,128
1001d7a8:	6000e326 	beq	r12,zero,1001db38 <___vfiprintf_internal_r+0xc10>
1001d7ac:	4d93c83a 	sub	r9,r9,r22
1001d7b0:	02412216 	blt	zero,r9,1001dc3c <___vfiprintf_internal_r+0xd14>
1001d7b4:	b085883a 	add	r2,r22,r2
1001d7b8:	d9400a15 	stw	r5,40(sp)
1001d7bc:	45c00015 	stw	r23,0(r8)
1001d7c0:	45800115 	stw	r22,4(r8)
1001d7c4:	d8800b15 	stw	r2,44(sp)
1001d7c8:	29400210 	cmplti	r5,r5,8
1001d7cc:	2800081e 	bne	r5,zero,1001d7f0 <___vfiprintf_internal_r+0x8c8>
1001d7d0:	10001426 	beq	r2,zero,1001d824 <___vfiprintf_internal_r+0x8fc>
1001d7d4:	d9800904 	addi	r6,sp,36
1001d7d8:	900b883a 	mov	r5,r18
1001d7dc:	9809883a 	mov	r4,r19
1001d7e0:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d7e4:	103ea31e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d7e8:	d8800b17 	ldw	r2,44(sp)
1001d7ec:	8807883a 	mov	r3,r17
1001d7f0:	a500010c 	andi	r20,r20,4
1001d7f4:	a0000226 	beq	r20,zero,1001d800 <___vfiprintf_internal_r+0x8d8>
1001d7f8:	8569c83a 	sub	r20,r16,r21
1001d7fc:	05000f16 	blt	zero,r20,1001d83c <___vfiprintf_internal_r+0x914>
1001d800:	8540010e 	bge	r16,r21,1001d808 <___vfiprintf_internal_r+0x8e0>
1001d804:	a821883a 	mov	r16,r21
1001d808:	d8c00017 	ldw	r3,0(sp)
1001d80c:	1c07883a 	add	r3,r3,r16
1001d810:	d8c00015 	stw	r3,0(sp)
1001d814:	10013f1e 	bne	r2,zero,1001dd14 <___vfiprintf_internal_r+0xdec>
1001d818:	d8000a15 	stw	zero,40(sp)
1001d81c:	8811883a 	mov	r8,r17
1001d820:	003dea06 	br	1001cfcc <___vfiprintf_internal_r+0xa4>
1001d824:	d8000a15 	stw	zero,40(sp)
1001d828:	a500010c 	andi	r20,r20,4
1001d82c:	a0019d26 	beq	r20,zero,1001dea4 <___vfiprintf_internal_r+0xf7c>
1001d830:	8569c83a 	sub	r20,r16,r21
1001d834:	05019b0e 	bge	zero,r20,1001dea4 <___vfiprintf_internal_r+0xf7c>
1001d838:	8807883a 	mov	r3,r17
1001d83c:	a1000450 	cmplti	r4,r20,17
1001d840:	01c400b4 	movhi	r7,4098
1001d844:	d9400a17 	ldw	r5,40(sp)
1001d848:	20026c1e 	bne	r4,zero,1001e1fc <___vfiprintf_internal_r+0x12d4>
1001d84c:	39d7d204 	addi	r7,r7,24392
1001d850:	05800404 	movi	r22,16
1001d854:	00000606 	br	1001d870 <___vfiprintf_internal_r+0x948>
1001d858:	29800084 	addi	r6,r5,2
1001d85c:	18c00204 	addi	r3,r3,8
1001d860:	200b883a 	mov	r5,r4
1001d864:	a53ffc04 	addi	r20,r20,-16
1001d868:	a1000448 	cmpgei	r4,r20,17
1001d86c:	20001726 	beq	r4,zero,1001d8cc <___vfiprintf_internal_r+0x9a4>
1001d870:	29000044 	addi	r4,r5,1
1001d874:	10800404 	addi	r2,r2,16
1001d878:	19c00015 	stw	r7,0(r3)
1001d87c:	1d800115 	stw	r22,4(r3)
1001d880:	d8800b15 	stw	r2,44(sp)
1001d884:	d9000a15 	stw	r4,40(sp)
1001d888:	21800208 	cmpgei	r6,r4,8
1001d88c:	303ff226 	beq	r6,zero,1001d858 <___vfiprintf_internal_r+0x930>
1001d890:	d9800904 	addi	r6,sp,36
1001d894:	900b883a 	mov	r5,r18
1001d898:	9809883a 	mov	r4,r19
1001d89c:	1000a226 	beq	r2,zero,1001db28 <___vfiprintf_internal_r+0xc00>
1001d8a0:	d9c00115 	stw	r7,4(sp)
1001d8a4:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d8a8:	103e721e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d8ac:	d9400a17 	ldw	r5,40(sp)
1001d8b0:	a53ffc04 	addi	r20,r20,-16
1001d8b4:	a1000448 	cmpgei	r4,r20,17
1001d8b8:	d8800b17 	ldw	r2,44(sp)
1001d8bc:	8807883a 	mov	r3,r17
1001d8c0:	29800044 	addi	r6,r5,1
1001d8c4:	d9c00117 	ldw	r7,4(sp)
1001d8c8:	203fe91e 	bne	r4,zero,1001d870 <___vfiprintf_internal_r+0x948>
1001d8cc:	1505883a 	add	r2,r2,r20
1001d8d0:	d9800a15 	stw	r6,40(sp)
1001d8d4:	19c00015 	stw	r7,0(r3)
1001d8d8:	1d000115 	stw	r20,4(r3)
1001d8dc:	d8800b15 	stw	r2,44(sp)
1001d8e0:	31800210 	cmplti	r6,r6,8
1001d8e4:	303fc61e 	bne	r6,zero,1001d800 <___vfiprintf_internal_r+0x8d8>
1001d8e8:	10016e26 	beq	r2,zero,1001dea4 <___vfiprintf_internal_r+0xf7c>
1001d8ec:	d9800904 	addi	r6,sp,36
1001d8f0:	900b883a 	mov	r5,r18
1001d8f4:	9809883a 	mov	r4,r19
1001d8f8:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001d8fc:	103e5d1e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001d900:	d8800b17 	ldw	r2,44(sp)
1001d904:	003fbe06 	br	1001d800 <___vfiprintf_internal_r+0x8d8>
1001d908:	29403fcc 	andi	r5,r5,255
1001d90c:	28022c1e 	bne	r5,zero,1001e1c0 <___vfiprintf_internal_r+0x1298>
1001d910:	6080080c 	andi	r2,r12,32
1001d914:	63000414 	ori	r12,r12,16
1001d918:	10005b1e 	bne	r2,zero,1001da88 <___vfiprintf_internal_r+0xb60>
1001d91c:	d8800317 	ldw	r2,12(sp)
1001d920:	10800104 	addi	r2,r2,4
1001d924:	d8c00317 	ldw	r3,12(sp)
1001d928:	002d883a 	mov	r22,zero
1001d92c:	d8800315 	stw	r2,12(sp)
1001d930:	1d400017 	ldw	r21,0(r3)
1001d934:	0005883a 	mov	r2,zero
1001d938:	003ed406 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001d93c:	29403fcc 	andi	r5,r5,255
1001d940:	2802211e 	bne	r5,zero,1001e1c8 <___vfiprintf_internal_r+0x12a0>
1001d944:	6080080c 	andi	r2,r12,32
1001d948:	63000414 	ori	r12,r12,16
1001d94c:	1000401e 	bne	r2,zero,1001da50 <___vfiprintf_internal_r+0xb28>
1001d950:	d8800317 	ldw	r2,12(sp)
1001d954:	10800104 	addi	r2,r2,4
1001d958:	d8c00317 	ldw	r3,12(sp)
1001d95c:	002d883a 	mov	r22,zero
1001d960:	d8800315 	stw	r2,12(sp)
1001d964:	1d400017 	ldw	r21,0(r3)
1001d968:	00800044 	movi	r2,1
1001d96c:	003ec706 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001d970:	29403fcc 	andi	r5,r5,255
1001d974:	28021f1e 	bne	r5,zero,1001e1f4 <___vfiprintf_internal_r+0x12cc>
1001d978:	6080080c 	andi	r2,r12,32
1001d97c:	63000414 	ori	r12,r12,16
1001d980:	10003a1e 	bne	r2,zero,1001da6c <___vfiprintf_internal_r+0xb44>
1001d984:	d8800317 	ldw	r2,12(sp)
1001d988:	10800104 	addi	r2,r2,4
1001d98c:	d8c00317 	ldw	r3,12(sp)
1001d990:	1d400017 	ldw	r21,0(r3)
1001d994:	d8800315 	stw	r2,12(sp)
1001d998:	a82dd7fa 	srai	r22,r21,31
1001d99c:	b005883a 	mov	r2,r22
1001d9a0:	103f340e 	bge	r2,zero,1001d674 <___vfiprintf_internal_r+0x74c>
1001d9a4:	056bc83a 	sub	r21,zero,r21
1001d9a8:	a804c03a 	cmpne	r2,r21,zero
1001d9ac:	05adc83a 	sub	r22,zero,r22
1001d9b0:	b0adc83a 	sub	r22,r22,r2
1001d9b4:	00800b44 	movi	r2,45
1001d9b8:	d8800845 	stb	r2,33(sp)
1001d9bc:	48ffffe0 	cmpeqi	r3,r9,-1
1001d9c0:	03400b44 	movi	r13,45
1001d9c4:	00800044 	movi	r2,1
1001d9c8:	183eb426 	beq	r3,zero,1001d49c <___vfiprintf_internal_r+0x574>
1001d9cc:	10c00060 	cmpeqi	r3,r2,1
1001d9d0:	1800341e 	bne	r3,zero,1001daa4 <___vfiprintf_internal_r+0xb7c>
1001d9d4:	108000a0 	cmpeqi	r2,r2,2
1001d9d8:	1000431e 	bne	r2,zero,1001dae8 <___vfiprintf_internal_r+0xbc0>
1001d9dc:	8807883a 	mov	r3,r17
1001d9e0:	00000106 	br	1001d9e8 <___vfiprintf_internal_r+0xac0>
1001d9e4:	b807883a 	mov	r3,r23
1001d9e8:	a808d0fa 	srli	r4,r21,3
1001d9ec:	b00a977a 	slli	r5,r22,29
1001d9f0:	b02cd0fa 	srli	r22,r22,3
1001d9f4:	ad4001cc 	andi	r21,r21,7
1001d9f8:	a8800c04 	addi	r2,r21,48
1001d9fc:	292ab03a 	or	r21,r5,r4
1001da00:	18bfffc5 	stb	r2,-1(r3)
1001da04:	ad88b03a 	or	r4,r21,r22
1001da08:	1dffffc4 	addi	r23,r3,-1
1001da0c:	203ff51e 	bne	r4,zero,1001d9e4 <___vfiprintf_internal_r+0xabc>
1001da10:	6100004c 	andi	r4,r12,1
1001da14:	20004126 	beq	r4,zero,1001db1c <___vfiprintf_internal_r+0xbf4>
1001da18:	10803fcc 	andi	r2,r2,255
1001da1c:	1080201c 	xori	r2,r2,128
1001da20:	10bfe004 	addi	r2,r2,-128
1001da24:	10800c18 	cmpnei	r2,r2,48
1001da28:	10003c26 	beq	r2,zero,1001db1c <___vfiprintf_internal_r+0xbf4>
1001da2c:	18ffff84 	addi	r3,r3,-2
1001da30:	00800c04 	movi	r2,48
1001da34:	b8bfffc5 	stb	r2,-1(r23)
1001da38:	88edc83a 	sub	r22,r17,r3
1001da3c:	6029883a 	mov	r20,r12
1001da40:	182f883a 	mov	r23,r3
1001da44:	00001f06 	br	1001dac4 <___vfiprintf_internal_r+0xb9c>
1001da48:	001aaa80 	call	1001aaa8 <__sinit>
1001da4c:	003d4806 	br	1001cf70 <___vfiprintf_internal_r+0x48>
1001da50:	d8c00317 	ldw	r3,12(sp)
1001da54:	00800044 	movi	r2,1
1001da58:	1d400017 	ldw	r21,0(r3)
1001da5c:	1d800117 	ldw	r22,4(r3)
1001da60:	18c00204 	addi	r3,r3,8
1001da64:	d8c00315 	stw	r3,12(sp)
1001da68:	003e8806 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001da6c:	d8c00317 	ldw	r3,12(sp)
1001da70:	18800117 	ldw	r2,4(r3)
1001da74:	1d400017 	ldw	r21,0(r3)
1001da78:	18c00204 	addi	r3,r3,8
1001da7c:	d8c00315 	stw	r3,12(sp)
1001da80:	102d883a 	mov	r22,r2
1001da84:	003efa06 	br	1001d670 <___vfiprintf_internal_r+0x748>
1001da88:	d8c00317 	ldw	r3,12(sp)
1001da8c:	0005883a 	mov	r2,zero
1001da90:	1d400017 	ldw	r21,0(r3)
1001da94:	1d800117 	ldw	r22,4(r3)
1001da98:	18c00204 	addi	r3,r3,8
1001da9c:	d8c00315 	stw	r3,12(sp)
1001daa0:	003e7a06 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001daa4:	b0016a1e 	bne	r22,zero,1001e050 <___vfiprintf_internal_r+0x1128>
1001daa8:	a88002a8 	cmpgeui	r2,r21,10
1001daac:	1001681e 	bne	r2,zero,1001e050 <___vfiprintf_internal_r+0x1128>
1001dab0:	ad400c04 	addi	r21,r21,48
1001dab4:	dd4015c5 	stb	r21,87(sp)
1001dab8:	6029883a 	mov	r20,r12
1001dabc:	05800044 	movi	r22,1
1001dac0:	ddc015c4 	addi	r23,sp,87
1001dac4:	482b883a 	mov	r21,r9
1001dac8:	4d80010e 	bge	r9,r22,1001dad0 <___vfiprintf_internal_r+0xba8>
1001dacc:	b02b883a 	mov	r21,r22
1001dad0:	6b403fcc 	andi	r13,r13,255
1001dad4:	6b40201c 	xori	r13,r13,128
1001dad8:	6b7fe004 	addi	r13,r13,-128
1001dadc:	683efd26 	beq	r13,zero,1001d6d4 <___vfiprintf_internal_r+0x7ac>
1001dae0:	ad400044 	addi	r21,r21,1
1001dae4:	003efb06 	br	1001d6d4 <___vfiprintf_internal_r+0x7ac>
1001dae8:	882f883a 	mov	r23,r17
1001daec:	d9000417 	ldw	r4,16(sp)
1001daf0:	a88003cc 	andi	r2,r21,15
1001daf4:	b006973a 	slli	r3,r22,28
1001daf8:	2085883a 	add	r2,r4,r2
1001dafc:	a82ad13a 	srli	r21,r21,4
1001db00:	10800003 	ldbu	r2,0(r2)
1001db04:	b02cd13a 	srli	r22,r22,4
1001db08:	bdffffc4 	addi	r23,r23,-1
1001db0c:	1d6ab03a 	or	r21,r3,r21
1001db10:	b8800005 	stb	r2,0(r23)
1001db14:	ad84b03a 	or	r2,r21,r22
1001db18:	103ff41e 	bne	r2,zero,1001daec <___vfiprintf_internal_r+0xbc4>
1001db1c:	8dedc83a 	sub	r22,r17,r23
1001db20:	6029883a 	mov	r20,r12
1001db24:	003fe706 	br	1001dac4 <___vfiprintf_internal_r+0xb9c>
1001db28:	01800044 	movi	r6,1
1001db2c:	000b883a 	mov	r5,zero
1001db30:	8807883a 	mov	r3,r17
1001db34:	003f4b06 	br	1001d864 <___vfiprintf_internal_r+0x93c>
1001db38:	8559c83a 	sub	r12,r16,r21
1001db3c:	033f1b0e 	bge	zero,r12,1001d7ac <___vfiprintf_internal_r+0x884>
1001db40:	61800450 	cmplti	r6,r12,17
1001db44:	01c400b4 	movhi	r7,4098
1001db48:	3001af1e 	bne	r6,zero,1001e208 <___vfiprintf_internal_r+0x12e0>
1001db4c:	39d7ce04 	addi	r7,r7,24376
1001db50:	03400404 	movi	r13,16
1001db54:	00000606 	br	1001db70 <___vfiprintf_internal_r+0xc48>
1001db58:	21800084 	addi	r6,r4,2
1001db5c:	42000204 	addi	r8,r8,8
1001db60:	1809883a 	mov	r4,r3
1001db64:	633ffc04 	addi	r12,r12,-16
1001db68:	60c00448 	cmpgei	r3,r12,17
1001db6c:	18001c26 	beq	r3,zero,1001dbe0 <___vfiprintf_internal_r+0xcb8>
1001db70:	20c00044 	addi	r3,r4,1
1001db74:	10800404 	addi	r2,r2,16
1001db78:	41c00015 	stw	r7,0(r8)
1001db7c:	43400115 	stw	r13,4(r8)
1001db80:	d8800b15 	stw	r2,44(sp)
1001db84:	d8c00a15 	stw	r3,40(sp)
1001db88:	19400208 	cmpgei	r5,r3,8
1001db8c:	283ff226 	beq	r5,zero,1001db58 <___vfiprintf_internal_r+0xc30>
1001db90:	d9800904 	addi	r6,sp,36
1001db94:	900b883a 	mov	r5,r18
1001db98:	9809883a 	mov	r4,r19
1001db9c:	10006326 	beq	r2,zero,1001dd2c <___vfiprintf_internal_r+0xe04>
1001dba0:	d9c00515 	stw	r7,20(sp)
1001dba4:	db000215 	stw	r12,8(sp)
1001dba8:	da400115 	stw	r9,4(sp)
1001dbac:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001dbb0:	103db01e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001dbb4:	db000217 	ldw	r12,8(sp)
1001dbb8:	d9000a17 	ldw	r4,40(sp)
1001dbbc:	d8800b17 	ldw	r2,44(sp)
1001dbc0:	633ffc04 	addi	r12,r12,-16
1001dbc4:	60c00448 	cmpgei	r3,r12,17
1001dbc8:	8811883a 	mov	r8,r17
1001dbcc:	21800044 	addi	r6,r4,1
1001dbd0:	d9c00517 	ldw	r7,20(sp)
1001dbd4:	03400404 	movi	r13,16
1001dbd8:	da400117 	ldw	r9,4(sp)
1001dbdc:	183fe41e 	bne	r3,zero,1001db70 <___vfiprintf_internal_r+0xc48>
1001dbe0:	43400204 	addi	r13,r8,8
1001dbe4:	1305883a 	add	r2,r2,r12
1001dbe8:	41c00015 	stw	r7,0(r8)
1001dbec:	43000115 	stw	r12,4(r8)
1001dbf0:	d8800b15 	stw	r2,44(sp)
1001dbf4:	d9800a15 	stw	r6,40(sp)
1001dbf8:	30c00208 	cmpgei	r3,r6,8
1001dbfc:	1800e226 	beq	r3,zero,1001df88 <___vfiprintf_internal_r+0x1060>
1001dc00:	10015726 	beq	r2,zero,1001e160 <___vfiprintf_internal_r+0x1238>
1001dc04:	d9800904 	addi	r6,sp,36
1001dc08:	900b883a 	mov	r5,r18
1001dc0c:	9809883a 	mov	r4,r19
1001dc10:	da400115 	stw	r9,4(sp)
1001dc14:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001dc18:	103d961e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001dc1c:	da400117 	ldw	r9,4(sp)
1001dc20:	d9000a17 	ldw	r4,40(sp)
1001dc24:	d8800b17 	ldw	r2,44(sp)
1001dc28:	4d93c83a 	sub	r9,r9,r22
1001dc2c:	d8c01804 	addi	r3,sp,96
1001dc30:	21400044 	addi	r5,r4,1
1001dc34:	8811883a 	mov	r8,r17
1001dc38:	027ede0e 	bge	zero,r9,1001d7b4 <___vfiprintf_internal_r+0x88c>
1001dc3c:	49800450 	cmplti	r6,r9,17
1001dc40:	01c400b4 	movhi	r7,4098
1001dc44:	3001431e 	bne	r6,zero,1001e154 <___vfiprintf_internal_r+0x122c>
1001dc48:	39d7ce04 	addi	r7,r7,24376
1001dc4c:	03000404 	movi	r12,16
1001dc50:	00000606 	br	1001dc6c <___vfiprintf_internal_r+0xd44>
1001dc54:	21400084 	addi	r5,r4,2
1001dc58:	42000204 	addi	r8,r8,8
1001dc5c:	1809883a 	mov	r4,r3
1001dc60:	4a7ffc04 	addi	r9,r9,-16
1001dc64:	48c00448 	cmpgei	r3,r9,17
1001dc68:	18001a26 	beq	r3,zero,1001dcd4 <___vfiprintf_internal_r+0xdac>
1001dc6c:	20c00044 	addi	r3,r4,1
1001dc70:	10800404 	addi	r2,r2,16
1001dc74:	41c00015 	stw	r7,0(r8)
1001dc78:	43000115 	stw	r12,4(r8)
1001dc7c:	d8800b15 	stw	r2,44(sp)
1001dc80:	d8c00a15 	stw	r3,40(sp)
1001dc84:	19400208 	cmpgei	r5,r3,8
1001dc88:	283ff226 	beq	r5,zero,1001dc54 <___vfiprintf_internal_r+0xd2c>
1001dc8c:	d9800904 	addi	r6,sp,36
1001dc90:	900b883a 	mov	r5,r18
1001dc94:	9809883a 	mov	r4,r19
1001dc98:	10001a26 	beq	r2,zero,1001dd04 <___vfiprintf_internal_r+0xddc>
1001dc9c:	d9c00215 	stw	r7,8(sp)
1001dca0:	da400115 	stw	r9,4(sp)
1001dca4:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001dca8:	103d721e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001dcac:	da400117 	ldw	r9,4(sp)
1001dcb0:	d9000a17 	ldw	r4,40(sp)
1001dcb4:	d8800b17 	ldw	r2,44(sp)
1001dcb8:	4a7ffc04 	addi	r9,r9,-16
1001dcbc:	48c00448 	cmpgei	r3,r9,17
1001dcc0:	8811883a 	mov	r8,r17
1001dcc4:	21400044 	addi	r5,r4,1
1001dcc8:	d9c00217 	ldw	r7,8(sp)
1001dccc:	03000404 	movi	r12,16
1001dcd0:	183fe61e 	bne	r3,zero,1001dc6c <___vfiprintf_internal_r+0xd44>
1001dcd4:	41000204 	addi	r4,r8,8
1001dcd8:	1245883a 	add	r2,r2,r9
1001dcdc:	41c00015 	stw	r7,0(r8)
1001dce0:	42400115 	stw	r9,4(r8)
1001dce4:	d8800b15 	stw	r2,44(sp)
1001dce8:	d9400a15 	stw	r5,40(sp)
1001dcec:	28c00208 	cmpgei	r3,r5,8
1001dcf0:	1800721e 	bne	r3,zero,1001debc <___vfiprintf_internal_r+0xf94>
1001dcf4:	29400044 	addi	r5,r5,1
1001dcf8:	20c00204 	addi	r3,r4,8
1001dcfc:	2011883a 	mov	r8,r4
1001dd00:	003eac06 	br	1001d7b4 <___vfiprintf_internal_r+0x88c>
1001dd04:	01400044 	movi	r5,1
1001dd08:	0009883a 	mov	r4,zero
1001dd0c:	8811883a 	mov	r8,r17
1001dd10:	003fd306 	br	1001dc60 <___vfiprintf_internal_r+0xd38>
1001dd14:	d9800904 	addi	r6,sp,36
1001dd18:	900b883a 	mov	r5,r18
1001dd1c:	9809883a 	mov	r4,r19
1001dd20:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001dd24:	103ebc26 	beq	r2,zero,1001d818 <___vfiprintf_internal_r+0x8f0>
1001dd28:	003d5206 	br	1001d274 <___vfiprintf_internal_r+0x34c>
1001dd2c:	01800044 	movi	r6,1
1001dd30:	0009883a 	mov	r4,zero
1001dd34:	8811883a 	mov	r8,r17
1001dd38:	003f8a06 	br	1001db64 <___vfiprintf_internal_r+0xc3c>
1001dd3c:	10007026 	beq	r2,zero,1001df00 <___vfiprintf_internal_r+0xfd8>
1001dd40:	d9800904 	addi	r6,sp,36
1001dd44:	900b883a 	mov	r5,r18
1001dd48:	9809883a 	mov	r4,r19
1001dd4c:	da400515 	stw	r9,20(sp)
1001dd50:	db000215 	stw	r12,8(sp)
1001dd54:	db400115 	stw	r13,4(sp)
1001dd58:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001dd5c:	103d451e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001dd60:	d9000a17 	ldw	r4,40(sp)
1001dd64:	d8800b17 	ldw	r2,44(sp)
1001dd68:	d8c01804 	addi	r3,sp,96
1001dd6c:	21400044 	addi	r5,r4,1
1001dd70:	8811883a 	mov	r8,r17
1001dd74:	da400517 	ldw	r9,20(sp)
1001dd78:	db000217 	ldw	r12,8(sp)
1001dd7c:	db400117 	ldw	r13,4(sp)
1001dd80:	003e6f06 	br	1001d740 <___vfiprintf_internal_r+0x818>
1001dd84:	d8800884 	addi	r2,sp,34
1001dd88:	d8801615 	stw	r2,88(sp)
1001dd8c:	00800084 	movi	r2,2
1001dd90:	d8801715 	stw	r2,92(sp)
1001dd94:	d8c01804 	addi	r3,sp,96
1001dd98:	01400044 	movi	r5,1
1001dd9c:	1811883a 	mov	r8,r3
1001dda0:	2809883a 	mov	r4,r5
1001dda4:	21400044 	addi	r5,r4,1
1001dda8:	40c00204 	addi	r3,r8,8
1001ddac:	003e7d06 	br	1001d7a4 <___vfiprintf_internal_r+0x87c>
1001ddb0:	a019883a 	mov	r12,r20
1001ddb4:	003f0506 	br	1001d9cc <___vfiprintf_internal_r+0xaa4>
1001ddb8:	19400450 	cmplti	r5,r3,17
1001ddbc:	01c400b4 	movhi	r7,4098
1001ddc0:	2801031e 	bne	r5,zero,1001e1d0 <___vfiprintf_internal_r+0x12a8>
1001ddc4:	39d7d204 	addi	r7,r7,24392
1001ddc8:	03800404 	movi	r14,16
1001ddcc:	00000706 	br	1001ddec <___vfiprintf_internal_r+0xec4>
1001ddd0:	23c00084 	addi	r15,r4,2
1001ddd4:	42000204 	addi	r8,r8,8
1001ddd8:	3009883a 	mov	r4,r6
1001dddc:	18fffc04 	addi	r3,r3,-16
1001dde0:	19400448 	cmpgei	r5,r3,17
1001dde4:	28002026 	beq	r5,zero,1001de68 <___vfiprintf_internal_r+0xf40>
1001dde8:	21800044 	addi	r6,r4,1
1001ddec:	10800404 	addi	r2,r2,16
1001ddf0:	41c00015 	stw	r7,0(r8)
1001ddf4:	43800115 	stw	r14,4(r8)
1001ddf8:	d8800b15 	stw	r2,44(sp)
1001ddfc:	d9800a15 	stw	r6,40(sp)
1001de00:	31400208 	cmpgei	r5,r6,8
1001de04:	283ff226 	beq	r5,zero,1001ddd0 <___vfiprintf_internal_r+0xea8>
1001de08:	d9800904 	addi	r6,sp,36
1001de0c:	900b883a 	mov	r5,r18
1001de10:	9809883a 	mov	r4,r19
1001de14:	10001f26 	beq	r2,zero,1001de94 <___vfiprintf_internal_r+0xf6c>
1001de18:	d9c00715 	stw	r7,28(sp)
1001de1c:	d8c00615 	stw	r3,24(sp)
1001de20:	da400515 	stw	r9,20(sp)
1001de24:	db000215 	stw	r12,8(sp)
1001de28:	db400115 	stw	r13,4(sp)
1001de2c:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001de30:	103d101e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001de34:	d8c00617 	ldw	r3,24(sp)
1001de38:	d9000a17 	ldw	r4,40(sp)
1001de3c:	d8800b17 	ldw	r2,44(sp)
1001de40:	18fffc04 	addi	r3,r3,-16
1001de44:	19400448 	cmpgei	r5,r3,17
1001de48:	8811883a 	mov	r8,r17
1001de4c:	23c00044 	addi	r15,r4,1
1001de50:	d9c00717 	ldw	r7,28(sp)
1001de54:	03800404 	movi	r14,16
1001de58:	da400517 	ldw	r9,20(sp)
1001de5c:	db000217 	ldw	r12,8(sp)
1001de60:	db400117 	ldw	r13,4(sp)
1001de64:	283fe01e 	bne	r5,zero,1001dde8 <___vfiprintf_internal_r+0xec0>
1001de68:	10c5883a 	add	r2,r2,r3
1001de6c:	40c00115 	stw	r3,4(r8)
1001de70:	41c00015 	stw	r7,0(r8)
1001de74:	d8800b15 	stw	r2,44(sp)
1001de78:	dbc00a15 	stw	r15,40(sp)
1001de7c:	78c00208 	cmpgei	r3,r15,8
1001de80:	18002c1e 	bne	r3,zero,1001df34 <___vfiprintf_internal_r+0x100c>
1001de84:	42000204 	addi	r8,r8,8
1001de88:	79400044 	addi	r5,r15,1
1001de8c:	7809883a 	mov	r4,r15
1001de90:	003e1b06 	br	1001d700 <___vfiprintf_internal_r+0x7d8>
1001de94:	0009883a 	mov	r4,zero
1001de98:	03c00044 	movi	r15,1
1001de9c:	8811883a 	mov	r8,r17
1001dea0:	003fce06 	br	1001dddc <___vfiprintf_internal_r+0xeb4>
1001dea4:	8540010e 	bge	r16,r21,1001deac <___vfiprintf_internal_r+0xf84>
1001dea8:	a821883a 	mov	r16,r21
1001deac:	d8800017 	ldw	r2,0(sp)
1001deb0:	1405883a 	add	r2,r2,r16
1001deb4:	d8800015 	stw	r2,0(sp)
1001deb8:	003e5706 	br	1001d818 <___vfiprintf_internal_r+0x8f0>
1001debc:	10008126 	beq	r2,zero,1001e0c4 <___vfiprintf_internal_r+0x119c>
1001dec0:	d9800904 	addi	r6,sp,36
1001dec4:	900b883a 	mov	r5,r18
1001dec8:	9809883a 	mov	r4,r19
1001decc:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001ded0:	103ce81e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001ded4:	d9400a17 	ldw	r5,40(sp)
1001ded8:	d8800b17 	ldw	r2,44(sp)
1001dedc:	d8c01804 	addi	r3,sp,96
1001dee0:	29400044 	addi	r5,r5,1
1001dee4:	8811883a 	mov	r8,r17
1001dee8:	003e3206 	br	1001d7b4 <___vfiprintf_internal_r+0x88c>
1001deec:	d8000a15 	stw	zero,40(sp)
1001def0:	8811883a 	mov	r8,r17
1001def4:	003c4e06 	br	1001d030 <___vfiprintf_internal_r+0x108>
1001def8:	002d883a 	mov	r22,zero
1001defc:	003d4406 	br	1001d410 <___vfiprintf_internal_r+0x4e8>
1001df00:	68003326 	beq	r13,zero,1001dfd0 <___vfiprintf_internal_r+0x10a8>
1001df04:	d8800884 	addi	r2,sp,34
1001df08:	d8801615 	stw	r2,88(sp)
1001df0c:	00800084 	movi	r2,2
1001df10:	d8801715 	stw	r2,92(sp)
1001df14:	da001804 	addi	r8,sp,96
1001df18:	01000044 	movi	r4,1
1001df1c:	003fa106 	br	1001dda4 <___vfiprintf_internal_r+0xe7c>
1001df20:	d8c01804 	addi	r3,sp,96
1001df24:	01400044 	movi	r5,1
1001df28:	0009883a 	mov	r4,zero
1001df2c:	8811883a 	mov	r8,r17
1001df30:	003e1c06 	br	1001d7a4 <___vfiprintf_internal_r+0x87c>
1001df34:	10003826 	beq	r2,zero,1001e018 <___vfiprintf_internal_r+0x10f0>
1001df38:	d9800904 	addi	r6,sp,36
1001df3c:	900b883a 	mov	r5,r18
1001df40:	9809883a 	mov	r4,r19
1001df44:	da400515 	stw	r9,20(sp)
1001df48:	db000215 	stw	r12,8(sp)
1001df4c:	db400115 	stw	r13,4(sp)
1001df50:	001ce1c0 	call	1001ce1c <__sprint_r.part.0>
1001df54:	103cc71e 	bne	r2,zero,1001d274 <___vfiprintf_internal_r+0x34c>
1001df58:	d9000a17 	ldw	r4,40(sp)
1001df5c:	d8800b17 	ldw	r2,44(sp)
1001df60:	8811883a 	mov	r8,r17
1001df64:	21400044 	addi	r5,r4,1
1001df68:	da400517 	ldw	r9,20(sp)
1001df6c:	db000217 	ldw	r12,8(sp)
1001df70:	db400117 	ldw	r13,4(sp)
1001df74:	003de206 	br	1001d700 <___vfiprintf_internal_r+0x7d8>
1001df78:	e029883a 	mov	r20,fp
1001df7c:	003c3106 	br	1001d044 <___vfiprintf_internal_r+0x11c>
1001df80:	882f883a 	mov	r23,r17
1001df84:	003ecf06 	br	1001dac4 <___vfiprintf_internal_r+0xb9c>
1001df88:	31400044 	addi	r5,r6,1
1001df8c:	68c00204 	addi	r3,r13,8
1001df90:	3009883a 	mov	r4,r6
1001df94:	6811883a 	mov	r8,r13
1001df98:	003e0406 	br	1001d7ac <___vfiprintf_internal_r+0x884>
1001df9c:	00c00c04 	movi	r3,48
1001dfa0:	d88008c5 	stb	r2,35(sp)
1001dfa4:	d8c00885 	stb	r3,34(sp)
1001dfa8:	63000094 	ori	r12,r12,2
1001dfac:	00800084 	movi	r2,2
1001dfb0:	003d3606 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001dfb4:	d9400017 	ldw	r5,0(sp)
1001dfb8:	20800017 	ldw	r2,0(r4)
1001dfbc:	d8c00315 	stw	r3,12(sp)
1001dfc0:	2809d7fa 	srai	r4,r5,31
1001dfc4:	11400015 	stw	r5,0(r2)
1001dfc8:	11000115 	stw	r4,4(r2)
1001dfcc:	003bff06 	br	1001cfcc <___vfiprintf_internal_r+0xa4>
1001dfd0:	0009883a 	mov	r4,zero
1001dfd4:	d8c01804 	addi	r3,sp,96
1001dfd8:	01400044 	movi	r5,1
1001dfdc:	8811883a 	mov	r8,r17
1001dfe0:	003df006 	br	1001d7a4 <___vfiprintf_internal_r+0x87c>
1001dfe4:	0421c83a 	sub	r16,zero,r16
1001dfe8:	ddc00315 	stw	r23,12(sp)
1001dfec:	003cdb06 	br	1001d35c <___vfiprintf_internal_r+0x434>
1001dff0:	b809883a 	mov	r4,r23
1001dff4:	da000215 	stw	r8,8(sp)
1001dff8:	db000115 	stw	r12,4(sp)
1001dffc:	00164b40 	call	100164b4 <strlen>
1001e000:	102d883a 	mov	r22,r2
1001e004:	102b883a 	mov	r21,r2
1001e008:	dd000315 	stw	r20,12(sp)
1001e00c:	db000117 	ldw	r12,4(sp)
1001e010:	da000217 	ldw	r8,8(sp)
1001e014:	003dad06 	br	1001d6cc <___vfiprintf_internal_r+0x7a4>
1001e018:	d8c00847 	ldb	r3,33(sp)
1001e01c:	1800551e 	bne	r3,zero,1001e174 <___vfiprintf_internal_r+0x124c>
1001e020:	683f581e 	bne	r13,zero,1001dd84 <___vfiprintf_internal_r+0xe5c>
1001e024:	0009883a 	mov	r4,zero
1001e028:	d8c01804 	addi	r3,sp,96
1001e02c:	01400044 	movi	r5,1
1001e030:	8811883a 	mov	r8,r17
1001e034:	003ddd06 	br	1001d7ac <___vfiprintf_internal_r+0x884>
1001e038:	d8800317 	ldw	r2,12(sp)
1001e03c:	10800017 	ldw	r2,0(r2)
1001e040:	d8c00315 	stw	r3,12(sp)
1001e044:	d8c00017 	ldw	r3,0(sp)
1001e048:	10c00015 	stw	r3,0(r2)
1001e04c:	003bdf06 	br	1001cfcc <___vfiprintf_internal_r+0xa4>
1001e050:	882f883a 	mov	r23,r17
1001e054:	00000206 	br	1001e060 <___vfiprintf_internal_r+0x1138>
1001e058:	102b883a 	mov	r21,r2
1001e05c:	182d883a 	mov	r22,r3
1001e060:	a809883a 	mov	r4,r21
1001e064:	b00b883a 	mov	r5,r22
1001e068:	01800284 	movi	r6,10
1001e06c:	000f883a 	mov	r7,zero
1001e070:	db400615 	stw	r13,24(sp)
1001e074:	da000515 	stw	r8,20(sp)
1001e078:	da400215 	stw	r9,8(sp)
1001e07c:	db000115 	stw	r12,4(sp)
1001e080:	001efdc0 	call	1001efdc <__umoddi3>
1001e084:	10800c04 	addi	r2,r2,48
1001e088:	bdffffc4 	addi	r23,r23,-1
1001e08c:	a809883a 	mov	r4,r21
1001e090:	b00b883a 	mov	r5,r22
1001e094:	b8800005 	stb	r2,0(r23)
1001e098:	01800284 	movi	r6,10
1001e09c:	000f883a 	mov	r7,zero
1001e0a0:	001ea440 	call	1001ea44 <__udivdi3>
1001e0a4:	db000117 	ldw	r12,4(sp)
1001e0a8:	da400217 	ldw	r9,8(sp)
1001e0ac:	da000517 	ldw	r8,20(sp)
1001e0b0:	db400617 	ldw	r13,24(sp)
1001e0b4:	b03fe81e 	bne	r22,zero,1001e058 <___vfiprintf_internal_r+0x1130>
1001e0b8:	ad4002a8 	cmpgeui	r21,r21,10
1001e0bc:	a83fe61e 	bne	r21,zero,1001e058 <___vfiprintf_internal_r+0x1130>
1001e0c0:	003e9606 	br	1001db1c <___vfiprintf_internal_r+0xbf4>
1001e0c4:	00c00044 	movi	r3,1
1001e0c8:	d8c00a15 	stw	r3,40(sp)
1001e0cc:	b005883a 	mov	r2,r22
1001e0d0:	ddc01615 	stw	r23,88(sp)
1001e0d4:	dd801715 	stw	r22,92(sp)
1001e0d8:	dd800b15 	stw	r22,44(sp)
1001e0dc:	d8c01804 	addi	r3,sp,96
1001e0e0:	003dc306 	br	1001d7f0 <___vfiprintf_internal_r+0x8c8>
1001e0e4:	10c00060 	cmpeqi	r3,r2,1
1001e0e8:	a019883a 	mov	r12,r20
1001e0ec:	183e3926 	beq	r3,zero,1001d9d4 <___vfiprintf_internal_r+0xaac>
1001e0f0:	003e6f06 	br	1001dab0 <___vfiprintf_internal_r+0xb88>
1001e0f4:	e0800043 	ldbu	r2,1(fp)
1001e0f8:	63000814 	ori	r12,r12,32
1001e0fc:	e7000044 	addi	fp,fp,1
1001e100:	10803fcc 	andi	r2,r2,255
1001e104:	1080201c 	xori	r2,r2,128
1001e108:	10bfe004 	addi	r2,r2,-128
1001e10c:	003bd506 	br	1001d064 <___vfiprintf_internal_r+0x13c>
1001e110:	488001f0 	cmpltui	r2,r9,7
1001e114:	482d883a 	mov	r22,r9
1001e118:	1000011e 	bne	r2,zero,1001e120 <___vfiprintf_internal_r+0x11f8>
1001e11c:	05800184 	movi	r22,6
1001e120:	05c400b4 	movhi	r23,4098
1001e124:	b02b883a 	mov	r21,r22
1001e128:	dd000315 	stw	r20,12(sp)
1001e12c:	bdd6d604 	addi	r23,r23,23384
1001e130:	003d6606 	br	1001d6cc <___vfiprintf_internal_r+0x7a4>
1001e134:	d8800315 	stw	r2,12(sp)
1001e138:	002d883a 	mov	r22,zero
1001e13c:	00800044 	movi	r2,1
1001e140:	003cd206 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001e144:	d8800315 	stw	r2,12(sp)
1001e148:	002d883a 	mov	r22,zero
1001e14c:	0005883a 	mov	r2,zero
1001e150:	003cce06 	br	1001d48c <___vfiprintf_internal_r+0x564>
1001e154:	1809883a 	mov	r4,r3
1001e158:	39d7ce04 	addi	r7,r7,24376
1001e15c:	003ede06 	br	1001dcd8 <___vfiprintf_internal_r+0xdb0>
1001e160:	d8c01804 	addi	r3,sp,96
1001e164:	01400044 	movi	r5,1
1001e168:	0009883a 	mov	r4,zero
1001e16c:	8811883a 	mov	r8,r17
1001e170:	003d8e06 	br	1001d7ac <___vfiprintf_internal_r+0x884>
1001e174:	d8800844 	addi	r2,sp,33
1001e178:	d8801615 	stw	r2,88(sp)
1001e17c:	00800044 	movi	r2,1
1001e180:	d8801715 	stw	r2,92(sp)
1001e184:	d8c01804 	addi	r3,sp,96
1001e188:	01400044 	movi	r5,1
1001e18c:	003d6806 	br	1001d730 <___vfiprintf_internal_r+0x808>
1001e190:	d9800845 	stb	r6,33(sp)
1001e194:	003c5506 	br	1001d2ec <___vfiprintf_internal_r+0x3c4>
1001e198:	482b883a 	mov	r21,r9
1001e19c:	dd000315 	stw	r20,12(sp)
1001e1a0:	482d883a 	mov	r22,r9
1001e1a4:	003d4906 	br	1001d6cc <___vfiprintf_internal_r+0x7a4>
1001e1a8:	d9800845 	stb	r6,33(sp)
1001e1ac:	003cd906 	br	1001d514 <___vfiprintf_internal_r+0x5ec>
1001e1b0:	d9800845 	stb	r6,33(sp)
1001e1b4:	003ce906 	br	1001d55c <___vfiprintf_internal_r+0x634>
1001e1b8:	d9800845 	stb	r6,33(sp)
1001e1bc:	003c8a06 	br	1001d3e8 <___vfiprintf_internal_r+0x4c0>
1001e1c0:	d9800845 	stb	r6,33(sp)
1001e1c4:	003dd206 	br	1001d910 <___vfiprintf_internal_r+0x9e8>
1001e1c8:	d9800845 	stb	r6,33(sp)
1001e1cc:	003ddd06 	br	1001d944 <___vfiprintf_internal_r+0xa1c>
1001e1d0:	301f883a 	mov	r15,r6
1001e1d4:	39d7d204 	addi	r7,r7,24392
1001e1d8:	003f2306 	br	1001de68 <___vfiprintf_internal_r+0xf40>
1001e1dc:	d9800845 	stb	r6,33(sp)
1001e1e0:	003d1606 	br	1001d63c <___vfiprintf_internal_r+0x714>
1001e1e4:	d9800845 	stb	r6,33(sp)
1001e1e8:	003d0406 	br	1001d5fc <___vfiprintf_internal_r+0x6d4>
1001e1ec:	d9800845 	stb	r6,33(sp)
1001e1f0:	003cb806 	br	1001d4d4 <___vfiprintf_internal_r+0x5ac>
1001e1f4:	d9800845 	stb	r6,33(sp)
1001e1f8:	003ddf06 	br	1001d978 <___vfiprintf_internal_r+0xa50>
1001e1fc:	29800044 	addi	r6,r5,1
1001e200:	39d7d204 	addi	r7,r7,24392
1001e204:	003db106 	br	1001d8cc <___vfiprintf_internal_r+0x9a4>
1001e208:	181b883a 	mov	r13,r3
1001e20c:	280d883a 	mov	r6,r5
1001e210:	39d7ce04 	addi	r7,r7,24376
1001e214:	003e7306 	br	1001dbe4 <___vfiprintf_internal_r+0xcbc>
1001e218:	00bfffc4 	movi	r2,-1
1001e21c:	d8800015 	stw	r2,0(sp)
1001e220:	003c1706 	br	1001d280 <___vfiprintf_internal_r+0x358>
1001e224:	d8800317 	ldw	r2,12(sp)
1001e228:	12400017 	ldw	r9,0(r2)
1001e22c:	15c00104 	addi	r23,r2,4
1001e230:	4800010e 	bge	r9,zero,1001e238 <___vfiprintf_internal_r+0x1310>
1001e234:	027fffc4 	movi	r9,-1
1001e238:	e0800043 	ldbu	r2,1(fp)
1001e23c:	ddc00315 	stw	r23,12(sp)
1001e240:	2039883a 	mov	fp,r4
1001e244:	10803fcc 	andi	r2,r2,255
1001e248:	1080201c 	xori	r2,r2,128
1001e24c:	10bfe004 	addi	r2,r2,-128
1001e250:	003b8406 	br	1001d064 <___vfiprintf_internal_r+0x13c>

1001e254 <__vfiprintf_internal>:
1001e254:	008400f4 	movhi	r2,4099
1001e258:	300f883a 	mov	r7,r6
1001e25c:	280d883a 	mov	r6,r5
1001e260:	200b883a 	mov	r5,r4
1001e264:	11215917 	ldw	r4,-31388(r2)
1001e268:	001cf281 	jmpi	1001cf28 <___vfiprintf_internal_r>

1001e26c <__sbprintf>:
1001e26c:	2880030b 	ldhu	r2,12(r5)
1001e270:	2b001917 	ldw	r12,100(r5)
1001e274:	2ac0038b 	ldhu	r11,14(r5)
1001e278:	2a800717 	ldw	r10,28(r5)
1001e27c:	2a400917 	ldw	r9,36(r5)
1001e280:	defee204 	addi	sp,sp,-1144
1001e284:	da001a04 	addi	r8,sp,104
1001e288:	00c10004 	movi	r3,1024
1001e28c:	dc011a15 	stw	r16,1128(sp)
1001e290:	10bfff4c 	andi	r2,r2,65533
1001e294:	2821883a 	mov	r16,r5
1001e298:	d80b883a 	mov	r5,sp
1001e29c:	dc811c15 	stw	r18,1136(sp)
1001e2a0:	dc411b15 	stw	r17,1132(sp)
1001e2a4:	dfc11d15 	stw	ra,1140(sp)
1001e2a8:	2025883a 	mov	r18,r4
1001e2ac:	d880030d 	sth	r2,12(sp)
1001e2b0:	db001915 	stw	r12,100(sp)
1001e2b4:	dac0038d 	sth	r11,14(sp)
1001e2b8:	da800715 	stw	r10,28(sp)
1001e2bc:	da400915 	stw	r9,36(sp)
1001e2c0:	da000015 	stw	r8,0(sp)
1001e2c4:	da000415 	stw	r8,16(sp)
1001e2c8:	d8c00215 	stw	r3,8(sp)
1001e2cc:	d8c00515 	stw	r3,20(sp)
1001e2d0:	d8000615 	stw	zero,24(sp)
1001e2d4:	001cf280 	call	1001cf28 <___vfiprintf_internal_r>
1001e2d8:	1023883a 	mov	r17,r2
1001e2dc:	10000d0e 	bge	r2,zero,1001e314 <__sbprintf+0xa8>
1001e2e0:	d880030b 	ldhu	r2,12(sp)
1001e2e4:	1080100c 	andi	r2,r2,64
1001e2e8:	10000326 	beq	r2,zero,1001e2f8 <__sbprintf+0x8c>
1001e2ec:	8080030b 	ldhu	r2,12(r16)
1001e2f0:	10801014 	ori	r2,r2,64
1001e2f4:	8080030d 	sth	r2,12(r16)
1001e2f8:	8805883a 	mov	r2,r17
1001e2fc:	dfc11d17 	ldw	ra,1140(sp)
1001e300:	dc811c17 	ldw	r18,1136(sp)
1001e304:	dc411b17 	ldw	r17,1132(sp)
1001e308:	dc011a17 	ldw	r16,1128(sp)
1001e30c:	dec11e04 	addi	sp,sp,1144
1001e310:	f800283a 	ret
1001e314:	d80b883a 	mov	r5,sp
1001e318:	9009883a 	mov	r4,r18
1001e31c:	001a7240 	call	1001a724 <_fflush_r>
1001e320:	103fef26 	beq	r2,zero,1001e2e0 <__sbprintf+0x74>
1001e324:	047fffc4 	movi	r17,-1
1001e328:	003fed06 	br	1001e2e0 <__sbprintf+0x74>

1001e32c <__swbuf_r>:
1001e32c:	defffb04 	addi	sp,sp,-20
1001e330:	dc800215 	stw	r18,8(sp)
1001e334:	dc400115 	stw	r17,4(sp)
1001e338:	dc000015 	stw	r16,0(sp)
1001e33c:	dfc00415 	stw	ra,16(sp)
1001e340:	dcc00315 	stw	r19,12(sp)
1001e344:	2023883a 	mov	r17,r4
1001e348:	2825883a 	mov	r18,r5
1001e34c:	3021883a 	mov	r16,r6
1001e350:	20000226 	beq	r4,zero,1001e35c <__swbuf_r+0x30>
1001e354:	20800e17 	ldw	r2,56(r4)
1001e358:	10003e26 	beq	r2,zero,1001e454 <__swbuf_r+0x128>
1001e35c:	80800617 	ldw	r2,24(r16)
1001e360:	80c0030b 	ldhu	r3,12(r16)
1001e364:	80800215 	stw	r2,8(r16)
1001e368:	1880020c 	andi	r2,r3,8
1001e36c:	10001f26 	beq	r2,zero,1001e3ec <__swbuf_r+0xc0>
1001e370:	80800417 	ldw	r2,16(r16)
1001e374:	10001d26 	beq	r2,zero,1001e3ec <__swbuf_r+0xc0>
1001e378:	1908000c 	andi	r4,r3,8192
1001e37c:	94c03fcc 	andi	r19,r18,255
1001e380:	20002326 	beq	r4,zero,1001e410 <__swbuf_r+0xe4>
1001e384:	80c00017 	ldw	r3,0(r16)
1001e388:	81000517 	ldw	r4,20(r16)
1001e38c:	1885c83a 	sub	r2,r3,r2
1001e390:	1100290e 	bge	r2,r4,1001e438 <__swbuf_r+0x10c>
1001e394:	10800044 	addi	r2,r2,1
1001e398:	81000217 	ldw	r4,8(r16)
1001e39c:	19400044 	addi	r5,r3,1
1001e3a0:	81400015 	stw	r5,0(r16)
1001e3a4:	213fffc4 	addi	r4,r4,-1
1001e3a8:	81000215 	stw	r4,8(r16)
1001e3ac:	1c800005 	stb	r18,0(r3)
1001e3b0:	80c00517 	ldw	r3,20(r16)
1001e3b4:	18802926 	beq	r3,r2,1001e45c <__swbuf_r+0x130>
1001e3b8:	8080030b 	ldhu	r2,12(r16)
1001e3bc:	1080004c 	andi	r2,r2,1
1001e3c0:	10000226 	beq	r2,zero,1001e3cc <__swbuf_r+0xa0>
1001e3c4:	98800298 	cmpnei	r2,r19,10
1001e3c8:	10002426 	beq	r2,zero,1001e45c <__swbuf_r+0x130>
1001e3cc:	9805883a 	mov	r2,r19
1001e3d0:	dfc00417 	ldw	ra,16(sp)
1001e3d4:	dcc00317 	ldw	r19,12(sp)
1001e3d8:	dc800217 	ldw	r18,8(sp)
1001e3dc:	dc400117 	ldw	r17,4(sp)
1001e3e0:	dc000017 	ldw	r16,0(sp)
1001e3e4:	dec00504 	addi	sp,sp,20
1001e3e8:	f800283a 	ret
1001e3ec:	800b883a 	mov	r5,r16
1001e3f0:	8809883a 	mov	r4,r17
1001e3f4:	0018a6c0 	call	10018a6c <__swsetup_r>
1001e3f8:	10001c1e 	bne	r2,zero,1001e46c <__swbuf_r+0x140>
1001e3fc:	80c0030b 	ldhu	r3,12(r16)
1001e400:	80800417 	ldw	r2,16(r16)
1001e404:	94c03fcc 	andi	r19,r18,255
1001e408:	1908000c 	andi	r4,r3,8192
1001e40c:	203fdd1e 	bne	r4,zero,1001e384 <__swbuf_r+0x58>
1001e410:	81001917 	ldw	r4,100(r16)
1001e414:	18c80014 	ori	r3,r3,8192
1001e418:	0177ffc4 	movi	r5,-8193
1001e41c:	2148703a 	and	r4,r4,r5
1001e420:	80c0030d 	sth	r3,12(r16)
1001e424:	80c00017 	ldw	r3,0(r16)
1001e428:	81001915 	stw	r4,100(r16)
1001e42c:	81000517 	ldw	r4,20(r16)
1001e430:	1885c83a 	sub	r2,r3,r2
1001e434:	113fd716 	blt	r2,r4,1001e394 <__swbuf_r+0x68>
1001e438:	800b883a 	mov	r5,r16
1001e43c:	8809883a 	mov	r4,r17
1001e440:	001a7240 	call	1001a724 <_fflush_r>
1001e444:	1000091e 	bne	r2,zero,1001e46c <__swbuf_r+0x140>
1001e448:	80c00017 	ldw	r3,0(r16)
1001e44c:	00800044 	movi	r2,1
1001e450:	003fd106 	br	1001e398 <__swbuf_r+0x6c>
1001e454:	001aaa80 	call	1001aaa8 <__sinit>
1001e458:	003fc006 	br	1001e35c <__swbuf_r+0x30>
1001e45c:	800b883a 	mov	r5,r16
1001e460:	8809883a 	mov	r4,r17
1001e464:	001a7240 	call	1001a724 <_fflush_r>
1001e468:	103fd826 	beq	r2,zero,1001e3cc <__swbuf_r+0xa0>
1001e46c:	04ffffc4 	movi	r19,-1
1001e470:	003fd606 	br	1001e3cc <__swbuf_r+0xa0>

1001e474 <__swbuf>:
1001e474:	008400f4 	movhi	r2,4099
1001e478:	280d883a 	mov	r6,r5
1001e47c:	200b883a 	mov	r5,r4
1001e480:	11215917 	ldw	r4,-31388(r2)
1001e484:	001e32c1 	jmpi	1001e32c <__swbuf_r>

1001e488 <_calloc_r>:
1001e488:	298b383a 	mul	r5,r5,r6
1001e48c:	deffff04 	addi	sp,sp,-4
1001e490:	dfc00015 	stw	ra,0(sp)
1001e494:	0014e900 	call	10014e90 <_malloc_r>
1001e498:	1007883a 	mov	r3,r2
1001e49c:	10000c26 	beq	r2,zero,1001e4d0 <_calloc_r+0x48>
1001e4a0:	11bfff17 	ldw	r6,-4(r2)
1001e4a4:	00bfff04 	movi	r2,-4
1001e4a8:	308c703a 	and	r6,r6,r2
1001e4ac:	31bfff04 	addi	r6,r6,-4
1001e4b0:	30800968 	cmpgeui	r2,r6,37
1001e4b4:	1000141e 	bne	r2,zero,1001e508 <_calloc_r+0x80>
1001e4b8:	30800530 	cmpltui	r2,r6,20
1001e4bc:	10000826 	beq	r2,zero,1001e4e0 <_calloc_r+0x58>
1001e4c0:	1805883a 	mov	r2,r3
1001e4c4:	10000015 	stw	zero,0(r2)
1001e4c8:	10000115 	stw	zero,4(r2)
1001e4cc:	10000215 	stw	zero,8(r2)
1001e4d0:	1805883a 	mov	r2,r3
1001e4d4:	dfc00017 	ldw	ra,0(sp)
1001e4d8:	dec00104 	addi	sp,sp,4
1001e4dc:	f800283a 	ret
1001e4e0:	18000015 	stw	zero,0(r3)
1001e4e4:	18000115 	stw	zero,4(r3)
1001e4e8:	30800728 	cmpgeui	r2,r6,28
1001e4ec:	10000e26 	beq	r2,zero,1001e528 <_calloc_r+0xa0>
1001e4f0:	18000215 	stw	zero,8(r3)
1001e4f4:	18000315 	stw	zero,12(r3)
1001e4f8:	31800920 	cmpeqi	r6,r6,36
1001e4fc:	30000c1e 	bne	r6,zero,1001e530 <_calloc_r+0xa8>
1001e500:	18800404 	addi	r2,r3,16
1001e504:	003fef06 	br	1001e4c4 <_calloc_r+0x3c>
1001e508:	1809883a 	mov	r4,r3
1001e50c:	000b883a 	mov	r5,zero
1001e510:	0015a240 	call	10015a24 <memset>
1001e514:	1007883a 	mov	r3,r2
1001e518:	1805883a 	mov	r2,r3
1001e51c:	dfc00017 	ldw	ra,0(sp)
1001e520:	dec00104 	addi	sp,sp,4
1001e524:	f800283a 	ret
1001e528:	18800204 	addi	r2,r3,8
1001e52c:	003fe506 	br	1001e4c4 <_calloc_r+0x3c>
1001e530:	18000415 	stw	zero,16(r3)
1001e534:	18800604 	addi	r2,r3,24
1001e538:	18000515 	stw	zero,20(r3)
1001e53c:	003fe106 	br	1001e4c4 <_calloc_r+0x3c>

1001e540 <_fclose_r>:
1001e540:	defffc04 	addi	sp,sp,-16
1001e544:	dfc00315 	stw	ra,12(sp)
1001e548:	dc800215 	stw	r18,8(sp)
1001e54c:	dc400115 	stw	r17,4(sp)
1001e550:	dc000015 	stw	r16,0(sp)
1001e554:	28000726 	beq	r5,zero,1001e574 <_fclose_r+0x34>
1001e558:	2023883a 	mov	r17,r4
1001e55c:	2821883a 	mov	r16,r5
1001e560:	20000226 	beq	r4,zero,1001e56c <_fclose_r+0x2c>
1001e564:	20800e17 	ldw	r2,56(r4)
1001e568:	10002726 	beq	r2,zero,1001e608 <_fclose_r+0xc8>
1001e56c:	8080030f 	ldh	r2,12(r16)
1001e570:	1000081e 	bne	r2,zero,1001e594 <_fclose_r+0x54>
1001e574:	0025883a 	mov	r18,zero
1001e578:	9005883a 	mov	r2,r18
1001e57c:	dfc00317 	ldw	ra,12(sp)
1001e580:	dc800217 	ldw	r18,8(sp)
1001e584:	dc400117 	ldw	r17,4(sp)
1001e588:	dc000017 	ldw	r16,0(sp)
1001e58c:	dec00404 	addi	sp,sp,16
1001e590:	f800283a 	ret
1001e594:	800b883a 	mov	r5,r16
1001e598:	8809883a 	mov	r4,r17
1001e59c:	001a4fc0 	call	1001a4fc <__sflush_r>
1001e5a0:	1025883a 	mov	r18,r2
1001e5a4:	80800b17 	ldw	r2,44(r16)
1001e5a8:	10000426 	beq	r2,zero,1001e5bc <_fclose_r+0x7c>
1001e5ac:	81400717 	ldw	r5,28(r16)
1001e5b0:	8809883a 	mov	r4,r17
1001e5b4:	103ee83a 	callr	r2
1001e5b8:	10001716 	blt	r2,zero,1001e618 <_fclose_r+0xd8>
1001e5bc:	8080030b 	ldhu	r2,12(r16)
1001e5c0:	1080200c 	andi	r2,r2,128
1001e5c4:	1000181e 	bne	r2,zero,1001e628 <_fclose_r+0xe8>
1001e5c8:	81400c17 	ldw	r5,48(r16)
1001e5cc:	28000526 	beq	r5,zero,1001e5e4 <_fclose_r+0xa4>
1001e5d0:	80801004 	addi	r2,r16,64
1001e5d4:	28800226 	beq	r5,r2,1001e5e0 <_fclose_r+0xa0>
1001e5d8:	8809883a 	mov	r4,r17
1001e5dc:	001acb00 	call	1001acb0 <_free_r>
1001e5e0:	80000c15 	stw	zero,48(r16)
1001e5e4:	81401117 	ldw	r5,68(r16)
1001e5e8:	28000326 	beq	r5,zero,1001e5f8 <_fclose_r+0xb8>
1001e5ec:	8809883a 	mov	r4,r17
1001e5f0:	001acb00 	call	1001acb0 <_free_r>
1001e5f4:	80001115 	stw	zero,68(r16)
1001e5f8:	001aab80 	call	1001aab8 <__sfp_lock_acquire>
1001e5fc:	8000030d 	sth	zero,12(r16)
1001e600:	001aabc0 	call	1001aabc <__sfp_lock_release>
1001e604:	003fdc06 	br	1001e578 <_fclose_r+0x38>
1001e608:	001aaa80 	call	1001aaa8 <__sinit>
1001e60c:	8080030f 	ldh	r2,12(r16)
1001e610:	103fd826 	beq	r2,zero,1001e574 <_fclose_r+0x34>
1001e614:	003fdf06 	br	1001e594 <_fclose_r+0x54>
1001e618:	8080030b 	ldhu	r2,12(r16)
1001e61c:	04bfffc4 	movi	r18,-1
1001e620:	1080200c 	andi	r2,r2,128
1001e624:	103fe826 	beq	r2,zero,1001e5c8 <_fclose_r+0x88>
1001e628:	81400417 	ldw	r5,16(r16)
1001e62c:	8809883a 	mov	r4,r17
1001e630:	001acb00 	call	1001acb0 <_free_r>
1001e634:	003fe406 	br	1001e5c8 <_fclose_r+0x88>

1001e638 <fclose>:
1001e638:	008400f4 	movhi	r2,4099
1001e63c:	200b883a 	mov	r5,r4
1001e640:	11215917 	ldw	r4,-31388(r2)
1001e644:	001e5401 	jmpi	1001e540 <_fclose_r>

1001e648 <__fputwc>:
1001e648:	defff904 	addi	sp,sp,-28
1001e64c:	dcc00415 	stw	r19,16(sp)
1001e650:	dc800315 	stw	r18,12(sp)
1001e654:	dc000115 	stw	r16,4(sp)
1001e658:	dfc00615 	stw	ra,24(sp)
1001e65c:	dd000515 	stw	r20,20(sp)
1001e660:	dc400215 	stw	r17,8(sp)
1001e664:	2025883a 	mov	r18,r4
1001e668:	2827883a 	mov	r19,r5
1001e66c:	3021883a 	mov	r16,r6
1001e670:	001e8a80 	call	1001e8a8 <__locale_mb_cur_max>
1001e674:	10800058 	cmpnei	r2,r2,1
1001e678:	1000071e 	bne	r2,zero,1001e698 <__fputwc+0x50>
1001e67c:	98bfffc4 	addi	r2,r19,-1
1001e680:	10803fe8 	cmpgeui	r2,r2,255
1001e684:	1000041e 	bne	r2,zero,1001e698 <__fputwc+0x50>
1001e688:	980b883a 	mov	r5,r19
1001e68c:	dcc000c5 	stb	r19,3(sp)
1001e690:	05000044 	movi	r20,1
1001e694:	00000a06 	br	1001e6c0 <__fputwc+0x78>
1001e698:	81c01704 	addi	r7,r16,92
1001e69c:	980d883a 	mov	r6,r19
1001e6a0:	d94000c4 	addi	r5,sp,3
1001e6a4:	9009883a 	mov	r4,r18
1001e6a8:	001e9180 	call	1001e918 <_wcrtomb_r>
1001e6ac:	1029883a 	mov	r20,r2
1001e6b0:	10bfffd8 	cmpnei	r2,r2,-1
1001e6b4:	10003426 	beq	r2,zero,1001e788 <__fputwc+0x140>
1001e6b8:	a0002926 	beq	r20,zero,1001e760 <__fputwc+0x118>
1001e6bc:	d94000c3 	ldbu	r5,3(sp)
1001e6c0:	0023883a 	mov	r17,zero
1001e6c4:	00000a06 	br	1001e6f0 <__fputwc+0xa8>
1001e6c8:	80800017 	ldw	r2,0(r16)
1001e6cc:	11400005 	stb	r5,0(r2)
1001e6d0:	80800017 	ldw	r2,0(r16)
1001e6d4:	10800044 	addi	r2,r2,1
1001e6d8:	80800015 	stw	r2,0(r16)
1001e6dc:	8c400044 	addi	r17,r17,1
1001e6e0:	d88000c4 	addi	r2,sp,3
1001e6e4:	1445883a 	add	r2,r2,r17
1001e6e8:	8d001d2e 	bgeu	r17,r20,1001e760 <__fputwc+0x118>
1001e6ec:	11400003 	ldbu	r5,0(r2)
1001e6f0:	80800217 	ldw	r2,8(r16)
1001e6f4:	10bfffc4 	addi	r2,r2,-1
1001e6f8:	80800215 	stw	r2,8(r16)
1001e6fc:	103ff20e 	bge	r2,zero,1001e6c8 <__fputwc+0x80>
1001e700:	80c00617 	ldw	r3,24(r16)
1001e704:	10c01016 	blt	r2,r3,1001e748 <__fputwc+0x100>
1001e708:	80800017 	ldw	r2,0(r16)
1001e70c:	11400005 	stb	r5,0(r2)
1001e710:	80800017 	ldw	r2,0(r16)
1001e714:	10c00003 	ldbu	r3,0(r2)
1001e718:	10800044 	addi	r2,r2,1
1001e71c:	18c002a0 	cmpeqi	r3,r3,10
1001e720:	183fed26 	beq	r3,zero,1001e6d8 <__fputwc+0x90>
1001e724:	800d883a 	mov	r6,r16
1001e728:	01400284 	movi	r5,10
1001e72c:	9009883a 	mov	r4,r18
1001e730:	001e32c0 	call	1001e32c <__swbuf_r>
1001e734:	10bfffe0 	cmpeqi	r2,r2,-1
1001e738:	10803fcc 	andi	r2,r2,255
1001e73c:	103fe726 	beq	r2,zero,1001e6dc <__fputwc+0x94>
1001e740:	053fffc4 	movi	r20,-1
1001e744:	00000706 	br	1001e764 <__fputwc+0x11c>
1001e748:	29403fcc 	andi	r5,r5,255
1001e74c:	800d883a 	mov	r6,r16
1001e750:	9009883a 	mov	r4,r18
1001e754:	001e32c0 	call	1001e32c <__swbuf_r>
1001e758:	10bfffe0 	cmpeqi	r2,r2,-1
1001e75c:	003ff606 	br	1001e738 <__fputwc+0xf0>
1001e760:	9829883a 	mov	r20,r19
1001e764:	a005883a 	mov	r2,r20
1001e768:	dfc00617 	ldw	ra,24(sp)
1001e76c:	dd000517 	ldw	r20,20(sp)
1001e770:	dcc00417 	ldw	r19,16(sp)
1001e774:	dc800317 	ldw	r18,12(sp)
1001e778:	dc400217 	ldw	r17,8(sp)
1001e77c:	dc000117 	ldw	r16,4(sp)
1001e780:	dec00704 	addi	sp,sp,28
1001e784:	f800283a 	ret
1001e788:	8080030b 	ldhu	r2,12(r16)
1001e78c:	10801014 	ori	r2,r2,64
1001e790:	8080030d 	sth	r2,12(r16)
1001e794:	003ff306 	br	1001e764 <__fputwc+0x11c>

1001e798 <_fputwc_r>:
1001e798:	3080030b 	ldhu	r2,12(r6)
1001e79c:	10c8000c 	andi	r3,r2,8192
1001e7a0:	1800051e 	bne	r3,zero,1001e7b8 <_fputwc_r+0x20>
1001e7a4:	30c01917 	ldw	r3,100(r6)
1001e7a8:	10880014 	ori	r2,r2,8192
1001e7ac:	3080030d 	sth	r2,12(r6)
1001e7b0:	18880014 	ori	r2,r3,8192
1001e7b4:	30801915 	stw	r2,100(r6)
1001e7b8:	001e6481 	jmpi	1001e648 <__fputwc>

1001e7bc <fputwc>:
1001e7bc:	defffc04 	addi	sp,sp,-16
1001e7c0:	008400f4 	movhi	r2,4099
1001e7c4:	dc000115 	stw	r16,4(sp)
1001e7c8:	14215917 	ldw	r16,-31388(r2)
1001e7cc:	dc400215 	stw	r17,8(sp)
1001e7d0:	dfc00315 	stw	ra,12(sp)
1001e7d4:	2023883a 	mov	r17,r4
1001e7d8:	80000226 	beq	r16,zero,1001e7e4 <fputwc+0x28>
1001e7dc:	80800e17 	ldw	r2,56(r16)
1001e7e0:	10001026 	beq	r2,zero,1001e824 <fputwc+0x68>
1001e7e4:	2880030b 	ldhu	r2,12(r5)
1001e7e8:	10c8000c 	andi	r3,r2,8192
1001e7ec:	1800051e 	bne	r3,zero,1001e804 <fputwc+0x48>
1001e7f0:	28c01917 	ldw	r3,100(r5)
1001e7f4:	10880014 	ori	r2,r2,8192
1001e7f8:	2880030d 	sth	r2,12(r5)
1001e7fc:	18880014 	ori	r2,r3,8192
1001e800:	28801915 	stw	r2,100(r5)
1001e804:	280d883a 	mov	r6,r5
1001e808:	8009883a 	mov	r4,r16
1001e80c:	880b883a 	mov	r5,r17
1001e810:	dfc00317 	ldw	ra,12(sp)
1001e814:	dc400217 	ldw	r17,8(sp)
1001e818:	dc000117 	ldw	r16,4(sp)
1001e81c:	dec00404 	addi	sp,sp,16
1001e820:	001e6481 	jmpi	1001e648 <__fputwc>
1001e824:	8009883a 	mov	r4,r16
1001e828:	d9400015 	stw	r5,0(sp)
1001e82c:	001aaa80 	call	1001aaa8 <__sinit>
1001e830:	d9400017 	ldw	r5,0(sp)
1001e834:	003feb06 	br	1001e7e4 <fputwc+0x28>

1001e838 <_setlocale_r>:
1001e838:	30001826 	beq	r6,zero,1001e89c <_setlocale_r+0x64>
1001e83c:	014400b4 	movhi	r5,4098
1001e840:	defffe04 	addi	sp,sp,-8
1001e844:	2957d704 	addi	r5,r5,24412
1001e848:	3009883a 	mov	r4,r6
1001e84c:	dc000015 	stw	r16,0(sp)
1001e850:	dfc00115 	stw	ra,4(sp)
1001e854:	3021883a 	mov	r16,r6
1001e858:	00163dc0 	call	100163dc <strcmp>
1001e85c:	1000061e 	bne	r2,zero,1001e878 <_setlocale_r+0x40>
1001e860:	008400b4 	movhi	r2,4098
1001e864:	1097d604 	addi	r2,r2,24408
1001e868:	dfc00117 	ldw	ra,4(sp)
1001e86c:	dc000017 	ldw	r16,0(sp)
1001e870:	dec00204 	addi	sp,sp,8
1001e874:	f800283a 	ret
1001e878:	014400b4 	movhi	r5,4098
1001e87c:	2957d604 	addi	r5,r5,24408
1001e880:	8009883a 	mov	r4,r16
1001e884:	00163dc0 	call	100163dc <strcmp>
1001e888:	103ff526 	beq	r2,zero,1001e860 <_setlocale_r+0x28>
1001e88c:	80800003 	ldbu	r2,0(r16)
1001e890:	103ff326 	beq	r2,zero,1001e860 <_setlocale_r+0x28>
1001e894:	0005883a 	mov	r2,zero
1001e898:	003ff306 	br	1001e868 <_setlocale_r+0x30>
1001e89c:	008400b4 	movhi	r2,4098
1001e8a0:	1097d604 	addi	r2,r2,24408
1001e8a4:	f800283a 	ret

1001e8a8 <__locale_mb_cur_max>:
1001e8a8:	008400b4 	movhi	r2,4098
1001e8ac:	109cb507 	ldb	r2,29396(r2)
1001e8b0:	f800283a 	ret

1001e8b4 <setlocale>:
1001e8b4:	008400f4 	movhi	r2,4099
1001e8b8:	280d883a 	mov	r6,r5
1001e8bc:	200b883a 	mov	r5,r4
1001e8c0:	11215917 	ldw	r4,-31388(r2)
1001e8c4:	001e8381 	jmpi	1001e838 <_setlocale_r>

1001e8c8 <_mbtowc_r>:
1001e8c8:	008400b4 	movhi	r2,4098
1001e8cc:	109ca417 	ldw	r2,29328(r2)
1001e8d0:	1000683a 	jmp	r2

1001e8d4 <__ascii_mbtowc>:
1001e8d4:	deffff04 	addi	sp,sp,-4
1001e8d8:	28000826 	beq	r5,zero,1001e8fc <__ascii_mbtowc+0x28>
1001e8dc:	30000926 	beq	r6,zero,1001e904 <__ascii_mbtowc+0x30>
1001e8e0:	38000b26 	beq	r7,zero,1001e910 <__ascii_mbtowc+0x3c>
1001e8e4:	30800003 	ldbu	r2,0(r6)
1001e8e8:	28800015 	stw	r2,0(r5)
1001e8ec:	30800003 	ldbu	r2,0(r6)
1001e8f0:	1004c03a 	cmpne	r2,r2,zero
1001e8f4:	dec00104 	addi	sp,sp,4
1001e8f8:	f800283a 	ret
1001e8fc:	d80b883a 	mov	r5,sp
1001e900:	303ff71e 	bne	r6,zero,1001e8e0 <__ascii_mbtowc+0xc>
1001e904:	0005883a 	mov	r2,zero
1001e908:	dec00104 	addi	sp,sp,4
1001e90c:	f800283a 	ret
1001e910:	00bfff84 	movi	r2,-2
1001e914:	003ff706 	br	1001e8f4 <__ascii_mbtowc+0x20>

1001e918 <_wcrtomb_r>:
1001e918:	defffa04 	addi	sp,sp,-24
1001e91c:	dc400415 	stw	r17,16(sp)
1001e920:	dc000315 	stw	r16,12(sp)
1001e924:	008400b4 	movhi	r2,4098
1001e928:	dfc00515 	stw	ra,20(sp)
1001e92c:	2021883a 	mov	r16,r4
1001e930:	3823883a 	mov	r17,r7
1001e934:	109ca317 	ldw	r2,29324(r2)
1001e938:	28000826 	beq	r5,zero,1001e95c <_wcrtomb_r+0x44>
1001e93c:	103ee83a 	callr	r2
1001e940:	10ffffd8 	cmpnei	r3,r2,-1
1001e944:	18000a26 	beq	r3,zero,1001e970 <_wcrtomb_r+0x58>
1001e948:	dfc00517 	ldw	ra,20(sp)
1001e94c:	dc400417 	ldw	r17,16(sp)
1001e950:	dc000317 	ldw	r16,12(sp)
1001e954:	dec00604 	addi	sp,sp,24
1001e958:	f800283a 	ret
1001e95c:	000d883a 	mov	r6,zero
1001e960:	d9400084 	addi	r5,sp,2
1001e964:	103ee83a 	callr	r2
1001e968:	10ffffd8 	cmpnei	r3,r2,-1
1001e96c:	183ff61e 	bne	r3,zero,1001e948 <_wcrtomb_r+0x30>
1001e970:	00802284 	movi	r2,138
1001e974:	88000015 	stw	zero,0(r17)
1001e978:	80800015 	stw	r2,0(r16)
1001e97c:	00bfffc4 	movi	r2,-1
1001e980:	003ff106 	br	1001e948 <_wcrtomb_r+0x30>

1001e984 <wcrtomb>:
1001e984:	defffa04 	addi	sp,sp,-24
1001e988:	008400f4 	movhi	r2,4099
1001e98c:	dc400415 	stw	r17,16(sp)
1001e990:	dc000315 	stw	r16,12(sp)
1001e994:	dfc00515 	stw	ra,20(sp)
1001e998:	14215917 	ldw	r16,-31388(r2)
1001e99c:	008400b4 	movhi	r2,4098
1001e9a0:	3023883a 	mov	r17,r6
1001e9a4:	109ca317 	ldw	r2,29324(r2)
1001e9a8:	300f883a 	mov	r7,r6
1001e9ac:	20000b26 	beq	r4,zero,1001e9dc <wcrtomb+0x58>
1001e9b0:	280d883a 	mov	r6,r5
1001e9b4:	200b883a 	mov	r5,r4
1001e9b8:	8009883a 	mov	r4,r16
1001e9bc:	103ee83a 	callr	r2
1001e9c0:	10ffffd8 	cmpnei	r3,r2,-1
1001e9c4:	18000b26 	beq	r3,zero,1001e9f4 <wcrtomb+0x70>
1001e9c8:	dfc00517 	ldw	ra,20(sp)
1001e9cc:	dc400417 	ldw	r17,16(sp)
1001e9d0:	dc000317 	ldw	r16,12(sp)
1001e9d4:	dec00604 	addi	sp,sp,24
1001e9d8:	f800283a 	ret
1001e9dc:	000d883a 	mov	r6,zero
1001e9e0:	d9400084 	addi	r5,sp,2
1001e9e4:	8009883a 	mov	r4,r16
1001e9e8:	103ee83a 	callr	r2
1001e9ec:	10ffffd8 	cmpnei	r3,r2,-1
1001e9f0:	183ff51e 	bne	r3,zero,1001e9c8 <wcrtomb+0x44>
1001e9f4:	00802284 	movi	r2,138
1001e9f8:	88000015 	stw	zero,0(r17)
1001e9fc:	80800015 	stw	r2,0(r16)
1001ea00:	00bfffc4 	movi	r2,-1
1001ea04:	003ff006 	br	1001e9c8 <wcrtomb+0x44>

1001ea08 <_wctomb_r>:
1001ea08:	008400b4 	movhi	r2,4098
1001ea0c:	109ca317 	ldw	r2,29324(r2)
1001ea10:	1000683a 	jmp	r2

1001ea14 <__ascii_wctomb>:
1001ea14:	28000926 	beq	r5,zero,1001ea3c <__ascii_wctomb+0x28>
1001ea18:	30804030 	cmpltui	r2,r6,256
1001ea1c:	10000326 	beq	r2,zero,1001ea2c <__ascii_wctomb+0x18>
1001ea20:	29800005 	stb	r6,0(r5)
1001ea24:	00800044 	movi	r2,1
1001ea28:	f800283a 	ret
1001ea2c:	00802284 	movi	r2,138
1001ea30:	20800015 	stw	r2,0(r4)
1001ea34:	00bfffc4 	movi	r2,-1
1001ea38:	f800283a 	ret
1001ea3c:	0005883a 	mov	r2,zero
1001ea40:	f800283a 	ret

1001ea44 <__udivdi3>:
1001ea44:	defff504 	addi	sp,sp,-44
1001ea48:	dd400615 	stw	r21,24(sp)
1001ea4c:	dc000115 	stw	r16,4(sp)
1001ea50:	dfc00a15 	stw	ra,40(sp)
1001ea54:	df000915 	stw	fp,36(sp)
1001ea58:	ddc00815 	stw	r23,32(sp)
1001ea5c:	dd800715 	stw	r22,28(sp)
1001ea60:	dd000515 	stw	r20,20(sp)
1001ea64:	dcc00415 	stw	r19,16(sp)
1001ea68:	dc800315 	stw	r18,12(sp)
1001ea6c:	dc400215 	stw	r17,8(sp)
1001ea70:	202b883a 	mov	r21,r4
1001ea74:	2821883a 	mov	r16,r5
1001ea78:	3800821e 	bne	r7,zero,1001ec84 <__udivdi3+0x240>
1001ea7c:	3827883a 	mov	r19,r7
1001ea80:	3023883a 	mov	r17,r6
1001ea84:	2025883a 	mov	r18,r4
1001ea88:	29803d2e 	bgeu	r5,r6,1001eb80 <__udivdi3+0x13c>
1001ea8c:	00bfffd4 	movui	r2,65535
1001ea90:	282d883a 	mov	r22,r5
1001ea94:	1180a52e 	bgeu	r2,r6,1001ed2c <__udivdi3+0x2e8>
1001ea98:	00804034 	movhi	r2,256
1001ea9c:	30813836 	bltu	r6,r2,1001ef80 <__udivdi3+0x53c>
1001eaa0:	3006d63a 	srli	r3,r6,24
1001eaa4:	04c00604 	movi	r19,24
1001eaa8:	008400b4 	movhi	r2,4098
1001eaac:	1885883a 	add	r2,r3,r2
1001eab0:	1097da03 	ldbu	r2,24424(r2)
1001eab4:	14e7883a 	add	r19,r2,r19
1001eab8:	00800804 	movi	r2,32
1001eabc:	14c5c83a 	sub	r2,r2,r19
1001eac0:	10000526 	beq	r2,zero,1001ead8 <__udivdi3+0x94>
1001eac4:	80a0983a 	sll	r16,r16,r2
1001eac8:	ace6d83a 	srl	r19,r21,r19
1001eacc:	30a2983a 	sll	r17,r6,r2
1001ead0:	a8a4983a 	sll	r18,r21,r2
1001ead4:	9c2cb03a 	or	r22,r19,r16
1001ead8:	882ad43a 	srli	r21,r17,16
1001eadc:	b009883a 	mov	r4,r22
1001eae0:	8d3fffcc 	andi	r20,r17,65535
1001eae4:	a80b883a 	mov	r5,r21
1001eae8:	00141100 	call	10014110 <__umodsi3>
1001eaec:	a80b883a 	mov	r5,r21
1001eaf0:	b009883a 	mov	r4,r22
1001eaf4:	1027883a 	mov	r19,r2
1001eaf8:	00140ac0 	call	100140ac <__udivsi3>
1001eafc:	1021883a 	mov	r16,r2
1001eb00:	9826943a 	slli	r19,r19,16
1001eb04:	9004d43a 	srli	r2,r18,16
1001eb08:	a407383a 	mul	r3,r20,r16
1001eb0c:	9884b03a 	or	r2,r19,r2
1001eb10:	10c0052e 	bgeu	r2,r3,1001eb28 <__udivdi3+0xe4>
1001eb14:	1445883a 	add	r2,r2,r17
1001eb18:	813fffc4 	addi	r4,r16,-1
1001eb1c:	14400136 	bltu	r2,r17,1001eb24 <__udivdi3+0xe0>
1001eb20:	10c12836 	bltu	r2,r3,1001efc4 <__udivdi3+0x580>
1001eb24:	2021883a 	mov	r16,r4
1001eb28:	10e7c83a 	sub	r19,r2,r3
1001eb2c:	a80b883a 	mov	r5,r21
1001eb30:	9809883a 	mov	r4,r19
1001eb34:	00141100 	call	10014110 <__umodsi3>
1001eb38:	102d883a 	mov	r22,r2
1001eb3c:	a80b883a 	mov	r5,r21
1001eb40:	9809883a 	mov	r4,r19
1001eb44:	00140ac0 	call	100140ac <__udivsi3>
1001eb48:	b02c943a 	slli	r22,r22,16
1001eb4c:	a0a9383a 	mul	r20,r20,r2
1001eb50:	94bfffcc 	andi	r18,r18,65535
1001eb54:	b4a4b03a 	or	r18,r22,r18
1001eb58:	9500052e 	bgeu	r18,r20,1001eb70 <__udivdi3+0x12c>
1001eb5c:	8ca5883a 	add	r18,r17,r18
1001eb60:	10ffffc4 	addi	r3,r2,-1
1001eb64:	94400136 	bltu	r18,r17,1001eb6c <__udivdi3+0x128>
1001eb68:	95011436 	bltu	r18,r20,1001efbc <__udivdi3+0x578>
1001eb6c:	1805883a 	mov	r2,r3
1001eb70:	800c943a 	slli	r6,r16,16
1001eb74:	0007883a 	mov	r3,zero
1001eb78:	3084b03a 	or	r2,r6,r2
1001eb7c:	00005506 	br	1001ecd4 <__udivdi3+0x290>
1001eb80:	3000041e 	bne	r6,zero,1001eb94 <__udivdi3+0x150>
1001eb84:	000b883a 	mov	r5,zero
1001eb88:	01000044 	movi	r4,1
1001eb8c:	00140ac0 	call	100140ac <__udivsi3>
1001eb90:	1023883a 	mov	r17,r2
1001eb94:	00bfffd4 	movui	r2,65535
1001eb98:	14405f2e 	bgeu	r2,r17,1001ed18 <__udivdi3+0x2d4>
1001eb9c:	00804034 	movhi	r2,256
1001eba0:	8880f436 	bltu	r17,r2,1001ef74 <__udivdi3+0x530>
1001eba4:	8806d63a 	srli	r3,r17,24
1001eba8:	04c00604 	movi	r19,24
1001ebac:	008400b4 	movhi	r2,4098
1001ebb0:	1885883a 	add	r2,r3,r2
1001ebb4:	1097da03 	ldbu	r2,24424(r2)
1001ebb8:	14e7883a 	add	r19,r2,r19
1001ebbc:	00800804 	movi	r2,32
1001ebc0:	14c5c83a 	sub	r2,r2,r19
1001ebc4:	10005e1e 	bne	r2,zero,1001ed40 <__udivdi3+0x2fc>
1001ebc8:	8828d43a 	srli	r20,r17,16
1001ebcc:	8461c83a 	sub	r16,r16,r17
1001ebd0:	8d7fffcc 	andi	r21,r17,65535
1001ebd4:	00c00044 	movi	r3,1
1001ebd8:	8009883a 	mov	r4,r16
1001ebdc:	a00b883a 	mov	r5,r20
1001ebe0:	d8c00015 	stw	r3,0(sp)
1001ebe4:	00141100 	call	10014110 <__umodsi3>
1001ebe8:	8009883a 	mov	r4,r16
1001ebec:	a00b883a 	mov	r5,r20
1001ebf0:	1027883a 	mov	r19,r2
1001ebf4:	00140ac0 	call	100140ac <__udivsi3>
1001ebf8:	1021883a 	mov	r16,r2
1001ebfc:	9826943a 	slli	r19,r19,16
1001ec00:	9004d43a 	srli	r2,r18,16
1001ec04:	8549383a 	mul	r4,r16,r21
1001ec08:	d8c00017 	ldw	r3,0(sp)
1001ec0c:	9884b03a 	or	r2,r19,r2
1001ec10:	1100052e 	bgeu	r2,r4,1001ec28 <__udivdi3+0x1e4>
1001ec14:	1445883a 	add	r2,r2,r17
1001ec18:	817fffc4 	addi	r5,r16,-1
1001ec1c:	14400136 	bltu	r2,r17,1001ec24 <__udivdi3+0x1e0>
1001ec20:	1100eb36 	bltu	r2,r4,1001efd0 <__udivdi3+0x58c>
1001ec24:	2821883a 	mov	r16,r5
1001ec28:	1127c83a 	sub	r19,r2,r4
1001ec2c:	a00b883a 	mov	r5,r20
1001ec30:	9809883a 	mov	r4,r19
1001ec34:	d8c00015 	stw	r3,0(sp)
1001ec38:	00141100 	call	10014110 <__umodsi3>
1001ec3c:	102d883a 	mov	r22,r2
1001ec40:	a00b883a 	mov	r5,r20
1001ec44:	9809883a 	mov	r4,r19
1001ec48:	00140ac0 	call	100140ac <__udivsi3>
1001ec4c:	b02c943a 	slli	r22,r22,16
1001ec50:	156b383a 	mul	r21,r2,r21
1001ec54:	94bfffcc 	andi	r18,r18,65535
1001ec58:	b4a4b03a 	or	r18,r22,r18
1001ec5c:	d8c00017 	ldw	r3,0(sp)
1001ec60:	9540052e 	bgeu	r18,r21,1001ec78 <__udivdi3+0x234>
1001ec64:	8ca5883a 	add	r18,r17,r18
1001ec68:	113fffc4 	addi	r4,r2,-1
1001ec6c:	94400136 	bltu	r18,r17,1001ec74 <__udivdi3+0x230>
1001ec70:	9540d036 	bltu	r18,r21,1001efb4 <__udivdi3+0x570>
1001ec74:	2005883a 	mov	r2,r4
1001ec78:	800c943a 	slli	r6,r16,16
1001ec7c:	3084b03a 	or	r2,r6,r2
1001ec80:	00001406 	br	1001ecd4 <__udivdi3+0x290>
1001ec84:	29c01136 	bltu	r5,r7,1001eccc <__udivdi3+0x288>
1001ec88:	00bfffd4 	movui	r2,65535
1001ec8c:	11c01d2e 	bgeu	r2,r7,1001ed04 <__udivdi3+0x2c0>
1001ec90:	00804034 	movhi	r2,256
1001ec94:	3880ac36 	bltu	r7,r2,1001ef48 <__udivdi3+0x504>
1001ec98:	3806d63a 	srli	r3,r7,24
1001ec9c:	01000604 	movi	r4,24
1001eca0:	008400b4 	movhi	r2,4098
1001eca4:	1885883a 	add	r2,r3,r2
1001eca8:	10d7da03 	ldbu	r3,24424(r2)
1001ecac:	05800804 	movi	r22,32
1001ecb0:	1907883a 	add	r3,r3,r4
1001ecb4:	b0edc83a 	sub	r22,r22,r3
1001ecb8:	b000531e 	bne	r22,zero,1001ee08 <__udivdi3+0x3c4>
1001ecbc:	3c00a536 	bltu	r7,r16,1001ef54 <__udivdi3+0x510>
1001ecc0:	a985403a 	cmpgeu	r2,r21,r6
1001ecc4:	0007883a 	mov	r3,zero
1001ecc8:	00000206 	br	1001ecd4 <__udivdi3+0x290>
1001eccc:	0007883a 	mov	r3,zero
1001ecd0:	0005883a 	mov	r2,zero
1001ecd4:	dfc00a17 	ldw	ra,40(sp)
1001ecd8:	df000917 	ldw	fp,36(sp)
1001ecdc:	ddc00817 	ldw	r23,32(sp)
1001ece0:	dd800717 	ldw	r22,28(sp)
1001ece4:	dd400617 	ldw	r21,24(sp)
1001ece8:	dd000517 	ldw	r20,20(sp)
1001ecec:	dcc00417 	ldw	r19,16(sp)
1001ecf0:	dc800317 	ldw	r18,12(sp)
1001ecf4:	dc400217 	ldw	r17,8(sp)
1001ecf8:	dc000117 	ldw	r16,4(sp)
1001ecfc:	dec00b04 	addi	sp,sp,44
1001ed00:	f800283a 	ret
1001ed04:	38804030 	cmpltui	r2,r7,256
1001ed08:	1000951e 	bne	r2,zero,1001ef60 <__udivdi3+0x51c>
1001ed0c:	3806d23a 	srli	r3,r7,8
1001ed10:	01000204 	movi	r4,8
1001ed14:	003fe206 	br	1001eca0 <__udivdi3+0x25c>
1001ed18:	88804030 	cmpltui	r2,r17,256
1001ed1c:	10009b1e 	bne	r2,zero,1001ef8c <__udivdi3+0x548>
1001ed20:	8806d23a 	srli	r3,r17,8
1001ed24:	04c00204 	movi	r19,8
1001ed28:	003fa006 	br	1001ebac <__udivdi3+0x168>
1001ed2c:	30804030 	cmpltui	r2,r6,256
1001ed30:	10008e1e 	bne	r2,zero,1001ef6c <__udivdi3+0x528>
1001ed34:	3006d23a 	srli	r3,r6,8
1001ed38:	04c00204 	movi	r19,8
1001ed3c:	003f5a06 	br	1001eaa8 <__udivdi3+0x64>
1001ed40:	88a2983a 	sll	r17,r17,r2
1001ed44:	84ecd83a 	srl	r22,r16,r19
1001ed48:	80a0983a 	sll	r16,r16,r2
1001ed4c:	8828d43a 	srli	r20,r17,16
1001ed50:	b009883a 	mov	r4,r22
1001ed54:	ace6d83a 	srl	r19,r21,r19
1001ed58:	a00b883a 	mov	r5,r20
1001ed5c:	a8a4983a 	sll	r18,r21,r2
1001ed60:	00141100 	call	10014110 <__umodsi3>
1001ed64:	b009883a 	mov	r4,r22
1001ed68:	a00b883a 	mov	r5,r20
1001ed6c:	9c26b03a 	or	r19,r19,r16
1001ed70:	1021883a 	mov	r16,r2
1001ed74:	00140ac0 	call	100140ac <__udivsi3>
1001ed78:	102f883a 	mov	r23,r2
1001ed7c:	8d7fffcc 	andi	r21,r17,65535
1001ed80:	8020943a 	slli	r16,r16,16
1001ed84:	9804d43a 	srli	r2,r19,16
1001ed88:	aded383a 	mul	r22,r21,r23
1001ed8c:	8084b03a 	or	r2,r16,r2
1001ed90:	1580062e 	bgeu	r2,r22,1001edac <__udivdi3+0x368>
1001ed94:	1445883a 	add	r2,r2,r17
1001ed98:	b8ffffc4 	addi	r3,r23,-1
1001ed9c:	14408336 	bltu	r2,r17,1001efac <__udivdi3+0x568>
1001eda0:	1580822e 	bgeu	r2,r22,1001efac <__udivdi3+0x568>
1001eda4:	bdffff84 	addi	r23,r23,-2
1001eda8:	1445883a 	add	r2,r2,r17
1001edac:	15adc83a 	sub	r22,r2,r22
1001edb0:	a00b883a 	mov	r5,r20
1001edb4:	b009883a 	mov	r4,r22
1001edb8:	00141100 	call	10014110 <__umodsi3>
1001edbc:	1021883a 	mov	r16,r2
1001edc0:	b009883a 	mov	r4,r22
1001edc4:	a00b883a 	mov	r5,r20
1001edc8:	00140ac0 	call	100140ac <__udivsi3>
1001edcc:	8020943a 	slli	r16,r16,16
1001edd0:	a889383a 	mul	r4,r21,r2
1001edd4:	9cffffcc 	andi	r19,r19,65535
1001edd8:	84e0b03a 	or	r16,r16,r19
1001eddc:	8100062e 	bgeu	r16,r4,1001edf8 <__udivdi3+0x3b4>
1001ede0:	8461883a 	add	r16,r16,r17
1001ede4:	10ffffc4 	addi	r3,r2,-1
1001ede8:	84406c36 	bltu	r16,r17,1001ef9c <__udivdi3+0x558>
1001edec:	81006b2e 	bgeu	r16,r4,1001ef9c <__udivdi3+0x558>
1001edf0:	10bfff84 	addi	r2,r2,-2
1001edf4:	8461883a 	add	r16,r16,r17
1001edf8:	b806943a 	slli	r3,r23,16
1001edfc:	8121c83a 	sub	r16,r16,r4
1001ee00:	1886b03a 	or	r3,r3,r2
1001ee04:	003f7406 	br	1001ebd8 <__udivdi3+0x194>
1001ee08:	30f8d83a 	srl	fp,r6,r3
1001ee0c:	3d8e983a 	sll	r7,r7,r22
1001ee10:	80eed83a 	srl	r23,r16,r3
1001ee14:	a8c6d83a 	srl	r3,r21,r3
1001ee18:	e1f8b03a 	or	fp,fp,r7
1001ee1c:	e024d43a 	srli	r18,fp,16
1001ee20:	85a0983a 	sll	r16,r16,r22
1001ee24:	b809883a 	mov	r4,r23
1001ee28:	900b883a 	mov	r5,r18
1001ee2c:	1c22b03a 	or	r17,r3,r16
1001ee30:	35a8983a 	sll	r20,r6,r22
1001ee34:	00141100 	call	10014110 <__umodsi3>
1001ee38:	b809883a 	mov	r4,r23
1001ee3c:	900b883a 	mov	r5,r18
1001ee40:	1027883a 	mov	r19,r2
1001ee44:	00140ac0 	call	100140ac <__udivsi3>
1001ee48:	1021883a 	mov	r16,r2
1001ee4c:	e0ffffcc 	andi	r3,fp,65535
1001ee50:	9826943a 	slli	r19,r19,16
1001ee54:	8804d43a 	srli	r2,r17,16
1001ee58:	1c09383a 	mul	r4,r3,r16
1001ee5c:	9884b03a 	or	r2,r19,r2
1001ee60:	1100062e 	bgeu	r2,r4,1001ee7c <__udivdi3+0x438>
1001ee64:	1705883a 	add	r2,r2,fp
1001ee68:	817fffc4 	addi	r5,r16,-1
1001ee6c:	17004d36 	bltu	r2,fp,1001efa4 <__udivdi3+0x560>
1001ee70:	11004c2e 	bgeu	r2,r4,1001efa4 <__udivdi3+0x560>
1001ee74:	843fff84 	addi	r16,r16,-2
1001ee78:	1705883a 	add	r2,r2,fp
1001ee7c:	1127c83a 	sub	r19,r2,r4
1001ee80:	900b883a 	mov	r5,r18
1001ee84:	9809883a 	mov	r4,r19
1001ee88:	d8c00015 	stw	r3,0(sp)
1001ee8c:	00141100 	call	10014110 <__umodsi3>
1001ee90:	9809883a 	mov	r4,r19
1001ee94:	900b883a 	mov	r5,r18
1001ee98:	102f883a 	mov	r23,r2
1001ee9c:	00140ac0 	call	100140ac <__udivsi3>
1001eea0:	d8c00017 	ldw	r3,0(sp)
1001eea4:	b82e943a 	slli	r23,r23,16
1001eea8:	8c7fffcc 	andi	r17,r17,65535
1001eeac:	1889383a 	mul	r4,r3,r2
1001eeb0:	bc62b03a 	or	r17,r23,r17
1001eeb4:	8900062e 	bgeu	r17,r4,1001eed0 <__udivdi3+0x48c>
1001eeb8:	8f23883a 	add	r17,r17,fp
1001eebc:	10ffffc4 	addi	r3,r2,-1
1001eec0:	8f003436 	bltu	r17,fp,1001ef94 <__udivdi3+0x550>
1001eec4:	8900332e 	bgeu	r17,r4,1001ef94 <__udivdi3+0x550>
1001eec8:	10bfff84 	addi	r2,r2,-2
1001eecc:	8f23883a 	add	r17,r17,fp
1001eed0:	8020943a 	slli	r16,r16,16
1001eed4:	a17fffcc 	andi	r5,r20,65535
1001eed8:	a00cd43a 	srli	r6,r20,16
1001eedc:	8084b03a 	or	r2,r16,r2
1001eee0:	10ffffcc 	andi	r3,r2,65535
1001eee4:	1028d43a 	srli	r20,r2,16
1001eee8:	1951383a 	mul	r8,r3,r5
1001eeec:	1987383a 	mul	r3,r3,r6
1001eef0:	a14b383a 	mul	r5,r20,r5
1001eef4:	400ed43a 	srli	r7,r8,16
1001eef8:	8923c83a 	sub	r17,r17,r4
1001eefc:	1947883a 	add	r3,r3,r5
1001ef00:	38c7883a 	add	r3,r7,r3
1001ef04:	a1a9383a 	mul	r20,r20,r6
1001ef08:	1940022e 	bgeu	r3,r5,1001ef14 <__udivdi3+0x4d0>
1001ef0c:	01000074 	movhi	r4,1
1001ef10:	a129883a 	add	r20,r20,r4
1001ef14:	180cd43a 	srli	r6,r3,16
1001ef18:	3529883a 	add	r20,r6,r20
1001ef1c:	8d000836 	bltu	r17,r20,1001ef40 <__udivdi3+0x4fc>
1001ef20:	8d000226 	beq	r17,r20,1001ef2c <__udivdi3+0x4e8>
1001ef24:	0007883a 	mov	r3,zero
1001ef28:	003f6a06 	br	1001ecd4 <__udivdi3+0x290>
1001ef2c:	1806943a 	slli	r3,r3,16
1001ef30:	ad8c983a 	sll	r6,r21,r22
1001ef34:	423fffcc 	andi	r8,r8,65535
1001ef38:	1a07883a 	add	r3,r3,r8
1001ef3c:	30fff92e 	bgeu	r6,r3,1001ef24 <__udivdi3+0x4e0>
1001ef40:	10bfffc4 	addi	r2,r2,-1
1001ef44:	003ff706 	br	1001ef24 <__udivdi3+0x4e0>
1001ef48:	3806d43a 	srli	r3,r7,16
1001ef4c:	01000404 	movi	r4,16
1001ef50:	003f5306 	br	1001eca0 <__udivdi3+0x25c>
1001ef54:	0007883a 	mov	r3,zero
1001ef58:	00800044 	movi	r2,1
1001ef5c:	003f5d06 	br	1001ecd4 <__udivdi3+0x290>
1001ef60:	3807883a 	mov	r3,r7
1001ef64:	0009883a 	mov	r4,zero
1001ef68:	003f4d06 	br	1001eca0 <__udivdi3+0x25c>
1001ef6c:	3007883a 	mov	r3,r6
1001ef70:	003ecd06 	br	1001eaa8 <__udivdi3+0x64>
1001ef74:	8806d43a 	srli	r3,r17,16
1001ef78:	04c00404 	movi	r19,16
1001ef7c:	003f0b06 	br	1001ebac <__udivdi3+0x168>
1001ef80:	3006d43a 	srli	r3,r6,16
1001ef84:	04c00404 	movi	r19,16
1001ef88:	003ec706 	br	1001eaa8 <__udivdi3+0x64>
1001ef8c:	8807883a 	mov	r3,r17
1001ef90:	003f0606 	br	1001ebac <__udivdi3+0x168>
1001ef94:	1805883a 	mov	r2,r3
1001ef98:	003fcd06 	br	1001eed0 <__udivdi3+0x48c>
1001ef9c:	1805883a 	mov	r2,r3
1001efa0:	003f9506 	br	1001edf8 <__udivdi3+0x3b4>
1001efa4:	2821883a 	mov	r16,r5
1001efa8:	003fb406 	br	1001ee7c <__udivdi3+0x438>
1001efac:	182f883a 	mov	r23,r3
1001efb0:	003f7e06 	br	1001edac <__udivdi3+0x368>
1001efb4:	10bfff84 	addi	r2,r2,-2
1001efb8:	003f2f06 	br	1001ec78 <__udivdi3+0x234>
1001efbc:	10bfff84 	addi	r2,r2,-2
1001efc0:	003eeb06 	br	1001eb70 <__udivdi3+0x12c>
1001efc4:	843fff84 	addi	r16,r16,-2
1001efc8:	1445883a 	add	r2,r2,r17
1001efcc:	003ed606 	br	1001eb28 <__udivdi3+0xe4>
1001efd0:	843fff84 	addi	r16,r16,-2
1001efd4:	1445883a 	add	r2,r2,r17
1001efd8:	003f1306 	br	1001ec28 <__udivdi3+0x1e4>

1001efdc <__umoddi3>:
1001efdc:	defff404 	addi	sp,sp,-48
1001efe0:	dc400315 	stw	r17,12(sp)
1001efe4:	dc000215 	stw	r16,8(sp)
1001efe8:	dfc00b15 	stw	ra,44(sp)
1001efec:	df000a15 	stw	fp,40(sp)
1001eff0:	ddc00915 	stw	r23,36(sp)
1001eff4:	dd800815 	stw	r22,32(sp)
1001eff8:	dd400715 	stw	r21,28(sp)
1001effc:	dd000615 	stw	r20,24(sp)
1001f000:	dcc00515 	stw	r19,20(sp)
1001f004:	dc800415 	stw	r18,16(sp)
1001f008:	2823883a 	mov	r17,r5
1001f00c:	2021883a 	mov	r16,r4
1001f010:	3800701e 	bne	r7,zero,1001f1d4 <__umoddi3+0x1f8>
1001f014:	382b883a 	mov	r21,r7
1001f018:	3027883a 	mov	r19,r6
1001f01c:	2029883a 	mov	r20,r4
1001f020:	2980392e 	bgeu	r5,r6,1001f108 <__umoddi3+0x12c>
1001f024:	00bfffd4 	movui	r2,65535
1001f028:	282f883a 	mov	r23,r5
1001f02c:	11809736 	bltu	r2,r6,1001f28c <__umoddi3+0x2b0>
1001f030:	30804030 	cmpltui	r2,r6,256
1001f034:	1001231e 	bne	r2,zero,1001f4c4 <__umoddi3+0x4e8>
1001f038:	3006d23a 	srli	r3,r6,8
1001f03c:	05400204 	movi	r21,8
1001f040:	008400b4 	movhi	r2,4098
1001f044:	1885883a 	add	r2,r3,r2
1001f048:	1097da03 	ldbu	r2,24424(r2)
1001f04c:	156b883a 	add	r21,r2,r21
1001f050:	00800804 	movi	r2,32
1001f054:	1565c83a 	sub	r18,r2,r21
1001f058:	90000526 	beq	r18,zero,1001f070 <__umoddi3+0x94>
1001f05c:	8ca2983a 	sll	r17,r17,r18
1001f060:	856ad83a 	srl	r21,r16,r21
1001f064:	34a6983a 	sll	r19,r6,r18
1001f068:	84a8983a 	sll	r20,r16,r18
1001f06c:	ac6eb03a 	or	r23,r21,r17
1001f070:	982cd43a 	srli	r22,r19,16
1001f074:	b809883a 	mov	r4,r23
1001f078:	9c3fffcc 	andi	r16,r19,65535
1001f07c:	b00b883a 	mov	r5,r22
1001f080:	00141100 	call	10014110 <__umodsi3>
1001f084:	b00b883a 	mov	r5,r22
1001f088:	b809883a 	mov	r4,r23
1001f08c:	102b883a 	mov	r21,r2
1001f090:	00140ac0 	call	100140ac <__udivsi3>
1001f094:	a82a943a 	slli	r21,r21,16
1001f098:	a006d43a 	srli	r3,r20,16
1001f09c:	8085383a 	mul	r2,r16,r2
1001f0a0:	a8c6b03a 	or	r3,r21,r3
1001f0a4:	1880032e 	bgeu	r3,r2,1001f0b4 <__umoddi3+0xd8>
1001f0a8:	1cc7883a 	add	r3,r3,r19
1001f0ac:	1cc00136 	bltu	r3,r19,1001f0b4 <__umoddi3+0xd8>
1001f0b0:	18811836 	bltu	r3,r2,1001f514 <__umoddi3+0x538>
1001f0b4:	18abc83a 	sub	r21,r3,r2
1001f0b8:	b00b883a 	mov	r5,r22
1001f0bc:	a809883a 	mov	r4,r21
1001f0c0:	00141100 	call	10014110 <__umodsi3>
1001f0c4:	1023883a 	mov	r17,r2
1001f0c8:	b00b883a 	mov	r5,r22
1001f0cc:	a809883a 	mov	r4,r21
1001f0d0:	00140ac0 	call	100140ac <__udivsi3>
1001f0d4:	8822943a 	slli	r17,r17,16
1001f0d8:	8085383a 	mul	r2,r16,r2
1001f0dc:	a0ffffcc 	andi	r3,r20,65535
1001f0e0:	88c6b03a 	or	r3,r17,r3
1001f0e4:	1880042e 	bgeu	r3,r2,1001f0f8 <__umoddi3+0x11c>
1001f0e8:	1cc7883a 	add	r3,r3,r19
1001f0ec:	1cc00236 	bltu	r3,r19,1001f0f8 <__umoddi3+0x11c>
1001f0f0:	1880012e 	bgeu	r3,r2,1001f0f8 <__umoddi3+0x11c>
1001f0f4:	1cc7883a 	add	r3,r3,r19
1001f0f8:	1885c83a 	sub	r2,r3,r2
1001f0fc:	1484d83a 	srl	r2,r2,r18
1001f100:	0007883a 	mov	r3,zero
1001f104:	00003606 	br	1001f1e0 <__umoddi3+0x204>
1001f108:	3000041e 	bne	r6,zero,1001f11c <__umoddi3+0x140>
1001f10c:	000b883a 	mov	r5,zero
1001f110:	01000044 	movi	r4,1
1001f114:	00140ac0 	call	100140ac <__udivsi3>
1001f118:	1027883a 	mov	r19,r2
1001f11c:	00bfffd4 	movui	r2,65535
1001f120:	14c0552e 	bgeu	r2,r19,1001f278 <__umoddi3+0x29c>
1001f124:	00804034 	movhi	r2,256
1001f128:	9880ee36 	bltu	r19,r2,1001f4e4 <__umoddi3+0x508>
1001f12c:	9806d63a 	srli	r3,r19,24
1001f130:	05400604 	movi	r21,24
1001f134:	008400b4 	movhi	r2,4098
1001f138:	1885883a 	add	r2,r3,r2
1001f13c:	1097da03 	ldbu	r2,24424(r2)
1001f140:	156b883a 	add	r21,r2,r21
1001f144:	00800804 	movi	r2,32
1001f148:	1565c83a 	sub	r18,r2,r21
1001f14c:	9000ab1e 	bne	r18,zero,1001f3fc <__umoddi3+0x420>
1001f150:	982cd43a 	srli	r22,r19,16
1001f154:	8ce3c83a 	sub	r17,r17,r19
1001f158:	9d7fffcc 	andi	r21,r19,65535
1001f15c:	b00b883a 	mov	r5,r22
1001f160:	8809883a 	mov	r4,r17
1001f164:	00141100 	call	10014110 <__umodsi3>
1001f168:	b00b883a 	mov	r5,r22
1001f16c:	8809883a 	mov	r4,r17
1001f170:	1021883a 	mov	r16,r2
1001f174:	00140ac0 	call	100140ac <__udivsi3>
1001f178:	8020943a 	slli	r16,r16,16
1001f17c:	a006d43a 	srli	r3,r20,16
1001f180:	1545383a 	mul	r2,r2,r21
1001f184:	80c6b03a 	or	r3,r16,r3
1001f188:	1880042e 	bgeu	r3,r2,1001f19c <__umoddi3+0x1c0>
1001f18c:	1cc7883a 	add	r3,r3,r19
1001f190:	1cc00236 	bltu	r3,r19,1001f19c <__umoddi3+0x1c0>
1001f194:	1880012e 	bgeu	r3,r2,1001f19c <__umoddi3+0x1c0>
1001f198:	1cc7883a 	add	r3,r3,r19
1001f19c:	18a1c83a 	sub	r16,r3,r2
1001f1a0:	b00b883a 	mov	r5,r22
1001f1a4:	8009883a 	mov	r4,r16
1001f1a8:	00141100 	call	10014110 <__umodsi3>
1001f1ac:	1023883a 	mov	r17,r2
1001f1b0:	b00b883a 	mov	r5,r22
1001f1b4:	8009883a 	mov	r4,r16
1001f1b8:	00140ac0 	call	100140ac <__udivsi3>
1001f1bc:	8822943a 	slli	r17,r17,16
1001f1c0:	1545383a 	mul	r2,r2,r21
1001f1c4:	a53fffcc 	andi	r20,r20,65535
1001f1c8:	8d06b03a 	or	r3,r17,r20
1001f1cc:	18bfca2e 	bgeu	r3,r2,1001f0f8 <__umoddi3+0x11c>
1001f1d0:	003fc506 	br	1001f0e8 <__umoddi3+0x10c>
1001f1d4:	2005883a 	mov	r2,r4
1001f1d8:	29c00d2e 	bgeu	r5,r7,1001f210 <__umoddi3+0x234>
1001f1dc:	2807883a 	mov	r3,r5
1001f1e0:	dfc00b17 	ldw	ra,44(sp)
1001f1e4:	df000a17 	ldw	fp,40(sp)
1001f1e8:	ddc00917 	ldw	r23,36(sp)
1001f1ec:	dd800817 	ldw	r22,32(sp)
1001f1f0:	dd400717 	ldw	r21,28(sp)
1001f1f4:	dd000617 	ldw	r20,24(sp)
1001f1f8:	dcc00517 	ldw	r19,20(sp)
1001f1fc:	dc800417 	ldw	r18,16(sp)
1001f200:	dc400317 	ldw	r17,12(sp)
1001f204:	dc000217 	ldw	r16,8(sp)
1001f208:	dec00c04 	addi	sp,sp,48
1001f20c:	f800283a 	ret
1001f210:	013fffd4 	movui	r4,65535
1001f214:	2807883a 	mov	r3,r5
1001f218:	21c0122e 	bgeu	r4,r7,1001f264 <__umoddi3+0x288>
1001f21c:	01004034 	movhi	r4,256
1001f220:	3900ad36 	bltu	r7,r4,1001f4d8 <__umoddi3+0x4fc>
1001f224:	3810d63a 	srli	r8,r7,24
1001f228:	01400604 	movi	r5,24
1001f22c:	010400b4 	movhi	r4,4098
1001f230:	4109883a 	add	r4,r8,r4
1001f234:	2517da03 	ldbu	r20,24424(r4)
1001f238:	04c00804 	movi	r19,32
1001f23c:	a169883a 	add	r20,r20,r5
1001f240:	9d27c83a 	sub	r19,r19,r20
1001f244:	9800161e 	bne	r19,zero,1001f2a0 <__umoddi3+0x2c4>
1001f248:	3c400136 	bltu	r7,r17,1001f250 <__umoddi3+0x274>
1001f24c:	81bfe436 	bltu	r16,r6,1001f1e0 <__umoddi3+0x204>
1001f250:	8185c83a 	sub	r2,r16,r6
1001f254:	89cfc83a 	sub	r7,r17,r7
1001f258:	8087803a 	cmpltu	r3,r16,r2
1001f25c:	38c7c83a 	sub	r3,r7,r3
1001f260:	003fdf06 	br	1001f1e0 <__umoddi3+0x204>
1001f264:	39004030 	cmpltui	r4,r7,256
1001f268:	2000981e 	bne	r4,zero,1001f4cc <__umoddi3+0x4f0>
1001f26c:	3810d23a 	srli	r8,r7,8
1001f270:	01400204 	movi	r5,8
1001f274:	003fed06 	br	1001f22c <__umoddi3+0x250>
1001f278:	98804030 	cmpltui	r2,r19,256
1001f27c:	10009c1e 	bne	r2,zero,1001f4f0 <__umoddi3+0x514>
1001f280:	9806d23a 	srli	r3,r19,8
1001f284:	05400204 	movi	r21,8
1001f288:	003faa06 	br	1001f134 <__umoddi3+0x158>
1001f28c:	00804034 	movhi	r2,256
1001f290:	30809936 	bltu	r6,r2,1001f4f8 <__umoddi3+0x51c>
1001f294:	3006d63a 	srli	r3,r6,24
1001f298:	05400604 	movi	r21,24
1001f29c:	003f6806 	br	1001f040 <__umoddi3+0x64>
1001f2a0:	3504d83a 	srl	r2,r6,r20
1001f2a4:	3cce983a 	sll	r7,r7,r19
1001f2a8:	8d38d83a 	srl	fp,r17,r20
1001f2ac:	8ce2983a 	sll	r17,r17,r19
1001f2b0:	11eeb03a 	or	r23,r2,r7
1001f2b4:	b82cd43a 	srli	r22,r23,16
1001f2b8:	8504d83a 	srl	r2,r16,r20
1001f2bc:	e009883a 	mov	r4,fp
1001f2c0:	b00b883a 	mov	r5,r22
1001f2c4:	34e4983a 	sll	r18,r6,r19
1001f2c8:	1462b03a 	or	r17,r2,r17
1001f2cc:	00141100 	call	10014110 <__umodsi3>
1001f2d0:	e009883a 	mov	r4,fp
1001f2d4:	b00b883a 	mov	r5,r22
1001f2d8:	102b883a 	mov	r21,r2
1001f2dc:	00140ac0 	call	100140ac <__udivsi3>
1001f2e0:	100d883a 	mov	r6,r2
1001f2e4:	b8ffffcc 	andi	r3,r23,65535
1001f2e8:	a82a943a 	slli	r21,r21,16
1001f2ec:	8804d43a 	srli	r2,r17,16
1001f2f0:	1989383a 	mul	r4,r3,r6
1001f2f4:	84e0983a 	sll	r16,r16,r19
1001f2f8:	a884b03a 	or	r2,r21,r2
1001f2fc:	1100062e 	bgeu	r2,r4,1001f318 <__umoddi3+0x33c>
1001f300:	15c5883a 	add	r2,r2,r23
1001f304:	317fffc4 	addi	r5,r6,-1
1001f308:	15c08036 	bltu	r2,r23,1001f50c <__umoddi3+0x530>
1001f30c:	11007f2e 	bgeu	r2,r4,1001f50c <__umoddi3+0x530>
1001f310:	31bfff84 	addi	r6,r6,-2
1001f314:	15c5883a 	add	r2,r2,r23
1001f318:	112bc83a 	sub	r21,r2,r4
1001f31c:	b00b883a 	mov	r5,r22
1001f320:	a809883a 	mov	r4,r21
1001f324:	d9800115 	stw	r6,4(sp)
1001f328:	d8c00015 	stw	r3,0(sp)
1001f32c:	00141100 	call	10014110 <__umodsi3>
1001f330:	b00b883a 	mov	r5,r22
1001f334:	a809883a 	mov	r4,r21
1001f338:	1039883a 	mov	fp,r2
1001f33c:	00140ac0 	call	100140ac <__udivsi3>
1001f340:	d8c00017 	ldw	r3,0(sp)
1001f344:	e038943a 	slli	fp,fp,16
1001f348:	8c7fffcc 	andi	r17,r17,65535
1001f34c:	1887383a 	mul	r3,r3,r2
1001f350:	e462b03a 	or	r17,fp,r17
1001f354:	d9800117 	ldw	r6,4(sp)
1001f358:	88c0062e 	bgeu	r17,r3,1001f374 <__umoddi3+0x398>
1001f35c:	8de3883a 	add	r17,r17,r23
1001f360:	113fffc4 	addi	r4,r2,-1
1001f364:	8dc06736 	bltu	r17,r23,1001f504 <__umoddi3+0x528>
1001f368:	88c0662e 	bgeu	r17,r3,1001f504 <__umoddi3+0x528>
1001f36c:	10bfff84 	addi	r2,r2,-2
1001f370:	8de3883a 	add	r17,r17,r23
1001f374:	300a943a 	slli	r5,r6,16
1001f378:	9010d43a 	srli	r8,r18,16
1001f37c:	91bfffcc 	andi	r6,r18,65535
1001f380:	2888b03a 	or	r4,r5,r2
1001f384:	21ffffcc 	andi	r7,r4,65535
1001f388:	2008d43a 	srli	r4,r4,16
1001f38c:	300b883a 	mov	r5,r6
1001f390:	398d383a 	mul	r6,r7,r6
1001f394:	214b383a 	mul	r5,r4,r5
1001f398:	3a0f383a 	mul	r7,r7,r8
1001f39c:	3004d43a 	srli	r2,r6,16
1001f3a0:	88c7c83a 	sub	r3,r17,r3
1001f3a4:	394f883a 	add	r7,r7,r5
1001f3a8:	11c5883a 	add	r2,r2,r7
1001f3ac:	2209383a 	mul	r4,r4,r8
1001f3b0:	1140022e 	bgeu	r2,r5,1001f3bc <__umoddi3+0x3e0>
1001f3b4:	01400074 	movhi	r5,1
1001f3b8:	2149883a 	add	r4,r4,r5
1001f3bc:	100ad43a 	srli	r5,r2,16
1001f3c0:	1004943a 	slli	r2,r2,16
1001f3c4:	31bfffcc 	andi	r6,r6,65535
1001f3c8:	2909883a 	add	r4,r5,r4
1001f3cc:	1185883a 	add	r2,r2,r6
1001f3d0:	19003636 	bltu	r3,r4,1001f4ac <__umoddi3+0x4d0>
1001f3d4:	19003426 	beq	r3,r4,1001f4a8 <__umoddi3+0x4cc>
1001f3d8:	8085c83a 	sub	r2,r16,r2
1001f3dc:	80a1803a 	cmpltu	r16,r16,r2
1001f3e0:	1907c83a 	sub	r3,r3,r4
1001f3e4:	1c07c83a 	sub	r3,r3,r16
1001f3e8:	1d20983a 	sll	r16,r3,r20
1001f3ec:	14c4d83a 	srl	r2,r2,r19
1001f3f0:	1cc6d83a 	srl	r3,r3,r19
1001f3f4:	8084b03a 	or	r2,r16,r2
1001f3f8:	003f7906 	br	1001f1e0 <__umoddi3+0x204>
1001f3fc:	9ca6983a 	sll	r19,r19,r18
1001f400:	8d68d83a 	srl	r20,r17,r21
1001f404:	856ad83a 	srl	r21,r16,r21
1001f408:	982cd43a 	srli	r22,r19,16
1001f40c:	a009883a 	mov	r4,r20
1001f410:	8ca2983a 	sll	r17,r17,r18
1001f414:	b00b883a 	mov	r5,r22
1001f418:	00141100 	call	10014110 <__umodsi3>
1001f41c:	a009883a 	mov	r4,r20
1001f420:	b00b883a 	mov	r5,r22
1001f424:	ac6eb03a 	or	r23,r21,r17
1001f428:	1023883a 	mov	r17,r2
1001f42c:	00140ac0 	call	100140ac <__udivsi3>
1001f430:	9d7fffcc 	andi	r21,r19,65535
1001f434:	8822943a 	slli	r17,r17,16
1001f438:	b806d43a 	srli	r3,r23,16
1001f43c:	a885383a 	mul	r2,r21,r2
1001f440:	84a8983a 	sll	r20,r16,r18
1001f444:	88c6b03a 	or	r3,r17,r3
1001f448:	1880042e 	bgeu	r3,r2,1001f45c <__umoddi3+0x480>
1001f44c:	1cc7883a 	add	r3,r3,r19
1001f450:	1cc00236 	bltu	r3,r19,1001f45c <__umoddi3+0x480>
1001f454:	1880012e 	bgeu	r3,r2,1001f45c <__umoddi3+0x480>
1001f458:	1cc7883a 	add	r3,r3,r19
1001f45c:	18a3c83a 	sub	r17,r3,r2
1001f460:	8809883a 	mov	r4,r17
1001f464:	b00b883a 	mov	r5,r22
1001f468:	00141100 	call	10014110 <__umodsi3>
1001f46c:	1021883a 	mov	r16,r2
1001f470:	8809883a 	mov	r4,r17
1001f474:	b00b883a 	mov	r5,r22
1001f478:	00140ac0 	call	100140ac <__udivsi3>
1001f47c:	8022943a 	slli	r17,r16,16
1001f480:	a885383a 	mul	r2,r21,r2
1001f484:	bdffffcc 	andi	r23,r23,65535
1001f488:	8de2b03a 	or	r17,r17,r23
1001f48c:	8880042e 	bgeu	r17,r2,1001f4a0 <__umoddi3+0x4c4>
1001f490:	8ce3883a 	add	r17,r17,r19
1001f494:	8cc00236 	bltu	r17,r19,1001f4a0 <__umoddi3+0x4c4>
1001f498:	8880012e 	bgeu	r17,r2,1001f4a0 <__umoddi3+0x4c4>
1001f49c:	8ce3883a 	add	r17,r17,r19
1001f4a0:	88a3c83a 	sub	r17,r17,r2
1001f4a4:	003f2d06 	br	1001f15c <__umoddi3+0x180>
1001f4a8:	80bfcb2e 	bgeu	r16,r2,1001f3d8 <__umoddi3+0x3fc>
1001f4ac:	14a5c83a 	sub	r18,r2,r18
1001f4b0:	1485803a 	cmpltu	r2,r2,r18
1001f4b4:	15c5883a 	add	r2,r2,r23
1001f4b8:	2089c83a 	sub	r4,r4,r2
1001f4bc:	9005883a 	mov	r2,r18
1001f4c0:	003fc506 	br	1001f3d8 <__umoddi3+0x3fc>
1001f4c4:	3007883a 	mov	r3,r6
1001f4c8:	003edd06 	br	1001f040 <__umoddi3+0x64>
1001f4cc:	3811883a 	mov	r8,r7
1001f4d0:	000b883a 	mov	r5,zero
1001f4d4:	003f5506 	br	1001f22c <__umoddi3+0x250>
1001f4d8:	3810d43a 	srli	r8,r7,16
1001f4dc:	01400404 	movi	r5,16
1001f4e0:	003f5206 	br	1001f22c <__umoddi3+0x250>
1001f4e4:	9806d43a 	srli	r3,r19,16
1001f4e8:	05400404 	movi	r21,16
1001f4ec:	003f1106 	br	1001f134 <__umoddi3+0x158>
1001f4f0:	9807883a 	mov	r3,r19
1001f4f4:	003f0f06 	br	1001f134 <__umoddi3+0x158>
1001f4f8:	3006d43a 	srli	r3,r6,16
1001f4fc:	05400404 	movi	r21,16
1001f500:	003ecf06 	br	1001f040 <__umoddi3+0x64>
1001f504:	2005883a 	mov	r2,r4
1001f508:	003f9a06 	br	1001f374 <__umoddi3+0x398>
1001f50c:	280d883a 	mov	r6,r5
1001f510:	003f8106 	br	1001f318 <__umoddi3+0x33c>
1001f514:	1cc7883a 	add	r3,r3,r19
1001f518:	003ee606 	br	1001f0b4 <__umoddi3+0xd8>

1001f51c <__adddf3>:
1001f51c:	02000434 	movhi	r8,16
1001f520:	defffb04 	addi	sp,sp,-20
1001f524:	423fffc4 	addi	r8,r8,-1
1001f528:	2a12703a 	and	r9,r5,r8
1001f52c:	3a06703a 	and	r3,r7,r8
1001f530:	3804d53a 	srli	r2,r7,20
1001f534:	dc000015 	stw	r16,0(sp)
1001f538:	2820d53a 	srli	r16,r5,20
1001f53c:	2016d77a 	srli	r11,r4,29
1001f540:	3014d77a 	srli	r10,r6,29
1001f544:	280ad7fa 	srli	r5,r5,31
1001f548:	481290fa 	slli	r9,r9,3
1001f54c:	180690fa 	slli	r3,r3,3
1001f550:	380ed7fa 	srli	r7,r7,31
1001f554:	dc400115 	stw	r17,4(sp)
1001f558:	8401ffcc 	andi	r16,r16,2047
1001f55c:	1081ffcc 	andi	r2,r2,2047
1001f560:	dfc00415 	stw	ra,16(sp)
1001f564:	dcc00315 	stw	r19,12(sp)
1001f568:	dc800215 	stw	r18,8(sp)
1001f56c:	5a52b03a 	or	r9,r11,r9
1001f570:	50c6b03a 	or	r3,r10,r3
1001f574:	2823883a 	mov	r17,r5
1001f578:	201890fa 	slli	r12,r4,3
1001f57c:	301690fa 	slli	r11,r6,3
1001f580:	8095c83a 	sub	r10,r16,r2
1001f584:	29c06a26 	beq	r5,r7,1001f730 <__adddf3+0x214>
1001f588:	0280590e 	bge	zero,r10,1001f6f0 <__adddf3+0x1d4>
1001f58c:	10007c26 	beq	r2,zero,1001f780 <__adddf3+0x264>
1001f590:	8081ffd8 	cmpnei	r2,r16,2047
1001f594:	10010726 	beq	r2,zero,1001f9b4 <__adddf3+0x498>
1001f598:	18c02034 	orhi	r3,r3,128
1001f59c:	50800e48 	cmpgei	r2,r10,57
1001f5a0:	1000ed1e 	bne	r2,zero,1001f958 <__adddf3+0x43c>
1001f5a4:	50800808 	cmpgei	r2,r10,32
1001f5a8:	1001541e 	bne	r2,zero,1001fafc <__adddf3+0x5e0>
1001f5ac:	01000804 	movi	r4,32
1001f5b0:	2289c83a 	sub	r4,r4,r10
1001f5b4:	1926983a 	sll	r19,r3,r4
1001f5b8:	5a84d83a 	srl	r2,r11,r10
1001f5bc:	5908983a 	sll	r4,r11,r4
1001f5c0:	1a86d83a 	srl	r3,r3,r10
1001f5c4:	98a6b03a 	or	r19,r19,r2
1001f5c8:	2016c03a 	cmpne	r11,r4,zero
1001f5cc:	9ae6b03a 	or	r19,r19,r11
1001f5d0:	48d3c83a 	sub	r9,r9,r3
1001f5d4:	64e7c83a 	sub	r19,r12,r19
1001f5d8:	64c9803a 	cmpltu	r4,r12,r19
1001f5dc:	4909c83a 	sub	r4,r9,r4
1001f5e0:	2080202c 	andhi	r2,r4,128
1001f5e4:	10008726 	beq	r2,zero,1001f804 <__adddf3+0x2e8>
1001f5e8:	02402034 	movhi	r9,128
1001f5ec:	4a7fffc4 	addi	r9,r9,-1
1001f5f0:	2264703a 	and	r18,r4,r9
1001f5f4:	9000cf26 	beq	r18,zero,1001f934 <__adddf3+0x418>
1001f5f8:	9009883a 	mov	r4,r18
1001f5fc:	0021bf40 	call	10021bf4 <__clzsi2>
1001f600:	10fffe04 	addi	r3,r2,-8
1001f604:	01000804 	movi	r4,32
1001f608:	20c9c83a 	sub	r4,r4,r3
1001f60c:	990ad83a 	srl	r5,r19,r4
1001f610:	90c8983a 	sll	r4,r18,r3
1001f614:	98e6983a 	sll	r19,r19,r3
1001f618:	2908b03a 	or	r4,r5,r4
1001f61c:	1c00be16 	blt	r3,r16,1001f918 <__adddf3+0x3fc>
1001f620:	1c21c83a 	sub	r16,r3,r16
1001f624:	81400044 	addi	r5,r16,1
1001f628:	28800808 	cmpgei	r2,r5,32
1001f62c:	10011b1e 	bne	r2,zero,1001fa9c <__adddf3+0x580>
1001f630:	00800804 	movi	r2,32
1001f634:	1145c83a 	sub	r2,r2,r5
1001f638:	9946d83a 	srl	r3,r19,r5
1001f63c:	98a6983a 	sll	r19,r19,r2
1001f640:	2084983a 	sll	r2,r4,r2
1001f644:	2148d83a 	srl	r4,r4,r5
1001f648:	9826c03a 	cmpne	r19,r19,zero
1001f64c:	10c4b03a 	or	r2,r2,r3
1001f650:	14e6b03a 	or	r19,r2,r19
1001f654:	0021883a 	mov	r16,zero
1001f658:	988001cc 	andi	r2,r19,7
1001f65c:	10000726 	beq	r2,zero,1001f67c <__adddf3+0x160>
1001f660:	988003cc 	andi	r2,r19,15
1001f664:	10800120 	cmpeqi	r2,r2,4
1001f668:	1000041e 	bne	r2,zero,1001f67c <__adddf3+0x160>
1001f66c:	99400104 	addi	r5,r19,4
1001f670:	2ce7803a 	cmpltu	r19,r5,r19
1001f674:	24c9883a 	add	r4,r4,r19
1001f678:	2827883a 	mov	r19,r5
1001f67c:	2080202c 	andhi	r2,r4,128
1001f680:	10006226 	beq	r2,zero,1001f80c <__adddf3+0x2f0>
1001f684:	84000044 	addi	r16,r16,1
1001f688:	8081ffe0 	cmpeqi	r2,r16,2047
1001f68c:	8401ffcc 	andi	r16,r16,2047
1001f690:	1000731e 	bne	r2,zero,1001f860 <__adddf3+0x344>
1001f694:	017fe034 	movhi	r5,65408
1001f698:	297fffc4 	addi	r5,r5,-1
1001f69c:	214a703a 	and	r5,r4,r5
1001f6a0:	2804977a 	slli	r2,r5,29
1001f6a4:	280a927a 	slli	r5,r5,9
1001f6a8:	9826d0fa 	srli	r19,r19,3
1001f6ac:	2808d33a 	srli	r4,r5,12
1001f6b0:	14c4b03a 	or	r2,r2,r19
1001f6b4:	8020953a 	slli	r16,r16,20
1001f6b8:	00c00434 	movhi	r3,16
1001f6bc:	8c403fcc 	andi	r17,r17,255
1001f6c0:	882297fa 	slli	r17,r17,31
1001f6c4:	18ffffc4 	addi	r3,r3,-1
1001f6c8:	20c6703a 	and	r3,r4,r3
1001f6cc:	1c06b03a 	or	r3,r3,r16
1001f6d0:	1c46b03a 	or	r3,r3,r17
1001f6d4:	dfc00417 	ldw	ra,16(sp)
1001f6d8:	dcc00317 	ldw	r19,12(sp)
1001f6dc:	dc800217 	ldw	r18,8(sp)
1001f6e0:	dc400117 	ldw	r17,4(sp)
1001f6e4:	dc000017 	ldw	r16,0(sp)
1001f6e8:	dec00504 	addi	sp,sp,20
1001f6ec:	f800283a 	ret
1001f6f0:	50002b1e 	bne	r10,zero,1001f7a0 <__adddf3+0x284>
1001f6f4:	80800044 	addi	r2,r16,1
1001f6f8:	1081ff8c 	andi	r2,r2,2046
1001f6fc:	1000a11e 	bne	r2,zero,1001f984 <__adddf3+0x468>
1001f700:	4b0ab03a 	or	r5,r9,r12
1001f704:	1ac4b03a 	or	r2,r3,r11
1001f708:	80015c1e 	bne	r16,zero,1001fc7c <__adddf3+0x760>
1001f70c:	28012826 	beq	r5,zero,1001fbb0 <__adddf3+0x694>
1001f710:	1001671e 	bne	r2,zero,1001fcb0 <__adddf3+0x794>
1001f714:	4826977a 	slli	r19,r9,29
1001f718:	00c80034 	movhi	r3,8192
1001f71c:	18ffffc4 	addi	r3,r3,-1
1001f720:	20c4703a 	and	r2,r4,r3
1001f724:	9884b03a 	or	r2,r19,r2
1001f728:	4812d0fa 	srli	r9,r9,3
1001f72c:	00003d06 	br	1001f824 <__adddf3+0x308>
1001f730:	02804f0e 	bge	zero,r10,1001f870 <__adddf3+0x354>
1001f734:	10002426 	beq	r2,zero,1001f7c8 <__adddf3+0x2ac>
1001f738:	8081ffd8 	cmpnei	r2,r16,2047
1001f73c:	10009d26 	beq	r2,zero,1001f9b4 <__adddf3+0x498>
1001f740:	18c02034 	orhi	r3,r3,128
1001f744:	50800e48 	cmpgei	r2,r10,57
1001f748:	10003b1e 	bne	r2,zero,1001f838 <__adddf3+0x31c>
1001f74c:	50800808 	cmpgei	r2,r10,32
1001f750:	10010326 	beq	r2,zero,1001fb60 <__adddf3+0x644>
1001f754:	54fff804 	addi	r19,r10,-32
1001f758:	51000820 	cmpeqi	r4,r10,32
1001f75c:	1cc4d83a 	srl	r2,r3,r19
1001f760:	2000041e 	bne	r4,zero,1001f774 <__adddf3+0x258>
1001f764:	01001004 	movi	r4,64
1001f768:	2295c83a 	sub	r10,r4,r10
1001f76c:	1a86983a 	sll	r3,r3,r10
1001f770:	58d6b03a 	or	r11,r11,r3
1001f774:	5826c03a 	cmpne	r19,r11,zero
1001f778:	98a6b03a 	or	r19,r19,r2
1001f77c:	00003006 	br	1001f840 <__adddf3+0x324>
1001f780:	1ac4b03a 	or	r2,r3,r11
1001f784:	10007726 	beq	r2,zero,1001f964 <__adddf3+0x448>
1001f788:	50bfffc4 	addi	r2,r10,-1
1001f78c:	10011926 	beq	r2,zero,1001fbf4 <__adddf3+0x6d8>
1001f790:	5281ffd8 	cmpnei	r10,r10,2047
1001f794:	50012026 	beq	r10,zero,1001fc18 <__adddf3+0x6fc>
1001f798:	1015883a 	mov	r10,r2
1001f79c:	003f7f06 	br	1001f59c <__adddf3+0x80>
1001f7a0:	1409c83a 	sub	r4,r2,r16
1001f7a4:	8000a61e 	bne	r16,zero,1001fa40 <__adddf3+0x524>
1001f7a8:	4b0ab03a 	or	r5,r9,r12
1001f7ac:	2800f726 	beq	r5,zero,1001fb8c <__adddf3+0x670>
1001f7b0:	217fffc4 	addi	r5,r4,-1
1001f7b4:	28017f26 	beq	r5,zero,1001fdb4 <__adddf3+0x898>
1001f7b8:	2101ffd8 	cmpnei	r4,r4,2047
1001f7bc:	2001a326 	beq	r4,zero,1001fe4c <__adddf3+0x930>
1001f7c0:	2809883a 	mov	r4,r5
1001f7c4:	0000a106 	br	1001fa4c <__adddf3+0x530>
1001f7c8:	1ac4b03a 	or	r2,r3,r11
1001f7cc:	10006526 	beq	r2,zero,1001f964 <__adddf3+0x448>
1001f7d0:	50bfffc4 	addi	r2,r10,-1
1001f7d4:	10000426 	beq	r2,zero,1001f7e8 <__adddf3+0x2cc>
1001f7d8:	5281ffd8 	cmpnei	r10,r10,2047
1001f7dc:	50014326 	beq	r10,zero,1001fcec <__adddf3+0x7d0>
1001f7e0:	1015883a 	mov	r10,r2
1001f7e4:	003fd706 	br	1001f744 <__adddf3+0x228>
1001f7e8:	62e7883a 	add	r19,r12,r11
1001f7ec:	48d3883a 	add	r9,r9,r3
1001f7f0:	9b09803a 	cmpltu	r4,r19,r12
1001f7f4:	4909883a 	add	r4,r9,r4
1001f7f8:	2080202c 	andhi	r2,r4,128
1001f7fc:	1000b41e 	bne	r2,zero,1001fad0 <__adddf3+0x5b4>
1001f800:	04000044 	movi	r16,1
1001f804:	988001cc 	andi	r2,r19,7
1001f808:	103f951e 	bne	r2,zero,1001f660 <__adddf3+0x144>
1001f80c:	9826d0fa 	srli	r19,r19,3
1001f810:	2004977a 	slli	r2,r4,29
1001f814:	2012d0fa 	srli	r9,r4,3
1001f818:	9884b03a 	or	r2,r19,r2
1001f81c:	80c1ffe0 	cmpeqi	r3,r16,2047
1001f820:	1800351e 	bne	r3,zero,1001f8f8 <__adddf3+0x3dc>
1001f824:	01000434 	movhi	r4,16
1001f828:	213fffc4 	addi	r4,r4,-1
1001f82c:	4908703a 	and	r4,r9,r4
1001f830:	8401ffcc 	andi	r16,r16,2047
1001f834:	003f9f06 	br	1001f6b4 <__adddf3+0x198>
1001f838:	1ac8b03a 	or	r4,r3,r11
1001f83c:	2026c03a 	cmpne	r19,r4,zero
1001f840:	9b27883a 	add	r19,r19,r12
1001f844:	9b09803a 	cmpltu	r4,r19,r12
1001f848:	2249883a 	add	r4,r4,r9
1001f84c:	2080202c 	andhi	r2,r4,128
1001f850:	103fec26 	beq	r2,zero,1001f804 <__adddf3+0x2e8>
1001f854:	84000044 	addi	r16,r16,1
1001f858:	8081ffe0 	cmpeqi	r2,r16,2047
1001f85c:	10009d26 	beq	r2,zero,1001fad4 <__adddf3+0x5b8>
1001f860:	0401ffc4 	movi	r16,2047
1001f864:	0009883a 	mov	r4,zero
1001f868:	0005883a 	mov	r2,zero
1001f86c:	003f9106 	br	1001f6b4 <__adddf3+0x198>
1001f870:	5000571e 	bne	r10,zero,1001f9d0 <__adddf3+0x4b4>
1001f874:	80800044 	addi	r2,r16,1
1001f878:	1141ff8c 	andi	r5,r2,2046
1001f87c:	2800ed1e 	bne	r5,zero,1001fc34 <__adddf3+0x718>
1001f880:	4b04b03a 	or	r2,r9,r12
1001f884:	8000a826 	beq	r16,zero,1001fb28 <__adddf3+0x60c>
1001f888:	10010226 	beq	r2,zero,1001fc94 <__adddf3+0x778>
1001f88c:	1ad6b03a 	or	r11,r3,r11
1001f890:	480a977a 	slli	r5,r9,29
1001f894:	4812d0fa 	srli	r9,r9,3
1001f898:	58015f26 	beq	r11,zero,1001fe18 <__adddf3+0x8fc>
1001f89c:	02080034 	movhi	r8,8192
1001f8a0:	423fffc4 	addi	r8,r8,-1
1001f8a4:	2204703a 	and	r2,r4,r8
1001f8a8:	4900022c 	andhi	r4,r9,8
1001f8ac:	114ab03a 	or	r5,r2,r5
1001f8b0:	20000826 	beq	r4,zero,1001f8d4 <__adddf3+0x3b8>
1001f8b4:	1808d0fa 	srli	r4,r3,3
1001f8b8:	2080022c 	andhi	r2,r4,8
1001f8bc:	1000051e 	bne	r2,zero,1001f8d4 <__adddf3+0x3b8>
1001f8c0:	1806977a 	slli	r3,r3,29
1001f8c4:	3204703a 	and	r2,r6,r8
1001f8c8:	3823883a 	mov	r17,r7
1001f8cc:	10cab03a 	or	r5,r2,r3
1001f8d0:	2013883a 	mov	r9,r4
1001f8d4:	2804d77a 	srli	r2,r5,29
1001f8d8:	480890fa 	slli	r4,r9,3
1001f8dc:	00c80034 	movhi	r3,8192
1001f8e0:	18ffffc4 	addi	r3,r3,-1
1001f8e4:	1108b03a 	or	r4,r2,r4
1001f8e8:	2004977a 	slli	r2,r4,29
1001f8ec:	2012d0fa 	srli	r9,r4,3
1001f8f0:	28ca703a 	and	r5,r5,r3
1001f8f4:	1144b03a 	or	r2,r2,r5
1001f8f8:	4886b03a 	or	r3,r9,r2
1001f8fc:	18016b26 	beq	r3,zero,1001feac <__adddf3+0x990>
1001f900:	00c00434 	movhi	r3,16
1001f904:	49000234 	orhi	r4,r9,8
1001f908:	18ffffc4 	addi	r3,r3,-1
1001f90c:	20c8703a 	and	r4,r4,r3
1001f910:	0401ffc4 	movi	r16,2047
1001f914:	003f6706 	br	1001f6b4 <__adddf3+0x198>
1001f918:	017fe034 	movhi	r5,65408
1001f91c:	297fffc4 	addi	r5,r5,-1
1001f920:	988001cc 	andi	r2,r19,7
1001f924:	80e1c83a 	sub	r16,r16,r3
1001f928:	2148703a 	and	r4,r4,r5
1001f92c:	103f4c1e 	bne	r2,zero,1001f660 <__adddf3+0x144>
1001f930:	003fb606 	br	1001f80c <__adddf3+0x2f0>
1001f934:	9809883a 	mov	r4,r19
1001f938:	0021bf40 	call	10021bf4 <__clzsi2>
1001f93c:	10c00604 	addi	r3,r2,24
1001f940:	19000808 	cmpgei	r4,r3,32
1001f944:	203f2f26 	beq	r4,zero,1001f604 <__adddf3+0xe8>
1001f948:	113ffe04 	addi	r4,r2,-8
1001f94c:	9908983a 	sll	r4,r19,r4
1001f950:	0027883a 	mov	r19,zero
1001f954:	003f3106 	br	1001f61c <__adddf3+0x100>
1001f958:	1ac8b03a 	or	r4,r3,r11
1001f95c:	2026c03a 	cmpne	r19,r4,zero
1001f960:	003f1c06 	br	1001f5d4 <__adddf3+0xb8>
1001f964:	4826977a 	slli	r19,r9,29
1001f968:	00c80034 	movhi	r3,8192
1001f96c:	18ffffc4 	addi	r3,r3,-1
1001f970:	20c4703a 	and	r2,r4,r3
1001f974:	14c4b03a 	or	r2,r2,r19
1001f978:	4812d0fa 	srli	r9,r9,3
1001f97c:	5021883a 	mov	r16,r10
1001f980:	003fa606 	br	1001f81c <__adddf3+0x300>
1001f984:	62e7c83a 	sub	r19,r12,r11
1001f988:	48e5c83a 	sub	r18,r9,r3
1001f98c:	64c9803a 	cmpltu	r4,r12,r19
1001f990:	9125c83a 	sub	r18,r18,r4
1001f994:	9080202c 	andhi	r2,r18,128
1001f998:	1000b21e 	bne	r2,zero,1001fc64 <__adddf3+0x748>
1001f99c:	9c84b03a 	or	r2,r19,r18
1001f9a0:	103f141e 	bne	r2,zero,1001f5f4 <__adddf3+0xd8>
1001f9a4:	0013883a 	mov	r9,zero
1001f9a8:	0021883a 	mov	r16,zero
1001f9ac:	0023883a 	mov	r17,zero
1001f9b0:	003f9c06 	br	1001f824 <__adddf3+0x308>
1001f9b4:	4826977a 	slli	r19,r9,29
1001f9b8:	00c80034 	movhi	r3,8192
1001f9bc:	18ffffc4 	addi	r3,r3,-1
1001f9c0:	20c4703a 	and	r2,r4,r3
1001f9c4:	14c4b03a 	or	r2,r2,r19
1001f9c8:	4812d0fa 	srli	r9,r9,3
1001f9cc:	003fca06 	br	1001f8f8 <__adddf3+0x3dc>
1001f9d0:	1409c83a 	sub	r4,r2,r16
1001f9d4:	80005e1e 	bne	r16,zero,1001fb50 <__adddf3+0x634>
1001f9d8:	4b0ab03a 	or	r5,r9,r12
1001f9dc:	28011326 	beq	r5,zero,1001fe2c <__adddf3+0x910>
1001f9e0:	217fffc4 	addi	r5,r4,-1
1001f9e4:	28012c26 	beq	r5,zero,1001fe98 <__adddf3+0x97c>
1001f9e8:	2101ffd8 	cmpnei	r4,r4,2047
1001f9ec:	2000a926 	beq	r4,zero,1001fc94 <__adddf3+0x778>
1001f9f0:	2809883a 	mov	r4,r5
1001f9f4:	21400e48 	cmpgei	r5,r4,57
1001f9f8:	2800b91e 	bne	r5,zero,1001fce0 <__adddf3+0x7c4>
1001f9fc:	21400808 	cmpgei	r5,r4,32
1001fa00:	28011a1e 	bne	r5,zero,1001fe6c <__adddf3+0x950>
1001fa04:	01400804 	movi	r5,32
1001fa08:	290bc83a 	sub	r5,r5,r4
1001fa0c:	4966983a 	sll	r19,r9,r5
1001fa10:	610cd83a 	srl	r6,r12,r4
1001fa14:	614a983a 	sll	r5,r12,r5
1001fa18:	4912d83a 	srl	r9,r9,r4
1001fa1c:	99a6b03a 	or	r19,r19,r6
1001fa20:	280ac03a 	cmpne	r5,r5,zero
1001fa24:	9966b03a 	or	r19,r19,r5
1001fa28:	1a47883a 	add	r3,r3,r9
1001fa2c:	9ae7883a 	add	r19,r19,r11
1001fa30:	9ac9803a 	cmpltu	r4,r19,r11
1001fa34:	20c9883a 	add	r4,r4,r3
1001fa38:	1021883a 	mov	r16,r2
1001fa3c:	003f8306 	br	1001f84c <__adddf3+0x330>
1001fa40:	1141ffd8 	cmpnei	r5,r2,2047
1001fa44:	28006326 	beq	r5,zero,1001fbd4 <__adddf3+0x6b8>
1001fa48:	4a402034 	orhi	r9,r9,128
1001fa4c:	21400e48 	cmpgei	r5,r4,57
1001fa50:	28006e1e 	bne	r5,zero,1001fc0c <__adddf3+0x6f0>
1001fa54:	21400808 	cmpgei	r5,r4,32
1001fa58:	2800ab1e 	bne	r5,zero,1001fd08 <__adddf3+0x7ec>
1001fa5c:	01400804 	movi	r5,32
1001fa60:	290bc83a 	sub	r5,r5,r4
1001fa64:	4966983a 	sll	r19,r9,r5
1001fa68:	610cd83a 	srl	r6,r12,r4
1001fa6c:	614a983a 	sll	r5,r12,r5
1001fa70:	4912d83a 	srl	r9,r9,r4
1001fa74:	99a6b03a 	or	r19,r19,r6
1001fa78:	280ac03a 	cmpne	r5,r5,zero
1001fa7c:	9966b03a 	or	r19,r19,r5
1001fa80:	1a47c83a 	sub	r3,r3,r9
1001fa84:	5ce7c83a 	sub	r19,r11,r19
1001fa88:	5cc9803a 	cmpltu	r4,r11,r19
1001fa8c:	1909c83a 	sub	r4,r3,r4
1001fa90:	3823883a 	mov	r17,r7
1001fa94:	1021883a 	mov	r16,r2
1001fa98:	003ed106 	br	1001f5e0 <__adddf3+0xc4>
1001fa9c:	843ff844 	addi	r16,r16,-31
1001faa0:	28800820 	cmpeqi	r2,r5,32
1001faa4:	2420d83a 	srl	r16,r4,r16
1001faa8:	1000041e 	bne	r2,zero,1001fabc <__adddf3+0x5a0>
1001faac:	00801004 	movi	r2,64
1001fab0:	114bc83a 	sub	r5,r2,r5
1001fab4:	2148983a 	sll	r4,r4,r5
1001fab8:	9926b03a 	or	r19,r19,r4
1001fabc:	9826c03a 	cmpne	r19,r19,zero
1001fac0:	9c26b03a 	or	r19,r19,r16
1001fac4:	0009883a 	mov	r4,zero
1001fac8:	0021883a 	mov	r16,zero
1001facc:	003f4d06 	br	1001f804 <__adddf3+0x2e8>
1001fad0:	04000084 	movi	r16,2
1001fad4:	00bfe034 	movhi	r2,65408
1001fad8:	10bfffc4 	addi	r2,r2,-1
1001fadc:	208a703a 	and	r5,r4,r2
1001fae0:	9804d07a 	srli	r2,r19,1
1001fae4:	280697fa 	slli	r3,r5,31
1001fae8:	9cc0004c 	andi	r19,r19,1
1001faec:	14e6b03a 	or	r19,r2,r19
1001faf0:	2808d07a 	srli	r4,r5,1
1001faf4:	1ce6b03a 	or	r19,r3,r19
1001faf8:	003ed706 	br	1001f658 <__adddf3+0x13c>
1001fafc:	54fff804 	addi	r19,r10,-32
1001fb00:	50800820 	cmpeqi	r2,r10,32
1001fb04:	1ce6d83a 	srl	r19,r3,r19
1001fb08:	1000041e 	bne	r2,zero,1001fb1c <__adddf3+0x600>
1001fb0c:	00801004 	movi	r2,64
1001fb10:	1295c83a 	sub	r10,r2,r10
1001fb14:	1a86983a 	sll	r3,r3,r10
1001fb18:	58d6b03a 	or	r11,r11,r3
1001fb1c:	5808c03a 	cmpne	r4,r11,zero
1001fb20:	24e6b03a 	or	r19,r4,r19
1001fb24:	003eab06 	br	1001f5d4 <__adddf3+0xb8>
1001fb28:	1000a926 	beq	r2,zero,1001fdd0 <__adddf3+0x8b4>
1001fb2c:	1ac4b03a 	or	r2,r3,r11
1001fb30:	1000ae1e 	bne	r2,zero,1001fdec <__adddf3+0x8d0>
1001fb34:	4806977a 	slli	r3,r9,29
1001fb38:	00880034 	movhi	r2,8192
1001fb3c:	10bfffc4 	addi	r2,r2,-1
1001fb40:	2084703a 	and	r2,r4,r2
1001fb44:	10c4b03a 	or	r2,r2,r3
1001fb48:	4812d0fa 	srli	r9,r9,3
1001fb4c:	003f3506 	br	1001f824 <__adddf3+0x308>
1001fb50:	1141ffd8 	cmpnei	r5,r2,2047
1001fb54:	28004f26 	beq	r5,zero,1001fc94 <__adddf3+0x778>
1001fb58:	4a402034 	orhi	r9,r9,128
1001fb5c:	003fa506 	br	1001f9f4 <__adddf3+0x4d8>
1001fb60:	01000804 	movi	r4,32
1001fb64:	2289c83a 	sub	r4,r4,r10
1001fb68:	1926983a 	sll	r19,r3,r4
1001fb6c:	5a84d83a 	srl	r2,r11,r10
1001fb70:	5908983a 	sll	r4,r11,r4
1001fb74:	1a86d83a 	srl	r3,r3,r10
1001fb78:	98a6b03a 	or	r19,r19,r2
1001fb7c:	2016c03a 	cmpne	r11,r4,zero
1001fb80:	9ae6b03a 	or	r19,r19,r11
1001fb84:	48d3883a 	add	r9,r9,r3
1001fb88:	003f2d06 	br	1001f840 <__adddf3+0x324>
1001fb8c:	01480034 	movhi	r5,8192
1001fb90:	1826977a 	slli	r19,r3,29
1001fb94:	297fffc4 	addi	r5,r5,-1
1001fb98:	3144703a 	and	r2,r6,r5
1001fb9c:	14c4b03a 	or	r2,r2,r19
1001fba0:	1812d0fa 	srli	r9,r3,3
1001fba4:	3823883a 	mov	r17,r7
1001fba8:	2021883a 	mov	r16,r4
1001fbac:	003f1b06 	br	1001f81c <__adddf3+0x300>
1001fbb0:	10007d26 	beq	r2,zero,1001fda8 <__adddf3+0x88c>
1001fbb4:	00880034 	movhi	r2,8192
1001fbb8:	1808977a 	slli	r4,r3,29
1001fbbc:	10bfffc4 	addi	r2,r2,-1
1001fbc0:	3084703a 	and	r2,r6,r2
1001fbc4:	1104b03a 	or	r2,r2,r4
1001fbc8:	1812d0fa 	srli	r9,r3,3
1001fbcc:	3823883a 	mov	r17,r7
1001fbd0:	003f1406 	br	1001f824 <__adddf3+0x308>
1001fbd4:	180a977a 	slli	r5,r3,29
1001fbd8:	01080034 	movhi	r4,8192
1001fbdc:	213fffc4 	addi	r4,r4,-1
1001fbe0:	3104703a 	and	r2,r6,r4
1001fbe4:	2884b03a 	or	r2,r5,r2
1001fbe8:	1812d0fa 	srli	r9,r3,3
1001fbec:	3823883a 	mov	r17,r7
1001fbf0:	003f4106 	br	1001f8f8 <__adddf3+0x3dc>
1001fbf4:	62e7c83a 	sub	r19,r12,r11
1001fbf8:	48d3c83a 	sub	r9,r9,r3
1001fbfc:	64c9803a 	cmpltu	r4,r12,r19
1001fc00:	4909c83a 	sub	r4,r9,r4
1001fc04:	04000044 	movi	r16,1
1001fc08:	003e7506 	br	1001f5e0 <__adddf3+0xc4>
1001fc0c:	4b12b03a 	or	r9,r9,r12
1001fc10:	4826c03a 	cmpne	r19,r9,zero
1001fc14:	003f9b06 	br	1001fa84 <__adddf3+0x568>
1001fc18:	4826977a 	slli	r19,r9,29
1001fc1c:	00c80034 	movhi	r3,8192
1001fc20:	18ffffc4 	addi	r3,r3,-1
1001fc24:	20c4703a 	and	r2,r4,r3
1001fc28:	9884b03a 	or	r2,r19,r2
1001fc2c:	4812d0fa 	srli	r9,r9,3
1001fc30:	003f3106 	br	1001f8f8 <__adddf3+0x3dc>
1001fc34:	1101ffe0 	cmpeqi	r4,r2,2047
1001fc38:	203f091e 	bne	r4,zero,1001f860 <__adddf3+0x344>
1001fc3c:	62d7883a 	add	r11,r12,r11
1001fc40:	5b09803a 	cmpltu	r4,r11,r12
1001fc44:	48d3883a 	add	r9,r9,r3
1001fc48:	490b883a 	add	r5,r9,r4
1001fc4c:	282697fa 	slli	r19,r5,31
1001fc50:	5816d07a 	srli	r11,r11,1
1001fc54:	2808d07a 	srli	r4,r5,1
1001fc58:	1021883a 	mov	r16,r2
1001fc5c:	9ae6b03a 	or	r19,r19,r11
1001fc60:	003ee806 	br	1001f804 <__adddf3+0x2e8>
1001fc64:	5b27c83a 	sub	r19,r11,r12
1001fc68:	1a53c83a 	sub	r9,r3,r9
1001fc6c:	5cc9803a 	cmpltu	r4,r11,r19
1001fc70:	4925c83a 	sub	r18,r9,r4
1001fc74:	3823883a 	mov	r17,r7
1001fc78:	003e5e06 	br	1001f5f4 <__adddf3+0xd8>
1001fc7c:	28002d1e 	bne	r5,zero,1001fd34 <__adddf3+0x818>
1001fc80:	103fd41e 	bne	r2,zero,1001fbd4 <__adddf3+0x6b8>
1001fc84:	00bfffc4 	movi	r2,-1
1001fc88:	0023883a 	mov	r17,zero
1001fc8c:	4013883a 	mov	r9,r8
1001fc90:	003f1b06 	br	1001f900 <__adddf3+0x3e4>
1001fc94:	00880034 	movhi	r2,8192
1001fc98:	1808977a 	slli	r4,r3,29
1001fc9c:	10bfffc4 	addi	r2,r2,-1
1001fca0:	3084703a 	and	r2,r6,r2
1001fca4:	1104b03a 	or	r2,r2,r4
1001fca8:	1812d0fa 	srli	r9,r3,3
1001fcac:	003f1206 	br	1001f8f8 <__adddf3+0x3dc>
1001fcb0:	62e7c83a 	sub	r19,r12,r11
1001fcb4:	48cbc83a 	sub	r5,r9,r3
1001fcb8:	64c9803a 	cmpltu	r4,r12,r19
1001fcbc:	2909c83a 	sub	r4,r5,r4
1001fcc0:	2080202c 	andhi	r2,r4,128
1001fcc4:	10003626 	beq	r2,zero,1001fda0 <__adddf3+0x884>
1001fcc8:	5b27c83a 	sub	r19,r11,r12
1001fccc:	1a53c83a 	sub	r9,r3,r9
1001fcd0:	5cc9803a 	cmpltu	r4,r11,r19
1001fcd4:	4909c83a 	sub	r4,r9,r4
1001fcd8:	3823883a 	mov	r17,r7
1001fcdc:	003e5e06 	br	1001f658 <__adddf3+0x13c>
1001fce0:	4b12b03a 	or	r9,r9,r12
1001fce4:	4826c03a 	cmpne	r19,r9,zero
1001fce8:	003f5006 	br	1001fa2c <__adddf3+0x510>
1001fcec:	4806977a 	slli	r3,r9,29
1001fcf0:	00880034 	movhi	r2,8192
1001fcf4:	10bfffc4 	addi	r2,r2,-1
1001fcf8:	2084703a 	and	r2,r4,r2
1001fcfc:	10c4b03a 	or	r2,r2,r3
1001fd00:	4812d0fa 	srli	r9,r9,3
1001fd04:	003efc06 	br	1001f8f8 <__adddf3+0x3dc>
1001fd08:	217ff804 	addi	r5,r4,-32
1001fd0c:	21800820 	cmpeqi	r6,r4,32
1001fd10:	494ad83a 	srl	r5,r9,r5
1001fd14:	3000041e 	bne	r6,zero,1001fd28 <__adddf3+0x80c>
1001fd18:	01801004 	movi	r6,64
1001fd1c:	3109c83a 	sub	r4,r6,r4
1001fd20:	4912983a 	sll	r9,r9,r4
1001fd24:	6258b03a 	or	r12,r12,r9
1001fd28:	6026c03a 	cmpne	r19,r12,zero
1001fd2c:	9966b03a 	or	r19,r19,r5
1001fd30:	003f5406 	br	1001fa84 <__adddf3+0x568>
1001fd34:	480a977a 	slli	r5,r9,29
1001fd38:	4812d0fa 	srli	r9,r9,3
1001fd3c:	10003626 	beq	r2,zero,1001fe18 <__adddf3+0x8fc>
1001fd40:	02080034 	movhi	r8,8192
1001fd44:	423fffc4 	addi	r8,r8,-1
1001fd48:	2204703a 	and	r2,r4,r8
1001fd4c:	4900022c 	andhi	r4,r9,8
1001fd50:	114ab03a 	or	r5,r2,r5
1001fd54:	20000826 	beq	r4,zero,1001fd78 <__adddf3+0x85c>
1001fd58:	1808d0fa 	srli	r4,r3,3
1001fd5c:	2080022c 	andhi	r2,r4,8
1001fd60:	1000051e 	bne	r2,zero,1001fd78 <__adddf3+0x85c>
1001fd64:	1806977a 	slli	r3,r3,29
1001fd68:	3204703a 	and	r2,r6,r8
1001fd6c:	3823883a 	mov	r17,r7
1001fd70:	10cab03a 	or	r5,r2,r3
1001fd74:	2013883a 	mov	r9,r4
1001fd78:	480890fa 	slli	r4,r9,3
1001fd7c:	2804d77a 	srli	r2,r5,29
1001fd80:	00c80034 	movhi	r3,8192
1001fd84:	18ffffc4 	addi	r3,r3,-1
1001fd88:	1108b03a 	or	r4,r2,r4
1001fd8c:	200c977a 	slli	r6,r4,29
1001fd90:	28c4703a 	and	r2,r5,r3
1001fd94:	2012d0fa 	srli	r9,r4,3
1001fd98:	3084b03a 	or	r2,r6,r2
1001fd9c:	003ed606 	br	1001f8f8 <__adddf3+0x3dc>
1001fda0:	9904b03a 	or	r2,r19,r4
1001fda4:	103e971e 	bne	r2,zero,1001f804 <__adddf3+0x2e8>
1001fda8:	0013883a 	mov	r9,zero
1001fdac:	0023883a 	mov	r17,zero
1001fdb0:	003e9c06 	br	1001f824 <__adddf3+0x308>
1001fdb4:	5b27c83a 	sub	r19,r11,r12
1001fdb8:	1a53c83a 	sub	r9,r3,r9
1001fdbc:	5cc9803a 	cmpltu	r4,r11,r19
1001fdc0:	4909c83a 	sub	r4,r9,r4
1001fdc4:	3823883a 	mov	r17,r7
1001fdc8:	04000044 	movi	r16,1
1001fdcc:	003e0406 	br	1001f5e0 <__adddf3+0xc4>
1001fdd0:	180a977a 	slli	r5,r3,29
1001fdd4:	01080034 	movhi	r4,8192
1001fdd8:	213fffc4 	addi	r4,r4,-1
1001fddc:	3104703a 	and	r2,r6,r4
1001fde0:	2884b03a 	or	r2,r5,r2
1001fde4:	1812d0fa 	srli	r9,r3,3
1001fde8:	003e8e06 	br	1001f824 <__adddf3+0x308>
1001fdec:	62e7883a 	add	r19,r12,r11
1001fdf0:	48d3883a 	add	r9,r9,r3
1001fdf4:	9b09803a 	cmpltu	r4,r19,r12
1001fdf8:	4909883a 	add	r4,r9,r4
1001fdfc:	2080202c 	andhi	r2,r4,128
1001fe00:	103e8026 	beq	r2,zero,1001f804 <__adddf3+0x2e8>
1001fe04:	00bfe034 	movhi	r2,65408
1001fe08:	10bfffc4 	addi	r2,r2,-1
1001fe0c:	2088703a 	and	r4,r4,r2
1001fe10:	04000044 	movi	r16,1
1001fe14:	003e7b06 	br	1001f804 <__adddf3+0x2e8>
1001fe18:	00880034 	movhi	r2,8192
1001fe1c:	10bfffc4 	addi	r2,r2,-1
1001fe20:	2084703a 	and	r2,r4,r2
1001fe24:	1144b03a 	or	r2,r2,r5
1001fe28:	003eb306 	br	1001f8f8 <__adddf3+0x3dc>
1001fe2c:	180e977a 	slli	r7,r3,29
1001fe30:	01480034 	movhi	r5,8192
1001fe34:	297fffc4 	addi	r5,r5,-1
1001fe38:	3144703a 	and	r2,r6,r5
1001fe3c:	3884b03a 	or	r2,r7,r2
1001fe40:	1812d0fa 	srli	r9,r3,3
1001fe44:	2021883a 	mov	r16,r4
1001fe48:	003e7406 	br	1001f81c <__adddf3+0x300>
1001fe4c:	00880034 	movhi	r2,8192
1001fe50:	1808977a 	slli	r4,r3,29
1001fe54:	10bfffc4 	addi	r2,r2,-1
1001fe58:	3084703a 	and	r2,r6,r2
1001fe5c:	1104b03a 	or	r2,r2,r4
1001fe60:	1812d0fa 	srli	r9,r3,3
1001fe64:	3823883a 	mov	r17,r7
1001fe68:	003ea306 	br	1001f8f8 <__adddf3+0x3dc>
1001fe6c:	217ff804 	addi	r5,r4,-32
1001fe70:	21800820 	cmpeqi	r6,r4,32
1001fe74:	494ad83a 	srl	r5,r9,r5
1001fe78:	3000041e 	bne	r6,zero,1001fe8c <__adddf3+0x970>
1001fe7c:	01801004 	movi	r6,64
1001fe80:	3109c83a 	sub	r4,r6,r4
1001fe84:	4912983a 	sll	r9,r9,r4
1001fe88:	6258b03a 	or	r12,r12,r9
1001fe8c:	6026c03a 	cmpne	r19,r12,zero
1001fe90:	9966b03a 	or	r19,r19,r5
1001fe94:	003ee506 	br	1001fa2c <__adddf3+0x510>
1001fe98:	62e7883a 	add	r19,r12,r11
1001fe9c:	48d3883a 	add	r9,r9,r3
1001fea0:	9ac9803a 	cmpltu	r4,r19,r11
1001fea4:	4909883a 	add	r4,r9,r4
1001fea8:	003e5306 	br	1001f7f8 <__adddf3+0x2dc>
1001feac:	0005883a 	mov	r2,zero
1001feb0:	0401ffc4 	movi	r16,2047
1001feb4:	0009883a 	mov	r4,zero
1001feb8:	003dfe06 	br	1001f6b4 <__adddf3+0x198>

1001febc <__divdf3>:
1001febc:	defff104 	addi	sp,sp,-60
1001fec0:	2804d53a 	srli	r2,r5,20
1001fec4:	dd000915 	stw	r20,36(sp)
1001fec8:	2828d7fa 	srli	r20,r5,31
1001fecc:	dc000515 	stw	r16,20(sp)
1001fed0:	04000434 	movhi	r16,16
1001fed4:	ddc00c15 	stw	r23,48(sp)
1001fed8:	dc800715 	stw	r18,28(sp)
1001fedc:	843fffc4 	addi	r16,r16,-1
1001fee0:	dfc00e15 	stw	ra,56(sp)
1001fee4:	df000d15 	stw	fp,52(sp)
1001fee8:	dd800b15 	stw	r22,44(sp)
1001feec:	dd400a15 	stw	r21,40(sp)
1001fef0:	dcc00815 	stw	r19,32(sp)
1001fef4:	dc400615 	stw	r17,24(sp)
1001fef8:	1081ffcc 	andi	r2,r2,2047
1001fefc:	2025883a 	mov	r18,r4
1001ff00:	2c20703a 	and	r16,r5,r16
1001ff04:	a02f883a 	mov	r23,r20
1001ff08:	10008926 	beq	r2,zero,10020130 <__divdf3+0x274>
1001ff0c:	10c1ffe0 	cmpeqi	r3,r2,2047
1001ff10:	18009f1e 	bne	r3,zero,10020190 <__divdf3+0x2d4>
1001ff14:	800a90fa 	slli	r5,r16,3
1001ff18:	2008d77a 	srli	r4,r4,29
1001ff1c:	902490fa 	slli	r18,r18,3
1001ff20:	157f0044 	addi	r21,r2,-1023
1001ff24:	2148b03a 	or	r4,r4,r5
1001ff28:	25802034 	orhi	r22,r4,128
1001ff2c:	0023883a 	mov	r17,zero
1001ff30:	0021883a 	mov	r16,zero
1001ff34:	3806d53a 	srli	r3,r7,20
1001ff38:	01000434 	movhi	r4,16
1001ff3c:	213fffc4 	addi	r4,r4,-1
1001ff40:	18c1ffcc 	andi	r3,r3,2047
1001ff44:	3926703a 	and	r19,r7,r4
1001ff48:	380ed7fa 	srli	r7,r7,31
1001ff4c:	18006326 	beq	r3,zero,100200dc <__divdf3+0x220>
1001ff50:	1881ffe0 	cmpeqi	r2,r3,2047
1001ff54:	1000201e 	bne	r2,zero,1001ffd8 <__divdf3+0x11c>
1001ff58:	980890fa 	slli	r4,r19,3
1001ff5c:	300ad77a 	srli	r5,r6,29
1001ff60:	301090fa 	slli	r8,r6,3
1001ff64:	18ff0044 	addi	r3,r3,-1023
1001ff68:	2908b03a 	or	r4,r5,r4
1001ff6c:	a8ebc83a 	sub	r21,r21,r3
1001ff70:	24c02034 	orhi	r19,r4,128
1001ff74:	0007883a 	mov	r3,zero
1001ff78:	89800428 	cmpgeui	r6,r17,16
1001ff7c:	a1f8f03a 	xor	fp,r20,r7
1001ff80:	3000ad1e 	bne	r6,zero,10020238 <__divdf3+0x37c>
1001ff84:	882290ba 	slli	r17,r17,2
1001ff88:	008400b4 	movhi	r2,4098
1001ff8c:	8885883a 	add	r2,r17,r2
1001ff90:	10bfe617 	ldw	r2,-104(r2)
1001ff94:	1000683a 	jmp	r2
1001ff98:	10020238 	rdprs	zero,r2,2056
1001ff9c:	100200cc 	andi	zero,r2,2051
1001ffa0:	10020070 	cmpltui	zero,r2,2049
1001ffa4:	1001fff4 	orhi	zero,r2,2047
1001ffa8:	10020070 	cmpltui	zero,r2,2049
1001ffac:	100201f4 	orhi	zero,r2,2055
1001ffb0:	10020070 	cmpltui	zero,r2,2049
1001ffb4:	1001fff4 	orhi	zero,r2,2047
1001ffb8:	100200cc 	andi	zero,r2,2051
1001ffbc:	100200cc 	andi	zero,r2,2051
1001ffc0:	100201f4 	orhi	zero,r2,2055
1001ffc4:	1001fff4 	orhi	zero,r2,2047
1001ffc8:	10020004 	addi	zero,r2,2048
1001ffcc:	10020004 	addi	zero,r2,2048
1001ffd0:	10020004 	addi	zero,r2,2048
1001ffd4:	1002020c 	andi	zero,r2,2056
1001ffd8:	9990b03a 	or	r8,r19,r6
1001ffdc:	ad7e0044 	addi	r21,r21,-2047
1001ffe0:	4000801e 	bne	r8,zero,100201e4 <__divdf3+0x328>
1001ffe4:	8c400094 	ori	r17,r17,2
1001ffe8:	0027883a 	mov	r19,zero
1001ffec:	00c00084 	movi	r3,2
1001fff0:	003fe106 	br	1001ff78 <__divdf3+0xbc>
1001fff4:	382f883a 	mov	r23,r7
1001fff8:	982d883a 	mov	r22,r19
1001fffc:	4025883a 	mov	r18,r8
10020000:	1821883a 	mov	r16,r3
10020004:	808000a0 	cmpeqi	r2,r16,2
10020008:	10017c1e 	bne	r2,zero,100205fc <__divdf3+0x740>
1002000c:	808000e0 	cmpeqi	r2,r16,3
10020010:	1001ca1e 	bne	r2,zero,1002073c <__divdf3+0x880>
10020014:	80800060 	cmpeqi	r2,r16,1
10020018:	1000141e 	bne	r2,zero,1002006c <__divdf3+0x1b0>
1002001c:	ac00ffc4 	addi	r16,r21,1023
10020020:	b839883a 	mov	fp,r23
10020024:	0401580e 	bge	zero,r16,10020588 <__divdf3+0x6cc>
10020028:	908001cc 	andi	r2,r18,7
1002002c:	1001921e 	bne	r2,zero,10020678 <__divdf3+0x7bc>
10020030:	900ad0fa 	srli	r5,r18,3
10020034:	b080402c 	andhi	r2,r22,256
10020038:	10000426 	beq	r2,zero,1002004c <__divdf3+0x190>
1002003c:	00bfc034 	movhi	r2,65280
10020040:	10bfffc4 	addi	r2,r2,-1
10020044:	b0ac703a 	and	r22,r22,r2
10020048:	ac010004 	addi	r16,r21,1024
1002004c:	8081ffc8 	cmpgei	r2,r16,2047
10020050:	10001e1e 	bne	r2,zero,100200cc <__divdf3+0x210>
10020054:	b024977a 	slli	r18,r22,29
10020058:	b008927a 	slli	r4,r22,9
1002005c:	8081ffcc 	andi	r2,r16,2047
10020060:	9164b03a 	or	r18,r18,r5
10020064:	2008d33a 	srli	r4,r4,12
10020068:	00000406 	br	1002007c <__divdf3+0x1c0>
1002006c:	b839883a 	mov	fp,r23
10020070:	0005883a 	mov	r2,zero
10020074:	0009883a 	mov	r4,zero
10020078:	0025883a 	mov	r18,zero
1002007c:	1004953a 	slli	r2,r2,20
10020080:	00c00434 	movhi	r3,16
10020084:	e03897fa 	slli	fp,fp,31
10020088:	18ffffc4 	addi	r3,r3,-1
1002008c:	20c6703a 	and	r3,r4,r3
10020090:	1886b03a 	or	r3,r3,r2
10020094:	1f06b03a 	or	r3,r3,fp
10020098:	9005883a 	mov	r2,r18
1002009c:	dfc00e17 	ldw	ra,56(sp)
100200a0:	df000d17 	ldw	fp,52(sp)
100200a4:	ddc00c17 	ldw	r23,48(sp)
100200a8:	dd800b17 	ldw	r22,44(sp)
100200ac:	dd400a17 	ldw	r21,40(sp)
100200b0:	dd000917 	ldw	r20,36(sp)
100200b4:	dcc00817 	ldw	r19,32(sp)
100200b8:	dc800717 	ldw	r18,28(sp)
100200bc:	dc400617 	ldw	r17,24(sp)
100200c0:	dc000517 	ldw	r16,20(sp)
100200c4:	dec00f04 	addi	sp,sp,60
100200c8:	f800283a 	ret
100200cc:	0081ffc4 	movi	r2,2047
100200d0:	0009883a 	mov	r4,zero
100200d4:	0025883a 	mov	r18,zero
100200d8:	003fe806 	br	1002007c <__divdf3+0x1c0>
100200dc:	9990b03a 	or	r8,r19,r6
100200e0:	40003c26 	beq	r8,zero,100201d4 <__divdf3+0x318>
100200e4:	98011826 	beq	r19,zero,10020548 <__divdf3+0x68c>
100200e8:	9809883a 	mov	r4,r19
100200ec:	d9800115 	stw	r6,4(sp)
100200f0:	d9c00015 	stw	r7,0(sp)
100200f4:	0021bf40 	call	10021bf4 <__clzsi2>
100200f8:	d9c00017 	ldw	r7,0(sp)
100200fc:	d9800117 	ldw	r6,4(sp)
10020100:	117ffd44 	addi	r5,r2,-11
10020104:	00c00744 	movi	r3,29
10020108:	123ffe04 	addi	r8,r2,-8
1002010c:	1947c83a 	sub	r3,r3,r5
10020110:	9a08983a 	sll	r4,r19,r8
10020114:	30c6d83a 	srl	r3,r6,r3
10020118:	3210983a 	sll	r8,r6,r8
1002011c:	1926b03a 	or	r19,r3,r4
10020120:	1545883a 	add	r2,r2,r21
10020124:	1540fcc4 	addi	r21,r2,1011
10020128:	0007883a 	mov	r3,zero
1002012c:	003f9206 	br	1001ff78 <__divdf3+0xbc>
10020130:	242cb03a 	or	r22,r4,r16
10020134:	2023883a 	mov	r17,r4
10020138:	b0002126 	beq	r22,zero,100201c0 <__divdf3+0x304>
1002013c:	d9c00115 	stw	r7,4(sp)
10020140:	d9800015 	stw	r6,0(sp)
10020144:	8000f526 	beq	r16,zero,1002051c <__divdf3+0x660>
10020148:	8009883a 	mov	r4,r16
1002014c:	0021bf40 	call	10021bf4 <__clzsi2>
10020150:	d9800017 	ldw	r6,0(sp)
10020154:	d9c00117 	ldw	r7,4(sp)
10020158:	102b883a 	mov	r21,r2
1002015c:	113ffd44 	addi	r4,r2,-11
10020160:	05800744 	movi	r22,29
10020164:	acbffe04 	addi	r18,r21,-8
10020168:	b12dc83a 	sub	r22,r22,r4
1002016c:	848a983a 	sll	r5,r16,r18
10020170:	8d88d83a 	srl	r4,r17,r22
10020174:	8ca4983a 	sll	r18,r17,r18
10020178:	216cb03a 	or	r22,r4,r5
1002017c:	00bf0344 	movi	r2,-1011
10020180:	156bc83a 	sub	r21,r2,r21
10020184:	0023883a 	mov	r17,zero
10020188:	0021883a 	mov	r16,zero
1002018c:	003f6906 	br	1001ff34 <__divdf3+0x78>
10020190:	242cb03a 	or	r22,r4,r16
10020194:	b000051e 	bne	r22,zero,100201ac <__divdf3+0x2f0>
10020198:	0025883a 	mov	r18,zero
1002019c:	04400204 	movi	r17,8
100201a0:	0541ffc4 	movi	r21,2047
100201a4:	04000084 	movi	r16,2
100201a8:	003f6206 	br	1001ff34 <__divdf3+0x78>
100201ac:	802d883a 	mov	r22,r16
100201b0:	04400304 	movi	r17,12
100201b4:	0541ffc4 	movi	r21,2047
100201b8:	040000c4 	movi	r16,3
100201bc:	003f5d06 	br	1001ff34 <__divdf3+0x78>
100201c0:	0025883a 	mov	r18,zero
100201c4:	04400104 	movi	r17,4
100201c8:	002b883a 	mov	r21,zero
100201cc:	04000044 	movi	r16,1
100201d0:	003f5806 	br	1001ff34 <__divdf3+0x78>
100201d4:	8c400054 	ori	r17,r17,1
100201d8:	0027883a 	mov	r19,zero
100201dc:	00c00044 	movi	r3,1
100201e0:	003f6506 	br	1001ff78 <__divdf3+0xbc>
100201e4:	8c4000d4 	ori	r17,r17,3
100201e8:	3011883a 	mov	r8,r6
100201ec:	00c000c4 	movi	r3,3
100201f0:	003f6106 	br	1001ff78 <__divdf3+0xbc>
100201f4:	01000434 	movhi	r4,16
100201f8:	0039883a 	mov	fp,zero
100201fc:	213fffc4 	addi	r4,r4,-1
10020200:	04bfffc4 	movi	r18,-1
10020204:	0081ffc4 	movi	r2,2047
10020208:	003f9c06 	br	1002007c <__divdf3+0x1c0>
1002020c:	b080022c 	andhi	r2,r22,8
10020210:	1000a126 	beq	r2,zero,10020498 <__divdf3+0x5dc>
10020214:	9880022c 	andhi	r2,r19,8
10020218:	10009f1e 	bne	r2,zero,10020498 <__divdf3+0x5dc>
1002021c:	00800434 	movhi	r2,16
10020220:	99000234 	orhi	r4,r19,8
10020224:	10bfffc4 	addi	r2,r2,-1
10020228:	2088703a 	and	r4,r4,r2
1002022c:	3839883a 	mov	fp,r7
10020230:	4025883a 	mov	r18,r8
10020234:	003ff306 	br	10020204 <__divdf3+0x348>
10020238:	9d80b236 	bltu	r19,r22,10020504 <__divdf3+0x648>
1002023c:	9d80b026 	beq	r19,r22,10020500 <__divdf3+0x644>
10020240:	ad7fffc4 	addi	r21,r21,-1
10020244:	b007883a 	mov	r3,r22
10020248:	0021883a 	mov	r16,zero
1002024c:	400cd63a 	srli	r6,r8,24
10020250:	9826923a 	slli	r19,r19,8
10020254:	4004923a 	slli	r2,r8,8
10020258:	1809883a 	mov	r4,r3
1002025c:	34e2b03a 	or	r17,r6,r19
10020260:	8828d43a 	srli	r20,r17,16
10020264:	d8c00115 	stw	r3,4(sp)
10020268:	d8800015 	stw	r2,0(sp)
1002026c:	a00b883a 	mov	r5,r20
10020270:	00140ac0 	call	100140ac <__udivsi3>
10020274:	d8c00117 	ldw	r3,4(sp)
10020278:	a00b883a 	mov	r5,r20
1002027c:	102d883a 	mov	r22,r2
10020280:	1809883a 	mov	r4,r3
10020284:	00141100 	call	10014110 <__umodsi3>
10020288:	1006943a 	slli	r3,r2,16
1002028c:	8dffffcc 	andi	r23,r17,65535
10020290:	9004d43a 	srli	r2,r18,16
10020294:	bda7383a 	mul	r19,r23,r22
10020298:	10c4b03a 	or	r2,r2,r3
1002029c:	14c0042e 	bgeu	r2,r19,100202b0 <__divdf3+0x3f4>
100202a0:	1445883a 	add	r2,r2,r17
100202a4:	b0ffffc4 	addi	r3,r22,-1
100202a8:	1440e12e 	bgeu	r2,r17,10020630 <__divdf3+0x774>
100202ac:	182d883a 	mov	r22,r3
100202b0:	14e7c83a 	sub	r19,r2,r19
100202b4:	a00b883a 	mov	r5,r20
100202b8:	9809883a 	mov	r4,r19
100202bc:	00140ac0 	call	100140ac <__udivsi3>
100202c0:	a00b883a 	mov	r5,r20
100202c4:	9809883a 	mov	r4,r19
100202c8:	d8800115 	stw	r2,4(sp)
100202cc:	00141100 	call	10014110 <__umodsi3>
100202d0:	d8c00117 	ldw	r3,4(sp)
100202d4:	1004943a 	slli	r2,r2,16
100202d8:	94bfffcc 	andi	r18,r18,65535
100202dc:	b8cb383a 	mul	r5,r23,r3
100202e0:	9084b03a 	or	r2,r18,r2
100202e4:	1140042e 	bgeu	r2,r5,100202f8 <__divdf3+0x43c>
100202e8:	1445883a 	add	r2,r2,r17
100202ec:	193fffc4 	addi	r4,r3,-1
100202f0:	1440cb2e 	bgeu	r2,r17,10020620 <__divdf3+0x764>
100202f4:	2007883a 	mov	r3,r4
100202f8:	b008943a 	slli	r4,r22,16
100202fc:	d9800017 	ldw	r6,0(sp)
10020300:	1145c83a 	sub	r2,r2,r5
10020304:	20ecb03a 	or	r22,r4,r3
10020308:	b0ffffcc 	andi	r3,r22,65535
1002030c:	300ed43a 	srli	r7,r6,16
10020310:	323fffcc 	andi	r8,r6,65535
10020314:	b026d43a 	srli	r19,r22,16
10020318:	40e5383a 	mul	r18,r8,r3
1002031c:	38c9383a 	mul	r4,r7,r3
10020320:	9a13383a 	mul	r9,r19,r8
10020324:	9006d43a 	srli	r3,r18,16
10020328:	2249883a 	add	r4,r4,r9
1002032c:	1907883a 	add	r3,r3,r4
10020330:	99c9383a 	mul	r4,r19,r7
10020334:	1a40022e 	bgeu	r3,r9,10020340 <__divdf3+0x484>
10020338:	01400074 	movhi	r5,1
1002033c:	2149883a 	add	r4,r4,r5
10020340:	1826d43a 	srli	r19,r3,16
10020344:	1806943a 	slli	r3,r3,16
10020348:	94bfffcc 	andi	r18,r18,65535
1002034c:	9927883a 	add	r19,r19,r4
10020350:	1ca5883a 	add	r18,r3,r18
10020354:	14c05f36 	bltu	r2,r19,100204d4 <__divdf3+0x618>
10020358:	14c05d26 	beq	r2,r19,100204d0 <__divdf3+0x614>
1002035c:	84a5c83a 	sub	r18,r16,r18
10020360:	14c5c83a 	sub	r2,r2,r19
10020364:	84a7803a 	cmpltu	r19,r16,r18
10020368:	da000215 	stw	r8,8(sp)
1002036c:	d9c00115 	stw	r7,4(sp)
10020370:	14e7c83a 	sub	r19,r2,r19
10020374:	ac00ffc4 	addi	r16,r21,1023
10020378:	8cc0b626 	beq	r17,r19,10020654 <__divdf3+0x798>
1002037c:	9809883a 	mov	r4,r19
10020380:	a00b883a 	mov	r5,r20
10020384:	00140ac0 	call	100140ac <__udivsi3>
10020388:	9809883a 	mov	r4,r19
1002038c:	a00b883a 	mov	r5,r20
10020390:	d8800315 	stw	r2,12(sp)
10020394:	00141100 	call	10014110 <__umodsi3>
10020398:	d8c00317 	ldw	r3,12(sp)
1002039c:	1008943a 	slli	r4,r2,16
100203a0:	9004d43a 	srli	r2,r18,16
100203a4:	b8e7383a 	mul	r19,r23,r3
100203a8:	d9c00117 	ldw	r7,4(sp)
100203ac:	1104b03a 	or	r2,r2,r4
100203b0:	da000217 	ldw	r8,8(sp)
100203b4:	14c0062e 	bgeu	r2,r19,100203d0 <__divdf3+0x514>
100203b8:	1445883a 	add	r2,r2,r17
100203bc:	193fffc4 	addi	r4,r3,-1
100203c0:	1440ab36 	bltu	r2,r17,10020670 <__divdf3+0x7b4>
100203c4:	14c0aa2e 	bgeu	r2,r19,10020670 <__divdf3+0x7b4>
100203c8:	18ffff84 	addi	r3,r3,-2
100203cc:	1445883a 	add	r2,r2,r17
100203d0:	14e7c83a 	sub	r19,r2,r19
100203d4:	a00b883a 	mov	r5,r20
100203d8:	9809883a 	mov	r4,r19
100203dc:	da000415 	stw	r8,16(sp)
100203e0:	d8c00315 	stw	r3,12(sp)
100203e4:	d9c00215 	stw	r7,8(sp)
100203e8:	00140ac0 	call	100140ac <__udivsi3>
100203ec:	a00b883a 	mov	r5,r20
100203f0:	9809883a 	mov	r4,r19
100203f4:	d8800115 	stw	r2,4(sp)
100203f8:	00141100 	call	10014110 <__umodsi3>
100203fc:	da400117 	ldw	r9,4(sp)
10020400:	1004943a 	slli	r2,r2,16
10020404:	94bfffcc 	andi	r18,r18,65535
10020408:	ba6f383a 	mul	r23,r23,r9
1002040c:	9084b03a 	or	r2,r18,r2
10020410:	d9c00217 	ldw	r7,8(sp)
10020414:	d8c00317 	ldw	r3,12(sp)
10020418:	da000417 	ldw	r8,16(sp)
1002041c:	15c0062e 	bgeu	r2,r23,10020438 <__divdf3+0x57c>
10020420:	1445883a 	add	r2,r2,r17
10020424:	493fffc4 	addi	r4,r9,-1
10020428:	14408f36 	bltu	r2,r17,10020668 <__divdf3+0x7ac>
1002042c:	15c08e2e 	bgeu	r2,r23,10020668 <__divdf3+0x7ac>
10020430:	4a7fff84 	addi	r9,r9,-2
10020434:	1445883a 	add	r2,r2,r17
10020438:	180a943a 	slli	r5,r3,16
1002043c:	15c5c83a 	sub	r2,r2,r23
10020440:	2a64b03a 	or	r18,r5,r9
10020444:	9012d43a 	srli	r9,r18,16
10020448:	913fffcc 	andi	r4,r18,65535
1002044c:	220b383a 	mul	r5,r4,r8
10020450:	3909383a 	mul	r4,r7,r4
10020454:	4a11383a 	mul	r8,r9,r8
10020458:	2806d43a 	srli	r3,r5,16
1002045c:	3a4f383a 	mul	r7,r7,r9
10020460:	2209883a 	add	r4,r4,r8
10020464:	1907883a 	add	r3,r3,r4
10020468:	1a00022e 	bgeu	r3,r8,10020474 <__divdf3+0x5b8>
1002046c:	01000074 	movhi	r4,1
10020470:	390f883a 	add	r7,r7,r4
10020474:	1808d43a 	srli	r4,r3,16
10020478:	1806943a 	slli	r3,r3,16
1002047c:	297fffcc 	andi	r5,r5,65535
10020480:	21cf883a 	add	r7,r4,r7
10020484:	1947883a 	add	r3,r3,r5
10020488:	11c00a36 	bltu	r2,r7,100204b4 <__divdf3+0x5f8>
1002048c:	11c00826 	beq	r2,r7,100204b0 <__divdf3+0x5f4>
10020490:	94800054 	ori	r18,r18,1
10020494:	003ee306 	br	10020024 <__divdf3+0x168>
10020498:	00800434 	movhi	r2,16
1002049c:	b1000234 	orhi	r4,r22,8
100204a0:	10bfffc4 	addi	r2,r2,-1
100204a4:	2088703a 	and	r4,r4,r2
100204a8:	a039883a 	mov	fp,r20
100204ac:	003f5506 	br	10020204 <__divdf3+0x348>
100204b0:	183edc26 	beq	r3,zero,10020024 <__divdf3+0x168>
100204b4:	8885883a 	add	r2,r17,r2
100204b8:	913fffc4 	addi	r4,r18,-1
100204bc:	14406036 	bltu	r2,r17,10020640 <__divdf3+0x784>
100204c0:	11c07d36 	bltu	r2,r7,100206b8 <__divdf3+0x7fc>
100204c4:	11c0a326 	beq	r2,r7,10020754 <__divdf3+0x898>
100204c8:	2025883a 	mov	r18,r4
100204cc:	003ff006 	br	10020490 <__divdf3+0x5d4>
100204d0:	84bfa22e 	bgeu	r16,r18,1002035c <__divdf3+0x4a0>
100204d4:	d8c00017 	ldw	r3,0(sp)
100204d8:	80e1883a 	add	r16,r16,r3
100204dc:	80c7803a 	cmpltu	r3,r16,r3
100204e0:	1c47883a 	add	r3,r3,r17
100204e4:	10c5883a 	add	r2,r2,r3
100204e8:	b0ffffc4 	addi	r3,r22,-1
100204ec:	8880482e 	bgeu	r17,r2,10020610 <__divdf3+0x754>
100204f0:	14c06a36 	bltu	r2,r19,1002069c <__divdf3+0x7e0>
100204f4:	98806826 	beq	r19,r2,10020698 <__divdf3+0x7dc>
100204f8:	182d883a 	mov	r22,r3
100204fc:	003f9706 	br	1002035c <__divdf3+0x4a0>
10020500:	923f4f36 	bltu	r18,r8,10020240 <__divdf3+0x384>
10020504:	b00a97fa 	slli	r5,r22,31
10020508:	9004d07a 	srli	r2,r18,1
1002050c:	902097fa 	slli	r16,r18,31
10020510:	b006d07a 	srli	r3,r22,1
10020514:	28a4b03a 	or	r18,r5,r2
10020518:	003f4c06 	br	1002024c <__divdf3+0x390>
1002051c:	0021bf40 	call	10021bf4 <__clzsi2>
10020520:	11000544 	addi	r4,r2,21
10020524:	21400748 	cmpgei	r5,r4,29
10020528:	15400804 	addi	r21,r2,32
1002052c:	d9800017 	ldw	r6,0(sp)
10020530:	d9c00117 	ldw	r7,4(sp)
10020534:	283f0a26 	beq	r5,zero,10020160 <__divdf3+0x2a4>
10020538:	113ffe04 	addi	r4,r2,-8
1002053c:	912c983a 	sll	r22,r18,r4
10020540:	0025883a 	mov	r18,zero
10020544:	003f0d06 	br	1002017c <__divdf3+0x2c0>
10020548:	3009883a 	mov	r4,r6
1002054c:	d9c00115 	stw	r7,4(sp)
10020550:	d9800015 	stw	r6,0(sp)
10020554:	0021bf40 	call	10021bf4 <__clzsi2>
10020558:	11400544 	addi	r5,r2,21
1002055c:	28c00748 	cmpgei	r3,r5,29
10020560:	1009883a 	mov	r4,r2
10020564:	d9800017 	ldw	r6,0(sp)
10020568:	10800804 	addi	r2,r2,32
1002056c:	d9c00117 	ldw	r7,4(sp)
10020570:	183ee426 	beq	r3,zero,10020104 <__divdf3+0x248>
10020574:	213ffe04 	addi	r4,r4,-8
10020578:	3126983a 	sll	r19,r6,r4
1002057c:	0011883a 	mov	r8,zero
10020580:	003ee706 	br	10020120 <__divdf3+0x264>
10020584:	04bfffc4 	movi	r18,-1
10020588:	01000044 	movi	r4,1
1002058c:	2409c83a 	sub	r4,r4,r16
10020590:	20800e48 	cmpgei	r2,r4,57
10020594:	103eb61e 	bne	r2,zero,10020070 <__divdf3+0x1b4>
10020598:	20800808 	cmpgei	r2,r4,32
1002059c:	10004e1e 	bne	r2,zero,100206d8 <__divdf3+0x81c>
100205a0:	a8810784 	addi	r2,r21,1054
100205a4:	b086983a 	sll	r3,r22,r2
100205a8:	910ad83a 	srl	r5,r18,r4
100205ac:	9084983a 	sll	r2,r18,r2
100205b0:	b108d83a 	srl	r4,r22,r4
100205b4:	1964b03a 	or	r18,r3,r5
100205b8:	1004c03a 	cmpne	r2,r2,zero
100205bc:	90a4b03a 	or	r18,r18,r2
100205c0:	908001cc 	andi	r2,r18,7
100205c4:	10000726 	beq	r2,zero,100205e4 <__divdf3+0x728>
100205c8:	908003cc 	andi	r2,r18,15
100205cc:	10800120 	cmpeqi	r2,r2,4
100205d0:	1000041e 	bne	r2,zero,100205e4 <__divdf3+0x728>
100205d4:	90800104 	addi	r2,r18,4
100205d8:	14a5803a 	cmpltu	r18,r2,r18
100205dc:	2489883a 	add	r4,r4,r18
100205e0:	1025883a 	mov	r18,r2
100205e4:	2080202c 	andhi	r2,r4,128
100205e8:	10005026 	beq	r2,zero,1002072c <__divdf3+0x870>
100205ec:	00800044 	movi	r2,1
100205f0:	0009883a 	mov	r4,zero
100205f4:	0025883a 	mov	r18,zero
100205f8:	003ea006 	br	1002007c <__divdf3+0x1c0>
100205fc:	b839883a 	mov	fp,r23
10020600:	0081ffc4 	movi	r2,2047
10020604:	0009883a 	mov	r4,zero
10020608:	0025883a 	mov	r18,zero
1002060c:	003e9b06 	br	1002007c <__divdf3+0x1c0>
10020610:	88bfb91e 	bne	r17,r2,100204f8 <__divdf3+0x63c>
10020614:	d9000017 	ldw	r4,0(sp)
10020618:	813fb736 	bltu	r16,r4,100204f8 <__divdf3+0x63c>
1002061c:	003fb406 	br	100204f0 <__divdf3+0x634>
10020620:	117f342e 	bgeu	r2,r5,100202f4 <__divdf3+0x438>
10020624:	18ffff84 	addi	r3,r3,-2
10020628:	1445883a 	add	r2,r2,r17
1002062c:	003f3206 	br	100202f8 <__divdf3+0x43c>
10020630:	14ff1e2e 	bgeu	r2,r19,100202ac <__divdf3+0x3f0>
10020634:	b5bfff84 	addi	r22,r22,-2
10020638:	1445883a 	add	r2,r2,r17
1002063c:	003f1c06 	br	100202b0 <__divdf3+0x3f4>
10020640:	2025883a 	mov	r18,r4
10020644:	11ff921e 	bne	r2,r7,10020490 <__divdf3+0x5d4>
10020648:	d8800017 	ldw	r2,0(sp)
1002064c:	10ff901e 	bne	r2,r3,10020490 <__divdf3+0x5d4>
10020650:	003e7406 	br	10020024 <__divdf3+0x168>
10020654:	043fcb0e 	bge	zero,r16,10020584 <__divdf3+0x6c8>
10020658:	000b883a 	mov	r5,zero
1002065c:	04800044 	movi	r18,1
10020660:	b4ad883a 	add	r22,r22,r18
10020664:	003e7306 	br	10020034 <__divdf3+0x178>
10020668:	2013883a 	mov	r9,r4
1002066c:	003f7206 	br	10020438 <__divdf3+0x57c>
10020670:	2007883a 	mov	r3,r4
10020674:	003f5606 	br	100203d0 <__divdf3+0x514>
10020678:	908003cc 	andi	r2,r18,15
1002067c:	10800118 	cmpnei	r2,r2,4
10020680:	103e6b26 	beq	r2,zero,10020030 <__divdf3+0x174>
10020684:	91400104 	addi	r5,r18,4
10020688:	00bffec4 	movi	r2,-5
1002068c:	14a5803a 	cmpltu	r18,r2,r18
10020690:	280ad0fa 	srli	r5,r5,3
10020694:	003ff206 	br	10020660 <__divdf3+0x7a4>
10020698:	84bf972e 	bgeu	r16,r18,100204f8 <__divdf3+0x63c>
1002069c:	d8c00017 	ldw	r3,0(sp)
100206a0:	b5bfff84 	addi	r22,r22,-2
100206a4:	80e1883a 	add	r16,r16,r3
100206a8:	80c7803a 	cmpltu	r3,r16,r3
100206ac:	1c47883a 	add	r3,r3,r17
100206b0:	10c5883a 	add	r2,r2,r3
100206b4:	003f2906 	br	1002035c <__divdf3+0x4a0>
100206b8:	d9400017 	ldw	r5,0(sp)
100206bc:	94bfff84 	addi	r18,r18,-2
100206c0:	2949883a 	add	r4,r5,r5
100206c4:	214b803a 	cmpltu	r5,r4,r5
100206c8:	2c4d883a 	add	r6,r5,r17
100206cc:	1185883a 	add	r2,r2,r6
100206d0:	d9000015 	stw	r4,0(sp)
100206d4:	003fdb06 	br	10020644 <__divdf3+0x788>
100206d8:	00bff844 	movi	r2,-31
100206dc:	1421c83a 	sub	r16,r2,r16
100206e0:	21000820 	cmpeqi	r4,r4,32
100206e4:	b420d83a 	srl	r16,r22,r16
100206e8:	2000031e 	bne	r4,zero,100206f8 <__divdf3+0x83c>
100206ec:	a8810f84 	addi	r2,r21,1086
100206f0:	b088983a 	sll	r4,r22,r2
100206f4:	9124b03a 	or	r18,r18,r4
100206f8:	9024c03a 	cmpne	r18,r18,zero
100206fc:	9424b03a 	or	r18,r18,r16
10020700:	914001cc 	andi	r5,r18,7
10020704:	2800051e 	bne	r5,zero,1002071c <__divdf3+0x860>
10020708:	0009883a 	mov	r4,zero
1002070c:	9024d0fa 	srli	r18,r18,3
10020710:	0005883a 	mov	r2,zero
10020714:	9164b03a 	or	r18,r18,r5
10020718:	003e5806 	br	1002007c <__divdf3+0x1c0>
1002071c:	908003cc 	andi	r2,r18,15
10020720:	10800118 	cmpnei	r2,r2,4
10020724:	0009883a 	mov	r4,zero
10020728:	103faa1e 	bne	r2,zero,100205d4 <__divdf3+0x718>
1002072c:	2004927a 	slli	r2,r4,9
10020730:	200a977a 	slli	r5,r4,29
10020734:	1008d33a 	srli	r4,r2,12
10020738:	003ff406 	br	1002070c <__divdf3+0x850>
1002073c:	00800434 	movhi	r2,16
10020740:	b1000234 	orhi	r4,r22,8
10020744:	10bfffc4 	addi	r2,r2,-1
10020748:	2088703a 	and	r4,r4,r2
1002074c:	b839883a 	mov	fp,r23
10020750:	003eac06 	br	10020204 <__divdf3+0x348>
10020754:	d9400017 	ldw	r5,0(sp)
10020758:	28ffd736 	bltu	r5,r3,100206b8 <__divdf3+0x7fc>
1002075c:	2025883a 	mov	r18,r4
10020760:	003fb906 	br	10020648 <__divdf3+0x78c>

10020764 <__eqdf2>:
10020764:	2810d53a 	srli	r8,r5,20
10020768:	3806d53a 	srli	r3,r7,20
1002076c:	00800434 	movhi	r2,16
10020770:	4201ffcc 	andi	r8,r8,2047
10020774:	10bfffc4 	addi	r2,r2,-1
10020778:	4281ffd8 	cmpnei	r10,r8,2047
1002077c:	2892703a 	and	r9,r5,r2
10020780:	18c1ffcc 	andi	r3,r3,2047
10020784:	3884703a 	and	r2,r7,r2
10020788:	280ad7fa 	srli	r5,r5,31
1002078c:	380ed7fa 	srli	r7,r7,31
10020790:	50000626 	beq	r10,zero,100207ac <__eqdf2+0x48>
10020794:	1a81ffe0 	cmpeqi	r10,r3,2047
10020798:	5000021e 	bne	r10,zero,100207a4 <__eqdf2+0x40>
1002079c:	40c0011e 	bne	r8,r3,100207a4 <__eqdf2+0x40>
100207a0:	48800826 	beq	r9,r2,100207c4 <__eqdf2+0x60>
100207a4:	00800044 	movi	r2,1
100207a8:	f800283a 	ret
100207ac:	4914b03a 	or	r10,r9,r4
100207b0:	503ffc1e 	bne	r10,zero,100207a4 <__eqdf2+0x40>
100207b4:	18c1ffd8 	cmpnei	r3,r3,2047
100207b8:	183ffa1e 	bne	r3,zero,100207a4 <__eqdf2+0x40>
100207bc:	1184b03a 	or	r2,r2,r6
100207c0:	103ff81e 	bne	r2,zero,100207a4 <__eqdf2+0x40>
100207c4:	21bff71e 	bne	r4,r6,100207a4 <__eqdf2+0x40>
100207c8:	29c00426 	beq	r5,r7,100207dc <__eqdf2+0x78>
100207cc:	403ff51e 	bne	r8,zero,100207a4 <__eqdf2+0x40>
100207d0:	4904b03a 	or	r2,r9,r4
100207d4:	1004c03a 	cmpne	r2,r2,zero
100207d8:	f800283a 	ret
100207dc:	0005883a 	mov	r2,zero
100207e0:	f800283a 	ret

100207e4 <__gedf2>:
100207e4:	2810d53a 	srli	r8,r5,20
100207e8:	3812d53a 	srli	r9,r7,20
100207ec:	00800434 	movhi	r2,16
100207f0:	4201ffcc 	andi	r8,r8,2047
100207f4:	10bfffc4 	addi	r2,r2,-1
100207f8:	4281ffd8 	cmpnei	r10,r8,2047
100207fc:	2896703a 	and	r11,r5,r2
10020800:	3886703a 	and	r3,r7,r2
10020804:	280ad7fa 	srli	r5,r5,31
10020808:	4a41ffcc 	andi	r9,r9,2047
1002080c:	3804d7fa 	srli	r2,r7,31
10020810:	50000b26 	beq	r10,zero,10020840 <__gedf2+0x5c>
10020814:	49c1ffd8 	cmpnei	r7,r9,2047
10020818:	38000d26 	beq	r7,zero,10020850 <__gedf2+0x6c>
1002081c:	4000191e 	bne	r8,zero,10020884 <__gedf2+0xa0>
10020820:	5914b03a 	or	r10,r11,r4
10020824:	500f003a 	cmpeq	r7,r10,zero
10020828:	4800131e 	bne	r9,zero,10020878 <__gedf2+0x94>
1002082c:	1998b03a 	or	r12,r3,r6
10020830:	6000111e 	bne	r12,zero,10020878 <__gedf2+0x94>
10020834:	50000a1e 	bne	r10,zero,10020860 <__gedf2+0x7c>
10020838:	0005883a 	mov	r2,zero
1002083c:	f800283a 	ret
10020840:	590eb03a 	or	r7,r11,r4
10020844:	38001e1e 	bne	r7,zero,100208c0 <__gedf2+0xdc>
10020848:	49c1ffe0 	cmpeqi	r7,r9,2047
1002084c:	38000d26 	beq	r7,zero,10020884 <__gedf2+0xa0>
10020850:	198eb03a 	or	r7,r3,r6
10020854:	38001a1e 	bne	r7,zero,100208c0 <__gedf2+0xdc>
10020858:	40000526 	beq	r8,zero,10020870 <__gedf2+0x8c>
1002085c:	28800d26 	beq	r5,r2,10020894 <__gedf2+0xb0>
10020860:	00800044 	movi	r2,1
10020864:	28000626 	beq	r5,zero,10020880 <__gedf2+0x9c>
10020868:	00bfffc4 	movi	r2,-1
1002086c:	f800283a 	ret
10020870:	590eb03a 	or	r7,r11,r4
10020874:	380f003a 	cmpeq	r7,r7,zero
10020878:	383ff826 	beq	r7,zero,1002085c <__gedf2+0x78>
1002087c:	103ffa26 	beq	r2,zero,10020868 <__gedf2+0x84>
10020880:	f800283a 	ret
10020884:	483ff51e 	bne	r9,zero,1002085c <__gedf2+0x78>
10020888:	198eb03a 	or	r7,r3,r6
1002088c:	383ff31e 	bne	r7,zero,1002085c <__gedf2+0x78>
10020890:	003ff306 	br	10020860 <__gedf2+0x7c>
10020894:	4a000716 	blt	r9,r8,100208b4 <__gedf2+0xd0>
10020898:	427ff816 	blt	r8,r9,1002087c <__gedf2+0x98>
1002089c:	1afff036 	bltu	r3,r11,10020860 <__gedf2+0x7c>
100208a0:	58c00926 	beq	r11,r3,100208c8 <__gedf2+0xe4>
100208a4:	58ffe42e 	bgeu	r11,r3,10020838 <__gedf2+0x54>
100208a8:	283fef26 	beq	r5,zero,10020868 <__gedf2+0x84>
100208ac:	2805883a 	mov	r2,r5
100208b0:	f800283a 	ret
100208b4:	103fec1e 	bne	r2,zero,10020868 <__gedf2+0x84>
100208b8:	00800044 	movi	r2,1
100208bc:	f800283a 	ret
100208c0:	00bfff84 	movi	r2,-2
100208c4:	f800283a 	ret
100208c8:	313fe536 	bltu	r6,r4,10020860 <__gedf2+0x7c>
100208cc:	21bfda2e 	bgeu	r4,r6,10020838 <__gedf2+0x54>
100208d0:	003ff506 	br	100208a8 <__gedf2+0xc4>

100208d4 <__ledf2>:
100208d4:	2810d53a 	srli	r8,r5,20
100208d8:	3812d53a 	srli	r9,r7,20
100208dc:	00800434 	movhi	r2,16
100208e0:	4201ffcc 	andi	r8,r8,2047
100208e4:	10bfffc4 	addi	r2,r2,-1
100208e8:	4281ffd8 	cmpnei	r10,r8,2047
100208ec:	2896703a 	and	r11,r5,r2
100208f0:	3886703a 	and	r3,r7,r2
100208f4:	280ad7fa 	srli	r5,r5,31
100208f8:	4a41ffcc 	andi	r9,r9,2047
100208fc:	3804d7fa 	srli	r2,r7,31
10020900:	50000b26 	beq	r10,zero,10020930 <__ledf2+0x5c>
10020904:	49c1ffd8 	cmpnei	r7,r9,2047
10020908:	38000d26 	beq	r7,zero,10020940 <__ledf2+0x6c>
1002090c:	40001b1e 	bne	r8,zero,1002097c <__ledf2+0xa8>
10020910:	5914b03a 	or	r10,r11,r4
10020914:	500f003a 	cmpeq	r7,r10,zero
10020918:	48000e1e 	bne	r9,zero,10020954 <__ledf2+0x80>
1002091c:	1998b03a 	or	r12,r3,r6
10020920:	60000c1e 	bne	r12,zero,10020954 <__ledf2+0x80>
10020924:	50000d1e 	bne	r10,zero,1002095c <__ledf2+0x88>
10020928:	0005883a 	mov	r2,zero
1002092c:	f800283a 	ret
10020930:	590eb03a 	or	r7,r11,r4
10020934:	38000d1e 	bne	r7,zero,1002096c <__ledf2+0x98>
10020938:	49c1ffe0 	cmpeqi	r7,r9,2047
1002093c:	38000f26 	beq	r7,zero,1002097c <__ledf2+0xa8>
10020940:	198eb03a 	or	r7,r3,r6
10020944:	3800091e 	bne	r7,zero,1002096c <__ledf2+0x98>
10020948:	4000031e 	bne	r8,zero,10020958 <__ledf2+0x84>
1002094c:	590eb03a 	or	r7,r11,r4
10020950:	380f003a 	cmpeq	r7,r7,zero
10020954:	3800071e 	bne	r7,zero,10020974 <__ledf2+0xa0>
10020958:	28800c26 	beq	r5,r2,1002098c <__ledf2+0xb8>
1002095c:	00800044 	movi	r2,1
10020960:	28000526 	beq	r5,zero,10020978 <__ledf2+0xa4>
10020964:	00bfffc4 	movi	r2,-1
10020968:	f800283a 	ret
1002096c:	00800084 	movi	r2,2
10020970:	f800283a 	ret
10020974:	103ffb26 	beq	r2,zero,10020964 <__ledf2+0x90>
10020978:	f800283a 	ret
1002097c:	483ff61e 	bne	r9,zero,10020958 <__ledf2+0x84>
10020980:	198eb03a 	or	r7,r3,r6
10020984:	383ff41e 	bne	r7,zero,10020958 <__ledf2+0x84>
10020988:	003ff406 	br	1002095c <__ledf2+0x88>
1002098c:	4a00030e 	bge	r9,r8,1002099c <__ledf2+0xc8>
10020990:	103ff41e 	bne	r2,zero,10020964 <__ledf2+0x90>
10020994:	00800044 	movi	r2,1
10020998:	f800283a 	ret
1002099c:	427ff516 	blt	r8,r9,10020974 <__ledf2+0xa0>
100209a0:	1affee36 	bltu	r3,r11,1002095c <__ledf2+0x88>
100209a4:	58c00426 	beq	r11,r3,100209b8 <__ledf2+0xe4>
100209a8:	58ffdf2e 	bgeu	r11,r3,10020928 <__ledf2+0x54>
100209ac:	283fed26 	beq	r5,zero,10020964 <__ledf2+0x90>
100209b0:	2805883a 	mov	r2,r5
100209b4:	f800283a 	ret
100209b8:	313fe836 	bltu	r6,r4,1002095c <__ledf2+0x88>
100209bc:	21bfda2e 	bgeu	r4,r6,10020928 <__ledf2+0x54>
100209c0:	003ffa06 	br	100209ac <__ledf2+0xd8>

100209c4 <__muldf3>:
100209c4:	2806d53a 	srli	r3,r5,20
100209c8:	defff504 	addi	sp,sp,-44
100209cc:	dc000215 	stw	r16,8(sp)
100209d0:	04000434 	movhi	r16,16
100209d4:	dd000615 	stw	r20,24(sp)
100209d8:	dc800415 	stw	r18,16(sp)
100209dc:	843fffc4 	addi	r16,r16,-1
100209e0:	dfc00a15 	stw	ra,40(sp)
100209e4:	ddc00915 	stw	r23,36(sp)
100209e8:	dd800815 	stw	r22,32(sp)
100209ec:	dd400715 	stw	r21,28(sp)
100209f0:	dcc00515 	stw	r19,20(sp)
100209f4:	dc400315 	stw	r17,12(sp)
100209f8:	18c1ffcc 	andi	r3,r3,2047
100209fc:	2025883a 	mov	r18,r4
10020a00:	2c20703a 	and	r16,r5,r16
10020a04:	2828d7fa 	srli	r20,r5,31
10020a08:	18005c26 	beq	r3,zero,10020b7c <__muldf3+0x1b8>
10020a0c:	1881ffe0 	cmpeqi	r2,r3,2047
10020a10:	1000711e 	bne	r2,zero,10020bd8 <__muldf3+0x214>
10020a14:	800490fa 	slli	r2,r16,3
10020a18:	2020d77a 	srli	r16,r4,29
10020a1c:	202290fa 	slli	r17,r4,3
10020a20:	1cff0044 	addi	r19,r3,-1023
10020a24:	80a0b03a 	or	r16,r16,r2
10020a28:	84002034 	orhi	r16,r16,128
10020a2c:	002d883a 	mov	r22,zero
10020a30:	002f883a 	mov	r23,zero
10020a34:	3806d53a 	srli	r3,r7,20
10020a38:	01000434 	movhi	r4,16
10020a3c:	213fffc4 	addi	r4,r4,-1
10020a40:	18c1ffcc 	andi	r3,r3,2047
10020a44:	3924703a 	and	r18,r7,r4
10020a48:	382ad7fa 	srli	r21,r7,31
10020a4c:	18006926 	beq	r3,zero,10020bf4 <__muldf3+0x230>
10020a50:	1881ffe0 	cmpeqi	r2,r3,2047
10020a54:	1000211e 	bne	r2,zero,10020adc <__muldf3+0x118>
10020a58:	900890fa 	slli	r4,r18,3
10020a5c:	300ad77a 	srli	r5,r6,29
10020a60:	301090fa 	slli	r8,r6,3
10020a64:	18ff0044 	addi	r3,r3,-1023
10020a68:	2908b03a 	or	r4,r5,r4
10020a6c:	98e7883a 	add	r19,r19,r3
10020a70:	24802034 	orhi	r18,r4,128
10020a74:	0007883a 	mov	r3,zero
10020a78:	b1000428 	cmpgeui	r4,r22,16
10020a7c:	a54cf03a 	xor	r6,r20,r21
10020a80:	99400044 	addi	r5,r19,1
10020a84:	2000981e 	bne	r4,zero,10020ce8 <__muldf3+0x324>
10020a88:	b00890ba 	slli	r4,r22,2
10020a8c:	008400b4 	movhi	r2,4098
10020a90:	2085883a 	add	r2,r4,r2
10020a94:	1082a717 	ldw	r2,2716(r2)
10020a98:	1000683a 	jmp	r2
10020a9c:	10020ce8 	cmpgeui	zero,r2,2099
10020aa0:	10020afc 	xorhi	zero,r2,2091
10020aa4:	10020afc 	xorhi	zero,r2,2091
10020aa8:	10020af8 	rdprs	zero,r2,2091
10020aac:	10020b08 	cmpgei	zero,r2,2092
10020ab0:	10020b08 	cmpgei	zero,r2,2092
10020ab4:	10020ca4 	muli	zero,r2,2098
10020ab8:	10020af8 	rdprs	zero,r2,2091
10020abc:	10020b08 	cmpgei	zero,r2,2092
10020ac0:	10020ca4 	muli	zero,r2,2098
10020ac4:	10020b08 	cmpgei	zero,r2,2092
10020ac8:	10020af8 	rdprs	zero,r2,2091
10020acc:	10020c9c 	xori	zero,r2,2098
10020ad0:	10020c9c 	xori	zero,r2,2098
10020ad4:	10020c9c 	xori	zero,r2,2098
10020ad8:	10020cbc 	xorhi	zero,r2,2098
10020adc:	3490b03a 	or	r8,r6,r18
10020ae0:	9cc1ffc4 	addi	r19,r19,2047
10020ae4:	4000691e 	bne	r8,zero,10020c8c <__muldf3+0x2c8>
10020ae8:	b5800094 	ori	r22,r22,2
10020aec:	0025883a 	mov	r18,zero
10020af0:	00c00084 	movi	r3,2
10020af4:	003fe006 	br	10020a78 <__muldf3+0xb4>
10020af8:	a80d883a 	mov	r6,r21
10020afc:	9021883a 	mov	r16,r18
10020b00:	4023883a 	mov	r17,r8
10020b04:	182f883a 	mov	r23,r3
10020b08:	b88000a0 	cmpeqi	r2,r23,2
10020b0c:	10004d1e 	bne	r2,zero,10020c44 <__muldf3+0x280>
10020b10:	b88000e0 	cmpeqi	r2,r23,3
10020b14:	1001491e 	bne	r2,zero,1002103c <__muldf3+0x678>
10020b18:	b8800060 	cmpeqi	r2,r23,1
10020b1c:	1000d826 	beq	r2,zero,10020e80 <__muldf3+0x4bc>
10020b20:	0007883a 	mov	r3,zero
10020b24:	0021883a 	mov	r16,zero
10020b28:	0023883a 	mov	r17,zero
10020b2c:	30803fcc 	andi	r2,r6,255
10020b30:	01000434 	movhi	r4,16
10020b34:	1806953a 	slli	r3,r3,20
10020b38:	213fffc4 	addi	r4,r4,-1
10020b3c:	100497fa 	slli	r2,r2,31
10020b40:	8120703a 	and	r16,r16,r4
10020b44:	80c6b03a 	or	r3,r16,r3
10020b48:	1886b03a 	or	r3,r3,r2
10020b4c:	8805883a 	mov	r2,r17
10020b50:	dfc00a17 	ldw	ra,40(sp)
10020b54:	ddc00917 	ldw	r23,36(sp)
10020b58:	dd800817 	ldw	r22,32(sp)
10020b5c:	dd400717 	ldw	r21,28(sp)
10020b60:	dd000617 	ldw	r20,24(sp)
10020b64:	dcc00517 	ldw	r19,20(sp)
10020b68:	dc800417 	ldw	r18,16(sp)
10020b6c:	dc400317 	ldw	r17,12(sp)
10020b70:	dc000217 	ldw	r16,8(sp)
10020b74:	dec00b04 	addi	sp,sp,44
10020b78:	f800283a 	ret
10020b7c:	8122b03a 	or	r17,r16,r4
10020b80:	88003d26 	beq	r17,zero,10020c78 <__muldf3+0x2b4>
10020b84:	d9c00115 	stw	r7,4(sp)
10020b88:	d9800015 	stw	r6,0(sp)
10020b8c:	8000e826 	beq	r16,zero,10020f30 <__muldf3+0x56c>
10020b90:	8009883a 	mov	r4,r16
10020b94:	0021bf40 	call	10021bf4 <__clzsi2>
10020b98:	d9800017 	ldw	r6,0(sp)
10020b9c:	d9c00117 	ldw	r7,4(sp)
10020ba0:	1007883a 	mov	r3,r2
10020ba4:	117ffd44 	addi	r5,r2,-11
10020ba8:	01000744 	movi	r4,29
10020bac:	1c7ffe04 	addi	r17,r3,-8
10020bb0:	2149c83a 	sub	r4,r4,r5
10020bb4:	8460983a 	sll	r16,r16,r17
10020bb8:	9108d83a 	srl	r4,r18,r4
10020bbc:	9462983a 	sll	r17,r18,r17
10020bc0:	2420b03a 	or	r16,r4,r16
10020bc4:	04ff0344 	movi	r19,-1011
10020bc8:	98e7c83a 	sub	r19,r19,r3
10020bcc:	002d883a 	mov	r22,zero
10020bd0:	002f883a 	mov	r23,zero
10020bd4:	003f9706 	br	10020a34 <__muldf3+0x70>
10020bd8:	8122b03a 	or	r17,r16,r4
10020bdc:	8800211e 	bne	r17,zero,10020c64 <__muldf3+0x2a0>
10020be0:	0021883a 	mov	r16,zero
10020be4:	05800204 	movi	r22,8
10020be8:	04c1ffc4 	movi	r19,2047
10020bec:	05c00084 	movi	r23,2
10020bf0:	003f9006 	br	10020a34 <__muldf3+0x70>
10020bf4:	3490b03a 	or	r8,r6,r18
10020bf8:	40001626 	beq	r8,zero,10020c54 <__muldf3+0x290>
10020bfc:	9000c026 	beq	r18,zero,10020f00 <__muldf3+0x53c>
10020c00:	9009883a 	mov	r4,r18
10020c04:	d9800015 	stw	r6,0(sp)
10020c08:	0021bf40 	call	10021bf4 <__clzsi2>
10020c0c:	d9800017 	ldw	r6,0(sp)
10020c10:	1007883a 	mov	r3,r2
10020c14:	113ffd44 	addi	r4,r2,-11
10020c18:	01400744 	movi	r5,29
10020c1c:	1a3ffe04 	addi	r8,r3,-8
10020c20:	290bc83a 	sub	r5,r5,r4
10020c24:	314ad83a 	srl	r5,r6,r5
10020c28:	9208983a 	sll	r4,r18,r8
10020c2c:	3210983a 	sll	r8,r6,r8
10020c30:	2924b03a 	or	r18,r5,r4
10020c34:	98c7c83a 	sub	r3,r19,r3
10020c38:	1cff0344 	addi	r19,r3,-1011
10020c3c:	0007883a 	mov	r3,zero
10020c40:	003f8d06 	br	10020a78 <__muldf3+0xb4>
10020c44:	00c1ffc4 	movi	r3,2047
10020c48:	0021883a 	mov	r16,zero
10020c4c:	0023883a 	mov	r17,zero
10020c50:	003fb606 	br	10020b2c <__muldf3+0x168>
10020c54:	b5800054 	ori	r22,r22,1
10020c58:	0025883a 	mov	r18,zero
10020c5c:	00c00044 	movi	r3,1
10020c60:	003f8506 	br	10020a78 <__muldf3+0xb4>
10020c64:	2023883a 	mov	r17,r4
10020c68:	05800304 	movi	r22,12
10020c6c:	04c1ffc4 	movi	r19,2047
10020c70:	05c000c4 	movi	r23,3
10020c74:	003f6f06 	br	10020a34 <__muldf3+0x70>
10020c78:	0021883a 	mov	r16,zero
10020c7c:	05800104 	movi	r22,4
10020c80:	0027883a 	mov	r19,zero
10020c84:	05c00044 	movi	r23,1
10020c88:	003f6a06 	br	10020a34 <__muldf3+0x70>
10020c8c:	b58000d4 	ori	r22,r22,3
10020c90:	3011883a 	mov	r8,r6
10020c94:	00c000c4 	movi	r3,3
10020c98:	003f7706 	br	10020a78 <__muldf3+0xb4>
10020c9c:	a00d883a 	mov	r6,r20
10020ca0:	003f9906 	br	10020b08 <__muldf3+0x144>
10020ca4:	04000434 	movhi	r16,16
10020ca8:	000d883a 	mov	r6,zero
10020cac:	843fffc4 	addi	r16,r16,-1
10020cb0:	047fffc4 	movi	r17,-1
10020cb4:	00c1ffc4 	movi	r3,2047
10020cb8:	003f9c06 	br	10020b2c <__muldf3+0x168>
10020cbc:	8080022c 	andhi	r2,r16,8
10020cc0:	10008926 	beq	r2,zero,10020ee8 <__muldf3+0x524>
10020cc4:	9080022c 	andhi	r2,r18,8
10020cc8:	1000871e 	bne	r2,zero,10020ee8 <__muldf3+0x524>
10020ccc:	00800434 	movhi	r2,16
10020cd0:	94000234 	orhi	r16,r18,8
10020cd4:	10bfffc4 	addi	r2,r2,-1
10020cd8:	80a0703a 	and	r16,r16,r2
10020cdc:	a80d883a 	mov	r6,r21
10020ce0:	4023883a 	mov	r17,r8
10020ce4:	003ff306 	br	10020cb4 <__muldf3+0x2f0>
10020ce8:	8818d43a 	srli	r12,r17,16
10020cec:	4028d43a 	srli	r20,r8,16
10020cf0:	42ffffcc 	andi	r11,r8,65535
10020cf4:	8c7fffcc 	andi	r17,r17,65535
10020cf8:	5c47383a 	mul	r3,r11,r17
10020cfc:	62c9383a 	mul	r4,r12,r11
10020d00:	a445383a 	mul	r2,r20,r17
10020d04:	1810d43a 	srli	r8,r3,16
10020d08:	651d383a 	mul	r14,r12,r20
10020d0c:	1105883a 	add	r2,r2,r4
10020d10:	4091883a 	add	r8,r8,r2
10020d14:	4100022e 	bgeu	r8,r4,10020d20 <__muldf3+0x35c>
10020d18:	00800074 	movhi	r2,1
10020d1c:	709d883a 	add	r14,r14,r2
10020d20:	901ed43a 	srli	r15,r18,16
10020d24:	94bfffcc 	andi	r18,r18,65535
10020d28:	9449383a 	mul	r4,r18,r17
10020d2c:	648f383a 	mul	r7,r12,r18
10020d30:	7c63383a 	mul	r17,r15,r17
10020d34:	201ad43a 	srli	r13,r4,16
10020d38:	4014943a 	slli	r10,r8,16
10020d3c:	89e3883a 	add	r17,r17,r7
10020d40:	1a7fffcc 	andi	r9,r3,65535
10020d44:	6c5b883a 	add	r13,r13,r17
10020d48:	4006d43a 	srli	r3,r8,16
10020d4c:	5253883a 	add	r9,r10,r9
10020d50:	63c5383a 	mul	r2,r12,r15
10020d54:	69c0022e 	bgeu	r13,r7,10020d60 <__muldf3+0x39c>
10020d58:	01c00074 	movhi	r7,1
10020d5c:	11c5883a 	add	r2,r2,r7
10020d60:	802ad43a 	srli	r21,r16,16
10020d64:	823fffcc 	andi	r8,r16,65535
10020d68:	5a2d383a 	mul	r22,r11,r8
10020d6c:	a20f383a 	mul	r7,r20,r8
10020d70:	aad7383a 	mul	r11,r21,r11
10020d74:	6814943a 	slli	r10,r13,16
10020d78:	b018d43a 	srli	r12,r22,16
10020d7c:	6822d43a 	srli	r17,r13,16
10020d80:	213fffcc 	andi	r4,r4,65535
10020d84:	3acf883a 	add	r7,r7,r11
10020d88:	5115883a 	add	r10,r10,r4
10020d8c:	61cf883a 	add	r7,r12,r7
10020d90:	889b883a 	add	r13,r17,r2
10020d94:	1a87883a 	add	r3,r3,r10
10020d98:	a569383a 	mul	r20,r20,r21
10020d9c:	3ac0022e 	bgeu	r7,r11,10020da8 <__muldf3+0x3e4>
10020da0:	00800074 	movhi	r2,1
10020da4:	a0a9883a 	add	r20,r20,r2
10020da8:	9217383a 	mul	r11,r18,r8
10020dac:	aca5383a 	mul	r18,r21,r18
10020db0:	7a11383a 	mul	r8,r15,r8
10020db4:	5820d43a 	srli	r16,r11,16
10020db8:	3808d43a 	srli	r4,r7,16
10020dbc:	380e943a 	slli	r7,r7,16
10020dc0:	4491883a 	add	r8,r8,r18
10020dc4:	b5bfffcc 	andi	r22,r22,65535
10020dc8:	8211883a 	add	r8,r16,r8
10020dcc:	2529883a 	add	r20,r4,r20
10020dd0:	3d8f883a 	add	r7,r7,r22
10020dd4:	7d59383a 	mul	r12,r15,r21
10020dd8:	4480022e 	bgeu	r8,r18,10020de4 <__muldf3+0x420>
10020ddc:	00800074 	movhi	r2,1
10020de0:	6099883a 	add	r12,r12,r2
10020de4:	4004943a 	slli	r2,r8,16
10020de8:	5affffcc 	andi	r11,r11,65535
10020dec:	1b87883a 	add	r3,r3,r14
10020df0:	12c5883a 	add	r2,r2,r11
10020df4:	1a95803a 	cmpltu	r10,r3,r10
10020df8:	1345883a 	add	r2,r2,r13
10020dfc:	19c7883a 	add	r3,r3,r7
10020e00:	129d883a 	add	r14,r2,r10
10020e04:	19cf803a 	cmpltu	r7,r3,r7
10020e08:	7509883a 	add	r4,r14,r20
10020e0c:	4010d43a 	srli	r8,r8,16
10020e10:	21d7883a 	add	r11,r4,r7
10020e14:	1345803a 	cmpltu	r2,r2,r13
10020e18:	72a1803a 	cmpltu	r16,r14,r10
10020e1c:	1420b03a 	or	r16,r2,r16
10020e20:	2509803a 	cmpltu	r4,r4,r20
10020e24:	59cf803a 	cmpltu	r7,r11,r7
10020e28:	21ceb03a 	or	r7,r4,r7
10020e2c:	8221883a 	add	r16,r16,r8
10020e30:	81e1883a 	add	r16,r16,r7
10020e34:	1822927a 	slli	r17,r3,9
10020e38:	8321883a 	add	r16,r16,r12
10020e3c:	8020927a 	slli	r16,r16,9
10020e40:	5808d5fa 	srli	r4,r11,23
10020e44:	1806d5fa 	srli	r3,r3,23
10020e48:	8a62b03a 	or	r17,r17,r9
10020e4c:	5804927a 	slli	r2,r11,9
10020e50:	8120b03a 	or	r16,r16,r4
10020e54:	8822c03a 	cmpne	r17,r17,zero
10020e58:	88e2b03a 	or	r17,r17,r3
10020e5c:	80c0402c 	andhi	r3,r16,256
10020e60:	88a2b03a 	or	r17,r17,r2
10020e64:	18005a26 	beq	r3,zero,10020fd0 <__muldf3+0x60c>
10020e68:	8804d07a 	srli	r2,r17,1
10020e6c:	800697fa 	slli	r3,r16,31
10020e70:	8c40004c 	andi	r17,r17,1
10020e74:	8020d07a 	srli	r16,r16,1
10020e78:	1462b03a 	or	r17,r2,r17
10020e7c:	88e2b03a 	or	r17,r17,r3
10020e80:	28c0ffc4 	addi	r3,r5,1023
10020e84:	00c0350e 	bge	zero,r3,10020f5c <__muldf3+0x598>
10020e88:	888001cc 	andi	r2,r17,7
10020e8c:	10000726 	beq	r2,zero,10020eac <__muldf3+0x4e8>
10020e90:	888003cc 	andi	r2,r17,15
10020e94:	10800120 	cmpeqi	r2,r2,4
10020e98:	1000041e 	bne	r2,zero,10020eac <__muldf3+0x4e8>
10020e9c:	88800104 	addi	r2,r17,4
10020ea0:	1463803a 	cmpltu	r17,r2,r17
10020ea4:	8461883a 	add	r16,r16,r17
10020ea8:	1023883a 	mov	r17,r2
10020eac:	8080402c 	andhi	r2,r16,256
10020eb0:	10000426 	beq	r2,zero,10020ec4 <__muldf3+0x500>
10020eb4:	00bfc034 	movhi	r2,65280
10020eb8:	10bfffc4 	addi	r2,r2,-1
10020ebc:	80a0703a 	and	r16,r16,r2
10020ec0:	28c10004 	addi	r3,r5,1024
10020ec4:	1881ffc8 	cmpgei	r2,r3,2047
10020ec8:	103f5e1e 	bne	r2,zero,10020c44 <__muldf3+0x280>
10020ecc:	8004977a 	slli	r2,r16,29
10020ed0:	8822d0fa 	srli	r17,r17,3
10020ed4:	8020927a 	slli	r16,r16,9
10020ed8:	18c1ffcc 	andi	r3,r3,2047
10020edc:	1462b03a 	or	r17,r2,r17
10020ee0:	8020d33a 	srli	r16,r16,12
10020ee4:	003f1106 	br	10020b2c <__muldf3+0x168>
10020ee8:	00800434 	movhi	r2,16
10020eec:	84000234 	orhi	r16,r16,8
10020ef0:	10bfffc4 	addi	r2,r2,-1
10020ef4:	80a0703a 	and	r16,r16,r2
10020ef8:	a00d883a 	mov	r6,r20
10020efc:	003f6d06 	br	10020cb4 <__muldf3+0x2f0>
10020f00:	3009883a 	mov	r4,r6
10020f04:	d9800015 	stw	r6,0(sp)
10020f08:	0021bf40 	call	10021bf4 <__clzsi2>
10020f0c:	11000544 	addi	r4,r2,21
10020f10:	21400748 	cmpgei	r5,r4,29
10020f14:	10c00804 	addi	r3,r2,32
10020f18:	d9800017 	ldw	r6,0(sp)
10020f1c:	283f3e26 	beq	r5,zero,10020c18 <__muldf3+0x254>
10020f20:	10bffe04 	addi	r2,r2,-8
10020f24:	30a4983a 	sll	r18,r6,r2
10020f28:	0011883a 	mov	r8,zero
10020f2c:	003f4106 	br	10020c34 <__muldf3+0x270>
10020f30:	0021bf40 	call	10021bf4 <__clzsi2>
10020f34:	11400544 	addi	r5,r2,21
10020f38:	29000748 	cmpgei	r4,r5,29
10020f3c:	10c00804 	addi	r3,r2,32
10020f40:	d9800017 	ldw	r6,0(sp)
10020f44:	d9c00117 	ldw	r7,4(sp)
10020f48:	203f1726 	beq	r4,zero,10020ba8 <__muldf3+0x1e4>
10020f4c:	10bffe04 	addi	r2,r2,-8
10020f50:	90a0983a 	sll	r16,r18,r2
10020f54:	0023883a 	mov	r17,zero
10020f58:	003f1a06 	br	10020bc4 <__muldf3+0x200>
10020f5c:	00800044 	movi	r2,1
10020f60:	10c5c83a 	sub	r2,r2,r3
10020f64:	11000e48 	cmpgei	r4,r2,57
10020f68:	203eed1e 	bne	r4,zero,10020b20 <__muldf3+0x15c>
10020f6c:	11000808 	cmpgei	r4,r2,32
10020f70:	2000191e 	bne	r4,zero,10020fd8 <__muldf3+0x614>
10020f74:	29410784 	addi	r5,r5,1054
10020f78:	8146983a 	sll	r3,r16,r5
10020f7c:	8888d83a 	srl	r4,r17,r2
10020f80:	894a983a 	sll	r5,r17,r5
10020f84:	80a0d83a 	srl	r16,r16,r2
10020f88:	1904b03a 	or	r2,r3,r4
10020f8c:	2822c03a 	cmpne	r17,r5,zero
10020f90:	1444b03a 	or	r2,r2,r17
10020f94:	10c001cc 	andi	r3,r2,7
10020f98:	18000726 	beq	r3,zero,10020fb8 <__muldf3+0x5f4>
10020f9c:	10c003cc 	andi	r3,r2,15
10020fa0:	18c00120 	cmpeqi	r3,r3,4
10020fa4:	1800041e 	bne	r3,zero,10020fb8 <__muldf3+0x5f4>
10020fa8:	10c00104 	addi	r3,r2,4
10020fac:	1885803a 	cmpltu	r2,r3,r2
10020fb0:	80a1883a 	add	r16,r16,r2
10020fb4:	1805883a 	mov	r2,r3
10020fb8:	80c0202c 	andhi	r3,r16,128
10020fbc:	18001b26 	beq	r3,zero,1002102c <__muldf3+0x668>
10020fc0:	00c00044 	movi	r3,1
10020fc4:	0021883a 	mov	r16,zero
10020fc8:	0023883a 	mov	r17,zero
10020fcc:	003ed706 	br	10020b2c <__muldf3+0x168>
10020fd0:	980b883a 	mov	r5,r19
10020fd4:	003faa06 	br	10020e80 <__muldf3+0x4bc>
10020fd8:	013ff844 	movi	r4,-31
10020fdc:	20c7c83a 	sub	r3,r4,r3
10020fe0:	10800820 	cmpeqi	r2,r2,32
10020fe4:	80c6d83a 	srl	r3,r16,r3
10020fe8:	1000031e 	bne	r2,zero,10020ff8 <__muldf3+0x634>
10020fec:	28810f84 	addi	r2,r5,1086
10020ff0:	8084983a 	sll	r2,r16,r2
10020ff4:	88a2b03a 	or	r17,r17,r2
10020ff8:	8822c03a 	cmpne	r17,r17,zero
10020ffc:	88c4b03a 	or	r2,r17,r3
10021000:	144001cc 	andi	r17,r2,7
10021004:	8800051e 	bne	r17,zero,1002101c <__muldf3+0x658>
10021008:	0021883a 	mov	r16,zero
1002100c:	1004d0fa 	srli	r2,r2,3
10021010:	0007883a 	mov	r3,zero
10021014:	1462b03a 	or	r17,r2,r17
10021018:	003ec406 	br	10020b2c <__muldf3+0x168>
1002101c:	10c003cc 	andi	r3,r2,15
10021020:	18c00118 	cmpnei	r3,r3,4
10021024:	0021883a 	mov	r16,zero
10021028:	183fdf1e 	bne	r3,zero,10020fa8 <__muldf3+0x5e4>
1002102c:	8006927a 	slli	r3,r16,9
10021030:	8022977a 	slli	r17,r16,29
10021034:	1820d33a 	srli	r16,r3,12
10021038:	003ff406 	br	1002100c <__muldf3+0x648>
1002103c:	00800434 	movhi	r2,16
10021040:	84000234 	orhi	r16,r16,8
10021044:	10bfffc4 	addi	r2,r2,-1
10021048:	80a0703a 	and	r16,r16,r2
1002104c:	003f1906 	br	10020cb4 <__muldf3+0x2f0>

10021050 <__subdf3>:
10021050:	00800434 	movhi	r2,16
10021054:	3812d53a 	srli	r9,r7,20
10021058:	10bfffc4 	addi	r2,r2,-1
1002105c:	defffb04 	addi	sp,sp,-20
10021060:	2890703a 	and	r8,r5,r2
10021064:	3884703a 	and	r2,r7,r2
10021068:	2806d7fa 	srli	r3,r5,31
1002106c:	dcc00315 	stw	r19,12(sp)
10021070:	dc400115 	stw	r17,4(sp)
10021074:	280ad53a 	srli	r5,r5,20
10021078:	401090fa 	slli	r8,r8,3
1002107c:	2026d77a 	srli	r19,r4,29
10021080:	100490fa 	slli	r2,r2,3
10021084:	3022d77a 	srli	r17,r6,29
10021088:	4a81ffcc 	andi	r10,r9,2047
1002108c:	dc800215 	stw	r18,8(sp)
10021090:	dc000015 	stw	r16,0(sp)
10021094:	dfc00415 	stw	ra,16(sp)
10021098:	5241ffe0 	cmpeqi	r9,r10,2047
1002109c:	1825883a 	mov	r18,r3
100210a0:	2c01ffcc 	andi	r16,r5,2047
100210a4:	18c03fcc 	andi	r3,r3,255
100210a8:	9a18b03a 	or	r12,r19,r8
100210ac:	201a90fa 	slli	r13,r4,3
100210b0:	380ed7fa 	srli	r7,r7,31
100210b4:	8896b03a 	or	r11,r17,r2
100210b8:	301c90fa 	slli	r14,r6,3
100210bc:	4800711e 	bne	r9,zero,10021284 <__subdf3+0x234>
100210c0:	39c0005c 	xori	r7,r7,1
100210c4:	8291c83a 	sub	r8,r16,r10
100210c8:	19c05a26 	beq	r3,r7,10021234 <__subdf3+0x1e4>
100210cc:	0200720e 	bge	zero,r8,10021298 <__subdf3+0x248>
100210d0:	50008126 	beq	r10,zero,100212d8 <__subdf3+0x288>
100210d4:	8081ffd8 	cmpnei	r2,r16,2047
100210d8:	10011626 	beq	r2,zero,10021534 <__subdf3+0x4e4>
100210dc:	5ac02034 	orhi	r11,r11,128
100210e0:	40800e48 	cmpgei	r2,r8,57
100210e4:	1000fe1e 	bne	r2,zero,100214e0 <__subdf3+0x490>
100210e8:	40800808 	cmpgei	r2,r8,32
100210ec:	10015e1e 	bne	r2,zero,10021668 <__subdf3+0x618>
100210f0:	00800804 	movi	r2,32
100210f4:	1205c83a 	sub	r2,r2,r8
100210f8:	58a2983a 	sll	r17,r11,r2
100210fc:	7206d83a 	srl	r3,r14,r8
10021100:	709c983a 	sll	r14,r14,r2
10021104:	5a04d83a 	srl	r2,r11,r8
10021108:	88e2b03a 	or	r17,r17,r3
1002110c:	701cc03a 	cmpne	r14,r14,zero
10021110:	8ba2b03a 	or	r17,r17,r14
10021114:	6099c83a 	sub	r12,r12,r2
10021118:	6c63c83a 	sub	r17,r13,r17
1002111c:	6c49803a 	cmpltu	r4,r13,r17
10021120:	6109c83a 	sub	r4,r12,r4
10021124:	2080202c 	andhi	r2,r4,128
10021128:	10009f26 	beq	r2,zero,100213a8 <__subdf3+0x358>
1002112c:	04c02034 	movhi	r19,128
10021130:	9cffffc4 	addi	r19,r19,-1
10021134:	24e6703a 	and	r19,r4,r19
10021138:	9800e026 	beq	r19,zero,100214bc <__subdf3+0x46c>
1002113c:	9809883a 	mov	r4,r19
10021140:	0021bf40 	call	10021bf4 <__clzsi2>
10021144:	123ffe04 	addi	r8,r2,-8
10021148:	01000804 	movi	r4,32
1002114c:	2209c83a 	sub	r4,r4,r8
10021150:	8906d83a 	srl	r3,r17,r4
10021154:	9a08983a 	sll	r4,r19,r8
10021158:	8a22983a 	sll	r17,r17,r8
1002115c:	1908b03a 	or	r4,r3,r4
10021160:	4400cf16 	blt	r8,r16,100214a0 <__subdf3+0x450>
10021164:	4411c83a 	sub	r8,r8,r16
10021168:	40800044 	addi	r2,r8,1
1002116c:	10c00808 	cmpgei	r3,r2,32
10021170:	1801251e 	bne	r3,zero,10021608 <__subdf3+0x5b8>
10021174:	00c00804 	movi	r3,32
10021178:	1887c83a 	sub	r3,r3,r2
1002117c:	888ad83a 	srl	r5,r17,r2
10021180:	88e2983a 	sll	r17,r17,r3
10021184:	20c6983a 	sll	r3,r4,r3
10021188:	2088d83a 	srl	r4,r4,r2
1002118c:	8822c03a 	cmpne	r17,r17,zero
10021190:	1946b03a 	or	r3,r3,r5
10021194:	1c62b03a 	or	r17,r3,r17
10021198:	0021883a 	mov	r16,zero
1002119c:	888001cc 	andi	r2,r17,7
100211a0:	10000726 	beq	r2,zero,100211c0 <__subdf3+0x170>
100211a4:	888003cc 	andi	r2,r17,15
100211a8:	10800120 	cmpeqi	r2,r2,4
100211ac:	1000041e 	bne	r2,zero,100211c0 <__subdf3+0x170>
100211b0:	88c00104 	addi	r3,r17,4
100211b4:	1c63803a 	cmpltu	r17,r3,r17
100211b8:	2449883a 	add	r4,r4,r17
100211bc:	1823883a 	mov	r17,r3
100211c0:	2080202c 	andhi	r2,r4,128
100211c4:	10007a26 	beq	r2,zero,100213b0 <__subdf3+0x360>
100211c8:	82000044 	addi	r8,r16,1
100211cc:	4081ffe0 	cmpeqi	r2,r8,2047
100211d0:	4201ffcc 	andi	r8,r8,2047
100211d4:	10008c1e 	bne	r2,zero,10021408 <__subdf3+0x3b8>
100211d8:	00bfe034 	movhi	r2,65408
100211dc:	10bfffc4 	addi	r2,r2,-1
100211e0:	2084703a 	and	r2,r4,r2
100211e4:	1008927a 	slli	r4,r2,9
100211e8:	8822d0fa 	srli	r17,r17,3
100211ec:	100c977a 	slli	r6,r2,29
100211f0:	2008d33a 	srli	r4,r4,12
100211f4:	3444b03a 	or	r2,r6,r17
100211f8:	4010953a 	slli	r8,r8,20
100211fc:	00c00434 	movhi	r3,16
10021200:	94803fcc 	andi	r18,r18,255
10021204:	902497fa 	slli	r18,r18,31
10021208:	18ffffc4 	addi	r3,r3,-1
1002120c:	20c6703a 	and	r3,r4,r3
10021210:	1a06b03a 	or	r3,r3,r8
10021214:	1c86b03a 	or	r3,r3,r18
10021218:	dfc00417 	ldw	ra,16(sp)
1002121c:	dcc00317 	ldw	r19,12(sp)
10021220:	dc800217 	ldw	r18,8(sp)
10021224:	dc400117 	ldw	r17,4(sp)
10021228:	dc000017 	ldw	r16,0(sp)
1002122c:	dec00504 	addi	sp,sp,20
10021230:	f800283a 	ret
10021234:	0200320e 	bge	zero,r8,10021300 <__subdf3+0x2b0>
10021238:	50004c26 	beq	r10,zero,1002136c <__subdf3+0x31c>
1002123c:	8081ffd8 	cmpnei	r2,r16,2047
10021240:	1000bc26 	beq	r2,zero,10021534 <__subdf3+0x4e4>
10021244:	5ac02034 	orhi	r11,r11,128
10021248:	40800e48 	cmpgei	r2,r8,57
1002124c:	1000641e 	bne	r2,zero,100213e0 <__subdf3+0x390>
10021250:	40800808 	cmpgei	r2,r8,32
10021254:	10011726 	beq	r2,zero,100216b4 <__subdf3+0x664>
10021258:	447ff804 	addi	r17,r8,-32
1002125c:	40800820 	cmpeqi	r2,r8,32
10021260:	5c46d83a 	srl	r3,r11,r17
10021264:	1000041e 	bne	r2,zero,10021278 <__subdf3+0x228>
10021268:	00801004 	movi	r2,64
1002126c:	1205c83a 	sub	r2,r2,r8
10021270:	5884983a 	sll	r2,r11,r2
10021274:	709cb03a 	or	r14,r14,r2
10021278:	7022c03a 	cmpne	r17,r14,zero
1002127c:	88e2b03a 	or	r17,r17,r3
10021280:	00005906 	br	100213e8 <__subdf3+0x398>
10021284:	5b8ab03a 	or	r5,r11,r14
10021288:	823e0044 	addi	r8,r16,-2047
1002128c:	28001a1e 	bne	r5,zero,100212f8 <__subdf3+0x2a8>
10021290:	39c0005c 	xori	r7,r7,1
10021294:	19c01a26 	beq	r3,r7,10021300 <__subdf3+0x2b0>
10021298:	4000291e 	bne	r8,zero,10021340 <__subdf3+0x2f0>
1002129c:	80800044 	addi	r2,r16,1
100212a0:	1081ff8c 	andi	r2,r2,2046
100212a4:	1000911e 	bne	r2,zero,100214ec <__subdf3+0x49c>
100212a8:	6346b03a 	or	r3,r12,r13
100212ac:	5b84b03a 	or	r2,r11,r14
100212b0:	8001551e 	bne	r16,zero,10021808 <__subdf3+0x7b8>
100212b4:	18011b26 	beq	r3,zero,10021724 <__subdf3+0x6d4>
100212b8:	1001641e 	bne	r2,zero,1002184c <__subdf3+0x7fc>
100212bc:	00880034 	movhi	r2,8192
100212c0:	6022977a 	slli	r17,r12,29
100212c4:	10bfffc4 	addi	r2,r2,-1
100212c8:	2088703a 	and	r4,r4,r2
100212cc:	2444b03a 	or	r2,r4,r17
100212d0:	6026d0fa 	srli	r19,r12,3
100212d4:	00003d06 	br	100213cc <__subdf3+0x37c>
100212d8:	5b84b03a 	or	r2,r11,r14
100212dc:	10008e26 	beq	r2,zero,10021518 <__subdf3+0x4c8>
100212e0:	40bfffc4 	addi	r2,r8,-1
100212e4:	10011f26 	beq	r2,zero,10021764 <__subdf3+0x714>
100212e8:	4201ffd8 	cmpnei	r8,r8,2047
100212ec:	40012d26 	beq	r8,zero,100217a4 <__subdf3+0x754>
100212f0:	1011883a 	mov	r8,r2
100212f4:	003f7a06 	br	100210e0 <__subdf3+0x90>
100212f8:	39c03fcc 	andi	r7,r7,255
100212fc:	19ffe61e 	bne	r3,r7,10021298 <__subdf3+0x248>
10021300:	4000931e 	bne	r8,zero,10021550 <__subdf3+0x500>
10021304:	80c00044 	addi	r3,r16,1
10021308:	1881ff8c 	andi	r2,r3,2046
1002130c:	10012c1e 	bne	r2,zero,100217c0 <__subdf3+0x770>
10021310:	6344b03a 	or	r2,r12,r13
10021314:	8000f91e 	bne	r16,zero,100216fc <__subdf3+0x6ac>
10021318:	10017326 	beq	r2,zero,100218e8 <__subdf3+0x898>
1002131c:	5b84b03a 	or	r2,r11,r14
10021320:	1001781e 	bne	r2,zero,10021904 <__subdf3+0x8b4>
10021324:	6004977a 	slli	r2,r12,29
10021328:	00c80034 	movhi	r3,8192
1002132c:	18ffffc4 	addi	r3,r3,-1
10021330:	20c6703a 	and	r3,r4,r3
10021334:	10c4b03a 	or	r2,r2,r3
10021338:	6026d0fa 	srli	r19,r12,3
1002133c:	00002306 	br	100213cc <__subdf3+0x37c>
10021340:	5411c83a 	sub	r8,r10,r16
10021344:	3825883a 	mov	r18,r7
10021348:	8000991e 	bne	r16,zero,100215b0 <__subdf3+0x560>
1002134c:	6344b03a 	or	r2,r12,r13
10021350:	1000e326 	beq	r2,zero,100216e0 <__subdf3+0x690>
10021354:	40bfffc4 	addi	r2,r8,-1
10021358:	10015d26 	beq	r2,zero,100218d0 <__subdf3+0x880>
1002135c:	4201ffd8 	cmpnei	r8,r8,2047
10021360:	4000f926 	beq	r8,zero,10021748 <__subdf3+0x6f8>
10021364:	1011883a 	mov	r8,r2
10021368:	00009406 	br	100215bc <__subdf3+0x56c>
1002136c:	5b84b03a 	or	r2,r11,r14
10021370:	10010226 	beq	r2,zero,1002177c <__subdf3+0x72c>
10021374:	40bfffc4 	addi	r2,r8,-1
10021378:	10000426 	beq	r2,zero,1002138c <__subdf3+0x33c>
1002137c:	4201ffd8 	cmpnei	r8,r8,2047
10021380:	40014126 	beq	r8,zero,10021888 <__subdf3+0x838>
10021384:	1011883a 	mov	r8,r2
10021388:	003faf06 	br	10021248 <__subdf3+0x1f8>
1002138c:	6ba3883a 	add	r17,r13,r14
10021390:	62c9883a 	add	r4,r12,r11
10021394:	8b5b803a 	cmpltu	r13,r17,r13
10021398:	2349883a 	add	r4,r4,r13
1002139c:	2080202c 	andhi	r2,r4,128
100213a0:	1000a61e 	bne	r2,zero,1002163c <__subdf3+0x5ec>
100213a4:	04000044 	movi	r16,1
100213a8:	888001cc 	andi	r2,r17,7
100213ac:	103f7d1e 	bne	r2,zero,100211a4 <__subdf3+0x154>
100213b0:	8822d0fa 	srli	r17,r17,3
100213b4:	2004977a 	slli	r2,r4,29
100213b8:	2026d0fa 	srli	r19,r4,3
100213bc:	8011883a 	mov	r8,r16
100213c0:	8884b03a 	or	r2,r17,r2
100213c4:	40c1ffe0 	cmpeqi	r3,r8,2047
100213c8:	18002d1e 	bne	r3,zero,10021480 <__subdf3+0x430>
100213cc:	01000434 	movhi	r4,16
100213d0:	213fffc4 	addi	r4,r4,-1
100213d4:	9908703a 	and	r4,r19,r4
100213d8:	4201ffcc 	andi	r8,r8,2047
100213dc:	003f8606 	br	100211f8 <__subdf3+0x1a8>
100213e0:	5ba2b03a 	or	r17,r11,r14
100213e4:	8822c03a 	cmpne	r17,r17,zero
100213e8:	8b63883a 	add	r17,r17,r13
100213ec:	8b49803a 	cmpltu	r4,r17,r13
100213f0:	2309883a 	add	r4,r4,r12
100213f4:	2080202c 	andhi	r2,r4,128
100213f8:	103feb26 	beq	r2,zero,100213a8 <__subdf3+0x358>
100213fc:	84000044 	addi	r16,r16,1
10021400:	8081ffe0 	cmpeqi	r2,r16,2047
10021404:	10008e26 	beq	r2,zero,10021640 <__subdf3+0x5f0>
10021408:	0201ffc4 	movi	r8,2047
1002140c:	0009883a 	mov	r4,zero
10021410:	0005883a 	mov	r2,zero
10021414:	003f7806 	br	100211f8 <__subdf3+0x1a8>
10021418:	6010977a 	slli	r8,r12,29
1002141c:	6026d0fa 	srli	r19,r12,3
10021420:	1000bb26 	beq	r2,zero,10021710 <__subdf3+0x6c0>
10021424:	01480034 	movhi	r5,8192
10021428:	297fffc4 	addi	r5,r5,-1
1002142c:	2146703a 	and	r3,r4,r5
10021430:	9880022c 	andhi	r2,r19,8
10021434:	1a06b03a 	or	r3,r3,r8
10021438:	10000826 	beq	r2,zero,1002145c <__subdf3+0x40c>
1002143c:	5808d0fa 	srli	r4,r11,3
10021440:	2080022c 	andhi	r2,r4,8
10021444:	1000051e 	bne	r2,zero,1002145c <__subdf3+0x40c>
10021448:	5804977a 	slli	r2,r11,29
1002144c:	3146703a 	and	r3,r6,r5
10021450:	3825883a 	mov	r18,r7
10021454:	1886b03a 	or	r3,r3,r2
10021458:	2027883a 	mov	r19,r4
1002145c:	1804d77a 	srli	r2,r3,29
10021460:	980890fa 	slli	r4,r19,3
10021464:	01480034 	movhi	r5,8192
10021468:	297fffc4 	addi	r5,r5,-1
1002146c:	1108b03a 	or	r4,r2,r4
10021470:	2004977a 	slli	r2,r4,29
10021474:	2026d0fa 	srli	r19,r4,3
10021478:	1946703a 	and	r3,r3,r5
1002147c:	10c4b03a 	or	r2,r2,r3
10021480:	14c6b03a 	or	r3,r2,r19
10021484:	18014926 	beq	r3,zero,100219ac <__subdf3+0x95c>
10021488:	00c00434 	movhi	r3,16
1002148c:	99000234 	orhi	r4,r19,8
10021490:	18ffffc4 	addi	r3,r3,-1
10021494:	20c8703a 	and	r4,r4,r3
10021498:	0201ffc4 	movi	r8,2047
1002149c:	003f5606 	br	100211f8 <__subdf3+0x1a8>
100214a0:	00bfe034 	movhi	r2,65408
100214a4:	10bfffc4 	addi	r2,r2,-1
100214a8:	2088703a 	and	r4,r4,r2
100214ac:	888001cc 	andi	r2,r17,7
100214b0:	8221c83a 	sub	r16,r16,r8
100214b4:	103f3b1e 	bne	r2,zero,100211a4 <__subdf3+0x154>
100214b8:	003fbd06 	br	100213b0 <__subdf3+0x360>
100214bc:	8809883a 	mov	r4,r17
100214c0:	0021bf40 	call	10021bf4 <__clzsi2>
100214c4:	12000604 	addi	r8,r2,24
100214c8:	40c00808 	cmpgei	r3,r8,32
100214cc:	183f1e26 	beq	r3,zero,10021148 <__subdf3+0xf8>
100214d0:	113ffe04 	addi	r4,r2,-8
100214d4:	8908983a 	sll	r4,r17,r4
100214d8:	0023883a 	mov	r17,zero
100214dc:	003f2006 	br	10021160 <__subdf3+0x110>
100214e0:	5ba2b03a 	or	r17,r11,r14
100214e4:	8822c03a 	cmpne	r17,r17,zero
100214e8:	003f0b06 	br	10021118 <__subdf3+0xc8>
100214ec:	6ba3c83a 	sub	r17,r13,r14
100214f0:	62e7c83a 	sub	r19,r12,r11
100214f4:	6c49803a 	cmpltu	r4,r13,r17
100214f8:	9927c83a 	sub	r19,r19,r4
100214fc:	9880202c 	andhi	r2,r19,128
10021500:	1000bb1e 	bne	r2,zero,100217f0 <__subdf3+0x7a0>
10021504:	8cc4b03a 	or	r2,r17,r19
10021508:	103f0b1e 	bne	r2,zero,10021138 <__subdf3+0xe8>
1002150c:	0027883a 	mov	r19,zero
10021510:	0025883a 	mov	r18,zero
10021514:	003fad06 	br	100213cc <__subdf3+0x37c>
10021518:	00880034 	movhi	r2,8192
1002151c:	6022977a 	slli	r17,r12,29
10021520:	10bfffc4 	addi	r2,r2,-1
10021524:	2088703a 	and	r4,r4,r2
10021528:	2444b03a 	or	r2,r4,r17
1002152c:	6026d0fa 	srli	r19,r12,3
10021530:	003fa406 	br	100213c4 <__subdf3+0x374>
10021534:	00880034 	movhi	r2,8192
10021538:	6022977a 	slli	r17,r12,29
1002153c:	10bfffc4 	addi	r2,r2,-1
10021540:	2088703a 	and	r4,r4,r2
10021544:	2444b03a 	or	r2,r4,r17
10021548:	6026d0fa 	srli	r19,r12,3
1002154c:	003fcc06 	br	10021480 <__subdf3+0x430>
10021550:	5411c83a 	sub	r8,r10,r16
10021554:	80004f26 	beq	r16,zero,10021694 <__subdf3+0x644>
10021558:	5081ffd8 	cmpnei	r2,r10,2047
1002155c:	1000b426 	beq	r2,zero,10021830 <__subdf3+0x7e0>
10021560:	63002034 	orhi	r12,r12,128
10021564:	40800e48 	cmpgei	r2,r8,57
10021568:	1000c41e 	bne	r2,zero,1002187c <__subdf3+0x82c>
1002156c:	40800808 	cmpgei	r2,r8,32
10021570:	1000f91e 	bne	r2,zero,10021958 <__subdf3+0x908>
10021574:	00800804 	movi	r2,32
10021578:	1205c83a 	sub	r2,r2,r8
1002157c:	60a2983a 	sll	r17,r12,r2
10021580:	6a06d83a 	srl	r3,r13,r8
10021584:	6884983a 	sll	r2,r13,r2
10021588:	6210d83a 	srl	r8,r12,r8
1002158c:	88e2b03a 	or	r17,r17,r3
10021590:	1004c03a 	cmpne	r2,r2,zero
10021594:	88a2b03a 	or	r17,r17,r2
10021598:	5a17883a 	add	r11,r11,r8
1002159c:	8ba3883a 	add	r17,r17,r14
100215a0:	8b85803a 	cmpltu	r2,r17,r14
100215a4:	12c9883a 	add	r4,r2,r11
100215a8:	5021883a 	mov	r16,r10
100215ac:	003f9106 	br	100213f4 <__subdf3+0x3a4>
100215b0:	5081ffd8 	cmpnei	r2,r10,2047
100215b4:	10006426 	beq	r2,zero,10021748 <__subdf3+0x6f8>
100215b8:	63002034 	orhi	r12,r12,128
100215bc:	40800e48 	cmpgei	r2,r8,57
100215c0:	1000751e 	bne	r2,zero,10021798 <__subdf3+0x748>
100215c4:	40800808 	cmpgei	r2,r8,32
100215c8:	1000b61e 	bne	r2,zero,100218a4 <__subdf3+0x854>
100215cc:	00800804 	movi	r2,32
100215d0:	1205c83a 	sub	r2,r2,r8
100215d4:	60a2983a 	sll	r17,r12,r2
100215d8:	6a06d83a 	srl	r3,r13,r8
100215dc:	6884983a 	sll	r2,r13,r2
100215e0:	6210d83a 	srl	r8,r12,r8
100215e4:	88e2b03a 	or	r17,r17,r3
100215e8:	1004c03a 	cmpne	r2,r2,zero
100215ec:	88a2b03a 	or	r17,r17,r2
100215f0:	5a17c83a 	sub	r11,r11,r8
100215f4:	7463c83a 	sub	r17,r14,r17
100215f8:	7445803a 	cmpltu	r2,r14,r17
100215fc:	5889c83a 	sub	r4,r11,r2
10021600:	5021883a 	mov	r16,r10
10021604:	003ec706 	br	10021124 <__subdf3+0xd4>
10021608:	423ff844 	addi	r8,r8,-31
1002160c:	10c00820 	cmpeqi	r3,r2,32
10021610:	2210d83a 	srl	r8,r4,r8
10021614:	1800041e 	bne	r3,zero,10021628 <__subdf3+0x5d8>
10021618:	00c01004 	movi	r3,64
1002161c:	1885c83a 	sub	r2,r3,r2
10021620:	2088983a 	sll	r4,r4,r2
10021624:	8922b03a 	or	r17,r17,r4
10021628:	8822c03a 	cmpne	r17,r17,zero
1002162c:	8a22b03a 	or	r17,r17,r8
10021630:	0009883a 	mov	r4,zero
10021634:	0021883a 	mov	r16,zero
10021638:	003f5b06 	br	100213a8 <__subdf3+0x358>
1002163c:	04000084 	movi	r16,2
10021640:	00bfe034 	movhi	r2,65408
10021644:	10bfffc4 	addi	r2,r2,-1
10021648:	2084703a 	and	r2,r4,r2
1002164c:	8806d07a 	srli	r3,r17,1
10021650:	100a97fa 	slli	r5,r2,31
10021654:	8c40004c 	andi	r17,r17,1
10021658:	1c62b03a 	or	r17,r3,r17
1002165c:	1008d07a 	srli	r4,r2,1
10021660:	2c62b03a 	or	r17,r5,r17
10021664:	003ecd06 	br	1002119c <__subdf3+0x14c>
10021668:	447ff804 	addi	r17,r8,-32
1002166c:	40800820 	cmpeqi	r2,r8,32
10021670:	5c46d83a 	srl	r3,r11,r17
10021674:	1000041e 	bne	r2,zero,10021688 <__subdf3+0x638>
10021678:	00801004 	movi	r2,64
1002167c:	1205c83a 	sub	r2,r2,r8
10021680:	5884983a 	sll	r2,r11,r2
10021684:	709cb03a 	or	r14,r14,r2
10021688:	7022c03a 	cmpne	r17,r14,zero
1002168c:	88e2b03a 	or	r17,r17,r3
10021690:	003ea106 	br	10021118 <__subdf3+0xc8>
10021694:	6344b03a 	or	r2,r12,r13
10021698:	1000a526 	beq	r2,zero,10021930 <__subdf3+0x8e0>
1002169c:	40bfffc4 	addi	r2,r8,-1
100216a0:	1000bd26 	beq	r2,zero,10021998 <__subdf3+0x948>
100216a4:	4201ffd8 	cmpnei	r8,r8,2047
100216a8:	40006126 	beq	r8,zero,10021830 <__subdf3+0x7e0>
100216ac:	1011883a 	mov	r8,r2
100216b0:	003fac06 	br	10021564 <__subdf3+0x514>
100216b4:	00800804 	movi	r2,32
100216b8:	1205c83a 	sub	r2,r2,r8
100216bc:	58a2983a 	sll	r17,r11,r2
100216c0:	7206d83a 	srl	r3,r14,r8
100216c4:	709c983a 	sll	r14,r14,r2
100216c8:	5a04d83a 	srl	r2,r11,r8
100216cc:	88e2b03a 	or	r17,r17,r3
100216d0:	701cc03a 	cmpne	r14,r14,zero
100216d4:	8ba2b03a 	or	r17,r17,r14
100216d8:	6099883a 	add	r12,r12,r2
100216dc:	003f4206 	br	100213e8 <__subdf3+0x398>
100216e0:	5808977a 	slli	r4,r11,29
100216e4:	00c80034 	movhi	r3,8192
100216e8:	18ffffc4 	addi	r3,r3,-1
100216ec:	30cc703a 	and	r6,r6,r3
100216f0:	2184b03a 	or	r2,r4,r6
100216f4:	5826d0fa 	srli	r19,r11,3
100216f8:	003f3206 	br	100213c4 <__subdf3+0x374>
100216fc:	10004c26 	beq	r2,zero,10021830 <__subdf3+0x7e0>
10021700:	5b9cb03a 	or	r14,r11,r14
10021704:	6010977a 	slli	r8,r12,29
10021708:	6026d0fa 	srli	r19,r12,3
1002170c:	703f451e 	bne	r14,zero,10021424 <__subdf3+0x3d4>
10021710:	00880034 	movhi	r2,8192
10021714:	10bfffc4 	addi	r2,r2,-1
10021718:	2084703a 	and	r2,r4,r2
1002171c:	1204b03a 	or	r2,r2,r8
10021720:	003f5706 	br	10021480 <__subdf3+0x430>
10021724:	103f7926 	beq	r2,zero,1002150c <__subdf3+0x4bc>
10021728:	5804977a 	slli	r2,r11,29
1002172c:	00c80034 	movhi	r3,8192
10021730:	18ffffc4 	addi	r3,r3,-1
10021734:	30c6703a 	and	r3,r6,r3
10021738:	10c4b03a 	or	r2,r2,r3
1002173c:	5826d0fa 	srli	r19,r11,3
10021740:	3825883a 	mov	r18,r7
10021744:	003f2106 	br	100213cc <__subdf3+0x37c>
10021748:	5804977a 	slli	r2,r11,29
1002174c:	00c80034 	movhi	r3,8192
10021750:	18ffffc4 	addi	r3,r3,-1
10021754:	30c6703a 	and	r3,r6,r3
10021758:	10c4b03a 	or	r2,r2,r3
1002175c:	5826d0fa 	srli	r19,r11,3
10021760:	003f4706 	br	10021480 <__subdf3+0x430>
10021764:	6ba3c83a 	sub	r17,r13,r14
10021768:	62c9c83a 	sub	r4,r12,r11
1002176c:	6c5b803a 	cmpltu	r13,r13,r17
10021770:	2349c83a 	sub	r4,r4,r13
10021774:	04000044 	movi	r16,1
10021778:	003e6a06 	br	10021124 <__subdf3+0xd4>
1002177c:	6004977a 	slli	r2,r12,29
10021780:	00c80034 	movhi	r3,8192
10021784:	18ffffc4 	addi	r3,r3,-1
10021788:	20c8703a 	and	r4,r4,r3
1002178c:	1104b03a 	or	r2,r2,r4
10021790:	6026d0fa 	srli	r19,r12,3
10021794:	003f0b06 	br	100213c4 <__subdf3+0x374>
10021798:	6366b03a 	or	r19,r12,r13
1002179c:	9822c03a 	cmpne	r17,r19,zero
100217a0:	003f9406 	br	100215f4 <__subdf3+0x5a4>
100217a4:	6004977a 	slli	r2,r12,29
100217a8:	00c80034 	movhi	r3,8192
100217ac:	18ffffc4 	addi	r3,r3,-1
100217b0:	20c8703a 	and	r4,r4,r3
100217b4:	1104b03a 	or	r2,r2,r4
100217b8:	6026d0fa 	srli	r19,r12,3
100217bc:	003f3006 	br	10021480 <__subdf3+0x430>
100217c0:	1881ffe0 	cmpeqi	r2,r3,2047
100217c4:	103f101e 	bne	r2,zero,10021408 <__subdf3+0x3b8>
100217c8:	6b9d883a 	add	r14,r13,r14
100217cc:	62c9883a 	add	r4,r12,r11
100217d0:	7345803a 	cmpltu	r2,r14,r13
100217d4:	2085883a 	add	r2,r4,r2
100217d8:	102297fa 	slli	r17,r2,31
100217dc:	701cd07a 	srli	r14,r14,1
100217e0:	1008d07a 	srli	r4,r2,1
100217e4:	1821883a 	mov	r16,r3
100217e8:	8ba2b03a 	or	r17,r17,r14
100217ec:	003eee06 	br	100213a8 <__subdf3+0x358>
100217f0:	7363c83a 	sub	r17,r14,r13
100217f4:	5b09c83a 	sub	r4,r11,r12
100217f8:	7467803a 	cmpltu	r19,r14,r17
100217fc:	24e7c83a 	sub	r19,r4,r19
10021800:	3825883a 	mov	r18,r7
10021804:	003e4c06 	br	10021138 <__subdf3+0xe8>
10021808:	183f031e 	bne	r3,zero,10021418 <__subdf3+0x3c8>
1002180c:	10005d26 	beq	r2,zero,10021984 <__subdf3+0x934>
10021810:	00880034 	movhi	r2,8192
10021814:	5806977a 	slli	r3,r11,29
10021818:	10bfffc4 	addi	r2,r2,-1
1002181c:	3084703a 	and	r2,r6,r2
10021820:	10c4b03a 	or	r2,r2,r3
10021824:	5826d0fa 	srli	r19,r11,3
10021828:	3825883a 	mov	r18,r7
1002182c:	003f1406 	br	10021480 <__subdf3+0x430>
10021830:	00880034 	movhi	r2,8192
10021834:	5806977a 	slli	r3,r11,29
10021838:	10bfffc4 	addi	r2,r2,-1
1002183c:	3084703a 	and	r2,r6,r2
10021840:	10c4b03a 	or	r2,r2,r3
10021844:	5826d0fa 	srli	r19,r11,3
10021848:	003f0d06 	br	10021480 <__subdf3+0x430>
1002184c:	6ba3c83a 	sub	r17,r13,r14
10021850:	62c5c83a 	sub	r2,r12,r11
10021854:	6c49803a 	cmpltu	r4,r13,r17
10021858:	1109c83a 	sub	r4,r2,r4
1002185c:	2080202c 	andhi	r2,r4,128
10021860:	10003a26 	beq	r2,zero,1002194c <__subdf3+0x8fc>
10021864:	7363c83a 	sub	r17,r14,r13
10021868:	5b09c83a 	sub	r4,r11,r12
1002186c:	745d803a 	cmpltu	r14,r14,r17
10021870:	2389c83a 	sub	r4,r4,r14
10021874:	3825883a 	mov	r18,r7
10021878:	003e4806 	br	1002119c <__subdf3+0x14c>
1002187c:	6362b03a 	or	r17,r12,r13
10021880:	8822c03a 	cmpne	r17,r17,zero
10021884:	003f4506 	br	1002159c <__subdf3+0x54c>
10021888:	6004977a 	slli	r2,r12,29
1002188c:	00c80034 	movhi	r3,8192
10021890:	18ffffc4 	addi	r3,r3,-1
10021894:	20c6703a 	and	r3,r4,r3
10021898:	10c4b03a 	or	r2,r2,r3
1002189c:	6026d0fa 	srli	r19,r12,3
100218a0:	003ef706 	br	10021480 <__subdf3+0x430>
100218a4:	40bff804 	addi	r2,r8,-32
100218a8:	40c00820 	cmpeqi	r3,r8,32
100218ac:	6084d83a 	srl	r2,r12,r2
100218b0:	1800041e 	bne	r3,zero,100218c4 <__subdf3+0x874>
100218b4:	04c01004 	movi	r19,64
100218b8:	9a11c83a 	sub	r8,r19,r8
100218bc:	6226983a 	sll	r19,r12,r8
100218c0:	6cdab03a 	or	r13,r13,r19
100218c4:	6822c03a 	cmpne	r17,r13,zero
100218c8:	88a2b03a 	or	r17,r17,r2
100218cc:	003f4906 	br	100215f4 <__subdf3+0x5a4>
100218d0:	7363c83a 	sub	r17,r14,r13
100218d4:	5b09c83a 	sub	r4,r11,r12
100218d8:	745d803a 	cmpltu	r14,r14,r17
100218dc:	2389c83a 	sub	r4,r4,r14
100218e0:	04000044 	movi	r16,1
100218e4:	003e0f06 	br	10021124 <__subdf3+0xd4>
100218e8:	00880034 	movhi	r2,8192
100218ec:	5806977a 	slli	r3,r11,29
100218f0:	10bfffc4 	addi	r2,r2,-1
100218f4:	3084703a 	and	r2,r6,r2
100218f8:	10c4b03a 	or	r2,r2,r3
100218fc:	5826d0fa 	srli	r19,r11,3
10021900:	003eb206 	br	100213cc <__subdf3+0x37c>
10021904:	6ba3883a 	add	r17,r13,r14
10021908:	62c9883a 	add	r4,r12,r11
1002190c:	8b5b803a 	cmpltu	r13,r17,r13
10021910:	2349883a 	add	r4,r4,r13
10021914:	2080202c 	andhi	r2,r4,128
10021918:	103ea326 	beq	r2,zero,100213a8 <__subdf3+0x358>
1002191c:	00bfe034 	movhi	r2,65408
10021920:	10bfffc4 	addi	r2,r2,-1
10021924:	2088703a 	and	r4,r4,r2
10021928:	04000044 	movi	r16,1
1002192c:	003e9e06 	br	100213a8 <__subdf3+0x358>
10021930:	00880034 	movhi	r2,8192
10021934:	5806977a 	slli	r3,r11,29
10021938:	10bfffc4 	addi	r2,r2,-1
1002193c:	3084703a 	and	r2,r6,r2
10021940:	10c4b03a 	or	r2,r2,r3
10021944:	5826d0fa 	srli	r19,r11,3
10021948:	003e9e06 	br	100213c4 <__subdf3+0x374>
1002194c:	8904b03a 	or	r2,r17,r4
10021950:	103eee26 	beq	r2,zero,1002150c <__subdf3+0x4bc>
10021954:	003e9406 	br	100213a8 <__subdf3+0x358>
10021958:	40bff804 	addi	r2,r8,-32
1002195c:	40c00820 	cmpeqi	r3,r8,32
10021960:	6084d83a 	srl	r2,r12,r2
10021964:	1800041e 	bne	r3,zero,10021978 <__subdf3+0x928>
10021968:	04c01004 	movi	r19,64
1002196c:	9a11c83a 	sub	r8,r19,r8
10021970:	6226983a 	sll	r19,r12,r8
10021974:	6cdab03a 	or	r13,r13,r19
10021978:	6822c03a 	cmpne	r17,r13,zero
1002197c:	88a2b03a 	or	r17,r17,r2
10021980:	003f0606 	br	1002159c <__subdf3+0x54c>
10021984:	04c00434 	movhi	r19,16
10021988:	9cffffc4 	addi	r19,r19,-1
1002198c:	0025883a 	mov	r18,zero
10021990:	00bfffc4 	movi	r2,-1
10021994:	003ebc06 	br	10021488 <__subdf3+0x438>
10021998:	6ba3883a 	add	r17,r13,r14
1002199c:	62c9883a 	add	r4,r12,r11
100219a0:	8b9d803a 	cmpltu	r14,r17,r14
100219a4:	2389883a 	add	r4,r4,r14
100219a8:	003e7c06 	br	1002139c <__subdf3+0x34c>
100219ac:	0005883a 	mov	r2,zero
100219b0:	0201ffc4 	movi	r8,2047
100219b4:	0009883a 	mov	r4,zero
100219b8:	003e0f06 	br	100211f8 <__subdf3+0x1a8>

100219bc <__unorddf2>:
100219bc:	2806d53a 	srli	r3,r5,20
100219c0:	3810d53a 	srli	r8,r7,20
100219c4:	00800434 	movhi	r2,16
100219c8:	18c1ffcc 	andi	r3,r3,2047
100219cc:	10bfffc4 	addi	r2,r2,-1
100219d0:	18c1ffd8 	cmpnei	r3,r3,2047
100219d4:	288a703a 	and	r5,r5,r2
100219d8:	388e703a 	and	r7,r7,r2
100219dc:	4201ffcc 	andi	r8,r8,2047
100219e0:	18000426 	beq	r3,zero,100219f4 <__unorddf2+0x38>
100219e4:	4201ffd8 	cmpnei	r8,r8,2047
100219e8:	40000626 	beq	r8,zero,10021a04 <__unorddf2+0x48>
100219ec:	0005883a 	mov	r2,zero
100219f0:	f800283a 	ret
100219f4:	214ab03a 	or	r5,r4,r5
100219f8:	283ffa26 	beq	r5,zero,100219e4 <__unorddf2+0x28>
100219fc:	00800044 	movi	r2,1
10021a00:	f800283a 	ret
10021a04:	398eb03a 	or	r7,r7,r6
10021a08:	3804c03a 	cmpne	r2,r7,zero
10021a0c:	f800283a 	ret

10021a10 <__fixdfsi>:
10021a10:	280cd53a 	srli	r6,r5,20
10021a14:	00c00434 	movhi	r3,16
10021a18:	18ffffc4 	addi	r3,r3,-1
10021a1c:	3181ffcc 	andi	r6,r6,2047
10021a20:	31c0ffd0 	cmplti	r7,r6,1023
10021a24:	28c6703a 	and	r3,r5,r3
10021a28:	280ad7fa 	srli	r5,r5,31
10021a2c:	3800061e 	bne	r7,zero,10021a48 <__fixdfsi+0x38>
10021a30:	30810790 	cmplti	r2,r6,1054
10021a34:	1000061e 	bne	r2,zero,10021a50 <__fixdfsi+0x40>
10021a38:	00a00034 	movhi	r2,32768
10021a3c:	10bfffc4 	addi	r2,r2,-1
10021a40:	2885883a 	add	r2,r5,r2
10021a44:	f800283a 	ret
10021a48:	0005883a 	mov	r2,zero
10021a4c:	f800283a 	ret
10021a50:	00810cc4 	movi	r2,1075
10021a54:	118fc83a 	sub	r7,r2,r6
10021a58:	38800808 	cmpgei	r2,r7,32
10021a5c:	18c00434 	orhi	r3,r3,16
10021a60:	1000071e 	bne	r2,zero,10021a80 <__fixdfsi+0x70>
10021a64:	30befb44 	addi	r2,r6,-1043
10021a68:	1886983a 	sll	r3,r3,r2
10021a6c:	21c4d83a 	srl	r2,r4,r7
10021a70:	1884b03a 	or	r2,r3,r2
10021a74:	283ff526 	beq	r5,zero,10021a4c <__fixdfsi+0x3c>
10021a78:	0085c83a 	sub	r2,zero,r2
10021a7c:	f800283a 	ret
10021a80:	008104c4 	movi	r2,1043
10021a84:	1185c83a 	sub	r2,r2,r6
10021a88:	1884d83a 	srl	r2,r3,r2
10021a8c:	003ff906 	br	10021a74 <__fixdfsi+0x64>

10021a90 <__floatsidf>:
10021a90:	defffd04 	addi	sp,sp,-12
10021a94:	dfc00215 	stw	ra,8(sp)
10021a98:	dc400115 	stw	r17,4(sp)
10021a9c:	dc000015 	stw	r16,0(sp)
10021aa0:	20001326 	beq	r4,zero,10021af0 <__floatsidf+0x60>
10021aa4:	2021883a 	mov	r16,r4
10021aa8:	2022d7fa 	srli	r17,r4,31
10021aac:	20002116 	blt	r4,zero,10021b34 <__floatsidf+0xa4>
10021ab0:	8009883a 	mov	r4,r16
10021ab4:	0021bf40 	call	10021bf4 <__clzsi2>
10021ab8:	01010784 	movi	r4,1054
10021abc:	2089c83a 	sub	r4,r4,r2
10021ac0:	10c002c8 	cmpgei	r3,r2,11
10021ac4:	2101ffcc 	andi	r4,r4,2047
10021ac8:	18001c1e 	bne	r3,zero,10021b3c <__floatsidf+0xac>
10021acc:	018002c4 	movi	r6,11
10021ad0:	308dc83a 	sub	r6,r6,r2
10021ad4:	818ad83a 	srl	r5,r16,r6
10021ad8:	00c00434 	movhi	r3,16
10021adc:	10800544 	addi	r2,r2,21
10021ae0:	18ffffc4 	addi	r3,r3,-1
10021ae4:	8084983a 	sll	r2,r16,r2
10021ae8:	28ca703a 	and	r5,r5,r3
10021aec:	00000406 	br	10021b00 <__floatsidf+0x70>
10021af0:	0023883a 	mov	r17,zero
10021af4:	0009883a 	mov	r4,zero
10021af8:	000b883a 	mov	r5,zero
10021afc:	0005883a 	mov	r2,zero
10021b00:	2008953a 	slli	r4,r4,20
10021b04:	8c403fcc 	andi	r17,r17,255
10021b08:	01800434 	movhi	r6,16
10021b0c:	31bfffc4 	addi	r6,r6,-1
10021b10:	880697fa 	slli	r3,r17,31
10021b14:	298a703a 	and	r5,r5,r6
10021b18:	290ab03a 	or	r5,r5,r4
10021b1c:	28c6b03a 	or	r3,r5,r3
10021b20:	dfc00217 	ldw	ra,8(sp)
10021b24:	dc400117 	ldw	r17,4(sp)
10021b28:	dc000017 	ldw	r16,0(sp)
10021b2c:	dec00304 	addi	sp,sp,12
10021b30:	f800283a 	ret
10021b34:	0121c83a 	sub	r16,zero,r4
10021b38:	003fdd06 	br	10021ab0 <__floatsidf+0x20>
10021b3c:	10bffd44 	addi	r2,r2,-11
10021b40:	808a983a 	sll	r5,r16,r2
10021b44:	00800434 	movhi	r2,16
10021b48:	10bfffc4 	addi	r2,r2,-1
10021b4c:	288a703a 	and	r5,r5,r2
10021b50:	0005883a 	mov	r2,zero
10021b54:	003fea06 	br	10021b00 <__floatsidf+0x70>

10021b58 <__floatunsidf>:
10021b58:	defffe04 	addi	sp,sp,-8
10021b5c:	dc000015 	stw	r16,0(sp)
10021b60:	dfc00115 	stw	ra,4(sp)
10021b64:	2021883a 	mov	r16,r4
10021b68:	20000f26 	beq	r4,zero,10021ba8 <__floatunsidf+0x50>
10021b6c:	0021bf40 	call	10021bf4 <__clzsi2>
10021b70:	01010784 	movi	r4,1054
10021b74:	2089c83a 	sub	r4,r4,r2
10021b78:	10c002c8 	cmpgei	r3,r2,11
10021b7c:	2101ffcc 	andi	r4,r4,2047
10021b80:	1800151e 	bne	r3,zero,10021bd8 <__floatunsidf+0x80>
10021b84:	00c002c4 	movi	r3,11
10021b88:	1887c83a 	sub	r3,r3,r2
10021b8c:	80c6d83a 	srl	r3,r16,r3
10021b90:	01400434 	movhi	r5,16
10021b94:	10800544 	addi	r2,r2,21
10021b98:	297fffc4 	addi	r5,r5,-1
10021b9c:	80a0983a 	sll	r16,r16,r2
10021ba0:	1944703a 	and	r2,r3,r5
10021ba4:	00000206 	br	10021bb0 <__floatunsidf+0x58>
10021ba8:	0009883a 	mov	r4,zero
10021bac:	0005883a 	mov	r2,zero
10021bb0:	2008953a 	slli	r4,r4,20
10021bb4:	00c00434 	movhi	r3,16
10021bb8:	18ffffc4 	addi	r3,r3,-1
10021bbc:	10c6703a 	and	r3,r2,r3
10021bc0:	1906b03a 	or	r3,r3,r4
10021bc4:	8005883a 	mov	r2,r16
10021bc8:	dfc00117 	ldw	ra,4(sp)
10021bcc:	dc000017 	ldw	r16,0(sp)
10021bd0:	dec00204 	addi	sp,sp,8
10021bd4:	f800283a 	ret
10021bd8:	10bffd44 	addi	r2,r2,-11
10021bdc:	8084983a 	sll	r2,r16,r2
10021be0:	00c00434 	movhi	r3,16
10021be4:	18ffffc4 	addi	r3,r3,-1
10021be8:	10c4703a 	and	r2,r2,r3
10021bec:	0021883a 	mov	r16,zero
10021bf0:	003fef06 	br	10021bb0 <__floatunsidf+0x58>

10021bf4 <__clzsi2>:
10021bf4:	00bfffd4 	movui	r2,65535
10021bf8:	11000b36 	bltu	r2,r4,10021c28 <__clzsi2+0x34>
10021bfc:	20804030 	cmpltui	r2,r4,256
10021c00:	1000071e 	bne	r2,zero,10021c20 <__clzsi2+0x2c>
10021c04:	2008d23a 	srli	r4,r4,8
10021c08:	01400604 	movi	r5,24
10021c0c:	00c400b4 	movhi	r3,4098
10021c10:	20c7883a 	add	r3,r4,r3
10021c14:	1897da03 	ldbu	r2,24424(r3)
10021c18:	2885c83a 	sub	r2,r5,r2
10021c1c:	f800283a 	ret
10021c20:	01400804 	movi	r5,32
10021c24:	003ff906 	br	10021c0c <__clzsi2+0x18>
10021c28:	00804034 	movhi	r2,256
10021c2c:	20800336 	bltu	r4,r2,10021c3c <__clzsi2+0x48>
10021c30:	2008d63a 	srli	r4,r4,24
10021c34:	01400204 	movi	r5,8
10021c38:	003ff406 	br	10021c0c <__clzsi2+0x18>
10021c3c:	2008d43a 	srli	r4,r4,16
10021c40:	01400404 	movi	r5,16
10021c44:	003ff106 	br	10021c0c <__clzsi2+0x18>

10021c48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10021c48:	defffe04 	addi	sp,sp,-8
10021c4c:	dfc00115 	stw	ra,4(sp)
10021c50:	df000015 	stw	fp,0(sp)
10021c54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021c58:	d0a01917 	ldw	r2,-32668(gp)
10021c5c:	10000326 	beq	r2,zero,10021c6c <alt_get_errno+0x24>
10021c60:	d0a01917 	ldw	r2,-32668(gp)
10021c64:	103ee83a 	callr	r2
10021c68:	00000106 	br	10021c70 <alt_get_errno+0x28>
10021c6c:	d0a96204 	addi	r2,gp,-23160
}
10021c70:	e037883a 	mov	sp,fp
10021c74:	dfc00117 	ldw	ra,4(sp)
10021c78:	df000017 	ldw	fp,0(sp)
10021c7c:	dec00204 	addi	sp,sp,8
10021c80:	f800283a 	ret

10021c84 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
10021c84:	defffb04 	addi	sp,sp,-20
10021c88:	dfc00415 	stw	ra,16(sp)
10021c8c:	df000315 	stw	fp,12(sp)
10021c90:	df000304 	addi	fp,sp,12
10021c94:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
10021c98:	e0bffd17 	ldw	r2,-12(fp)
10021c9c:	10000616 	blt	r2,zero,10021cb8 <close+0x34>
10021ca0:	e0bffd17 	ldw	r2,-12(fp)
10021ca4:	10c00324 	muli	r3,r2,12
10021ca8:	008400b4 	movhi	r2,4098
10021cac:	109cd004 	addi	r2,r2,29504
10021cb0:	1885883a 	add	r2,r3,r2
10021cb4:	00000106 	br	10021cbc <close+0x38>
10021cb8:	0005883a 	mov	r2,zero
10021cbc:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
10021cc0:	e0bfff17 	ldw	r2,-4(fp)
10021cc4:	10001926 	beq	r2,zero,10021d2c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
10021cc8:	e0bfff17 	ldw	r2,-4(fp)
10021ccc:	10800017 	ldw	r2,0(r2)
10021cd0:	10800417 	ldw	r2,16(r2)
10021cd4:	10000626 	beq	r2,zero,10021cf0 <close+0x6c>
10021cd8:	e0bfff17 	ldw	r2,-4(fp)
10021cdc:	10800017 	ldw	r2,0(r2)
10021ce0:	10800417 	ldw	r2,16(r2)
10021ce4:	e13fff17 	ldw	r4,-4(fp)
10021ce8:	103ee83a 	callr	r2
10021cec:	00000106 	br	10021cf4 <close+0x70>
10021cf0:	0005883a 	mov	r2,zero
10021cf4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
10021cf8:	e13ffd17 	ldw	r4,-12(fp)
10021cfc:	00227480 	call	10022748 <alt_release_fd>
    if (rval < 0)
10021d00:	e0bffe17 	ldw	r2,-8(fp)
10021d04:	1000070e 	bge	r2,zero,10021d24 <close+0xa0>
    {
      ALT_ERRNO = -rval;
10021d08:	0021c480 	call	10021c48 <alt_get_errno>
10021d0c:	1007883a 	mov	r3,r2
10021d10:	e0bffe17 	ldw	r2,-8(fp)
10021d14:	0085c83a 	sub	r2,zero,r2
10021d18:	18800015 	stw	r2,0(r3)
      return -1;
10021d1c:	00bfffc4 	movi	r2,-1
10021d20:	00000706 	br	10021d40 <close+0xbc>
    }
    return 0;
10021d24:	0005883a 	mov	r2,zero
10021d28:	00000506 	br	10021d40 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021d2c:	0021c480 	call	10021c48 <alt_get_errno>
10021d30:	1007883a 	mov	r3,r2
10021d34:	00801444 	movi	r2,81
10021d38:	18800015 	stw	r2,0(r3)
    return -1;
10021d3c:	00bfffc4 	movi	r2,-1
  }
}
10021d40:	e037883a 	mov	sp,fp
10021d44:	dfc00117 	ldw	ra,4(sp)
10021d48:	df000017 	ldw	fp,0(sp)
10021d4c:	dec00204 	addi	sp,sp,8
10021d50:	f800283a 	ret

10021d54 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
10021d54:	defffc04 	addi	sp,sp,-16
10021d58:	df000315 	stw	fp,12(sp)
10021d5c:	df000304 	addi	fp,sp,12
10021d60:	e13fff15 	stw	r4,-4(fp)
10021d64:	e17ffe15 	stw	r5,-8(fp)
10021d68:	e1bffd15 	stw	r6,-12(fp)
  return len;
10021d6c:	e0bffd17 	ldw	r2,-12(fp)
}
10021d70:	e037883a 	mov	sp,fp
10021d74:	df000017 	ldw	fp,0(sp)
10021d78:	dec00104 	addi	sp,sp,4
10021d7c:	f800283a 	ret

10021d80 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10021d80:	defffd04 	addi	sp,sp,-12
10021d84:	df000215 	stw	fp,8(sp)
10021d88:	df000204 	addi	fp,sp,8
10021d8c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10021d90:	0001883a 	nop
10021d94:	e0bffe17 	ldw	r2,-8(fp)
10021d98:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10021d9c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10021da0:	10000226 	beq	r2,zero,10021dac <_exit+0x2c>
    ALT_SIM_FAIL();
10021da4:	002af070 	cmpltui	zero,zero,43969
10021da8:	00000106 	br	10021db0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10021dac:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10021db0:	003fff06 	br	10021db0 <_exit+0x30>

10021db4 <alt_get_errno>:
{
10021db4:	defffe04 	addi	sp,sp,-8
10021db8:	dfc00115 	stw	ra,4(sp)
10021dbc:	df000015 	stw	fp,0(sp)
10021dc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021dc4:	d0a01917 	ldw	r2,-32668(gp)
10021dc8:	10000326 	beq	r2,zero,10021dd8 <alt_get_errno+0x24>
10021dcc:	d0a01917 	ldw	r2,-32668(gp)
10021dd0:	103ee83a 	callr	r2
10021dd4:	00000106 	br	10021ddc <alt_get_errno+0x28>
10021dd8:	d0a96204 	addi	r2,gp,-23160
}
10021ddc:	e037883a 	mov	sp,fp
10021de0:	dfc00117 	ldw	ra,4(sp)
10021de4:	df000017 	ldw	fp,0(sp)
10021de8:	dec00204 	addi	sp,sp,8
10021dec:	f800283a 	ret

10021df0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
10021df0:	defffb04 	addi	sp,sp,-20
10021df4:	dfc00415 	stw	ra,16(sp)
10021df8:	df000315 	stw	fp,12(sp)
10021dfc:	df000304 	addi	fp,sp,12
10021e00:	e13ffe15 	stw	r4,-8(fp)
10021e04:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10021e08:	e0bffe17 	ldw	r2,-8(fp)
10021e0c:	10000616 	blt	r2,zero,10021e28 <fstat+0x38>
10021e10:	e0bffe17 	ldw	r2,-8(fp)
10021e14:	10c00324 	muli	r3,r2,12
10021e18:	008400b4 	movhi	r2,4098
10021e1c:	109cd004 	addi	r2,r2,29504
10021e20:	1885883a 	add	r2,r3,r2
10021e24:	00000106 	br	10021e2c <fstat+0x3c>
10021e28:	0005883a 	mov	r2,zero
10021e2c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10021e30:	e0bfff17 	ldw	r2,-4(fp)
10021e34:	10001026 	beq	r2,zero,10021e78 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
10021e38:	e0bfff17 	ldw	r2,-4(fp)
10021e3c:	10800017 	ldw	r2,0(r2)
10021e40:	10800817 	ldw	r2,32(r2)
10021e44:	10000726 	beq	r2,zero,10021e64 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
10021e48:	e0bfff17 	ldw	r2,-4(fp)
10021e4c:	10800017 	ldw	r2,0(r2)
10021e50:	10800817 	ldw	r2,32(r2)
10021e54:	e17ffd17 	ldw	r5,-12(fp)
10021e58:	e13fff17 	ldw	r4,-4(fp)
10021e5c:	103ee83a 	callr	r2
10021e60:	00000a06 	br	10021e8c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
10021e64:	e0bffd17 	ldw	r2,-12(fp)
10021e68:	00c80004 	movi	r3,8192
10021e6c:	10c00115 	stw	r3,4(r2)
      return 0;
10021e70:	0005883a 	mov	r2,zero
10021e74:	00000506 	br	10021e8c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021e78:	0021db40 	call	10021db4 <alt_get_errno>
10021e7c:	1007883a 	mov	r3,r2
10021e80:	00801444 	movi	r2,81
10021e84:	18800015 	stw	r2,0(r3)
    return -1;
10021e88:	00bfffc4 	movi	r2,-1
  }
}
10021e8c:	e037883a 	mov	sp,fp
10021e90:	dfc00117 	ldw	ra,4(sp)
10021e94:	df000017 	ldw	fp,0(sp)
10021e98:	dec00204 	addi	sp,sp,8
10021e9c:	f800283a 	ret

10021ea0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
10021ea0:	deffff04 	addi	sp,sp,-4
10021ea4:	df000015 	stw	fp,0(sp)
10021ea8:	d839883a 	mov	fp,sp
  return 0;
10021eac:	0005883a 	mov	r2,zero
}
10021eb0:	e037883a 	mov	sp,fp
10021eb4:	df000017 	ldw	fp,0(sp)
10021eb8:	dec00104 	addi	sp,sp,4
10021ebc:	f800283a 	ret

10021ec0 <alt_get_errno>:
{
10021ec0:	defffe04 	addi	sp,sp,-8
10021ec4:	dfc00115 	stw	ra,4(sp)
10021ec8:	df000015 	stw	fp,0(sp)
10021ecc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021ed0:	d0a01917 	ldw	r2,-32668(gp)
10021ed4:	10000326 	beq	r2,zero,10021ee4 <alt_get_errno+0x24>
10021ed8:	d0a01917 	ldw	r2,-32668(gp)
10021edc:	103ee83a 	callr	r2
10021ee0:	00000106 	br	10021ee8 <alt_get_errno+0x28>
10021ee4:	d0a96204 	addi	r2,gp,-23160
}
10021ee8:	e037883a 	mov	sp,fp
10021eec:	dfc00117 	ldw	ra,4(sp)
10021ef0:	df000017 	ldw	fp,0(sp)
10021ef4:	dec00204 	addi	sp,sp,8
10021ef8:	f800283a 	ret

10021efc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10021efc:	deffea04 	addi	sp,sp,-88
10021f00:	dfc01515 	stw	ra,84(sp)
10021f04:	df001415 	stw	fp,80(sp)
10021f08:	df001404 	addi	fp,sp,80
10021f0c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10021f10:	e0bfec17 	ldw	r2,-80(fp)
10021f14:	10000616 	blt	r2,zero,10021f30 <isatty+0x34>
10021f18:	e0bfec17 	ldw	r2,-80(fp)
10021f1c:	10c00324 	muli	r3,r2,12
10021f20:	008400b4 	movhi	r2,4098
10021f24:	109cd004 	addi	r2,r2,29504
10021f28:	1885883a 	add	r2,r3,r2
10021f2c:	00000106 	br	10021f34 <isatty+0x38>
10021f30:	0005883a 	mov	r2,zero
10021f34:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10021f38:	e0bfff17 	ldw	r2,-4(fp)
10021f3c:	10000e26 	beq	r2,zero,10021f78 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10021f40:	e0bfff17 	ldw	r2,-4(fp)
10021f44:	10800017 	ldw	r2,0(r2)
10021f48:	10800817 	ldw	r2,32(r2)
10021f4c:	1000021e 	bne	r2,zero,10021f58 <isatty+0x5c>
    {
      return 1;
10021f50:	00800044 	movi	r2,1
10021f54:	00000d06 	br	10021f8c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10021f58:	e0bfed04 	addi	r2,fp,-76
10021f5c:	100b883a 	mov	r5,r2
10021f60:	e13fec17 	ldw	r4,-80(fp)
10021f64:	0021df00 	call	10021df0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
10021f68:	e0bfee17 	ldw	r2,-72(fp)
10021f6c:	10880020 	cmpeqi	r2,r2,8192
10021f70:	10803fcc 	andi	r2,r2,255
10021f74:	00000506 	br	10021f8c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10021f78:	0021ec00 	call	10021ec0 <alt_get_errno>
10021f7c:	1007883a 	mov	r3,r2
10021f80:	00801444 	movi	r2,81
10021f84:	18800015 	stw	r2,0(r3)
    return 0;
10021f88:	0005883a 	mov	r2,zero
  }
}
10021f8c:	e037883a 	mov	sp,fp
10021f90:	dfc00117 	ldw	ra,4(sp)
10021f94:	df000017 	ldw	fp,0(sp)
10021f98:	dec00204 	addi	sp,sp,8
10021f9c:	f800283a 	ret

10021fa0 <alt_get_errno>:
{
10021fa0:	defffe04 	addi	sp,sp,-8
10021fa4:	dfc00115 	stw	ra,4(sp)
10021fa8:	df000015 	stw	fp,0(sp)
10021fac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10021fb0:	d0a01917 	ldw	r2,-32668(gp)
10021fb4:	10000326 	beq	r2,zero,10021fc4 <alt_get_errno+0x24>
10021fb8:	d0a01917 	ldw	r2,-32668(gp)
10021fbc:	103ee83a 	callr	r2
10021fc0:	00000106 	br	10021fc8 <alt_get_errno+0x28>
10021fc4:	d0a96204 	addi	r2,gp,-23160
}
10021fc8:	e037883a 	mov	sp,fp
10021fcc:	dfc00117 	ldw	ra,4(sp)
10021fd0:	df000017 	ldw	fp,0(sp)
10021fd4:	dec00204 	addi	sp,sp,8
10021fd8:	f800283a 	ret

10021fdc <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
10021fdc:	defffb04 	addi	sp,sp,-20
10021fe0:	dfc00415 	stw	ra,16(sp)
10021fe4:	df000315 	stw	fp,12(sp)
10021fe8:	df000304 	addi	fp,sp,12
10021fec:	e13ffe15 	stw	r4,-8(fp)
10021ff0:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
10021ff4:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
10021ff8:	e0bffe17 	ldw	r2,-8(fp)
10021ffc:	00802e16 	blt	zero,r2,100220b8 <kill+0xdc>
  {
    switch (sig)
10022000:	e0bffd17 	ldw	r2,-12(fp)
10022004:	10800828 	cmpgeui	r2,r2,32
10022008:	1000281e 	bne	r2,zero,100220ac <kill+0xd0>
1002200c:	e0bffd17 	ldw	r2,-12(fp)
10022010:	100690ba 	slli	r3,r2,2
10022014:	008400b4 	movhi	r2,4098
10022018:	1885883a 	add	r2,r3,r2
1002201c:	10880917 	ldw	r2,8228(r2)
10022020:	1000683a 	jmp	r2
10022024:	100220cc 	andi	zero,r2,2179
10022028:	100220ac 	andhi	zero,r2,2178
1002202c:	100220ac 	andhi	zero,r2,2178
10022030:	100220a4 	muli	zero,r2,2178
10022034:	100220a4 	muli	zero,r2,2178
10022038:	100220a4 	muli	zero,r2,2178
1002203c:	100220a4 	muli	zero,r2,2178
10022040:	100220ac 	andhi	zero,r2,2178
10022044:	100220a4 	muli	zero,r2,2178
10022048:	100220a4 	muli	zero,r2,2178
1002204c:	100220a4 	muli	zero,r2,2178
10022050:	100220a4 	muli	zero,r2,2178
10022054:	100220a4 	muli	zero,r2,2178
10022058:	100220a4 	muli	zero,r2,2178
1002205c:	100220a4 	muli	zero,r2,2178
10022060:	100220a4 	muli	zero,r2,2178
10022064:	100220cc 	andi	zero,r2,2179
10022068:	100220ac 	andhi	zero,r2,2178
1002206c:	100220ac 	andhi	zero,r2,2178
10022070:	100220ac 	andhi	zero,r2,2178
10022074:	100220cc 	andi	zero,r2,2179
10022078:	100220ac 	andhi	zero,r2,2178
1002207c:	100220ac 	andhi	zero,r2,2178
10022080:	100220a4 	muli	zero,r2,2178
10022084:	100220a4 	muli	zero,r2,2178
10022088:	100220a4 	muli	zero,r2,2178
1002208c:	100220a4 	muli	zero,r2,2178
10022090:	100220a4 	muli	zero,r2,2178
10022094:	100220ac 	andhi	zero,r2,2178
10022098:	100220ac 	andhi	zero,r2,2178
1002209c:	100220a4 	muli	zero,r2,2178
100220a0:	100220a4 	muli	zero,r2,2178
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
100220a4:	0009883a 	mov	r4,zero
100220a8:	0021d800 	call	10021d80 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
100220ac:	00800584 	movi	r2,22
100220b0:	e0bfff15 	stw	r2,-4(fp)
100220b4:	00000606 	br	100220d0 <kill+0xf4>
    }
  }

  else if (pid > 0)
100220b8:	e0bffe17 	ldw	r2,-8(fp)
100220bc:	0080040e 	bge	zero,r2,100220d0 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
100220c0:	008000c4 	movi	r2,3
100220c4:	e0bfff15 	stw	r2,-4(fp)
100220c8:	00000106 	br	100220d0 <kill+0xf4>
      break;
100220cc:	0001883a 	nop
  }

  if (status)
100220d0:	e0bfff17 	ldw	r2,-4(fp)
100220d4:	10000626 	beq	r2,zero,100220f0 <kill+0x114>
  {
    ALT_ERRNO = status;
100220d8:	0021fa00 	call	10021fa0 <alt_get_errno>
100220dc:	1007883a 	mov	r3,r2
100220e0:	e0bfff17 	ldw	r2,-4(fp)
100220e4:	18800015 	stw	r2,0(r3)
    return -1;
100220e8:	00bfffc4 	movi	r2,-1
100220ec:	00000106 	br	100220f4 <kill+0x118>
  }

  return 0;
100220f0:	0005883a 	mov	r2,zero
}
100220f4:	e037883a 	mov	sp,fp
100220f8:	dfc00117 	ldw	ra,4(sp)
100220fc:	df000017 	ldw	fp,0(sp)
10022100:	dec00204 	addi	sp,sp,8
10022104:	f800283a 	ret

10022108 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10022108:	defffc04 	addi	sp,sp,-16
1002210c:	df000315 	stw	fp,12(sp)
10022110:	df000304 	addi	fp,sp,12
10022114:	e13fff15 	stw	r4,-4(fp)
10022118:	e17ffe15 	stw	r5,-8(fp)
1002211c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
10022120:	e0fffe17 	ldw	r3,-8(fp)
10022124:	e0bfff17 	ldw	r2,-4(fp)
10022128:	18800c26 	beq	r3,r2,1002215c <alt_load_section+0x54>
  {
    while( to != end )
1002212c:	00000806 	br	10022150 <alt_load_section+0x48>
    {
      *to++ = *from++;
10022130:	e0ffff17 	ldw	r3,-4(fp)
10022134:	18800104 	addi	r2,r3,4
10022138:	e0bfff15 	stw	r2,-4(fp)
1002213c:	e0bffe17 	ldw	r2,-8(fp)
10022140:	11000104 	addi	r4,r2,4
10022144:	e13ffe15 	stw	r4,-8(fp)
10022148:	18c00017 	ldw	r3,0(r3)
1002214c:	10c00015 	stw	r3,0(r2)
    while( to != end )
10022150:	e0fffe17 	ldw	r3,-8(fp)
10022154:	e0bffd17 	ldw	r2,-12(fp)
10022158:	18bff51e 	bne	r3,r2,10022130 <alt_load_section+0x28>
    }
  }
}
1002215c:	0001883a 	nop
10022160:	e037883a 	mov	sp,fp
10022164:	df000017 	ldw	fp,0(sp)
10022168:	dec00104 	addi	sp,sp,4
1002216c:	f800283a 	ret

10022170 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10022170:	defffe04 	addi	sp,sp,-8
10022174:	dfc00115 	stw	ra,4(sp)
10022178:	df000015 	stw	fp,0(sp)
1002217c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10022180:	018400f4 	movhi	r6,4099
10022184:	31a16604 	addi	r6,r6,-31336
10022188:	014400b4 	movhi	r5,4098
1002218c:	29582704 	addi	r5,r5,24732
10022190:	010400f4 	movhi	r4,4099
10022194:	21216604 	addi	r4,r4,-31336
10022198:	00221080 	call	10022108 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1002219c:	01840034 	movhi	r6,4096
100221a0:	31808e04 	addi	r6,r6,568
100221a4:	01440034 	movhi	r5,4096
100221a8:	29400804 	addi	r5,r5,32
100221ac:	01040034 	movhi	r4,4096
100221b0:	21000804 	addi	r4,r4,32
100221b4:	00221080 	call	10022108 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
100221b8:	018400b4 	movhi	r6,4098
100221bc:	31982704 	addi	r6,r6,24732
100221c0:	014400b4 	movhi	r5,4098
100221c4:	2951b404 	addi	r5,r5,18128
100221c8:	010400b4 	movhi	r4,4098
100221cc:	2111b404 	addi	r4,r4,18128
100221d0:	00221080 	call	10022108 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
100221d4:	002382c0 	call	1002382c <alt_dcache_flush_all>
  alt_icache_flush_all();
100221d8:	0023c4c0 	call	10023c4c <alt_icache_flush_all>
}
100221dc:	0001883a 	nop
100221e0:	e037883a 	mov	sp,fp
100221e4:	dfc00117 	ldw	ra,4(sp)
100221e8:	df000017 	ldw	fp,0(sp)
100221ec:	dec00204 	addi	sp,sp,8
100221f0:	f800283a 	ret

100221f4 <alt_get_errno>:
{
100221f4:	defffe04 	addi	sp,sp,-8
100221f8:	dfc00115 	stw	ra,4(sp)
100221fc:	df000015 	stw	fp,0(sp)
10022200:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022204:	d0a01917 	ldw	r2,-32668(gp)
10022208:	10000326 	beq	r2,zero,10022218 <alt_get_errno+0x24>
1002220c:	d0a01917 	ldw	r2,-32668(gp)
10022210:	103ee83a 	callr	r2
10022214:	00000106 	br	1002221c <alt_get_errno+0x28>
10022218:	d0a96204 	addi	r2,gp,-23160
}
1002221c:	e037883a 	mov	sp,fp
10022220:	dfc00117 	ldw	ra,4(sp)
10022224:	df000017 	ldw	fp,0(sp)
10022228:	dec00204 	addi	sp,sp,8
1002222c:	f800283a 	ret

10022230 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10022230:	defff904 	addi	sp,sp,-28
10022234:	dfc00615 	stw	ra,24(sp)
10022238:	df000515 	stw	fp,20(sp)
1002223c:	df000504 	addi	fp,sp,20
10022240:	e13ffd15 	stw	r4,-12(fp)
10022244:	e17ffc15 	stw	r5,-16(fp)
10022248:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1002224c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022250:	e0bffd17 	ldw	r2,-12(fp)
10022254:	10000616 	blt	r2,zero,10022270 <lseek+0x40>
10022258:	e0bffd17 	ldw	r2,-12(fp)
1002225c:	10c00324 	muli	r3,r2,12
10022260:	008400b4 	movhi	r2,4098
10022264:	109cd004 	addi	r2,r2,29504
10022268:	1885883a 	add	r2,r3,r2
1002226c:	00000106 	br	10022274 <lseek+0x44>
10022270:	0005883a 	mov	r2,zero
10022274:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
10022278:	e0bffe17 	ldw	r2,-8(fp)
1002227c:	10001026 	beq	r2,zero,100222c0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10022280:	e0bffe17 	ldw	r2,-8(fp)
10022284:	10800017 	ldw	r2,0(r2)
10022288:	10800717 	ldw	r2,28(r2)
1002228c:	10000926 	beq	r2,zero,100222b4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10022290:	e0bffe17 	ldw	r2,-8(fp)
10022294:	10800017 	ldw	r2,0(r2)
10022298:	10800717 	ldw	r2,28(r2)
1002229c:	e1bffb17 	ldw	r6,-20(fp)
100222a0:	e17ffc17 	ldw	r5,-16(fp)
100222a4:	e13ffe17 	ldw	r4,-8(fp)
100222a8:	103ee83a 	callr	r2
100222ac:	e0bfff15 	stw	r2,-4(fp)
100222b0:	00000506 	br	100222c8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
100222b4:	00bfde84 	movi	r2,-134
100222b8:	e0bfff15 	stw	r2,-4(fp)
100222bc:	00000206 	br	100222c8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
100222c0:	00bfebc4 	movi	r2,-81
100222c4:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
100222c8:	e0bfff17 	ldw	r2,-4(fp)
100222cc:	1000070e 	bge	r2,zero,100222ec <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
100222d0:	00221f40 	call	100221f4 <alt_get_errno>
100222d4:	1007883a 	mov	r3,r2
100222d8:	e0bfff17 	ldw	r2,-4(fp)
100222dc:	0085c83a 	sub	r2,zero,r2
100222e0:	18800015 	stw	r2,0(r3)
    rc = -1;
100222e4:	00bfffc4 	movi	r2,-1
100222e8:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
100222ec:	e0bfff17 	ldw	r2,-4(fp)
}
100222f0:	e037883a 	mov	sp,fp
100222f4:	dfc00117 	ldw	ra,4(sp)
100222f8:	df000017 	ldw	fp,0(sp)
100222fc:	dec00204 	addi	sp,sp,8
10022300:	f800283a 	ret

10022304 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10022304:	defffd04 	addi	sp,sp,-12
10022308:	dfc00215 	stw	ra,8(sp)
1002230c:	df000115 	stw	fp,4(sp)
10022310:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10022314:	0009883a 	mov	r4,zero
10022318:	00229e80 	call	100229e8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1002231c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10022320:	0022a200 	call	10022a20 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10022324:	018400b4 	movhi	r6,4098
10022328:	31981d04 	addi	r6,r6,24692
1002232c:	014400b4 	movhi	r5,4098
10022330:	29581d04 	addi	r5,r5,24692
10022334:	010400b4 	movhi	r4,4098
10022338:	21181d04 	addi	r4,r4,24692
1002233c:	0023fc40 	call	10023fc4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10022340:	00239540 	call	10023954 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10022344:	010400b4 	movhi	r4,4098
10022348:	210e6d04 	addi	r4,r4,14772
1002234c:	00243300 	call	10024330 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10022350:	d0a96717 	ldw	r2,-23140(gp)
10022354:	d0e96817 	ldw	r3,-23136(gp)
10022358:	d1296917 	ldw	r4,-23132(gp)
1002235c:	200d883a 	mov	r6,r4
10022360:	180b883a 	mov	r5,r3
10022364:	1009883a 	mov	r4,r2
10022368:	00039040 	call	10003904 <main>
1002236c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10022370:	01000044 	movi	r4,1
10022374:	0021c840 	call	10021c84 <close>
  exit (result);
10022378:	e13fff17 	ldw	r4,-4(fp)
1002237c:	00243440 	call	10024344 <exit>

10022380 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10022380:	defffe04 	addi	sp,sp,-8
10022384:	df000115 	stw	fp,4(sp)
10022388:	df000104 	addi	fp,sp,4
1002238c:	e13fff15 	stw	r4,-4(fp)
}
10022390:	0001883a 	nop
10022394:	e037883a 	mov	sp,fp
10022398:	df000017 	ldw	fp,0(sp)
1002239c:	dec00104 	addi	sp,sp,4
100223a0:	f800283a 	ret

100223a4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
100223a4:	defffe04 	addi	sp,sp,-8
100223a8:	df000115 	stw	fp,4(sp)
100223ac:	df000104 	addi	fp,sp,4
100223b0:	e13fff15 	stw	r4,-4(fp)
}
100223b4:	0001883a 	nop
100223b8:	e037883a 	mov	sp,fp
100223bc:	df000017 	ldw	fp,0(sp)
100223c0:	dec00104 	addi	sp,sp,4
100223c4:	f800283a 	ret

100223c8 <alt_get_errno>:
{
100223c8:	defffe04 	addi	sp,sp,-8
100223cc:	dfc00115 	stw	ra,4(sp)
100223d0:	df000015 	stw	fp,0(sp)
100223d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100223d8:	d0a01917 	ldw	r2,-32668(gp)
100223dc:	10000326 	beq	r2,zero,100223ec <alt_get_errno+0x24>
100223e0:	d0a01917 	ldw	r2,-32668(gp)
100223e4:	103ee83a 	callr	r2
100223e8:	00000106 	br	100223f0 <alt_get_errno+0x28>
100223ec:	d0a96204 	addi	r2,gp,-23160
}
100223f0:	e037883a 	mov	sp,fp
100223f4:	dfc00117 	ldw	ra,4(sp)
100223f8:	df000017 	ldw	fp,0(sp)
100223fc:	dec00204 	addi	sp,sp,8
10022400:	f800283a 	ret

10022404 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
10022404:	defffd04 	addi	sp,sp,-12
10022408:	df000215 	stw	fp,8(sp)
1002240c:	df000204 	addi	fp,sp,8
10022410:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
10022414:	e0bffe17 	ldw	r2,-8(fp)
10022418:	10800217 	ldw	r2,8(r2)
1002241c:	10d00034 	orhi	r3,r2,16384
10022420:	e0bffe17 	ldw	r2,-8(fp)
10022424:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10022428:	e03fff15 	stw	zero,-4(fp)
1002242c:	00001a06 	br	10022498 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10022430:	e0bfff17 	ldw	r2,-4(fp)
10022434:	10c00324 	muli	r3,r2,12
10022438:	008400b4 	movhi	r2,4098
1002243c:	1885883a 	add	r2,r3,r2
10022440:	10dcd017 	ldw	r3,29504(r2)
10022444:	e0bffe17 	ldw	r2,-8(fp)
10022448:	10800017 	ldw	r2,0(r2)
1002244c:	18800f1e 	bne	r3,r2,1002248c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10022450:	e0bfff17 	ldw	r2,-4(fp)
10022454:	10c00324 	muli	r3,r2,12
10022458:	008400b4 	movhi	r2,4098
1002245c:	1885883a 	add	r2,r3,r2
10022460:	109cd217 	ldw	r2,29512(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
10022464:	1000090e 	bge	r2,zero,1002248c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
10022468:	e0bfff17 	ldw	r2,-4(fp)
1002246c:	10c00324 	muli	r3,r2,12
10022470:	008400b4 	movhi	r2,4098
10022474:	109cd004 	addi	r2,r2,29504
10022478:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1002247c:	e0fffe17 	ldw	r3,-8(fp)
10022480:	18800226 	beq	r3,r2,1002248c <alt_file_locked+0x88>
    {
      return -EACCES;
10022484:	00bffcc4 	movi	r2,-13
10022488:	00000806 	br	100224ac <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
1002248c:	e0bfff17 	ldw	r2,-4(fp)
10022490:	10800044 	addi	r2,r2,1
10022494:	e0bfff15 	stw	r2,-4(fp)
10022498:	d0a01817 	ldw	r2,-32672(gp)
1002249c:	1007883a 	mov	r3,r2
100224a0:	e0bfff17 	ldw	r2,-4(fp)
100224a4:	18bfe22e 	bgeu	r3,r2,10022430 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
100224a8:	0005883a 	mov	r2,zero
}
100224ac:	e037883a 	mov	sp,fp
100224b0:	df000017 	ldw	fp,0(sp)
100224b4:	dec00104 	addi	sp,sp,4
100224b8:	f800283a 	ret

100224bc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
100224bc:	defff604 	addi	sp,sp,-40
100224c0:	dfc00915 	stw	ra,36(sp)
100224c4:	df000815 	stw	fp,32(sp)
100224c8:	df000804 	addi	fp,sp,32
100224cc:	e13ffa15 	stw	r4,-24(fp)
100224d0:	e17ff915 	stw	r5,-28(fp)
100224d4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
100224d8:	00bfffc4 	movi	r2,-1
100224dc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
100224e0:	00bffb44 	movi	r2,-19
100224e4:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
100224e8:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
100224ec:	d1601604 	addi	r5,gp,-32680
100224f0:	e13ffa17 	ldw	r4,-24(fp)
100224f4:	0023a140 	call	10023a14 <alt_find_dev>
100224f8:	e0bfff15 	stw	r2,-4(fp)
100224fc:	e0bfff17 	ldw	r2,-4(fp)
10022500:	1000051e 	bne	r2,zero,10022518 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
10022504:	e13ffa17 	ldw	r4,-24(fp)
10022508:	0023aa40 	call	10023aa4 <alt_find_file>
1002250c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
10022510:	00800044 	movi	r2,1
10022514:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10022518:	e0bfff17 	ldw	r2,-4(fp)
1002251c:	10002926 	beq	r2,zero,100225c4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
10022520:	e13fff17 	ldw	r4,-4(fp)
10022524:	0023bac0 	call	10023bac <alt_get_fd>
10022528:	e0bffe15 	stw	r2,-8(fp)
1002252c:	e0bffe17 	ldw	r2,-8(fp)
10022530:	1000030e 	bge	r2,zero,10022540 <open+0x84>
    {
      status = index;
10022534:	e0bffe17 	ldw	r2,-8(fp)
10022538:	e0bffd15 	stw	r2,-12(fp)
1002253c:	00002306 	br	100225cc <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
10022540:	e0bffe17 	ldw	r2,-8(fp)
10022544:	10c00324 	muli	r3,r2,12
10022548:	008400b4 	movhi	r2,4098
1002254c:	109cd004 	addi	r2,r2,29504
10022550:	1885883a 	add	r2,r3,r2
10022554:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
10022558:	e0fff917 	ldw	r3,-28(fp)
1002255c:	00900034 	movhi	r2,16384
10022560:	10bfffc4 	addi	r2,r2,-1
10022564:	1886703a 	and	r3,r3,r2
10022568:	e0bffb17 	ldw	r2,-20(fp)
1002256c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10022570:	e0bffc17 	ldw	r2,-16(fp)
10022574:	1000051e 	bne	r2,zero,1002258c <open+0xd0>
10022578:	e13ffb17 	ldw	r4,-20(fp)
1002257c:	00224040 	call	10022404 <alt_file_locked>
10022580:	e0bffd15 	stw	r2,-12(fp)
10022584:	e0bffd17 	ldw	r2,-12(fp)
10022588:	10001016 	blt	r2,zero,100225cc <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1002258c:	e0bfff17 	ldw	r2,-4(fp)
10022590:	10800317 	ldw	r2,12(r2)
10022594:	10000826 	beq	r2,zero,100225b8 <open+0xfc>
10022598:	e0bfff17 	ldw	r2,-4(fp)
1002259c:	10800317 	ldw	r2,12(r2)
100225a0:	e1fff817 	ldw	r7,-32(fp)
100225a4:	e1bff917 	ldw	r6,-28(fp)
100225a8:	e17ffa17 	ldw	r5,-24(fp)
100225ac:	e13ffb17 	ldw	r4,-20(fp)
100225b0:	103ee83a 	callr	r2
100225b4:	00000106 	br	100225bc <open+0x100>
100225b8:	0005883a 	mov	r2,zero
100225bc:	e0bffd15 	stw	r2,-12(fp)
100225c0:	00000206 	br	100225cc <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
100225c4:	00bffb44 	movi	r2,-19
100225c8:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
100225cc:	e0bffd17 	ldw	r2,-12(fp)
100225d0:	1000090e 	bge	r2,zero,100225f8 <open+0x13c>
  {
    alt_release_fd (index);  
100225d4:	e13ffe17 	ldw	r4,-8(fp)
100225d8:	00227480 	call	10022748 <alt_release_fd>
    ALT_ERRNO = -status;
100225dc:	00223c80 	call	100223c8 <alt_get_errno>
100225e0:	1007883a 	mov	r3,r2
100225e4:	e0bffd17 	ldw	r2,-12(fp)
100225e8:	0085c83a 	sub	r2,zero,r2
100225ec:	18800015 	stw	r2,0(r3)
    return -1;
100225f0:	00bfffc4 	movi	r2,-1
100225f4:	00000106 	br	100225fc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
100225f8:	e0bffe17 	ldw	r2,-8(fp)
}
100225fc:	e037883a 	mov	sp,fp
10022600:	dfc00117 	ldw	ra,4(sp)
10022604:	df000017 	ldw	fp,0(sp)
10022608:	dec00204 	addi	sp,sp,8
1002260c:	f800283a 	ret

10022610 <alt_get_errno>:
{
10022610:	defffe04 	addi	sp,sp,-8
10022614:	dfc00115 	stw	ra,4(sp)
10022618:	df000015 	stw	fp,0(sp)
1002261c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022620:	d0a01917 	ldw	r2,-32668(gp)
10022624:	10000326 	beq	r2,zero,10022634 <alt_get_errno+0x24>
10022628:	d0a01917 	ldw	r2,-32668(gp)
1002262c:	103ee83a 	callr	r2
10022630:	00000106 	br	10022638 <alt_get_errno+0x28>
10022634:	d0a96204 	addi	r2,gp,-23160
}
10022638:	e037883a 	mov	sp,fp
1002263c:	dfc00117 	ldw	ra,4(sp)
10022640:	df000017 	ldw	fp,0(sp)
10022644:	dec00204 	addi	sp,sp,8
10022648:	f800283a 	ret

1002264c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1002264c:	defff904 	addi	sp,sp,-28
10022650:	dfc00615 	stw	ra,24(sp)
10022654:	df000515 	stw	fp,20(sp)
10022658:	df000504 	addi	fp,sp,20
1002265c:	e13ffd15 	stw	r4,-12(fp)
10022660:	e17ffc15 	stw	r5,-16(fp)
10022664:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10022668:	e0bffd17 	ldw	r2,-12(fp)
1002266c:	10000616 	blt	r2,zero,10022688 <read+0x3c>
10022670:	e0bffd17 	ldw	r2,-12(fp)
10022674:	10c00324 	muli	r3,r2,12
10022678:	008400b4 	movhi	r2,4098
1002267c:	109cd004 	addi	r2,r2,29504
10022680:	1885883a 	add	r2,r3,r2
10022684:	00000106 	br	1002268c <read+0x40>
10022688:	0005883a 	mov	r2,zero
1002268c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022690:	e0bfff17 	ldw	r2,-4(fp)
10022694:	10002226 	beq	r2,zero,10022720 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10022698:	e0bfff17 	ldw	r2,-4(fp)
1002269c:	10800217 	ldw	r2,8(r2)
100226a0:	108000cc 	andi	r2,r2,3
100226a4:	10800060 	cmpeqi	r2,r2,1
100226a8:	1000181e 	bne	r2,zero,1002270c <read+0xc0>
        (fd->dev->read))
100226ac:	e0bfff17 	ldw	r2,-4(fp)
100226b0:	10800017 	ldw	r2,0(r2)
100226b4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
100226b8:	10001426 	beq	r2,zero,1002270c <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
100226bc:	e0bfff17 	ldw	r2,-4(fp)
100226c0:	10800017 	ldw	r2,0(r2)
100226c4:	10800517 	ldw	r2,20(r2)
100226c8:	e0fffb17 	ldw	r3,-20(fp)
100226cc:	180d883a 	mov	r6,r3
100226d0:	e17ffc17 	ldw	r5,-16(fp)
100226d4:	e13fff17 	ldw	r4,-4(fp)
100226d8:	103ee83a 	callr	r2
100226dc:	e0bffe15 	stw	r2,-8(fp)
100226e0:	e0bffe17 	ldw	r2,-8(fp)
100226e4:	1000070e 	bge	r2,zero,10022704 <read+0xb8>
        {
          ALT_ERRNO = -rval;
100226e8:	00226100 	call	10022610 <alt_get_errno>
100226ec:	1007883a 	mov	r3,r2
100226f0:	e0bffe17 	ldw	r2,-8(fp)
100226f4:	0085c83a 	sub	r2,zero,r2
100226f8:	18800015 	stw	r2,0(r3)
          return -1;
100226fc:	00bfffc4 	movi	r2,-1
10022700:	00000c06 	br	10022734 <read+0xe8>
        }
        return rval;
10022704:	e0bffe17 	ldw	r2,-8(fp)
10022708:	00000a06 	br	10022734 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1002270c:	00226100 	call	10022610 <alt_get_errno>
10022710:	1007883a 	mov	r3,r2
10022714:	00800344 	movi	r2,13
10022718:	18800015 	stw	r2,0(r3)
1002271c:	00000406 	br	10022730 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10022720:	00226100 	call	10022610 <alt_get_errno>
10022724:	1007883a 	mov	r3,r2
10022728:	00801444 	movi	r2,81
1002272c:	18800015 	stw	r2,0(r3)
  }
  return -1;
10022730:	00bfffc4 	movi	r2,-1
}
10022734:	e037883a 	mov	sp,fp
10022738:	dfc00117 	ldw	ra,4(sp)
1002273c:	df000017 	ldw	fp,0(sp)
10022740:	dec00204 	addi	sp,sp,8
10022744:	f800283a 	ret

10022748 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10022748:	defffe04 	addi	sp,sp,-8
1002274c:	df000115 	stw	fp,4(sp)
10022750:	df000104 	addi	fp,sp,4
10022754:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
10022758:	e0bfff17 	ldw	r2,-4(fp)
1002275c:	108000d0 	cmplti	r2,r2,3
10022760:	10000a1e 	bne	r2,zero,1002278c <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
10022764:	e0bfff17 	ldw	r2,-4(fp)
10022768:	10c00324 	muli	r3,r2,12
1002276c:	008400b4 	movhi	r2,4098
10022770:	1885883a 	add	r2,r3,r2
10022774:	101cd215 	stw	zero,29512(r2)
    alt_fd_list[fd].dev      = 0;
10022778:	e0bfff17 	ldw	r2,-4(fp)
1002277c:	10c00324 	muli	r3,r2,12
10022780:	008400b4 	movhi	r2,4098
10022784:	1885883a 	add	r2,r3,r2
10022788:	101cd015 	stw	zero,29504(r2)
  }
}
1002278c:	0001883a 	nop
10022790:	e037883a 	mov	sp,fp
10022794:	df000017 	ldw	fp,0(sp)
10022798:	dec00104 	addi	sp,sp,4
1002279c:	f800283a 	ret

100227a0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
100227a0:	defff904 	addi	sp,sp,-28
100227a4:	df000615 	stw	fp,24(sp)
100227a8:	df000604 	addi	fp,sp,24
100227ac:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
100227b0:	0005303a 	rdctl	r2,status
100227b4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100227b8:	e0fffd17 	ldw	r3,-12(fp)
100227bc:	00bfff84 	movi	r2,-2
100227c0:	1884703a 	and	r2,r3,r2
100227c4:	1001703a 	wrctl	status,r2
  return context;
100227c8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
100227cc:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
100227d0:	d0a01a17 	ldw	r2,-32664(gp)
100227d4:	10c000c4 	addi	r3,r2,3
100227d8:	00bfff04 	movi	r2,-4
100227dc:	1884703a 	and	r2,r3,r2
100227e0:	d0a01a15 	stw	r2,-32664(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
100227e4:	d0e01a17 	ldw	r3,-32664(gp)
100227e8:	e0bffa17 	ldw	r2,-24(fp)
100227ec:	1887883a 	add	r3,r3,r2
100227f0:	00860034 	movhi	r2,6144
100227f4:	10800004 	addi	r2,r2,0
100227f8:	10c0062e 	bgeu	r2,r3,10022814 <sbrk+0x74>
100227fc:	e0bfff17 	ldw	r2,-4(fp)
10022800:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10022804:	e0bffc17 	ldw	r2,-16(fp)
10022808:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1002280c:	00bfffc4 	movi	r2,-1
10022810:	00000b06 	br	10022840 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
10022814:	d0a01a17 	ldw	r2,-32664(gp)
10022818:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
1002281c:	d0e01a17 	ldw	r3,-32664(gp)
10022820:	e0bffa17 	ldw	r2,-24(fp)
10022824:	1885883a 	add	r2,r3,r2
10022828:	d0a01a15 	stw	r2,-32664(gp)
1002282c:	e0bfff17 	ldw	r2,-4(fp)
10022830:	e0bffb15 	stw	r2,-20(fp)
10022834:	e0bffb17 	ldw	r2,-20(fp)
10022838:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1002283c:	e0bffe17 	ldw	r2,-8(fp)
} 
10022840:	e037883a 	mov	sp,fp
10022844:	df000017 	ldw	fp,0(sp)
10022848:	dec00104 	addi	sp,sp,4
1002284c:	f800283a 	ret

10022850 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10022850:	defffd04 	addi	sp,sp,-12
10022854:	dfc00215 	stw	ra,8(sp)
10022858:	df000115 	stw	fp,4(sp)
1002285c:	df000104 	addi	fp,sp,4
10022860:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
10022864:	e13fff17 	ldw	r4,-4(fp)
10022868:	00237040 	call	10023704 <alt_busy_sleep>
}
1002286c:	e037883a 	mov	sp,fp
10022870:	dfc00117 	ldw	ra,4(sp)
10022874:	df000017 	ldw	fp,0(sp)
10022878:	dec00204 	addi	sp,sp,8
1002287c:	f800283a 	ret

10022880 <alt_get_errno>:
{
10022880:	defffe04 	addi	sp,sp,-8
10022884:	dfc00115 	stw	ra,4(sp)
10022888:	df000015 	stw	fp,0(sp)
1002288c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10022890:	d0a01917 	ldw	r2,-32668(gp)
10022894:	10000326 	beq	r2,zero,100228a4 <alt_get_errno+0x24>
10022898:	d0a01917 	ldw	r2,-32668(gp)
1002289c:	103ee83a 	callr	r2
100228a0:	00000106 	br	100228a8 <alt_get_errno+0x28>
100228a4:	d0a96204 	addi	r2,gp,-23160
}
100228a8:	e037883a 	mov	sp,fp
100228ac:	dfc00117 	ldw	ra,4(sp)
100228b0:	df000017 	ldw	fp,0(sp)
100228b4:	dec00204 	addi	sp,sp,8
100228b8:	f800283a 	ret

100228bc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
100228bc:	defff904 	addi	sp,sp,-28
100228c0:	dfc00615 	stw	ra,24(sp)
100228c4:	df000515 	stw	fp,20(sp)
100228c8:	df000504 	addi	fp,sp,20
100228cc:	e13ffd15 	stw	r4,-12(fp)
100228d0:	e17ffc15 	stw	r5,-16(fp)
100228d4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100228d8:	e0bffd17 	ldw	r2,-12(fp)
100228dc:	10000616 	blt	r2,zero,100228f8 <write+0x3c>
100228e0:	e0bffd17 	ldw	r2,-12(fp)
100228e4:	10c00324 	muli	r3,r2,12
100228e8:	008400b4 	movhi	r2,4098
100228ec:	109cd004 	addi	r2,r2,29504
100228f0:	1885883a 	add	r2,r3,r2
100228f4:	00000106 	br	100228fc <write+0x40>
100228f8:	0005883a 	mov	r2,zero
100228fc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
10022900:	e0bfff17 	ldw	r2,-4(fp)
10022904:	10002126 	beq	r2,zero,1002298c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
10022908:	e0bfff17 	ldw	r2,-4(fp)
1002290c:	10800217 	ldw	r2,8(r2)
10022910:	108000cc 	andi	r2,r2,3
10022914:	10001826 	beq	r2,zero,10022978 <write+0xbc>
10022918:	e0bfff17 	ldw	r2,-4(fp)
1002291c:	10800017 	ldw	r2,0(r2)
10022920:	10800617 	ldw	r2,24(r2)
10022924:	10001426 	beq	r2,zero,10022978 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10022928:	e0bfff17 	ldw	r2,-4(fp)
1002292c:	10800017 	ldw	r2,0(r2)
10022930:	10800617 	ldw	r2,24(r2)
10022934:	e0fffb17 	ldw	r3,-20(fp)
10022938:	180d883a 	mov	r6,r3
1002293c:	e17ffc17 	ldw	r5,-16(fp)
10022940:	e13fff17 	ldw	r4,-4(fp)
10022944:	103ee83a 	callr	r2
10022948:	e0bffe15 	stw	r2,-8(fp)
1002294c:	e0bffe17 	ldw	r2,-8(fp)
10022950:	1000070e 	bge	r2,zero,10022970 <write+0xb4>
      {
        ALT_ERRNO = -rval;
10022954:	00228800 	call	10022880 <alt_get_errno>
10022958:	1007883a 	mov	r3,r2
1002295c:	e0bffe17 	ldw	r2,-8(fp)
10022960:	0085c83a 	sub	r2,zero,r2
10022964:	18800015 	stw	r2,0(r3)
        return -1;
10022968:	00bfffc4 	movi	r2,-1
1002296c:	00000c06 	br	100229a0 <write+0xe4>
      }
      return rval;
10022970:	e0bffe17 	ldw	r2,-8(fp)
10022974:	00000a06 	br	100229a0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
10022978:	00228800 	call	10022880 <alt_get_errno>
1002297c:	1007883a 	mov	r3,r2
10022980:	00800344 	movi	r2,13
10022984:	18800015 	stw	r2,0(r3)
10022988:	00000406 	br	1002299c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1002298c:	00228800 	call	10022880 <alt_get_errno>
10022990:	1007883a 	mov	r3,r2
10022994:	00801444 	movi	r2,81
10022998:	18800015 	stw	r2,0(r3)
  }
  return -1;
1002299c:	00bfffc4 	movi	r2,-1
}
100229a0:	e037883a 	mov	sp,fp
100229a4:	dfc00117 	ldw	ra,4(sp)
100229a8:	df000017 	ldw	fp,0(sp)
100229ac:	dec00204 	addi	sp,sp,8
100229b0:	f800283a 	ret

100229b4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
100229b4:	defffd04 	addi	sp,sp,-12
100229b8:	dfc00215 	stw	ra,8(sp)
100229bc:	df000115 	stw	fp,4(sp)
100229c0:	df000104 	addi	fp,sp,4
100229c4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
100229c8:	d1601604 	addi	r5,gp,-32680
100229cc:	e13fff17 	ldw	r4,-4(fp)
100229d0:	00238b00 	call	100238b0 <alt_dev_llist_insert>
}
100229d4:	e037883a 	mov	sp,fp
100229d8:	dfc00117 	ldw	ra,4(sp)
100229dc:	df000017 	ldw	fp,0(sp)
100229e0:	dec00204 	addi	sp,sp,8
100229e4:	f800283a 	ret

100229e8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
100229e8:	defffd04 	addi	sp,sp,-12
100229ec:	dfc00215 	stw	ra,8(sp)
100229f0:	df000115 	stw	fp,4(sp)
100229f4:	df000104 	addi	fp,sp,4
100229f8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
100229fc:	00241e40 	call	100241e4 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
10022a00:	00800044 	movi	r2,1
10022a04:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
10022a08:	0001883a 	nop
10022a0c:	e037883a 	mov	sp,fp
10022a10:	dfc00117 	ldw	ra,4(sp)
10022a14:	df000017 	ldw	fp,0(sp)
10022a18:	dec00204 	addi	sp,sp,8
10022a1c:	f800283a 	ret

10022a20 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
10022a20:	defffe04 	addi	sp,sp,-8
10022a24:	dfc00115 	stw	ra,4(sp)
10022a28:	df000015 	stw	fp,0(sp)
10022a2c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
10022a30:	01c0fa04 	movi	r7,1000
10022a34:	01800044 	movi	r6,1
10022a38:	000b883a 	mov	r5,zero
10022a3c:	01000804 	movi	r4,32
10022a40:	002355c0 	call	1002355c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
10022a44:	01800144 	movi	r6,5
10022a48:	000b883a 	mov	r5,zero
10022a4c:	010400b4 	movhi	r4,4098
10022a50:	211d3a04 	addi	r4,r4,29928
10022a54:	0022be40 	call	10022be4 <altera_avalon_jtag_uart_init>
10022a58:	010400b4 	movhi	r4,4098
10022a5c:	211d3004 	addi	r4,r4,29888
10022a60:	00229b40 	call	100229b4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
10022a64:	0001883a 	nop
}
10022a68:	0001883a 	nop
10022a6c:	e037883a 	mov	sp,fp
10022a70:	dfc00117 	ldw	ra,4(sp)
10022a74:	df000017 	ldw	fp,0(sp)
10022a78:	dec00204 	addi	sp,sp,8
10022a7c:	f800283a 	ret

10022a80 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
10022a80:	defffa04 	addi	sp,sp,-24
10022a84:	dfc00515 	stw	ra,20(sp)
10022a88:	df000415 	stw	fp,16(sp)
10022a8c:	df000404 	addi	fp,sp,16
10022a90:	e13ffe15 	stw	r4,-8(fp)
10022a94:	e17ffd15 	stw	r5,-12(fp)
10022a98:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10022a9c:	e0bffe17 	ldw	r2,-8(fp)
10022aa0:	10800017 	ldw	r2,0(r2)
10022aa4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
10022aa8:	e0bfff17 	ldw	r2,-4(fp)
10022aac:	10c00a04 	addi	r3,r2,40
10022ab0:	e0bffe17 	ldw	r2,-8(fp)
10022ab4:	10800217 	ldw	r2,8(r2)
10022ab8:	100f883a 	mov	r7,r2
10022abc:	e1bffc17 	ldw	r6,-16(fp)
10022ac0:	e17ffd17 	ldw	r5,-12(fp)
10022ac4:	1809883a 	mov	r4,r3
10022ac8:	00230a40 	call	100230a4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
10022acc:	e037883a 	mov	sp,fp
10022ad0:	dfc00117 	ldw	ra,4(sp)
10022ad4:	df000017 	ldw	fp,0(sp)
10022ad8:	dec00204 	addi	sp,sp,8
10022adc:	f800283a 	ret

10022ae0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
10022ae0:	defffa04 	addi	sp,sp,-24
10022ae4:	dfc00515 	stw	ra,20(sp)
10022ae8:	df000415 	stw	fp,16(sp)
10022aec:	df000404 	addi	fp,sp,16
10022af0:	e13ffe15 	stw	r4,-8(fp)
10022af4:	e17ffd15 	stw	r5,-12(fp)
10022af8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10022afc:	e0bffe17 	ldw	r2,-8(fp)
10022b00:	10800017 	ldw	r2,0(r2)
10022b04:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
10022b08:	e0bfff17 	ldw	r2,-4(fp)
10022b0c:	10c00a04 	addi	r3,r2,40
10022b10:	e0bffe17 	ldw	r2,-8(fp)
10022b14:	10800217 	ldw	r2,8(r2)
10022b18:	100f883a 	mov	r7,r2
10022b1c:	e1bffc17 	ldw	r6,-16(fp)
10022b20:	e17ffd17 	ldw	r5,-12(fp)
10022b24:	1809883a 	mov	r4,r3
10022b28:	00232c00 	call	100232c0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
10022b2c:	e037883a 	mov	sp,fp
10022b30:	dfc00117 	ldw	ra,4(sp)
10022b34:	df000017 	ldw	fp,0(sp)
10022b38:	dec00204 	addi	sp,sp,8
10022b3c:	f800283a 	ret

10022b40 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10022b40:	defffc04 	addi	sp,sp,-16
10022b44:	dfc00315 	stw	ra,12(sp)
10022b48:	df000215 	stw	fp,8(sp)
10022b4c:	df000204 	addi	fp,sp,8
10022b50:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10022b54:	e0bffe17 	ldw	r2,-8(fp)
10022b58:	10800017 	ldw	r2,0(r2)
10022b5c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
10022b60:	e0bfff17 	ldw	r2,-4(fp)
10022b64:	10c00a04 	addi	r3,r2,40
10022b68:	e0bffe17 	ldw	r2,-8(fp)
10022b6c:	10800217 	ldw	r2,8(r2)
10022b70:	100b883a 	mov	r5,r2
10022b74:	1809883a 	mov	r4,r3
10022b78:	0022f480 	call	10022f48 <altera_avalon_jtag_uart_close>
}
10022b7c:	e037883a 	mov	sp,fp
10022b80:	dfc00117 	ldw	ra,4(sp)
10022b84:	df000017 	ldw	fp,0(sp)
10022b88:	dec00204 	addi	sp,sp,8
10022b8c:	f800283a 	ret

10022b90 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
10022b90:	defffa04 	addi	sp,sp,-24
10022b94:	dfc00515 	stw	ra,20(sp)
10022b98:	df000415 	stw	fp,16(sp)
10022b9c:	df000404 	addi	fp,sp,16
10022ba0:	e13ffe15 	stw	r4,-8(fp)
10022ba4:	e17ffd15 	stw	r5,-12(fp)
10022ba8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
10022bac:	e0bffe17 	ldw	r2,-8(fp)
10022bb0:	10800017 	ldw	r2,0(r2)
10022bb4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
10022bb8:	e0bfff17 	ldw	r2,-4(fp)
10022bbc:	10800a04 	addi	r2,r2,40
10022bc0:	e1bffc17 	ldw	r6,-16(fp)
10022bc4:	e17ffd17 	ldw	r5,-12(fp)
10022bc8:	1009883a 	mov	r4,r2
10022bcc:	0022fb00 	call	10022fb0 <altera_avalon_jtag_uart_ioctl>
}
10022bd0:	e037883a 	mov	sp,fp
10022bd4:	dfc00117 	ldw	ra,4(sp)
10022bd8:	df000017 	ldw	fp,0(sp)
10022bdc:	dec00204 	addi	sp,sp,8
10022be0:	f800283a 	ret

10022be4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
10022be4:	defffa04 	addi	sp,sp,-24
10022be8:	dfc00515 	stw	ra,20(sp)
10022bec:	df000415 	stw	fp,16(sp)
10022bf0:	df000404 	addi	fp,sp,16
10022bf4:	e13fff15 	stw	r4,-4(fp)
10022bf8:	e17ffe15 	stw	r5,-8(fp)
10022bfc:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10022c00:	e0bfff17 	ldw	r2,-4(fp)
10022c04:	00c00044 	movi	r3,1
10022c08:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
10022c0c:	e0bfff17 	ldw	r2,-4(fp)
10022c10:	10800017 	ldw	r2,0(r2)
10022c14:	10800104 	addi	r2,r2,4
10022c18:	1007883a 	mov	r3,r2
10022c1c:	e0bfff17 	ldw	r2,-4(fp)
10022c20:	10800817 	ldw	r2,32(r2)
10022c24:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
10022c28:	e0bffe17 	ldw	r2,-8(fp)
10022c2c:	e0fffd17 	ldw	r3,-12(fp)
10022c30:	d8000015 	stw	zero,0(sp)
10022c34:	e1ffff17 	ldw	r7,-4(fp)
10022c38:	018400b4 	movhi	r6,4098
10022c3c:	318b2904 	addi	r6,r6,11428
10022c40:	180b883a 	mov	r5,r3
10022c44:	1009883a 	mov	r4,r2
10022c48:	0023c800 	call	10023c80 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
10022c4c:	e0bfff17 	ldw	r2,-4(fp)
10022c50:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
10022c54:	e0bfff17 	ldw	r2,-4(fp)
10022c58:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
10022c5c:	d0e96b17 	ldw	r3,-23124(gp)
10022c60:	e1ffff17 	ldw	r7,-4(fp)
10022c64:	018400b4 	movhi	r6,4098
10022c68:	318baa04 	addi	r6,r6,11944
10022c6c:	180b883a 	mov	r5,r3
10022c70:	1009883a 	mov	r4,r2
10022c74:	00235d80 	call	100235d8 <alt_alarm_start>
10022c78:	1000040e 	bge	r2,zero,10022c8c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
10022c7c:	e0ffff17 	ldw	r3,-4(fp)
10022c80:	00a00034 	movhi	r2,32768
10022c84:	10bfffc4 	addi	r2,r2,-1
10022c88:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
10022c8c:	0001883a 	nop
10022c90:	e037883a 	mov	sp,fp
10022c94:	dfc00117 	ldw	ra,4(sp)
10022c98:	df000017 	ldw	fp,0(sp)
10022c9c:	dec00204 	addi	sp,sp,8
10022ca0:	f800283a 	ret

10022ca4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
10022ca4:	defff804 	addi	sp,sp,-32
10022ca8:	df000715 	stw	fp,28(sp)
10022cac:	df000704 	addi	fp,sp,28
10022cb0:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
10022cb4:	e0bff917 	ldw	r2,-28(fp)
10022cb8:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
10022cbc:	e0bffd17 	ldw	r2,-12(fp)
10022cc0:	10800017 	ldw	r2,0(r2)
10022cc4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022cc8:	e0bffc17 	ldw	r2,-16(fp)
10022ccc:	10800104 	addi	r2,r2,4
10022cd0:	10800037 	ldwio	r2,0(r2)
10022cd4:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
10022cd8:	e0bffb17 	ldw	r2,-20(fp)
10022cdc:	1080c00c 	andi	r2,r2,768
10022ce0:	10006b26 	beq	r2,zero,10022e90 <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
10022ce4:	e0bffb17 	ldw	r2,-20(fp)
10022ce8:	1080400c 	andi	r2,r2,256
10022cec:	10003426 	beq	r2,zero,10022dc0 <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
10022cf0:	00800074 	movhi	r2,1
10022cf4:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022cf8:	e0bffd17 	ldw	r2,-12(fp)
10022cfc:	10800a17 	ldw	r2,40(r2)
10022d00:	10800044 	addi	r2,r2,1
10022d04:	1081ffcc 	andi	r2,r2,2047
10022d08:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
10022d0c:	e0bffd17 	ldw	r2,-12(fp)
10022d10:	10800b17 	ldw	r2,44(r2)
10022d14:	e0fffa17 	ldw	r3,-24(fp)
10022d18:	18801426 	beq	r3,r2,10022d6c <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
10022d1c:	e0bffc17 	ldw	r2,-16(fp)
10022d20:	10800037 	ldwio	r2,0(r2)
10022d24:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
10022d28:	e0bfff17 	ldw	r2,-4(fp)
10022d2c:	10a0000c 	andi	r2,r2,32768
10022d30:	10001026 	beq	r2,zero,10022d74 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10022d34:	e0bffd17 	ldw	r2,-12(fp)
10022d38:	10800a17 	ldw	r2,40(r2)
10022d3c:	e0ffff17 	ldw	r3,-4(fp)
10022d40:	1809883a 	mov	r4,r3
10022d44:	e0fffd17 	ldw	r3,-12(fp)
10022d48:	1885883a 	add	r2,r3,r2
10022d4c:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022d50:	e0bffd17 	ldw	r2,-12(fp)
10022d54:	10800a17 	ldw	r2,40(r2)
10022d58:	10800044 	addi	r2,r2,1
10022d5c:	10c1ffcc 	andi	r3,r2,2047
10022d60:	e0bffd17 	ldw	r2,-12(fp)
10022d64:	10c00a15 	stw	r3,40(r2)
      {
10022d68:	003fe306 	br	10022cf8 <altera_avalon_jtag_uart_irq+0x54>
          break;
10022d6c:	0001883a 	nop
10022d70:	00000106 	br	10022d78 <altera_avalon_jtag_uart_irq+0xd4>
          break;
10022d74:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
10022d78:	e0bfff17 	ldw	r2,-4(fp)
10022d7c:	10bfffec 	andhi	r2,r2,65535
10022d80:	10000f26 	beq	r2,zero,10022dc0 <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10022d84:	e0bffd17 	ldw	r2,-12(fp)
10022d88:	10c00817 	ldw	r3,32(r2)
10022d8c:	00bfff84 	movi	r2,-2
10022d90:	1886703a 	and	r3,r3,r2
10022d94:	e0bffd17 	ldw	r2,-12(fp)
10022d98:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
10022d9c:	e0bffc17 	ldw	r2,-16(fp)
10022da0:	10800104 	addi	r2,r2,4
10022da4:	1007883a 	mov	r3,r2
10022da8:	e0bffd17 	ldw	r2,-12(fp)
10022dac:	10800817 	ldw	r2,32(r2)
10022db0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022db4:	e0bffc17 	ldw	r2,-16(fp)
10022db8:	10800104 	addi	r2,r2,4
10022dbc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
10022dc0:	e0bffb17 	ldw	r2,-20(fp)
10022dc4:	1080800c 	andi	r2,r2,512
10022dc8:	103fbf26 	beq	r2,zero,10022cc8 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
10022dcc:	e0bffb17 	ldw	r2,-20(fp)
10022dd0:	1004d43a 	srli	r2,r2,16
10022dd4:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
10022dd8:	00001306 	br	10022e28 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
10022ddc:	e0bffc17 	ldw	r2,-16(fp)
10022de0:	e0fffd17 	ldw	r3,-12(fp)
10022de4:	18c00d17 	ldw	r3,52(r3)
10022de8:	e13ffd17 	ldw	r4,-12(fp)
10022dec:	20c7883a 	add	r3,r4,r3
10022df0:	18c20e03 	ldbu	r3,2104(r3)
10022df4:	18c03fcc 	andi	r3,r3,255
10022df8:	18c0201c 	xori	r3,r3,128
10022dfc:	18ffe004 	addi	r3,r3,-128
10022e00:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10022e04:	e0bffd17 	ldw	r2,-12(fp)
10022e08:	10800d17 	ldw	r2,52(r2)
10022e0c:	10800044 	addi	r2,r2,1
10022e10:	10c1ffcc 	andi	r3,r2,2047
10022e14:	e0bffd17 	ldw	r2,-12(fp)
10022e18:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
10022e1c:	e0bffe17 	ldw	r2,-8(fp)
10022e20:	10bfffc4 	addi	r2,r2,-1
10022e24:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
10022e28:	e0bffe17 	ldw	r2,-8(fp)
10022e2c:	10000526 	beq	r2,zero,10022e44 <altera_avalon_jtag_uart_irq+0x1a0>
10022e30:	e0bffd17 	ldw	r2,-12(fp)
10022e34:	10c00d17 	ldw	r3,52(r2)
10022e38:	e0bffd17 	ldw	r2,-12(fp)
10022e3c:	10800c17 	ldw	r2,48(r2)
10022e40:	18bfe61e 	bne	r3,r2,10022ddc <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
10022e44:	e0bffe17 	ldw	r2,-8(fp)
10022e48:	103f9f26 	beq	r2,zero,10022cc8 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10022e4c:	e0bffd17 	ldw	r2,-12(fp)
10022e50:	10c00817 	ldw	r3,32(r2)
10022e54:	00bfff44 	movi	r2,-3
10022e58:	1886703a 	and	r3,r3,r2
10022e5c:	e0bffd17 	ldw	r2,-12(fp)
10022e60:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10022e64:	e0bffd17 	ldw	r2,-12(fp)
10022e68:	10800017 	ldw	r2,0(r2)
10022e6c:	10800104 	addi	r2,r2,4
10022e70:	1007883a 	mov	r3,r2
10022e74:	e0bffd17 	ldw	r2,-12(fp)
10022e78:	10800817 	ldw	r2,32(r2)
10022e7c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10022e80:	e0bffc17 	ldw	r2,-16(fp)
10022e84:	10800104 	addi	r2,r2,4
10022e88:	10800037 	ldwio	r2,0(r2)
  {
10022e8c:	003f8e06 	br	10022cc8 <altera_avalon_jtag_uart_irq+0x24>
      break;
10022e90:	0001883a 	nop
      }
    }
  }
}
10022e94:	0001883a 	nop
10022e98:	e037883a 	mov	sp,fp
10022e9c:	df000017 	ldw	fp,0(sp)
10022ea0:	dec00104 	addi	sp,sp,4
10022ea4:	f800283a 	ret

10022ea8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
10022ea8:	defffc04 	addi	sp,sp,-16
10022eac:	df000315 	stw	fp,12(sp)
10022eb0:	df000304 	addi	fp,sp,12
10022eb4:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10022eb8:	e0bffd17 	ldw	r2,-12(fp)
10022ebc:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10022ec0:	e0bfff17 	ldw	r2,-4(fp)
10022ec4:	10800017 	ldw	r2,0(r2)
10022ec8:	10800104 	addi	r2,r2,4
10022ecc:	10800037 	ldwio	r2,0(r2)
10022ed0:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
10022ed4:	e0bffe17 	ldw	r2,-8(fp)
10022ed8:	1081000c 	andi	r2,r2,1024
10022edc:	10000b26 	beq	r2,zero,10022f0c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
10022ee0:	e0bfff17 	ldw	r2,-4(fp)
10022ee4:	10800017 	ldw	r2,0(r2)
10022ee8:	10800104 	addi	r2,r2,4
10022eec:	1007883a 	mov	r3,r2
10022ef0:	e0bfff17 	ldw	r2,-4(fp)
10022ef4:	10800817 	ldw	r2,32(r2)
10022ef8:	10810014 	ori	r2,r2,1024
10022efc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
10022f00:	e0bfff17 	ldw	r2,-4(fp)
10022f04:	10000915 	stw	zero,36(r2)
10022f08:	00000a06 	br	10022f34 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
10022f0c:	e0bfff17 	ldw	r2,-4(fp)
10022f10:	10c00917 	ldw	r3,36(r2)
10022f14:	00a00034 	movhi	r2,32768
10022f18:	10bfff04 	addi	r2,r2,-4
10022f1c:	10c00536 	bltu	r2,r3,10022f34 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
10022f20:	e0bfff17 	ldw	r2,-4(fp)
10022f24:	10800917 	ldw	r2,36(r2)
10022f28:	10c00044 	addi	r3,r2,1
10022f2c:	e0bfff17 	ldw	r2,-4(fp)
10022f30:	10c00915 	stw	r3,36(r2)
10022f34:	d0a96b17 	ldw	r2,-23124(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10022f38:	e037883a 	mov	sp,fp
10022f3c:	df000017 	ldw	fp,0(sp)
10022f40:	dec00104 	addi	sp,sp,4
10022f44:	f800283a 	ret

10022f48 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10022f48:	defffd04 	addi	sp,sp,-12
10022f4c:	df000215 	stw	fp,8(sp)
10022f50:	df000204 	addi	fp,sp,8
10022f54:	e13fff15 	stw	r4,-4(fp)
10022f58:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10022f5c:	00000506 	br	10022f74 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10022f60:	e0bffe17 	ldw	r2,-8(fp)
10022f64:	1090000c 	andi	r2,r2,16384
10022f68:	10000226 	beq	r2,zero,10022f74 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
10022f6c:	00bffd44 	movi	r2,-11
10022f70:	00000b06 	br	10022fa0 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10022f74:	e0bfff17 	ldw	r2,-4(fp)
10022f78:	10c00d17 	ldw	r3,52(r2)
10022f7c:	e0bfff17 	ldw	r2,-4(fp)
10022f80:	10800c17 	ldw	r2,48(r2)
10022f84:	18800526 	beq	r3,r2,10022f9c <altera_avalon_jtag_uart_close+0x54>
10022f88:	e0bfff17 	ldw	r2,-4(fp)
10022f8c:	10c00917 	ldw	r3,36(r2)
10022f90:	e0bfff17 	ldw	r2,-4(fp)
10022f94:	10800117 	ldw	r2,4(r2)
10022f98:	18bff136 	bltu	r3,r2,10022f60 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
10022f9c:	0005883a 	mov	r2,zero
}
10022fa0:	e037883a 	mov	sp,fp
10022fa4:	df000017 	ldw	fp,0(sp)
10022fa8:	dec00104 	addi	sp,sp,4
10022fac:	f800283a 	ret

10022fb0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
10022fb0:	defffa04 	addi	sp,sp,-24
10022fb4:	df000515 	stw	fp,20(sp)
10022fb8:	df000504 	addi	fp,sp,20
10022fbc:	e13ffd15 	stw	r4,-12(fp)
10022fc0:	e17ffc15 	stw	r5,-16(fp)
10022fc4:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
10022fc8:	00bff9c4 	movi	r2,-25
10022fcc:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
10022fd0:	e0bffc17 	ldw	r2,-16(fp)
10022fd4:	109a8060 	cmpeqi	r2,r2,27137
10022fd8:	1000041e 	bne	r2,zero,10022fec <altera_avalon_jtag_uart_ioctl+0x3c>
10022fdc:	e0bffc17 	ldw	r2,-16(fp)
10022fe0:	109a80a0 	cmpeqi	r2,r2,27138
10022fe4:	1000181e 	bne	r2,zero,10023048 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
10022fe8:	00002906 	br	10023090 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
10022fec:	e0bffd17 	ldw	r2,-12(fp)
10022ff0:	10c00117 	ldw	r3,4(r2)
10022ff4:	00a00034 	movhi	r2,32768
10022ff8:	10bfffc4 	addi	r2,r2,-1
10022ffc:	18802126 	beq	r3,r2,10023084 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
10023000:	e0bffb17 	ldw	r2,-20(fp)
10023004:	10800017 	ldw	r2,0(r2)
10023008:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1002300c:	e0bffe17 	ldw	r2,-8(fp)
10023010:	10800090 	cmplti	r2,r2,2
10023014:	1000061e 	bne	r2,zero,10023030 <altera_avalon_jtag_uart_ioctl+0x80>
10023018:	e0fffe17 	ldw	r3,-8(fp)
1002301c:	00a00034 	movhi	r2,32768
10023020:	10bfffc4 	addi	r2,r2,-1
10023024:	18800226 	beq	r3,r2,10023030 <altera_avalon_jtag_uart_ioctl+0x80>
10023028:	e0bffe17 	ldw	r2,-8(fp)
1002302c:	00000206 	br	10023038 <altera_avalon_jtag_uart_ioctl+0x88>
10023030:	00a00034 	movhi	r2,32768
10023034:	10bfff84 	addi	r2,r2,-2
10023038:	e0fffd17 	ldw	r3,-12(fp)
1002303c:	18800115 	stw	r2,4(r3)
      rc = 0;
10023040:	e03fff15 	stw	zero,-4(fp)
    break;
10023044:	00000f06 	br	10023084 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
10023048:	e0bffd17 	ldw	r2,-12(fp)
1002304c:	10c00117 	ldw	r3,4(r2)
10023050:	00a00034 	movhi	r2,32768
10023054:	10bfffc4 	addi	r2,r2,-1
10023058:	18800c26 	beq	r3,r2,1002308c <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1002305c:	e0bffd17 	ldw	r2,-12(fp)
10023060:	10c00917 	ldw	r3,36(r2)
10023064:	e0bffd17 	ldw	r2,-12(fp)
10023068:	10800117 	ldw	r2,4(r2)
1002306c:	1885803a 	cmpltu	r2,r3,r2
10023070:	10c03fcc 	andi	r3,r2,255
10023074:	e0bffb17 	ldw	r2,-20(fp)
10023078:	10c00015 	stw	r3,0(r2)
      rc = 0;
1002307c:	e03fff15 	stw	zero,-4(fp)
    break;
10023080:	00000206 	br	1002308c <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
10023084:	0001883a 	nop
10023088:	00000106 	br	10023090 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
1002308c:	0001883a 	nop
  }

  return rc;
10023090:	e0bfff17 	ldw	r2,-4(fp)
}
10023094:	e037883a 	mov	sp,fp
10023098:	df000017 	ldw	fp,0(sp)
1002309c:	dec00104 	addi	sp,sp,4
100230a0:	f800283a 	ret

100230a4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
100230a4:	defff304 	addi	sp,sp,-52
100230a8:	dfc00c15 	stw	ra,48(sp)
100230ac:	df000b15 	stw	fp,44(sp)
100230b0:	df000b04 	addi	fp,sp,44
100230b4:	e13ff815 	stw	r4,-32(fp)
100230b8:	e17ff715 	stw	r5,-36(fp)
100230bc:	e1bff615 	stw	r6,-40(fp)
100230c0:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
100230c4:	e0bff717 	ldw	r2,-36(fp)
100230c8:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
100230cc:	00004706 	br	100231ec <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
100230d0:	e0bff817 	ldw	r2,-32(fp)
100230d4:	10800a17 	ldw	r2,40(r2)
100230d8:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
100230dc:	e0bff817 	ldw	r2,-32(fp)
100230e0:	10800b17 	ldw	r2,44(r2)
100230e4:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
100230e8:	e0fffd17 	ldw	r3,-12(fp)
100230ec:	e0bffc17 	ldw	r2,-16(fp)
100230f0:	18800536 	bltu	r3,r2,10023108 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
100230f4:	e0fffd17 	ldw	r3,-12(fp)
100230f8:	e0bffc17 	ldw	r2,-16(fp)
100230fc:	1885c83a 	sub	r2,r3,r2
10023100:	e0bffe15 	stw	r2,-8(fp)
10023104:	00000406 	br	10023118 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
10023108:	00c20004 	movi	r3,2048
1002310c:	e0bffc17 	ldw	r2,-16(fp)
10023110:	1885c83a 	sub	r2,r3,r2
10023114:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023118:	e0bffe17 	ldw	r2,-8(fp)
1002311c:	10001e26 	beq	r2,zero,10023198 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
10023120:	e0fff617 	ldw	r3,-40(fp)
10023124:	e0bffe17 	ldw	r2,-8(fp)
10023128:	1880022e 	bgeu	r3,r2,10023134 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1002312c:	e0bff617 	ldw	r2,-40(fp)
10023130:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10023134:	e0bff817 	ldw	r2,-32(fp)
10023138:	10c00e04 	addi	r3,r2,56
1002313c:	e0bffc17 	ldw	r2,-16(fp)
10023140:	1885883a 	add	r2,r3,r2
10023144:	e1bffe17 	ldw	r6,-8(fp)
10023148:	100b883a 	mov	r5,r2
1002314c:	e13fff17 	ldw	r4,-4(fp)
10023150:	00157f80 	call	100157f8 <memcpy>
      ptr   += n;
10023154:	e0ffff17 	ldw	r3,-4(fp)
10023158:	e0bffe17 	ldw	r2,-8(fp)
1002315c:	1885883a 	add	r2,r3,r2
10023160:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
10023164:	e0fff617 	ldw	r3,-40(fp)
10023168:	e0bffe17 	ldw	r2,-8(fp)
1002316c:	1885c83a 	sub	r2,r3,r2
10023170:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10023174:	e0fffc17 	ldw	r3,-16(fp)
10023178:	e0bffe17 	ldw	r2,-8(fp)
1002317c:	1885883a 	add	r2,r3,r2
10023180:	10c1ffcc 	andi	r3,r2,2047
10023184:	e0bff817 	ldw	r2,-32(fp)
10023188:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1002318c:	e0bff617 	ldw	r2,-40(fp)
10023190:	00bfcf16 	blt	zero,r2,100230d0 <altera_avalon_jtag_uart_read+0x2c>
10023194:	00000106 	br	1002319c <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
10023198:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
1002319c:	e0ffff17 	ldw	r3,-4(fp)
100231a0:	e0bff717 	ldw	r2,-36(fp)
100231a4:	1880141e 	bne	r3,r2,100231f8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
100231a8:	e0bff517 	ldw	r2,-44(fp)
100231ac:	1090000c 	andi	r2,r2,16384
100231b0:	1000131e 	bne	r2,zero,10023200 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
100231b4:	0001883a 	nop
100231b8:	e0bff817 	ldw	r2,-32(fp)
100231bc:	10800a17 	ldw	r2,40(r2)
100231c0:	e0fffd17 	ldw	r3,-12(fp)
100231c4:	1880051e 	bne	r3,r2,100231dc <altera_avalon_jtag_uart_read+0x138>
100231c8:	e0bff817 	ldw	r2,-32(fp)
100231cc:	10c00917 	ldw	r3,36(r2)
100231d0:	e0bff817 	ldw	r2,-32(fp)
100231d4:	10800117 	ldw	r2,4(r2)
100231d8:	18bff736 	bltu	r3,r2,100231b8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
100231dc:	e0bff817 	ldw	r2,-32(fp)
100231e0:	10800a17 	ldw	r2,40(r2)
100231e4:	e0fffd17 	ldw	r3,-12(fp)
100231e8:	18800726 	beq	r3,r2,10023208 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
100231ec:	e0bff617 	ldw	r2,-40(fp)
100231f0:	00bfb716 	blt	zero,r2,100230d0 <altera_avalon_jtag_uart_read+0x2c>
100231f4:	00000506 	br	1002320c <altera_avalon_jtag_uart_read+0x168>
      break;
100231f8:	0001883a 	nop
100231fc:	00000306 	br	1002320c <altera_avalon_jtag_uart_read+0x168>
      break;
10023200:	0001883a 	nop
10023204:	00000106 	br	1002320c <altera_avalon_jtag_uart_read+0x168>
      break;
10023208:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1002320c:	e0ffff17 	ldw	r3,-4(fp)
10023210:	e0bff717 	ldw	r2,-36(fp)
10023214:	18801826 	beq	r3,r2,10023278 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
10023218:	0005303a 	rdctl	r2,status
1002321c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023220:	e0fff917 	ldw	r3,-28(fp)
10023224:	00bfff84 	movi	r2,-2
10023228:	1884703a 	and	r2,r3,r2
1002322c:	1001703a 	wrctl	status,r2
  return context;
10023230:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10023234:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10023238:	e0bff817 	ldw	r2,-32(fp)
1002323c:	10800817 	ldw	r2,32(r2)
10023240:	10c00054 	ori	r3,r2,1
10023244:	e0bff817 	ldw	r2,-32(fp)
10023248:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1002324c:	e0bff817 	ldw	r2,-32(fp)
10023250:	10800017 	ldw	r2,0(r2)
10023254:	10800104 	addi	r2,r2,4
10023258:	1007883a 	mov	r3,r2
1002325c:	e0bff817 	ldw	r2,-32(fp)
10023260:	10800817 	ldw	r2,32(r2)
10023264:	18800035 	stwio	r2,0(r3)
10023268:	e0bffb17 	ldw	r2,-20(fp)
1002326c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
10023270:	e0bffa17 	ldw	r2,-24(fp)
10023274:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10023278:	e0ffff17 	ldw	r3,-4(fp)
1002327c:	e0bff717 	ldw	r2,-36(fp)
10023280:	18800426 	beq	r3,r2,10023294 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
10023284:	e0ffff17 	ldw	r3,-4(fp)
10023288:	e0bff717 	ldw	r2,-36(fp)
1002328c:	1885c83a 	sub	r2,r3,r2
10023290:	00000606 	br	100232ac <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
10023294:	e0bff517 	ldw	r2,-44(fp)
10023298:	1090000c 	andi	r2,r2,16384
1002329c:	10000226 	beq	r2,zero,100232a8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
100232a0:	00bffd44 	movi	r2,-11
100232a4:	00000106 	br	100232ac <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
100232a8:	00bffec4 	movi	r2,-5
}
100232ac:	e037883a 	mov	sp,fp
100232b0:	dfc00117 	ldw	ra,4(sp)
100232b4:	df000017 	ldw	fp,0(sp)
100232b8:	dec00204 	addi	sp,sp,8
100232bc:	f800283a 	ret

100232c0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
100232c0:	defff304 	addi	sp,sp,-52
100232c4:	dfc00c15 	stw	ra,48(sp)
100232c8:	df000b15 	stw	fp,44(sp)
100232cc:	df000b04 	addi	fp,sp,44
100232d0:	e13ff815 	stw	r4,-32(fp)
100232d4:	e17ff715 	stw	r5,-36(fp)
100232d8:	e1bff615 	stw	r6,-40(fp)
100232dc:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
100232e0:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
100232e4:	e0bff717 	ldw	r2,-36(fp)
100232e8:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
100232ec:	00003706 	br	100233cc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
100232f0:	e0bff817 	ldw	r2,-32(fp)
100232f4:	10800c17 	ldw	r2,48(r2)
100232f8:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
100232fc:	e0bff817 	ldw	r2,-32(fp)
10023300:	10800d17 	ldw	r2,52(r2)
10023304:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
10023308:	e0fffc17 	ldw	r3,-16(fp)
1002330c:	e0bfff17 	ldw	r2,-4(fp)
10023310:	1880062e 	bgeu	r3,r2,1002332c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10023314:	e0ffff17 	ldw	r3,-4(fp)
10023318:	e0bffc17 	ldw	r2,-16(fp)
1002331c:	1885c83a 	sub	r2,r3,r2
10023320:	10bfffc4 	addi	r2,r2,-1
10023324:	e0bffe15 	stw	r2,-8(fp)
10023328:	00000b06 	br	10023358 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1002332c:	e0bfff17 	ldw	r2,-4(fp)
10023330:	10000526 	beq	r2,zero,10023348 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
10023334:	00c20004 	movi	r3,2048
10023338:	e0bffc17 	ldw	r2,-16(fp)
1002333c:	1885c83a 	sub	r2,r3,r2
10023340:	e0bffe15 	stw	r2,-8(fp)
10023344:	00000406 	br	10023358 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
10023348:	00c1ffc4 	movi	r3,2047
1002334c:	e0bffc17 	ldw	r2,-16(fp)
10023350:	1885c83a 	sub	r2,r3,r2
10023354:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
10023358:	e0bffe17 	ldw	r2,-8(fp)
1002335c:	10001e26 	beq	r2,zero,100233d8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
10023360:	e0fff617 	ldw	r3,-40(fp)
10023364:	e0bffe17 	ldw	r2,-8(fp)
10023368:	1880022e 	bgeu	r3,r2,10023374 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1002336c:	e0bff617 	ldw	r2,-40(fp)
10023370:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
10023374:	e0bff817 	ldw	r2,-32(fp)
10023378:	10c20e04 	addi	r3,r2,2104
1002337c:	e0bffc17 	ldw	r2,-16(fp)
10023380:	1885883a 	add	r2,r3,r2
10023384:	e1bffe17 	ldw	r6,-8(fp)
10023388:	e17ff717 	ldw	r5,-36(fp)
1002338c:	1009883a 	mov	r4,r2
10023390:	00157f80 	call	100157f8 <memcpy>
      ptr   += n;
10023394:	e0fff717 	ldw	r3,-36(fp)
10023398:	e0bffe17 	ldw	r2,-8(fp)
1002339c:	1885883a 	add	r2,r3,r2
100233a0:	e0bff715 	stw	r2,-36(fp)
      count -= n;
100233a4:	e0fff617 	ldw	r3,-40(fp)
100233a8:	e0bffe17 	ldw	r2,-8(fp)
100233ac:	1885c83a 	sub	r2,r3,r2
100233b0:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100233b4:	e0fffc17 	ldw	r3,-16(fp)
100233b8:	e0bffe17 	ldw	r2,-8(fp)
100233bc:	1885883a 	add	r2,r3,r2
100233c0:	10c1ffcc 	andi	r3,r2,2047
100233c4:	e0bff817 	ldw	r2,-32(fp)
100233c8:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
100233cc:	e0bff617 	ldw	r2,-40(fp)
100233d0:	00bfc716 	blt	zero,r2,100232f0 <altera_avalon_jtag_uart_write+0x30>
100233d4:	00000106 	br	100233dc <altera_avalon_jtag_uart_write+0x11c>
        break;
100233d8:	0001883a 	nop
  NIOS2_READ_STATUS (context);
100233dc:	0005303a 	rdctl	r2,status
100233e0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100233e4:	e0fff917 	ldw	r3,-28(fp)
100233e8:	00bfff84 	movi	r2,-2
100233ec:	1884703a 	and	r2,r3,r2
100233f0:	1001703a 	wrctl	status,r2
  return context;
100233f4:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
100233f8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
100233fc:	e0bff817 	ldw	r2,-32(fp)
10023400:	10800817 	ldw	r2,32(r2)
10023404:	10c00094 	ori	r3,r2,2
10023408:	e0bff817 	ldw	r2,-32(fp)
1002340c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10023410:	e0bff817 	ldw	r2,-32(fp)
10023414:	10800017 	ldw	r2,0(r2)
10023418:	10800104 	addi	r2,r2,4
1002341c:	1007883a 	mov	r3,r2
10023420:	e0bff817 	ldw	r2,-32(fp)
10023424:	10800817 	ldw	r2,32(r2)
10023428:	18800035 	stwio	r2,0(r3)
1002342c:	e0bffb17 	ldw	r2,-20(fp)
10023430:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
10023434:	e0bffa17 	ldw	r2,-24(fp)
10023438:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1002343c:	e0bff617 	ldw	r2,-40(fp)
10023440:	0080100e 	bge	zero,r2,10023484 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
10023444:	e0bff517 	ldw	r2,-44(fp)
10023448:	1090000c 	andi	r2,r2,16384
1002344c:	1000101e 	bne	r2,zero,10023490 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10023450:	0001883a 	nop
10023454:	e0bff817 	ldw	r2,-32(fp)
10023458:	10800d17 	ldw	r2,52(r2)
1002345c:	e0ffff17 	ldw	r3,-4(fp)
10023460:	1880051e 	bne	r3,r2,10023478 <altera_avalon_jtag_uart_write+0x1b8>
10023464:	e0bff817 	ldw	r2,-32(fp)
10023468:	10c00917 	ldw	r3,36(r2)
1002346c:	e0bff817 	ldw	r2,-32(fp)
10023470:	10800117 	ldw	r2,4(r2)
10023474:	18bff736 	bltu	r3,r2,10023454 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10023478:	e0bff817 	ldw	r2,-32(fp)
1002347c:	10800917 	ldw	r2,36(r2)
10023480:	1000051e 	bne	r2,zero,10023498 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
10023484:	e0bff617 	ldw	r2,-40(fp)
10023488:	00bfd016 	blt	zero,r2,100233cc <altera_avalon_jtag_uart_write+0x10c>
1002348c:	00000306 	br	1002349c <altera_avalon_jtag_uart_write+0x1dc>
        break;
10023490:	0001883a 	nop
10023494:	00000106 	br	1002349c <altera_avalon_jtag_uart_write+0x1dc>
         break;
10023498:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1002349c:	e0fff717 	ldw	r3,-36(fp)
100234a0:	e0bffd17 	ldw	r2,-12(fp)
100234a4:	18800426 	beq	r3,r2,100234b8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
100234a8:	e0fff717 	ldw	r3,-36(fp)
100234ac:	e0bffd17 	ldw	r2,-12(fp)
100234b0:	1885c83a 	sub	r2,r3,r2
100234b4:	00000606 	br	100234d0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
100234b8:	e0bff517 	ldw	r2,-44(fp)
100234bc:	1090000c 	andi	r2,r2,16384
100234c0:	10000226 	beq	r2,zero,100234cc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
100234c4:	00bffd44 	movi	r2,-11
100234c8:	00000106 	br	100234d0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
100234cc:	00bffec4 	movi	r2,-5
}
100234d0:	e037883a 	mov	sp,fp
100234d4:	dfc00117 	ldw	ra,4(sp)
100234d8:	df000017 	ldw	fp,0(sp)
100234dc:	dec00204 	addi	sp,sp,8
100234e0:	f800283a 	ret

100234e4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
100234e4:	defffa04 	addi	sp,sp,-24
100234e8:	dfc00515 	stw	ra,20(sp)
100234ec:	df000415 	stw	fp,16(sp)
100234f0:	df000404 	addi	fp,sp,16
100234f4:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
100234f8:	0007883a 	mov	r3,zero
100234fc:	e0bffc17 	ldw	r2,-16(fp)
10023500:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
10023504:	e0bffc17 	ldw	r2,-16(fp)
10023508:	10800104 	addi	r2,r2,4
1002350c:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
10023510:	0005303a 	rdctl	r2,status
10023514:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023518:	e0fffd17 	ldw	r3,-12(fp)
1002351c:	00bfff84 	movi	r2,-2
10023520:	1884703a 	and	r2,r3,r2
10023524:	1001703a 	wrctl	status,r2
  return context;
10023528:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
1002352c:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
10023530:	00240dc0 	call	100240dc <alt_tick>
10023534:	e0bfff17 	ldw	r2,-4(fp)
10023538:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
1002353c:	e0bffe17 	ldw	r2,-8(fp)
10023540:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
10023544:	0001883a 	nop
10023548:	e037883a 	mov	sp,fp
1002354c:	dfc00117 	ldw	ra,4(sp)
10023550:	df000017 	ldw	fp,0(sp)
10023554:	dec00204 	addi	sp,sp,8
10023558:	f800283a 	ret

1002355c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
1002355c:	defff804 	addi	sp,sp,-32
10023560:	dfc00715 	stw	ra,28(sp)
10023564:	df000615 	stw	fp,24(sp)
10023568:	df000604 	addi	fp,sp,24
1002356c:	e13ffe15 	stw	r4,-8(fp)
10023570:	e17ffd15 	stw	r5,-12(fp)
10023574:	e1bffc15 	stw	r6,-16(fp)
10023578:	e1fffb15 	stw	r7,-20(fp)
1002357c:	e0bffb17 	ldw	r2,-20(fp)
10023580:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
10023584:	d0a96b17 	ldw	r2,-23124(gp)
10023588:	1000021e 	bne	r2,zero,10023594 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
1002358c:	e0bfff17 	ldw	r2,-4(fp)
10023590:	d0a96b15 	stw	r2,-23124(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
10023594:	e0bffe17 	ldw	r2,-8(fp)
10023598:	10800104 	addi	r2,r2,4
1002359c:	00c001c4 	movi	r3,7
100235a0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
100235a4:	d8000015 	stw	zero,0(sp)
100235a8:	e1fffe17 	ldw	r7,-8(fp)
100235ac:	018400b4 	movhi	r6,4098
100235b0:	318d3904 	addi	r6,r6,13540
100235b4:	e17ffc17 	ldw	r5,-16(fp)
100235b8:	e13ffd17 	ldw	r4,-12(fp)
100235bc:	0023c800 	call	10023c80 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
100235c0:	0001883a 	nop
100235c4:	e037883a 	mov	sp,fp
100235c8:	dfc00117 	ldw	ra,4(sp)
100235cc:	df000017 	ldw	fp,0(sp)
100235d0:	dec00204 	addi	sp,sp,8
100235d4:	f800283a 	ret

100235d8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
100235d8:	defff504 	addi	sp,sp,-44
100235dc:	df000a15 	stw	fp,40(sp)
100235e0:	df000a04 	addi	fp,sp,40
100235e4:	e13ff915 	stw	r4,-28(fp)
100235e8:	e17ff815 	stw	r5,-32(fp)
100235ec:	e1bff715 	stw	r6,-36(fp)
100235f0:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
100235f4:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
100235f8:	d0a96b17 	ldw	r2,-23124(gp)
  
  if (alt_ticks_per_second ())
100235fc:	10003c26 	beq	r2,zero,100236f0 <alt_alarm_start+0x118>
  {
    if (alarm)
10023600:	e0bff917 	ldw	r2,-28(fp)
10023604:	10003826 	beq	r2,zero,100236e8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10023608:	e0bff917 	ldw	r2,-28(fp)
1002360c:	e0fff717 	ldw	r3,-36(fp)
10023610:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10023614:	e0bff917 	ldw	r2,-28(fp)
10023618:	e0fff617 	ldw	r3,-40(fp)
1002361c:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
10023620:	0005303a 	rdctl	r2,status
10023624:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023628:	e0fffd17 	ldw	r3,-12(fp)
1002362c:	00bfff84 	movi	r2,-2
10023630:	1884703a 	and	r2,r3,r2
10023634:	1001703a 	wrctl	status,r2
  return context;
10023638:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
1002363c:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10023640:	d0a96c17 	ldw	r2,-23120(gp)
      
      current_nticks = alt_nticks();
10023644:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10023648:	e0fff817 	ldw	r3,-32(fp)
1002364c:	e0bfff17 	ldw	r2,-4(fp)
10023650:	1885883a 	add	r2,r3,r2
10023654:	10c00044 	addi	r3,r2,1
10023658:	e0bff917 	ldw	r2,-28(fp)
1002365c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10023660:	e0bff917 	ldw	r2,-28(fp)
10023664:	10c00217 	ldw	r3,8(r2)
10023668:	e0bfff17 	ldw	r2,-4(fp)
1002366c:	1880042e 	bgeu	r3,r2,10023680 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10023670:	e0bff917 	ldw	r2,-28(fp)
10023674:	00c00044 	movi	r3,1
10023678:	10c00405 	stb	r3,16(r2)
1002367c:	00000206 	br	10023688 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10023680:	e0bff917 	ldw	r2,-28(fp)
10023684:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10023688:	e0bff917 	ldw	r2,-28(fp)
1002368c:	d0e01c04 	addi	r3,gp,-32656
10023690:	e0fffb15 	stw	r3,-20(fp)
10023694:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10023698:	e0bffa17 	ldw	r2,-24(fp)
1002369c:	e0fffb17 	ldw	r3,-20(fp)
100236a0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
100236a4:	e0bffb17 	ldw	r2,-20(fp)
100236a8:	10c00017 	ldw	r3,0(r2)
100236ac:	e0bffa17 	ldw	r2,-24(fp)
100236b0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
100236b4:	e0bffb17 	ldw	r2,-20(fp)
100236b8:	10800017 	ldw	r2,0(r2)
100236bc:	e0fffa17 	ldw	r3,-24(fp)
100236c0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
100236c4:	e0bffb17 	ldw	r2,-20(fp)
100236c8:	e0fffa17 	ldw	r3,-24(fp)
100236cc:	10c00015 	stw	r3,0(r2)
100236d0:	e0bffe17 	ldw	r2,-8(fp)
100236d4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
100236d8:	e0bffc17 	ldw	r2,-16(fp)
100236dc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
100236e0:	0005883a 	mov	r2,zero
100236e4:	00000306 	br	100236f4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
100236e8:	00bffa84 	movi	r2,-22
100236ec:	00000106 	br	100236f4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
100236f0:	00bfde84 	movi	r2,-134
  }
}
100236f4:	e037883a 	mov	sp,fp
100236f8:	df000017 	ldw	fp,0(sp)
100236fc:	dec00104 	addi	sp,sp,4
10023700:	f800283a 	ret

10023704 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
10023704:	defffb04 	addi	sp,sp,-20
10023708:	df000415 	stw	fp,16(sp)
1002370c:	df000404 	addi	fp,sp,16
10023710:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
10023714:	008000c4 	movi	r2,3
10023718:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
1002371c:	e0fffe17 	ldw	r3,-8(fp)
10023720:	008003f4 	movhi	r2,15
10023724:	10909004 	addi	r2,r2,16960
10023728:	1887383a 	mul	r3,r3,r2
1002372c:	00817db4 	movhi	r2,1526
10023730:	10b84004 	addi	r2,r2,-7936
10023734:	10c7203a 	divu	r3,r2,r3
  big_loops = us / (INT_MAX/
10023738:	00a00034 	movhi	r2,32768
1002373c:	10bfffc4 	addi	r2,r2,-1
10023740:	10c5203a 	divu	r2,r2,r3
10023744:	e0fffc17 	ldw	r3,-16(fp)
10023748:	1885203a 	divu	r2,r3,r2
1002374c:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
10023750:	e0bffd17 	ldw	r2,-12(fp)
10023754:	10002526 	beq	r2,zero,100237ec <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
10023758:	e03fff15 	stw	zero,-4(fp)
1002375c:	00001406 	br	100237b0 <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10023760:	00a00034 	movhi	r2,32768
10023764:	10bfffc4 	addi	r2,r2,-1
10023768:	10bfffc4 	addi	r2,r2,-1
1002376c:	103ffe1e 	bne	r2,zero,10023768 <alt_busy_sleep+0x64>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10023770:	e0fffe17 	ldw	r3,-8(fp)
10023774:	008003f4 	movhi	r2,15
10023778:	10909004 	addi	r2,r2,16960
1002377c:	1887383a 	mul	r3,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
10023780:	00817db4 	movhi	r2,1526
10023784:	10b84004 	addi	r2,r2,-7936
10023788:	10c7203a 	divu	r3,r2,r3
1002378c:	00a00034 	movhi	r2,32768
10023790:	10bfffc4 	addi	r2,r2,-1
10023794:	10c5203a 	divu	r2,r2,r3
10023798:	e0fffc17 	ldw	r3,-16(fp)
1002379c:	1885c83a 	sub	r2,r3,r2
100237a0:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
100237a4:	e0bfff17 	ldw	r2,-4(fp)
100237a8:	10800044 	addi	r2,r2,1
100237ac:	e0bfff15 	stw	r2,-4(fp)
100237b0:	e0ffff17 	ldw	r3,-4(fp)
100237b4:	e0bffd17 	ldw	r2,-12(fp)
100237b8:	18bfe916 	blt	r3,r2,10023760 <alt_busy_sleep+0x5c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
100237bc:	e0fffe17 	ldw	r3,-8(fp)
100237c0:	008003f4 	movhi	r2,15
100237c4:	10909004 	addi	r2,r2,16960
100237c8:	1887383a 	mul	r3,r3,r2
100237cc:	00817db4 	movhi	r2,1526
100237d0:	10b84004 	addi	r2,r2,-7936
100237d4:	10c7203a 	divu	r3,r2,r3
100237d8:	e0bffc17 	ldw	r2,-16(fp)
100237dc:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
100237e0:	10bfffc4 	addi	r2,r2,-1
100237e4:	103ffe1e 	bne	r2,zero,100237e0 <alt_busy_sleep+0xdc>
100237e8:	00000b06 	br	10023818 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
100237ec:	e0fffe17 	ldw	r3,-8(fp)
100237f0:	008003f4 	movhi	r2,15
100237f4:	10909004 	addi	r2,r2,16960
100237f8:	1887383a 	mul	r3,r3,r2
100237fc:	00817db4 	movhi	r2,1526
10023800:	10b84004 	addi	r2,r2,-7936
10023804:	10c7203a 	divu	r3,r2,r3
10023808:	e0bffc17 	ldw	r2,-16(fp)
1002380c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
10023810:	10bfffc4 	addi	r2,r2,-1
10023814:	00bffe16 	blt	zero,r2,10023810 <alt_busy_sleep+0x10c>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10023818:	0005883a 	mov	r2,zero
}
1002381c:	e037883a 	mov	sp,fp
10023820:	df000017 	ldw	fp,0(sp)
10023824:	dec00104 	addi	sp,sp,4
10023828:	f800283a 	ret

1002382c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1002382c:	defffe04 	addi	sp,sp,-8
10023830:	df000115 	stw	fp,4(sp)
10023834:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10023838:	e03fff15 	stw	zero,-4(fp)
1002383c:	00000506 	br	10023854 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
10023840:	e0bfff17 	ldw	r2,-4(fp)
10023844:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
10023848:	e0bfff17 	ldw	r2,-4(fp)
1002384c:	10800804 	addi	r2,r2,32
10023850:	e0bfff15 	stw	r2,-4(fp)
10023854:	e0bfff17 	ldw	r2,-4(fp)
10023858:	10820030 	cmpltui	r2,r2,2048
1002385c:	103ff81e 	bne	r2,zero,10023840 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10023860:	0001883a 	nop
10023864:	e037883a 	mov	sp,fp
10023868:	df000017 	ldw	fp,0(sp)
1002386c:	dec00104 	addi	sp,sp,4
10023870:	f800283a 	ret

10023874 <alt_get_errno>:
{
10023874:	defffe04 	addi	sp,sp,-8
10023878:	dfc00115 	stw	ra,4(sp)
1002387c:	df000015 	stw	fp,0(sp)
10023880:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10023884:	d0a01917 	ldw	r2,-32668(gp)
10023888:	10000326 	beq	r2,zero,10023898 <alt_get_errno+0x24>
1002388c:	d0a01917 	ldw	r2,-32668(gp)
10023890:	103ee83a 	callr	r2
10023894:	00000106 	br	1002389c <alt_get_errno+0x28>
10023898:	d0a96204 	addi	r2,gp,-23160
}
1002389c:	e037883a 	mov	sp,fp
100238a0:	dfc00117 	ldw	ra,4(sp)
100238a4:	df000017 	ldw	fp,0(sp)
100238a8:	dec00204 	addi	sp,sp,8
100238ac:	f800283a 	ret

100238b0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
100238b0:	defffa04 	addi	sp,sp,-24
100238b4:	dfc00515 	stw	ra,20(sp)
100238b8:	df000415 	stw	fp,16(sp)
100238bc:	df000404 	addi	fp,sp,16
100238c0:	e13ffd15 	stw	r4,-12(fp)
100238c4:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
100238c8:	e0bffd17 	ldw	r2,-12(fp)
100238cc:	10000326 	beq	r2,zero,100238dc <alt_dev_llist_insert+0x2c>
100238d0:	e0bffd17 	ldw	r2,-12(fp)
100238d4:	10800217 	ldw	r2,8(r2)
100238d8:	1000061e 	bne	r2,zero,100238f4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
100238dc:	00238740 	call	10023874 <alt_get_errno>
100238e0:	1007883a 	mov	r3,r2
100238e4:	00800584 	movi	r2,22
100238e8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
100238ec:	00bffa84 	movi	r2,-22
100238f0:	00001306 	br	10023940 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
100238f4:	e0bffd17 	ldw	r2,-12(fp)
100238f8:	e0fffc17 	ldw	r3,-16(fp)
100238fc:	e0ffff15 	stw	r3,-4(fp)
10023900:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
10023904:	e0bffe17 	ldw	r2,-8(fp)
10023908:	e0ffff17 	ldw	r3,-4(fp)
1002390c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10023910:	e0bfff17 	ldw	r2,-4(fp)
10023914:	10c00017 	ldw	r3,0(r2)
10023918:	e0bffe17 	ldw	r2,-8(fp)
1002391c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
10023920:	e0bfff17 	ldw	r2,-4(fp)
10023924:	10800017 	ldw	r2,0(r2)
10023928:	e0fffe17 	ldw	r3,-8(fp)
1002392c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10023930:	e0bfff17 	ldw	r2,-4(fp)
10023934:	e0fffe17 	ldw	r3,-8(fp)
10023938:	10c00015 	stw	r3,0(r2)

  return 0;  
1002393c:	0005883a 	mov	r2,zero
}
10023940:	e037883a 	mov	sp,fp
10023944:	dfc00117 	ldw	ra,4(sp)
10023948:	df000017 	ldw	fp,0(sp)
1002394c:	dec00204 	addi	sp,sp,8
10023950:	f800283a 	ret

10023954 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
10023954:	defffd04 	addi	sp,sp,-12
10023958:	dfc00215 	stw	ra,8(sp)
1002395c:	df000115 	stw	fp,4(sp)
10023960:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10023964:	008400b4 	movhi	r2,4098
10023968:	1091b204 	addi	r2,r2,18120
1002396c:	e0bfff15 	stw	r2,-4(fp)
10023970:	00000606 	br	1002398c <_do_ctors+0x38>
        (*ctor) (); 
10023974:	e0bfff17 	ldw	r2,-4(fp)
10023978:	10800017 	ldw	r2,0(r2)
1002397c:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10023980:	e0bfff17 	ldw	r2,-4(fp)
10023984:	10bfff04 	addi	r2,r2,-4
10023988:	e0bfff15 	stw	r2,-4(fp)
1002398c:	e0ffff17 	ldw	r3,-4(fp)
10023990:	008400b4 	movhi	r2,4098
10023994:	1091b084 	addi	r2,r2,18114
10023998:	18bff62e 	bgeu	r3,r2,10023974 <_do_ctors+0x20>
}
1002399c:	0001883a 	nop
100239a0:	e037883a 	mov	sp,fp
100239a4:	dfc00117 	ldw	ra,4(sp)
100239a8:	df000017 	ldw	fp,0(sp)
100239ac:	dec00204 	addi	sp,sp,8
100239b0:	f800283a 	ret

100239b4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
100239b4:	defffd04 	addi	sp,sp,-12
100239b8:	dfc00215 	stw	ra,8(sp)
100239bc:	df000115 	stw	fp,4(sp)
100239c0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100239c4:	008400b4 	movhi	r2,4098
100239c8:	1091b304 	addi	r2,r2,18124
100239cc:	e0bfff15 	stw	r2,-4(fp)
100239d0:	00000606 	br	100239ec <_do_dtors+0x38>
        (*dtor) (); 
100239d4:	e0bfff17 	ldw	r2,-4(fp)
100239d8:	10800017 	ldw	r2,0(r2)
100239dc:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100239e0:	e0bfff17 	ldw	r2,-4(fp)
100239e4:	10bfff04 	addi	r2,r2,-4
100239e8:	e0bfff15 	stw	r2,-4(fp)
100239ec:	e0ffff17 	ldw	r3,-4(fp)
100239f0:	008400b4 	movhi	r2,4098
100239f4:	1091b304 	addi	r2,r2,18124
100239f8:	18bff62e 	bgeu	r3,r2,100239d4 <_do_dtors+0x20>
}
100239fc:	0001883a 	nop
10023a00:	e037883a 	mov	sp,fp
10023a04:	dfc00117 	ldw	ra,4(sp)
10023a08:	df000017 	ldw	fp,0(sp)
10023a0c:	dec00204 	addi	sp,sp,8
10023a10:	f800283a 	ret

10023a14 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
10023a14:	defffa04 	addi	sp,sp,-24
10023a18:	dfc00515 	stw	ra,20(sp)
10023a1c:	df000415 	stw	fp,16(sp)
10023a20:	df000404 	addi	fp,sp,16
10023a24:	e13ffd15 	stw	r4,-12(fp)
10023a28:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
10023a2c:	e0bffc17 	ldw	r2,-16(fp)
10023a30:	10800017 	ldw	r2,0(r2)
10023a34:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
10023a38:	e13ffd17 	ldw	r4,-12(fp)
10023a3c:	00164b40 	call	100164b4 <strlen>
10023a40:	10800044 	addi	r2,r2,1
10023a44:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10023a48:	00000d06 	br	10023a80 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
10023a4c:	e0bfff17 	ldw	r2,-4(fp)
10023a50:	10800217 	ldw	r2,8(r2)
10023a54:	e0fffe17 	ldw	r3,-8(fp)
10023a58:	180d883a 	mov	r6,r3
10023a5c:	e17ffd17 	ldw	r5,-12(fp)
10023a60:	1009883a 	mov	r4,r2
10023a64:	001576c0 	call	1001576c <memcmp>
10023a68:	1000021e 	bne	r2,zero,10023a74 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
10023a6c:	e0bfff17 	ldw	r2,-4(fp)
10023a70:	00000706 	br	10023a90 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
10023a74:	e0bfff17 	ldw	r2,-4(fp)
10023a78:	10800017 	ldw	r2,0(r2)
10023a7c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
10023a80:	e0ffff17 	ldw	r3,-4(fp)
10023a84:	e0bffc17 	ldw	r2,-16(fp)
10023a88:	18bff01e 	bne	r3,r2,10023a4c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
10023a8c:	0005883a 	mov	r2,zero
}
10023a90:	e037883a 	mov	sp,fp
10023a94:	dfc00117 	ldw	ra,4(sp)
10023a98:	df000017 	ldw	fp,0(sp)
10023a9c:	dec00204 	addi	sp,sp,8
10023aa0:	f800283a 	ret

10023aa4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
10023aa4:	defffb04 	addi	sp,sp,-20
10023aa8:	dfc00415 	stw	ra,16(sp)
10023aac:	df000315 	stw	fp,12(sp)
10023ab0:	df000304 	addi	fp,sp,12
10023ab4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
10023ab8:	d0a01417 	ldw	r2,-32688(gp)
10023abc:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10023ac0:	00003106 	br	10023b88 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
10023ac4:	e0bfff17 	ldw	r2,-4(fp)
10023ac8:	10800217 	ldw	r2,8(r2)
10023acc:	1009883a 	mov	r4,r2
10023ad0:	00164b40 	call	100164b4 <strlen>
10023ad4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10023ad8:	e0bfff17 	ldw	r2,-4(fp)
10023adc:	10c00217 	ldw	r3,8(r2)
10023ae0:	e0bffe17 	ldw	r2,-8(fp)
10023ae4:	10bfffc4 	addi	r2,r2,-1
10023ae8:	1885883a 	add	r2,r3,r2
10023aec:	10800003 	ldbu	r2,0(r2)
10023af0:	10803fcc 	andi	r2,r2,255
10023af4:	1080201c 	xori	r2,r2,128
10023af8:	10bfe004 	addi	r2,r2,-128
10023afc:	10800bd8 	cmpnei	r2,r2,47
10023b00:	1000031e 	bne	r2,zero,10023b10 <alt_find_file+0x6c>
    {
      len -= 1;
10023b04:	e0bffe17 	ldw	r2,-8(fp)
10023b08:	10bfffc4 	addi	r2,r2,-1
10023b0c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10023b10:	e0bffe17 	ldw	r2,-8(fp)
10023b14:	e0fffd17 	ldw	r3,-12(fp)
10023b18:	1885883a 	add	r2,r3,r2
10023b1c:	10800003 	ldbu	r2,0(r2)
10023b20:	10803fcc 	andi	r2,r2,255
10023b24:	1080201c 	xori	r2,r2,128
10023b28:	10bfe004 	addi	r2,r2,-128
10023b2c:	10800be0 	cmpeqi	r2,r2,47
10023b30:	1000081e 	bne	r2,zero,10023b54 <alt_find_file+0xb0>
10023b34:	e0bffe17 	ldw	r2,-8(fp)
10023b38:	e0fffd17 	ldw	r3,-12(fp)
10023b3c:	1885883a 	add	r2,r3,r2
10023b40:	10800003 	ldbu	r2,0(r2)
10023b44:	10803fcc 	andi	r2,r2,255
10023b48:	1080201c 	xori	r2,r2,128
10023b4c:	10bfe004 	addi	r2,r2,-128
10023b50:	10000a1e 	bne	r2,zero,10023b7c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10023b54:	e0bfff17 	ldw	r2,-4(fp)
10023b58:	10800217 	ldw	r2,8(r2)
10023b5c:	e0fffe17 	ldw	r3,-8(fp)
10023b60:	180d883a 	mov	r6,r3
10023b64:	e17ffd17 	ldw	r5,-12(fp)
10023b68:	1009883a 	mov	r4,r2
10023b6c:	001576c0 	call	1001576c <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
10023b70:	1000021e 	bne	r2,zero,10023b7c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
10023b74:	e0bfff17 	ldw	r2,-4(fp)
10023b78:	00000706 	br	10023b98 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10023b7c:	e0bfff17 	ldw	r2,-4(fp)
10023b80:	10800017 	ldw	r2,0(r2)
10023b84:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
10023b88:	e0ffff17 	ldw	r3,-4(fp)
10023b8c:	d0a01404 	addi	r2,gp,-32688
10023b90:	18bfcc1e 	bne	r3,r2,10023ac4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
10023b94:	0005883a 	mov	r2,zero
}
10023b98:	e037883a 	mov	sp,fp
10023b9c:	dfc00117 	ldw	ra,4(sp)
10023ba0:	df000017 	ldw	fp,0(sp)
10023ba4:	dec00204 	addi	sp,sp,8
10023ba8:	f800283a 	ret

10023bac <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10023bac:	defffc04 	addi	sp,sp,-16
10023bb0:	df000315 	stw	fp,12(sp)
10023bb4:	df000304 	addi	fp,sp,12
10023bb8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
10023bbc:	00bffa04 	movi	r2,-24
10023bc0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10023bc4:	e03fff15 	stw	zero,-4(fp)
10023bc8:	00001706 	br	10023c28 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
10023bcc:	e0bfff17 	ldw	r2,-4(fp)
10023bd0:	10c00324 	muli	r3,r2,12
10023bd4:	008400b4 	movhi	r2,4098
10023bd8:	1885883a 	add	r2,r3,r2
10023bdc:	109cd017 	ldw	r2,29504(r2)
10023be0:	10000e1e 	bne	r2,zero,10023c1c <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
10023be4:	e0bfff17 	ldw	r2,-4(fp)
10023be8:	11000324 	muli	r4,r2,12
10023bec:	e0fffd17 	ldw	r3,-12(fp)
10023bf0:	008400b4 	movhi	r2,4098
10023bf4:	2085883a 	add	r2,r4,r2
10023bf8:	10dcd015 	stw	r3,29504(r2)
      if (i > alt_max_fd)
10023bfc:	d0e01817 	ldw	r3,-32672(gp)
10023c00:	e0bfff17 	ldw	r2,-4(fp)
10023c04:	1880020e 	bge	r3,r2,10023c10 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
10023c08:	e0bfff17 	ldw	r2,-4(fp)
10023c0c:	d0a01815 	stw	r2,-32672(gp)
      }
      rc = i;
10023c10:	e0bfff17 	ldw	r2,-4(fp)
10023c14:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
10023c18:	00000706 	br	10023c38 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
10023c1c:	e0bfff17 	ldw	r2,-4(fp)
10023c20:	10800044 	addi	r2,r2,1
10023c24:	e0bfff15 	stw	r2,-4(fp)
10023c28:	e0bfff17 	ldw	r2,-4(fp)
10023c2c:	10800810 	cmplti	r2,r2,32
10023c30:	103fe61e 	bne	r2,zero,10023bcc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
10023c34:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10023c38:	e0bffe17 	ldw	r2,-8(fp)
}
10023c3c:	e037883a 	mov	sp,fp
10023c40:	df000017 	ldw	fp,0(sp)
10023c44:	dec00104 	addi	sp,sp,4
10023c48:	f800283a 	ret

10023c4c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
10023c4c:	defffe04 	addi	sp,sp,-8
10023c50:	dfc00115 	stw	ra,4(sp)
10023c54:	df000015 	stw	fp,0(sp)
10023c58:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
10023c5c:	01440004 	movi	r5,4096
10023c60:	0009883a 	mov	r4,zero
10023c64:	00242080 	call	10024208 <alt_icache_flush>
#endif
}
10023c68:	0001883a 	nop
10023c6c:	e037883a 	mov	sp,fp
10023c70:	dfc00117 	ldw	ra,4(sp)
10023c74:	df000017 	ldw	fp,0(sp)
10023c78:	dec00204 	addi	sp,sp,8
10023c7c:	f800283a 	ret

10023c80 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10023c80:	defff904 	addi	sp,sp,-28
10023c84:	dfc00615 	stw	ra,24(sp)
10023c88:	df000515 	stw	fp,20(sp)
10023c8c:	df000504 	addi	fp,sp,20
10023c90:	e13fff15 	stw	r4,-4(fp)
10023c94:	e17ffe15 	stw	r5,-8(fp)
10023c98:	e1bffd15 	stw	r6,-12(fp)
10023c9c:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
10023ca0:	e0800217 	ldw	r2,8(fp)
10023ca4:	d8800015 	stw	r2,0(sp)
10023ca8:	e1fffc17 	ldw	r7,-16(fp)
10023cac:	e1bffd17 	ldw	r6,-12(fp)
10023cb0:	e17ffe17 	ldw	r5,-8(fp)
10023cb4:	e13fff17 	ldw	r4,-4(fp)
10023cb8:	0023e300 	call	10023e30 <alt_iic_isr_register>
}  
10023cbc:	e037883a 	mov	sp,fp
10023cc0:	dfc00117 	ldw	ra,4(sp)
10023cc4:	df000017 	ldw	fp,0(sp)
10023cc8:	dec00204 	addi	sp,sp,8
10023ccc:	f800283a 	ret

10023cd0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
10023cd0:	defff904 	addi	sp,sp,-28
10023cd4:	df000615 	stw	fp,24(sp)
10023cd8:	df000604 	addi	fp,sp,24
10023cdc:	e13ffb15 	stw	r4,-20(fp)
10023ce0:	e17ffa15 	stw	r5,-24(fp)
10023ce4:	e0bffa17 	ldw	r2,-24(fp)
10023ce8:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
10023cec:	0005303a 	rdctl	r2,status
10023cf0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023cf4:	e0fffe17 	ldw	r3,-8(fp)
10023cf8:	00bfff84 	movi	r2,-2
10023cfc:	1884703a 	and	r2,r3,r2
10023d00:	1001703a 	wrctl	status,r2
  return context;
10023d04:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10023d08:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
10023d0c:	00c00044 	movi	r3,1
10023d10:	e0bfff17 	ldw	r2,-4(fp)
10023d14:	1884983a 	sll	r2,r3,r2
10023d18:	1007883a 	mov	r3,r2
10023d1c:	d0a96a17 	ldw	r2,-23128(gp)
10023d20:	1884b03a 	or	r2,r3,r2
10023d24:	d0a96a15 	stw	r2,-23128(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10023d28:	d0a96a17 	ldw	r2,-23128(gp)
10023d2c:	100170fa 	wrctl	ienable,r2
10023d30:	e0bffd17 	ldw	r2,-12(fp)
10023d34:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10023d38:	e0bffc17 	ldw	r2,-16(fp)
10023d3c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10023d40:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
10023d44:	0001883a 	nop
}
10023d48:	e037883a 	mov	sp,fp
10023d4c:	df000017 	ldw	fp,0(sp)
10023d50:	dec00104 	addi	sp,sp,4
10023d54:	f800283a 	ret

10023d58 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
10023d58:	defff904 	addi	sp,sp,-28
10023d5c:	df000615 	stw	fp,24(sp)
10023d60:	df000604 	addi	fp,sp,24
10023d64:	e13ffb15 	stw	r4,-20(fp)
10023d68:	e17ffa15 	stw	r5,-24(fp)
10023d6c:	e0bffa17 	ldw	r2,-24(fp)
10023d70:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
10023d74:	0005303a 	rdctl	r2,status
10023d78:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023d7c:	e0fffe17 	ldw	r3,-8(fp)
10023d80:	00bfff84 	movi	r2,-2
10023d84:	1884703a 	and	r2,r3,r2
10023d88:	1001703a 	wrctl	status,r2
  return context;
10023d8c:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
10023d90:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
10023d94:	00c00044 	movi	r3,1
10023d98:	e0bfff17 	ldw	r2,-4(fp)
10023d9c:	1884983a 	sll	r2,r3,r2
10023da0:	0084303a 	nor	r2,zero,r2
10023da4:	1007883a 	mov	r3,r2
10023da8:	d0a96a17 	ldw	r2,-23128(gp)
10023dac:	1884703a 	and	r2,r3,r2
10023db0:	d0a96a15 	stw	r2,-23128(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10023db4:	d0a96a17 	ldw	r2,-23128(gp)
10023db8:	100170fa 	wrctl	ienable,r2
10023dbc:	e0bffd17 	ldw	r2,-12(fp)
10023dc0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
10023dc4:	e0bffc17 	ldw	r2,-16(fp)
10023dc8:	1001703a 	wrctl	status,r2
  return 0;
10023dcc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
10023dd0:	0001883a 	nop
}
10023dd4:	e037883a 	mov	sp,fp
10023dd8:	df000017 	ldw	fp,0(sp)
10023ddc:	dec00104 	addi	sp,sp,4
10023de0:	f800283a 	ret

10023de4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
10023de4:	defffc04 	addi	sp,sp,-16
10023de8:	df000315 	stw	fp,12(sp)
10023dec:	df000304 	addi	fp,sp,12
10023df0:	e13ffe15 	stw	r4,-8(fp)
10023df4:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10023df8:	000530fa 	rdctl	r2,ienable
10023dfc:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
10023e00:	00c00044 	movi	r3,1
10023e04:	e0bffd17 	ldw	r2,-12(fp)
10023e08:	1884983a 	sll	r2,r3,r2
10023e0c:	1007883a 	mov	r3,r2
10023e10:	e0bfff17 	ldw	r2,-4(fp)
10023e14:	1884703a 	and	r2,r3,r2
10023e18:	1004c03a 	cmpne	r2,r2,zero
10023e1c:	10803fcc 	andi	r2,r2,255
}
10023e20:	e037883a 	mov	sp,fp
10023e24:	df000017 	ldw	fp,0(sp)
10023e28:	dec00104 	addi	sp,sp,4
10023e2c:	f800283a 	ret

10023e30 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10023e30:	defff504 	addi	sp,sp,-44
10023e34:	dfc00a15 	stw	ra,40(sp)
10023e38:	df000915 	stw	fp,36(sp)
10023e3c:	df000904 	addi	fp,sp,36
10023e40:	e13ffa15 	stw	r4,-24(fp)
10023e44:	e17ff915 	stw	r5,-28(fp)
10023e48:	e1bff815 	stw	r6,-32(fp)
10023e4c:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
10023e50:	00bffa84 	movi	r2,-22
10023e54:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
10023e58:	e0bff917 	ldw	r2,-28(fp)
10023e5c:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
10023e60:	e0bffe17 	ldw	r2,-8(fp)
10023e64:	10800808 	cmpgei	r2,r2,32
10023e68:	1000241e 	bne	r2,zero,10023efc <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
10023e6c:	0005303a 	rdctl	r2,status
10023e70:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10023e74:	e0fffc17 	ldw	r3,-16(fp)
10023e78:	00bfff84 	movi	r2,-2
10023e7c:	1884703a 	and	r2,r3,r2
10023e80:	1001703a 	wrctl	status,r2
  return context;
10023e84:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
10023e88:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
10023e8c:	e0bffe17 	ldw	r2,-8(fp)
10023e90:	100890fa 	slli	r4,r2,3
10023e94:	e0fff817 	ldw	r3,-32(fp)
10023e98:	008400f4 	movhi	r2,4099
10023e9c:	2085883a 	add	r2,r4,r2
10023ea0:	10eace15 	stw	r3,-21704(r2)
    alt_irq[id].context = isr_context;
10023ea4:	e0bffe17 	ldw	r2,-8(fp)
10023ea8:	100890fa 	slli	r4,r2,3
10023eac:	e0fff717 	ldw	r3,-36(fp)
10023eb0:	008400f4 	movhi	r2,4099
10023eb4:	2085883a 	add	r2,r4,r2
10023eb8:	10eacf15 	stw	r3,-21700(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
10023ebc:	e0bff817 	ldw	r2,-32(fp)
10023ec0:	10000526 	beq	r2,zero,10023ed8 <alt_iic_isr_register+0xa8>
10023ec4:	e0bffe17 	ldw	r2,-8(fp)
10023ec8:	100b883a 	mov	r5,r2
10023ecc:	e13ffa17 	ldw	r4,-24(fp)
10023ed0:	0023cd00 	call	10023cd0 <alt_ic_irq_enable>
10023ed4:	00000406 	br	10023ee8 <alt_iic_isr_register+0xb8>
10023ed8:	e0bffe17 	ldw	r2,-8(fp)
10023edc:	100b883a 	mov	r5,r2
10023ee0:	e13ffa17 	ldw	r4,-24(fp)
10023ee4:	0023d580 	call	10023d58 <alt_ic_irq_disable>
10023ee8:	e0bfff15 	stw	r2,-4(fp)
10023eec:	e0bffd17 	ldw	r2,-12(fp)
10023ef0:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
10023ef4:	e0bffb17 	ldw	r2,-20(fp)
10023ef8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
10023efc:	e0bfff17 	ldw	r2,-4(fp)
}
10023f00:	e037883a 	mov	sp,fp
10023f04:	dfc00117 	ldw	ra,4(sp)
10023f08:	df000017 	ldw	fp,0(sp)
10023f0c:	dec00204 	addi	sp,sp,8
10023f10:	f800283a 	ret

10023f14 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
10023f14:	defff904 	addi	sp,sp,-28
10023f18:	dfc00615 	stw	ra,24(sp)
10023f1c:	df000515 	stw	fp,20(sp)
10023f20:	df000504 	addi	fp,sp,20
10023f24:	e13ffe15 	stw	r4,-8(fp)
10023f28:	e17ffd15 	stw	r5,-12(fp)
10023f2c:	e1bffc15 	stw	r6,-16(fp)
10023f30:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
10023f34:	e1bffb17 	ldw	r6,-20(fp)
10023f38:	e17ffc17 	ldw	r5,-16(fp)
10023f3c:	e13ffd17 	ldw	r4,-12(fp)
10023f40:	00224bc0 	call	100224bc <open>
10023f44:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
10023f48:	e0bfff17 	ldw	r2,-4(fp)
10023f4c:	10001716 	blt	r2,zero,10023fac <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
10023f50:	e0bfff17 	ldw	r2,-4(fp)
10023f54:	10c00324 	muli	r3,r2,12
10023f58:	008400b4 	movhi	r2,4098
10023f5c:	1885883a 	add	r2,r3,r2
10023f60:	10dcd017 	ldw	r3,29504(r2)
10023f64:	e0bffe17 	ldw	r2,-8(fp)
10023f68:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
10023f6c:	e0bfff17 	ldw	r2,-4(fp)
10023f70:	10c00324 	muli	r3,r2,12
10023f74:	008400b4 	movhi	r2,4098
10023f78:	1885883a 	add	r2,r3,r2
10023f7c:	10dcd117 	ldw	r3,29508(r2)
10023f80:	e0bffe17 	ldw	r2,-8(fp)
10023f84:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
10023f88:	e0bfff17 	ldw	r2,-4(fp)
10023f8c:	10c00324 	muli	r3,r2,12
10023f90:	008400b4 	movhi	r2,4098
10023f94:	1885883a 	add	r2,r3,r2
10023f98:	10dcd217 	ldw	r3,29512(r2)
10023f9c:	e0bffe17 	ldw	r2,-8(fp)
10023fa0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
10023fa4:	e13fff17 	ldw	r4,-4(fp)
10023fa8:	00227480 	call	10022748 <alt_release_fd>
  }
} 
10023fac:	0001883a 	nop
10023fb0:	e037883a 	mov	sp,fp
10023fb4:	dfc00117 	ldw	ra,4(sp)
10023fb8:	df000017 	ldw	fp,0(sp)
10023fbc:	dec00204 	addi	sp,sp,8
10023fc0:	f800283a 	ret

10023fc4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
10023fc4:	defffb04 	addi	sp,sp,-20
10023fc8:	dfc00415 	stw	ra,16(sp)
10023fcc:	df000315 	stw	fp,12(sp)
10023fd0:	df000304 	addi	fp,sp,12
10023fd4:	e13fff15 	stw	r4,-4(fp)
10023fd8:	e17ffe15 	stw	r5,-8(fp)
10023fdc:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
10023fe0:	01c07fc4 	movi	r7,511
10023fe4:	01800044 	movi	r6,1
10023fe8:	e17fff17 	ldw	r5,-4(fp)
10023fec:	010400b4 	movhi	r4,4098
10023ff0:	211cd304 	addi	r4,r4,29516
10023ff4:	0023f140 	call	10023f14 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
10023ff8:	01c07fc4 	movi	r7,511
10023ffc:	000d883a 	mov	r6,zero
10024000:	e17ffe17 	ldw	r5,-8(fp)
10024004:	010400b4 	movhi	r4,4098
10024008:	211cd004 	addi	r4,r4,29504
1002400c:	0023f140 	call	10023f14 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
10024010:	01c07fc4 	movi	r7,511
10024014:	01800044 	movi	r6,1
10024018:	e17ffd17 	ldw	r5,-12(fp)
1002401c:	010400b4 	movhi	r4,4098
10024020:	211cd604 	addi	r4,r4,29528
10024024:	0023f140 	call	10023f14 <alt_open_fd>
}  
10024028:	0001883a 	nop
1002402c:	e037883a 	mov	sp,fp
10024030:	dfc00117 	ldw	ra,4(sp)
10024034:	df000017 	ldw	fp,0(sp)
10024038:	dec00204 	addi	sp,sp,8
1002403c:	f800283a 	ret

10024040 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10024040:	defffa04 	addi	sp,sp,-24
10024044:	df000515 	stw	fp,20(sp)
10024048:	df000504 	addi	fp,sp,20
1002404c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
10024050:	0005303a 	rdctl	r2,status
10024054:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10024058:	e0fffc17 	ldw	r3,-16(fp)
1002405c:	00bfff84 	movi	r2,-2
10024060:	1884703a 	and	r2,r3,r2
10024064:	1001703a 	wrctl	status,r2
  return context;
10024068:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1002406c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
10024070:	e0bffb17 	ldw	r2,-20(fp)
10024074:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
10024078:	e0bffd17 	ldw	r2,-12(fp)
1002407c:	10800017 	ldw	r2,0(r2)
10024080:	e0fffd17 	ldw	r3,-12(fp)
10024084:	18c00117 	ldw	r3,4(r3)
10024088:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1002408c:	e0bffd17 	ldw	r2,-12(fp)
10024090:	10800117 	ldw	r2,4(r2)
10024094:	e0fffd17 	ldw	r3,-12(fp)
10024098:	18c00017 	ldw	r3,0(r3)
1002409c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
100240a0:	e0bffd17 	ldw	r2,-12(fp)
100240a4:	e0fffd17 	ldw	r3,-12(fp)
100240a8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
100240ac:	e0bffd17 	ldw	r2,-12(fp)
100240b0:	e0fffd17 	ldw	r3,-12(fp)
100240b4:	10c00015 	stw	r3,0(r2)
100240b8:	e0bfff17 	ldw	r2,-4(fp)
100240bc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
100240c0:	e0bffe17 	ldw	r2,-8(fp)
100240c4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
100240c8:	0001883a 	nop
100240cc:	e037883a 	mov	sp,fp
100240d0:	df000017 	ldw	fp,0(sp)
100240d4:	dec00104 	addi	sp,sp,4
100240d8:	f800283a 	ret

100240dc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
100240dc:	defffb04 	addi	sp,sp,-20
100240e0:	dfc00415 	stw	ra,16(sp)
100240e4:	df000315 	stw	fp,12(sp)
100240e8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
100240ec:	d0a01c17 	ldw	r2,-32656(gp)
100240f0:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
100240f4:	d0a96c17 	ldw	r2,-23120(gp)
100240f8:	10800044 	addi	r2,r2,1
100240fc:	d0a96c15 	stw	r2,-23120(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10024100:	00002e06 	br	100241bc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
10024104:	e0bfff17 	ldw	r2,-4(fp)
10024108:	10800017 	ldw	r2,0(r2)
1002410c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10024110:	e0bfff17 	ldw	r2,-4(fp)
10024114:	10800403 	ldbu	r2,16(r2)
10024118:	10803fcc 	andi	r2,r2,255
1002411c:	10000426 	beq	r2,zero,10024130 <alt_tick+0x54>
10024120:	d0a96c17 	ldw	r2,-23120(gp)
10024124:	1000021e 	bne	r2,zero,10024130 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10024128:	e0bfff17 	ldw	r2,-4(fp)
1002412c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10024130:	e0bfff17 	ldw	r2,-4(fp)
10024134:	10800217 	ldw	r2,8(r2)
10024138:	d0e96c17 	ldw	r3,-23120(gp)
1002413c:	18801d36 	bltu	r3,r2,100241b4 <alt_tick+0xd8>
10024140:	e0bfff17 	ldw	r2,-4(fp)
10024144:	10800403 	ldbu	r2,16(r2)
10024148:	10803fcc 	andi	r2,r2,255
1002414c:	1000191e 	bne	r2,zero,100241b4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
10024150:	e0bfff17 	ldw	r2,-4(fp)
10024154:	10800317 	ldw	r2,12(r2)
10024158:	e0ffff17 	ldw	r3,-4(fp)
1002415c:	18c00517 	ldw	r3,20(r3)
10024160:	1809883a 	mov	r4,r3
10024164:	103ee83a 	callr	r2
10024168:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1002416c:	e0bffd17 	ldw	r2,-12(fp)
10024170:	1000031e 	bne	r2,zero,10024180 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
10024174:	e13fff17 	ldw	r4,-4(fp)
10024178:	00240400 	call	10024040 <alt_alarm_stop>
1002417c:	00000d06 	br	100241b4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
10024180:	e0bfff17 	ldw	r2,-4(fp)
10024184:	10c00217 	ldw	r3,8(r2)
10024188:	e0bffd17 	ldw	r2,-12(fp)
1002418c:	1887883a 	add	r3,r3,r2
10024190:	e0bfff17 	ldw	r2,-4(fp)
10024194:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
10024198:	e0bfff17 	ldw	r2,-4(fp)
1002419c:	10c00217 	ldw	r3,8(r2)
100241a0:	d0a96c17 	ldw	r2,-23120(gp)
100241a4:	1880032e 	bgeu	r3,r2,100241b4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
100241a8:	e0bfff17 	ldw	r2,-4(fp)
100241ac:	00c00044 	movi	r3,1
100241b0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
100241b4:	e0bffe17 	ldw	r2,-8(fp)
100241b8:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
100241bc:	e0ffff17 	ldw	r3,-4(fp)
100241c0:	d0a01c04 	addi	r2,gp,-32656
100241c4:	18bfcf1e 	bne	r3,r2,10024104 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
100241c8:	0001883a 	nop
}
100241cc:	0001883a 	nop
100241d0:	e037883a 	mov	sp,fp
100241d4:	dfc00117 	ldw	ra,4(sp)
100241d8:	df000017 	ldw	fp,0(sp)
100241dc:	dec00204 	addi	sp,sp,8
100241e0:	f800283a 	ret

100241e4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
100241e4:	deffff04 	addi	sp,sp,-4
100241e8:	df000015 	stw	fp,0(sp)
100241ec:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
100241f0:	000170fa 	wrctl	ienable,zero
}
100241f4:	0001883a 	nop
100241f8:	e037883a 	mov	sp,fp
100241fc:	df000017 	ldw	fp,0(sp)
10024200:	dec00104 	addi	sp,sp,4
10024204:	f800283a 	ret

10024208 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
10024208:	defffb04 	addi	sp,sp,-20
1002420c:	df000415 	stw	fp,16(sp)
10024210:	df000404 	addi	fp,sp,16
10024214:	e13ffd15 	stw	r4,-12(fp)
10024218:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1002421c:	e0bffc17 	ldw	r2,-16(fp)
10024220:	10840070 	cmpltui	r2,r2,4097
10024224:	1000021e 	bne	r2,zero,10024230 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
10024228:	00840004 	movi	r2,4096
1002422c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
10024230:	e0fffd17 	ldw	r3,-12(fp)
10024234:	e0bffc17 	ldw	r2,-16(fp)
10024238:	1885883a 	add	r2,r3,r2
1002423c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
10024240:	e0bffd17 	ldw	r2,-12(fp)
10024244:	e0bfff15 	stw	r2,-4(fp)
10024248:	00000506 	br	10024260 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1002424c:	e0bfff17 	ldw	r2,-4(fp)
10024250:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
10024254:	e0bfff17 	ldw	r2,-4(fp)
10024258:	10800804 	addi	r2,r2,32
1002425c:	e0bfff15 	stw	r2,-4(fp)
10024260:	e0ffff17 	ldw	r3,-4(fp)
10024264:	e0bffe17 	ldw	r2,-8(fp)
10024268:	18bff836 	bltu	r3,r2,1002424c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1002426c:	e0bffd17 	ldw	r2,-12(fp)
10024270:	108007cc 	andi	r2,r2,31
10024274:	10000226 	beq	r2,zero,10024280 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
10024278:	e0bfff17 	ldw	r2,-4(fp)
1002427c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
10024280:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
10024284:	0001883a 	nop
10024288:	e037883a 	mov	sp,fp
1002428c:	df000017 	ldw	fp,0(sp)
10024290:	dec00104 	addi	sp,sp,4
10024294:	f800283a 	ret

10024298 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10024298:	defffe04 	addi	sp,sp,-8
1002429c:	df000115 	stw	fp,4(sp)
100242a0:	df000104 	addi	fp,sp,4
100242a4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
100242a8:	e0bfff17 	ldw	r2,-4(fp)
100242ac:	10bffe84 	addi	r2,r2,-6
100242b0:	10c00428 	cmpgeui	r3,r2,16
100242b4:	1800191e 	bne	r3,zero,1002431c <alt_exception_cause_generated_bad_addr+0x84>
100242b8:	100690ba 	slli	r3,r2,2
100242bc:	008400b4 	movhi	r2,4098
100242c0:	1885883a 	add	r2,r3,r2
100242c4:	1090b317 	ldw	r2,17100(r2)
100242c8:	1000683a 	jmp	r2
100242cc:	1002430c 	andi	zero,r2,2316
100242d0:	1002430c 	andi	zero,r2,2316
100242d4:	1002431c 	xori	zero,r2,2316
100242d8:	1002431c 	xori	zero,r2,2316
100242dc:	1002431c 	xori	zero,r2,2316
100242e0:	1002430c 	andi	zero,r2,2316
100242e4:	10024314 	ori	zero,r2,2316
100242e8:	1002431c 	xori	zero,r2,2316
100242ec:	1002430c 	andi	zero,r2,2316
100242f0:	1002430c 	andi	zero,r2,2316
100242f4:	1002431c 	xori	zero,r2,2316
100242f8:	1002430c 	andi	zero,r2,2316
100242fc:	10024314 	ori	zero,r2,2316
10024300:	1002431c 	xori	zero,r2,2316
10024304:	1002431c 	xori	zero,r2,2316
10024308:	1002430c 	andi	zero,r2,2316
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1002430c:	00800044 	movi	r2,1
10024310:	00000306 	br	10024320 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10024314:	0005883a 	mov	r2,zero
10024318:	00000106 	br	10024320 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
1002431c:	0005883a 	mov	r2,zero
  }
}
10024320:	e037883a 	mov	sp,fp
10024324:	df000017 	ldw	fp,0(sp)
10024328:	dec00104 	addi	sp,sp,4
1002432c:	f800283a 	ret

10024330 <atexit>:
10024330:	200b883a 	mov	r5,r4
10024334:	000f883a 	mov	r7,zero
10024338:	000d883a 	mov	r6,zero
1002433c:	0009883a 	mov	r4,zero
10024340:	00243781 	jmpi	10024378 <__register_exitproc>

10024344 <exit>:
10024344:	defffe04 	addi	sp,sp,-8
10024348:	000b883a 	mov	r5,zero
1002434c:	dc000015 	stw	r16,0(sp)
10024350:	dfc00115 	stw	ra,4(sp)
10024354:	2021883a 	mov	r16,r4
10024358:	00244080 	call	10024408 <__call_exitprocs>
1002435c:	008400f4 	movhi	r2,4099
10024360:	11215817 	ldw	r4,-31392(r2)
10024364:	20800f17 	ldw	r2,60(r4)
10024368:	10000126 	beq	r2,zero,10024370 <exit+0x2c>
1002436c:	103ee83a 	callr	r2
10024370:	8009883a 	mov	r4,r16
10024374:	0021d800 	call	10021d80 <_exit>

10024378 <__register_exitproc>:
10024378:	008400f4 	movhi	r2,4099
1002437c:	10e15817 	ldw	r3,-31392(r2)
10024380:	18805217 	ldw	r2,328(r3)
10024384:	10001726 	beq	r2,zero,100243e4 <__register_exitproc+0x6c>
10024388:	10c00117 	ldw	r3,4(r2)
1002438c:	1a000808 	cmpgei	r8,r3,32
10024390:	40001b1e 	bne	r8,zero,10024400 <__register_exitproc+0x88>
10024394:	20000b26 	beq	r4,zero,100243c4 <__register_exitproc+0x4c>
10024398:	181090ba 	slli	r8,r3,2
1002439c:	02400044 	movi	r9,1
100243a0:	48d2983a 	sll	r9,r9,r3
100243a4:	1211883a 	add	r8,r2,r8
100243a8:	41802215 	stw	r6,136(r8)
100243ac:	11806217 	ldw	r6,392(r2)
100243b0:	21000098 	cmpnei	r4,r4,2
100243b4:	324cb03a 	or	r6,r6,r9
100243b8:	11806215 	stw	r6,392(r2)
100243bc:	41c04215 	stw	r7,264(r8)
100243c0:	20000b26 	beq	r4,zero,100243f0 <__register_exitproc+0x78>
100243c4:	19000084 	addi	r4,r3,2
100243c8:	200890ba 	slli	r4,r4,2
100243cc:	18c00044 	addi	r3,r3,1
100243d0:	10c00115 	stw	r3,4(r2)
100243d4:	1105883a 	add	r2,r2,r4
100243d8:	11400015 	stw	r5,0(r2)
100243dc:	0005883a 	mov	r2,zero
100243e0:	f800283a 	ret
100243e4:	18805304 	addi	r2,r3,332
100243e8:	18805215 	stw	r2,328(r3)
100243ec:	003fe606 	br	10024388 <__register_exitproc+0x10>
100243f0:	11006317 	ldw	r4,396(r2)
100243f4:	2252b03a 	or	r9,r4,r9
100243f8:	12406315 	stw	r9,396(r2)
100243fc:	003ff106 	br	100243c4 <__register_exitproc+0x4c>
10024400:	00bfffc4 	movi	r2,-1
10024404:	f800283a 	ret

10024408 <__call_exitprocs>:
10024408:	defff704 	addi	sp,sp,-36
1002440c:	008400f4 	movhi	r2,4099
10024410:	ddc00715 	stw	r23,28(sp)
10024414:	15e15817 	ldw	r23,-31392(r2)
10024418:	dd400515 	stw	r21,20(sp)
1002441c:	dd000415 	stw	r20,16(sp)
10024420:	dcc00315 	stw	r19,12(sp)
10024424:	dfc00815 	stw	ra,32(sp)
10024428:	dd800615 	stw	r22,24(sp)
1002442c:	dc800215 	stw	r18,8(sp)
10024430:	dc400115 	stw	r17,4(sp)
10024434:	dc000015 	stw	r16,0(sp)
10024438:	2029883a 	mov	r20,r4
1002443c:	282b883a 	mov	r21,r5
10024440:	04c00044 	movi	r19,1
10024444:	bc805217 	ldw	r18,328(r23)
10024448:	90000d26 	beq	r18,zero,10024480 <__call_exitprocs+0x78>
1002444c:	94000117 	ldw	r16,4(r18)
10024450:	847fffc4 	addi	r17,r16,-1
10024454:	88000a16 	blt	r17,zero,10024480 <__call_exitprocs+0x78>
10024458:	84000044 	addi	r16,r16,1
1002445c:	802090ba 	slli	r16,r16,2
10024460:	9421883a 	add	r16,r18,r16
10024464:	a8001126 	beq	r21,zero,100244ac <__call_exitprocs+0xa4>
10024468:	80804017 	ldw	r2,256(r16)
1002446c:	15400f26 	beq	r2,r21,100244ac <__call_exitprocs+0xa4>
10024470:	8c7fffc4 	addi	r17,r17,-1
10024474:	88bfffd8 	cmpnei	r2,r17,-1
10024478:	843fff04 	addi	r16,r16,-4
1002447c:	103ff91e 	bne	r2,zero,10024464 <__call_exitprocs+0x5c>
10024480:	dfc00817 	ldw	ra,32(sp)
10024484:	ddc00717 	ldw	r23,28(sp)
10024488:	dd800617 	ldw	r22,24(sp)
1002448c:	dd400517 	ldw	r21,20(sp)
10024490:	dd000417 	ldw	r20,16(sp)
10024494:	dcc00317 	ldw	r19,12(sp)
10024498:	dc800217 	ldw	r18,8(sp)
1002449c:	dc400117 	ldw	r17,4(sp)
100244a0:	dc000017 	ldw	r16,0(sp)
100244a4:	dec00904 	addi	sp,sp,36
100244a8:	f800283a 	ret
100244ac:	90800117 	ldw	r2,4(r18)
100244b0:	81800017 	ldw	r6,0(r16)
100244b4:	10bfffc4 	addi	r2,r2,-1
100244b8:	14401526 	beq	r2,r17,10024510 <__call_exitprocs+0x108>
100244bc:	80000015 	stw	zero,0(r16)
100244c0:	303feb26 	beq	r6,zero,10024470 <__call_exitprocs+0x68>
100244c4:	9c46983a 	sll	r3,r19,r17
100244c8:	90806217 	ldw	r2,392(r18)
100244cc:	95800117 	ldw	r22,4(r18)
100244d0:	1884703a 	and	r2,r3,r2
100244d4:	1000061e 	bne	r2,zero,100244f0 <__call_exitprocs+0xe8>
100244d8:	303ee83a 	callr	r6
100244dc:	90800117 	ldw	r2,4(r18)
100244e0:	15bfd81e 	bne	r2,r22,10024444 <__call_exitprocs+0x3c>
100244e4:	b8805217 	ldw	r2,328(r23)
100244e8:	14bfe126 	beq	r2,r18,10024470 <__call_exitprocs+0x68>
100244ec:	003fd506 	br	10024444 <__call_exitprocs+0x3c>
100244f0:	90806317 	ldw	r2,396(r18)
100244f4:	81002017 	ldw	r4,128(r16)
100244f8:	1886703a 	and	r3,r3,r2
100244fc:	1800061e 	bne	r3,zero,10024518 <__call_exitprocs+0x110>
10024500:	200b883a 	mov	r5,r4
10024504:	a009883a 	mov	r4,r20
10024508:	303ee83a 	callr	r6
1002450c:	003ff306 	br	100244dc <__call_exitprocs+0xd4>
10024510:	94400115 	stw	r17,4(r18)
10024514:	003fea06 	br	100244c0 <__call_exitprocs+0xb8>
10024518:	303ee83a 	callr	r6
1002451c:	003fef06 	br	100244dc <__call_exitprocs+0xd4>
10024520:	0001ffff 	0x1ffff
10024524:	0001ffff 	0x1ffff
10024528:	0001ffff 	0x1ffff
1002452c:	0001ffff 	0x1ffff
10024530:	010d0bff 	0x10d0bff
10024534:	01010004 	movi	r4,1024
10024538:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
1002453c:	00000000 	call	10000000 <__alt_mem_sdram>
10024540:	01110bff 	0x1110bff
10024544:	01010004 	movi	r4,1024
10024548:	7f000105 	stb	fp,4(r15)
1002454c:	007d0000 	call	1007d000 <_gp+0x4cae0>
10024550:	00000000 	call	10000000 <__alt_mem_sdram>
10024554:	01883a00 	call	101883a0 <_gp+0x157e80>
10024558:	010d0bff 	0x10d0bff
1002455c:	01010002 	0x1010002
	...
10024568:	010d0bff 	0x10d0bff
1002456c:	01010004 	movi	r4,1024
10024570:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
10024574:	00000000 	call	10000000 <__alt_mem_sdram>
10024578:	0201ffff 	0x201ffff
1002457c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024580:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024584:	0201ffff 	0x201ffff
10024588:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002458c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024590:	0201ffff 	0x201ffff
10024594:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024598:	00000201 	jmpi	10000020 <__flash_exceptions_start>
1002459c:	0201ffff 	0x201ffff
100245a0:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100245a4:	00000201 	jmpi	10000020 <__flash_exceptions_start>
100245a8:	0201ffff 	0x201ffff
100245ac:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100245b0:	00000201 	jmpi	10000020 <__flash_exceptions_start>
100245b4:	0001ffff 	0x1ffff
100245b8:	0001ffff 	0x1ffff
100245bc:	0001ffff 	0x1ffff
100245c0:	0001ffff 	0x1ffff
100245c4:	0201ffff 	0x201ffff
100245c8:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100245cc:	00000201 	jmpi	10000020 <__flash_exceptions_start>
100245d0:	0001ffff 	0x1ffff
100245d4:	0001ffff 	0x1ffff
100245d8:	0001ffff 	0x1ffff
100245dc:	0201ffff 	0x201ffff
100245e0:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
100245e4:	010d0bff 	0x10d0bff
100245e8:	01010004 	movi	r4,1024
100245ec:	00000100 	call	10000010 <__alt_mem_sdram+0x10>
100245f0:	00000000 	call	10000000 <__alt_mem_sdram>
100245f4:	0201ffff 	0x201ffff
100245f8:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100245fc:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024600:	0201ffff 	0x201ffff
10024604:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024608:	00000201 	jmpi	10000020 <__flash_exceptions_start>
1002460c:	0201ffff 	0x201ffff
10024610:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024614:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024618:	0201ffff 	0x201ffff
1002461c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024620:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024624:	0201ffff 	0x201ffff
10024628:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002462c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024630:	0201ffff 	0x201ffff
10024634:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024638:	00000201 	jmpi	10000020 <__flash_exceptions_start>
1002463c:	0201ffff 	0x201ffff
10024640:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024644:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024648:	0201ffff 	0x201ffff
1002464c:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024650:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024654:	0201ffff 	0x201ffff
10024658:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002465c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024660:	0201ffff 	0x201ffff
10024664:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024668:	00000201 	jmpi	10000020 <__flash_exceptions_start>
1002466c:	0001ffff 	0x1ffff
10024670:	0001ffff 	0x1ffff
10024674:	010d0bff 	0x10d0bff
10024678:	01010002 	0x1010002
	...
10024684:	0201ffff 	0x201ffff
10024688:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
1002468c:	00000201 	jmpi	10000020 <__flash_exceptions_start>
10024690:	0201ffff 	0x201ffff
10024694:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
10024698:	00000201 	jmpi	10000020 <__flash_exceptions_start>
1002469c:	010d0bff 	0x10d0bff
100246a0:	01010002 	0x1010002
	...
100246ac:	0001ffff 	0x1ffff
100246b0:	0201ffff 	0x201ffff
100246b4:	ffff0000 	call	1ffff000 <__alt_data_end+0x7fff000>
100246b8:	00000201 	jmpi	10000020 <__flash_exceptions_start>
100246bc:	0201ffff 	0x201ffff
100246c0:	883a0000 	call	1883a000 <__alt_data_end+0x83a000>
100246c4:	10006030 	cmpltui	zero,r2,384
100246c8:	100094f8 	rdprs	zero,r2,595
100246cc:	10006060 	cmpeqi	zero,r2,385
